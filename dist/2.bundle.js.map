{"version":3,"sources":["webpack:///./src/components/burnup.jsx","webpack:///./src/components/chart.jsx","webpack:///./node_modules/c3/c3.js","webpack:///./node_modules/c3/node_modules/d3/d3.js"],"names":["Object","defineProperty","exports","value","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","Constructor","protoProps","staticProps","prototype","_react","__webpack_require__","_react2","_interopRequireDefault","_underscore2","_reactOcticons","_chart2","_database2","_routeUtils","_issueStore2","_loadable2","_moment2","obj","__esModule","default","_possibleConstructorReturn","self","call","ReferenceError","BurnupShell","_Component","_ref","_temp","_this","instance","TypeError","_classCallCheck","this","_len","arguments","args","Array","_key","__proto__","getPrototypeOf","apply","concat","renderLoaded","cards","getDay","dateStr","Math","floor","Date","parse","chunkType","getChunk","d","getFullYear","getMonth","Error","incrementChunk","chunk","month","createElement","startDate","sortBy","card","issue","createdAt","openedCards","closedCards","filter","closedAt","endDate","lastOpened","lastClosed","startDays","endDays","startChunk","endChunk","closedCount","openedCount","rows","currentChunk","closedToday","openedToday","cardIndex","_cardIndex","splice","push","unshift","chartData","x","colors","closed","total","new","ideal","types","options","axis","type","tick","format","index","year","monthsShort","formatChunk","culling","max","className","data","element","subClass","superClass","create","constructor","setPrototypeOf","_inherits","Component","startPolling","stopPolling","promise","fetchCards","getFilters","GraphIcon","size","_c2","_propTypes2","ChartComponent","chart","_generateChart","build","assign","bindto","generate","_destroyChart","destroy","nextProps","JSON","stringify","prevProps","id","style","styles","displayName","propTypes","string","object","isRequired","global","factory","module","c3_axis_fn","c3_axis_internal_fn","CLASS","chartLine","chartLines","chartBar","chartBars","chartText","chartTexts","chartArc","chartArcs","chartArcsTitle","chartArcsBackground","chartArcsGaugeUnit","chartArcsGaugeMax","chartArcsGaugeMin","selectedCircle","selectedCircles","eventRect","eventRects","eventRectsSingle","eventRectsMultiple","zoomRect","brush","focused","defocused","region","regions","title","tooltipContainer","tooltip","tooltipName","shape","shapes","line","lines","bar","bars","circle","circles","arc","arcLabelLine","arcs","area","areas","empty","text","texts","gaugeValue","grid","gridLines","xgrid","xgrids","xgridLine","xgridLines","xgridFocus","ygrid","ygrids","ygridLine","ygridLines","axisX","axisXLabel","axisY","axisYLabel","axisY2","axisY2Label","legendBackground","legendItem","legendItemEvent","legendItemTile","legendItemHidden","legendItemFocused","dragarea","EXPANDED","SELECTED","INCLUDED","_typeof","Symbol","iterator","classCallCheck","possibleConstructorReturn","isValue","v","isFunction","o","isArray","isString","isUndefined","isDefined","ceil10","ceil","asHalfPixel","n","diffDomain","isEmpty","keys","notEmpty","c3_chart_internal_fn","getOption","defaultValue","hasValue","dict","found","forEach","sanitise","str","replace","getPathBox","path","box","getBoundingClientRect","items","pathSegList","getItem","y","min","width","height","AxisInternal","component","params","d3","scale","linear","range","orient","innerTickSize","outerTickSize","withOuterTick","tickPadding","tickValues","tickFormat","tickArguments","tickOffset","tickCulling","tickCentered","tickTextCharSize","tickTextRotate","tickLength","generateAxis","selection","attr","scaleExtent","domain","start","stop","generateTicks","ticks","copyScale","newScale","copy","isCategory","textFormatted","formatted","updateRange","rangeExtent","updateTickTextCharSize","internal","h","w","select","each","undefined","transitionise","withoutTransition","transition","isVertical","tspanData","splitted","tickMultiline","splitTickText","tickMultilineMax","ellipsify","map","s","subtext","spaceIndex","textWidth","tickText","maxWidth","tickWidth","toString","split","charAt","substr","slice","ellipsified","remaining","available","padEnd","updateTickLength","lineY2","tickPosition","textY","rotate","textTransform","textTextAnchor","tspanDx","sin","PI","tspanDy","dy","g","tickTransform","tickX","tickY","scale0","__chart__","scale1","selectAll","tickEnter","enter","insert","tickExit","exit","remove","tickUpdate","append","lineUpdate","textUpdate","tspanUpdate","pathUpdate","rangeBand","dx","top","right","bottom","left","isCentered","tickInterval","interval","node","getTotalLength","Infinity","Axis","owner","fn","inherits","init","$$","config","main","axes","axis_x_inner","clipPathForXAxis","getTranslate","axis_x_show","axis_rotated","textAnchorForXAxisLabel","bind","axis_y_inner","clipPathForYAxis","axis_y_show","textAnchorForYAxisLabel","y2","axis_y2_show","textAnchorForY2AxisLabel","getXAxis","withoutRotateTickText","axisParams","isCategorized","axis_x_tick_multiline","Number","axis_x_tick_multilineMax","axis_x_tick_width","axis_x_tick_rotate","isTimeSeries","parseDate","axis_x_tick_centered","axis_x_tick_culling","updateXAxisTickValues","targets","axis_x_tick_fit","axis_x_tick_count","generateTickValues","mapTargetsToUniqueXs","xAxis","subXAxis","getYAxis","axis_y_tick_rotate","isTimeSeriesY","time","axis_y_tick_time_value","axis_y_tick_time_interval","getId","data_axes","getXAxisTickFormat","defaultAxisTimeFormat","categoryName","toFixed","axis_x_tick_format","date","axisTimeFormat","getTickValues","getXAxisTickValues","axis_x_tick_values","getYAxisTickValues","axis_y_tick_values","yAxis","getY2AxisTickValues","axis_y2_tick_values","y2Axis","getLabelOptionByAxisId","axisId","option","axis_y_label","axis_y2_label","axis_x_label","getLabelText","setLabelText","getLabelPosition","defaultPosition","position","isInner","indexOf","isOuter","isLeft","isCenter","isRight","isTop","isMiddle","isBottom","getXAxisLabelPosition","getYAxisLabelPosition","getY2AxisLabelPosition","getLabelPositionById","textForXAxisLabel","textForYAxisLabel","textForY2AxisLabel","xForAxisLabel","forHorizontal","dxForAxisLabel","textAnchorForAxisLabel","xForXAxisLabel","xForYAxisLabel","xForY2AxisLabel","dxForXAxisLabel","dxForYAxisLabel","dxForY2AxisLabel","dyForXAxisLabel","getMaxTickWidth","axis_x_height","dyForYAxisLabel","dyForY2AxisLabel","axis_y2_inner","withoutRecompute","targetsToShow","dummy","currentMaxTickWidths","svg","filterTargetsToShow","getYDomain","yOrient","axis_y_tick_format","yAxisTickValues","y2Orient","axis_y2_tick_format","y2AxisTickValues","getXDomain","xOrient","xAxisTickFormat","xAxisTickValues","classed","updateLabels","withTransition","getPadding","padding","domainLength","p","unit","convertPixelsToAxisPadding","pixels","values","tickCount","forTimeSeries","targetCount","end","count","tickValue","sort","a","b","generateTransitions","duration","axisSubX","subx","redraw","transitions","isHidden","c3_chart_fn","c3","version","componentKey","Chart","ChartInternal","loadConfig","beforeInit","afterInit","bindThis","argThis","api","window","getDefaultConfig","cache","initParams","data_url","convertUrlToData","data_mimeType","data_headers","data_keys","initWithData","data_json","convertJsonToData","data_rows","convertRowsToData","data_columns","convertColumnsToData","clipId","clipIdForXAxis","clipIdForYAxis","clipIdForGrid","clipIdForSubchart","clipPath","getClipPath","clipPathForGrid","clipPathForSubchart","dragStart","dragging","flowing","cancelClick","mouseover","transiting","color","generateColor","levelColor","generateLevelColor","dataTimeFormat","data_xLocaltime","utc","axis_x_localtime","multi","getMilliseconds","getSeconds","getMinutes","getHours","getDate","hiddenTargetIds","hiddenLegendIds","focusedTargetIds","defocusedTargetIds","subXOrient","isLegendRight","legend_position","isLegendInset","isLegendTop","legend_inset_anchor","isLegendLeft","legendStep","legendItemWidth","legendItemHeight","rotated_padding_left","rotated_padding_right","rotated_padding_top","withoutFadeIn","intervalForObserveInserted","initChartElements","initBar","initLine","initArc","initGauge","initText","defs","binding","initPie","initBrush","initZoom","selectChart","document","observeInserted","html","xs","convertDataToTargets","data_filter","data_hide","addHiddenTargetIds","mapToIds","legend_hide","addHiddenLegendIds","updateSizes","updateScales","extent","subX","subY","subY2","orgXDomain","zoom_enabled","zoom","on","onmouseover","onmouseout","svg_classname","clipChart","appendClip","clipXAxis","clipYAxis","clipGrid","clipSubchart","updateSvgSize","initSubchart","initTooltip","initLegend","initTitle","initRegion","initGrid","grid_lines_front","initGridLines","initEventRect","zoom_privileged","axis_x_extent","getDefaultExtent","updateTargets","updateDimension","oninit","withTransform","withUpdateXDomain","withUpdateOrgXDomain","withTransitionForAxis","bindResize","smoothLines","el","x1","x2","y1","legendHeight","legend","getLegendHeight","legendWidth","getLegendWidth","legendHeightForBottom","hasArc","hasArcType","xAxisHeight","getHorizontalAxisHeight","subchartHeight","subchart_show","subchart_size_height","currentWidth","getCurrentWidth","currentHeight","getCurrentHeight","margin","getCurrentPaddingTop","getCurrentPaddingRight","getCurrentPaddingBottom","getCurrentPaddingLeft","margin2","NaN","margin3","updateSizeForLegend","width2","height2","arcWidth","arcHeight","hasType","gauge_fullCircle","getGaugeLabelHeight","updateRadius","radiusExpanded","updateTargetsForText","updateTargetsForBar","updateTargetsForLine","updateTargetsForArc","updateTargetsForSubchart","showTargets","isTargetToShow","transition_duration","withY","withSubchart","withTransitionForExit","withTrimXDomain","withLegend","withEventRect","withDimension","withUpdateXAxis","drawArea","drawBar","drawLine","xForText","yForText","durationForExit","durationForAxis","waitForDraw","flow","intervalForCulling","xDomainForZoom","cx","cy","areaIndices","getShapeIndices","isAreaType","barIndices","isBarType","lineIndices","isLineType","hideAxis","xv","legend_show","updateLegend","updateXDomain","zoom_rescale","orgDomain","axis_y_tick_count","axis_y2_tick_count","axis_x_tick_culling_max","e","generateDrawArea","generateDrawBar","generateDrawLine","generateXYForText","updateXgridFocus","data_empty_label_text","updateGrid","updateRegion","updateBar","updateLine","updateArea","updateCircle","hasDataLabel","updateText","redrawTitle","redrawArc","redrawSubchart","interaction_enabled","redrawEventRect","updateZoom","updateCircleY","circleY","circleX","generateFlow","isTabVisible","transitionsToWait","redrawBar","redrawLine","redrawArea","redrawCircle","redrawText","redrawRegion","redrawGrid","generateWait","t","add","onrendered","updateAndRedraw","withTransitionForTransform","transformAll","redrawWithoutRescale","axis_x_type","isCustomX","data_x","data_xs","axis_y_type","initialOpacity","initialOpacityForCircle","opacityForCircle","opacity","point_show","isScatterType","opacityForText","xx","axis_x_categories","yv","yScale","subxx","transformMain","transformContext","transformLegend","getXAxisClipX","getXAxisClipY","getXAxisClipWidth","getXAxisClipHeight","getYAxisClipX","getYAxisClipY","getYAxisClipWidth","getYAxisClipHeight","withoutAxis","observer","MutationObserver","mutations","mutation","previousSibling","disconnect","setInterval","parentNode","clearInterval","update","observe","attributes","childList","characterData","console","error","resizeFunction","generateResize","onresize","resize_auto","resizeTimeout","clearTimeout","setTimeout","flush","onresized","resizeIfElementDisplayed","offsetParent","attachEvent","addEventListener","wrapper","resizeFunctions","callResizeFunctions","f","endall","callback","timer","done","parsedDate","data_xFormat","isNaN","hidden","mozHidden","msHidden","webkitHidden","Function","oThis","aArgs","fToBind","fNOP","fBound","SVGPathSeg","typeAsLetter","owningPathSegList","pathSegType","pathSegTypeAsLetter","_owningPathSegList","classname","PATHSEG_UNKNOWN","PATHSEG_CLOSEPATH","PATHSEG_MOVETO_ABS","PATHSEG_MOVETO_REL","PATHSEG_LINETO_ABS","PATHSEG_LINETO_REL","PATHSEG_CURVETO_CUBIC_ABS","PATHSEG_CURVETO_CUBIC_REL","PATHSEG_CURVETO_QUADRATIC_ABS","PATHSEG_CURVETO_QUADRATIC_REL","PATHSEG_ARC_ABS","PATHSEG_ARC_REL","PATHSEG_LINETO_HORIZONTAL_ABS","PATHSEG_LINETO_HORIZONTAL_REL","PATHSEG_LINETO_VERTICAL_ABS","PATHSEG_LINETO_VERTICAL_REL","PATHSEG_CURVETO_CUBIC_SMOOTH_ABS","PATHSEG_CURVETO_CUBIC_SMOOTH_REL","PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS","PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL","_segmentChanged","segmentChanged","SVGPathSegClosePath","_asPathString","clone","SVGPathSegMovetoAbs","_x","_y","get","set","SVGPathSegMovetoRel","SVGPathSegLinetoAbs","SVGPathSegLinetoRel","SVGPathSegCurvetoCubicAbs","_x1","_y1","_x2","_y2","SVGPathSegCurvetoCubicRel","SVGPathSegCurvetoQuadraticAbs","SVGPathSegCurvetoQuadraticRel","SVGPathSegArcAbs","r1","r2","angle","largeArcFlag","sweepFlag","_r1","_r2","_angle","_largeArcFlag","_sweepFlag","SVGPathSegArcRel","SVGPathSegLinetoHorizontalAbs","SVGPathSegLinetoHorizontalRel","SVGPathSegLinetoVerticalAbs","SVGPathSegLinetoVerticalRel","SVGPathSegCurvetoCubicSmoothAbs","SVGPathSegCurvetoCubicSmoothRel","SVGPathSegCurvetoQuadraticSmoothAbs","SVGPathSegCurvetoQuadraticSmoothRel","SVGPathElement","createSVGPathSegClosePath","createSVGPathSegMovetoAbs","createSVGPathSegMovetoRel","createSVGPathSegLinetoAbs","createSVGPathSegLinetoRel","createSVGPathSegCurvetoCubicAbs","createSVGPathSegCurvetoCubicRel","createSVGPathSegCurvetoQuadraticAbs","createSVGPathSegCurvetoQuadraticRel","createSVGPathSegArcAbs","createSVGPathSegArcRel","createSVGPathSegLinetoHorizontalAbs","createSVGPathSegLinetoHorizontalRel","createSVGPathSegLinetoVerticalAbs","createSVGPathSegLinetoVerticalRel","createSVGPathSegCurvetoCubicSmoothAbs","createSVGPathSegCurvetoCubicSmoothRel","createSVGPathSegCurvetoQuadraticSmoothAbs","createSVGPathSegCurvetoQuadraticSmoothRel","getPathSegAtLength","distance","isFinite","measurementElement","createElementNS","setAttribute","getAttribute","lastPathSegment","numberOfItems","removeItem","SVGPathSegList","pathElement","_pathElement","_list","_parsePath","_mutationObserverConfig","attributeFilter","_pathElementMutationObserver","_updateListFromPathMutations","_checkPathSynchronizedToList","_pathSegList","takeRecords","mutationRecords","hasPathMutations","record","attributeName","_writeListToPath","_pathSegArrayAsString","pathSeg","clear","initialize","newItem","_checkValidIndex","insertItemBefore","replaceItem","item","appendItem","pathSegArray","first","Builder","appendSegment","Source","_string","_currentIndex","_endIndex","_previousCommand","_skipOptionalSpaces","_isCurrentSpace","character","_skipOptionalSpacesOrDelimiter","hasMoreData","peekSegmentType","lookahead","_pathSegTypeFromChar","_nextCommandHelper","previousCommand","initialCommandIsMoveTo","command","_parseNumber","exponent","integer","frac","decimal","sign","expsign","startIndex","startIntPartIndex","scanIntPartIndex","multiplier","number","pow","_parseArcFlag","flag","flagChar","parseSegment","points","arcAngle","arcLarge","arcSweep","builder","source","String","targetLength","padString","repeat","labels","axis_x_max","axis_y_max","axis_y2_max","axis_x_min","axis_y_min","axis_y2_min","category","categories","resize","size_width","size_height","detachEvent","removeEventListener","targetIds","shown","targetId","names","clearLegendItemTextBoxCache","updateDataAttributes","baseTarget","baseValue","diff","to","notfoundIds","orgDataCount","getMaxDataCount","tail","json","columns","j","getOtherTargetX","missing","translateX","scaleX","transform","flowIndex","flowLength","flowStart","getValueOnIndex","flowEnd","durationForFlow","wait","mainRegion","mainText","mainBar","mainLine","mainArea","mainCircle","updateXGrid","hideXGridFocus","ease","isRegionOnX","xgridAttr","regionX","regionWidth","focus","candidates","mapToTargetIds","selectorTargets","revert","defocus","expandArc","toggleFocusLegend","unexpandArc","showLegend","isLegendToShow","selectorLegends","grids","grid_x_lines","removeGridLines","grid_y_lines","groups","data_groups","show","hide","hideLegend","load","addXs","classes","data_classes","data_colors","hasCaches","cacheIds","getCaches","unload","loadFromArgs","ids","c","selected","merge","getTargetSelectorSuffix","__data__","indices","resetOther","data_selection_enabled","toggle","getToggle","isTargetId","data_selection_grouped","isTargetIndex","isSelected","data_selection_isselectable","unselect","removeHiddenTargetIds","that","mouse","isMultipleX","getYScale","getIndexByX","dispatchEvent","tooltip_onshow","tooltip_onhide","transformTo","optionsForRedraw","setTargetType","updateTargetX","updateTargetXs","zoom_onzoom","enable","enabled","unzoom","zoom_x_max","zoom_x_min","pie","layout","reduce","getOrderFunction","gauge_width","donut_width","gaugeArcWidth","gauge_arcs_minWidth","radius","innerRadiusRatio","innerRadius","updateArc","svgArc","getSvgArc","svgArcExpanded","getSvgArcExpanded","svgArcExpandedSub","updateAngle","gMin","gMax","gTic","gValue","startAngle","endAngle","isGaugeType","gauge_min","gauge_max","gauge_startingAngle","hasGaugeType","singleArcWidth","outerRadius","newArc","withoutUpdate","updated","centroid","rate","expandWidth","getArc","force","isArcType","transformForArcLabel","ratio","translate","hasGauge","sqrt","donut_label_ratio","pie_label_ratio","cos","abs","getArcRatio","whole","convertToArcData","addName","textForArcLabel","shouldShowArcLabel","meetsArcLabelThreshold","getArcLabelFormat","defaultArcValueFormat","textForGaugeMinMax","isMax","getGaugeLabelExtents","shouldExpand","expandDuration","isDonutType","donut_expand_duration","gauge_expand_duration","isPieType","pie_expand_duration","donut_expand","gauge_expand","pie_expand","shouldShow","donut_label_show","pie_label_show","donut_label_threshold","pie_label_threshold","pie_label_format","gauge_label_format","donut_label_format","gauge_label_extents","getArcTitle","donut_title","mainPieEnter","classChartArc","classArcs","classFocus","mainArc","backgroundArc","mainArcLabelLine","arcData","classArc","_current","color_pattern","gauge_labelLine_show","lineLength","innerLineLength","lineAngle","arcInnerRadius","linePositioningAngle","data_onmouseover","selectedData","showTooltip","revertLegend","hideTooltip","data_onmouseout","toggleShape","data_onclick","attrTween","interpolate","interpolated","round","d1","gauge_label_show","gauge_units","addCache","cloneTarget","generateClass","prefix","classText","classTexts","classShape","classShapes","classLine","classLines","classCircle","classCircles","classBar","classBars","classArea","classAreas","classRegion","classEvent","classTarget","additionalClassSuffix","additionalClass","classFocused","classDefocused","classChartText","classChartLine","classChartBar","selectorTarget","selectorLegend","navigator","appVersion","toLowerCase","URL","parent","getAxisClipX","getAxisClipY","getAxisClipWidth","getAxisClipHeight","pattern","category10","data_color","threshold","color_threshold","asValue","padding_left","padding_right","padding_top","padding_bottom","zoom_extent","zoom_onzoomstart","zoom_onzoomend","interaction_brighten","data_xSort","data_idConverter","data_names","data_type","data_types","data_labels","data_order","data_regions","data_selection_multiple","data_selection_draggable","data_onselected","data_onunselected","subchart_axis_x_show","subchart_onbrush","legend_inset_x","legend_inset_y","legend_inset_step","legend_item_onclick","legend_item_onmouseover","legend_item_onmouseout","legend_equally","legend_padding","legend_item_tile_width","legend_item_tile_height","axis_x_tick_outer","axis_x_padding","axis_y_inverted","axis_y_center","axis_y_tick_outer","axis_y_padding","axis_y_default","axis_y2_inverted","axis_y2_center","axis_y2_tick_outer","axis_y2_padding","axis_y2_default","grid_x_show","grid_x_type","grid_y_show","grid_y_ticks","grid_focus_show","point_r","point_sensitivity","point_focus_expand_enabled","point_focus_expand_r","point_select_r","line_connectNull","line_step_type","bar_width","bar_width_ratio","bar_width_max","bar_zerobased","bar_space","area_zerobased","area_above","spline_interpolation_type","tooltip_show","tooltip_grouped","tooltip_order","tooltip_format_title","tooltip_format_name","tooltip_format_value","tooltip_position","tooltip_contents","defaultTitleFormat","defaultValueFormat","getTooltipContent","tooltip_init_show","tooltip_init_x","tooltip_init_position","title_text","title_padding","title_position","additionalConfig","read","this_config","find","shift","url","mimeType","headers","req","xhr","header","dataResponse","response","responseText","responseURL","status","statusText","convertTsvToData","convertCsvToData","convertXsvToData","xsv","parser","parseRows","csv","tsv","targetKeys","new_rows","new_row","findValueInJson","pathArray","k","newRows","newRow","appendXs","isNotX","isX","xKey","getXKey","rawX","generateTargetX","getOtherTargetXs","getXValuesOfXKey","convertedId","id_org","v1","v2","hasNegativeValue","hasNegativeValueInTargets","hasPositiveValue","hasPositiveValueInTargets","xValues","filterByX","getXValue","idsForX","hasMultipleX","name","valueOnIndex","updateXs","getPrevX","getNextX","getMaxDataCountTarget","maxTarget","getEdgeX","hasTarget","removeHiddenLegendIds","getValuesAsIdKeyed","ys","checkValueInTargets","checker","isOrderDesc","isOrderAsc","orderAsc","orderDesc","t1","t2","reducer","t1Sum","t2Sum","order","orderTargets","fct","reverse","filterRemoveNull","filterByXDomain","xDomain","getDataLabelLength","lengths","dataLabelFormat","isNoneArc","isArc","findSameXOfValues","targetX","sames","findClosestFromTargets","pos","findClosest","closest","minDist","isWithinBar","dist","xIndex","yIndex","convertValuesToStep","converted","attrs","current","getYDomainMin","baseId","idsInGroup","getYDomainMax","yDomainAbs","isAllPositive","isAllNegative","targetsByAxisId","yTargets","yMin","yMax","yDomainMin","yDomainMax","center","isZeroBased","isInverted","showHorizontalDataLabel","showVerticalDataLabel","getXDomainMin","getXDomainMax","getXDomainPadding","maxDataCount","paddingLeft","paddingRight","firstX","lastX","getTime","withTrim","updateScaleExtent","trimXDomain","zoomDomain","getZoomDomain","drag","sx","sy","mx","my","minX","maxX","minY","maxY","altDomain","_w","_h","isIncluded","isWithin","togglePoint","togglePath","dragstart","dragend","getYFormat","forArc","formatForY","yFormat","formatForY2","y2Format","defaultFormat","xgridData","generateGridData","updateYGrid","gridValues","gridTextAnchor","gridTextDx","xGridTextX","yGridTextX","showXGridFocus","dataToShow","focusEl","firstYear","lastYear","gridData","tickNum","getGridFilterToRemove","param","forX","toRemove","toShow","eventRectUpdate","maxDataCountTarget","generateEventRectsForMultipleXs","updateEventRect","datum","generateEventRectsForSingleX","rectW","rectX","getEventRectWidth","prevX","nextX","thisX","eventRectEnter","expandCircles","expandBars","unexpandCircles","unexpandBars","isStepType","isWithinShape","behavior","origin","mouseout","selector","event","createEvent","initMouseEvent","legendItemTextBox","legendHasRendered","updateLegendWithDefaults","insetLegendPosition","updateLegendStep","step","updateLegendItemWidth","updateLegendItemHeight","opacityForLegend","opacityForUnfocusedLegend","xForLegend","xForLegendText","xForLegendRect","yForLegend","yForLegendText","yForLegendRect","x1ForLegendTile","x2ForLegendTile","yForLegendTile","l","rects","tiles","background","paddingTop","maxHeight","posMin","tileWidth","totalLength","offsets","widths","heights","margins","steps","updatePositions","textElement","maxLength","reset","isLast","getTextRect","textContent","getTextBox","itemWidth","itemHeight","itemLength","areaLength","updateValues","withoutStep","altKey","parentData","regionY","regionHeight","getScale","forTimeseries","getX","offset","_scale","raw","getY","getSubYScale","forInit","xMin","xMax","subXMin","subXMax","subYMin","subYMax","selectPoint","r","pointSelectR","unselectPoint","selectPath","rgb","brighter","unselectPath","nodeName","barData","random","getBarW","barTargetsNum","getBars","isSub","getPoints","generateGetBarPoints","indexX","indexY","__max__","barW","barX","getShapeX","barY","getShapeY","barOffset","getShapeOffset","barSpaceOffset","y0","posX","posY","seg0","seg1","ex","ey","typeFilter","targetsNum","isWithinStep","isWithinCircle","getInterpolate","interpolation","isInterpolationType","isSplineType","mainLineEnter","lineData","generateGetLinePoints","yScaleGetter","xValue","yValue","defined","x0","lineWithRegions","lineTargetsNum","lineOffset","_regions","sWithRegion","xp","yp","diffx2","xOffset","isWithinRegions","generateM","d0","x_diff","xv0","xv1","orgAreaOpacity","generateGetAreaPoints","value0","getAreaBaseValue","value1","areaTargetsNum","areaOffset","lineOrScatterData","pointR","getCircles","pointExpandedR","d3_this","getParentWidth","getParentHeight","getTitlePadding","getAxisWidthByAxisId","legendWidthOnRight","getParentRectValue","tagName","offsetWidth","getSvgLeft","hasLeftAxisRect","leftAxisClass","leftAxis","svgRect","chartRect","svgLeft","redrawForBrush","context","visibility","contextLineEnter","updateBarForSubchart","contextBar","redrawBarForSubchart","drawBarOnSub","updateLineForSubchart","contextLine","redrawLineForSubchart","drawLineOnSub","updateAreaForSubchart","contextArea","redrawAreaForSubchart","drawAreaOnSub","barOrLineData","forFlow","cls","rect","font","getAreaPoints","getBarPoints","getLinePoints","getter","getXForText","getYForText","xPos","yPos","isSafari","isChrome","xForTitle","yForTitle","getTooltipSortFunction","valueOf","sortFunction","bgcolor","titleFormat","nameFormat","valueFormat","tooltipSortFunction","tooltipPosition","tWidth","tHeight","tooltipLeft","tooltipRight","tooltipTop","chartRight","positionFunction","property","has","ua","userAgent","startEvent","sourceEvent","redrawForZoom","clientX","clientY","orgScaleExtent","z","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_RESULT__","d3_arraySlice","d3_array","list","d3_document","d3_documentElement","ownerDocument","documentElement","d3_window","defaultView","childNodes","nodeType","array","now","setProperty","d3_element_prototype","Element","d3_element_setAttribute","d3_element_setAttributeNS","setAttributeNS","d3_style_prototype","CSSStyleDeclaration","d3_style_setProperty","space","local","priority","d3_ascending","d3_number","d3_numeric","d3_bisector","compare","lo","hi","mid","ascending","descending","sum","mean","quantile","H","median","numbers","variance","m","deviation","d3_bisect","d3_transposeLength","bisectLeft","bisect","bisectRight","bisector","shuffle","i0","i1","permute","indexes","permutes","pairs","p1","transpose","matrix","row","zip","entries","arrays","merged","d3_class","ctor","properties","d3_Map","_","d3_range_integerScale","d3_map_proto","d3_map_zero","d3_map_escape","d3_map_unescape","d3_map_has","d3_map_remove","d3_map_keys","d3_map_size","d3_map_empty","d3_Set","d3_identity","d3_rebind","method","d3_vendorSymbol","toUpperCase","d3_vendorPrefixes","prefixName","nest","sortValues","rollup","sortKeys","mapType","depth","keyValue","setter","valuesByKey","sortKey","keyMap","rebind","d3_noop","d3_dispatch","d3_dispatch_event","dispatch","listeners","listenerByName","listener","d3_eventPreventDefault","preventDefault","d3_eventSource","d3_eventDispatch","of","thiz","argumentz","e1","e0","hasOwnProperty","requote","d3_requote_re","d3_subclass","d3_selection","d3_selectionPrototype","d3_select","querySelector","d3_selectAll","querySelectorAll","d3_selectMatches","d3_selectMatcher","matches","Sizzle","matchesSelector","d3_selection_selector","d3_selection_selectorAll","subgroup","subnode","group","subgroups","d3_nsXhtml","d3_nsPrefix","xhtml","xlink","xml","xmlns","d3_selection_attr","ns","qualify","removeAttributeNS","removeAttribute","d3_collapse","trim","d3_selection_classedRe","RegExp","d3_selection_classes","d3_selection_classed","d3_selection_classedName","re","classList","lastIndex","test","d3_selection_style","removeProperty","d3_selection_property","d3_selection_creator","namespace","namespaceURI","d3_selectionRemove","removeChild","d3_selection_dataNode","d3_selection_filter","d3_selection_each","d3_selection_enter","d3_selection_enterPrototype","getAttributeNS","contains","getComputedStyle","getPropertyValue","innerHTML","appendChild","before","insertBefore","groupData","nodeData","n0","updateNodes","enterNodes","exitNodes","nodeByKeyValue","keyValues","next","nextSibling","comparator","d3_selection_on","capture","wrap","d3_selection_onListener","d3_selection_onFilters","onRemove","$","d3_selection_onFilter","match","upgroup","j0","d3_selection_enterInsertBefore","nodes","mouseenter","mouseleave","related","relatedTarget","compareDocumentPosition","d3_event_dragSelect","d3_event_dragId","d3_event_dragSuppress","click","suppressClick","off","container","d3_mousePoint","d3_mouse_bug44083","changedTouches","ownerSVGElement","createSVGPoint","point","scrollX","scrollY","ctm","border","getScreenCTM","pageX","pageY","matrixTransform","inverse","clientLeft","clientTop","d3_behavior_dragTouchId","identifier","touch","touches","mousedown","touchstart","subject","move","dragOffset","correspondingElement","dragged","dragId","dragName","dragSubject","position1","position0","dragRestore","ε","ε2","π","τ","τε","halfπ","d3_radians","d3_degrees","d3_sgn","d3_cross2d","d3_acos","acos","d3_asin","asin","d3_cosh","exp","d3_haversin","ρ","SQRT2","interpolateZoom","p0","S","ux0","uy0","w0","ux1","uy1","w1","d2","log","b0","b1","r0","coshr0","u","d3_tanh","d3_sinh","translate0","center0","mousewheelTimer","touchtime","view","d3_behavior_zoomInfinity","zooming","mousemove","mouseup","mousedowned","d3_behavior_zoomWheel","mousewheeled","dblclicked","touchstarted","location","scaleTo","translateTo","zoomTo","rescale","invert","zoomstarted","zoomed","zoomended","location0","d3_selection_interrupt","locations0","distance0","zoomName","touchmove","touchend","relocate","started","moved","ended","changed","LN2","q","l0","l1","distance1","d3_behavior_zoomDelta","shiftKey","deltaY","deltaMode","wheelDelta","detail","view1","d3_transitionInheritId","tween","d3_color","d3_hsl","d3_rgb_parse","d3_rgb_hsl","hsl","d3_hslPrototype","d3_hsl_rgb","m1","m2","vv","d3_rgb","d3_hcl","d3_lab_hcl","d3_lab","d3_rgb_lab","darker","hcl","d3_hclPrototype","d3_hcl_lab","d3_lab_K","lab","d3_lab_X","d3_lab_Y","d3_lab_Z","d3_labPrototype","d3_lab_rgb","d3_xyz_rgb","d3_lab_xyz","atan2","d3_xyz_lab","d3_rgbNumber","d3_rgbString","d3_rgbPrototype","d3_rgb_hex","exec","parseFloat","d3_rgb_parseNumber","d3_rgb_names","parseInt","d3_rgb_xyz","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","d3_functor","d3_xhrType","d3_xhr","request","XMLHttpRequest","responseType","respond","result","d3_xhrHasResponse","XDomainRequest","onload","onerror","onreadystatechange","readyState","onprogress","progress","send","open","setRequestHeader","overrideMimeType","beforesend","abort","d3_xhr_fixCallback","functor","dsv","delimiter","reFormat","delimiterCode","charCodeAt","typedResponse","formatRow","formatValue","join","eol","EOL","EOF","N","I","token","formatRows","fieldSet","fields","field","d3_timer_queueHead","d3_timer_queueTail","d3_timer_interval","d3_timer_timeout","d3_timer_frame","d3_timer","delay","then","d3_timer_step","d3_timer_mark","d3_timer_sweep","t0","d3_format_precision","LN10","d3_formatPrefixes","symbol","formatPrefix","precision","d3_format_re","d3_format_types","fromCharCode","X","toPrecision","toExponential","d3_format_typeDefault","d3_time","d3_date","d3_date_utc","UTC","getUTCDate","getUTCDay","getUTCFullYear","getUTCHours","getUTCMilliseconds","getUTCMinutes","getUTCMonth","getUTCSeconds","getTimezoneOffset","setDate","d3_time_prototype","setUTCDate","setDay","setUTCDay","setFullYear","setUTCFullYear","setHours","setUTCHours","setMilliseconds","setUTCMilliseconds","setMinutes","setUTCMinutes","setMonth","setUTCMonth","setSeconds","setUTCSeconds","setTime","d3_time_interval","dt","times","d3_time_interval_utc","day","years","days","dayOfYear","week","sunday","weeks","weekOfYear","sundayOfYear","d3_time_formatPads","-","0","d3_time_numberRe","d3_time_percentRe","d3_time_formatPad","fill","d3_time_formatRe","d3_time_formatLookup","d3_time_parseWeekdayNumber","d3_time_parseWeekNumberSunday","U","d3_time_parseWeekNumberMonday","W","d3_time_parseFullYear","d3_time_parseYear","d3_time_expandYear","d3_time_parseZone","Z","d3_time_parseMonthNumber","d3_time_parseDay","d3_time_parseDayOfYear","d3_time_parseHour24","d3_time_parseMinutes","M","d3_time_parseSeconds","d3_time_parseMilliseconds","L","d3_time_zone","zs","zh","zm","d3_time_parseLiteralPercent","d3_time_formatMulti","formats","locale","numberFormat","locale_decimal","locale_thousands","thousands","locale_grouping","grouping","locale_currency","currency","formatGroup","substring","specifier","align","zfill","comma","suffix","zcomma","fullSuffix","negative","after","lastIndexOf","d3_locale_numberFormat","timeFormat","locale_dateTime","dateTime","locale_date","locale_time","locale_periods","periods","locale_days","locale_shortDays","shortDays","locale_months","months","locale_shortMonths","shortMonths","d3_time_format","template","d3_time_formats","d3_time_parse","localZ","d3_time_parsers","d3_time_periodLookup","d3_time_dayRe","d3_time_dayLookup","d3_time_dayAbbrevRe","d3_time_dayAbbrevLookup","d3_time_monthRe","d3_time_monthLookup","d3_time_monthAbbrevRe","d3_time_monthAbbrevLookup","A","B","mondayOfYear","Y","%","d3_locale_timeFormat","d3_locale_enUS","d3_adder","geo","d3_adderSum","d3_adderTemp","bv","av","d3_geo_streamGeometry","geometry","d3_geo_streamGeometryType","stream","d3_geo_streamObjectType","Feature","feature","FeatureCollection","features","Sphere","sphere","Point","coordinates","MultiPoint","LineString","d3_geo_streamLine","MultiLineString","Polygon","d3_geo_streamPolygon","MultiPolygon","GeometryCollection","geometries","coordinate","lineStart","lineEnd","polygonStart","polygonEnd","d3_geo_areaSum","d3_geo_area","d3_geo_centroidW0","d3_geo_centroidW1","d3_geo_centroidX0","d3_geo_centroidY0","d3_geo_centroidZ0","d3_geo_centroidX1","d3_geo_centroidY1","d3_geo_centroidZ1","d3_geo_centroidX2","d3_geo_centroidY2","d3_geo_centroidZ2","d3_geo_areaRingSum","d3_geo_areaRingStart","λ00","φ00","λ0","cosφ0","sinφ0","nextPoint","λ","φ","dλ","sdλ","adλ","cosφ","sinφ","d3_geo_cartesian","spherical","d3_geo_cartesianDot","d3_geo_cartesianCross","d3_geo_cartesianAdd","d3_geo_cartesianScale","vector","d3_geo_cartesianNormalize","d3_geo_spherical","cartesian","d3_geo_sphericalEqual","bounds","φ0","λ1","φ1","λ_","λ__","φ__","dλSum","ranges","bound","ringPoint","ringStart","ringEnd","linePoint","normal","inflection","λi","antimeridian","φi","compareRanges","withinRange","best","d3_geo_centroid","d3_geo_centroidPoint","d3_geo_centroidLineStart","d3_geo_centroidLineEnd","d3_geo_centroidRingStart","d3_geo_centroidPointXYZ","z0","cz","d3_geo_compose","compose","d3_true","d3_geo_clipPolygon","segments","clipStartInside","clip","segment","d3_geo_clipPolygonIntersection","d3_geo_clipPolygonLinkCircular","entry","isSubject","other","d3_geo_clip","pointVisible","clipLine","clipStart","rotatedClipStart","pointRing","polygon","meridian","parallel","meridianNormal","polarAngle","winding","ring","point0","intersection","φarc","d3_geo_pointInPolygon","polygonStarted","d3_geo_clipSort","pointLine","buffer","d3_geo_clipBufferListener","ringListener","clean","ringSegments","pop","d3_geo_clipSegmentLength1","rejoin","d3_geo_clipAntimeridian","sλ0","sλ1","cosφ1","sinλ0_λ1","atan","d3_geo_clipAntimeridianIntersect","from","direction","d3_geom_clipLine","ax","ay","d3_geo_clipExtentMAX","d3_geo_clipExtent","x__","y__","v__","x_","y_","v_","listener_","bufferListener","wn","insidePolygon","inside","visible","a1","corner","comparePoints","ca","cb","d3_geo_conic","projectAt","d3_geo_projectionMutator","parallels","d3_geo_conicEqualArea","C","ρ0","forward","ρ0_y","clipExtent","output","valid","conicEqualArea","albers","albersUsa","lower48Point","alaskaPoint","hawaiiPoint","lower48","alaska","hawaii","pointStream","lower48Stream","alaskaStream","hawaiiStream","d3_geo_pathAreaSum","d3_geo_pathAreaPolygon","d3_geo_pathBoundsX0","d3_geo_pathBoundsY0","d3_geo_pathBoundsX1","d3_geo_pathBoundsY1","d3_geo_pathArea","d3_geo_pathAreaRingStart","x00","y00","d3_geo_pathBounds","d3_geo_pathBufferCircle","d3_geo_lengthSum","d3_geo_pathCentroid","d3_geo_pathCentroidPoint","d3_geo_pathCentroidLineStart","d3_geo_pathCentroidLineEnd","d3_geo_pathCentroidRingStart","d3_geo_resample","project","δ2","cosMinDistance","maxDepth","resample","a00","b00","c00","a0","c0","resampleLineTo","d3_geo_transformPoint","c1","φ2","λ2","dx2","dy2","dz","d3_geo_transform","d3_geo_projection","projectRotate","δx","δy","projectResample","δλ","δφ","δγ","preclip","postclip","clipAngle","projection","d3_geo_rotation","invalidate","d3_geo_projectionRadians","cr","smallRadius","notHemisphere","v0","v00","point2","point1","code","intersect","d3_geo_circleInterpolate","two","n1","n2","n2n2","n1n2","determinant","c2","n1xn2","uu","polar","q1","d3_geo_clipCircle","d3_geo_equirectangular","d3_geo_identityRotation","d3_geo_rotationλ","d3_geo_rotationφγ","d3_geo_forwardRotationλ","rotation","cosδφ","sinδφ","cosδγ","sinδγ","sr","d3_geo_circleAngle","d3_geo_graticuleX","d3_geo_graticuleY","d3_source","d3_target","projectStream","contextStream","cacheStream","pointRadius","d3_geo_pathProjectStream","pointCircle","pointLineStart","lineEndPolygon","moveTo","lineTo","closePath","methods","projectionMutator","equirectangular","Δλ","sinΔλ","cosΔλ","sinφ1","graticule","X1","X0","Y1","Y0","DX","DY","outline","majorExtent","minorExtent","majorStep","minorStep","greatArc","source_","target_","cy0","sy0","cy1","sy1","kx0","ky0","kx1","ky1","d3_geo_interpolate","d3_geo_length","d3_geo_azimuthal","azimuthal","cosλ","sinc","cosc","d3_geo_azimuthalEqualArea","cosλcosφ","azimuthalEqualArea","d3_geo_azimuthalEquidistant","d3_geo_conicConformal","F","d3_geo_mercator","d3_geo_conicEquidistant","G","azimuthalEquidistant","conicConformal","conicEquidistant","d3_geo_gnomonic","d3_geo_mercatorProjection","clipAuto","gnomonic","mercator","d3_geo_orthographic","orthographic","d3_geo_stereographic","d3_geo_transverseMercator","d3_geom_pointX","d3_geom_pointY","d3_geom_hullUpper","hull","hs","d3_geom_hullOrder","stereographic","transverseMercator","geom","vertices","fx","fy","flippedPoints","upper","lower","skipLeft","skipRight","d3_geom_polygonPrototype","d3_geom_polygonInside","d3_geom_polygonIntersect","x3","x21","x43","y3","y21","y43","d3_geom_polygonClosed","input","d3_geom_voronoiEdges","d3_geom_voronoiCells","d3_geom_voronoiBeaches","d3_geom_voronoiFirstCircle","d3_geom_voronoiCircles","d3_geom_voronoiBeachPool","d3_geom_voronoiCirclePool","d3_geom_voronoiCreateBeach","site","beach","d3_geom_voronoiRedBlackNode","edge","d3_geom_voronoiDetachBeach","d3_geom_voronoiDetachCircle","d3_geom_voronoiRemoveBeach","vertex","previous","P","disappearing","lArc","rArc","iArc","nArcs","d3_geom_voronoiSetEdgeEnd","d3_geom_voronoiCreateEdge","d3_geom_voronoiAttachCircle","d3_geom_voronoiAddBeach","dxl","dxr","directrix","d3_geom_voronoiLeftBreakPoint","d3_geom_voronoiRightBreakPoint","R","lSite","bx","by","rSite","hb","hc","rfocx","rfocy","pby2","lfocx","lfocy","plby2","hl","aby2","d3_geom_voronoiCell","edges","d3_geom_voronoiHalfEdgeOrder","cSite","ha","d3_geom_voronoiConnectEdge","vb","fm","fb","va","lx","ly","rx","ry","d3_geom_voronoiEdge","d3_geom_voronoiHalfEdge","d3_geom_voronoiCreateBorderEdge","d3_geom_voronoiRedBlackTree","d3_geom_voronoiRedBlackRotateLeft","tree","d3_geom_voronoiRedBlackRotateRight","d3_geom_voronoiRedBlackFirst","d3_geom_voronoi","sites","bbox","d3_geom_voronoiVertexOrder","d3_geom_voronoiClipEdges","cell","iHalfEdge","halfEdges","nHalfEdges","cells","iCell","prepare","d3_geom_voronoiCloseCells","diagram","grandpa","uncle","sibling","voronoi","d3_geom_voronoiClipExtent","polygons","links","triangles","s0","s1","d3_geom_voronoiTriangleArea","d3_geom_quadtreeCompatX","d3_geom_quadtreeCompatY","d3_interpolateRgb","ar","ag","ab","br","bg","bb","d3_interpolateObject","d3_interpolate","d3_interpolateNumber","d3_interpolateString","am","bm","bs","bi","d3_interpolate_numberA","d3_interpolate_numberB","delaunay","quadtree","compat","x1_","y1_","x2_","y2_","leaf","nx","ny","insertChild","nPoint","xm","ym","below","root","visit","d3_geom_quadtreeVisit","children","closestPoint","minDistance2","distance2","d3_geom_quadtreeFind","interpolateRgb","interpolateObject","interpolateNumber","interpolateString","interpolators","d3_interpolateArray","na","nb","interpolateArray","d3_ease_default","d3_ease","poly","quad","d3_ease_quad","cubic","d3_ease_cubic","d3_ease_sin","d3_ease_exp","d3_ease_circle","elastic","back","bounce","d3_ease_bounce","d3_ease_mode","in","out","d3_ease_reverse","in-out","d3_ease_reflect","out-in","d3_ease_cubicInOut","t3","d3_interpolateRound","d3_transform","kx","d3_transformNormalize","kz","d3_transformDot","ky","d3_transformCombine","skew","d3_ease_clamp","interpolateHcl","ah","ac","al","bh","bc","bl","interpolateHsl","as","interpolateLab","aa","ba","interpolateRound","baseVal","consolidate","d3_transformIdentity","d3_interpolateTransformPop","d3_interpolateTransform","ta","tb","d3_interpolateTranslate","ra","rb","d3_interpolateRotate","wa","wb","d3_interpolateSkew","ka","kb","d3_interpolateScale","d3_uninterpolateNumber","d3_uninterpolateClamp","d3_layout_bundlePath","link","lca","aNodes","d3_layout_bundleAncestors","bNodes","aNode","bNode","sharedNode","d3_layout_bundleLeastCommonAncestor","ancestors","d3_layout_forceDragstart","fixed","d3_layout_forceDragend","d3_layout_forceMouseover","px","py","d3_layout_forceMouseout","interpolateTransform","bundle","paths","chord","chords","sortGroups","sortSubgroups","sortChords","relayout","groupSums","groupIndex","subgroupIndex","di","dj","subindex","resort","alpha","distances","strengths","charges","friction","linkDistance","d3_layout_forceLinkDistance","linkStrength","d3_layout_forceLinkStrength","charge","chargeDistance2","d3_layout_forceChargeDistance2","gravity","theta2","repulse","dw","dn","pointCharge","dragmove","resume","weight","d3_layout_forceAccumulate","chargeDistance","theta","neighbors","dimension","d3_layout_hierarchyRebind","hierarchy","d3_layout_hierarchyLinks","d3_layout_hierarchyVisitBefore","d3_layout_hierarchyVisitAfter","nodes2","d3_layout_hierarchyChildren","d3_layout_hierarchyValue","d3_layout_hierarchySort","child","stack","childs","revalue","partition","d3_layout_pieSortByValue","padAngle","da","pa","d3_layout_stackX","d3_layout_stackY","d3_layout_stackOut","d3_layout_stackOrderDefault","d3_layout_stackOffsetZero","series","orders","d3_layout_stackOrders","d3_layout_stackOffsets","inside-out","d3_layout_stackMaxIndex","sums","d3_layout_stackReduceSum","tops","bottoms","silhouette","wiggle","s2","s3","o0","expand","zero","d3_layout_stackSum","d3_layout_histogramBinSturges","d3_layout_histogramBinFixed","d3_layout_histogramRange","d3_layout_packSort","d3_layout_packInsert","_pack_next","_pack_prev","d3_layout_packSplice","d3_layout_packIntersects","dr","d3_layout_packSiblings","d3_layout_packLink","d3_layout_packPlace","isect","d3_layout_packUnlink","db","dc","d3_layout_treeSeparation","d3_layout_treeLeft","d3_layout_treeRight","d3_layout_treeMove","wm","wp","change","d3_layout_treeAncestor","vim","ancestor","d3_layout_treemapPadNull","d3_layout_treemapPad","d3_scaleExtent","d3_scaleRange","d3_scale_bilinear","uninterpolate","d3_scale_nice","nice","d3_scale_niceStep","d3_scale_niceIdentity","histogram","frequency","valuer","ranger","binner","bin","bins","thresholds","pack","d3_layout_packTransform","separation","nodeSize","root0","root1","node1","queue","wrapTree","firstWalk","secondWalk","sizeNode","tx","siblings","d3_layout_treeShift","midpoint","vip","vop","vom","sip","sop","sim","som","apportion","cluster","previousNode","d3_layout_clusterX","d3_layout_clusterY","d3_layout_clusterLeft","d3_layout_clusterRight","treemap","stickies","pad","sticky","mode","squarify","score","worst","stickify","rmax","rmin","padConstant","µ","σ","logNormal","bates","irwinHall","d3_scale_polylinear","d3_scale_linearRebind","d3_scale_linearNice","d3_scale_linearTickRange","span","err","d3_scale_linearTicks","d3_scale_linearTickFormat","d3_scale_linearPrecision","d3_scale_linearFormatSignificant","d3_scale_linearFormatPrecision","d3_scale_linear","clamp","rangeRound","d3_scale_log","base","positive","niced","d3_scale_logNiceNegative","d3_scale_logFormat","d3_scale_powPow","d3_scale_pow","powp","powb","ordinal","d3_scale_ordinal","xi","rangePoints","rangeRoundPoints","rangeBands","outerPadding","rangeRoundBands","d3_category10","category20","d3_category20","category20b","d3_category20b","category20c","d3_category20c","d3_zero","d3_scale_quantile","quantiles","invertExtent","quantize","d3_scale_quantize","d3_scale_threshold","identity","d3_scale_identity","d3_svg_arcInnerRadius","d3_svg_arcOuterRadius","cornerRadius","padRadius","d3_svg_arcAuto","d3_svg_arcStartAngle","d3_svg_arcEndAngle","d3_svg_arcPadAngle","cw","rc","circleSegment","rp","ap","d3_svg_arcSweep","h1","h0","rc1","rc0","oc","kc","lc","t30","d3_svg_arcCornerTangents","t12","t03","t21","x01","y01","ox","oy","D","cx0","cx1","dx0","dy0","dx1","dy1","d3_svg_line","d3_svg_lineLinear","interpolateKey","tension","d3_svg_lineInterpolators","linear-closed","d3_svg_lineLinearClosed","step-before","d3_svg_lineStepBefore","step-after","d3_svg_lineStepAfter","basis","d3_svg_lineBasis","basis-open","pi","d3_svg_lineDot4","d3_svg_lineBasisBezier3","d3_svg_lineBasisBezier","basis-closed","cardinal","d3_svg_lineHermite","d3_svg_lineCardinalTangents","cardinal-open","cardinal-closed","monotone","tangents","d3_svg_lineSlope","d3_svg_lineFiniteDifferences","d3_svg_lineMonotoneTangents","lp","p2","d3_svg_lineBasisBezier1","d3_svg_lineBasisBezier2","d3_svg_lineRadial","d3_svg_area","interpolateReverse","points0","points1","fx0","fy0","fx1","fy1","d3_svg_chordRadius","d3_svg_diagonalProjection","d3_svg_symbolSize","d3_svg_symbolType","d3_svg_symbolCircle","radial","equals","curve","diagonal","p3","projection_","d3_svg_diagonalRadialProjection","d3_svg_symbols","cross","diamond","d3_svg_symbolTan30","square","triangle-down","d3_svg_symbolSqrt3","triangle-up","symbolTypes","d3_transitionId","d3_transitionNamespace","d3_transitionInherit","d3_transitionNode","d3_transition","interrupt","d3_selection_interruptNS","lock","activeId","active","d3_transitionPrototype","d3_transition_tween","d3_transition_text","inherit","tweens","elapsed","cancelId","cancel","subnodes","nameNS","attrNull","attrNullNS","styleNull","styleTween","inheritId","id0","id1","tickFormat_","d3_svg_axisDefaultOrient","tickArguments_","tickSpacing","lineEnter","textEnter","d3_svg_axisX","d3_svg_axisY","d3_svg_axisOrients","tickSize","tickSubdivide","xExtentDomain","yExtentDomain","xExtent","yExtent","xClamp","yClamp","resizes","d3_svg_brushResizes","brushstart","d3_svg_brushCursor","gUpdate","backgroundUpdate","redrawX","redrawY","eventTarget","event_","resizing","resizingX","resizingY","keyCode","brushmove","brushend","move1","extent1","extent0","yi","nw","ne","se","sw","d3_time_formatUtc","d3_time_formatIso","d3_time_formatIsoNative","toISOString","d3_time_scale","tickMethod","d3_time_scaleSteps","d3_time_scaleMilliseconds","d3_time_scaleDate","skip","skipped","iso","second","seconds","minute","minutes","hour","timezone","hours","d3_time_scaleLocalMethods","d3_time_scaleLocalFormat","d3_time_scaleUtcMethods","d3_time_scaleUtcFormat","d3_json","d3_html","createRange","selectNode","body","createContextualFragment","responseXML"],"mappings":"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","file":"2.bundle.js","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _underscore = require('underscore');\n\nvar _underscore2 = _interopRequireDefault(_underscore);\n\nvar _reactOcticons = require('react-octicons');\n\nvar _chart = require('./chart');\n\nvar _chart2 = _interopRequireDefault(_chart);\n\nvar _database = require('../database');\n\nvar _database2 = _interopRequireDefault(_database);\n\nvar _routeUtils = require('../route-utils');\n\nvar _issueStore = require('../issue-store');\n\nvar _issueStore2 = _interopRequireDefault(_issueStore);\n\nvar _loadable = require('./loadable');\n\nvar _loadable2 = _interopRequireDefault(_loadable);\n\nvar _moment = require('moment');\n\nvar _moment2 = _interopRequireDefault(_moment);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar BurnupShell = function (_Component) {\n  _inherits(BurnupShell, _Component);\n\n  function BurnupShell() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, BurnupShell);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = BurnupShell.__proto__ || Object.getPrototypeOf(BurnupShell)).call.apply(_ref, [this].concat(args))), _this), _this.renderLoaded = function (cards) {\n      function getDay(dateStr) {\n        return Math.floor(Date.parse(dateStr) / 1000 / 60 / 60 / 24);\n      }\n\n      var chunkType = null;\n      function getChunk(dateStr) {\n        if (chunkType === 'day') {\n          return Math.floor(Date.parse(dateStr) / 1000 / 60 / 60 / 24);\n          // } else if (chunkType === 'week') {\n          //   return Math.floor(Date.parse(dateStr) / 1000 / 60 / 60 / 24 / 7);\n        } else if (chunkType === 'month') {\n          var d = new Date(dateStr);\n          return d.getFullYear() * 100 + d.getMonth();\n        } else if (chunkType === 'year') {\n          var _d = new Date(dateStr);\n          return _d.getFullYear();\n        } else {\n          throw new Error('BUG: Invalid date range chunk type');\n        }\n      }\n      function formatChunk(chunk) {\n        if (chunkType === 'day') {\n          var m = new _moment2.default(chunk * 1000 * 60 * 60 * 24);\n          return m.format('MMM DD');\n          // } else if (chunkType === 'week') {\n          //   return Math.floor(Date.parse(dateStr) / 1000 / 60 / 60 / 24 / 7);\n        } else if (chunkType === 'month') {\n          var month = chunk % 100;\n          if (month === 0) {\n            var year = chunk / 100 % 100; // only use the last 2 digits of the year\n            return _moment2.default.monthsShort(month) + ' \\'' + year; // moment months are 0-indexed\n          } else {\n            return _moment2.default.monthsShort(month); // moment months are 0-indexed\n          }\n        } else if (chunkType === 'year') {\n          return chunk;\n        } else {\n          throw new Error('BUG: Invalid date range chunk type');\n        }\n      }\n      function incrementChunk(chunk) {\n        if (chunkType === 'day') {\n          return chunk + 1;\n          // } else if (chunkType === 'week') {\n          //   return chunk + 7;\n        } else if (chunkType === 'month') {\n          var month = chunk % 100; // split off the year\n          if (month >= 12) {\n            return chunk - month + 100;\n          } else {\n            return chunk + 1;\n          }\n        } else if (chunkType === 'year') {\n          return chunk + 1;\n        } else {\n          throw new Error('BUG: Invalid date range chunk type');\n        }\n      }\n\n      // Get the total number of Issues\n      var total = cards.length;\n\n      if (!total) {\n        return _react2.default.createElement(\n          'span',\n          null,\n          'Not showing a chart because there are 0 cards to show'\n        );\n      }\n\n      cards = _underscore2.default.sortBy(cards, function (card) {\n        return getDay(card.issue.createdAt);\n      });\n      // Get the oldest Issue and the newest Issue Date\n      var startDate = cards[0].issue.createdAt;\n\n      var openedCards = cards;\n\n      // From this point, we only care about closed Issues\n      var closedCards = cards.filter(function (card) {\n        return card.issue.closedAt;\n      });\n      closedCards = _underscore2.default.sortBy(closedCards, function (card) {\n        return getDay(card.issue.closedAt);\n      });\n      var endDate = void 0;\n      if (closedCards.length && openedCards.length) {\n        var lastOpened = openedCards[openedCards.length - 1].issue.createdAt;\n        var lastClosed = closedCards[closedCards.length - 1].issue.closedAt;\n        if (Date.parse(lastOpened) < Date.parse(lastClosed)) {\n          endDate = lastClosed;\n        } else {\n          endDate = lastOpened;\n        }\n      } else if (openedCards.length) {\n        endDate = openedCards[openedCards.length - 1].issue.createdAt;\n      } else if (closedCards.length) {\n        endDate = closedCards[closedCards.length - 1].issue.closedAt;\n      } else {\n        throw new Error('BUG: should not have gotten here');\n      }\n\n      var startDays = getDay(startDate);\n      var endDays = getDay(endDate);\n\n      if (endDays - startDays < 90) {\n        chunkType = 'day';\n        // } else if (endDays - startDays < 100) {\n        //   chunkType = 'week';\n      } else if (endDays - startDays < 1500) {\n        chunkType = 'month';\n      } else {\n        chunkType = 'year';\n      }\n\n      var startChunk = getChunk(startDate);\n      var endChunk = getChunk(endDate);\n\n      // TODO: If the number of days is more than, say 50, then show changes per week.\n      // Loop over the days and build a chart\n      var closedCount = 0;\n      var openedCount = 0;\n      var rows = [];\n      for (var currentChunk = startChunk; currentChunk <= endChunk; currentChunk = incrementChunk(currentChunk)) {\n        // loop through the cards to count how many have closed on this day\n        var closedToday = 0;\n        var openedToday = 0;\n        for (var cardIndex = 0; cardIndex < closedCards.length; cardIndex++) {\n          var cardClosedDay = getChunk(closedCards[cardIndex].issue.closedAt);\n          if (cardClosedDay <= currentChunk) {\n            closedToday++;\n          } else {\n            break;\n          }\n        }\n        for (var _cardIndex = 0; _cardIndex < openedCards.length; _cardIndex++) {\n          var cardOpenedDay = getChunk(openedCards[_cardIndex].issue.createdAt);\n          if (cardOpenedDay <= currentChunk) {\n            openedToday++;\n          } else {\n            break;\n          }\n        }\n        // remove the cards since they are now accounted for\n        if (closedToday) {\n          closedCards.splice(0, closedToday);\n          closedCount += closedToday;\n        }\n        if (openedToday) {\n          openedCards.splice(0, openedToday);\n          openedCount += openedToday;\n        }\n        // Only add an entry if it changed\n        rows.push([currentChunk,\n        // closedToday ? closedCount : null,\n        // openedToday ? openedCount : null,\n        closedCount, openedCount, openedToday || null]);\n      }\n\n      // if (closedCards.length > 0) {\n      //   throw new Error('BUG: Should have counted all the cards');\n      // }\n\n      // Add the row titles and the \"Ideal\" line\n      rows[0].push(0); // ideal start\n      rows[rows.length - 1].push(openedCount); // ideal end\n      rows.unshift(['chunk', 'closed', 'total', 'new', 'ideal']);\n\n      var chartData = {\n        x: 'chunk',\n        rows: rows,\n        colors: {\n          closed: '#ff0000',\n          total: '#00ff00',\n          'new': '#0000ff',\n          ideal: '#999999'\n        },\n        types: {\n          closed: 'area-spline',\n          total: 'area-spline',\n          'new': 'bar'\n        }\n        // groups: [['opened', 'closed']]\n      };\n      function formatChunkIndex(index) {\n        return formatChunk(rows[index + 1][0]); // +1 because 1st row is the headers\n      }\n      var options = {\n        axis: {\n          x: {\n            type: 'category',\n            tick: {\n              format: formatChunkIndex,\n              culling: {\n                max: 20\n              }\n            }\n          }\n        }\n        // tooltip: { // Doesn't work with the far-right item yet\n        //   position: function(dataToShow, tWidth, tHeight, element) {\n        //     // return {top: 10, left: element.x.baseVal.value};\n        //     const $$ = this;\n        //     const mouse = $$.d3.mouse(element);\n        //     const svgLeft = $$.getSvgLeft(true);\n        //     const tooltipLeft = svgLeft + $$.getCurrentPaddingLeft(true) + $$.x(dataToShow[0].x) + 20;\n        //     const tooltipRight = tooltipLeft + tWidth;\n        //     const chartRight = svgLeft + $$.currentWidth - $$.getCurrentPaddingRight();\n        //     const tooltipTop = mouse[1] + 15;\n        //     return {top: 10, left: tooltipLeft};\n        //   }\n        // }\n      };\n      return _react2.default.createElement(_chart2.default, { className: 'burnup-chart', data: chartData, options: options, element: 'burnup' });\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  _createClass(BurnupShell, [{\n    key: 'UNSAFE_componentWillMount',\n    value: function UNSAFE_componentWillMount() {\n      // Needs to be called before `render()`\n      _issueStore2.default.startPolling();\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      _issueStore2.default.stopPolling();\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      // TODO: send the current filter as an arg to `Database.fetchCards()` so it can smartly (using Indexes) fetch the cards\n      var promise = _database2.default.fetchCards((0, _routeUtils.getFilters)());\n\n      return _react2.default.createElement(\n        'div',\n        { className: 'burnup' },\n        _react2.default.createElement(\n          'h2',\n          null,\n          _react2.default.createElement(_reactOcticons.GraphIcon, { size: 'mega' }),\n          '  Burnup Chart'\n        ),\n        _react2.default.createElement(\n          'p',\n          null,\n          'Make sure you selected ',\n          _react2.default.createElement(\n            'strong',\n            null,\n            'closed'\n          ),\n          ' and ',\n          _react2.default.createElement(\n            'strong',\n            null,\n            'Issues'\n          ),\n          ' and optionally a Milestone from the filter dropdown at the top of this page'\n        ),\n        _react2.default.createElement(\n          'p',\n          null,\n          'Also, this chart only fills the area when something changed (useful for weekends/open-source projects that frequently have periods of no change)'\n        ),\n        _react2.default.createElement(_loadable2.default, {\n          promise: promise,\n          renderLoaded: this.renderLoaded\n        })\n      );\n    }\n  }]);\n\n  return BurnupShell;\n}(_react.Component);\n\nexports.default = BurnupShell;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/burnup.jsx\n// module id = 1418\n// module chunks = 2","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _c = require('c3');\n\nvar _c2 = _interopRequireDefault(_c);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * React-C3 Chart\n * Copyright 2015 - Cody Reichert <codyreichert@gmail.com>\n */\n\nvar ChartComponent = function (_Component) {\n  _inherits(ChartComponent, _Component);\n\n  function ChartComponent() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, ChartComponent);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = ChartComponent.__proto__ || Object.getPrototypeOf(ChartComponent)).call.apply(_ref, [this].concat(args))), _this), _this.chart = null, _this._generateChart = function (data, element, options) {\n      var build = Object.assign({}, {\n        bindto: '#' + element,\n        data: data\n      }, options);\n      _this.chart = _c2.default.generate(build);\n    }, _this._destroyChart = function () {\n      _this.chart.destroy();\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  _createClass(ChartComponent, [{\n    key: 'shouldComponentUpdate',\n    value: function shouldComponentUpdate(nextProps) {\n      if (this.props.data.rows.length !== nextProps.data.rows.length) {\n        // shallow check\n        return true;\n      } else if (JSON.stringify(this.props.data.rows) !== JSON.stringify(nextProps.data.rows)) {\n        // deeper check\n        return true;\n      }\n      return false;\n    }\n  }, {\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      this._generateChart(this.props.data, this.props.element, this.props.options);\n    }\n  }, {\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate(prevProps) {\n      if (prevProps.data.rows !== this.props.data.rows) {\n        this._generateChart(this.props.data, this.props.element, this.props.options);\n      }\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      this._destroyChart();\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var className = void 0;\n      if (this.props.className) {\n        className = 'c3 ' + this.props.className;\n      } else {\n        className = 'c3';\n      }\n      return _react2.default.createElement('div', { className: className,\n        id: this.props.element,\n        style: this.props.styles });\n    }\n  }]);\n\n  return ChartComponent;\n}(_react.Component);\n\nChartComponent.displayName = 'React-C3-Chart';\nChartComponent.propTypes = {\n  className: _propTypes2.default.string,\n  data: _propTypes2.default.object.isRequired,\n  element: _propTypes2.default.string.isRequired,\n  options: _propTypes2.default.object\n};\nexports.default = ChartComponent;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/chart.jsx\n// module id = 2086\n// module chunks = 2","/* @license C3.js v0.4.23 | (c) C3 Team and other contributors | http://c3js.org/ */\n(function (global, factory) {\n    typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n    typeof define === 'function' && define.amd ? define(factory) :\n    (global.c3 = factory());\n}(this, (function () { 'use strict';\n\n    var CLASS = {\n        target: 'c3-target',\n        chart: 'c3-chart',\n        chartLine: 'c3-chart-line',\n        chartLines: 'c3-chart-lines',\n        chartBar: 'c3-chart-bar',\n        chartBars: 'c3-chart-bars',\n        chartText: 'c3-chart-text',\n        chartTexts: 'c3-chart-texts',\n        chartArc: 'c3-chart-arc',\n        chartArcs: 'c3-chart-arcs',\n        chartArcsTitle: 'c3-chart-arcs-title',\n        chartArcsBackground: 'c3-chart-arcs-background',\n        chartArcsGaugeUnit: 'c3-chart-arcs-gauge-unit',\n        chartArcsGaugeMax: 'c3-chart-arcs-gauge-max',\n        chartArcsGaugeMin: 'c3-chart-arcs-gauge-min',\n        selectedCircle: 'c3-selected-circle',\n        selectedCircles: 'c3-selected-circles',\n        eventRect: 'c3-event-rect',\n        eventRects: 'c3-event-rects',\n        eventRectsSingle: 'c3-event-rects-single',\n        eventRectsMultiple: 'c3-event-rects-multiple',\n        zoomRect: 'c3-zoom-rect',\n        brush: 'c3-brush',\n        focused: 'c3-focused',\n        defocused: 'c3-defocused',\n        region: 'c3-region',\n        regions: 'c3-regions',\n        title: 'c3-title',\n        tooltipContainer: 'c3-tooltip-container',\n        tooltip: 'c3-tooltip',\n        tooltipName: 'c3-tooltip-name',\n        shape: 'c3-shape',\n        shapes: 'c3-shapes',\n        line: 'c3-line',\n        lines: 'c3-lines',\n        bar: 'c3-bar',\n        bars: 'c3-bars',\n        circle: 'c3-circle',\n        circles: 'c3-circles',\n        arc: 'c3-arc',\n        arcLabelLine: 'c3-arc-label-line',\n        arcs: 'c3-arcs',\n        area: 'c3-area',\n        areas: 'c3-areas',\n        empty: 'c3-empty',\n        text: 'c3-text',\n        texts: 'c3-texts',\n        gaugeValue: 'c3-gauge-value',\n        grid: 'c3-grid',\n        gridLines: 'c3-grid-lines',\n        xgrid: 'c3-xgrid',\n        xgrids: 'c3-xgrids',\n        xgridLine: 'c3-xgrid-line',\n        xgridLines: 'c3-xgrid-lines',\n        xgridFocus: 'c3-xgrid-focus',\n        ygrid: 'c3-ygrid',\n        ygrids: 'c3-ygrids',\n        ygridLine: 'c3-ygrid-line',\n        ygridLines: 'c3-ygrid-lines',\n        axis: 'c3-axis',\n        axisX: 'c3-axis-x',\n        axisXLabel: 'c3-axis-x-label',\n        axisY: 'c3-axis-y',\n        axisYLabel: 'c3-axis-y-label',\n        axisY2: 'c3-axis-y2',\n        axisY2Label: 'c3-axis-y2-label',\n        legendBackground: 'c3-legend-background',\n        legendItem: 'c3-legend-item',\n        legendItemEvent: 'c3-legend-item-event',\n        legendItemTile: 'c3-legend-item-tile',\n        legendItemHidden: 'c3-legend-item-hidden',\n        legendItemFocused: 'c3-legend-item-focused',\n        dragarea: 'c3-dragarea',\n        EXPANDED: '_expanded_',\n        SELECTED: '_selected_',\n        INCLUDED: '_included_'\n    };\n\n    var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n      return typeof obj;\n    } : function (obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n\n    var classCallCheck = function (instance, Constructor) {\n      if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n      }\n    };\n\n    var inherits = function (subClass, superClass) {\n      if (typeof superClass !== \"function\" && superClass !== null) {\n        throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n      }\n\n      subClass.prototype = Object.create(superClass && superClass.prototype, {\n        constructor: {\n          value: subClass,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      });\n      if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n    };\n\n    var possibleConstructorReturn = function (self, call) {\n      if (!self) {\n        throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n      }\n\n      return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n    };\n\n    var isValue = function isValue(v) {\n        return v || v === 0;\n    };\n    var isFunction = function isFunction(o) {\n        return typeof o === 'function';\n    };\n    var isArray = function isArray(o) {\n        return Array.isArray(o);\n    };\n    var isString = function isString(o) {\n        return typeof o === 'string';\n    };\n    var isUndefined = function isUndefined(v) {\n        return typeof v === 'undefined';\n    };\n    var isDefined = function isDefined(v) {\n        return typeof v !== 'undefined';\n    };\n    var ceil10 = function ceil10(v) {\n        return Math.ceil(v / 10) * 10;\n    };\n    var asHalfPixel = function asHalfPixel(n) {\n        return Math.ceil(n) + 0.5;\n    };\n    var diffDomain = function diffDomain(d) {\n        return d[1] - d[0];\n    };\n    var isEmpty = function isEmpty(o) {\n        return typeof o === 'undefined' || o === null || isString(o) && o.length === 0 || (typeof o === 'undefined' ? 'undefined' : _typeof(o)) === 'object' && Object.keys(o).length === 0;\n    };\n    var notEmpty = function notEmpty(o) {\n        return !c3_chart_internal_fn.isEmpty(o);\n    };\n    var getOption = function getOption(options, key, defaultValue) {\n        return isDefined(options[key]) ? options[key] : defaultValue;\n    };\n    var hasValue = function hasValue(dict, value) {\n        var found = false;\n        Object.keys(dict).forEach(function (key) {\n            if (dict[key] === value) {\n                found = true;\n            }\n        });\n        return found;\n    };\n    var sanitise = function sanitise(str) {\n        return typeof str === 'string' ? str.replace(/</g, '&lt;').replace(/>/g, '&gt;') : str;\n    };\n    var getPathBox = function getPathBox(path) {\n        var box = path.getBoundingClientRect(),\n            items = [path.pathSegList.getItem(0), path.pathSegList.getItem(1)],\n            minX = items[0].x,\n            minY = Math.min(items[0].y, items[1].y);\n        return { x: minX, y: minY, width: box.width, height: box.height };\n    };\n\n    var c3_axis_fn;\n    var c3_axis_internal_fn;\n\n    function AxisInternal(component, params) {\n        var internal = this;\n        internal.component = component;\n        internal.params = params || {};\n\n        internal.d3 = component.d3;\n        internal.scale = internal.d3.scale.linear();\n        internal.range;\n        internal.orient = \"bottom\";\n        internal.innerTickSize = 6;\n        internal.outerTickSize = this.params.withOuterTick ? 6 : 0;\n        internal.tickPadding = 3;\n        internal.tickValues = null;\n        internal.tickFormat;\n        internal.tickArguments;\n\n        internal.tickOffset = 0;\n        internal.tickCulling = true;\n        internal.tickCentered;\n        internal.tickTextCharSize;\n        internal.tickTextRotate = internal.params.tickTextRotate;\n        internal.tickLength;\n\n        internal.axis = internal.generateAxis();\n    }\n    c3_axis_internal_fn = AxisInternal.prototype;\n\n    c3_axis_internal_fn.axisX = function (selection, x, tickOffset) {\n        selection.attr(\"transform\", function (d) {\n            return \"translate(\" + Math.ceil(x(d) + tickOffset) + \", 0)\";\n        });\n    };\n    c3_axis_internal_fn.axisY = function (selection, y) {\n        selection.attr(\"transform\", function (d) {\n            return \"translate(0,\" + Math.ceil(y(d)) + \")\";\n        });\n    };\n    c3_axis_internal_fn.scaleExtent = function (domain) {\n        var start = domain[0],\n            stop = domain[domain.length - 1];\n        return start < stop ? [start, stop] : [stop, start];\n    };\n    c3_axis_internal_fn.generateTicks = function (scale) {\n        var internal = this;\n        var i,\n            domain,\n            ticks = [];\n        if (scale.ticks) {\n            return scale.ticks.apply(scale, internal.tickArguments);\n        }\n        domain = scale.domain();\n        for (i = Math.ceil(domain[0]); i < domain[1]; i++) {\n            ticks.push(i);\n        }\n        if (ticks.length > 0 && ticks[0] > 0) {\n            ticks.unshift(ticks[0] - (ticks[1] - ticks[0]));\n        }\n        return ticks;\n    };\n    c3_axis_internal_fn.copyScale = function () {\n        var internal = this;\n        var newScale = internal.scale.copy(),\n            domain;\n        if (internal.params.isCategory) {\n            domain = internal.scale.domain();\n            newScale.domain([domain[0], domain[1] - 1]);\n        }\n        return newScale;\n    };\n    c3_axis_internal_fn.textFormatted = function (v) {\n        var internal = this,\n            formatted = internal.tickFormat ? internal.tickFormat(v) : v;\n        return typeof formatted !== 'undefined' ? formatted : '';\n    };\n    c3_axis_internal_fn.updateRange = function () {\n        var internal = this;\n        internal.range = internal.scale.rangeExtent ? internal.scale.rangeExtent() : internal.scaleExtent(internal.scale.range());\n        return internal.range;\n    };\n    c3_axis_internal_fn.updateTickTextCharSize = function (tick) {\n        var internal = this;\n        if (internal.tickTextCharSize) {\n            return internal.tickTextCharSize;\n        }\n        var size = {\n            h: 11.5,\n            w: 5.5\n        };\n        tick.select('text').text(function (d) {\n            return internal.textFormatted(d);\n        }).each(function (d) {\n            var box = this.getBoundingClientRect(),\n                text = internal.textFormatted(d),\n                h = box.height,\n                w = text ? box.width / text.length : undefined;\n            if (h && w) {\n                size.h = h;\n                size.w = w;\n            }\n        }).text('');\n        internal.tickTextCharSize = size;\n        return size;\n    };\n    c3_axis_internal_fn.transitionise = function (selection) {\n        return this.params.withoutTransition ? selection : this.d3.transition(selection);\n    };\n    c3_axis_internal_fn.isVertical = function () {\n        return this.orient === 'left' || this.orient === 'right';\n    };\n    c3_axis_internal_fn.tspanData = function (d, i, ticks, scale) {\n        var internal = this;\n        var splitted = internal.params.tickMultiline ? internal.splitTickText(d, ticks, scale) : [].concat(internal.textFormatted(d));\n\n        if (internal.params.tickMultiline && internal.params.tickMultilineMax > 0) {\n            splitted = internal.ellipsify(splitted, internal.params.tickMultilineMax);\n        }\n\n        return splitted.map(function (s) {\n            return { index: i, splitted: s, length: splitted.length };\n        });\n    };\n    c3_axis_internal_fn.splitTickText = function (d, ticks, scale) {\n        var internal = this,\n            tickText = internal.textFormatted(d),\n            maxWidth = internal.params.tickWidth,\n            subtext,\n            spaceIndex,\n            textWidth,\n            splitted = [];\n\n        if (Object.prototype.toString.call(tickText) === \"[object Array]\") {\n            return tickText;\n        }\n\n        if (!maxWidth || maxWidth <= 0) {\n            maxWidth = internal.isVertical() ? 95 : internal.params.isCategory ? Math.ceil(scale(ticks[1]) - scale(ticks[0])) - 12 : 110;\n        }\n\n        function split(splitted, text) {\n            spaceIndex = undefined;\n            for (var i = 1; i < text.length; i++) {\n                if (text.charAt(i) === ' ') {\n                    spaceIndex = i;\n                }\n                subtext = text.substr(0, i + 1);\n                textWidth = internal.tickTextCharSize.w * subtext.length;\n                // if text width gets over tick width, split by space index or crrent index\n                if (maxWidth < textWidth) {\n                    return split(splitted.concat(text.substr(0, spaceIndex ? spaceIndex : i)), text.slice(spaceIndex ? spaceIndex + 1 : i));\n                }\n            }\n            return splitted.concat(text);\n        }\n\n        return split(splitted, tickText + \"\");\n    };\n    c3_axis_internal_fn.ellipsify = function (splitted, max) {\n        if (splitted.length <= max) {\n            return splitted;\n        }\n\n        var ellipsified = splitted.slice(0, max);\n        var remaining = 3;\n        for (var i = max - 1; i >= 0; i--) {\n            var available = ellipsified[i].length;\n\n            ellipsified[i] = ellipsified[i].substr(0, available - remaining).padEnd(available, '.');\n\n            remaining -= available;\n\n            if (remaining <= 0) {\n                break;\n            }\n        }\n\n        return ellipsified;\n    };\n    c3_axis_internal_fn.updateTickLength = function () {\n        var internal = this;\n        internal.tickLength = Math.max(internal.innerTickSize, 0) + internal.tickPadding;\n    };\n    c3_axis_internal_fn.lineY2 = function (d) {\n        var internal = this,\n            tickPosition = internal.scale(d) + (internal.tickCentered ? 0 : internal.tickOffset);\n        return internal.range[0] < tickPosition && tickPosition < internal.range[1] ? internal.innerTickSize : 0;\n    };\n    c3_axis_internal_fn.textY = function () {\n        var internal = this,\n            rotate = internal.tickTextRotate;\n        return rotate ? 11.5 - 2.5 * (rotate / 15) * (rotate > 0 ? 1 : -1) : internal.tickLength;\n    };\n    c3_axis_internal_fn.textTransform = function () {\n        var internal = this,\n            rotate = internal.tickTextRotate;\n        return rotate ? \"rotate(\" + rotate + \")\" : \"\";\n    };\n    c3_axis_internal_fn.textTextAnchor = function () {\n        var internal = this,\n            rotate = internal.tickTextRotate;\n        return rotate ? rotate > 0 ? \"start\" : \"end\" : \"middle\";\n    };\n    c3_axis_internal_fn.tspanDx = function () {\n        var internal = this,\n            rotate = internal.tickTextRotate;\n        return rotate ? 8 * Math.sin(Math.PI * (rotate / 180)) : 0;\n    };\n    c3_axis_internal_fn.tspanDy = function (d, i) {\n        var internal = this,\n            dy = internal.tickTextCharSize.h;\n        if (i === 0) {\n            if (internal.isVertical()) {\n                dy = -((d.length - 1) * (internal.tickTextCharSize.h / 2) - 3);\n            } else {\n                dy = \".71em\";\n            }\n        }\n        return dy;\n    };\n\n    c3_axis_internal_fn.generateAxis = function () {\n        var internal = this,\n            d3 = internal.d3,\n            params = internal.params;\n        function axis(g) {\n            g.each(function () {\n                var g = axis.g = d3.select(this);\n\n                var scale0 = this.__chart__ || internal.scale,\n                    scale1 = this.__chart__ = internal.copyScale();\n\n                var ticks = internal.tickValues ? internal.tickValues : internal.generateTicks(scale1),\n                    tick = g.selectAll(\".tick\").data(ticks, scale1),\n                    tickEnter = tick.enter().insert(\"g\", \".domain\").attr(\"class\", \"tick\").style(\"opacity\", 1e-6),\n\n                // MEMO: No exit transition. The reason is this transition affects max tick width calculation because old tick will be included in the ticks.\n                tickExit = tick.exit().remove(),\n                    tickUpdate = internal.transitionise(tick).style(\"opacity\", 1),\n                    tickTransform,\n                    tickX,\n                    tickY;\n\n                if (params.isCategory) {\n                    internal.tickOffset = Math.ceil((scale1(1) - scale1(0)) / 2);\n                    tickX = internal.tickCentered ? 0 : internal.tickOffset;\n                    tickY = internal.tickCentered ? internal.tickOffset : 0;\n                } else {\n                    internal.tickOffset = tickX = 0;\n                }\n\n                tickEnter.append(\"line\");\n                tickEnter.append(\"text\");\n\n                internal.updateRange();\n                internal.updateTickLength();\n                internal.updateTickTextCharSize(g.select('.tick'));\n\n                var lineUpdate = tickUpdate.select(\"line\"),\n                    textUpdate = tickUpdate.select(\"text\"),\n                    tspanUpdate = tick.select(\"text\").selectAll('tspan').data(function (d, i) {\n                    return internal.tspanData(d, i, ticks, scale1);\n                });\n\n                tspanUpdate.enter().append('tspan');\n                tspanUpdate.exit().remove();\n                tspanUpdate.text(function (d) {\n                    return d.splitted;\n                });\n\n                var path = g.selectAll(\".domain\").data([0]),\n                    pathUpdate = (path.enter().append(\"path\").attr(\"class\", \"domain\"), internal.transitionise(path));\n\n                // TODO: each attr should be one function and change its behavior by internal.orient, probably\n                switch (internal.orient) {\n                    case \"bottom\":\n                        {\n                            tickTransform = internal.axisX;\n                            lineUpdate.attr(\"x1\", tickX).attr(\"x2\", tickX).attr(\"y2\", function (d, i) {\n                                return internal.lineY2(d, i);\n                            });\n                            textUpdate.attr(\"x\", 0).attr(\"y\", function (d, i) {\n                                return internal.textY(d, i);\n                            }).attr(\"transform\", function (d, i) {\n                                return internal.textTransform(d, i);\n                            }).style(\"text-anchor\", function (d, i) {\n                                return internal.textTextAnchor(d, i);\n                            });\n                            tspanUpdate.attr('x', 0).attr(\"dy\", function (d, i) {\n                                return internal.tspanDy(d, i);\n                            }).attr('dx', function (d, i) {\n                                return internal.tspanDx(d, i);\n                            });\n                            pathUpdate.attr(\"d\", \"M\" + internal.range[0] + \",\" + internal.outerTickSize + \"V0H\" + internal.range[1] + \"V\" + internal.outerTickSize);\n                            break;\n                        }\n                    case \"top\":\n                        {\n                            // TODO: rotated tick text\n                            tickTransform = internal.axisX;\n                            lineUpdate.attr(\"x1\", tickX).attr(\"x2\", tickX).attr(\"y2\", function (d, i) {\n                                return -1 * internal.lineY2(d, i);\n                            });\n                            textUpdate.attr(\"x\", 0).attr(\"y\", function (d, i) {\n                                return -1 * internal.textY(d, i) - (params.isCategory ? 2 : internal.tickLength - 2);\n                            }).attr(\"transform\", function (d, i) {\n                                return internal.textTransform(d, i);\n                            }).style(\"text-anchor\", function (d, i) {\n                                return internal.textTextAnchor(d, i);\n                            });\n                            tspanUpdate.attr('x', 0).attr(\"dy\", function (d, i) {\n                                return internal.tspanDy(d, i);\n                            }).attr('dx', function (d, i) {\n                                return internal.tspanDx(d, i);\n                            });\n                            pathUpdate.attr(\"d\", \"M\" + internal.range[0] + \",\" + -internal.outerTickSize + \"V0H\" + internal.range[1] + \"V\" + -internal.outerTickSize);\n                            break;\n                        }\n                    case \"left\":\n                        {\n                            tickTransform = internal.axisY;\n                            lineUpdate.attr(\"x2\", -internal.innerTickSize).attr(\"y1\", tickY).attr(\"y2\", tickY);\n                            textUpdate.attr(\"x\", -internal.tickLength).attr(\"y\", internal.tickOffset).style(\"text-anchor\", \"end\");\n                            tspanUpdate.attr('x', -internal.tickLength).attr(\"dy\", function (d, i) {\n                                return internal.tspanDy(d, i);\n                            });\n                            pathUpdate.attr(\"d\", \"M\" + -internal.outerTickSize + \",\" + internal.range[0] + \"H0V\" + internal.range[1] + \"H\" + -internal.outerTickSize);\n                            break;\n                        }\n                    case \"right\":\n                        {\n                            tickTransform = internal.axisY;\n                            lineUpdate.attr(\"x2\", internal.innerTickSize).attr(\"y1\", tickY).attr(\"y2\", tickY);\n                            textUpdate.attr(\"x\", internal.tickLength).attr(\"y\", internal.tickOffset).style(\"text-anchor\", \"start\");\n                            tspanUpdate.attr('x', internal.tickLength).attr(\"dy\", function (d, i) {\n                                return internal.tspanDy(d, i);\n                            });\n                            pathUpdate.attr(\"d\", \"M\" + internal.outerTickSize + \",\" + internal.range[0] + \"H0V\" + internal.range[1] + \"H\" + internal.outerTickSize);\n                            break;\n                        }\n                }\n                if (scale1.rangeBand) {\n                    var x = scale1,\n                        dx = x.rangeBand() / 2;\n                    scale0 = scale1 = function scale1(d) {\n                        return x(d) + dx;\n                    };\n                } else if (scale0.rangeBand) {\n                    scale0 = scale1;\n                } else {\n                    tickExit.call(tickTransform, scale1, internal.tickOffset);\n                }\n                tickEnter.call(tickTransform, scale0, internal.tickOffset);\n                tickUpdate.call(tickTransform, scale1, internal.tickOffset);\n            });\n        }\n        axis.scale = function (x) {\n            if (!arguments.length) {\n                return internal.scale;\n            }\n            internal.scale = x;\n            return axis;\n        };\n        axis.orient = function (x) {\n            if (!arguments.length) {\n                return internal.orient;\n            }\n            internal.orient = x in { top: 1, right: 1, bottom: 1, left: 1 } ? x + \"\" : \"bottom\";\n            return axis;\n        };\n        axis.tickFormat = function (format) {\n            if (!arguments.length) {\n                return internal.tickFormat;\n            }\n            internal.tickFormat = format;\n            return axis;\n        };\n        axis.tickCentered = function (isCentered) {\n            if (!arguments.length) {\n                return internal.tickCentered;\n            }\n            internal.tickCentered = isCentered;\n            return axis;\n        };\n        axis.tickOffset = function () {\n            return internal.tickOffset;\n        };\n        axis.tickInterval = function () {\n            var interval, length;\n            if (params.isCategory) {\n                interval = internal.tickOffset * 2;\n            } else {\n                length = axis.g.select('path.domain').node().getTotalLength() - internal.outerTickSize * 2;\n                interval = length / axis.g.selectAll('line').size();\n            }\n            return interval === Infinity ? 0 : interval;\n        };\n        axis.ticks = function () {\n            if (!arguments.length) {\n                return internal.tickArguments;\n            }\n            internal.tickArguments = arguments;\n            return axis;\n        };\n        axis.tickCulling = function (culling) {\n            if (!arguments.length) {\n                return internal.tickCulling;\n            }\n            internal.tickCulling = culling;\n            return axis;\n        };\n        axis.tickValues = function (x) {\n            if (typeof x === 'function') {\n                internal.tickValues = function () {\n                    return x(internal.scale.domain());\n                };\n            } else {\n                if (!arguments.length) {\n                    return internal.tickValues;\n                }\n                internal.tickValues = x;\n            }\n            return axis;\n        };\n        return axis;\n    };\n\n    var Axis = function (_Component) {\n        inherits(Axis, _Component);\n\n        function Axis(owner) {\n            classCallCheck(this, Axis);\n\n            var fn = {\n                fn: c3_axis_fn,\n                internal: {\n                    fn: c3_axis_internal_fn\n                }\n            };\n\n            var _this = possibleConstructorReturn(this, (Axis.__proto__ || Object.getPrototypeOf(Axis)).call(this, owner, 'axis', fn));\n\n            _this.d3 = owner.d3;\n            _this.internal = AxisInternal;\n            return _this;\n        }\n\n        return Axis;\n    }(Component);\n\n    c3_axis_fn = Axis.prototype;\n\n    c3_axis_fn.init = function init() {\n        var $$ = this.owner,\n            config = $$.config,\n            main = $$.main;\n        $$.axes.x = main.append(\"g\").attr(\"class\", CLASS.axis + ' ' + CLASS.axisX).attr(\"clip-path\", config.axis_x_inner ? \"\" : $$.clipPathForXAxis).attr(\"transform\", $$.getTranslate('x')).style(\"visibility\", config.axis_x_show ? 'visible' : 'hidden');\n        $$.axes.x.append(\"text\").attr(\"class\", CLASS.axisXLabel).attr(\"transform\", config.axis_rotated ? \"rotate(-90)\" : \"\").style(\"text-anchor\", this.textAnchorForXAxisLabel.bind(this));\n        $$.axes.y = main.append(\"g\").attr(\"class\", CLASS.axis + ' ' + CLASS.axisY).attr(\"clip-path\", config.axis_y_inner ? \"\" : $$.clipPathForYAxis).attr(\"transform\", $$.getTranslate('y')).style(\"visibility\", config.axis_y_show ? 'visible' : 'hidden');\n        $$.axes.y.append(\"text\").attr(\"class\", CLASS.axisYLabel).attr(\"transform\", config.axis_rotated ? \"\" : \"rotate(-90)\").style(\"text-anchor\", this.textAnchorForYAxisLabel.bind(this));\n\n        $$.axes.y2 = main.append(\"g\").attr(\"class\", CLASS.axis + ' ' + CLASS.axisY2)\n        // clip-path?\n        .attr(\"transform\", $$.getTranslate('y2')).style(\"visibility\", config.axis_y2_show ? 'visible' : 'hidden');\n        $$.axes.y2.append(\"text\").attr(\"class\", CLASS.axisY2Label).attr(\"transform\", config.axis_rotated ? \"\" : \"rotate(-90)\").style(\"text-anchor\", this.textAnchorForY2AxisLabel.bind(this));\n    };\n    c3_axis_fn.getXAxis = function getXAxis(scale, orient, tickFormat, tickValues, withOuterTick, withoutTransition, withoutRotateTickText) {\n        var $$ = this.owner,\n            config = $$.config,\n            axisParams = {\n            isCategory: $$.isCategorized(),\n            withOuterTick: withOuterTick,\n            tickMultiline: config.axis_x_tick_multiline,\n            tickMultilineMax: config.axis_x_tick_multiline ? Number(config.axis_x_tick_multilineMax) : 0,\n            tickWidth: config.axis_x_tick_width,\n            tickTextRotate: withoutRotateTickText ? 0 : config.axis_x_tick_rotate,\n            withoutTransition: withoutTransition\n        },\n            axis = new this.internal(this, axisParams).axis.scale(scale).orient(orient);\n\n        if ($$.isTimeSeries() && tickValues && typeof tickValues !== \"function\") {\n            tickValues = tickValues.map(function (v) {\n                return $$.parseDate(v);\n            });\n        }\n\n        // Set tick\n        axis.tickFormat(tickFormat).tickValues(tickValues);\n        if ($$.isCategorized()) {\n            axis.tickCentered(config.axis_x_tick_centered);\n            if (isEmpty(config.axis_x_tick_culling)) {\n                config.axis_x_tick_culling = false;\n            }\n        }\n\n        return axis;\n    };\n    c3_axis_fn.updateXAxisTickValues = function updateXAxisTickValues(targets, axis) {\n        var $$ = this.owner,\n            config = $$.config,\n            tickValues;\n        if (config.axis_x_tick_fit || config.axis_x_tick_count) {\n            tickValues = this.generateTickValues($$.mapTargetsToUniqueXs(targets), config.axis_x_tick_count, $$.isTimeSeries());\n        }\n        if (axis) {\n            axis.tickValues(tickValues);\n        } else {\n            $$.xAxis.tickValues(tickValues);\n            $$.subXAxis.tickValues(tickValues);\n        }\n        return tickValues;\n    };\n    c3_axis_fn.getYAxis = function getYAxis(scale, orient, tickFormat, tickValues, withOuterTick, withoutTransition, withoutRotateTickText) {\n        var $$ = this.owner,\n            config = $$.config,\n            axisParams = {\n            withOuterTick: withOuterTick,\n            withoutTransition: withoutTransition,\n            tickTextRotate: withoutRotateTickText ? 0 : config.axis_y_tick_rotate\n        },\n            axis = new this.internal(this, axisParams).axis.scale(scale).orient(orient).tickFormat(tickFormat);\n        if ($$.isTimeSeriesY()) {\n            axis.ticks($$.d3.time[config.axis_y_tick_time_value], config.axis_y_tick_time_interval);\n        } else {\n            axis.tickValues(tickValues);\n        }\n        return axis;\n    };\n    c3_axis_fn.getId = function getId(id) {\n        var config = this.owner.config;\n        return id in config.data_axes ? config.data_axes[id] : 'y';\n    };\n    c3_axis_fn.getXAxisTickFormat = function getXAxisTickFormat() {\n        var $$ = this.owner,\n            config = $$.config,\n            format = $$.isTimeSeries() ? $$.defaultAxisTimeFormat : $$.isCategorized() ? $$.categoryName : function (v) {\n            return v < 0 ? v.toFixed(0) : v;\n        };\n        if (config.axis_x_tick_format) {\n            if (isFunction(config.axis_x_tick_format)) {\n                format = config.axis_x_tick_format;\n            } else if ($$.isTimeSeries()) {\n                format = function format(date) {\n                    return date ? $$.axisTimeFormat(config.axis_x_tick_format)(date) : \"\";\n                };\n            }\n        }\n        return isFunction(format) ? function (v) {\n            return format.call($$, v);\n        } : format;\n    };\n    c3_axis_fn.getTickValues = function getTickValues(tickValues, axis) {\n        return tickValues ? tickValues : axis ? axis.tickValues() : undefined;\n    };\n    c3_axis_fn.getXAxisTickValues = function getXAxisTickValues() {\n        return this.getTickValues(this.owner.config.axis_x_tick_values, this.owner.xAxis);\n    };\n    c3_axis_fn.getYAxisTickValues = function getYAxisTickValues() {\n        return this.getTickValues(this.owner.config.axis_y_tick_values, this.owner.yAxis);\n    };\n    c3_axis_fn.getY2AxisTickValues = function getY2AxisTickValues() {\n        return this.getTickValues(this.owner.config.axis_y2_tick_values, this.owner.y2Axis);\n    };\n    c3_axis_fn.getLabelOptionByAxisId = function getLabelOptionByAxisId(axisId) {\n        var $$ = this.owner,\n            config = $$.config,\n            option;\n        if (axisId === 'y') {\n            option = config.axis_y_label;\n        } else if (axisId === 'y2') {\n            option = config.axis_y2_label;\n        } else if (axisId === 'x') {\n            option = config.axis_x_label;\n        }\n        return option;\n    };\n    c3_axis_fn.getLabelText = function getLabelText(axisId) {\n        var option = this.getLabelOptionByAxisId(axisId);\n        return isString(option) ? option : option ? option.text : null;\n    };\n    c3_axis_fn.setLabelText = function setLabelText(axisId, text) {\n        var $$ = this.owner,\n            config = $$.config,\n            option = this.getLabelOptionByAxisId(axisId);\n        if (isString(option)) {\n            if (axisId === 'y') {\n                config.axis_y_label = text;\n            } else if (axisId === 'y2') {\n                config.axis_y2_label = text;\n            } else if (axisId === 'x') {\n                config.axis_x_label = text;\n            }\n        } else if (option) {\n            option.text = text;\n        }\n    };\n    c3_axis_fn.getLabelPosition = function getLabelPosition(axisId, defaultPosition) {\n        var option = this.getLabelOptionByAxisId(axisId),\n            position = option && (typeof option === 'undefined' ? 'undefined' : _typeof(option)) === 'object' && option.position ? option.position : defaultPosition;\n        return {\n            isInner: position.indexOf('inner') >= 0,\n            isOuter: position.indexOf('outer') >= 0,\n            isLeft: position.indexOf('left') >= 0,\n            isCenter: position.indexOf('center') >= 0,\n            isRight: position.indexOf('right') >= 0,\n            isTop: position.indexOf('top') >= 0,\n            isMiddle: position.indexOf('middle') >= 0,\n            isBottom: position.indexOf('bottom') >= 0\n        };\n    };\n    c3_axis_fn.getXAxisLabelPosition = function getXAxisLabelPosition() {\n        return this.getLabelPosition('x', this.owner.config.axis_rotated ? 'inner-top' : 'inner-right');\n    };\n    c3_axis_fn.getYAxisLabelPosition = function getYAxisLabelPosition() {\n        return this.getLabelPosition('y', this.owner.config.axis_rotated ? 'inner-right' : 'inner-top');\n    };\n    c3_axis_fn.getY2AxisLabelPosition = function getY2AxisLabelPosition() {\n        return this.getLabelPosition('y2', this.owner.config.axis_rotated ? 'inner-right' : 'inner-top');\n    };\n    c3_axis_fn.getLabelPositionById = function getLabelPositionById(id) {\n        return id === 'y2' ? this.getY2AxisLabelPosition() : id === 'y' ? this.getYAxisLabelPosition() : this.getXAxisLabelPosition();\n    };\n    c3_axis_fn.textForXAxisLabel = function textForXAxisLabel() {\n        return this.getLabelText('x');\n    };\n    c3_axis_fn.textForYAxisLabel = function textForYAxisLabel() {\n        return this.getLabelText('y');\n    };\n    c3_axis_fn.textForY2AxisLabel = function textForY2AxisLabel() {\n        return this.getLabelText('y2');\n    };\n    c3_axis_fn.xForAxisLabel = function xForAxisLabel(forHorizontal, position) {\n        var $$ = this.owner;\n        if (forHorizontal) {\n            return position.isLeft ? 0 : position.isCenter ? $$.width / 2 : $$.width;\n        } else {\n            return position.isBottom ? -$$.height : position.isMiddle ? -$$.height / 2 : 0;\n        }\n    };\n    c3_axis_fn.dxForAxisLabel = function dxForAxisLabel(forHorizontal, position) {\n        if (forHorizontal) {\n            return position.isLeft ? \"0.5em\" : position.isRight ? \"-0.5em\" : \"0\";\n        } else {\n            return position.isTop ? \"-0.5em\" : position.isBottom ? \"0.5em\" : \"0\";\n        }\n    };\n    c3_axis_fn.textAnchorForAxisLabel = function textAnchorForAxisLabel(forHorizontal, position) {\n        if (forHorizontal) {\n            return position.isLeft ? 'start' : position.isCenter ? 'middle' : 'end';\n        } else {\n            return position.isBottom ? 'start' : position.isMiddle ? 'middle' : 'end';\n        }\n    };\n    c3_axis_fn.xForXAxisLabel = function xForXAxisLabel() {\n        return this.xForAxisLabel(!this.owner.config.axis_rotated, this.getXAxisLabelPosition());\n    };\n    c3_axis_fn.xForYAxisLabel = function xForYAxisLabel() {\n        return this.xForAxisLabel(this.owner.config.axis_rotated, this.getYAxisLabelPosition());\n    };\n    c3_axis_fn.xForY2AxisLabel = function xForY2AxisLabel() {\n        return this.xForAxisLabel(this.owner.config.axis_rotated, this.getY2AxisLabelPosition());\n    };\n    c3_axis_fn.dxForXAxisLabel = function dxForXAxisLabel() {\n        return this.dxForAxisLabel(!this.owner.config.axis_rotated, this.getXAxisLabelPosition());\n    };\n    c3_axis_fn.dxForYAxisLabel = function dxForYAxisLabel() {\n        return this.dxForAxisLabel(this.owner.config.axis_rotated, this.getYAxisLabelPosition());\n    };\n    c3_axis_fn.dxForY2AxisLabel = function dxForY2AxisLabel() {\n        return this.dxForAxisLabel(this.owner.config.axis_rotated, this.getY2AxisLabelPosition());\n    };\n    c3_axis_fn.dyForXAxisLabel = function dyForXAxisLabel() {\n        var $$ = this.owner,\n            config = $$.config,\n            position = this.getXAxisLabelPosition();\n        if (config.axis_rotated) {\n            return position.isInner ? \"1.2em\" : -25 - ($$.config.axis_x_inner ? 0 : this.getMaxTickWidth('x'));\n        } else {\n            return position.isInner ? \"-0.5em\" : config.axis_x_height ? config.axis_x_height - 10 : \"3em\";\n        }\n    };\n    c3_axis_fn.dyForYAxisLabel = function dyForYAxisLabel() {\n        var $$ = this.owner,\n            position = this.getYAxisLabelPosition();\n        if ($$.config.axis_rotated) {\n            return position.isInner ? \"-0.5em\" : \"3em\";\n        } else {\n            return position.isInner ? \"1.2em\" : -10 - ($$.config.axis_y_inner ? 0 : this.getMaxTickWidth('y') + 10);\n        }\n    };\n    c3_axis_fn.dyForY2AxisLabel = function dyForY2AxisLabel() {\n        var $$ = this.owner,\n            position = this.getY2AxisLabelPosition();\n        if ($$.config.axis_rotated) {\n            return position.isInner ? \"1.2em\" : \"-2.2em\";\n        } else {\n            return position.isInner ? \"-0.5em\" : 15 + ($$.config.axis_y2_inner ? 0 : this.getMaxTickWidth('y2') + 15);\n        }\n    };\n    c3_axis_fn.textAnchorForXAxisLabel = function textAnchorForXAxisLabel() {\n        var $$ = this.owner;\n        return this.textAnchorForAxisLabel(!$$.config.axis_rotated, this.getXAxisLabelPosition());\n    };\n    c3_axis_fn.textAnchorForYAxisLabel = function textAnchorForYAxisLabel() {\n        var $$ = this.owner;\n        return this.textAnchorForAxisLabel($$.config.axis_rotated, this.getYAxisLabelPosition());\n    };\n    c3_axis_fn.textAnchorForY2AxisLabel = function textAnchorForY2AxisLabel() {\n        var $$ = this.owner;\n        return this.textAnchorForAxisLabel($$.config.axis_rotated, this.getY2AxisLabelPosition());\n    };\n    c3_axis_fn.getMaxTickWidth = function getMaxTickWidth(id, withoutRecompute) {\n        var $$ = this.owner,\n            config = $$.config,\n            maxWidth = 0,\n            targetsToShow,\n            scale,\n            axis,\n            dummy,\n            svg;\n        if (withoutRecompute && $$.currentMaxTickWidths[id]) {\n            return $$.currentMaxTickWidths[id];\n        }\n        if ($$.svg) {\n            targetsToShow = $$.filterTargetsToShow($$.data.targets);\n            if (id === 'y') {\n                scale = $$.y.copy().domain($$.getYDomain(targetsToShow, 'y'));\n                axis = this.getYAxis(scale, $$.yOrient, config.axis_y_tick_format, $$.yAxisTickValues, false, true, true);\n            } else if (id === 'y2') {\n                scale = $$.y2.copy().domain($$.getYDomain(targetsToShow, 'y2'));\n                axis = this.getYAxis(scale, $$.y2Orient, config.axis_y2_tick_format, $$.y2AxisTickValues, false, true, true);\n            } else {\n                scale = $$.x.copy().domain($$.getXDomain(targetsToShow));\n                axis = this.getXAxis(scale, $$.xOrient, $$.xAxisTickFormat, $$.xAxisTickValues, false, true, true);\n                this.updateXAxisTickValues(targetsToShow, axis);\n            }\n            dummy = $$.d3.select('body').append('div').classed('c3', true);\n            svg = dummy.append(\"svg\").style('visibility', 'hidden').style('position', 'fixed').style('top', 0).style('left', 0), svg.append('g').call(axis).each(function () {\n                $$.d3.select(this).selectAll('text').each(function () {\n                    var box = this.getBoundingClientRect();\n                    if (maxWidth < box.width) {\n                        maxWidth = box.width;\n                    }\n                });\n                dummy.remove();\n            });\n        }\n        $$.currentMaxTickWidths[id] = maxWidth <= 0 ? $$.currentMaxTickWidths[id] : maxWidth;\n        return $$.currentMaxTickWidths[id];\n    };\n\n    c3_axis_fn.updateLabels = function updateLabels(withTransition) {\n        var $$ = this.owner;\n        var axisXLabel = $$.main.select('.' + CLASS.axisX + ' .' + CLASS.axisXLabel),\n            axisYLabel = $$.main.select('.' + CLASS.axisY + ' .' + CLASS.axisYLabel),\n            axisY2Label = $$.main.select('.' + CLASS.axisY2 + ' .' + CLASS.axisY2Label);\n        (withTransition ? axisXLabel.transition() : axisXLabel).attr(\"x\", this.xForXAxisLabel.bind(this)).attr(\"dx\", this.dxForXAxisLabel.bind(this)).attr(\"dy\", this.dyForXAxisLabel.bind(this)).text(this.textForXAxisLabel.bind(this));\n        (withTransition ? axisYLabel.transition() : axisYLabel).attr(\"x\", this.xForYAxisLabel.bind(this)).attr(\"dx\", this.dxForYAxisLabel.bind(this)).attr(\"dy\", this.dyForYAxisLabel.bind(this)).text(this.textForYAxisLabel.bind(this));\n        (withTransition ? axisY2Label.transition() : axisY2Label).attr(\"x\", this.xForY2AxisLabel.bind(this)).attr(\"dx\", this.dxForY2AxisLabel.bind(this)).attr(\"dy\", this.dyForY2AxisLabel.bind(this)).text(this.textForY2AxisLabel.bind(this));\n    };\n    c3_axis_fn.getPadding = function getPadding(padding, key, defaultValue, domainLength) {\n        var p = typeof padding === 'number' ? padding : padding[key];\n        if (!isValue(p)) {\n            return defaultValue;\n        }\n        if (padding.unit === 'ratio') {\n            return padding[key] * domainLength;\n        }\n        // assume padding is pixels if unit is not specified\n        return this.convertPixelsToAxisPadding(p, domainLength);\n    };\n    c3_axis_fn.convertPixelsToAxisPadding = function convertPixelsToAxisPadding(pixels, domainLength) {\n        var $$ = this.owner,\n            length = $$.config.axis_rotated ? $$.width : $$.height;\n        return domainLength * (pixels / length);\n    };\n    c3_axis_fn.generateTickValues = function generateTickValues(values, tickCount, forTimeSeries) {\n        var tickValues = values,\n            targetCount,\n            start,\n            end,\n            count,\n            interval,\n            i,\n            tickValue;\n        if (tickCount) {\n            targetCount = isFunction(tickCount) ? tickCount() : tickCount;\n            // compute ticks according to tickCount\n            if (targetCount === 1) {\n                tickValues = [values[0]];\n            } else if (targetCount === 2) {\n                tickValues = [values[0], values[values.length - 1]];\n            } else if (targetCount > 2) {\n                count = targetCount - 2;\n                start = values[0];\n                end = values[values.length - 1];\n                interval = (end - start) / (count + 1);\n                // re-construct unique values\n                tickValues = [start];\n                for (i = 0; i < count; i++) {\n                    tickValue = +start + interval * (i + 1);\n                    tickValues.push(forTimeSeries ? new Date(tickValue) : tickValue);\n                }\n                tickValues.push(end);\n            }\n        }\n        if (!forTimeSeries) {\n            tickValues = tickValues.sort(function (a, b) {\n                return a - b;\n            });\n        }\n        return tickValues;\n    };\n    c3_axis_fn.generateTransitions = function generateTransitions(duration) {\n        var $$ = this.owner,\n            axes = $$.axes;\n        return {\n            axisX: duration ? axes.x.transition().duration(duration) : axes.x,\n            axisY: duration ? axes.y.transition().duration(duration) : axes.y,\n            axisY2: duration ? axes.y2.transition().duration(duration) : axes.y2,\n            axisSubX: duration ? axes.subx.transition().duration(duration) : axes.subx\n        };\n    };\n    c3_axis_fn.redraw = function redraw(transitions, isHidden) {\n        var $$ = this.owner;\n        $$.axes.x.style(\"opacity\", isHidden ? 0 : 1);\n        $$.axes.y.style(\"opacity\", isHidden ? 0 : 1);\n        $$.axes.y2.style(\"opacity\", isHidden ? 0 : 1);\n        $$.axes.subx.style(\"opacity\", isHidden ? 0 : 1);\n        transitions.axisX.call($$.xAxis);\n        transitions.axisY.call($$.yAxis);\n        transitions.axisY2.call($$.y2Axis);\n        transitions.axisSubX.call($$.subXAxis);\n    };\n\n    var c3 = { version: \"0.4.23\" };\n\n    var c3_chart_fn;\n    var c3_chart_internal_fn;\n\n    function Component(owner, componentKey, fn) {\n        this.owner = owner;\n        c3.chart.internal[componentKey] = fn;\n    }\n\n    function Chart(config) {\n        var $$ = this.internal = new ChartInternal(this);\n        $$.loadConfig(config);\n\n        $$.beforeInit(config);\n        $$.init();\n        $$.afterInit(config);\n\n        // bind \"this\" to nested API\n        (function bindThis(fn, target, argThis) {\n            Object.keys(fn).forEach(function (key) {\n                target[key] = fn[key].bind(argThis);\n                if (Object.keys(fn[key]).length > 0) {\n                    bindThis(fn[key], target[key], argThis);\n                }\n            });\n        })(c3_chart_fn, this, this);\n    }\n\n    function ChartInternal(api) {\n        var $$ = this;\n        $$.d3 = window.d3 ? window.d3 : typeof require !== 'undefined' ? require(\"d3\") : undefined;\n        $$.api = api;\n        $$.config = $$.getDefaultConfig();\n        $$.data = {};\n        $$.cache = {};\n        $$.axes = {};\n    }\n\n    c3.generate = function (config) {\n        return new Chart(config);\n    };\n\n    c3.chart = {\n        fn: Chart.prototype,\n        internal: {\n            fn: ChartInternal.prototype\n        }\n    };\n    c3_chart_fn = c3.chart.fn;\n    c3_chart_internal_fn = c3.chart.internal.fn;\n\n    c3_chart_internal_fn.beforeInit = function () {\n        // can do something\n    };\n    c3_chart_internal_fn.afterInit = function () {\n        // can do something\n    };\n    c3_chart_internal_fn.init = function () {\n        var $$ = this,\n            config = $$.config;\n\n        $$.initParams();\n\n        if (config.data_url) {\n            $$.convertUrlToData(config.data_url, config.data_mimeType, config.data_headers, config.data_keys, $$.initWithData);\n        } else if (config.data_json) {\n            $$.initWithData($$.convertJsonToData(config.data_json, config.data_keys));\n        } else if (config.data_rows) {\n            $$.initWithData($$.convertRowsToData(config.data_rows));\n        } else if (config.data_columns) {\n            $$.initWithData($$.convertColumnsToData(config.data_columns));\n        } else {\n            throw Error('url or json or rows or columns is required.');\n        }\n    };\n\n    c3_chart_internal_fn.initParams = function () {\n        var $$ = this,\n            d3 = $$.d3,\n            config = $$.config;\n\n        // MEMO: clipId needs to be unique because it conflicts when multiple charts exist\n        $$.clipId = \"c3-\" + +new Date() + '-clip', $$.clipIdForXAxis = $$.clipId + '-xaxis', $$.clipIdForYAxis = $$.clipId + '-yaxis', $$.clipIdForGrid = $$.clipId + '-grid', $$.clipIdForSubchart = $$.clipId + '-subchart', $$.clipPath = $$.getClipPath($$.clipId), $$.clipPathForXAxis = $$.getClipPath($$.clipIdForXAxis), $$.clipPathForYAxis = $$.getClipPath($$.clipIdForYAxis);\n        $$.clipPathForGrid = $$.getClipPath($$.clipIdForGrid), $$.clipPathForSubchart = $$.getClipPath($$.clipIdForSubchart), $$.dragStart = null;\n        $$.dragging = false;\n        $$.flowing = false;\n        $$.cancelClick = false;\n        $$.mouseover = false;\n        $$.transiting = false;\n\n        $$.color = $$.generateColor();\n        $$.levelColor = $$.generateLevelColor();\n\n        $$.dataTimeFormat = config.data_xLocaltime ? d3.time.format : d3.time.format.utc;\n        $$.axisTimeFormat = config.axis_x_localtime ? d3.time.format : d3.time.format.utc;\n        $$.defaultAxisTimeFormat = $$.axisTimeFormat.multi([[\".%L\", function (d) {\n            return d.getMilliseconds();\n        }], [\":%S\", function (d) {\n            return d.getSeconds();\n        }], [\"%I:%M\", function (d) {\n            return d.getMinutes();\n        }], [\"%I %p\", function (d) {\n            return d.getHours();\n        }], [\"%-m/%-d\", function (d) {\n            return d.getDay() && d.getDate() !== 1;\n        }], [\"%-m/%-d\", function (d) {\n            return d.getDate() !== 1;\n        }], [\"%-m/%-d\", function (d) {\n            return d.getMonth();\n        }], [\"%Y/%-m/%-d\", function () {\n            return true;\n        }]]);\n\n        $$.hiddenTargetIds = [];\n        $$.hiddenLegendIds = [];\n        $$.focusedTargetIds = [];\n        $$.defocusedTargetIds = [];\n\n        $$.xOrient = config.axis_rotated ? config.axis_x_inner ? \"right\" : \"left\" : config.axis_x_inner ? \"top\" : \"bottom\";\n        $$.yOrient = config.axis_rotated ? config.axis_y_inner ? \"top\" : \"bottom\" : config.axis_y_inner ? \"right\" : \"left\";\n        $$.y2Orient = config.axis_rotated ? config.axis_y2_inner ? \"bottom\" : \"top\" : config.axis_y2_inner ? \"left\" : \"right\";\n        $$.subXOrient = config.axis_rotated ? \"left\" : \"bottom\";\n\n        $$.isLegendRight = config.legend_position === 'right';\n        $$.isLegendInset = config.legend_position === 'inset';\n        $$.isLegendTop = config.legend_inset_anchor === 'top-left' || config.legend_inset_anchor === 'top-right';\n        $$.isLegendLeft = config.legend_inset_anchor === 'top-left' || config.legend_inset_anchor === 'bottom-left';\n        $$.legendStep = 0;\n        $$.legendItemWidth = 0;\n        $$.legendItemHeight = 0;\n\n        $$.currentMaxTickWidths = {\n            x: 0,\n            y: 0,\n            y2: 0\n        };\n\n        $$.rotated_padding_left = 30;\n        $$.rotated_padding_right = config.axis_rotated && !config.axis_x_show ? 0 : 30;\n        $$.rotated_padding_top = 5;\n\n        $$.withoutFadeIn = {};\n\n        $$.intervalForObserveInserted = undefined;\n\n        $$.axes.subx = d3.selectAll([]); // needs when excluding subchart.js\n    };\n\n    c3_chart_internal_fn.initChartElements = function () {\n        if (this.initBar) {\n            this.initBar();\n        }\n        if (this.initLine) {\n            this.initLine();\n        }\n        if (this.initArc) {\n            this.initArc();\n        }\n        if (this.initGauge) {\n            this.initGauge();\n        }\n        if (this.initText) {\n            this.initText();\n        }\n    };\n\n    c3_chart_internal_fn.initWithData = function (data) {\n        var $$ = this,\n            d3 = $$.d3,\n            config = $$.config;\n        var defs,\n            main,\n            binding = true;\n\n        $$.axis = new Axis($$);\n\n        if ($$.initPie) {\n            $$.initPie();\n        }\n        if ($$.initBrush) {\n            $$.initBrush();\n        }\n        if ($$.initZoom) {\n            $$.initZoom();\n        }\n\n        if (!config.bindto) {\n            $$.selectChart = d3.selectAll([]);\n        } else if (typeof config.bindto.node === 'function') {\n            $$.selectChart = config.bindto;\n        } else {\n            $$.selectChart = d3.select(config.bindto);\n        }\n        if ($$.selectChart.empty()) {\n            $$.selectChart = d3.select(document.createElement('div')).style('opacity', 0);\n            $$.observeInserted($$.selectChart);\n            binding = false;\n        }\n        $$.selectChart.html(\"\").classed(\"c3\", true);\n\n        // Init data as targets\n        $$.data.xs = {};\n        $$.data.targets = $$.convertDataToTargets(data);\n\n        if (config.data_filter) {\n            $$.data.targets = $$.data.targets.filter(config.data_filter);\n        }\n\n        // Set targets to hide if needed\n        if (config.data_hide) {\n            $$.addHiddenTargetIds(config.data_hide === true ? $$.mapToIds($$.data.targets) : config.data_hide);\n        }\n        if (config.legend_hide) {\n            $$.addHiddenLegendIds(config.legend_hide === true ? $$.mapToIds($$.data.targets) : config.legend_hide);\n        }\n\n        // Init sizes and scales\n        $$.updateSizes();\n        $$.updateScales();\n\n        // Set domains for each scale\n        $$.x.domain(d3.extent($$.getXDomain($$.data.targets)));\n        $$.y.domain($$.getYDomain($$.data.targets, 'y'));\n        $$.y2.domain($$.getYDomain($$.data.targets, 'y2'));\n        $$.subX.domain($$.x.domain());\n        $$.subY.domain($$.y.domain());\n        $$.subY2.domain($$.y2.domain());\n\n        // Save original x domain for zoom update\n        $$.orgXDomain = $$.x.domain();\n\n        // Set initialized scales to brush and zoom\n        if ($$.brush) {\n            $$.brush.scale($$.subX);\n        }\n        if (config.zoom_enabled) {\n            $$.zoom.scale($$.x);\n        }\n\n        /*-- Basic Elements --*/\n\n        // Define svgs\n        $$.svg = $$.selectChart.append(\"svg\").style(\"overflow\", \"hidden\").on('mouseenter', function () {\n            return config.onmouseover.call($$);\n        }).on('mouseleave', function () {\n            return config.onmouseout.call($$);\n        });\n\n        if ($$.config.svg_classname) {\n            $$.svg.attr('class', $$.config.svg_classname);\n        }\n\n        // Define defs\n        defs = $$.svg.append(\"defs\");\n        $$.clipChart = $$.appendClip(defs, $$.clipId);\n        $$.clipXAxis = $$.appendClip(defs, $$.clipIdForXAxis);\n        $$.clipYAxis = $$.appendClip(defs, $$.clipIdForYAxis);\n        $$.clipGrid = $$.appendClip(defs, $$.clipIdForGrid);\n        $$.clipSubchart = $$.appendClip(defs, $$.clipIdForSubchart);\n        $$.updateSvgSize();\n\n        // Define regions\n        main = $$.main = $$.svg.append(\"g\").attr(\"transform\", $$.getTranslate('main'));\n\n        if ($$.initSubchart) {\n            $$.initSubchart();\n        }\n        if ($$.initTooltip) {\n            $$.initTooltip();\n        }\n        if ($$.initLegend) {\n            $$.initLegend();\n        }\n        if ($$.initTitle) {\n            $$.initTitle();\n        }\n\n        /*-- Main Region --*/\n\n        // text when empty\n        main.append(\"text\").attr(\"class\", CLASS.text + ' ' + CLASS.empty).attr(\"text-anchor\", \"middle\") // horizontal centering of text at x position in all browsers.\n        .attr(\"dominant-baseline\", \"middle\"); // vertical centering of text at y position in all browsers, except IE.\n\n        // Regions\n        $$.initRegion();\n\n        // Grids\n        $$.initGrid();\n\n        // Define g for chart area\n        main.append('g').attr(\"clip-path\", $$.clipPath).attr('class', CLASS.chart);\n\n        // Grid lines\n        if (config.grid_lines_front) {\n            $$.initGridLines();\n        }\n\n        // Cover whole with rects for events\n        $$.initEventRect();\n\n        // Define g for chart\n        $$.initChartElements();\n\n        // if zoom privileged, insert rect to forefront\n        // TODO: is this needed?\n        main.insert('rect', config.zoom_privileged ? null : 'g.' + CLASS.regions).attr('class', CLASS.zoomRect).attr('width', $$.width).attr('height', $$.height).style('opacity', 0).on(\"dblclick.zoom\", null);\n\n        // Set default extent if defined\n        if (config.axis_x_extent) {\n            $$.brush.extent($$.getDefaultExtent());\n        }\n\n        // Add Axis\n        $$.axis.init();\n\n        // Set targets\n        $$.updateTargets($$.data.targets);\n\n        // Draw with targets\n        if (binding) {\n            $$.updateDimension();\n            $$.config.oninit.call($$);\n            $$.redraw({\n                withTransition: false,\n                withTransform: true,\n                withUpdateXDomain: true,\n                withUpdateOrgXDomain: true,\n                withTransitionForAxis: false\n            });\n        }\n\n        // Bind resize event\n        $$.bindResize();\n\n        // export element of the chart\n        $$.api.element = $$.selectChart.node();\n    };\n\n    c3_chart_internal_fn.smoothLines = function (el, type) {\n        var $$ = this;\n        if (type === 'grid') {\n            el.each(function () {\n                var g = $$.d3.select(this),\n                    x1 = g.attr('x1'),\n                    x2 = g.attr('x2'),\n                    y1 = g.attr('y1'),\n                    y2 = g.attr('y2');\n                g.attr({\n                    'x1': Math.ceil(x1),\n                    'x2': Math.ceil(x2),\n                    'y1': Math.ceil(y1),\n                    'y2': Math.ceil(y2)\n                });\n            });\n        }\n    };\n\n    c3_chart_internal_fn.updateSizes = function () {\n        var $$ = this,\n            config = $$.config;\n        var legendHeight = $$.legend ? $$.getLegendHeight() : 0,\n            legendWidth = $$.legend ? $$.getLegendWidth() : 0,\n            legendHeightForBottom = $$.isLegendRight || $$.isLegendInset ? 0 : legendHeight,\n            hasArc = $$.hasArcType(),\n            xAxisHeight = config.axis_rotated || hasArc ? 0 : $$.getHorizontalAxisHeight('x'),\n            subchartHeight = config.subchart_show && !hasArc ? config.subchart_size_height + xAxisHeight : 0;\n\n        $$.currentWidth = $$.getCurrentWidth();\n        $$.currentHeight = $$.getCurrentHeight();\n\n        // for main\n        $$.margin = config.axis_rotated ? {\n            top: $$.getHorizontalAxisHeight('y2') + $$.getCurrentPaddingTop(),\n            right: hasArc ? 0 : $$.getCurrentPaddingRight(),\n            bottom: $$.getHorizontalAxisHeight('y') + legendHeightForBottom + $$.getCurrentPaddingBottom(),\n            left: subchartHeight + (hasArc ? 0 : $$.getCurrentPaddingLeft())\n        } : {\n            top: 4 + $$.getCurrentPaddingTop(), // for top tick text\n            right: hasArc ? 0 : $$.getCurrentPaddingRight(),\n            bottom: xAxisHeight + subchartHeight + legendHeightForBottom + $$.getCurrentPaddingBottom(),\n            left: hasArc ? 0 : $$.getCurrentPaddingLeft()\n        };\n\n        // for subchart\n        $$.margin2 = config.axis_rotated ? {\n            top: $$.margin.top,\n            right: NaN,\n            bottom: 20 + legendHeightForBottom,\n            left: $$.rotated_padding_left\n        } : {\n            top: $$.currentHeight - subchartHeight - legendHeightForBottom,\n            right: NaN,\n            bottom: xAxisHeight + legendHeightForBottom,\n            left: $$.margin.left\n        };\n\n        // for legend\n        $$.margin3 = {\n            top: 0,\n            right: NaN,\n            bottom: 0,\n            left: 0\n        };\n        if ($$.updateSizeForLegend) {\n            $$.updateSizeForLegend(legendHeight, legendWidth);\n        }\n\n        $$.width = $$.currentWidth - $$.margin.left - $$.margin.right;\n        $$.height = $$.currentHeight - $$.margin.top - $$.margin.bottom;\n        if ($$.width < 0) {\n            $$.width = 0;\n        }\n        if ($$.height < 0) {\n            $$.height = 0;\n        }\n\n        $$.width2 = config.axis_rotated ? $$.margin.left - $$.rotated_padding_left - $$.rotated_padding_right : $$.width;\n        $$.height2 = config.axis_rotated ? $$.height : $$.currentHeight - $$.margin2.top - $$.margin2.bottom;\n        if ($$.width2 < 0) {\n            $$.width2 = 0;\n        }\n        if ($$.height2 < 0) {\n            $$.height2 = 0;\n        }\n\n        // for arc\n        $$.arcWidth = $$.width - ($$.isLegendRight ? legendWidth + 10 : 0);\n        $$.arcHeight = $$.height - ($$.isLegendRight ? 0 : 10);\n        if ($$.hasType('gauge') && !config.gauge_fullCircle) {\n            $$.arcHeight += $$.height - $$.getGaugeLabelHeight();\n        }\n        if ($$.updateRadius) {\n            $$.updateRadius();\n        }\n\n        if ($$.isLegendRight && hasArc) {\n            $$.margin3.left = $$.arcWidth / 2 + $$.radiusExpanded * 1.1;\n        }\n    };\n\n    c3_chart_internal_fn.updateTargets = function (targets) {\n        var $$ = this;\n\n        /*-- Main --*/\n\n        //-- Text --//\n        $$.updateTargetsForText(targets);\n\n        //-- Bar --//\n        $$.updateTargetsForBar(targets);\n\n        //-- Line --//\n        $$.updateTargetsForLine(targets);\n\n        //-- Arc --//\n        if ($$.hasArcType() && $$.updateTargetsForArc) {\n            $$.updateTargetsForArc(targets);\n        }\n\n        /*-- Sub --*/\n\n        if ($$.updateTargetsForSubchart) {\n            $$.updateTargetsForSubchart(targets);\n        }\n\n        // Fade-in each chart\n        $$.showTargets();\n    };\n    c3_chart_internal_fn.showTargets = function () {\n        var $$ = this;\n        $$.svg.selectAll('.' + CLASS.target).filter(function (d) {\n            return $$.isTargetToShow(d.id);\n        }).transition().duration($$.config.transition_duration).style(\"opacity\", 1);\n    };\n\n    c3_chart_internal_fn.redraw = function (options, transitions) {\n        var $$ = this,\n            main = $$.main,\n            d3 = $$.d3,\n            config = $$.config;\n        var areaIndices = $$.getShapeIndices($$.isAreaType),\n            barIndices = $$.getShapeIndices($$.isBarType),\n            lineIndices = $$.getShapeIndices($$.isLineType);\n        var withY, withSubchart, withTransition, withTransitionForExit, withTransitionForAxis, withTransform, withUpdateXDomain, withUpdateOrgXDomain, withTrimXDomain, withLegend, withEventRect, withDimension, withUpdateXAxis;\n        var hideAxis = $$.hasArcType();\n        var drawArea, drawBar, drawLine, xForText, yForText;\n        var duration, durationForExit, durationForAxis;\n        var waitForDraw, flow;\n        var targetsToShow = $$.filterTargetsToShow($$.data.targets),\n            tickValues,\n            i,\n            intervalForCulling,\n            xDomainForZoom;\n        var xv = $$.xv.bind($$),\n            cx,\n            cy;\n\n        options = options || {};\n        withY = getOption(options, \"withY\", true);\n        withSubchart = getOption(options, \"withSubchart\", true);\n        withTransition = getOption(options, \"withTransition\", true);\n        withTransform = getOption(options, \"withTransform\", false);\n        withUpdateXDomain = getOption(options, \"withUpdateXDomain\", false);\n        withUpdateOrgXDomain = getOption(options, \"withUpdateOrgXDomain\", false);\n        withTrimXDomain = getOption(options, \"withTrimXDomain\", true);\n        withUpdateXAxis = getOption(options, \"withUpdateXAxis\", withUpdateXDomain);\n        withLegend = getOption(options, \"withLegend\", false);\n        withEventRect = getOption(options, \"withEventRect\", true);\n        withDimension = getOption(options, \"withDimension\", true);\n        withTransitionForExit = getOption(options, \"withTransitionForExit\", withTransition);\n        withTransitionForAxis = getOption(options, \"withTransitionForAxis\", withTransition);\n\n        duration = withTransition ? config.transition_duration : 0;\n        durationForExit = withTransitionForExit ? duration : 0;\n        durationForAxis = withTransitionForAxis ? duration : 0;\n\n        transitions = transitions || $$.axis.generateTransitions(durationForAxis);\n\n        // update legend and transform each g\n        if (withLegend && config.legend_show) {\n            $$.updateLegend($$.mapToIds($$.data.targets), options, transitions);\n        } else if (withDimension) {\n            // need to update dimension (e.g. axis.y.tick.values) because y tick values should change\n            // no need to update axis in it because they will be updated in redraw()\n            $$.updateDimension(true);\n        }\n\n        // MEMO: needed for grids calculation\n        if ($$.isCategorized() && targetsToShow.length === 0) {\n            $$.x.domain([0, $$.axes.x.selectAll('.tick').size()]);\n        }\n\n        if (targetsToShow.length) {\n            $$.updateXDomain(targetsToShow, withUpdateXDomain, withUpdateOrgXDomain, withTrimXDomain);\n            if (!config.axis_x_tick_values) {\n                tickValues = $$.axis.updateXAxisTickValues(targetsToShow);\n            }\n        } else {\n            $$.xAxis.tickValues([]);\n            $$.subXAxis.tickValues([]);\n        }\n\n        if (config.zoom_rescale && !options.flow) {\n            xDomainForZoom = $$.x.orgDomain();\n        }\n\n        $$.y.domain($$.getYDomain(targetsToShow, 'y', xDomainForZoom));\n        $$.y2.domain($$.getYDomain(targetsToShow, 'y2', xDomainForZoom));\n\n        if (!config.axis_y_tick_values && config.axis_y_tick_count) {\n            $$.yAxis.tickValues($$.axis.generateTickValues($$.y.domain(), config.axis_y_tick_count));\n        }\n        if (!config.axis_y2_tick_values && config.axis_y2_tick_count) {\n            $$.y2Axis.tickValues($$.axis.generateTickValues($$.y2.domain(), config.axis_y2_tick_count));\n        }\n\n        // axes\n        $$.axis.redraw(transitions, hideAxis);\n\n        // Update axis label\n        $$.axis.updateLabels(withTransition);\n\n        // show/hide if manual culling needed\n        if ((withUpdateXDomain || withUpdateXAxis) && targetsToShow.length) {\n            if (config.axis_x_tick_culling && tickValues) {\n                for (i = 1; i < tickValues.length; i++) {\n                    if (tickValues.length / i < config.axis_x_tick_culling_max) {\n                        intervalForCulling = i;\n                        break;\n                    }\n                }\n                $$.svg.selectAll('.' + CLASS.axisX + ' .tick text').each(function (e) {\n                    var index = tickValues.indexOf(e);\n                    if (index >= 0) {\n                        d3.select(this).style('display', index % intervalForCulling ? 'none' : 'block');\n                    }\n                });\n            } else {\n                $$.svg.selectAll('.' + CLASS.axisX + ' .tick text').style('display', 'block');\n            }\n        }\n\n        // setup drawer - MEMO: these must be called after axis updated\n        drawArea = $$.generateDrawArea ? $$.generateDrawArea(areaIndices, false) : undefined;\n        drawBar = $$.generateDrawBar ? $$.generateDrawBar(barIndices) : undefined;\n        drawLine = $$.generateDrawLine ? $$.generateDrawLine(lineIndices, false) : undefined;\n        xForText = $$.generateXYForText(areaIndices, barIndices, lineIndices, true);\n        yForText = $$.generateXYForText(areaIndices, barIndices, lineIndices, false);\n\n        // Update sub domain\n        if (withY) {\n            $$.subY.domain($$.getYDomain(targetsToShow, 'y'));\n            $$.subY2.domain($$.getYDomain(targetsToShow, 'y2'));\n        }\n\n        // xgrid focus\n        $$.updateXgridFocus();\n\n        // Data empty label positioning and text.\n        main.select(\"text.\" + CLASS.text + '.' + CLASS.empty).attr(\"x\", $$.width / 2).attr(\"y\", $$.height / 2).text(config.data_empty_label_text).transition().style('opacity', targetsToShow.length ? 0 : 1);\n\n        // grid\n        $$.updateGrid(duration);\n\n        // rect for regions\n        $$.updateRegion(duration);\n\n        // bars\n        $$.updateBar(durationForExit);\n\n        // lines, areas and cricles\n        $$.updateLine(durationForExit);\n        $$.updateArea(durationForExit);\n        $$.updateCircle();\n\n        // text\n        if ($$.hasDataLabel()) {\n            $$.updateText(durationForExit);\n        }\n\n        // title\n        if ($$.redrawTitle) {\n            $$.redrawTitle();\n        }\n\n        // arc\n        if ($$.redrawArc) {\n            $$.redrawArc(duration, durationForExit, withTransform);\n        }\n\n        // subchart\n        if ($$.redrawSubchart) {\n            $$.redrawSubchart(withSubchart, transitions, duration, durationForExit, areaIndices, barIndices, lineIndices);\n        }\n\n        // circles for select\n        main.selectAll('.' + CLASS.selectedCircles).filter($$.isBarType.bind($$)).selectAll('circle').remove();\n\n        // event rects will redrawn when flow called\n        if (config.interaction_enabled && !options.flow && withEventRect) {\n            $$.redrawEventRect();\n            if ($$.updateZoom) {\n                $$.updateZoom();\n            }\n        }\n\n        // update circleY based on updated parameters\n        $$.updateCircleY();\n\n        // generate circle x/y functions depending on updated params\n        cx = ($$.config.axis_rotated ? $$.circleY : $$.circleX).bind($$);\n        cy = ($$.config.axis_rotated ? $$.circleX : $$.circleY).bind($$);\n\n        if (options.flow) {\n            flow = $$.generateFlow({\n                targets: targetsToShow,\n                flow: options.flow,\n                duration: options.flow.duration,\n                drawBar: drawBar,\n                drawLine: drawLine,\n                drawArea: drawArea,\n                cx: cx,\n                cy: cy,\n                xv: xv,\n                xForText: xForText,\n                yForText: yForText\n            });\n        }\n\n        if ((duration || flow) && $$.isTabVisible()) {\n            // Only use transition if tab visible. See #938.\n            // transition should be derived from one transition\n            d3.transition().duration(duration).each(function () {\n                var transitionsToWait = [];\n\n                // redraw and gather transitions\n                [$$.redrawBar(drawBar, true), $$.redrawLine(drawLine, true), $$.redrawArea(drawArea, true), $$.redrawCircle(cx, cy, true), $$.redrawText(xForText, yForText, options.flow, true), $$.redrawRegion(true), $$.redrawGrid(true)].forEach(function (transitions) {\n                    transitions.forEach(function (transition) {\n                        transitionsToWait.push(transition);\n                    });\n                });\n\n                // Wait for end of transitions to call flow and onrendered callback\n                waitForDraw = $$.generateWait();\n                transitionsToWait.forEach(function (t) {\n                    waitForDraw.add(t);\n                });\n            }).call(waitForDraw, function () {\n                if (flow) {\n                    flow();\n                }\n                if (config.onrendered) {\n                    config.onrendered.call($$);\n                }\n            });\n        } else {\n            $$.redrawBar(drawBar);\n            $$.redrawLine(drawLine);\n            $$.redrawArea(drawArea);\n            $$.redrawCircle(cx, cy);\n            $$.redrawText(xForText, yForText, options.flow);\n            $$.redrawRegion();\n            $$.redrawGrid();\n            if (config.onrendered) {\n                config.onrendered.call($$);\n            }\n        }\n\n        // update fadein condition\n        $$.mapToIds($$.data.targets).forEach(function (id) {\n            $$.withoutFadeIn[id] = true;\n        });\n    };\n\n    c3_chart_internal_fn.updateAndRedraw = function (options) {\n        var $$ = this,\n            config = $$.config,\n            transitions;\n        options = options || {};\n        // same with redraw\n        options.withTransition = getOption(options, \"withTransition\", true);\n        options.withTransform = getOption(options, \"withTransform\", false);\n        options.withLegend = getOption(options, \"withLegend\", false);\n        // NOT same with redraw\n        options.withUpdateXDomain = true;\n        options.withUpdateOrgXDomain = true;\n        options.withTransitionForExit = false;\n        options.withTransitionForTransform = getOption(options, \"withTransitionForTransform\", options.withTransition);\n        // MEMO: this needs to be called before updateLegend and it means this ALWAYS needs to be called)\n        $$.updateSizes();\n        // MEMO: called in updateLegend in redraw if withLegend\n        if (!(options.withLegend && config.legend_show)) {\n            transitions = $$.axis.generateTransitions(options.withTransitionForAxis ? config.transition_duration : 0);\n            // Update scales\n            $$.updateScales();\n            $$.updateSvgSize();\n            // Update g positions\n            $$.transformAll(options.withTransitionForTransform, transitions);\n        }\n        // Draw with new sizes & scales\n        $$.redraw(options, transitions);\n    };\n    c3_chart_internal_fn.redrawWithoutRescale = function () {\n        this.redraw({\n            withY: false,\n            withSubchart: false,\n            withEventRect: false,\n            withTransitionForAxis: false\n        });\n    };\n\n    c3_chart_internal_fn.isTimeSeries = function () {\n        return this.config.axis_x_type === 'timeseries';\n    };\n    c3_chart_internal_fn.isCategorized = function () {\n        return this.config.axis_x_type.indexOf('categor') >= 0;\n    };\n    c3_chart_internal_fn.isCustomX = function () {\n        var $$ = this,\n            config = $$.config;\n        return !$$.isTimeSeries() && (config.data_x || notEmpty(config.data_xs));\n    };\n\n    c3_chart_internal_fn.isTimeSeriesY = function () {\n        return this.config.axis_y_type === 'timeseries';\n    };\n\n    c3_chart_internal_fn.getTranslate = function (target) {\n        var $$ = this,\n            config = $$.config,\n            x,\n            y;\n        if (target === 'main') {\n            x = asHalfPixel($$.margin.left);\n            y = asHalfPixel($$.margin.top);\n        } else if (target === 'context') {\n            x = asHalfPixel($$.margin2.left);\n            y = asHalfPixel($$.margin2.top);\n        } else if (target === 'legend') {\n            x = $$.margin3.left;\n            y = $$.margin3.top;\n        } else if (target === 'x') {\n            x = 0;\n            y = config.axis_rotated ? 0 : $$.height;\n        } else if (target === 'y') {\n            x = 0;\n            y = config.axis_rotated ? $$.height : 0;\n        } else if (target === 'y2') {\n            x = config.axis_rotated ? 0 : $$.width;\n            y = config.axis_rotated ? 1 : 0;\n        } else if (target === 'subx') {\n            x = 0;\n            y = config.axis_rotated ? 0 : $$.height2;\n        } else if (target === 'arc') {\n            x = $$.arcWidth / 2;\n            y = $$.arcHeight / 2 - ($$.hasType('gauge') ? 6 : 0); // to prevent wrong display of min and max label\n        }\n        return \"translate(\" + x + \",\" + y + \")\";\n    };\n    c3_chart_internal_fn.initialOpacity = function (d) {\n        return d.value !== null && this.withoutFadeIn[d.id] ? 1 : 0;\n    };\n    c3_chart_internal_fn.initialOpacityForCircle = function (d) {\n        return d.value !== null && this.withoutFadeIn[d.id] ? this.opacityForCircle(d) : 0;\n    };\n    c3_chart_internal_fn.opacityForCircle = function (d) {\n        var isPointShouldBeShown = isFunction(this.config.point_show) ? this.config.point_show(d) : this.config.point_show;\n        var opacity = isPointShouldBeShown ? 1 : 0;\n        return isValue(d.value) ? this.isScatterType(d) ? 0.5 : opacity : 0;\n    };\n    c3_chart_internal_fn.opacityForText = function () {\n        return this.hasDataLabel() ? 1 : 0;\n    };\n    c3_chart_internal_fn.xx = function (d) {\n        return d ? this.x(d.x) : null;\n    };\n    c3_chart_internal_fn.xv = function (d) {\n        var $$ = this,\n            value = d.value;\n        if ($$.isTimeSeries()) {\n            value = $$.parseDate(d.value);\n        } else if ($$.isCategorized() && typeof d.value === 'string') {\n            value = $$.config.axis_x_categories.indexOf(d.value);\n        }\n        return Math.ceil($$.x(value));\n    };\n    c3_chart_internal_fn.yv = function (d) {\n        var $$ = this,\n            yScale = d.axis && d.axis === 'y2' ? $$.y2 : $$.y;\n        return Math.ceil(yScale(d.value));\n    };\n    c3_chart_internal_fn.subxx = function (d) {\n        return d ? this.subX(d.x) : null;\n    };\n\n    c3_chart_internal_fn.transformMain = function (withTransition, transitions) {\n        var $$ = this,\n            xAxis,\n            yAxis,\n            y2Axis;\n        if (transitions && transitions.axisX) {\n            xAxis = transitions.axisX;\n        } else {\n            xAxis = $$.main.select('.' + CLASS.axisX);\n            if (withTransition) {\n                xAxis = xAxis.transition();\n            }\n        }\n        if (transitions && transitions.axisY) {\n            yAxis = transitions.axisY;\n        } else {\n            yAxis = $$.main.select('.' + CLASS.axisY);\n            if (withTransition) {\n                yAxis = yAxis.transition();\n            }\n        }\n        if (transitions && transitions.axisY2) {\n            y2Axis = transitions.axisY2;\n        } else {\n            y2Axis = $$.main.select('.' + CLASS.axisY2);\n            if (withTransition) {\n                y2Axis = y2Axis.transition();\n            }\n        }\n        (withTransition ? $$.main.transition() : $$.main).attr(\"transform\", $$.getTranslate('main'));\n        xAxis.attr(\"transform\", $$.getTranslate('x'));\n        yAxis.attr(\"transform\", $$.getTranslate('y'));\n        y2Axis.attr(\"transform\", $$.getTranslate('y2'));\n        $$.main.select('.' + CLASS.chartArcs).attr(\"transform\", $$.getTranslate('arc'));\n    };\n    c3_chart_internal_fn.transformAll = function (withTransition, transitions) {\n        var $$ = this;\n        $$.transformMain(withTransition, transitions);\n        if ($$.config.subchart_show) {\n            $$.transformContext(withTransition, transitions);\n        }\n        if ($$.legend) {\n            $$.transformLegend(withTransition);\n        }\n    };\n\n    c3_chart_internal_fn.updateSvgSize = function () {\n        var $$ = this,\n            brush = $$.svg.select(\".c3-brush .background\");\n        $$.svg.attr('width', $$.currentWidth).attr('height', $$.currentHeight);\n        $$.svg.selectAll(['#' + $$.clipId, '#' + $$.clipIdForGrid]).select('rect').attr('width', $$.width).attr('height', $$.height);\n        $$.svg.select('#' + $$.clipIdForXAxis).select('rect').attr('x', $$.getXAxisClipX.bind($$)).attr('y', $$.getXAxisClipY.bind($$)).attr('width', $$.getXAxisClipWidth.bind($$)).attr('height', $$.getXAxisClipHeight.bind($$));\n        $$.svg.select('#' + $$.clipIdForYAxis).select('rect').attr('x', $$.getYAxisClipX.bind($$)).attr('y', $$.getYAxisClipY.bind($$)).attr('width', $$.getYAxisClipWidth.bind($$)).attr('height', $$.getYAxisClipHeight.bind($$));\n        $$.svg.select('#' + $$.clipIdForSubchart).select('rect').attr('width', $$.width).attr('height', brush.size() ? brush.attr('height') : 0);\n        $$.svg.select('.' + CLASS.zoomRect).attr('width', $$.width).attr('height', $$.height);\n        // MEMO: parent div's height will be bigger than svg when <!DOCTYPE html>\n        $$.selectChart.style('max-height', $$.currentHeight + \"px\");\n    };\n\n    c3_chart_internal_fn.updateDimension = function (withoutAxis) {\n        var $$ = this;\n        if (!withoutAxis) {\n            if ($$.config.axis_rotated) {\n                $$.axes.x.call($$.xAxis);\n                $$.axes.subx.call($$.subXAxis);\n            } else {\n                $$.axes.y.call($$.yAxis);\n                $$.axes.y2.call($$.y2Axis);\n            }\n        }\n        $$.updateSizes();\n        $$.updateScales();\n        $$.updateSvgSize();\n        $$.transformAll(false);\n    };\n\n    c3_chart_internal_fn.observeInserted = function (selection) {\n        var $$ = this,\n            observer;\n        if (typeof MutationObserver === 'undefined') {\n            window.console.error(\"MutationObserver not defined.\");\n            return;\n        }\n        observer = new MutationObserver(function (mutations) {\n            mutations.forEach(function (mutation) {\n                if (mutation.type === 'childList' && mutation.previousSibling) {\n                    observer.disconnect();\n                    // need to wait for completion of load because size calculation requires the actual sizes determined after that completion\n                    $$.intervalForObserveInserted = window.setInterval(function () {\n                        // parentNode will NOT be null when completed\n                        if (selection.node().parentNode) {\n                            window.clearInterval($$.intervalForObserveInserted);\n                            $$.updateDimension();\n                            if ($$.brush) {\n                                $$.brush.update();\n                            }\n                            $$.config.oninit.call($$);\n                            $$.redraw({\n                                withTransform: true,\n                                withUpdateXDomain: true,\n                                withUpdateOrgXDomain: true,\n                                withTransition: false,\n                                withTransitionForTransform: false,\n                                withLegend: true\n                            });\n                            selection.transition().style('opacity', 1);\n                        }\n                    }, 10);\n                }\n            });\n        });\n        observer.observe(selection.node(), { attributes: true, childList: true, characterData: true });\n    };\n\n    c3_chart_internal_fn.bindResize = function () {\n        var $$ = this,\n            config = $$.config;\n\n        $$.resizeFunction = $$.generateResize(); // need to call .remove\n\n        $$.resizeFunction.add(function () {\n            config.onresize.call($$);\n        });\n        if (config.resize_auto) {\n            $$.resizeFunction.add(function () {\n                if ($$.resizeTimeout !== undefined) {\n                    window.clearTimeout($$.resizeTimeout);\n                }\n                $$.resizeTimeout = window.setTimeout(function () {\n                    delete $$.resizeTimeout;\n                    $$.api.flush();\n                }, 100);\n            });\n        }\n        $$.resizeFunction.add(function () {\n            config.onresized.call($$);\n        });\n\n        $$.resizeIfElementDisplayed = function () {\n            // if element not displayed skip it\n            if ($$.api == null || !$$.api.element.offsetParent) {\n                return;\n            }\n\n            $$.resizeFunction();\n        };\n\n        if (window.attachEvent) {\n            window.attachEvent('onresize', $$.resizeIfElementDisplayed);\n        } else if (window.addEventListener) {\n            window.addEventListener('resize', $$.resizeIfElementDisplayed, false);\n        } else {\n            // fallback to this, if this is a very old browser\n            var wrapper = window.onresize;\n            if (!wrapper) {\n                // create a wrapper that will call all charts\n                wrapper = $$.generateResize();\n            } else if (!wrapper.add || !wrapper.remove) {\n                // there is already a handler registered, make sure we call it too\n                wrapper = $$.generateResize();\n                wrapper.add(window.onresize);\n            }\n            // add this graph to the wrapper, we will be removed if the user calls destroy\n            wrapper.add($$.resizeFunction);\n            window.onresize = function () {\n                // if element not displayed skip it\n                if (!$$.api.element.offsetParent) {\n                    return;\n                }\n\n                wrapper();\n            };\n        }\n    };\n\n    c3_chart_internal_fn.generateResize = function () {\n        var resizeFunctions = [];\n        function callResizeFunctions() {\n            resizeFunctions.forEach(function (f) {\n                f();\n            });\n        }\n        callResizeFunctions.add = function (f) {\n            resizeFunctions.push(f);\n        };\n        callResizeFunctions.remove = function (f) {\n            for (var i = 0; i < resizeFunctions.length; i++) {\n                if (resizeFunctions[i] === f) {\n                    resizeFunctions.splice(i, 1);\n                    break;\n                }\n            }\n        };\n        return callResizeFunctions;\n    };\n\n    c3_chart_internal_fn.endall = function (transition, callback) {\n        var n = 0;\n        transition.each(function () {\n            ++n;\n        }).each(\"end\", function () {\n            if (! --n) {\n                callback.apply(this, arguments);\n            }\n        });\n    };\n    c3_chart_internal_fn.generateWait = function () {\n        var transitionsToWait = [],\n            f = function f(transition, callback) {\n            var timer = setInterval(function () {\n                var done = 0;\n                transitionsToWait.forEach(function (t) {\n                    if (t.empty()) {\n                        done += 1;\n                        return;\n                    }\n                    try {\n                        t.transition();\n                    } catch (e) {\n                        done += 1;\n                    }\n                });\n                if (done === transitionsToWait.length) {\n                    clearInterval(timer);\n                    if (callback) {\n                        callback();\n                    }\n                }\n            }, 10);\n        };\n        f.add = function (transition) {\n            transitionsToWait.push(transition);\n        };\n        return f;\n    };\n\n    c3_chart_internal_fn.parseDate = function (date) {\n        var $$ = this,\n            parsedDate;\n        if (date instanceof Date) {\n            parsedDate = date;\n        } else if (typeof date === 'string') {\n            parsedDate = $$.dataTimeFormat($$.config.data_xFormat).parse(date);\n        } else if ((typeof date === 'undefined' ? 'undefined' : _typeof(date)) === 'object') {\n            parsedDate = new Date(+date);\n        } else if (typeof date === 'number' && !isNaN(date)) {\n            parsedDate = new Date(+date);\n        }\n        if (!parsedDate || isNaN(+parsedDate)) {\n            window.console.error(\"Failed to parse x '\" + date + \"' to Date object\");\n        }\n        return parsedDate;\n    };\n\n    c3_chart_internal_fn.isTabVisible = function () {\n        var hidden;\n        if (typeof document.hidden !== \"undefined\") {\n            // Opera 12.10 and Firefox 18 and later support\n            hidden = \"hidden\";\n        } else if (typeof document.mozHidden !== \"undefined\") {\n            hidden = \"mozHidden\";\n        } else if (typeof document.msHidden !== \"undefined\") {\n            hidden = \"msHidden\";\n        } else if (typeof document.webkitHidden !== \"undefined\") {\n            hidden = \"webkitHidden\";\n        }\n\n        return document[hidden] ? false : true;\n    };\n\n    c3_chart_internal_fn.isValue = isValue;\n    c3_chart_internal_fn.isFunction = isFunction;\n    c3_chart_internal_fn.isString = isString;\n    c3_chart_internal_fn.isUndefined = isUndefined;\n    c3_chart_internal_fn.isDefined = isDefined;\n    c3_chart_internal_fn.ceil10 = ceil10;\n    c3_chart_internal_fn.asHalfPixel = asHalfPixel;\n    c3_chart_internal_fn.diffDomain = diffDomain;\n    c3_chart_internal_fn.isEmpty = isEmpty;\n    c3_chart_internal_fn.notEmpty = notEmpty;\n    c3_chart_internal_fn.notEmpty = notEmpty;\n    c3_chart_internal_fn.getOption = getOption;\n    c3_chart_internal_fn.hasValue = hasValue;\n    c3_chart_internal_fn.sanitise = sanitise;\n    c3_chart_internal_fn.getPathBox = getPathBox;\n    c3_chart_internal_fn.CLASS = CLASS;\n\n    /* jshint ignore:start */\n\n    // PhantomJS doesn't have support for Function.prototype.bind, which has caused confusion. Use\n    // this polyfill to avoid the confusion.\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind#Polyfill\n\n    if (!Function.prototype.bind) {\n        Function.prototype.bind = function (oThis) {\n            if (typeof this !== 'function') {\n                // closest thing possible to the ECMAScript 5\n                // internal IsCallable function\n                throw new TypeError('Function.prototype.bind - what is trying to be bound is not callable');\n            }\n\n            var aArgs = Array.prototype.slice.call(arguments, 1),\n                fToBind = this,\n                fNOP = function fNOP() {},\n                fBound = function fBound() {\n                return fToBind.apply(this instanceof fNOP ? this : oThis, aArgs.concat(Array.prototype.slice.call(arguments)));\n            };\n\n            fNOP.prototype = this.prototype;\n            fBound.prototype = new fNOP();\n\n            return fBound;\n        };\n    }\n\n    // SVGPathSeg API polyfill\n    // https://github.com/progers/pathseg\n    //\n    // This is a drop-in replacement for the SVGPathSeg and SVGPathSegList APIs that were removed from\n    // SVG2 (https://lists.w3.org/Archives/Public/www-svg/2015Jun/0044.html), including the latest spec\n    // changes which were implemented in Firefox 43 and Chrome 46.\n\n    (function () {\n\n        if (!(\"SVGPathSeg\" in window)) {\n            // Spec: http://www.w3.org/TR/SVG11/single-page.html#paths-InterfaceSVGPathSeg\n            window.SVGPathSeg = function (type, typeAsLetter, owningPathSegList) {\n                this.pathSegType = type;\n                this.pathSegTypeAsLetter = typeAsLetter;\n                this._owningPathSegList = owningPathSegList;\n            };\n\n            window.SVGPathSeg.prototype.classname = \"SVGPathSeg\";\n\n            window.SVGPathSeg.PATHSEG_UNKNOWN = 0;\n            window.SVGPathSeg.PATHSEG_CLOSEPATH = 1;\n            window.SVGPathSeg.PATHSEG_MOVETO_ABS = 2;\n            window.SVGPathSeg.PATHSEG_MOVETO_REL = 3;\n            window.SVGPathSeg.PATHSEG_LINETO_ABS = 4;\n            window.SVGPathSeg.PATHSEG_LINETO_REL = 5;\n            window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_ABS = 6;\n            window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_REL = 7;\n            window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_ABS = 8;\n            window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_REL = 9;\n            window.SVGPathSeg.PATHSEG_ARC_ABS = 10;\n            window.SVGPathSeg.PATHSEG_ARC_REL = 11;\n            window.SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_ABS = 12;\n            window.SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_REL = 13;\n            window.SVGPathSeg.PATHSEG_LINETO_VERTICAL_ABS = 14;\n            window.SVGPathSeg.PATHSEG_LINETO_VERTICAL_REL = 15;\n            window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_ABS = 16;\n            window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_REL = 17;\n            window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS = 18;\n            window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL = 19;\n\n            // Notify owning PathSegList on any changes so they can be synchronized back to the path element.\n            window.SVGPathSeg.prototype._segmentChanged = function () {\n                if (this._owningPathSegList) this._owningPathSegList.segmentChanged(this);\n            };\n\n            window.SVGPathSegClosePath = function (owningPathSegList) {\n                window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_CLOSEPATH, \"z\", owningPathSegList);\n            };\n            window.SVGPathSegClosePath.prototype = Object.create(window.SVGPathSeg.prototype);\n            window.SVGPathSegClosePath.prototype.toString = function () {\n                return \"[object SVGPathSegClosePath]\";\n            };\n            window.SVGPathSegClosePath.prototype._asPathString = function () {\n                return this.pathSegTypeAsLetter;\n            };\n            window.SVGPathSegClosePath.prototype.clone = function () {\n                return new window.SVGPathSegClosePath(undefined);\n            };\n\n            window.SVGPathSegMovetoAbs = function (owningPathSegList, x, y) {\n                window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_MOVETO_ABS, \"M\", owningPathSegList);\n                this._x = x;\n                this._y = y;\n            };\n            window.SVGPathSegMovetoAbs.prototype = Object.create(window.SVGPathSeg.prototype);\n            window.SVGPathSegMovetoAbs.prototype.toString = function () {\n                return \"[object SVGPathSegMovetoAbs]\";\n            };\n            window.SVGPathSegMovetoAbs.prototype._asPathString = function () {\n                return this.pathSegTypeAsLetter + \" \" + this._x + \" \" + this._y;\n            };\n            window.SVGPathSegMovetoAbs.prototype.clone = function () {\n                return new window.SVGPathSegMovetoAbs(undefined, this._x, this._y);\n            };\n            Object.defineProperty(window.SVGPathSegMovetoAbs.prototype, \"x\", { get: function get() {\n                    return this._x;\n                }, set: function set(x) {\n                    this._x = x;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegMovetoAbs.prototype, \"y\", { get: function get() {\n                    return this._y;\n                }, set: function set(y) {\n                    this._y = y;this._segmentChanged();\n                }, enumerable: true });\n\n            window.SVGPathSegMovetoRel = function (owningPathSegList, x, y) {\n                window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_MOVETO_REL, \"m\", owningPathSegList);\n                this._x = x;\n                this._y = y;\n            };\n            window.SVGPathSegMovetoRel.prototype = Object.create(window.SVGPathSeg.prototype);\n            window.SVGPathSegMovetoRel.prototype.toString = function () {\n                return \"[object SVGPathSegMovetoRel]\";\n            };\n            window.SVGPathSegMovetoRel.prototype._asPathString = function () {\n                return this.pathSegTypeAsLetter + \" \" + this._x + \" \" + this._y;\n            };\n            window.SVGPathSegMovetoRel.prototype.clone = function () {\n                return new window.SVGPathSegMovetoRel(undefined, this._x, this._y);\n            };\n            Object.defineProperty(window.SVGPathSegMovetoRel.prototype, \"x\", { get: function get() {\n                    return this._x;\n                }, set: function set(x) {\n                    this._x = x;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegMovetoRel.prototype, \"y\", { get: function get() {\n                    return this._y;\n                }, set: function set(y) {\n                    this._y = y;this._segmentChanged();\n                }, enumerable: true });\n\n            window.SVGPathSegLinetoAbs = function (owningPathSegList, x, y) {\n                window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_LINETO_ABS, \"L\", owningPathSegList);\n                this._x = x;\n                this._y = y;\n            };\n            window.SVGPathSegLinetoAbs.prototype = Object.create(window.SVGPathSeg.prototype);\n            window.SVGPathSegLinetoAbs.prototype.toString = function () {\n                return \"[object SVGPathSegLinetoAbs]\";\n            };\n            window.SVGPathSegLinetoAbs.prototype._asPathString = function () {\n                return this.pathSegTypeAsLetter + \" \" + this._x + \" \" + this._y;\n            };\n            window.SVGPathSegLinetoAbs.prototype.clone = function () {\n                return new window.SVGPathSegLinetoAbs(undefined, this._x, this._y);\n            };\n            Object.defineProperty(window.SVGPathSegLinetoAbs.prototype, \"x\", { get: function get() {\n                    return this._x;\n                }, set: function set(x) {\n                    this._x = x;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegLinetoAbs.prototype, \"y\", { get: function get() {\n                    return this._y;\n                }, set: function set(y) {\n                    this._y = y;this._segmentChanged();\n                }, enumerable: true });\n\n            window.SVGPathSegLinetoRel = function (owningPathSegList, x, y) {\n                window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_LINETO_REL, \"l\", owningPathSegList);\n                this._x = x;\n                this._y = y;\n            };\n            window.SVGPathSegLinetoRel.prototype = Object.create(window.SVGPathSeg.prototype);\n            window.SVGPathSegLinetoRel.prototype.toString = function () {\n                return \"[object SVGPathSegLinetoRel]\";\n            };\n            window.SVGPathSegLinetoRel.prototype._asPathString = function () {\n                return this.pathSegTypeAsLetter + \" \" + this._x + \" \" + this._y;\n            };\n            window.SVGPathSegLinetoRel.prototype.clone = function () {\n                return new window.SVGPathSegLinetoRel(undefined, this._x, this._y);\n            };\n            Object.defineProperty(window.SVGPathSegLinetoRel.prototype, \"x\", { get: function get() {\n                    return this._x;\n                }, set: function set(x) {\n                    this._x = x;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegLinetoRel.prototype, \"y\", { get: function get() {\n                    return this._y;\n                }, set: function set(y) {\n                    this._y = y;this._segmentChanged();\n                }, enumerable: true });\n\n            window.SVGPathSegCurvetoCubicAbs = function (owningPathSegList, x, y, x1, y1, x2, y2) {\n                window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_ABS, \"C\", owningPathSegList);\n                this._x = x;\n                this._y = y;\n                this._x1 = x1;\n                this._y1 = y1;\n                this._x2 = x2;\n                this._y2 = y2;\n            };\n            window.SVGPathSegCurvetoCubicAbs.prototype = Object.create(window.SVGPathSeg.prototype);\n            window.SVGPathSegCurvetoCubicAbs.prototype.toString = function () {\n                return \"[object SVGPathSegCurvetoCubicAbs]\";\n            };\n            window.SVGPathSegCurvetoCubicAbs.prototype._asPathString = function () {\n                return this.pathSegTypeAsLetter + \" \" + this._x1 + \" \" + this._y1 + \" \" + this._x2 + \" \" + this._y2 + \" \" + this._x + \" \" + this._y;\n            };\n            window.SVGPathSegCurvetoCubicAbs.prototype.clone = function () {\n                return new window.SVGPathSegCurvetoCubicAbs(undefined, this._x, this._y, this._x1, this._y1, this._x2, this._y2);\n            };\n            Object.defineProperty(window.SVGPathSegCurvetoCubicAbs.prototype, \"x\", { get: function get() {\n                    return this._x;\n                }, set: function set(x) {\n                    this._x = x;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegCurvetoCubicAbs.prototype, \"y\", { get: function get() {\n                    return this._y;\n                }, set: function set(y) {\n                    this._y = y;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegCurvetoCubicAbs.prototype, \"x1\", { get: function get() {\n                    return this._x1;\n                }, set: function set(x1) {\n                    this._x1 = x1;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegCurvetoCubicAbs.prototype, \"y1\", { get: function get() {\n                    return this._y1;\n                }, set: function set(y1) {\n                    this._y1 = y1;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegCurvetoCubicAbs.prototype, \"x2\", { get: function get() {\n                    return this._x2;\n                }, set: function set(x2) {\n                    this._x2 = x2;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegCurvetoCubicAbs.prototype, \"y2\", { get: function get() {\n                    return this._y2;\n                }, set: function set(y2) {\n                    this._y2 = y2;this._segmentChanged();\n                }, enumerable: true });\n\n            window.SVGPathSegCurvetoCubicRel = function (owningPathSegList, x, y, x1, y1, x2, y2) {\n                window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_REL, \"c\", owningPathSegList);\n                this._x = x;\n                this._y = y;\n                this._x1 = x1;\n                this._y1 = y1;\n                this._x2 = x2;\n                this._y2 = y2;\n            };\n            window.SVGPathSegCurvetoCubicRel.prototype = Object.create(window.SVGPathSeg.prototype);\n            window.SVGPathSegCurvetoCubicRel.prototype.toString = function () {\n                return \"[object SVGPathSegCurvetoCubicRel]\";\n            };\n            window.SVGPathSegCurvetoCubicRel.prototype._asPathString = function () {\n                return this.pathSegTypeAsLetter + \" \" + this._x1 + \" \" + this._y1 + \" \" + this._x2 + \" \" + this._y2 + \" \" + this._x + \" \" + this._y;\n            };\n            window.SVGPathSegCurvetoCubicRel.prototype.clone = function () {\n                return new window.SVGPathSegCurvetoCubicRel(undefined, this._x, this._y, this._x1, this._y1, this._x2, this._y2);\n            };\n            Object.defineProperty(window.SVGPathSegCurvetoCubicRel.prototype, \"x\", { get: function get() {\n                    return this._x;\n                }, set: function set(x) {\n                    this._x = x;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegCurvetoCubicRel.prototype, \"y\", { get: function get() {\n                    return this._y;\n                }, set: function set(y) {\n                    this._y = y;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegCurvetoCubicRel.prototype, \"x1\", { get: function get() {\n                    return this._x1;\n                }, set: function set(x1) {\n                    this._x1 = x1;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegCurvetoCubicRel.prototype, \"y1\", { get: function get() {\n                    return this._y1;\n                }, set: function set(y1) {\n                    this._y1 = y1;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegCurvetoCubicRel.prototype, \"x2\", { get: function get() {\n                    return this._x2;\n                }, set: function set(x2) {\n                    this._x2 = x2;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegCurvetoCubicRel.prototype, \"y2\", { get: function get() {\n                    return this._y2;\n                }, set: function set(y2) {\n                    this._y2 = y2;this._segmentChanged();\n                }, enumerable: true });\n\n            window.SVGPathSegCurvetoQuadraticAbs = function (owningPathSegList, x, y, x1, y1) {\n                window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_ABS, \"Q\", owningPathSegList);\n                this._x = x;\n                this._y = y;\n                this._x1 = x1;\n                this._y1 = y1;\n            };\n            window.SVGPathSegCurvetoQuadraticAbs.prototype = Object.create(window.SVGPathSeg.prototype);\n            window.SVGPathSegCurvetoQuadraticAbs.prototype.toString = function () {\n                return \"[object SVGPathSegCurvetoQuadraticAbs]\";\n            };\n            window.SVGPathSegCurvetoQuadraticAbs.prototype._asPathString = function () {\n                return this.pathSegTypeAsLetter + \" \" + this._x1 + \" \" + this._y1 + \" \" + this._x + \" \" + this._y;\n            };\n            window.SVGPathSegCurvetoQuadraticAbs.prototype.clone = function () {\n                return new window.SVGPathSegCurvetoQuadraticAbs(undefined, this._x, this._y, this._x1, this._y1);\n            };\n            Object.defineProperty(window.SVGPathSegCurvetoQuadraticAbs.prototype, \"x\", { get: function get() {\n                    return this._x;\n                }, set: function set(x) {\n                    this._x = x;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegCurvetoQuadraticAbs.prototype, \"y\", { get: function get() {\n                    return this._y;\n                }, set: function set(y) {\n                    this._y = y;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegCurvetoQuadraticAbs.prototype, \"x1\", { get: function get() {\n                    return this._x1;\n                }, set: function set(x1) {\n                    this._x1 = x1;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegCurvetoQuadraticAbs.prototype, \"y1\", { get: function get() {\n                    return this._y1;\n                }, set: function set(y1) {\n                    this._y1 = y1;this._segmentChanged();\n                }, enumerable: true });\n\n            window.SVGPathSegCurvetoQuadraticRel = function (owningPathSegList, x, y, x1, y1) {\n                window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_REL, \"q\", owningPathSegList);\n                this._x = x;\n                this._y = y;\n                this._x1 = x1;\n                this._y1 = y1;\n            };\n            window.SVGPathSegCurvetoQuadraticRel.prototype = Object.create(window.SVGPathSeg.prototype);\n            window.SVGPathSegCurvetoQuadraticRel.prototype.toString = function () {\n                return \"[object SVGPathSegCurvetoQuadraticRel]\";\n            };\n            window.SVGPathSegCurvetoQuadraticRel.prototype._asPathString = function () {\n                return this.pathSegTypeAsLetter + \" \" + this._x1 + \" \" + this._y1 + \" \" + this._x + \" \" + this._y;\n            };\n            window.SVGPathSegCurvetoQuadraticRel.prototype.clone = function () {\n                return new window.SVGPathSegCurvetoQuadraticRel(undefined, this._x, this._y, this._x1, this._y1);\n            };\n            Object.defineProperty(window.SVGPathSegCurvetoQuadraticRel.prototype, \"x\", { get: function get() {\n                    return this._x;\n                }, set: function set(x) {\n                    this._x = x;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegCurvetoQuadraticRel.prototype, \"y\", { get: function get() {\n                    return this._y;\n                }, set: function set(y) {\n                    this._y = y;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegCurvetoQuadraticRel.prototype, \"x1\", { get: function get() {\n                    return this._x1;\n                }, set: function set(x1) {\n                    this._x1 = x1;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegCurvetoQuadraticRel.prototype, \"y1\", { get: function get() {\n                    return this._y1;\n                }, set: function set(y1) {\n                    this._y1 = y1;this._segmentChanged();\n                }, enumerable: true });\n\n            window.SVGPathSegArcAbs = function (owningPathSegList, x, y, r1, r2, angle, largeArcFlag, sweepFlag) {\n                window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_ARC_ABS, \"A\", owningPathSegList);\n                this._x = x;\n                this._y = y;\n                this._r1 = r1;\n                this._r2 = r2;\n                this._angle = angle;\n                this._largeArcFlag = largeArcFlag;\n                this._sweepFlag = sweepFlag;\n            };\n            window.SVGPathSegArcAbs.prototype = Object.create(window.SVGPathSeg.prototype);\n            window.SVGPathSegArcAbs.prototype.toString = function () {\n                return \"[object SVGPathSegArcAbs]\";\n            };\n            window.SVGPathSegArcAbs.prototype._asPathString = function () {\n                return this.pathSegTypeAsLetter + \" \" + this._r1 + \" \" + this._r2 + \" \" + this._angle + \" \" + (this._largeArcFlag ? \"1\" : \"0\") + \" \" + (this._sweepFlag ? \"1\" : \"0\") + \" \" + this._x + \" \" + this._y;\n            };\n            window.SVGPathSegArcAbs.prototype.clone = function () {\n                return new window.SVGPathSegArcAbs(undefined, this._x, this._y, this._r1, this._r2, this._angle, this._largeArcFlag, this._sweepFlag);\n            };\n            Object.defineProperty(window.SVGPathSegArcAbs.prototype, \"x\", { get: function get() {\n                    return this._x;\n                }, set: function set(x) {\n                    this._x = x;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegArcAbs.prototype, \"y\", { get: function get() {\n                    return this._y;\n                }, set: function set(y) {\n                    this._y = y;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegArcAbs.prototype, \"r1\", { get: function get() {\n                    return this._r1;\n                }, set: function set(r1) {\n                    this._r1 = r1;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegArcAbs.prototype, \"r2\", { get: function get() {\n                    return this._r2;\n                }, set: function set(r2) {\n                    this._r2 = r2;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegArcAbs.prototype, \"angle\", { get: function get() {\n                    return this._angle;\n                }, set: function set(angle) {\n                    this._angle = angle;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegArcAbs.prototype, \"largeArcFlag\", { get: function get() {\n                    return this._largeArcFlag;\n                }, set: function set(largeArcFlag) {\n                    this._largeArcFlag = largeArcFlag;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegArcAbs.prototype, \"sweepFlag\", { get: function get() {\n                    return this._sweepFlag;\n                }, set: function set(sweepFlag) {\n                    this._sweepFlag = sweepFlag;this._segmentChanged();\n                }, enumerable: true });\n\n            window.SVGPathSegArcRel = function (owningPathSegList, x, y, r1, r2, angle, largeArcFlag, sweepFlag) {\n                window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_ARC_REL, \"a\", owningPathSegList);\n                this._x = x;\n                this._y = y;\n                this._r1 = r1;\n                this._r2 = r2;\n                this._angle = angle;\n                this._largeArcFlag = largeArcFlag;\n                this._sweepFlag = sweepFlag;\n            };\n            window.SVGPathSegArcRel.prototype = Object.create(window.SVGPathSeg.prototype);\n            window.SVGPathSegArcRel.prototype.toString = function () {\n                return \"[object SVGPathSegArcRel]\";\n            };\n            window.SVGPathSegArcRel.prototype._asPathString = function () {\n                return this.pathSegTypeAsLetter + \" \" + this._r1 + \" \" + this._r2 + \" \" + this._angle + \" \" + (this._largeArcFlag ? \"1\" : \"0\") + \" \" + (this._sweepFlag ? \"1\" : \"0\") + \" \" + this._x + \" \" + this._y;\n            };\n            window.SVGPathSegArcRel.prototype.clone = function () {\n                return new window.SVGPathSegArcRel(undefined, this._x, this._y, this._r1, this._r2, this._angle, this._largeArcFlag, this._sweepFlag);\n            };\n            Object.defineProperty(window.SVGPathSegArcRel.prototype, \"x\", { get: function get() {\n                    return this._x;\n                }, set: function set(x) {\n                    this._x = x;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegArcRel.prototype, \"y\", { get: function get() {\n                    return this._y;\n                }, set: function set(y) {\n                    this._y = y;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegArcRel.prototype, \"r1\", { get: function get() {\n                    return this._r1;\n                }, set: function set(r1) {\n                    this._r1 = r1;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegArcRel.prototype, \"r2\", { get: function get() {\n                    return this._r2;\n                }, set: function set(r2) {\n                    this._r2 = r2;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegArcRel.prototype, \"angle\", { get: function get() {\n                    return this._angle;\n                }, set: function set(angle) {\n                    this._angle = angle;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegArcRel.prototype, \"largeArcFlag\", { get: function get() {\n                    return this._largeArcFlag;\n                }, set: function set(largeArcFlag) {\n                    this._largeArcFlag = largeArcFlag;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegArcRel.prototype, \"sweepFlag\", { get: function get() {\n                    return this._sweepFlag;\n                }, set: function set(sweepFlag) {\n                    this._sweepFlag = sweepFlag;this._segmentChanged();\n                }, enumerable: true });\n\n            window.SVGPathSegLinetoHorizontalAbs = function (owningPathSegList, x) {\n                window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_ABS, \"H\", owningPathSegList);\n                this._x = x;\n            };\n            window.SVGPathSegLinetoHorizontalAbs.prototype = Object.create(window.SVGPathSeg.prototype);\n            window.SVGPathSegLinetoHorizontalAbs.prototype.toString = function () {\n                return \"[object SVGPathSegLinetoHorizontalAbs]\";\n            };\n            window.SVGPathSegLinetoHorizontalAbs.prototype._asPathString = function () {\n                return this.pathSegTypeAsLetter + \" \" + this._x;\n            };\n            window.SVGPathSegLinetoHorizontalAbs.prototype.clone = function () {\n                return new window.SVGPathSegLinetoHorizontalAbs(undefined, this._x);\n            };\n            Object.defineProperty(window.SVGPathSegLinetoHorizontalAbs.prototype, \"x\", { get: function get() {\n                    return this._x;\n                }, set: function set(x) {\n                    this._x = x;this._segmentChanged();\n                }, enumerable: true });\n\n            window.SVGPathSegLinetoHorizontalRel = function (owningPathSegList, x) {\n                window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_REL, \"h\", owningPathSegList);\n                this._x = x;\n            };\n            window.SVGPathSegLinetoHorizontalRel.prototype = Object.create(window.SVGPathSeg.prototype);\n            window.SVGPathSegLinetoHorizontalRel.prototype.toString = function () {\n                return \"[object SVGPathSegLinetoHorizontalRel]\";\n            };\n            window.SVGPathSegLinetoHorizontalRel.prototype._asPathString = function () {\n                return this.pathSegTypeAsLetter + \" \" + this._x;\n            };\n            window.SVGPathSegLinetoHorizontalRel.prototype.clone = function () {\n                return new window.SVGPathSegLinetoHorizontalRel(undefined, this._x);\n            };\n            Object.defineProperty(window.SVGPathSegLinetoHorizontalRel.prototype, \"x\", { get: function get() {\n                    return this._x;\n                }, set: function set(x) {\n                    this._x = x;this._segmentChanged();\n                }, enumerable: true });\n\n            window.SVGPathSegLinetoVerticalAbs = function (owningPathSegList, y) {\n                window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_LINETO_VERTICAL_ABS, \"V\", owningPathSegList);\n                this._y = y;\n            };\n            window.SVGPathSegLinetoVerticalAbs.prototype = Object.create(window.SVGPathSeg.prototype);\n            window.SVGPathSegLinetoVerticalAbs.prototype.toString = function () {\n                return \"[object SVGPathSegLinetoVerticalAbs]\";\n            };\n            window.SVGPathSegLinetoVerticalAbs.prototype._asPathString = function () {\n                return this.pathSegTypeAsLetter + \" \" + this._y;\n            };\n            window.SVGPathSegLinetoVerticalAbs.prototype.clone = function () {\n                return new window.SVGPathSegLinetoVerticalAbs(undefined, this._y);\n            };\n            Object.defineProperty(window.SVGPathSegLinetoVerticalAbs.prototype, \"y\", { get: function get() {\n                    return this._y;\n                }, set: function set(y) {\n                    this._y = y;this._segmentChanged();\n                }, enumerable: true });\n\n            window.SVGPathSegLinetoVerticalRel = function (owningPathSegList, y) {\n                window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_LINETO_VERTICAL_REL, \"v\", owningPathSegList);\n                this._y = y;\n            };\n            window.SVGPathSegLinetoVerticalRel.prototype = Object.create(window.SVGPathSeg.prototype);\n            window.SVGPathSegLinetoVerticalRel.prototype.toString = function () {\n                return \"[object SVGPathSegLinetoVerticalRel]\";\n            };\n            window.SVGPathSegLinetoVerticalRel.prototype._asPathString = function () {\n                return this.pathSegTypeAsLetter + \" \" + this._y;\n            };\n            window.SVGPathSegLinetoVerticalRel.prototype.clone = function () {\n                return new window.SVGPathSegLinetoVerticalRel(undefined, this._y);\n            };\n            Object.defineProperty(window.SVGPathSegLinetoVerticalRel.prototype, \"y\", { get: function get() {\n                    return this._y;\n                }, set: function set(y) {\n                    this._y = y;this._segmentChanged();\n                }, enumerable: true });\n\n            window.SVGPathSegCurvetoCubicSmoothAbs = function (owningPathSegList, x, y, x2, y2) {\n                window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_ABS, \"S\", owningPathSegList);\n                this._x = x;\n                this._y = y;\n                this._x2 = x2;\n                this._y2 = y2;\n            };\n            window.SVGPathSegCurvetoCubicSmoothAbs.prototype = Object.create(window.SVGPathSeg.prototype);\n            window.SVGPathSegCurvetoCubicSmoothAbs.prototype.toString = function () {\n                return \"[object SVGPathSegCurvetoCubicSmoothAbs]\";\n            };\n            window.SVGPathSegCurvetoCubicSmoothAbs.prototype._asPathString = function () {\n                return this.pathSegTypeAsLetter + \" \" + this._x2 + \" \" + this._y2 + \" \" + this._x + \" \" + this._y;\n            };\n            window.SVGPathSegCurvetoCubicSmoothAbs.prototype.clone = function () {\n                return new window.SVGPathSegCurvetoCubicSmoothAbs(undefined, this._x, this._y, this._x2, this._y2);\n            };\n            Object.defineProperty(window.SVGPathSegCurvetoCubicSmoothAbs.prototype, \"x\", { get: function get() {\n                    return this._x;\n                }, set: function set(x) {\n                    this._x = x;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegCurvetoCubicSmoothAbs.prototype, \"y\", { get: function get() {\n                    return this._y;\n                }, set: function set(y) {\n                    this._y = y;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegCurvetoCubicSmoothAbs.prototype, \"x2\", { get: function get() {\n                    return this._x2;\n                }, set: function set(x2) {\n                    this._x2 = x2;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegCurvetoCubicSmoothAbs.prototype, \"y2\", { get: function get() {\n                    return this._y2;\n                }, set: function set(y2) {\n                    this._y2 = y2;this._segmentChanged();\n                }, enumerable: true });\n\n            window.SVGPathSegCurvetoCubicSmoothRel = function (owningPathSegList, x, y, x2, y2) {\n                window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_REL, \"s\", owningPathSegList);\n                this._x = x;\n                this._y = y;\n                this._x2 = x2;\n                this._y2 = y2;\n            };\n            window.SVGPathSegCurvetoCubicSmoothRel.prototype = Object.create(window.SVGPathSeg.prototype);\n            window.SVGPathSegCurvetoCubicSmoothRel.prototype.toString = function () {\n                return \"[object SVGPathSegCurvetoCubicSmoothRel]\";\n            };\n            window.SVGPathSegCurvetoCubicSmoothRel.prototype._asPathString = function () {\n                return this.pathSegTypeAsLetter + \" \" + this._x2 + \" \" + this._y2 + \" \" + this._x + \" \" + this._y;\n            };\n            window.SVGPathSegCurvetoCubicSmoothRel.prototype.clone = function () {\n                return new window.SVGPathSegCurvetoCubicSmoothRel(undefined, this._x, this._y, this._x2, this._y2);\n            };\n            Object.defineProperty(window.SVGPathSegCurvetoCubicSmoothRel.prototype, \"x\", { get: function get() {\n                    return this._x;\n                }, set: function set(x) {\n                    this._x = x;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegCurvetoCubicSmoothRel.prototype, \"y\", { get: function get() {\n                    return this._y;\n                }, set: function set(y) {\n                    this._y = y;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegCurvetoCubicSmoothRel.prototype, \"x2\", { get: function get() {\n                    return this._x2;\n                }, set: function set(x2) {\n                    this._x2 = x2;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegCurvetoCubicSmoothRel.prototype, \"y2\", { get: function get() {\n                    return this._y2;\n                }, set: function set(y2) {\n                    this._y2 = y2;this._segmentChanged();\n                }, enumerable: true });\n\n            window.SVGPathSegCurvetoQuadraticSmoothAbs = function (owningPathSegList, x, y) {\n                window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS, \"T\", owningPathSegList);\n                this._x = x;\n                this._y = y;\n            };\n            window.SVGPathSegCurvetoQuadraticSmoothAbs.prototype = Object.create(window.SVGPathSeg.prototype);\n            window.SVGPathSegCurvetoQuadraticSmoothAbs.prototype.toString = function () {\n                return \"[object SVGPathSegCurvetoQuadraticSmoothAbs]\";\n            };\n            window.SVGPathSegCurvetoQuadraticSmoothAbs.prototype._asPathString = function () {\n                return this.pathSegTypeAsLetter + \" \" + this._x + \" \" + this._y;\n            };\n            window.SVGPathSegCurvetoQuadraticSmoothAbs.prototype.clone = function () {\n                return new window.SVGPathSegCurvetoQuadraticSmoothAbs(undefined, this._x, this._y);\n            };\n            Object.defineProperty(window.SVGPathSegCurvetoQuadraticSmoothAbs.prototype, \"x\", { get: function get() {\n                    return this._x;\n                }, set: function set(x) {\n                    this._x = x;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegCurvetoQuadraticSmoothAbs.prototype, \"y\", { get: function get() {\n                    return this._y;\n                }, set: function set(y) {\n                    this._y = y;this._segmentChanged();\n                }, enumerable: true });\n\n            window.SVGPathSegCurvetoQuadraticSmoothRel = function (owningPathSegList, x, y) {\n                window.SVGPathSeg.call(this, window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL, \"t\", owningPathSegList);\n                this._x = x;\n                this._y = y;\n            };\n            window.SVGPathSegCurvetoQuadraticSmoothRel.prototype = Object.create(window.SVGPathSeg.prototype);\n            window.SVGPathSegCurvetoQuadraticSmoothRel.prototype.toString = function () {\n                return \"[object SVGPathSegCurvetoQuadraticSmoothRel]\";\n            };\n            window.SVGPathSegCurvetoQuadraticSmoothRel.prototype._asPathString = function () {\n                return this.pathSegTypeAsLetter + \" \" + this._x + \" \" + this._y;\n            };\n            window.SVGPathSegCurvetoQuadraticSmoothRel.prototype.clone = function () {\n                return new window.SVGPathSegCurvetoQuadraticSmoothRel(undefined, this._x, this._y);\n            };\n            Object.defineProperty(window.SVGPathSegCurvetoQuadraticSmoothRel.prototype, \"x\", { get: function get() {\n                    return this._x;\n                }, set: function set(x) {\n                    this._x = x;this._segmentChanged();\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathSegCurvetoQuadraticSmoothRel.prototype, \"y\", { get: function get() {\n                    return this._y;\n                }, set: function set(y) {\n                    this._y = y;this._segmentChanged();\n                }, enumerable: true });\n\n            // Add createSVGPathSeg* functions to window.SVGPathElement.\n            // Spec: http://www.w3.org/TR/SVG11/single-page.html#paths-Interfacewindow.SVGPathElement.\n            window.SVGPathElement.prototype.createSVGPathSegClosePath = function () {\n                return new window.SVGPathSegClosePath(undefined);\n            };\n            window.SVGPathElement.prototype.createSVGPathSegMovetoAbs = function (x, y) {\n                return new window.SVGPathSegMovetoAbs(undefined, x, y);\n            };\n            window.SVGPathElement.prototype.createSVGPathSegMovetoRel = function (x, y) {\n                return new window.SVGPathSegMovetoRel(undefined, x, y);\n            };\n            window.SVGPathElement.prototype.createSVGPathSegLinetoAbs = function (x, y) {\n                return new window.SVGPathSegLinetoAbs(undefined, x, y);\n            };\n            window.SVGPathElement.prototype.createSVGPathSegLinetoRel = function (x, y) {\n                return new window.SVGPathSegLinetoRel(undefined, x, y);\n            };\n            window.SVGPathElement.prototype.createSVGPathSegCurvetoCubicAbs = function (x, y, x1, y1, x2, y2) {\n                return new window.SVGPathSegCurvetoCubicAbs(undefined, x, y, x1, y1, x2, y2);\n            };\n            window.SVGPathElement.prototype.createSVGPathSegCurvetoCubicRel = function (x, y, x1, y1, x2, y2) {\n                return new window.SVGPathSegCurvetoCubicRel(undefined, x, y, x1, y1, x2, y2);\n            };\n            window.SVGPathElement.prototype.createSVGPathSegCurvetoQuadraticAbs = function (x, y, x1, y1) {\n                return new window.SVGPathSegCurvetoQuadraticAbs(undefined, x, y, x1, y1);\n            };\n            window.SVGPathElement.prototype.createSVGPathSegCurvetoQuadraticRel = function (x, y, x1, y1) {\n                return new window.SVGPathSegCurvetoQuadraticRel(undefined, x, y, x1, y1);\n            };\n            window.SVGPathElement.prototype.createSVGPathSegArcAbs = function (x, y, r1, r2, angle, largeArcFlag, sweepFlag) {\n                return new window.SVGPathSegArcAbs(undefined, x, y, r1, r2, angle, largeArcFlag, sweepFlag);\n            };\n            window.SVGPathElement.prototype.createSVGPathSegArcRel = function (x, y, r1, r2, angle, largeArcFlag, sweepFlag) {\n                return new window.SVGPathSegArcRel(undefined, x, y, r1, r2, angle, largeArcFlag, sweepFlag);\n            };\n            window.SVGPathElement.prototype.createSVGPathSegLinetoHorizontalAbs = function (x) {\n                return new window.SVGPathSegLinetoHorizontalAbs(undefined, x);\n            };\n            window.SVGPathElement.prototype.createSVGPathSegLinetoHorizontalRel = function (x) {\n                return new window.SVGPathSegLinetoHorizontalRel(undefined, x);\n            };\n            window.SVGPathElement.prototype.createSVGPathSegLinetoVerticalAbs = function (y) {\n                return new window.SVGPathSegLinetoVerticalAbs(undefined, y);\n            };\n            window.SVGPathElement.prototype.createSVGPathSegLinetoVerticalRel = function (y) {\n                return new window.SVGPathSegLinetoVerticalRel(undefined, y);\n            };\n            window.SVGPathElement.prototype.createSVGPathSegCurvetoCubicSmoothAbs = function (x, y, x2, y2) {\n                return new window.SVGPathSegCurvetoCubicSmoothAbs(undefined, x, y, x2, y2);\n            };\n            window.SVGPathElement.prototype.createSVGPathSegCurvetoCubicSmoothRel = function (x, y, x2, y2) {\n                return new window.SVGPathSegCurvetoCubicSmoothRel(undefined, x, y, x2, y2);\n            };\n            window.SVGPathElement.prototype.createSVGPathSegCurvetoQuadraticSmoothAbs = function (x, y) {\n                return new window.SVGPathSegCurvetoQuadraticSmoothAbs(undefined, x, y);\n            };\n            window.SVGPathElement.prototype.createSVGPathSegCurvetoQuadraticSmoothRel = function (x, y) {\n                return new window.SVGPathSegCurvetoQuadraticSmoothRel(undefined, x, y);\n            };\n\n            if (!(\"getPathSegAtLength\" in window.SVGPathElement.prototype)) {\n                // Add getPathSegAtLength to SVGPathElement.\n                // Spec: https://www.w3.org/TR/SVG11/single-page.html#paths-__svg__SVGPathElement__getPathSegAtLength\n                // This polyfill requires SVGPathElement.getTotalLength to implement the distance-along-a-path algorithm.\n                window.SVGPathElement.prototype.getPathSegAtLength = function (distance) {\n                    if (distance === undefined || !isFinite(distance)) throw \"Invalid arguments.\";\n\n                    var measurementElement = document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\");\n                    measurementElement.setAttribute(\"d\", this.getAttribute(\"d\"));\n                    var lastPathSegment = measurementElement.pathSegList.numberOfItems - 1;\n\n                    // If the path is empty, return 0.\n                    if (lastPathSegment <= 0) return 0;\n\n                    do {\n                        measurementElement.pathSegList.removeItem(lastPathSegment);\n                        if (distance > measurementElement.getTotalLength()) break;\n                        lastPathSegment--;\n                    } while (lastPathSegment > 0);\n                    return lastPathSegment;\n                };\n            }\n        }\n\n        if (!(\"SVGPathSegList\" in window)) {\n            // Spec: http://www.w3.org/TR/SVG11/single-page.html#paths-InterfaceSVGPathSegList\n            window.SVGPathSegList = function (pathElement) {\n                this._pathElement = pathElement;\n                this._list = this._parsePath(this._pathElement.getAttribute(\"d\"));\n\n                // Use a MutationObserver to catch changes to the path's \"d\" attribute.\n                this._mutationObserverConfig = { \"attributes\": true, \"attributeFilter\": [\"d\"] };\n                this._pathElementMutationObserver = new MutationObserver(this._updateListFromPathMutations.bind(this));\n                this._pathElementMutationObserver.observe(this._pathElement, this._mutationObserverConfig);\n            };\n\n            window.SVGPathSegList.prototype.classname = \"SVGPathSegList\";\n\n            Object.defineProperty(window.SVGPathSegList.prototype, \"numberOfItems\", {\n                get: function get() {\n                    this._checkPathSynchronizedToList();\n                    return this._list.length;\n                },\n                enumerable: true\n            });\n\n            // Add the pathSegList accessors to window.SVGPathElement.\n            // Spec: http://www.w3.org/TR/SVG11/single-page.html#paths-InterfaceSVGAnimatedPathData\n            Object.defineProperty(window.SVGPathElement.prototype, \"pathSegList\", {\n                get: function get() {\n                    if (!this._pathSegList) this._pathSegList = new window.SVGPathSegList(this);\n                    return this._pathSegList;\n                },\n                enumerable: true\n            });\n            // FIXME: The following are not implemented and simply return window.SVGPathElement.pathSegList.\n            Object.defineProperty(window.SVGPathElement.prototype, \"normalizedPathSegList\", { get: function get() {\n                    return this.pathSegList;\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathElement.prototype, \"animatedPathSegList\", { get: function get() {\n                    return this.pathSegList;\n                }, enumerable: true });\n            Object.defineProperty(window.SVGPathElement.prototype, \"animatedNormalizedPathSegList\", { get: function get() {\n                    return this.pathSegList;\n                }, enumerable: true });\n\n            // Process any pending mutations to the path element and update the list as needed.\n            // This should be the first call of all public functions and is needed because\n            // MutationObservers are not synchronous so we can have pending asynchronous mutations.\n            window.SVGPathSegList.prototype._checkPathSynchronizedToList = function () {\n                this._updateListFromPathMutations(this._pathElementMutationObserver.takeRecords());\n            };\n\n            window.SVGPathSegList.prototype._updateListFromPathMutations = function (mutationRecords) {\n                if (!this._pathElement) return;\n                var hasPathMutations = false;\n                mutationRecords.forEach(function (record) {\n                    if (record.attributeName == \"d\") hasPathMutations = true;\n                });\n                if (hasPathMutations) this._list = this._parsePath(this._pathElement.getAttribute(\"d\"));\n            };\n\n            // Serialize the list and update the path's 'd' attribute.\n            window.SVGPathSegList.prototype._writeListToPath = function () {\n                this._pathElementMutationObserver.disconnect();\n                this._pathElement.setAttribute(\"d\", window.SVGPathSegList._pathSegArrayAsString(this._list));\n                this._pathElementMutationObserver.observe(this._pathElement, this._mutationObserverConfig);\n            };\n\n            // When a path segment changes the list needs to be synchronized back to the path element.\n            window.SVGPathSegList.prototype.segmentChanged = function (pathSeg) {\n                this._writeListToPath();\n            };\n\n            window.SVGPathSegList.prototype.clear = function () {\n                this._checkPathSynchronizedToList();\n\n                this._list.forEach(function (pathSeg) {\n                    pathSeg._owningPathSegList = null;\n                });\n                this._list = [];\n                this._writeListToPath();\n            };\n\n            window.SVGPathSegList.prototype.initialize = function (newItem) {\n                this._checkPathSynchronizedToList();\n\n                this._list = [newItem];\n                newItem._owningPathSegList = this;\n                this._writeListToPath();\n                return newItem;\n            };\n\n            window.SVGPathSegList.prototype._checkValidIndex = function (index) {\n                if (isNaN(index) || index < 0 || index >= this.numberOfItems) throw \"INDEX_SIZE_ERR\";\n            };\n\n            window.SVGPathSegList.prototype.getItem = function (index) {\n                this._checkPathSynchronizedToList();\n\n                this._checkValidIndex(index);\n                return this._list[index];\n            };\n\n            window.SVGPathSegList.prototype.insertItemBefore = function (newItem, index) {\n                this._checkPathSynchronizedToList();\n\n                // Spec: If the index is greater than or equal to numberOfItems, then the new item is appended to the end of the list.\n                if (index > this.numberOfItems) index = this.numberOfItems;\n                if (newItem._owningPathSegList) {\n                    // SVG2 spec says to make a copy.\n                    newItem = newItem.clone();\n                }\n                this._list.splice(index, 0, newItem);\n                newItem._owningPathSegList = this;\n                this._writeListToPath();\n                return newItem;\n            };\n\n            window.SVGPathSegList.prototype.replaceItem = function (newItem, index) {\n                this._checkPathSynchronizedToList();\n\n                if (newItem._owningPathSegList) {\n                    // SVG2 spec says to make a copy.\n                    newItem = newItem.clone();\n                }\n                this._checkValidIndex(index);\n                this._list[index] = newItem;\n                newItem._owningPathSegList = this;\n                this._writeListToPath();\n                return newItem;\n            };\n\n            window.SVGPathSegList.prototype.removeItem = function (index) {\n                this._checkPathSynchronizedToList();\n\n                this._checkValidIndex(index);\n                var item = this._list[index];\n                this._list.splice(index, 1);\n                this._writeListToPath();\n                return item;\n            };\n\n            window.SVGPathSegList.prototype.appendItem = function (newItem) {\n                this._checkPathSynchronizedToList();\n\n                if (newItem._owningPathSegList) {\n                    // SVG2 spec says to make a copy.\n                    newItem = newItem.clone();\n                }\n                this._list.push(newItem);\n                newItem._owningPathSegList = this;\n                // TODO: Optimize this to just append to the existing attribute.\n                this._writeListToPath();\n                return newItem;\n            };\n\n            window.SVGPathSegList._pathSegArrayAsString = function (pathSegArray) {\n                var string = \"\";\n                var first = true;\n                pathSegArray.forEach(function (pathSeg) {\n                    if (first) {\n                        first = false;\n                        string += pathSeg._asPathString();\n                    } else {\n                        string += \" \" + pathSeg._asPathString();\n                    }\n                });\n                return string;\n            };\n\n            // This closely follows SVGPathParser::parsePath from Source/core/svg/SVGPathParser.cpp.\n            window.SVGPathSegList.prototype._parsePath = function (string) {\n                if (!string || string.length == 0) return [];\n\n                var owningPathSegList = this;\n\n                var Builder = function Builder() {\n                    this.pathSegList = [];\n                };\n\n                Builder.prototype.appendSegment = function (pathSeg) {\n                    this.pathSegList.push(pathSeg);\n                };\n\n                var Source = function Source(string) {\n                    this._string = string;\n                    this._currentIndex = 0;\n                    this._endIndex = this._string.length;\n                    this._previousCommand = window.SVGPathSeg.PATHSEG_UNKNOWN;\n\n                    this._skipOptionalSpaces();\n                };\n\n                Source.prototype._isCurrentSpace = function () {\n                    var character = this._string[this._currentIndex];\n                    return character <= \" \" && (character == \" \" || character == \"\\n\" || character == \"\\t\" || character == \"\\r\" || character == \"\\f\");\n                };\n\n                Source.prototype._skipOptionalSpaces = function () {\n                    while (this._currentIndex < this._endIndex && this._isCurrentSpace()) {\n                        this._currentIndex++;\n                    }return this._currentIndex < this._endIndex;\n                };\n\n                Source.prototype._skipOptionalSpacesOrDelimiter = function () {\n                    if (this._currentIndex < this._endIndex && !this._isCurrentSpace() && this._string.charAt(this._currentIndex) != \",\") return false;\n                    if (this._skipOptionalSpaces()) {\n                        if (this._currentIndex < this._endIndex && this._string.charAt(this._currentIndex) == \",\") {\n                            this._currentIndex++;\n                            this._skipOptionalSpaces();\n                        }\n                    }\n                    return this._currentIndex < this._endIndex;\n                };\n\n                Source.prototype.hasMoreData = function () {\n                    return this._currentIndex < this._endIndex;\n                };\n\n                Source.prototype.peekSegmentType = function () {\n                    var lookahead = this._string[this._currentIndex];\n                    return this._pathSegTypeFromChar(lookahead);\n                };\n\n                Source.prototype._pathSegTypeFromChar = function (lookahead) {\n                    switch (lookahead) {\n                        case \"Z\":\n                        case \"z\":\n                            return window.SVGPathSeg.PATHSEG_CLOSEPATH;\n                        case \"M\":\n                            return window.SVGPathSeg.PATHSEG_MOVETO_ABS;\n                        case \"m\":\n                            return window.SVGPathSeg.PATHSEG_MOVETO_REL;\n                        case \"L\":\n                            return window.SVGPathSeg.PATHSEG_LINETO_ABS;\n                        case \"l\":\n                            return window.SVGPathSeg.PATHSEG_LINETO_REL;\n                        case \"C\":\n                            return window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_ABS;\n                        case \"c\":\n                            return window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_REL;\n                        case \"Q\":\n                            return window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_ABS;\n                        case \"q\":\n                            return window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_REL;\n                        case \"A\":\n                            return window.SVGPathSeg.PATHSEG_ARC_ABS;\n                        case \"a\":\n                            return window.SVGPathSeg.PATHSEG_ARC_REL;\n                        case \"H\":\n                            return window.SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_ABS;\n                        case \"h\":\n                            return window.SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_REL;\n                        case \"V\":\n                            return window.SVGPathSeg.PATHSEG_LINETO_VERTICAL_ABS;\n                        case \"v\":\n                            return window.SVGPathSeg.PATHSEG_LINETO_VERTICAL_REL;\n                        case \"S\":\n                            return window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_ABS;\n                        case \"s\":\n                            return window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_REL;\n                        case \"T\":\n                            return window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS;\n                        case \"t\":\n                            return window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL;\n                        default:\n                            return window.SVGPathSeg.PATHSEG_UNKNOWN;\n                    }\n                };\n\n                Source.prototype._nextCommandHelper = function (lookahead, previousCommand) {\n                    // Check for remaining coordinates in the current command.\n                    if ((lookahead == \"+\" || lookahead == \"-\" || lookahead == \".\" || lookahead >= \"0\" && lookahead <= \"9\") && previousCommand != window.SVGPathSeg.PATHSEG_CLOSEPATH) {\n                        if (previousCommand == window.SVGPathSeg.PATHSEG_MOVETO_ABS) return window.SVGPathSeg.PATHSEG_LINETO_ABS;\n                        if (previousCommand == window.SVGPathSeg.PATHSEG_MOVETO_REL) return window.SVGPathSeg.PATHSEG_LINETO_REL;\n                        return previousCommand;\n                    }\n                    return window.SVGPathSeg.PATHSEG_UNKNOWN;\n                };\n\n                Source.prototype.initialCommandIsMoveTo = function () {\n                    // If the path is empty it is still valid, so return true.\n                    if (!this.hasMoreData()) return true;\n                    var command = this.peekSegmentType();\n                    // Path must start with moveTo.\n                    return command == window.SVGPathSeg.PATHSEG_MOVETO_ABS || command == window.SVGPathSeg.PATHSEG_MOVETO_REL;\n                };\n\n                // Parse a number from an SVG path. This very closely follows genericParseNumber(...) from Source/core/svg/SVGParserUtilities.cpp.\n                // Spec: http://www.w3.org/TR/SVG11/single-page.html#paths-PathDataBNF\n                Source.prototype._parseNumber = function () {\n                    var exponent = 0;\n                    var integer = 0;\n                    var frac = 1;\n                    var decimal = 0;\n                    var sign = 1;\n                    var expsign = 1;\n\n                    var startIndex = this._currentIndex;\n\n                    this._skipOptionalSpaces();\n\n                    // Read the sign.\n                    if (this._currentIndex < this._endIndex && this._string.charAt(this._currentIndex) == \"+\") this._currentIndex++;else if (this._currentIndex < this._endIndex && this._string.charAt(this._currentIndex) == \"-\") {\n                        this._currentIndex++;\n                        sign = -1;\n                    }\n\n                    if (this._currentIndex == this._endIndex || (this._string.charAt(this._currentIndex) < \"0\" || this._string.charAt(this._currentIndex) > \"9\") && this._string.charAt(this._currentIndex) != \".\")\n                        // The first character of a number must be one of [0-9+-.].\n                        return undefined;\n\n                    // Read the integer part, build right-to-left.\n                    var startIntPartIndex = this._currentIndex;\n                    while (this._currentIndex < this._endIndex && this._string.charAt(this._currentIndex) >= \"0\" && this._string.charAt(this._currentIndex) <= \"9\") {\n                        this._currentIndex++;\n                    } // Advance to first non-digit.\n\n                    if (this._currentIndex != startIntPartIndex) {\n                        var scanIntPartIndex = this._currentIndex - 1;\n                        var multiplier = 1;\n                        while (scanIntPartIndex >= startIntPartIndex) {\n                            integer += multiplier * (this._string.charAt(scanIntPartIndex--) - \"0\");\n                            multiplier *= 10;\n                        }\n                    }\n\n                    // Read the decimals.\n                    if (this._currentIndex < this._endIndex && this._string.charAt(this._currentIndex) == \".\") {\n                        this._currentIndex++;\n\n                        // There must be a least one digit following the .\n                        if (this._currentIndex >= this._endIndex || this._string.charAt(this._currentIndex) < \"0\" || this._string.charAt(this._currentIndex) > \"9\") return undefined;\n                        while (this._currentIndex < this._endIndex && this._string.charAt(this._currentIndex) >= \"0\" && this._string.charAt(this._currentIndex) <= \"9\") {\n                            frac *= 10;\n                            decimal += (this._string.charAt(this._currentIndex) - \"0\") / frac;\n                            this._currentIndex += 1;\n                        }\n                    }\n\n                    // Read the exponent part.\n                    if (this._currentIndex != startIndex && this._currentIndex + 1 < this._endIndex && (this._string.charAt(this._currentIndex) == \"e\" || this._string.charAt(this._currentIndex) == \"E\") && this._string.charAt(this._currentIndex + 1) != \"x\" && this._string.charAt(this._currentIndex + 1) != \"m\") {\n                        this._currentIndex++;\n\n                        // Read the sign of the exponent.\n                        if (this._string.charAt(this._currentIndex) == \"+\") {\n                            this._currentIndex++;\n                        } else if (this._string.charAt(this._currentIndex) == \"-\") {\n                            this._currentIndex++;\n                            expsign = -1;\n                        }\n\n                        // There must be an exponent.\n                        if (this._currentIndex >= this._endIndex || this._string.charAt(this._currentIndex) < \"0\" || this._string.charAt(this._currentIndex) > \"9\") return undefined;\n\n                        while (this._currentIndex < this._endIndex && this._string.charAt(this._currentIndex) >= \"0\" && this._string.charAt(this._currentIndex) <= \"9\") {\n                            exponent *= 10;\n                            exponent += this._string.charAt(this._currentIndex) - \"0\";\n                            this._currentIndex++;\n                        }\n                    }\n\n                    var number = integer + decimal;\n                    number *= sign;\n\n                    if (exponent) number *= Math.pow(10, expsign * exponent);\n\n                    if (startIndex == this._currentIndex) return undefined;\n\n                    this._skipOptionalSpacesOrDelimiter();\n\n                    return number;\n                };\n\n                Source.prototype._parseArcFlag = function () {\n                    if (this._currentIndex >= this._endIndex) return undefined;\n                    var flag = false;\n                    var flagChar = this._string.charAt(this._currentIndex++);\n                    if (flagChar == \"0\") flag = false;else if (flagChar == \"1\") flag = true;else return undefined;\n\n                    this._skipOptionalSpacesOrDelimiter();\n                    return flag;\n                };\n\n                Source.prototype.parseSegment = function () {\n                    var lookahead = this._string[this._currentIndex];\n                    var command = this._pathSegTypeFromChar(lookahead);\n                    if (command == window.SVGPathSeg.PATHSEG_UNKNOWN) {\n                        // Possibly an implicit command. Not allowed if this is the first command.\n                        if (this._previousCommand == window.SVGPathSeg.PATHSEG_UNKNOWN) return null;\n                        command = this._nextCommandHelper(lookahead, this._previousCommand);\n                        if (command == window.SVGPathSeg.PATHSEG_UNKNOWN) return null;\n                    } else {\n                        this._currentIndex++;\n                    }\n\n                    this._previousCommand = command;\n\n                    switch (command) {\n                        case window.SVGPathSeg.PATHSEG_MOVETO_REL:\n                            return new window.SVGPathSegMovetoRel(owningPathSegList, this._parseNumber(), this._parseNumber());\n                        case window.SVGPathSeg.PATHSEG_MOVETO_ABS:\n                            return new window.SVGPathSegMovetoAbs(owningPathSegList, this._parseNumber(), this._parseNumber());\n                        case window.SVGPathSeg.PATHSEG_LINETO_REL:\n                            return new window.SVGPathSegLinetoRel(owningPathSegList, this._parseNumber(), this._parseNumber());\n                        case window.SVGPathSeg.PATHSEG_LINETO_ABS:\n                            return new window.SVGPathSegLinetoAbs(owningPathSegList, this._parseNumber(), this._parseNumber());\n                        case window.SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_REL:\n                            return new window.SVGPathSegLinetoHorizontalRel(owningPathSegList, this._parseNumber());\n                        case window.SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_ABS:\n                            return new window.SVGPathSegLinetoHorizontalAbs(owningPathSegList, this._parseNumber());\n                        case window.SVGPathSeg.PATHSEG_LINETO_VERTICAL_REL:\n                            return new window.SVGPathSegLinetoVerticalRel(owningPathSegList, this._parseNumber());\n                        case window.SVGPathSeg.PATHSEG_LINETO_VERTICAL_ABS:\n                            return new window.SVGPathSegLinetoVerticalAbs(owningPathSegList, this._parseNumber());\n                        case window.SVGPathSeg.PATHSEG_CLOSEPATH:\n                            this._skipOptionalSpaces();\n                            return new window.SVGPathSegClosePath(owningPathSegList);\n                        case window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_REL:\n                            var points = { x1: this._parseNumber(), y1: this._parseNumber(), x2: this._parseNumber(), y2: this._parseNumber(), x: this._parseNumber(), y: this._parseNumber() };\n                            return new window.SVGPathSegCurvetoCubicRel(owningPathSegList, points.x, points.y, points.x1, points.y1, points.x2, points.y2);\n                        case window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_ABS:\n                            var points = { x1: this._parseNumber(), y1: this._parseNumber(), x2: this._parseNumber(), y2: this._parseNumber(), x: this._parseNumber(), y: this._parseNumber() };\n                            return new window.SVGPathSegCurvetoCubicAbs(owningPathSegList, points.x, points.y, points.x1, points.y1, points.x2, points.y2);\n                        case window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_REL:\n                            var points = { x2: this._parseNumber(), y2: this._parseNumber(), x: this._parseNumber(), y: this._parseNumber() };\n                            return new window.SVGPathSegCurvetoCubicSmoothRel(owningPathSegList, points.x, points.y, points.x2, points.y2);\n                        case window.SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_ABS:\n                            var points = { x2: this._parseNumber(), y2: this._parseNumber(), x: this._parseNumber(), y: this._parseNumber() };\n                            return new window.SVGPathSegCurvetoCubicSmoothAbs(owningPathSegList, points.x, points.y, points.x2, points.y2);\n                        case window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_REL:\n                            var points = { x1: this._parseNumber(), y1: this._parseNumber(), x: this._parseNumber(), y: this._parseNumber() };\n                            return new window.SVGPathSegCurvetoQuadraticRel(owningPathSegList, points.x, points.y, points.x1, points.y1);\n                        case window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_ABS:\n                            var points = { x1: this._parseNumber(), y1: this._parseNumber(), x: this._parseNumber(), y: this._parseNumber() };\n                            return new window.SVGPathSegCurvetoQuadraticAbs(owningPathSegList, points.x, points.y, points.x1, points.y1);\n                        case window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL:\n                            return new window.SVGPathSegCurvetoQuadraticSmoothRel(owningPathSegList, this._parseNumber(), this._parseNumber());\n                        case window.SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS:\n                            return new window.SVGPathSegCurvetoQuadraticSmoothAbs(owningPathSegList, this._parseNumber(), this._parseNumber());\n                        case window.SVGPathSeg.PATHSEG_ARC_REL:\n                            var points = { x1: this._parseNumber(), y1: this._parseNumber(), arcAngle: this._parseNumber(), arcLarge: this._parseArcFlag(), arcSweep: this._parseArcFlag(), x: this._parseNumber(), y: this._parseNumber() };\n                            return new window.SVGPathSegArcRel(owningPathSegList, points.x, points.y, points.x1, points.y1, points.arcAngle, points.arcLarge, points.arcSweep);\n                        case window.SVGPathSeg.PATHSEG_ARC_ABS:\n                            var points = { x1: this._parseNumber(), y1: this._parseNumber(), arcAngle: this._parseNumber(), arcLarge: this._parseArcFlag(), arcSweep: this._parseArcFlag(), x: this._parseNumber(), y: this._parseNumber() };\n                            return new window.SVGPathSegArcAbs(owningPathSegList, points.x, points.y, points.x1, points.y1, points.arcAngle, points.arcLarge, points.arcSweep);\n                        default:\n                            throw \"Unknown path seg type.\";\n                    }\n                };\n\n                var builder = new Builder();\n                var source = new Source(string);\n\n                if (!source.initialCommandIsMoveTo()) return [];\n                while (source.hasMoreData()) {\n                    var pathSeg = source.parseSegment();\n                    if (!pathSeg) return [];\n                    builder.appendSegment(pathSeg);\n                }\n\n                return builder.pathSegList;\n            };\n        }\n    })();\n\n    // String.padEnd polyfill for IE11\n    //\n    // https://github.com/uxitten/polyfill/blob/master/string.polyfill.js\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/padEnd\n    if (!String.prototype.padEnd) {\n        String.prototype.padEnd = function padEnd(targetLength, padString) {\n            targetLength = targetLength >> 0; //floor if number or convert non-number to 0;\n            padString = String(typeof padString !== 'undefined' ? padString : ' ');\n            if (this.length > targetLength) {\n                return String(this);\n            } else {\n                targetLength = targetLength - this.length;\n                if (targetLength > padString.length) {\n                    padString += padString.repeat(targetLength / padString.length); //append to original to ensure we are longer than needed\n                }\n                return String(this) + padString.slice(0, targetLength);\n            }\n        };\n    }\n\n    /* jshint ignore:end */\n\n    c3_chart_fn.axis = function () {};\n    c3_chart_fn.axis.labels = function (labels) {\n        var $$ = this.internal;\n        if (arguments.length) {\n            Object.keys(labels).forEach(function (axisId) {\n                $$.axis.setLabelText(axisId, labels[axisId]);\n            });\n            $$.axis.updateLabels();\n        }\n        // TODO: return some values?\n    };\n    c3_chart_fn.axis.max = function (max) {\n        var $$ = this.internal,\n            config = $$.config;\n        if (arguments.length) {\n            if ((typeof max === 'undefined' ? 'undefined' : _typeof(max)) === 'object') {\n                if (isValue(max.x)) {\n                    config.axis_x_max = max.x;\n                }\n                if (isValue(max.y)) {\n                    config.axis_y_max = max.y;\n                }\n                if (isValue(max.y2)) {\n                    config.axis_y2_max = max.y2;\n                }\n            } else {\n                config.axis_y_max = config.axis_y2_max = max;\n            }\n            $$.redraw({ withUpdateOrgXDomain: true, withUpdateXDomain: true });\n        } else {\n            return {\n                x: config.axis_x_max,\n                y: config.axis_y_max,\n                y2: config.axis_y2_max\n            };\n        }\n    };\n    c3_chart_fn.axis.min = function (min) {\n        var $$ = this.internal,\n            config = $$.config;\n        if (arguments.length) {\n            if ((typeof min === 'undefined' ? 'undefined' : _typeof(min)) === 'object') {\n                if (isValue(min.x)) {\n                    config.axis_x_min = min.x;\n                }\n                if (isValue(min.y)) {\n                    config.axis_y_min = min.y;\n                }\n                if (isValue(min.y2)) {\n                    config.axis_y2_min = min.y2;\n                }\n            } else {\n                config.axis_y_min = config.axis_y2_min = min;\n            }\n            $$.redraw({ withUpdateOrgXDomain: true, withUpdateXDomain: true });\n        } else {\n            return {\n                x: config.axis_x_min,\n                y: config.axis_y_min,\n                y2: config.axis_y2_min\n            };\n        }\n    };\n    c3_chart_fn.axis.range = function (range) {\n        if (arguments.length) {\n            if (isDefined(range.max)) {\n                this.axis.max(range.max);\n            }\n            if (isDefined(range.min)) {\n                this.axis.min(range.min);\n            }\n        } else {\n            return {\n                max: this.axis.max(),\n                min: this.axis.min()\n            };\n        }\n    };\n\n    c3_chart_fn.category = function (i, category) {\n        var $$ = this.internal,\n            config = $$.config;\n        if (arguments.length > 1) {\n            config.axis_x_categories[i] = category;\n            $$.redraw();\n        }\n        return config.axis_x_categories[i];\n    };\n    c3_chart_fn.categories = function (categories) {\n        var $$ = this.internal,\n            config = $$.config;\n        if (!arguments.length) {\n            return config.axis_x_categories;\n        }\n        config.axis_x_categories = categories;\n        $$.redraw();\n        return config.axis_x_categories;\n    };\n\n    c3_chart_fn.resize = function (size) {\n        var $$ = this.internal,\n            config = $$.config;\n        config.size_width = size ? size.width : null;\n        config.size_height = size ? size.height : null;\n        this.flush();\n    };\n\n    c3_chart_fn.flush = function () {\n        var $$ = this.internal;\n        $$.updateAndRedraw({ withLegend: true, withTransition: false, withTransitionForTransform: false });\n    };\n\n    c3_chart_fn.destroy = function () {\n        var $$ = this.internal;\n\n        window.clearInterval($$.intervalForObserveInserted);\n\n        if ($$.resizeTimeout !== undefined) {\n            window.clearTimeout($$.resizeTimeout);\n        }\n\n        if (window.detachEvent) {\n            window.detachEvent('onresize', $$.resizeIfElementDisplayed);\n        } else if (window.removeEventListener) {\n            window.removeEventListener('resize', $$.resizeIfElementDisplayed);\n        } else {\n            var wrapper = window.onresize;\n            // check if no one else removed our wrapper and remove our resizeFunction from it\n            if (wrapper && wrapper.add && wrapper.remove) {\n                wrapper.remove($$.resizeFunction);\n            }\n        }\n\n        // remove the inner resize functions\n        $$.resizeFunction.remove();\n\n        $$.selectChart.classed('c3', false).html(\"\");\n\n        // MEMO: this is needed because the reference of some elements will not be released, then memory leak will happen.\n        Object.keys($$).forEach(function (key) {\n            $$[key] = null;\n        });\n\n        return null;\n    };\n\n    // TODO: fix\n    c3_chart_fn.color = function (id) {\n        var $$ = this.internal;\n        return $$.color(id); // more patterns\n    };\n\n    c3_chart_fn.data = function (targetIds) {\n        var targets = this.internal.data.targets;\n        return typeof targetIds === 'undefined' ? targets : targets.filter(function (t) {\n            return [].concat(targetIds).indexOf(t.id) >= 0;\n        });\n    };\n    c3_chart_fn.data.shown = function (targetIds) {\n        return this.internal.filterTargetsToShow(this.data(targetIds));\n    };\n    c3_chart_fn.data.values = function (targetId) {\n        var targets,\n            values = null;\n        if (targetId) {\n            targets = this.data(targetId);\n            values = targets[0] ? targets[0].values.map(function (d) {\n                return d.value;\n            }) : null;\n        }\n        return values;\n    };\n    c3_chart_fn.data.names = function (names) {\n        this.internal.clearLegendItemTextBoxCache();\n        return this.internal.updateDataAttributes('names', names);\n    };\n    c3_chart_fn.data.colors = function (colors) {\n        return this.internal.updateDataAttributes('colors', colors);\n    };\n    c3_chart_fn.data.axes = function (axes) {\n        return this.internal.updateDataAttributes('axes', axes);\n    };\n\n    c3_chart_fn.flow = function (args) {\n        var $$ = this.internal,\n            targets,\n            data,\n            notfoundIds = [],\n            orgDataCount = $$.getMaxDataCount(),\n            dataCount,\n            domain,\n            baseTarget,\n            baseValue,\n            length = 0,\n            tail = 0,\n            diff,\n            to;\n\n        if (args.json) {\n            data = $$.convertJsonToData(args.json, args.keys);\n        } else if (args.rows) {\n            data = $$.convertRowsToData(args.rows);\n        } else if (args.columns) {\n            data = $$.convertColumnsToData(args.columns);\n        } else {\n            return;\n        }\n        targets = $$.convertDataToTargets(data, true);\n\n        // Update/Add data\n        $$.data.targets.forEach(function (t) {\n            var found = false,\n                i,\n                j;\n            for (i = 0; i < targets.length; i++) {\n                if (t.id === targets[i].id) {\n                    found = true;\n\n                    if (t.values[t.values.length - 1]) {\n                        tail = t.values[t.values.length - 1].index + 1;\n                    }\n                    length = targets[i].values.length;\n\n                    for (j = 0; j < length; j++) {\n                        targets[i].values[j].index = tail + j;\n                        if (!$$.isTimeSeries()) {\n                            targets[i].values[j].x = tail + j;\n                        }\n                    }\n                    t.values = t.values.concat(targets[i].values);\n\n                    targets.splice(i, 1);\n                    break;\n                }\n            }\n            if (!found) {\n                notfoundIds.push(t.id);\n            }\n        });\n\n        // Append null for not found targets\n        $$.data.targets.forEach(function (t) {\n            var i, j;\n            for (i = 0; i < notfoundIds.length; i++) {\n                if (t.id === notfoundIds[i]) {\n                    tail = t.values[t.values.length - 1].index + 1;\n                    for (j = 0; j < length; j++) {\n                        t.values.push({\n                            id: t.id,\n                            index: tail + j,\n                            x: $$.isTimeSeries() ? $$.getOtherTargetX(tail + j) : tail + j,\n                            value: null\n                        });\n                    }\n                }\n            }\n        });\n\n        // Generate null values for new target\n        if ($$.data.targets.length) {\n            targets.forEach(function (t) {\n                var i,\n                    missing = [];\n                for (i = $$.data.targets[0].values[0].index; i < tail; i++) {\n                    missing.push({\n                        id: t.id,\n                        index: i,\n                        x: $$.isTimeSeries() ? $$.getOtherTargetX(i) : i,\n                        value: null\n                    });\n                }\n                t.values.forEach(function (v) {\n                    v.index += tail;\n                    if (!$$.isTimeSeries()) {\n                        v.x += tail;\n                    }\n                });\n                t.values = missing.concat(t.values);\n            });\n        }\n        $$.data.targets = $$.data.targets.concat(targets); // add remained\n\n        // check data count because behavior needs to change when it's only one\n        dataCount = $$.getMaxDataCount();\n        baseTarget = $$.data.targets[0];\n        baseValue = baseTarget.values[0];\n\n        // Update length to flow if needed\n        if (isDefined(args.to)) {\n            length = 0;\n            to = $$.isTimeSeries() ? $$.parseDate(args.to) : args.to;\n            baseTarget.values.forEach(function (v) {\n                if (v.x < to) {\n                    length++;\n                }\n            });\n        } else if (isDefined(args.length)) {\n            length = args.length;\n        }\n\n        // If only one data, update the domain to flow from left edge of the chart\n        if (!orgDataCount) {\n            if ($$.isTimeSeries()) {\n                if (baseTarget.values.length > 1) {\n                    diff = baseTarget.values[baseTarget.values.length - 1].x - baseValue.x;\n                } else {\n                    diff = baseValue.x - $$.getXDomain($$.data.targets)[0];\n                }\n            } else {\n                diff = 1;\n            }\n            domain = [baseValue.x - diff, baseValue.x];\n            $$.updateXDomain(null, true, true, false, domain);\n        } else if (orgDataCount === 1) {\n            if ($$.isTimeSeries()) {\n                diff = (baseTarget.values[baseTarget.values.length - 1].x - baseValue.x) / 2;\n                domain = [new Date(+baseValue.x - diff), new Date(+baseValue.x + diff)];\n                $$.updateXDomain(null, true, true, false, domain);\n            }\n        }\n\n        // Set targets\n        $$.updateTargets($$.data.targets);\n\n        // Redraw with new targets\n        $$.redraw({\n            flow: {\n                index: baseValue.index,\n                length: length,\n                duration: isValue(args.duration) ? args.duration : $$.config.transition_duration,\n                done: args.done,\n                orgDataCount: orgDataCount\n            },\n            withLegend: true,\n            withTransition: orgDataCount > 1,\n            withTrimXDomain: false,\n            withUpdateXAxis: true\n        });\n    };\n\n    c3_chart_internal_fn.generateFlow = function (args) {\n        var $$ = this,\n            config = $$.config,\n            d3 = $$.d3;\n\n        return function () {\n            var targets = args.targets,\n                flow = args.flow,\n                drawBar = args.drawBar,\n                drawLine = args.drawLine,\n                drawArea = args.drawArea,\n                cx = args.cx,\n                cy = args.cy,\n                xv = args.xv,\n                xForText = args.xForText,\n                yForText = args.yForText,\n                duration = args.duration;\n\n            var translateX,\n                scaleX = 1,\n                transform,\n                flowIndex = flow.index,\n                flowLength = flow.length,\n                flowStart = $$.getValueOnIndex($$.data.targets[0].values, flowIndex),\n                flowEnd = $$.getValueOnIndex($$.data.targets[0].values, flowIndex + flowLength),\n                orgDomain = $$.x.domain(),\n                domain,\n                durationForFlow = flow.duration || duration,\n                done = flow.done || function () {},\n                wait = $$.generateWait();\n\n            var xgrid = $$.xgrid || d3.selectAll([]),\n                xgridLines = $$.xgridLines || d3.selectAll([]),\n                mainRegion = $$.mainRegion || d3.selectAll([]),\n                mainText = $$.mainText || d3.selectAll([]),\n                mainBar = $$.mainBar || d3.selectAll([]),\n                mainLine = $$.mainLine || d3.selectAll([]),\n                mainArea = $$.mainArea || d3.selectAll([]),\n                mainCircle = $$.mainCircle || d3.selectAll([]);\n\n            // set flag\n            $$.flowing = true;\n\n            // remove head data after rendered\n            $$.data.targets.forEach(function (d) {\n                d.values.splice(0, flowLength);\n            });\n\n            // update x domain to generate axis elements for flow\n            domain = $$.updateXDomain(targets, true, true);\n            // update elements related to x scale\n            if ($$.updateXGrid) {\n                $$.updateXGrid(true);\n            }\n\n            // generate transform to flow\n            if (!flow.orgDataCount) {\n                // if empty\n                if ($$.data.targets[0].values.length !== 1) {\n                    translateX = $$.x(orgDomain[0]) - $$.x(domain[0]);\n                } else {\n                    if ($$.isTimeSeries()) {\n                        flowStart = $$.getValueOnIndex($$.data.targets[0].values, 0);\n                        flowEnd = $$.getValueOnIndex($$.data.targets[0].values, $$.data.targets[0].values.length - 1);\n                        translateX = $$.x(flowStart.x) - $$.x(flowEnd.x);\n                    } else {\n                        translateX = diffDomain(domain) / 2;\n                    }\n                }\n            } else if (flow.orgDataCount === 1 || (flowStart && flowStart.x) === (flowEnd && flowEnd.x)) {\n                translateX = $$.x(orgDomain[0]) - $$.x(domain[0]);\n            } else {\n                if ($$.isTimeSeries()) {\n                    translateX = $$.x(orgDomain[0]) - $$.x(domain[0]);\n                } else {\n                    translateX = $$.x(flowStart.x) - $$.x(flowEnd.x);\n                }\n            }\n            scaleX = diffDomain(orgDomain) / diffDomain(domain);\n            transform = 'translate(' + translateX + ',0) scale(' + scaleX + ',1)';\n\n            $$.hideXGridFocus();\n\n            d3.transition().ease('linear').duration(durationForFlow).each(function () {\n                wait.add($$.axes.x.transition().call($$.xAxis));\n                wait.add(mainBar.transition().attr('transform', transform));\n                wait.add(mainLine.transition().attr('transform', transform));\n                wait.add(mainArea.transition().attr('transform', transform));\n                wait.add(mainCircle.transition().attr('transform', transform));\n                wait.add(mainText.transition().attr('transform', transform));\n                wait.add(mainRegion.filter($$.isRegionOnX).transition().attr('transform', transform));\n                wait.add(xgrid.transition().attr('transform', transform));\n                wait.add(xgridLines.transition().attr('transform', transform));\n            }).call(wait, function () {\n                var i,\n                    shapes = [],\n                    texts = [],\n                    eventRects = [];\n\n                // remove flowed elements\n                if (flowLength) {\n                    for (i = 0; i < flowLength; i++) {\n                        shapes.push('.' + CLASS.shape + '-' + (flowIndex + i));\n                        texts.push('.' + CLASS.text + '-' + (flowIndex + i));\n                        eventRects.push('.' + CLASS.eventRect + '-' + (flowIndex + i));\n                    }\n                    $$.svg.selectAll('.' + CLASS.shapes).selectAll(shapes).remove();\n                    $$.svg.selectAll('.' + CLASS.texts).selectAll(texts).remove();\n                    $$.svg.selectAll('.' + CLASS.eventRects).selectAll(eventRects).remove();\n                    $$.svg.select('.' + CLASS.xgrid).remove();\n                }\n\n                // draw again for removing flowed elements and reverting attr\n                xgrid.attr('transform', null).attr($$.xgridAttr);\n                xgridLines.attr('transform', null);\n                xgridLines.select('line').attr(\"x1\", config.axis_rotated ? 0 : xv).attr(\"x2\", config.axis_rotated ? $$.width : xv);\n                xgridLines.select('text').attr(\"x\", config.axis_rotated ? $$.width : 0).attr(\"y\", xv);\n                mainBar.attr('transform', null).attr(\"d\", drawBar);\n                mainLine.attr('transform', null).attr(\"d\", drawLine);\n                mainArea.attr('transform', null).attr(\"d\", drawArea);\n                mainCircle.attr('transform', null).attr(\"cx\", cx).attr(\"cy\", cy);\n                mainText.attr('transform', null).attr('x', xForText).attr('y', yForText).style('fill-opacity', $$.opacityForText.bind($$));\n                mainRegion.attr('transform', null);\n                mainRegion.select('rect').filter($$.isRegionOnX).attr(\"x\", $$.regionX.bind($$)).attr(\"width\", $$.regionWidth.bind($$));\n\n                if (config.interaction_enabled) {\n                    $$.redrawEventRect();\n                }\n\n                // callback for end of flow\n                done();\n\n                $$.flowing = false;\n            });\n        };\n    };\n\n    c3_chart_fn.focus = function (targetIds) {\n        var $$ = this.internal,\n            candidates;\n\n        targetIds = $$.mapToTargetIds(targetIds);\n        candidates = $$.svg.selectAll($$.selectorTargets(targetIds.filter($$.isTargetToShow, $$))), this.revert();\n        this.defocus();\n        candidates.classed(CLASS.focused, true).classed(CLASS.defocused, false);\n        if ($$.hasArcType()) {\n            $$.expandArc(targetIds);\n        }\n        $$.toggleFocusLegend(targetIds, true);\n\n        $$.focusedTargetIds = targetIds;\n        $$.defocusedTargetIds = $$.defocusedTargetIds.filter(function (id) {\n            return targetIds.indexOf(id) < 0;\n        });\n    };\n\n    c3_chart_fn.defocus = function (targetIds) {\n        var $$ = this.internal,\n            candidates;\n\n        targetIds = $$.mapToTargetIds(targetIds);\n        candidates = $$.svg.selectAll($$.selectorTargets(targetIds.filter($$.isTargetToShow, $$))), candidates.classed(CLASS.focused, false).classed(CLASS.defocused, true);\n        if ($$.hasArcType()) {\n            $$.unexpandArc(targetIds);\n        }\n        $$.toggleFocusLegend(targetIds, false);\n\n        $$.focusedTargetIds = $$.focusedTargetIds.filter(function (id) {\n            return targetIds.indexOf(id) < 0;\n        });\n        $$.defocusedTargetIds = targetIds;\n    };\n\n    c3_chart_fn.revert = function (targetIds) {\n        var $$ = this.internal,\n            candidates;\n\n        targetIds = $$.mapToTargetIds(targetIds);\n        candidates = $$.svg.selectAll($$.selectorTargets(targetIds)); // should be for all targets\n\n        candidates.classed(CLASS.focused, false).classed(CLASS.defocused, false);\n        if ($$.hasArcType()) {\n            $$.unexpandArc(targetIds);\n        }\n        if ($$.config.legend_show) {\n            $$.showLegend(targetIds.filter($$.isLegendToShow.bind($$)));\n            $$.legend.selectAll($$.selectorLegends(targetIds)).filter(function () {\n                return $$.d3.select(this).classed(CLASS.legendItemFocused);\n            }).classed(CLASS.legendItemFocused, false);\n        }\n\n        $$.focusedTargetIds = [];\n        $$.defocusedTargetIds = [];\n    };\n\n    c3_chart_fn.xgrids = function (grids) {\n        var $$ = this.internal,\n            config = $$.config;\n        if (!grids) {\n            return config.grid_x_lines;\n        }\n        config.grid_x_lines = grids;\n        $$.redrawWithoutRescale();\n        return config.grid_x_lines;\n    };\n    c3_chart_fn.xgrids.add = function (grids) {\n        var $$ = this.internal;\n        return this.xgrids($$.config.grid_x_lines.concat(grids ? grids : []));\n    };\n    c3_chart_fn.xgrids.remove = function (params) {\n        // TODO: multiple\n        var $$ = this.internal;\n        $$.removeGridLines(params, true);\n    };\n\n    c3_chart_fn.ygrids = function (grids) {\n        var $$ = this.internal,\n            config = $$.config;\n        if (!grids) {\n            return config.grid_y_lines;\n        }\n        config.grid_y_lines = grids;\n        $$.redrawWithoutRescale();\n        return config.grid_y_lines;\n    };\n    c3_chart_fn.ygrids.add = function (grids) {\n        var $$ = this.internal;\n        return this.ygrids($$.config.grid_y_lines.concat(grids ? grids : []));\n    };\n    c3_chart_fn.ygrids.remove = function (params) {\n        // TODO: multiple\n        var $$ = this.internal;\n        $$.removeGridLines(params, false);\n    };\n\n    c3_chart_fn.groups = function (groups) {\n        var $$ = this.internal,\n            config = $$.config;\n        if (isUndefined(groups)) {\n            return config.data_groups;\n        }\n        config.data_groups = groups;\n        $$.redraw();\n        return config.data_groups;\n    };\n\n    c3_chart_fn.legend = function () {};\n    c3_chart_fn.legend.show = function (targetIds) {\n        var $$ = this.internal;\n        $$.showLegend($$.mapToTargetIds(targetIds));\n        $$.updateAndRedraw({ withLegend: true });\n    };\n    c3_chart_fn.legend.hide = function (targetIds) {\n        var $$ = this.internal;\n        $$.hideLegend($$.mapToTargetIds(targetIds));\n        $$.updateAndRedraw({ withLegend: true });\n    };\n\n    c3_chart_fn.load = function (args) {\n        var $$ = this.internal,\n            config = $$.config;\n        // update xs if specified\n        if (args.xs) {\n            $$.addXs(args.xs);\n        }\n        // update names if exists\n        if ('names' in args) {\n            c3_chart_fn.data.names.bind(this)(args.names);\n        }\n        // update classes if exists\n        if ('classes' in args) {\n            Object.keys(args.classes).forEach(function (id) {\n                config.data_classes[id] = args.classes[id];\n            });\n        }\n        // update categories if exists\n        if ('categories' in args && $$.isCategorized()) {\n            config.axis_x_categories = args.categories;\n        }\n        // update axes if exists\n        if ('axes' in args) {\n            Object.keys(args.axes).forEach(function (id) {\n                config.data_axes[id] = args.axes[id];\n            });\n        }\n        // update colors if exists\n        if ('colors' in args) {\n            Object.keys(args.colors).forEach(function (id) {\n                config.data_colors[id] = args.colors[id];\n            });\n        }\n        // use cache if exists\n        if ('cacheIds' in args && $$.hasCaches(args.cacheIds)) {\n            $$.load($$.getCaches(args.cacheIds), args.done);\n            return;\n        }\n        // unload if needed\n        if ('unload' in args) {\n            // TODO: do not unload if target will load (included in url/rows/columns)\n            $$.unload($$.mapToTargetIds(typeof args.unload === 'boolean' && args.unload ? null : args.unload), function () {\n                $$.loadFromArgs(args);\n            });\n        } else {\n            $$.loadFromArgs(args);\n        }\n    };\n\n    c3_chart_fn.unload = function (args) {\n        var $$ = this.internal;\n        args = args || {};\n        if (args instanceof Array) {\n            args = { ids: args };\n        } else if (typeof args === 'string') {\n            args = { ids: [args] };\n        }\n        $$.unload($$.mapToTargetIds(args.ids), function () {\n            $$.redraw({ withUpdateOrgXDomain: true, withUpdateXDomain: true, withLegend: true });\n            if (args.done) {\n                args.done();\n            }\n        });\n    };\n\n    c3_chart_fn.regions = function (regions) {\n        var $$ = this.internal,\n            config = $$.config;\n        if (!regions) {\n            return config.regions;\n        }\n        config.regions = regions;\n        $$.redrawWithoutRescale();\n        return config.regions;\n    };\n    c3_chart_fn.regions.add = function (regions) {\n        var $$ = this.internal,\n            config = $$.config;\n        if (!regions) {\n            return config.regions;\n        }\n        config.regions = config.regions.concat(regions);\n        $$.redrawWithoutRescale();\n        return config.regions;\n    };\n    c3_chart_fn.regions.remove = function (options) {\n        var $$ = this.internal,\n            config = $$.config,\n            duration,\n            classes,\n            regions;\n\n        options = options || {};\n        duration = $$.getOption(options, \"duration\", config.transition_duration);\n        classes = $$.getOption(options, \"classes\", [CLASS.region]);\n\n        regions = $$.main.select('.' + CLASS.regions).selectAll(classes.map(function (c) {\n            return '.' + c;\n        }));\n        (duration ? regions.transition().duration(duration) : regions).style('opacity', 0).remove();\n\n        config.regions = config.regions.filter(function (region) {\n            var found = false;\n            if (!region['class']) {\n                return true;\n            }\n            region['class'].split(' ').forEach(function (c) {\n                if (classes.indexOf(c) >= 0) {\n                    found = true;\n                }\n            });\n            return !found;\n        });\n\n        return config.regions;\n    };\n\n    c3_chart_fn.selected = function (targetId) {\n        var $$ = this.internal,\n            d3 = $$.d3;\n        return d3.merge($$.main.selectAll('.' + CLASS.shapes + $$.getTargetSelectorSuffix(targetId)).selectAll('.' + CLASS.shape).filter(function () {\n            return d3.select(this).classed(CLASS.SELECTED);\n        }).map(function (d) {\n            return d.map(function (d) {\n                var data = d.__data__;return data.data ? data.data : data;\n            });\n        }));\n    };\n    c3_chart_fn.select = function (ids, indices, resetOther) {\n        var $$ = this.internal,\n            d3 = $$.d3,\n            config = $$.config;\n        if (!config.data_selection_enabled) {\n            return;\n        }\n        $$.main.selectAll('.' + CLASS.shapes).selectAll('.' + CLASS.shape).each(function (d, i) {\n            var shape = d3.select(this),\n                id = d.data ? d.data.id : d.id,\n                toggle = $$.getToggle(this, d).bind($$),\n                isTargetId = config.data_selection_grouped || !ids || ids.indexOf(id) >= 0,\n                isTargetIndex = !indices || indices.indexOf(i) >= 0,\n                isSelected = shape.classed(CLASS.SELECTED);\n            // line/area selection not supported yet\n            if (shape.classed(CLASS.line) || shape.classed(CLASS.area)) {\n                return;\n            }\n            if (isTargetId && isTargetIndex) {\n                if (config.data_selection_isselectable(d) && !isSelected) {\n                    toggle(true, shape.classed(CLASS.SELECTED, true), d, i);\n                }\n            } else if (isDefined(resetOther) && resetOther) {\n                if (isSelected) {\n                    toggle(false, shape.classed(CLASS.SELECTED, false), d, i);\n                }\n            }\n        });\n    };\n    c3_chart_fn.unselect = function (ids, indices) {\n        var $$ = this.internal,\n            d3 = $$.d3,\n            config = $$.config;\n        if (!config.data_selection_enabled) {\n            return;\n        }\n        $$.main.selectAll('.' + CLASS.shapes).selectAll('.' + CLASS.shape).each(function (d, i) {\n            var shape = d3.select(this),\n                id = d.data ? d.data.id : d.id,\n                toggle = $$.getToggle(this, d).bind($$),\n                isTargetId = config.data_selection_grouped || !ids || ids.indexOf(id) >= 0,\n                isTargetIndex = !indices || indices.indexOf(i) >= 0,\n                isSelected = shape.classed(CLASS.SELECTED);\n            // line/area selection not supported yet\n            if (shape.classed(CLASS.line) || shape.classed(CLASS.area)) {\n                return;\n            }\n            if (isTargetId && isTargetIndex) {\n                if (config.data_selection_isselectable(d)) {\n                    if (isSelected) {\n                        toggle(false, shape.classed(CLASS.SELECTED, false), d, i);\n                    }\n                }\n            }\n        });\n    };\n\n    c3_chart_fn.show = function (targetIds, options) {\n        var $$ = this.internal,\n            targets;\n\n        targetIds = $$.mapToTargetIds(targetIds);\n        options = options || {};\n\n        $$.removeHiddenTargetIds(targetIds);\n        targets = $$.svg.selectAll($$.selectorTargets(targetIds));\n\n        targets.transition().style('opacity', 1, 'important').call($$.endall, function () {\n            targets.style('opacity', null).style('opacity', 1);\n        });\n\n        if (options.withLegend) {\n            $$.showLegend(targetIds);\n        }\n\n        $$.redraw({ withUpdateOrgXDomain: true, withUpdateXDomain: true, withLegend: true });\n    };\n\n    c3_chart_fn.hide = function (targetIds, options) {\n        var $$ = this.internal,\n            targets;\n\n        targetIds = $$.mapToTargetIds(targetIds);\n        options = options || {};\n\n        $$.addHiddenTargetIds(targetIds);\n        targets = $$.svg.selectAll($$.selectorTargets(targetIds));\n\n        targets.transition().style('opacity', 0, 'important').call($$.endall, function () {\n            targets.style('opacity', null).style('opacity', 0);\n        });\n\n        if (options.withLegend) {\n            $$.hideLegend(targetIds);\n        }\n\n        $$.redraw({ withUpdateOrgXDomain: true, withUpdateXDomain: true, withLegend: true });\n    };\n\n    c3_chart_fn.toggle = function (targetIds, options) {\n        var that = this,\n            $$ = this.internal;\n        $$.mapToTargetIds(targetIds).forEach(function (targetId) {\n            $$.isTargetToShow(targetId) ? that.hide(targetId, options) : that.show(targetId, options);\n        });\n    };\n\n    c3_chart_fn.tooltip = function () {};\n    c3_chart_fn.tooltip.show = function (args) {\n        var $$ = this.internal,\n            index,\n            mouse;\n\n        // determine mouse position on the chart\n        if (args.mouse) {\n            mouse = args.mouse;\n        }\n\n        // determine focus data\n        if (args.data) {\n            if ($$.isMultipleX()) {\n                // if multiple xs, target point will be determined by mouse\n                mouse = [$$.x(args.data.x), $$.getYScale(args.data.id)(args.data.value)];\n                index = null;\n            } else {\n                // TODO: when tooltip_grouped = false\n                index = isValue(args.data.index) ? args.data.index : $$.getIndexByX(args.data.x);\n            }\n        } else if (typeof args.x !== 'undefined') {\n            index = $$.getIndexByX(args.x);\n        } else if (typeof args.index !== 'undefined') {\n            index = args.index;\n        }\n\n        // emulate mouse events to show\n        $$.dispatchEvent('mouseover', index, mouse);\n        $$.dispatchEvent('mousemove', index, mouse);\n\n        $$.config.tooltip_onshow.call($$, args.data);\n    };\n    c3_chart_fn.tooltip.hide = function () {\n        // TODO: get target data by checking the state of focus\n        this.internal.dispatchEvent('mouseout', 0);\n\n        this.internal.config.tooltip_onhide.call(this);\n    };\n\n    c3_chart_fn.transform = function (type, targetIds) {\n        var $$ = this.internal,\n            options = ['pie', 'donut'].indexOf(type) >= 0 ? { withTransform: true } : null;\n        $$.transformTo(targetIds, type, options);\n    };\n\n    c3_chart_internal_fn.transformTo = function (targetIds, type, optionsForRedraw) {\n        var $$ = this,\n            withTransitionForAxis = !$$.hasArcType(),\n            options = optionsForRedraw || { withTransitionForAxis: withTransitionForAxis };\n        options.withTransitionForTransform = false;\n        $$.transiting = false;\n        $$.setTargetType(targetIds, type);\n        $$.updateTargets($$.data.targets); // this is needed when transforming to arc\n        $$.updateAndRedraw(options);\n    };\n\n    c3_chart_fn.x = function (x) {\n        var $$ = this.internal;\n        if (arguments.length) {\n            $$.updateTargetX($$.data.targets, x);\n            $$.redraw({ withUpdateOrgXDomain: true, withUpdateXDomain: true });\n        }\n        return $$.data.xs;\n    };\n    c3_chart_fn.xs = function (xs) {\n        var $$ = this.internal;\n        if (arguments.length) {\n            $$.updateTargetXs($$.data.targets, xs);\n            $$.redraw({ withUpdateOrgXDomain: true, withUpdateXDomain: true });\n        }\n        return $$.data.xs;\n    };\n\n    c3_chart_fn.zoom = function (domain) {\n        var $$ = this.internal;\n        if (domain) {\n            if ($$.isTimeSeries()) {\n                domain = domain.map(function (x) {\n                    return $$.parseDate(x);\n                });\n            }\n            $$.brush.extent(domain);\n            $$.redraw({ withUpdateXDomain: true, withY: $$.config.zoom_rescale });\n            $$.config.zoom_onzoom.call(this, $$.x.orgDomain());\n        }\n        return $$.brush.extent();\n    };\n    c3_chart_fn.zoom.enable = function (enabled) {\n        var $$ = this.internal;\n        $$.config.zoom_enabled = enabled;\n        $$.updateAndRedraw();\n    };\n    c3_chart_fn.unzoom = function () {\n        var $$ = this.internal;\n        $$.brush.clear().update();\n        $$.redraw({ withUpdateXDomain: true });\n    };\n\n    c3_chart_fn.zoom.max = function (max) {\n        var $$ = this.internal,\n            config = $$.config,\n            d3 = $$.d3;\n        if (max === 0 || max) {\n            config.zoom_x_max = d3.max([$$.orgXDomain[1], max]);\n        } else {\n            return config.zoom_x_max;\n        }\n    };\n\n    c3_chart_fn.zoom.min = function (min) {\n        var $$ = this.internal,\n            config = $$.config,\n            d3 = $$.d3;\n        if (min === 0 || min) {\n            config.zoom_x_min = d3.min([$$.orgXDomain[0], min]);\n        } else {\n            return config.zoom_x_min;\n        }\n    };\n\n    c3_chart_fn.zoom.range = function (range) {\n        if (arguments.length) {\n            if (isDefined(range.max)) {\n                this.domain.max(range.max);\n            }\n            if (isDefined(range.min)) {\n                this.domain.min(range.min);\n            }\n        } else {\n            return {\n                max: this.domain.max(),\n                min: this.domain.min()\n            };\n        }\n    };\n\n    c3_chart_internal_fn.initPie = function () {\n        var $$ = this,\n            d3 = $$.d3;\n        $$.pie = d3.layout.pie().value(function (d) {\n            return d.values.reduce(function (a, b) {\n                return a + b.value;\n            }, 0);\n        });\n        $$.pie.sort($$.getOrderFunction() || null);\n    };\n\n    c3_chart_internal_fn.updateRadius = function () {\n        var $$ = this,\n            config = $$.config,\n            w = config.gauge_width || config.donut_width,\n            gaugeArcWidth = $$.filterTargetsToShow($$.data.targets).length * $$.config.gauge_arcs_minWidth;\n        $$.radiusExpanded = Math.min($$.arcWidth, $$.arcHeight) / 2 * ($$.hasType('gauge') ? 0.85 : 1);\n        $$.radius = $$.radiusExpanded * 0.95;\n        $$.innerRadiusRatio = w ? ($$.radius - w) / $$.radius : 0.6;\n        $$.innerRadius = $$.hasType('donut') || $$.hasType('gauge') ? $$.radius * $$.innerRadiusRatio : 0;\n        $$.gaugeArcWidth = w ? w : gaugeArcWidth <= $$.radius - $$.innerRadius ? $$.radius - $$.innerRadius : gaugeArcWidth <= $$.radius ? gaugeArcWidth : $$.radius;\n    };\n\n    c3_chart_internal_fn.updateArc = function () {\n        var $$ = this;\n        $$.svgArc = $$.getSvgArc();\n        $$.svgArcExpanded = $$.getSvgArcExpanded();\n        $$.svgArcExpandedSub = $$.getSvgArcExpanded(0.98);\n    };\n\n    c3_chart_internal_fn.updateAngle = function (d) {\n        var $$ = this,\n            config = $$.config,\n            found = false,\n            index = 0,\n            gMin,\n            gMax,\n            gTic,\n            gValue;\n\n        if (!config) {\n            return null;\n        }\n\n        $$.pie($$.filterTargetsToShow($$.data.targets)).forEach(function (t) {\n            if (!found && t.data.id === d.data.id) {\n                found = true;\n                d = t;\n                d.index = index;\n            }\n            index++;\n        });\n        if (isNaN(d.startAngle)) {\n            d.startAngle = 0;\n        }\n        if (isNaN(d.endAngle)) {\n            d.endAngle = d.startAngle;\n        }\n        if ($$.isGaugeType(d.data)) {\n            gMin = config.gauge_min;\n            gMax = config.gauge_max;\n            gTic = Math.PI * (config.gauge_fullCircle ? 2 : 1) / (gMax - gMin);\n            gValue = d.value < gMin ? 0 : d.value < gMax ? d.value - gMin : gMax - gMin;\n            d.startAngle = config.gauge_startingAngle;\n            d.endAngle = d.startAngle + gTic * gValue;\n        }\n        return found ? d : null;\n    };\n\n    c3_chart_internal_fn.getSvgArc = function () {\n        var $$ = this,\n            hasGaugeType = $$.hasType('gauge'),\n            singleArcWidth = $$.gaugeArcWidth / $$.filterTargetsToShow($$.data.targets).length,\n            arc = $$.d3.svg.arc().outerRadius(function (d) {\n            return hasGaugeType ? $$.radius - singleArcWidth * d.index : $$.radius;\n        }).innerRadius(function (d) {\n            return hasGaugeType ? $$.radius - singleArcWidth * (d.index + 1) : $$.innerRadius;\n        }),\n            newArc = function newArc(d, withoutUpdate) {\n            var updated;\n            if (withoutUpdate) {\n                return arc(d);\n            } // for interpolate\n            updated = $$.updateAngle(d);\n            return updated ? arc(updated) : \"M 0 0\";\n        };\n        // TODO: extends all function\n        newArc.centroid = arc.centroid;\n        return newArc;\n    };\n\n    c3_chart_internal_fn.getSvgArcExpanded = function (rate) {\n        rate = rate || 1;\n        var $$ = this,\n            hasGaugeType = $$.hasType('gauge'),\n            singleArcWidth = $$.gaugeArcWidth / $$.filterTargetsToShow($$.data.targets).length,\n            expandWidth = Math.min($$.radiusExpanded * rate - $$.radius, singleArcWidth * 0.8 - (1 - rate) * 100),\n            arc = $$.d3.svg.arc().outerRadius(function (d) {\n            return hasGaugeType ? $$.radius - singleArcWidth * d.index + expandWidth : $$.radiusExpanded * rate;\n        }).innerRadius(function (d) {\n            return hasGaugeType ? $$.radius - singleArcWidth * (d.index + 1) : $$.innerRadius;\n        });\n        return function (d) {\n            var updated = $$.updateAngle(d);\n            return updated ? arc(updated) : \"M 0 0\";\n        };\n    };\n\n    c3_chart_internal_fn.getArc = function (d, withoutUpdate, force) {\n        return force || this.isArcType(d.data) ? this.svgArc(d, withoutUpdate) : \"M 0 0\";\n    };\n\n    c3_chart_internal_fn.transformForArcLabel = function (d) {\n        var $$ = this,\n            config = $$.config,\n            updated = $$.updateAngle(d),\n            c,\n            x,\n            y,\n            h,\n            ratio,\n            translate = \"\",\n            hasGauge = $$.hasType('gauge');\n        if (updated && !hasGauge) {\n            c = this.svgArc.centroid(updated);\n            x = isNaN(c[0]) ? 0 : c[0];\n            y = isNaN(c[1]) ? 0 : c[1];\n            h = Math.sqrt(x * x + y * y);\n            if ($$.hasType('donut') && config.donut_label_ratio) {\n                ratio = isFunction(config.donut_label_ratio) ? config.donut_label_ratio(d, $$.radius, h) : config.donut_label_ratio;\n            } else if ($$.hasType('pie') && config.pie_label_ratio) {\n                ratio = isFunction(config.pie_label_ratio) ? config.pie_label_ratio(d, $$.radius, h) : config.pie_label_ratio;\n            } else {\n                ratio = $$.radius && h ? (36 / $$.radius > 0.375 ? 1.175 - 36 / $$.radius : 0.8) * $$.radius / h : 0;\n            }\n            translate = \"translate(\" + x * ratio + ',' + y * ratio + \")\";\n        } else if (updated && hasGauge && $$.filterTargetsToShow($$.data.targets).length > 1) {\n            var y1 = Math.sin(updated.endAngle - Math.PI / 2);\n            x = Math.cos(updated.endAngle - Math.PI / 2) * ($$.radiusExpanded + 25);\n            y = y1 * ($$.radiusExpanded + 15 - Math.abs(y1 * 10)) + 3;\n            translate = \"translate(\" + x + ',' + y + \")\";\n        }\n        return translate;\n    };\n\n    c3_chart_internal_fn.getArcRatio = function (d) {\n        var $$ = this,\n            config = $$.config,\n            whole = Math.PI * ($$.hasType('gauge') && !config.gauge_fullCircle ? 1 : 2);\n        return d ? (d.endAngle - d.startAngle) / whole : null;\n    };\n\n    c3_chart_internal_fn.convertToArcData = function (d) {\n        return this.addName({\n            id: d.data.id,\n            value: d.value,\n            ratio: this.getArcRatio(d),\n            index: d.index\n        });\n    };\n\n    c3_chart_internal_fn.textForArcLabel = function (d) {\n        var $$ = this,\n            updated,\n            value,\n            ratio,\n            id,\n            format;\n        if (!$$.shouldShowArcLabel()) {\n            return \"\";\n        }\n        updated = $$.updateAngle(d);\n        value = updated ? updated.value : null;\n        ratio = $$.getArcRatio(updated);\n        id = d.data.id;\n        if (!$$.hasType('gauge') && !$$.meetsArcLabelThreshold(ratio)) {\n            return \"\";\n        }\n        format = $$.getArcLabelFormat();\n        return format ? format(value, ratio, id) : $$.defaultArcValueFormat(value, ratio);\n    };\n\n    c3_chart_internal_fn.textForGaugeMinMax = function (value, isMax) {\n        var $$ = this,\n            format = $$.getGaugeLabelExtents();\n\n        return format ? format(value, isMax) : value;\n    };\n\n    c3_chart_internal_fn.expandArc = function (targetIds) {\n        var $$ = this,\n            interval;\n\n        // MEMO: avoid to cancel transition\n        if ($$.transiting) {\n            interval = window.setInterval(function () {\n                if (!$$.transiting) {\n                    window.clearInterval(interval);\n                    if ($$.legend.selectAll('.c3-legend-item-focused').size() > 0) {\n                        $$.expandArc(targetIds);\n                    }\n                }\n            }, 10);\n            return;\n        }\n\n        targetIds = $$.mapToTargetIds(targetIds);\n\n        $$.svg.selectAll($$.selectorTargets(targetIds, '.' + CLASS.chartArc)).each(function (d) {\n            if (!$$.shouldExpand(d.data.id)) {\n                return;\n            }\n            $$.d3.select(this).selectAll('path').transition().duration($$.expandDuration(d.data.id)).attr(\"d\", $$.svgArcExpanded).transition().duration($$.expandDuration(d.data.id) * 2).attr(\"d\", $$.svgArcExpandedSub).each(function (d) {\n                if ($$.isDonutType(d.data)) {\n                    // callback here\n                }\n            });\n        });\n    };\n\n    c3_chart_internal_fn.unexpandArc = function (targetIds) {\n        var $$ = this;\n\n        if ($$.transiting) {\n            return;\n        }\n\n        targetIds = $$.mapToTargetIds(targetIds);\n\n        $$.svg.selectAll($$.selectorTargets(targetIds, '.' + CLASS.chartArc)).selectAll('path').transition().duration(function (d) {\n            return $$.expandDuration(d.data.id);\n        }).attr(\"d\", $$.svgArc);\n        $$.svg.selectAll('.' + CLASS.arc);\n    };\n\n    c3_chart_internal_fn.expandDuration = function (id) {\n        var $$ = this,\n            config = $$.config;\n\n        if ($$.isDonutType(id)) {\n            return config.donut_expand_duration;\n        } else if ($$.isGaugeType(id)) {\n            return config.gauge_expand_duration;\n        } else if ($$.isPieType(id)) {\n            return config.pie_expand_duration;\n        } else {\n            return 50;\n        }\n    };\n\n    c3_chart_internal_fn.shouldExpand = function (id) {\n        var $$ = this,\n            config = $$.config;\n        return $$.isDonutType(id) && config.donut_expand || $$.isGaugeType(id) && config.gauge_expand || $$.isPieType(id) && config.pie_expand;\n    };\n\n    c3_chart_internal_fn.shouldShowArcLabel = function () {\n        var $$ = this,\n            config = $$.config,\n            shouldShow = true;\n        if ($$.hasType('donut')) {\n            shouldShow = config.donut_label_show;\n        } else if ($$.hasType('pie')) {\n            shouldShow = config.pie_label_show;\n        }\n        // when gauge, always true\n        return shouldShow;\n    };\n\n    c3_chart_internal_fn.meetsArcLabelThreshold = function (ratio) {\n        var $$ = this,\n            config = $$.config,\n            threshold = $$.hasType('donut') ? config.donut_label_threshold : config.pie_label_threshold;\n        return ratio >= threshold;\n    };\n\n    c3_chart_internal_fn.getArcLabelFormat = function () {\n        var $$ = this,\n            config = $$.config,\n            format = config.pie_label_format;\n        if ($$.hasType('gauge')) {\n            format = config.gauge_label_format;\n        } else if ($$.hasType('donut')) {\n            format = config.donut_label_format;\n        }\n        return format;\n    };\n\n    c3_chart_internal_fn.getGaugeLabelExtents = function () {\n        var $$ = this,\n            config = $$.config;\n        return config.gauge_label_extents;\n    };\n\n    c3_chart_internal_fn.getArcTitle = function () {\n        var $$ = this;\n        return $$.hasType('donut') ? $$.config.donut_title : \"\";\n    };\n\n    c3_chart_internal_fn.updateTargetsForArc = function (targets) {\n        var $$ = this,\n            main = $$.main,\n            mainPieUpdate,\n            mainPieEnter,\n            classChartArc = $$.classChartArc.bind($$),\n            classArcs = $$.classArcs.bind($$),\n            classFocus = $$.classFocus.bind($$);\n        mainPieUpdate = main.select('.' + CLASS.chartArcs).selectAll('.' + CLASS.chartArc).data($$.pie(targets)).attr(\"class\", function (d) {\n            return classChartArc(d) + classFocus(d.data);\n        });\n        mainPieEnter = mainPieUpdate.enter().append(\"g\").attr(\"class\", classChartArc);\n        mainPieEnter.append('g').attr('class', classArcs);\n        mainPieEnter.append(\"text\").attr(\"dy\", $$.hasType('gauge') ? \"-.1em\" : \".35em\").style(\"opacity\", 0).style(\"text-anchor\", \"middle\").style(\"pointer-events\", \"none\");\n        // MEMO: can not keep same color..., but not bad to update color in redraw\n        //mainPieUpdate.exit().remove();\n    };\n\n    c3_chart_internal_fn.initArc = function () {\n        var $$ = this;\n        $$.arcs = $$.main.select('.' + CLASS.chart).append(\"g\").attr(\"class\", CLASS.chartArcs).attr(\"transform\", $$.getTranslate('arc'));\n        $$.arcs.append('text').attr('class', CLASS.chartArcsTitle).style(\"text-anchor\", \"middle\").text($$.getArcTitle());\n    };\n\n    c3_chart_internal_fn.redrawArc = function (duration, durationForExit, withTransform) {\n        var $$ = this,\n            d3 = $$.d3,\n            config = $$.config,\n            main = $$.main,\n            mainArc,\n            backgroundArc,\n            mainArcLabelLine,\n            hasGaugeType = $$.hasType('gauge');\n        mainArc = main.selectAll('.' + CLASS.arcs).selectAll('.' + CLASS.arc).data($$.arcData.bind($$));\n        mainArc.enter().append('path').attr(\"class\", $$.classArc.bind($$)).style(\"fill\", function (d) {\n            return $$.color(d.data);\n        }).style(\"cursor\", function (d) {\n            return config.interaction_enabled && config.data_selection_isselectable(d) ? \"pointer\" : null;\n        }).each(function (d) {\n            if ($$.isGaugeType(d.data)) {\n                d.startAngle = d.endAngle = config.gauge_startingAngle;\n            }\n            this._current = d;\n        });\n        if (hasGaugeType) {\n            mainArcLabelLine = main.selectAll('.' + CLASS.arcs).selectAll('.' + CLASS.arcLabelLine).data($$.arcData.bind($$));\n            mainArcLabelLine.enter().append('rect').attr(\"class\", function (d) {\n                return CLASS.arcLabelLine + ' ' + CLASS.target + ' ' + CLASS.target + '-' + d.data.id;\n            });\n            if ($$.filterTargetsToShow($$.data.targets).length === 1) {\n                mainArcLabelLine.style(\"display\", \"none\");\n            } else {\n                mainArcLabelLine.style(\"fill\", function (d) {\n                    return config.color_pattern.length > 0 ? $$.levelColor(d.data.values[0].value) : $$.color(d.data);\n                }).style(\"display\", config.gauge_labelLine_show ? \"\" : \"none\").each(function (d) {\n                    var lineLength = 0,\n                        lineThickness = 2,\n                        x = 0,\n                        y = 0,\n                        transform = \"\";\n                    if ($$.hiddenTargetIds.indexOf(d.data.id) < 0) {\n                        var updated = $$.updateAngle(d),\n                            innerLineLength = $$.gaugeArcWidth / $$.filterTargetsToShow($$.data.targets).length * (updated.index + 1),\n                            lineAngle = updated.endAngle - Math.PI / 2,\n                            arcInnerRadius = $$.radius - innerLineLength,\n                            linePositioningAngle = lineAngle - (arcInnerRadius === 0 ? 0 : 1 / arcInnerRadius);\n                        lineLength = $$.radiusExpanded - $$.radius + innerLineLength;\n                        x = Math.cos(linePositioningAngle) * arcInnerRadius;\n                        y = Math.sin(linePositioningAngle) * arcInnerRadius;\n                        transform = \"rotate(\" + lineAngle * 180 / Math.PI + \", \" + x + \", \" + y + \")\";\n                    }\n                    d3.select(this).attr({ x: x, y: y, width: lineLength, height: lineThickness, transform: transform }).style(\"stroke-dasharray\", \"0, \" + (lineLength + lineThickness) + \", 0\");\n                });\n            }\n        }\n        mainArc.attr(\"transform\", function (d) {\n            return !$$.isGaugeType(d.data) && withTransform ? \"scale(0)\" : \"\";\n        }).on('mouseover', config.interaction_enabled ? function (d) {\n            var updated, arcData;\n            if ($$.transiting) {\n                // skip while transiting\n                return;\n            }\n            updated = $$.updateAngle(d);\n            if (updated) {\n                arcData = $$.convertToArcData(updated);\n                // transitions\n                $$.expandArc(updated.data.id);\n                $$.api.focus(updated.data.id);\n                $$.toggleFocusLegend(updated.data.id, true);\n                $$.config.data_onmouseover(arcData, this);\n            }\n        } : null).on('mousemove', config.interaction_enabled ? function (d) {\n            var updated = $$.updateAngle(d),\n                arcData,\n                selectedData;\n            if (updated) {\n                arcData = $$.convertToArcData(updated), selectedData = [arcData];\n                $$.showTooltip(selectedData, this);\n            }\n        } : null).on('mouseout', config.interaction_enabled ? function (d) {\n            var updated, arcData;\n            if ($$.transiting) {\n                // skip while transiting\n                return;\n            }\n            updated = $$.updateAngle(d);\n            if (updated) {\n                arcData = $$.convertToArcData(updated);\n                // transitions\n                $$.unexpandArc(updated.data.id);\n                $$.api.revert();\n                $$.revertLegend();\n                $$.hideTooltip();\n                $$.config.data_onmouseout(arcData, this);\n            }\n        } : null).on('click', config.interaction_enabled ? function (d, i) {\n            var updated = $$.updateAngle(d),\n                arcData;\n            if (updated) {\n                arcData = $$.convertToArcData(updated);\n                if ($$.toggleShape) {\n                    $$.toggleShape(this, arcData, i);\n                }\n                $$.config.data_onclick.call($$.api, arcData, this);\n            }\n        } : null).each(function () {\n            $$.transiting = true;\n        }).transition().duration(duration).attrTween(\"d\", function (d) {\n            var updated = $$.updateAngle(d),\n                interpolate;\n            if (!updated) {\n                return function () {\n                    return \"M 0 0\";\n                };\n            }\n            //                if (this._current === d) {\n            //                    this._current = {\n            //                        startAngle: Math.PI*2,\n            //                        endAngle: Math.PI*2,\n            //                    };\n            //                }\n            if (isNaN(this._current.startAngle)) {\n                this._current.startAngle = 0;\n            }\n            if (isNaN(this._current.endAngle)) {\n                this._current.endAngle = this._current.startAngle;\n            }\n            interpolate = d3.interpolate(this._current, updated);\n            this._current = interpolate(0);\n            return function (t) {\n                var interpolated = interpolate(t);\n                interpolated.data = d.data; // data.id will be updated by interporator\n                return $$.getArc(interpolated, true);\n            };\n        }).attr(\"transform\", withTransform ? \"scale(1)\" : \"\").style(\"fill\", function (d) {\n            return $$.levelColor ? $$.levelColor(d.data.values[0].value) : $$.color(d.data.id);\n        }) // Where gauge reading color would receive customization.\n        .call($$.endall, function () {\n            $$.transiting = false;\n        });\n        mainArc.exit().transition().duration(durationForExit).style('opacity', 0).remove();\n        main.selectAll('.' + CLASS.chartArc).select('text').style(\"opacity\", 0).attr('class', function (d) {\n            return $$.isGaugeType(d.data) ? CLASS.gaugeValue : '';\n        }).text($$.textForArcLabel.bind($$)).attr(\"transform\", $$.transformForArcLabel.bind($$)).style('font-size', function (d) {\n            return $$.isGaugeType(d.data) && $$.filterTargetsToShow($$.data.targets).length === 1 ? Math.round($$.radius / 5) + 'px' : '';\n        }).transition().duration(duration).style(\"opacity\", function (d) {\n            return $$.isTargetToShow(d.data.id) && $$.isArcType(d.data) ? 1 : 0;\n        });\n        main.select('.' + CLASS.chartArcsTitle).style(\"opacity\", $$.hasType('donut') || hasGaugeType ? 1 : 0);\n\n        if (hasGaugeType) {\n            var index = 0;\n            backgroundArc = $$.arcs.select('g.' + CLASS.chartArcsBackground).selectAll('path.' + CLASS.chartArcsBackground).data($$.data.targets);\n            backgroundArc.enter().append(\"path\");\n            backgroundArc.attr(\"class\", function (d, i) {\n                return CLASS.chartArcsBackground + ' ' + CLASS.chartArcsBackground + '-' + i;\n            }).attr(\"d\", function (d1) {\n                if ($$.hiddenTargetIds.indexOf(d1.id) >= 0) {\n                    return \"M 0 0\";\n                }\n\n                var d = {\n                    data: [{ value: config.gauge_max }],\n                    startAngle: config.gauge_startingAngle,\n                    endAngle: -1 * config.gauge_startingAngle * (config.gauge_fullCircle ? Math.PI : 1),\n                    index: index++\n                };\n                return $$.getArc(d, true, true);\n            });\n            backgroundArc.exit().remove();\n\n            $$.arcs.select('.' + CLASS.chartArcsGaugeUnit).attr(\"dy\", \".75em\").text(config.gauge_label_show ? config.gauge_units : '');\n            $$.arcs.select('.' + CLASS.chartArcsGaugeMin).attr(\"dx\", -1 * ($$.innerRadius + ($$.radius - $$.innerRadius) / (config.gauge_fullCircle ? 1 : 2)) + \"px\").attr(\"dy\", \"1.2em\").text(config.gauge_label_show ? $$.textForGaugeMinMax(config.gauge_min, false) : '');\n            $$.arcs.select('.' + CLASS.chartArcsGaugeMax).attr(\"dx\", $$.innerRadius + ($$.radius - $$.innerRadius) / (config.gauge_fullCircle ? 1 : 2) + \"px\").attr(\"dy\", \"1.2em\").text(config.gauge_label_show ? $$.textForGaugeMinMax(config.gauge_max, true) : '');\n        }\n    };\n    c3_chart_internal_fn.initGauge = function () {\n        var arcs = this.arcs;\n        if (this.hasType('gauge')) {\n            arcs.append('g').attr(\"class\", CLASS.chartArcsBackground);\n            arcs.append(\"text\").attr(\"class\", CLASS.chartArcsGaugeUnit).style(\"text-anchor\", \"middle\").style(\"pointer-events\", \"none\");\n            arcs.append(\"text\").attr(\"class\", CLASS.chartArcsGaugeMin).style(\"text-anchor\", \"middle\").style(\"pointer-events\", \"none\");\n            arcs.append(\"text\").attr(\"class\", CLASS.chartArcsGaugeMax).style(\"text-anchor\", \"middle\").style(\"pointer-events\", \"none\");\n        }\n    };\n    c3_chart_internal_fn.getGaugeLabelHeight = function () {\n        return this.config.gauge_label_show ? 20 : 0;\n    };\n\n    c3_chart_internal_fn.hasCaches = function (ids) {\n        for (var i = 0; i < ids.length; i++) {\n            if (!(ids[i] in this.cache)) {\n                return false;\n            }\n        }\n        return true;\n    };\n    c3_chart_internal_fn.addCache = function (id, target) {\n        this.cache[id] = this.cloneTarget(target);\n    };\n    c3_chart_internal_fn.getCaches = function (ids) {\n        var targets = [],\n            i;\n        for (i = 0; i < ids.length; i++) {\n            if (ids[i] in this.cache) {\n                targets.push(this.cloneTarget(this.cache[ids[i]]));\n            }\n        }\n        return targets;\n    };\n\n    c3_chart_internal_fn.categoryName = function (i) {\n        var config = this.config;\n        return i < config.axis_x_categories.length ? config.axis_x_categories[i] : i;\n    };\n\n    c3_chart_internal_fn.generateClass = function (prefix, targetId) {\n        return \" \" + prefix + \" \" + prefix + this.getTargetSelectorSuffix(targetId);\n    };\n    c3_chart_internal_fn.classText = function (d) {\n        return this.generateClass(CLASS.text, d.index);\n    };\n    c3_chart_internal_fn.classTexts = function (d) {\n        return this.generateClass(CLASS.texts, d.id);\n    };\n    c3_chart_internal_fn.classShape = function (d) {\n        return this.generateClass(CLASS.shape, d.index);\n    };\n    c3_chart_internal_fn.classShapes = function (d) {\n        return this.generateClass(CLASS.shapes, d.id);\n    };\n    c3_chart_internal_fn.classLine = function (d) {\n        return this.classShape(d) + this.generateClass(CLASS.line, d.id);\n    };\n    c3_chart_internal_fn.classLines = function (d) {\n        return this.classShapes(d) + this.generateClass(CLASS.lines, d.id);\n    };\n    c3_chart_internal_fn.classCircle = function (d) {\n        return this.classShape(d) + this.generateClass(CLASS.circle, d.index);\n    };\n    c3_chart_internal_fn.classCircles = function (d) {\n        return this.classShapes(d) + this.generateClass(CLASS.circles, d.id);\n    };\n    c3_chart_internal_fn.classBar = function (d) {\n        return this.classShape(d) + this.generateClass(CLASS.bar, d.index);\n    };\n    c3_chart_internal_fn.classBars = function (d) {\n        return this.classShapes(d) + this.generateClass(CLASS.bars, d.id);\n    };\n    c3_chart_internal_fn.classArc = function (d) {\n        return this.classShape(d.data) + this.generateClass(CLASS.arc, d.data.id);\n    };\n    c3_chart_internal_fn.classArcs = function (d) {\n        return this.classShapes(d.data) + this.generateClass(CLASS.arcs, d.data.id);\n    };\n    c3_chart_internal_fn.classArea = function (d) {\n        return this.classShape(d) + this.generateClass(CLASS.area, d.id);\n    };\n    c3_chart_internal_fn.classAreas = function (d) {\n        return this.classShapes(d) + this.generateClass(CLASS.areas, d.id);\n    };\n    c3_chart_internal_fn.classRegion = function (d, i) {\n        return this.generateClass(CLASS.region, i) + ' ' + ('class' in d ? d['class'] : '');\n    };\n    c3_chart_internal_fn.classEvent = function (d) {\n        return this.generateClass(CLASS.eventRect, d.index);\n    };\n    c3_chart_internal_fn.classTarget = function (id) {\n        var $$ = this;\n        var additionalClassSuffix = $$.config.data_classes[id],\n            additionalClass = '';\n        if (additionalClassSuffix) {\n            additionalClass = ' ' + CLASS.target + '-' + additionalClassSuffix;\n        }\n        return $$.generateClass(CLASS.target, id) + additionalClass;\n    };\n    c3_chart_internal_fn.classFocus = function (d) {\n        return this.classFocused(d) + this.classDefocused(d);\n    };\n    c3_chart_internal_fn.classFocused = function (d) {\n        return ' ' + (this.focusedTargetIds.indexOf(d.id) >= 0 ? CLASS.focused : '');\n    };\n    c3_chart_internal_fn.classDefocused = function (d) {\n        return ' ' + (this.defocusedTargetIds.indexOf(d.id) >= 0 ? CLASS.defocused : '');\n    };\n    c3_chart_internal_fn.classChartText = function (d) {\n        return CLASS.chartText + this.classTarget(d.id);\n    };\n    c3_chart_internal_fn.classChartLine = function (d) {\n        return CLASS.chartLine + this.classTarget(d.id);\n    };\n    c3_chart_internal_fn.classChartBar = function (d) {\n        return CLASS.chartBar + this.classTarget(d.id);\n    };\n    c3_chart_internal_fn.classChartArc = function (d) {\n        return CLASS.chartArc + this.classTarget(d.data.id);\n    };\n    c3_chart_internal_fn.getTargetSelectorSuffix = function (targetId) {\n        return targetId || targetId === 0 ? ('-' + targetId).replace(/[\\s?!@#$%^&*()_=+,.<>'\":;\\[\\]\\/|~`{}\\\\]/g, '-') : '';\n    };\n    c3_chart_internal_fn.selectorTarget = function (id, prefix) {\n        return (prefix || '') + '.' + CLASS.target + this.getTargetSelectorSuffix(id);\n    };\n    c3_chart_internal_fn.selectorTargets = function (ids, prefix) {\n        var $$ = this;\n        ids = ids || [];\n        return ids.length ? ids.map(function (id) {\n            return $$.selectorTarget(id, prefix);\n        }) : null;\n    };\n    c3_chart_internal_fn.selectorLegend = function (id) {\n        return '.' + CLASS.legendItem + this.getTargetSelectorSuffix(id);\n    };\n    c3_chart_internal_fn.selectorLegends = function (ids) {\n        var $$ = this;\n        return ids && ids.length ? ids.map(function (id) {\n            return $$.selectorLegend(id);\n        }) : null;\n    };\n\n    c3_chart_internal_fn.getClipPath = function (id) {\n        var isIE9 = window.navigator.appVersion.toLowerCase().indexOf(\"msie 9.\") >= 0;\n        return \"url(\" + (isIE9 ? \"\" : document.URL.split('#')[0]) + \"#\" + id + \")\";\n    };\n    c3_chart_internal_fn.appendClip = function (parent, id) {\n        return parent.append(\"clipPath\").attr(\"id\", id).append(\"rect\");\n    };\n    c3_chart_internal_fn.getAxisClipX = function (forHorizontal) {\n        // axis line width + padding for left\n        var left = Math.max(30, this.margin.left);\n        return forHorizontal ? -(1 + left) : -(left - 1);\n    };\n    c3_chart_internal_fn.getAxisClipY = function (forHorizontal) {\n        return forHorizontal ? -20 : -this.margin.top;\n    };\n    c3_chart_internal_fn.getXAxisClipX = function () {\n        var $$ = this;\n        return $$.getAxisClipX(!$$.config.axis_rotated);\n    };\n    c3_chart_internal_fn.getXAxisClipY = function () {\n        var $$ = this;\n        return $$.getAxisClipY(!$$.config.axis_rotated);\n    };\n    c3_chart_internal_fn.getYAxisClipX = function () {\n        var $$ = this;\n        return $$.config.axis_y_inner ? -1 : $$.getAxisClipX($$.config.axis_rotated);\n    };\n    c3_chart_internal_fn.getYAxisClipY = function () {\n        var $$ = this;\n        return $$.getAxisClipY($$.config.axis_rotated);\n    };\n    c3_chart_internal_fn.getAxisClipWidth = function (forHorizontal) {\n        var $$ = this,\n            left = Math.max(30, $$.margin.left),\n            right = Math.max(30, $$.margin.right);\n        // width + axis line width + padding for left/right\n        return forHorizontal ? $$.width + 2 + left + right : $$.margin.left + 20;\n    };\n    c3_chart_internal_fn.getAxisClipHeight = function (forHorizontal) {\n        // less than 20 is not enough to show the axis label 'outer' without legend\n        return (forHorizontal ? this.margin.bottom : this.margin.top + this.height) + 20;\n    };\n    c3_chart_internal_fn.getXAxisClipWidth = function () {\n        var $$ = this;\n        return $$.getAxisClipWidth(!$$.config.axis_rotated);\n    };\n    c3_chart_internal_fn.getXAxisClipHeight = function () {\n        var $$ = this;\n        return $$.getAxisClipHeight(!$$.config.axis_rotated);\n    };\n    c3_chart_internal_fn.getYAxisClipWidth = function () {\n        var $$ = this;\n        return $$.getAxisClipWidth($$.config.axis_rotated) + ($$.config.axis_y_inner ? 20 : 0);\n    };\n    c3_chart_internal_fn.getYAxisClipHeight = function () {\n        var $$ = this;\n        return $$.getAxisClipHeight($$.config.axis_rotated);\n    };\n\n    c3_chart_internal_fn.generateColor = function () {\n        var $$ = this,\n            config = $$.config,\n            d3 = $$.d3,\n            colors = config.data_colors,\n            pattern = notEmpty(config.color_pattern) ? config.color_pattern : d3.scale.category10().range(),\n            callback = config.data_color,\n            ids = [];\n\n        return function (d) {\n            var id = d.id || d.data && d.data.id || d,\n                color;\n\n            // if callback function is provided\n            if (colors[id] instanceof Function) {\n                color = colors[id](d);\n            }\n            // if specified, choose that color\n            else if (colors[id]) {\n                    color = colors[id];\n                }\n                // if not specified, choose from pattern\n                else {\n                        if (ids.indexOf(id) < 0) {\n                            ids.push(id);\n                        }\n                        color = pattern[ids.indexOf(id) % pattern.length];\n                        colors[id] = color;\n                    }\n            return callback instanceof Function ? callback(color, d) : color;\n        };\n    };\n    c3_chart_internal_fn.generateLevelColor = function () {\n        var $$ = this,\n            config = $$.config,\n            colors = config.color_pattern,\n            threshold = config.color_threshold,\n            asValue = threshold.unit === 'value',\n            values = threshold.values && threshold.values.length ? threshold.values : [],\n            max = threshold.max || 100;\n        return notEmpty(config.color_threshold) ? function (value) {\n            var i,\n                v,\n                color = colors[colors.length - 1];\n            for (i = 0; i < values.length; i++) {\n                v = asValue ? value : value * 100 / max;\n                if (v < values[i]) {\n                    color = colors[i];\n                    break;\n                }\n            }\n            return color;\n        } : null;\n    };\n\n    c3_chart_internal_fn.getDefaultConfig = function () {\n        var config = {\n            bindto: '#chart',\n            svg_classname: undefined,\n            size_width: undefined,\n            size_height: undefined,\n            padding_left: undefined,\n            padding_right: undefined,\n            padding_top: undefined,\n            padding_bottom: undefined,\n            resize_auto: true,\n            zoom_enabled: false,\n            zoom_extent: undefined,\n            zoom_privileged: false,\n            zoom_rescale: false,\n            zoom_onzoom: function zoom_onzoom() {},\n            zoom_onzoomstart: function zoom_onzoomstart() {},\n            zoom_onzoomend: function zoom_onzoomend() {},\n            zoom_x_min: undefined,\n            zoom_x_max: undefined,\n            interaction_brighten: true,\n            interaction_enabled: true,\n            onmouseover: function onmouseover() {},\n            onmouseout: function onmouseout() {},\n            onresize: function onresize() {},\n            onresized: function onresized() {},\n            oninit: function oninit() {},\n            onrendered: function onrendered() {},\n            transition_duration: 350,\n            data_x: undefined,\n            data_xs: {},\n            data_xFormat: '%Y-%m-%d',\n            data_xLocaltime: true,\n            data_xSort: true,\n            data_idConverter: function data_idConverter(id) {\n                return id;\n            },\n            data_names: {},\n            data_classes: {},\n            data_groups: [],\n            data_axes: {},\n            data_type: undefined,\n            data_types: {},\n            data_labels: {},\n            data_order: 'desc',\n            data_regions: {},\n            data_color: undefined,\n            data_colors: {},\n            data_hide: false,\n            data_filter: undefined,\n            data_selection_enabled: false,\n            data_selection_grouped: false,\n            data_selection_isselectable: function data_selection_isselectable() {\n                return true;\n            },\n            data_selection_multiple: true,\n            data_selection_draggable: false,\n            data_onclick: function data_onclick() {},\n            data_onmouseover: function data_onmouseover() {},\n            data_onmouseout: function data_onmouseout() {},\n            data_onselected: function data_onselected() {},\n            data_onunselected: function data_onunselected() {},\n            data_url: undefined,\n            data_headers: undefined,\n            data_json: undefined,\n            data_rows: undefined,\n            data_columns: undefined,\n            data_mimeType: undefined,\n            data_keys: undefined,\n            // configuration for no plot-able data supplied.\n            data_empty_label_text: \"\",\n            // subchart\n            subchart_show: false,\n            subchart_size_height: 60,\n            subchart_axis_x_show: true,\n            subchart_onbrush: function subchart_onbrush() {},\n            // color\n            color_pattern: [],\n            color_threshold: {},\n            // legend\n            legend_show: true,\n            legend_hide: false,\n            legend_position: 'bottom',\n            legend_inset_anchor: 'top-left',\n            legend_inset_x: 10,\n            legend_inset_y: 0,\n            legend_inset_step: undefined,\n            legend_item_onclick: undefined,\n            legend_item_onmouseover: undefined,\n            legend_item_onmouseout: undefined,\n            legend_equally: false,\n            legend_padding: 0,\n            legend_item_tile_width: 10,\n            legend_item_tile_height: 10,\n            // axis\n            axis_rotated: false,\n            axis_x_show: true,\n            axis_x_type: 'indexed',\n            axis_x_localtime: true,\n            axis_x_categories: [],\n            axis_x_tick_centered: false,\n            axis_x_tick_format: undefined,\n            axis_x_tick_culling: {},\n            axis_x_tick_culling_max: 10,\n            axis_x_tick_count: undefined,\n            axis_x_tick_fit: true,\n            axis_x_tick_values: null,\n            axis_x_tick_rotate: 0,\n            axis_x_tick_outer: true,\n            axis_x_tick_multiline: true,\n            axis_x_tick_multilineMax: 0,\n            axis_x_tick_width: null,\n            axis_x_max: undefined,\n            axis_x_min: undefined,\n            axis_x_padding: {},\n            axis_x_height: undefined,\n            axis_x_extent: undefined,\n            axis_x_label: {},\n            axis_x_inner: undefined,\n            axis_y_show: true,\n            axis_y_type: undefined,\n            axis_y_max: undefined,\n            axis_y_min: undefined,\n            axis_y_inverted: false,\n            axis_y_center: undefined,\n            axis_y_inner: undefined,\n            axis_y_label: {},\n            axis_y_tick_format: undefined,\n            axis_y_tick_outer: true,\n            axis_y_tick_values: null,\n            axis_y_tick_rotate: 0,\n            axis_y_tick_count: undefined,\n            axis_y_tick_time_value: undefined,\n            axis_y_tick_time_interval: undefined,\n            axis_y_padding: {},\n            axis_y_default: undefined,\n            axis_y2_show: false,\n            axis_y2_max: undefined,\n            axis_y2_min: undefined,\n            axis_y2_inverted: false,\n            axis_y2_center: undefined,\n            axis_y2_inner: undefined,\n            axis_y2_label: {},\n            axis_y2_tick_format: undefined,\n            axis_y2_tick_outer: true,\n            axis_y2_tick_values: null,\n            axis_y2_tick_count: undefined,\n            axis_y2_padding: {},\n            axis_y2_default: undefined,\n            // grid\n            grid_x_show: false,\n            grid_x_type: 'tick',\n            grid_x_lines: [],\n            grid_y_show: false,\n            // not used\n            // grid_y_type: 'tick',\n            grid_y_lines: [],\n            grid_y_ticks: 10,\n            grid_focus_show: true,\n            grid_lines_front: true,\n            // point - point of each data\n            point_show: true,\n            point_r: 2.5,\n            point_sensitivity: 10,\n            point_focus_expand_enabled: true,\n            point_focus_expand_r: undefined,\n            point_select_r: undefined,\n            // line\n            line_connectNull: false,\n            line_step_type: 'step',\n            // bar\n            bar_width: undefined,\n            bar_width_ratio: 0.6,\n            bar_width_max: undefined,\n            bar_zerobased: true,\n            bar_space: 0,\n            // area\n            area_zerobased: true,\n            area_above: false,\n            // pie\n            pie_label_show: true,\n            pie_label_format: undefined,\n            pie_label_threshold: 0.05,\n            pie_label_ratio: undefined,\n            pie_expand: {},\n            pie_expand_duration: 50,\n            // gauge\n            gauge_fullCircle: false,\n            gauge_label_show: true,\n            gauge_labelLine_show: true,\n            gauge_label_format: undefined,\n            gauge_min: 0,\n            gauge_max: 100,\n            gauge_startingAngle: -1 * Math.PI / 2,\n            gauge_label_extents: undefined,\n            gauge_units: undefined,\n            gauge_width: undefined,\n            gauge_arcs_minWidth: 5,\n            gauge_expand: {},\n            gauge_expand_duration: 50,\n            // donut\n            donut_label_show: true,\n            donut_label_format: undefined,\n            donut_label_threshold: 0.05,\n            donut_label_ratio: undefined,\n            donut_width: undefined,\n            donut_title: \"\",\n            donut_expand: {},\n            donut_expand_duration: 50,\n            // spline\n            spline_interpolation_type: 'cardinal',\n            // region - region to change style\n            regions: [],\n            // tooltip - show when mouseover on each data\n            tooltip_show: true,\n            tooltip_grouped: true,\n            tooltip_order: undefined,\n            tooltip_format_title: undefined,\n            tooltip_format_name: undefined,\n            tooltip_format_value: undefined,\n            tooltip_position: undefined,\n            tooltip_contents: function tooltip_contents(d, defaultTitleFormat, defaultValueFormat, color) {\n                return this.getTooltipContent ? this.getTooltipContent(d, defaultTitleFormat, defaultValueFormat, color) : '';\n            },\n            tooltip_init_show: false,\n            tooltip_init_x: 0,\n            tooltip_init_position: { top: '0px', left: '50px' },\n            tooltip_onshow: function tooltip_onshow() {},\n            tooltip_onhide: function tooltip_onhide() {},\n            // title\n            title_text: undefined,\n            title_padding: {\n                top: 0,\n                right: 0,\n                bottom: 0,\n                left: 0\n            },\n            title_position: 'top-center'\n        };\n\n        Object.keys(this.additionalConfig).forEach(function (key) {\n            config[key] = this.additionalConfig[key];\n        }, this);\n\n        return config;\n    };\n    c3_chart_internal_fn.additionalConfig = {};\n\n    c3_chart_internal_fn.loadConfig = function (config) {\n        var this_config = this.config,\n            target,\n            keys,\n            read;\n        function find() {\n            var key = keys.shift();\n            //        console.log(\"key =>\", key, \", target =>\", target);\n            if (key && target && (typeof target === 'undefined' ? 'undefined' : _typeof(target)) === 'object' && key in target) {\n                target = target[key];\n                return find();\n            } else if (!key) {\n                return target;\n            } else {\n                return undefined;\n            }\n        }\n        Object.keys(this_config).forEach(function (key) {\n            target = config;\n            keys = key.split('_');\n            read = find();\n            //        console.log(\"CONFIG : \", key, read);\n            if (isDefined(read)) {\n                this_config[key] = read;\n            }\n        });\n    };\n\n    c3_chart_internal_fn.convertUrlToData = function (url, mimeType, headers, keys, done) {\n        var $$ = this,\n            type = mimeType ? mimeType : 'csv';\n        var req = $$.d3.xhr(url);\n        if (headers) {\n            Object.keys(headers).forEach(function (header) {\n                req.header(header, headers[header]);\n            });\n        }\n        req.get(function (error, data) {\n            var d;\n            var dataResponse = data.response || data.responseText; // Fixes IE9 XHR issue; see #1345\n            if (!data) {\n                throw new Error(error.responseURL + ' ' + error.status + ' (' + error.statusText + ')');\n            }\n            if (type === 'json') {\n                d = $$.convertJsonToData(JSON.parse(dataResponse), keys);\n            } else if (type === 'tsv') {\n                d = $$.convertTsvToData(dataResponse);\n            } else {\n                d = $$.convertCsvToData(dataResponse);\n            }\n            done.call($$, d);\n        });\n    };\n    c3_chart_internal_fn.convertXsvToData = function (xsv, parser) {\n        var rows = parser.parseRows(xsv),\n            d;\n        if (rows.length === 1) {\n            d = [{}];\n            rows[0].forEach(function (id) {\n                d[0][id] = null;\n            });\n        } else {\n            d = parser.parse(xsv);\n        }\n        return d;\n    };\n    c3_chart_internal_fn.convertCsvToData = function (csv) {\n        return this.convertXsvToData(csv, this.d3.csv);\n    };\n    c3_chart_internal_fn.convertTsvToData = function (tsv) {\n        return this.convertXsvToData(tsv, this.d3.tsv);\n    };\n    c3_chart_internal_fn.convertJsonToData = function (json, keys) {\n        var $$ = this,\n            new_rows = [],\n            targetKeys,\n            data;\n        if (keys) {\n            // when keys specified, json would be an array that includes objects\n            if (keys.x) {\n                targetKeys = keys.value.concat(keys.x);\n                $$.config.data_x = keys.x;\n            } else {\n                targetKeys = keys.value;\n            }\n            new_rows.push(targetKeys);\n            json.forEach(function (o) {\n                var new_row = [];\n                targetKeys.forEach(function (key) {\n                    // convert undefined to null because undefined data will be removed in convertDataToTargets()\n                    var v = $$.findValueInJson(o, key);\n                    if (isUndefined(v)) {\n                        v = null;\n                    }\n                    new_row.push(v);\n                });\n                new_rows.push(new_row);\n            });\n            data = $$.convertRowsToData(new_rows);\n        } else {\n            Object.keys(json).forEach(function (key) {\n                new_rows.push([key].concat(json[key]));\n            });\n            data = $$.convertColumnsToData(new_rows);\n        }\n        return data;\n    };\n    c3_chart_internal_fn.findValueInJson = function (object, path) {\n        path = path.replace(/\\[(\\w+)\\]/g, '.$1'); // convert indexes to properties (replace [] with .)\n        path = path.replace(/^\\./, ''); // strip a leading dot\n        var pathArray = path.split('.');\n        for (var i = 0; i < pathArray.length; ++i) {\n            var k = pathArray[i];\n            if (k in object) {\n                object = object[k];\n            } else {\n                return;\n            }\n        }\n        return object;\n    };\n\n    /**\n     * Converts the rows to normalized data.\n     * @param {any[][]} rows The row data\n     * @return {Object[]}\n     */\n    c3_chart_internal_fn.convertRowsToData = function (rows) {\n        var newRows = [];\n        var keys = rows[0];\n\n        for (var i = 1; i < rows.length; i++) {\n            var newRow = {};\n            for (var j = 0; j < rows[i].length; j++) {\n                if (isUndefined(rows[i][j])) {\n                    throw new Error(\"Source data is missing a component at (\" + i + \",\" + j + \")!\");\n                }\n                newRow[keys[j]] = rows[i][j];\n            }\n            newRows.push(newRow);\n        }\n        return newRows;\n    };\n\n    /**\n     * Converts the columns to normalized data.\n     * @param {any[][]} columns The column data\n     * @return {Object[]}\n     */\n    c3_chart_internal_fn.convertColumnsToData = function (columns) {\n        var newRows = [];\n\n        for (var i = 0; i < columns.length; i++) {\n            var key = columns[i][0];\n            for (var j = 1; j < columns[i].length; j++) {\n                if (isUndefined(newRows[j - 1])) {\n                    newRows[j - 1] = {};\n                }\n                if (isUndefined(columns[i][j])) {\n                    throw new Error(\"Source data is missing a component at (\" + i + \",\" + j + \")!\");\n                }\n                newRows[j - 1][key] = columns[i][j];\n            }\n        }\n\n        return newRows;\n    };\n\n    c3_chart_internal_fn.convertDataToTargets = function (data, appendXs) {\n        var $$ = this,\n            config = $$.config,\n            ids = $$.d3.keys(data[0]).filter($$.isNotX, $$),\n            xs = $$.d3.keys(data[0]).filter($$.isX, $$),\n            targets;\n\n        // save x for update data by load when custom x and c3.x API\n        ids.forEach(function (id) {\n            var xKey = $$.getXKey(id);\n\n            if ($$.isCustomX() || $$.isTimeSeries()) {\n                // if included in input data\n                if (xs.indexOf(xKey) >= 0) {\n                    $$.data.xs[id] = (appendXs && $$.data.xs[id] ? $$.data.xs[id] : []).concat(data.map(function (d) {\n                        return d[xKey];\n                    }).filter(isValue).map(function (rawX, i) {\n                        return $$.generateTargetX(rawX, id, i);\n                    }));\n                }\n                // if not included in input data, find from preloaded data of other id's x\n                else if (config.data_x) {\n                        $$.data.xs[id] = $$.getOtherTargetXs();\n                    }\n                    // if not included in input data, find from preloaded data\n                    else if (notEmpty(config.data_xs)) {\n                            $$.data.xs[id] = $$.getXValuesOfXKey(xKey, $$.data.targets);\n                        }\n                // MEMO: if no x included, use same x of current will be used\n            } else {\n                $$.data.xs[id] = data.map(function (d, i) {\n                    return i;\n                });\n            }\n        });\n\n        // check x is defined\n        ids.forEach(function (id) {\n            if (!$$.data.xs[id]) {\n                throw new Error('x is not defined for id = \"' + id + '\".');\n            }\n        });\n\n        // convert to target\n        targets = ids.map(function (id, index) {\n            var convertedId = config.data_idConverter(id);\n            return {\n                id: convertedId,\n                id_org: id,\n                values: data.map(function (d, i) {\n                    var xKey = $$.getXKey(id),\n                        rawX = d[xKey],\n                        value = d[id] !== null && !isNaN(d[id]) ? +d[id] : null,\n                        x;\n                    // use x as categories if custom x and categorized\n                    if ($$.isCustomX() && $$.isCategorized() && !isUndefined(rawX)) {\n                        if (index === 0 && i === 0) {\n                            config.axis_x_categories = [];\n                        }\n                        x = config.axis_x_categories.indexOf(rawX);\n                        if (x === -1) {\n                            x = config.axis_x_categories.length;\n                            config.axis_x_categories.push(rawX);\n                        }\n                    } else {\n                        x = $$.generateTargetX(rawX, id, i);\n                    }\n                    // mark as x = undefined if value is undefined and filter to remove after mapped\n                    if (isUndefined(d[id]) || $$.data.xs[id].length <= i) {\n                        x = undefined;\n                    }\n                    return { x: x, value: value, id: convertedId };\n                }).filter(function (v) {\n                    return isDefined(v.x);\n                })\n            };\n        });\n\n        // finish targets\n        targets.forEach(function (t) {\n            var i;\n            // sort values by its x\n            if (config.data_xSort) {\n                t.values = t.values.sort(function (v1, v2) {\n                    var x1 = v1.x || v1.x === 0 ? v1.x : Infinity,\n                        x2 = v2.x || v2.x === 0 ? v2.x : Infinity;\n                    return x1 - x2;\n                });\n            }\n            // indexing each value\n            i = 0;\n            t.values.forEach(function (v) {\n                v.index = i++;\n            });\n            // this needs to be sorted because its index and value.index is identical\n            $$.data.xs[t.id].sort(function (v1, v2) {\n                return v1 - v2;\n            });\n        });\n\n        // cache information about values\n        $$.hasNegativeValue = $$.hasNegativeValueInTargets(targets);\n        $$.hasPositiveValue = $$.hasPositiveValueInTargets(targets);\n\n        // set target types\n        if (config.data_type) {\n            $$.setTargetType($$.mapToIds(targets).filter(function (id) {\n                return !(id in config.data_types);\n            }), config.data_type);\n        }\n\n        // cache as original id keyed\n        targets.forEach(function (d) {\n            $$.addCache(d.id_org, d);\n        });\n\n        return targets;\n    };\n\n    c3_chart_internal_fn.isX = function (key) {\n        var $$ = this,\n            config = $$.config;\n        return config.data_x && key === config.data_x || notEmpty(config.data_xs) && hasValue(config.data_xs, key);\n    };\n    c3_chart_internal_fn.isNotX = function (key) {\n        return !this.isX(key);\n    };\n    c3_chart_internal_fn.getXKey = function (id) {\n        var $$ = this,\n            config = $$.config;\n        return config.data_x ? config.data_x : notEmpty(config.data_xs) ? config.data_xs[id] : null;\n    };\n    c3_chart_internal_fn.getXValuesOfXKey = function (key, targets) {\n        var $$ = this,\n            xValues,\n            ids = targets && notEmpty(targets) ? $$.mapToIds(targets) : [];\n        ids.forEach(function (id) {\n            if ($$.getXKey(id) === key) {\n                xValues = $$.data.xs[id];\n            }\n        });\n        return xValues;\n    };\n    c3_chart_internal_fn.getIndexByX = function (x) {\n        var $$ = this,\n            data = $$.filterByX($$.data.targets, x);\n        return data.length ? data[0].index : null;\n    };\n    c3_chart_internal_fn.getXValue = function (id, i) {\n        var $$ = this;\n        return id in $$.data.xs && $$.data.xs[id] && isValue($$.data.xs[id][i]) ? $$.data.xs[id][i] : i;\n    };\n    c3_chart_internal_fn.getOtherTargetXs = function () {\n        var $$ = this,\n            idsForX = Object.keys($$.data.xs);\n        return idsForX.length ? $$.data.xs[idsForX[0]] : null;\n    };\n    c3_chart_internal_fn.getOtherTargetX = function (index) {\n        var xs = this.getOtherTargetXs();\n        return xs && index < xs.length ? xs[index] : null;\n    };\n    c3_chart_internal_fn.addXs = function (xs) {\n        var $$ = this;\n        Object.keys(xs).forEach(function (id) {\n            $$.config.data_xs[id] = xs[id];\n        });\n    };\n    c3_chart_internal_fn.hasMultipleX = function (xs) {\n        return this.d3.set(Object.keys(xs).map(function (id) {\n            return xs[id];\n        })).size() > 1;\n    };\n    c3_chart_internal_fn.isMultipleX = function () {\n        return notEmpty(this.config.data_xs) || !this.config.data_xSort || this.hasType('scatter');\n    };\n    c3_chart_internal_fn.addName = function (data) {\n        var $$ = this,\n            name;\n        if (data) {\n            name = $$.config.data_names[data.id];\n            data.name = name !== undefined ? name : data.id;\n        }\n        return data;\n    };\n    c3_chart_internal_fn.getValueOnIndex = function (values, index) {\n        var valueOnIndex = values.filter(function (v) {\n            return v.index === index;\n        });\n        return valueOnIndex.length ? valueOnIndex[0] : null;\n    };\n    c3_chart_internal_fn.updateTargetX = function (targets, x) {\n        var $$ = this;\n        targets.forEach(function (t) {\n            t.values.forEach(function (v, i) {\n                v.x = $$.generateTargetX(x[i], t.id, i);\n            });\n            $$.data.xs[t.id] = x;\n        });\n    };\n    c3_chart_internal_fn.updateTargetXs = function (targets, xs) {\n        var $$ = this;\n        targets.forEach(function (t) {\n            if (xs[t.id]) {\n                $$.updateTargetX([t], xs[t.id]);\n            }\n        });\n    };\n    c3_chart_internal_fn.generateTargetX = function (rawX, id, index) {\n        var $$ = this,\n            x;\n        if ($$.isTimeSeries()) {\n            x = rawX ? $$.parseDate(rawX) : $$.parseDate($$.getXValue(id, index));\n        } else if ($$.isCustomX() && !$$.isCategorized()) {\n            x = isValue(rawX) ? +rawX : $$.getXValue(id, index);\n        } else {\n            x = index;\n        }\n        return x;\n    };\n    c3_chart_internal_fn.cloneTarget = function (target) {\n        return {\n            id: target.id,\n            id_org: target.id_org,\n            values: target.values.map(function (d) {\n                return { x: d.x, value: d.value, id: d.id };\n            })\n        };\n    };\n    c3_chart_internal_fn.updateXs = function () {\n        var $$ = this;\n        if ($$.data.targets.length) {\n            $$.xs = [];\n            $$.data.targets[0].values.forEach(function (v) {\n                $$.xs[v.index] = v.x;\n            });\n        }\n    };\n    c3_chart_internal_fn.getPrevX = function (i) {\n        var x = this.xs[i - 1];\n        return typeof x !== 'undefined' ? x : null;\n    };\n    c3_chart_internal_fn.getNextX = function (i) {\n        var x = this.xs[i + 1];\n        return typeof x !== 'undefined' ? x : null;\n    };\n    c3_chart_internal_fn.getMaxDataCount = function () {\n        var $$ = this;\n        return $$.d3.max($$.data.targets, function (t) {\n            return t.values.length;\n        });\n    };\n    c3_chart_internal_fn.getMaxDataCountTarget = function (targets) {\n        var length = targets.length,\n            max = 0,\n            maxTarget;\n        if (length > 1) {\n            targets.forEach(function (t) {\n                if (t.values.length > max) {\n                    maxTarget = t;\n                    max = t.values.length;\n                }\n            });\n        } else {\n            maxTarget = length ? targets[0] : null;\n        }\n        return maxTarget;\n    };\n    c3_chart_internal_fn.getEdgeX = function (targets) {\n        var $$ = this;\n        return !targets.length ? [0, 0] : [$$.d3.min(targets, function (t) {\n            return t.values[0].x;\n        }), $$.d3.max(targets, function (t) {\n            return t.values[t.values.length - 1].x;\n        })];\n    };\n    c3_chart_internal_fn.mapToIds = function (targets) {\n        return targets.map(function (d) {\n            return d.id;\n        });\n    };\n    c3_chart_internal_fn.mapToTargetIds = function (ids) {\n        var $$ = this;\n        return ids ? [].concat(ids) : $$.mapToIds($$.data.targets);\n    };\n    c3_chart_internal_fn.hasTarget = function (targets, id) {\n        var ids = this.mapToIds(targets),\n            i;\n        for (i = 0; i < ids.length; i++) {\n            if (ids[i] === id) {\n                return true;\n            }\n        }\n        return false;\n    };\n    c3_chart_internal_fn.isTargetToShow = function (targetId) {\n        return this.hiddenTargetIds.indexOf(targetId) < 0;\n    };\n    c3_chart_internal_fn.isLegendToShow = function (targetId) {\n        return this.hiddenLegendIds.indexOf(targetId) < 0;\n    };\n    c3_chart_internal_fn.filterTargetsToShow = function (targets) {\n        var $$ = this;\n        return targets.filter(function (t) {\n            return $$.isTargetToShow(t.id);\n        });\n    };\n    c3_chart_internal_fn.mapTargetsToUniqueXs = function (targets) {\n        var $$ = this;\n        var xs = $$.d3.set($$.d3.merge(targets.map(function (t) {\n            return t.values.map(function (v) {\n                return +v.x;\n            });\n        }))).values();\n        xs = $$.isTimeSeries() ? xs.map(function (x) {\n            return new Date(+x);\n        }) : xs.map(function (x) {\n            return +x;\n        });\n        return xs.sort(function (a, b) {\n            return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n        });\n    };\n    c3_chart_internal_fn.addHiddenTargetIds = function (targetIds) {\n        targetIds = targetIds instanceof Array ? targetIds : new Array(targetIds);\n        for (var i = 0; i < targetIds.length; i++) {\n            if (this.hiddenTargetIds.indexOf(targetIds[i]) < 0) {\n                this.hiddenTargetIds = this.hiddenTargetIds.concat(targetIds[i]);\n            }\n        }\n    };\n    c3_chart_internal_fn.removeHiddenTargetIds = function (targetIds) {\n        this.hiddenTargetIds = this.hiddenTargetIds.filter(function (id) {\n            return targetIds.indexOf(id) < 0;\n        });\n    };\n    c3_chart_internal_fn.addHiddenLegendIds = function (targetIds) {\n        targetIds = targetIds instanceof Array ? targetIds : new Array(targetIds);\n        for (var i = 0; i < targetIds.length; i++) {\n            if (this.hiddenLegendIds.indexOf(targetIds[i]) < 0) {\n                this.hiddenLegendIds = this.hiddenLegendIds.concat(targetIds[i]);\n            }\n        }\n    };\n    c3_chart_internal_fn.removeHiddenLegendIds = function (targetIds) {\n        this.hiddenLegendIds = this.hiddenLegendIds.filter(function (id) {\n            return targetIds.indexOf(id) < 0;\n        });\n    };\n    c3_chart_internal_fn.getValuesAsIdKeyed = function (targets) {\n        var ys = {};\n        targets.forEach(function (t) {\n            ys[t.id] = [];\n            t.values.forEach(function (v) {\n                ys[t.id].push(v.value);\n            });\n        });\n        return ys;\n    };\n    c3_chart_internal_fn.checkValueInTargets = function (targets, checker) {\n        var ids = Object.keys(targets),\n            i,\n            j,\n            values;\n        for (i = 0; i < ids.length; i++) {\n            values = targets[ids[i]].values;\n            for (j = 0; j < values.length; j++) {\n                if (checker(values[j].value)) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    c3_chart_internal_fn.hasNegativeValueInTargets = function (targets) {\n        return this.checkValueInTargets(targets, function (v) {\n            return v < 0;\n        });\n    };\n    c3_chart_internal_fn.hasPositiveValueInTargets = function (targets) {\n        return this.checkValueInTargets(targets, function (v) {\n            return v > 0;\n        });\n    };\n    c3_chart_internal_fn.isOrderDesc = function () {\n        var config = this.config;\n        return typeof config.data_order === 'string' && config.data_order.toLowerCase() === 'desc';\n    };\n    c3_chart_internal_fn.isOrderAsc = function () {\n        var config = this.config;\n        return typeof config.data_order === 'string' && config.data_order.toLowerCase() === 'asc';\n    };\n    c3_chart_internal_fn.getOrderFunction = function () {\n        var $$ = this,\n            config = $$.config,\n            orderAsc = $$.isOrderAsc(),\n            orderDesc = $$.isOrderDesc();\n        if (orderAsc || orderDesc) {\n            return function (t1, t2) {\n                var reducer = function reducer(p, c) {\n                    return p + Math.abs(c.value);\n                };\n                var t1Sum = t1.values.reduce(reducer, 0),\n                    t2Sum = t2.values.reduce(reducer, 0);\n                return orderDesc ? t2Sum - t1Sum : t1Sum - t2Sum;\n            };\n        } else if (isFunction(config.data_order)) {\n            return config.data_order;\n        } else if (isArray(config.data_order)) {\n            var order = config.data_order;\n            return function (t1, t2) {\n                return order.indexOf(t1.id) - order.indexOf(t2.id);\n            };\n        }\n    };\n    c3_chart_internal_fn.orderTargets = function (targets) {\n        var fct = this.getOrderFunction();\n        if (fct) {\n            targets.sort(fct);\n            if (this.isOrderAsc() || this.isOrderDesc()) {\n                targets.reverse();\n            }\n        }\n        return targets;\n    };\n    c3_chart_internal_fn.filterByX = function (targets, x) {\n        return this.d3.merge(targets.map(function (t) {\n            return t.values;\n        })).filter(function (v) {\n            return v.x - x === 0;\n        });\n    };\n    c3_chart_internal_fn.filterRemoveNull = function (data) {\n        return data.filter(function (d) {\n            return isValue(d.value);\n        });\n    };\n    c3_chart_internal_fn.filterByXDomain = function (targets, xDomain) {\n        return targets.map(function (t) {\n            return {\n                id: t.id,\n                id_org: t.id_org,\n                values: t.values.filter(function (v) {\n                    return xDomain[0] <= v.x && v.x <= xDomain[1];\n                })\n            };\n        });\n    };\n    c3_chart_internal_fn.hasDataLabel = function () {\n        var config = this.config;\n        if (typeof config.data_labels === 'boolean' && config.data_labels) {\n            return true;\n        } else if (_typeof(config.data_labels) === 'object' && notEmpty(config.data_labels)) {\n            return true;\n        }\n        return false;\n    };\n    c3_chart_internal_fn.getDataLabelLength = function (min, max, key) {\n        var $$ = this,\n            lengths = [0, 0],\n            paddingCoef = 1.3;\n        $$.selectChart.select('svg').selectAll('.dummy').data([min, max]).enter().append('text').text(function (d) {\n            return $$.dataLabelFormat(d.id)(d);\n        }).each(function (d, i) {\n            lengths[i] = this.getBoundingClientRect()[key] * paddingCoef;\n        }).remove();\n        return lengths;\n    };\n    c3_chart_internal_fn.isNoneArc = function (d) {\n        return this.hasTarget(this.data.targets, d.id);\n    }, c3_chart_internal_fn.isArc = function (d) {\n        return 'data' in d && this.hasTarget(this.data.targets, d.data.id);\n    };\n    c3_chart_internal_fn.findSameXOfValues = function (values, index) {\n        var i,\n            targetX = values[index].x,\n            sames = [];\n        for (i = index - 1; i >= 0; i--) {\n            if (targetX !== values[i].x) {\n                break;\n            }\n            sames.push(values[i]);\n        }\n        for (i = index; i < values.length; i++) {\n            if (targetX !== values[i].x) {\n                break;\n            }\n            sames.push(values[i]);\n        }\n        return sames;\n    };\n\n    c3_chart_internal_fn.findClosestFromTargets = function (targets, pos) {\n        var $$ = this,\n            candidates;\n\n        // map to array of closest points of each target\n        candidates = targets.map(function (target) {\n            return $$.findClosest(target.values, pos);\n        });\n\n        // decide closest point and return\n        return $$.findClosest(candidates, pos);\n    };\n    c3_chart_internal_fn.findClosest = function (values, pos) {\n        var $$ = this,\n            minDist = $$.config.point_sensitivity,\n            closest;\n\n        // find mouseovering bar\n        values.filter(function (v) {\n            return v && $$.isBarType(v.id);\n        }).forEach(function (v) {\n            var shape = $$.main.select('.' + CLASS.bars + $$.getTargetSelectorSuffix(v.id) + ' .' + CLASS.bar + '-' + v.index).node();\n            if (!closest && $$.isWithinBar(shape)) {\n                closest = v;\n            }\n        });\n\n        // find closest point from non-bar\n        values.filter(function (v) {\n            return v && !$$.isBarType(v.id);\n        }).forEach(function (v) {\n            var d = $$.dist(v, pos);\n            if (d < minDist) {\n                minDist = d;\n                closest = v;\n            }\n        });\n\n        return closest;\n    };\n    c3_chart_internal_fn.dist = function (data, pos) {\n        var $$ = this,\n            config = $$.config,\n            xIndex = config.axis_rotated ? 1 : 0,\n            yIndex = config.axis_rotated ? 0 : 1,\n            y = $$.circleY(data, data.index),\n            x = $$.x(data.x);\n        return Math.sqrt(Math.pow(x - pos[xIndex], 2) + Math.pow(y - pos[yIndex], 2));\n    };\n    c3_chart_internal_fn.convertValuesToStep = function (values) {\n        var converted = [].concat(values),\n            i;\n\n        if (!this.isCategorized()) {\n            return values;\n        }\n\n        for (i = values.length + 1; 0 < i; i--) {\n            converted[i] = converted[i - 1];\n        }\n\n        converted[0] = {\n            x: converted[0].x - 1,\n            value: converted[0].value,\n            id: converted[0].id\n        };\n        converted[values.length + 1] = {\n            x: converted[values.length].x + 1,\n            value: converted[values.length].value,\n            id: converted[values.length].id\n        };\n\n        return converted;\n    };\n    c3_chart_internal_fn.updateDataAttributes = function (name, attrs) {\n        var $$ = this,\n            config = $$.config,\n            current = config['data_' + name];\n        if (typeof attrs === 'undefined') {\n            return current;\n        }\n        Object.keys(attrs).forEach(function (id) {\n            current[id] = attrs[id];\n        });\n        $$.redraw({ withLegend: true });\n        return current;\n    };\n\n    c3_chart_internal_fn.load = function (targets, args) {\n        var $$ = this;\n        if (targets) {\n            // filter loading targets if needed\n            if (args.filter) {\n                targets = targets.filter(args.filter);\n            }\n            // set type if args.types || args.type specified\n            if (args.type || args.types) {\n                targets.forEach(function (t) {\n                    var type = args.types && args.types[t.id] ? args.types[t.id] : args.type;\n                    $$.setTargetType(t.id, type);\n                });\n            }\n            // Update/Add data\n            $$.data.targets.forEach(function (d) {\n                for (var i = 0; i < targets.length; i++) {\n                    if (d.id === targets[i].id) {\n                        d.values = targets[i].values;\n                        targets.splice(i, 1);\n                        break;\n                    }\n                }\n            });\n            $$.data.targets = $$.data.targets.concat(targets); // add remained\n        }\n\n        // Set targets\n        $$.updateTargets($$.data.targets);\n\n        // Redraw with new targets\n        $$.redraw({ withUpdateOrgXDomain: true, withUpdateXDomain: true, withLegend: true });\n\n        if (args.done) {\n            args.done();\n        }\n    };\n    c3_chart_internal_fn.loadFromArgs = function (args) {\n        var $$ = this;\n        if (args.data) {\n            $$.load($$.convertDataToTargets(args.data), args);\n        } else if (args.url) {\n            $$.convertUrlToData(args.url, args.mimeType, args.headers, args.keys, function (data) {\n                $$.load($$.convertDataToTargets(data), args);\n            });\n        } else if (args.json) {\n            $$.load($$.convertDataToTargets($$.convertJsonToData(args.json, args.keys)), args);\n        } else if (args.rows) {\n            $$.load($$.convertDataToTargets($$.convertRowsToData(args.rows)), args);\n        } else if (args.columns) {\n            $$.load($$.convertDataToTargets($$.convertColumnsToData(args.columns)), args);\n        } else {\n            $$.load(null, args);\n        }\n    };\n    c3_chart_internal_fn.unload = function (targetIds, done) {\n        var $$ = this;\n        if (!done) {\n            done = function done() {};\n        }\n        // filter existing target\n        targetIds = targetIds.filter(function (id) {\n            return $$.hasTarget($$.data.targets, id);\n        });\n        // If no target, call done and return\n        if (!targetIds || targetIds.length === 0) {\n            done();\n            return;\n        }\n        $$.svg.selectAll(targetIds.map(function (id) {\n            return $$.selectorTarget(id);\n        })).transition().style('opacity', 0).remove().call($$.endall, done);\n        targetIds.forEach(function (id) {\n            // Reset fadein for future load\n            $$.withoutFadeIn[id] = false;\n            // Remove target's elements\n            if ($$.legend) {\n                $$.legend.selectAll('.' + CLASS.legendItem + $$.getTargetSelectorSuffix(id)).remove();\n            }\n            // Remove target\n            $$.data.targets = $$.data.targets.filter(function (t) {\n                return t.id !== id;\n            });\n        });\n    };\n\n    c3_chart_internal_fn.getYDomainMin = function (targets) {\n        var $$ = this,\n            config = $$.config,\n            ids = $$.mapToIds(targets),\n            ys = $$.getValuesAsIdKeyed(targets),\n            j,\n            k,\n            baseId,\n            idsInGroup,\n            id,\n            hasNegativeValue;\n        if (config.data_groups.length > 0) {\n            hasNegativeValue = $$.hasNegativeValueInTargets(targets);\n            for (j = 0; j < config.data_groups.length; j++) {\n                // Determine baseId\n                idsInGroup = config.data_groups[j].filter(function (id) {\n                    return ids.indexOf(id) >= 0;\n                });\n                if (idsInGroup.length === 0) {\n                    continue;\n                }\n                baseId = idsInGroup[0];\n                // Consider negative values\n                if (hasNegativeValue && ys[baseId]) {\n                    ys[baseId].forEach(function (v, i) {\n                        ys[baseId][i] = v < 0 ? v : 0;\n                    });\n                }\n                // Compute min\n                for (k = 1; k < idsInGroup.length; k++) {\n                    id = idsInGroup[k];\n                    if (!ys[id]) {\n                        continue;\n                    }\n                    ys[id].forEach(function (v, i) {\n                        if ($$.axis.getId(id) === $$.axis.getId(baseId) && ys[baseId] && !(hasNegativeValue && +v > 0)) {\n                            ys[baseId][i] += +v;\n                        }\n                    });\n                }\n            }\n        }\n        return $$.d3.min(Object.keys(ys).map(function (key) {\n            return $$.d3.min(ys[key]);\n        }));\n    };\n    c3_chart_internal_fn.getYDomainMax = function (targets) {\n        var $$ = this,\n            config = $$.config,\n            ids = $$.mapToIds(targets),\n            ys = $$.getValuesAsIdKeyed(targets),\n            j,\n            k,\n            baseId,\n            idsInGroup,\n            id,\n            hasPositiveValue;\n        if (config.data_groups.length > 0) {\n            hasPositiveValue = $$.hasPositiveValueInTargets(targets);\n            for (j = 0; j < config.data_groups.length; j++) {\n                // Determine baseId\n                idsInGroup = config.data_groups[j].filter(function (id) {\n                    return ids.indexOf(id) >= 0;\n                });\n                if (idsInGroup.length === 0) {\n                    continue;\n                }\n                baseId = idsInGroup[0];\n                // Consider positive values\n                if (hasPositiveValue && ys[baseId]) {\n                    ys[baseId].forEach(function (v, i) {\n                        ys[baseId][i] = v > 0 ? v : 0;\n                    });\n                }\n                // Compute max\n                for (k = 1; k < idsInGroup.length; k++) {\n                    id = idsInGroup[k];\n                    if (!ys[id]) {\n                        continue;\n                    }\n                    ys[id].forEach(function (v, i) {\n                        if ($$.axis.getId(id) === $$.axis.getId(baseId) && ys[baseId] && !(hasPositiveValue && +v < 0)) {\n                            ys[baseId][i] += +v;\n                        }\n                    });\n                }\n            }\n        }\n        return $$.d3.max(Object.keys(ys).map(function (key) {\n            return $$.d3.max(ys[key]);\n        }));\n    };\n    c3_chart_internal_fn.getYDomain = function (targets, axisId, xDomain) {\n        var $$ = this,\n            config = $$.config,\n            targetsByAxisId = targets.filter(function (t) {\n            return $$.axis.getId(t.id) === axisId;\n        }),\n            yTargets = xDomain ? $$.filterByXDomain(targetsByAxisId, xDomain) : targetsByAxisId,\n            yMin = axisId === 'y2' ? config.axis_y2_min : config.axis_y_min,\n            yMax = axisId === 'y2' ? config.axis_y2_max : config.axis_y_max,\n            yDomainMin = $$.getYDomainMin(yTargets),\n            yDomainMax = $$.getYDomainMax(yTargets),\n            domain,\n            domainLength,\n            padding,\n            padding_top,\n            padding_bottom,\n            center = axisId === 'y2' ? config.axis_y2_center : config.axis_y_center,\n            yDomainAbs,\n            lengths,\n            diff,\n            ratio,\n            isAllPositive,\n            isAllNegative,\n            isZeroBased = $$.hasType('bar', yTargets) && config.bar_zerobased || $$.hasType('area', yTargets) && config.area_zerobased,\n            isInverted = axisId === 'y2' ? config.axis_y2_inverted : config.axis_y_inverted,\n            showHorizontalDataLabel = $$.hasDataLabel() && config.axis_rotated,\n            showVerticalDataLabel = $$.hasDataLabel() && !config.axis_rotated;\n\n        // MEMO: avoid inverting domain unexpectedly\n        yDomainMin = isValue(yMin) ? yMin : isValue(yMax) ? yDomainMin < yMax ? yDomainMin : yMax - 10 : yDomainMin;\n        yDomainMax = isValue(yMax) ? yMax : isValue(yMin) ? yMin < yDomainMax ? yDomainMax : yMin + 10 : yDomainMax;\n\n        if (yTargets.length === 0) {\n            // use current domain if target of axisId is none\n            return axisId === 'y2' ? $$.y2.domain() : $$.y.domain();\n        }\n        if (isNaN(yDomainMin)) {\n            // set minimum to zero when not number\n            yDomainMin = 0;\n        }\n        if (isNaN(yDomainMax)) {\n            // set maximum to have same value as yDomainMin\n            yDomainMax = yDomainMin;\n        }\n        if (yDomainMin === yDomainMax) {\n            yDomainMin < 0 ? yDomainMax = 0 : yDomainMin = 0;\n        }\n        isAllPositive = yDomainMin >= 0 && yDomainMax >= 0;\n        isAllNegative = yDomainMin <= 0 && yDomainMax <= 0;\n\n        // Cancel zerobased if axis_*_min / axis_*_max specified\n        if (isValue(yMin) && isAllPositive || isValue(yMax) && isAllNegative) {\n            isZeroBased = false;\n        }\n\n        // Bar/Area chart should be 0-based if all positive|negative\n        if (isZeroBased) {\n            if (isAllPositive) {\n                yDomainMin = 0;\n            }\n            if (isAllNegative) {\n                yDomainMax = 0;\n            }\n        }\n\n        domainLength = Math.abs(yDomainMax - yDomainMin);\n        padding = padding_top = padding_bottom = domainLength * 0.1;\n\n        if (typeof center !== 'undefined') {\n            yDomainAbs = Math.max(Math.abs(yDomainMin), Math.abs(yDomainMax));\n            yDomainMax = center + yDomainAbs;\n            yDomainMin = center - yDomainAbs;\n        }\n        // add padding for data label\n        if (showHorizontalDataLabel) {\n            lengths = $$.getDataLabelLength(yDomainMin, yDomainMax, 'width');\n            diff = diffDomain($$.y.range());\n            ratio = [lengths[0] / diff, lengths[1] / diff];\n            padding_top += domainLength * (ratio[1] / (1 - ratio[0] - ratio[1]));\n            padding_bottom += domainLength * (ratio[0] / (1 - ratio[0] - ratio[1]));\n        } else if (showVerticalDataLabel) {\n            lengths = $$.getDataLabelLength(yDomainMin, yDomainMax, 'height');\n            padding_top += $$.axis.convertPixelsToAxisPadding(lengths[1], domainLength);\n            padding_bottom += $$.axis.convertPixelsToAxisPadding(lengths[0], domainLength);\n        }\n        if (axisId === 'y' && notEmpty(config.axis_y_padding)) {\n            padding_top = $$.axis.getPadding(config.axis_y_padding, 'top', padding_top, domainLength);\n            padding_bottom = $$.axis.getPadding(config.axis_y_padding, 'bottom', padding_bottom, domainLength);\n        }\n        if (axisId === 'y2' && notEmpty(config.axis_y2_padding)) {\n            padding_top = $$.axis.getPadding(config.axis_y2_padding, 'top', padding_top, domainLength);\n            padding_bottom = $$.axis.getPadding(config.axis_y2_padding, 'bottom', padding_bottom, domainLength);\n        }\n        // Bar/Area chart should be 0-based if all positive|negative\n        if (isZeroBased) {\n            if (isAllPositive) {\n                padding_bottom = yDomainMin;\n            }\n            if (isAllNegative) {\n                padding_top = -yDomainMax;\n            }\n        }\n        domain = [yDomainMin - padding_bottom, yDomainMax + padding_top];\n        return isInverted ? domain.reverse() : domain;\n    };\n    c3_chart_internal_fn.getXDomainMin = function (targets) {\n        var $$ = this,\n            config = $$.config;\n        return isDefined(config.axis_x_min) ? $$.isTimeSeries() ? this.parseDate(config.axis_x_min) : config.axis_x_min : $$.d3.min(targets, function (t) {\n            return $$.d3.min(t.values, function (v) {\n                return v.x;\n            });\n        });\n    };\n    c3_chart_internal_fn.getXDomainMax = function (targets) {\n        var $$ = this,\n            config = $$.config;\n        return isDefined(config.axis_x_max) ? $$.isTimeSeries() ? this.parseDate(config.axis_x_max) : config.axis_x_max : $$.d3.max(targets, function (t) {\n            return $$.d3.max(t.values, function (v) {\n                return v.x;\n            });\n        });\n    };\n    c3_chart_internal_fn.getXDomainPadding = function (domain) {\n        var $$ = this,\n            config = $$.config,\n            diff = domain[1] - domain[0],\n            maxDataCount,\n            padding,\n            paddingLeft,\n            paddingRight;\n        if ($$.isCategorized()) {\n            padding = 0;\n        } else if ($$.hasType('bar')) {\n            maxDataCount = $$.getMaxDataCount();\n            padding = maxDataCount > 1 ? diff / (maxDataCount - 1) / 2 : 0.5;\n        } else {\n            padding = diff * 0.01;\n        }\n        if (_typeof(config.axis_x_padding) === 'object' && notEmpty(config.axis_x_padding)) {\n            paddingLeft = isValue(config.axis_x_padding.left) ? config.axis_x_padding.left : padding;\n            paddingRight = isValue(config.axis_x_padding.right) ? config.axis_x_padding.right : padding;\n        } else if (typeof config.axis_x_padding === 'number') {\n            paddingLeft = paddingRight = config.axis_x_padding;\n        } else {\n            paddingLeft = paddingRight = padding;\n        }\n        return { left: paddingLeft, right: paddingRight };\n    };\n    c3_chart_internal_fn.getXDomain = function (targets) {\n        var $$ = this,\n            xDomain = [$$.getXDomainMin(targets), $$.getXDomainMax(targets)],\n            firstX = xDomain[0],\n            lastX = xDomain[1],\n            padding = $$.getXDomainPadding(xDomain),\n            min = 0,\n            max = 0;\n        // show center of x domain if min and max are the same\n        if (firstX - lastX === 0 && !$$.isCategorized()) {\n            if ($$.isTimeSeries()) {\n                firstX = new Date(firstX.getTime() * 0.5);\n                lastX = new Date(lastX.getTime() * 1.5);\n            } else {\n                firstX = firstX === 0 ? 1 : firstX * 0.5;\n                lastX = lastX === 0 ? -1 : lastX * 1.5;\n            }\n        }\n        if (firstX || firstX === 0) {\n            min = $$.isTimeSeries() ? new Date(firstX.getTime() - padding.left) : firstX - padding.left;\n        }\n        if (lastX || lastX === 0) {\n            max = $$.isTimeSeries() ? new Date(lastX.getTime() + padding.right) : lastX + padding.right;\n        }\n        return [min, max];\n    };\n    c3_chart_internal_fn.updateXDomain = function (targets, withUpdateXDomain, withUpdateOrgXDomain, withTrim, domain) {\n        var $$ = this,\n            config = $$.config;\n\n        if (withUpdateOrgXDomain) {\n            $$.x.domain(domain ? domain : $$.d3.extent($$.getXDomain(targets)));\n            $$.orgXDomain = $$.x.domain();\n            if (config.zoom_enabled) {\n                $$.zoom.scale($$.x).updateScaleExtent();\n            }\n            $$.subX.domain($$.x.domain());\n            if ($$.brush) {\n                $$.brush.scale($$.subX);\n            }\n        }\n        if (withUpdateXDomain) {\n            $$.x.domain(domain ? domain : !$$.brush || $$.brush.empty() ? $$.orgXDomain : $$.brush.extent());\n            if (config.zoom_enabled) {\n                $$.zoom.scale($$.x).updateScaleExtent();\n            }\n        }\n\n        // Trim domain when too big by zoom mousemove event\n        if (withTrim) {\n            $$.x.domain($$.trimXDomain($$.x.orgDomain()));\n        }\n\n        return $$.x.domain();\n    };\n    c3_chart_internal_fn.trimXDomain = function (domain) {\n        var zoomDomain = this.getZoomDomain(),\n            min = zoomDomain[0],\n            max = zoomDomain[1];\n        if (domain[0] <= min) {\n            domain[1] = +domain[1] + (min - domain[0]);\n            domain[0] = min;\n        }\n        if (max <= domain[1]) {\n            domain[0] = +domain[0] - (domain[1] - max);\n            domain[1] = max;\n        }\n        return domain;\n    };\n\n    c3_chart_internal_fn.drag = function (mouse) {\n        var $$ = this,\n            config = $$.config,\n            main = $$.main,\n            d3 = $$.d3;\n        var sx, sy, mx, my, minX, maxX, minY, maxY;\n\n        if ($$.hasArcType()) {\n            return;\n        }\n        if (!config.data_selection_enabled) {\n            return;\n        } // do nothing if not selectable\n        if (config.zoom_enabled && !$$.zoom.altDomain) {\n            return;\n        } // skip if zoomable because of conflict drag dehavior\n        if (!config.data_selection_multiple) {\n            return;\n        } // skip when single selection because drag is used for multiple selection\n\n        sx = $$.dragStart[0];\n        sy = $$.dragStart[1];\n        mx = mouse[0];\n        my = mouse[1];\n        minX = Math.min(sx, mx);\n        maxX = Math.max(sx, mx);\n        minY = config.data_selection_grouped ? $$.margin.top : Math.min(sy, my);\n        maxY = config.data_selection_grouped ? $$.height : Math.max(sy, my);\n\n        main.select('.' + CLASS.dragarea).attr('x', minX).attr('y', minY).attr('width', maxX - minX).attr('height', maxY - minY);\n        // TODO: binary search when multiple xs\n        main.selectAll('.' + CLASS.shapes).selectAll('.' + CLASS.shape).filter(function (d) {\n            return config.data_selection_isselectable(d);\n        }).each(function (d, i) {\n            var shape = d3.select(this),\n                isSelected = shape.classed(CLASS.SELECTED),\n                isIncluded = shape.classed(CLASS.INCLUDED),\n                _x,\n                _y,\n                _w,\n                _h,\n                toggle,\n                isWithin = false,\n                box;\n            if (shape.classed(CLASS.circle)) {\n                _x = shape.attr(\"cx\") * 1;\n                _y = shape.attr(\"cy\") * 1;\n                toggle = $$.togglePoint;\n                isWithin = minX < _x && _x < maxX && minY < _y && _y < maxY;\n            } else if (shape.classed(CLASS.bar)) {\n                box = getPathBox(this);\n                _x = box.x;\n                _y = box.y;\n                _w = box.width;\n                _h = box.height;\n                toggle = $$.togglePath;\n                isWithin = !(maxX < _x || _x + _w < minX) && !(maxY < _y || _y + _h < minY);\n            } else {\n                // line/area selection not supported yet\n                return;\n            }\n            if (isWithin ^ isIncluded) {\n                shape.classed(CLASS.INCLUDED, !isIncluded);\n                // TODO: included/unincluded callback here\n                shape.classed(CLASS.SELECTED, !isSelected);\n                toggle.call($$, !isSelected, shape, d, i);\n            }\n        });\n    };\n\n    c3_chart_internal_fn.dragstart = function (mouse) {\n        var $$ = this,\n            config = $$.config;\n        if ($$.hasArcType()) {\n            return;\n        }\n        if (!config.data_selection_enabled) {\n            return;\n        } // do nothing if not selectable\n        $$.dragStart = mouse;\n        $$.main.select('.' + CLASS.chart).append('rect').attr('class', CLASS.dragarea).style('opacity', 0.1);\n        $$.dragging = true;\n    };\n\n    c3_chart_internal_fn.dragend = function () {\n        var $$ = this,\n            config = $$.config;\n        if ($$.hasArcType()) {\n            return;\n        }\n        if (!config.data_selection_enabled) {\n            return;\n        } // do nothing if not selectable\n        $$.main.select('.' + CLASS.dragarea).transition().duration(100).style('opacity', 0).remove();\n        $$.main.selectAll('.' + CLASS.shape).classed(CLASS.INCLUDED, false);\n        $$.dragging = false;\n    };\n\n    c3_chart_internal_fn.getYFormat = function (forArc) {\n        var $$ = this,\n            formatForY = forArc && !$$.hasType('gauge') ? $$.defaultArcValueFormat : $$.yFormat,\n            formatForY2 = forArc && !$$.hasType('gauge') ? $$.defaultArcValueFormat : $$.y2Format;\n        return function (v, ratio, id) {\n            var format = $$.axis.getId(id) === 'y2' ? formatForY2 : formatForY;\n            return format.call($$, v, ratio);\n        };\n    };\n    c3_chart_internal_fn.yFormat = function (v) {\n        var $$ = this,\n            config = $$.config,\n            format = config.axis_y_tick_format ? config.axis_y_tick_format : $$.defaultValueFormat;\n        return format(v);\n    };\n    c3_chart_internal_fn.y2Format = function (v) {\n        var $$ = this,\n            config = $$.config,\n            format = config.axis_y2_tick_format ? config.axis_y2_tick_format : $$.defaultValueFormat;\n        return format(v);\n    };\n    c3_chart_internal_fn.defaultValueFormat = function (v) {\n        return isValue(v) ? +v : \"\";\n    };\n    c3_chart_internal_fn.defaultArcValueFormat = function (v, ratio) {\n        return (ratio * 100).toFixed(1) + '%';\n    };\n    c3_chart_internal_fn.dataLabelFormat = function (targetId) {\n        var $$ = this,\n            data_labels = $$.config.data_labels,\n            format,\n            defaultFormat = function defaultFormat(v) {\n            return isValue(v) ? +v : \"\";\n        };\n        // find format according to axis id\n        if (typeof data_labels.format === 'function') {\n            format = data_labels.format;\n        } else if (_typeof(data_labels.format) === 'object') {\n            if (data_labels.format[targetId]) {\n                format = data_labels.format[targetId] === true ? defaultFormat : data_labels.format[targetId];\n            } else {\n                format = function format() {\n                    return '';\n                };\n            }\n        } else {\n            format = defaultFormat;\n        }\n        return format;\n    };\n\n    c3_chart_internal_fn.initGrid = function () {\n        var $$ = this,\n            config = $$.config,\n            d3 = $$.d3;\n        $$.grid = $$.main.append('g').attr(\"clip-path\", $$.clipPathForGrid).attr('class', CLASS.grid);\n        if (config.grid_x_show) {\n            $$.grid.append(\"g\").attr(\"class\", CLASS.xgrids);\n        }\n        if (config.grid_y_show) {\n            $$.grid.append('g').attr('class', CLASS.ygrids);\n        }\n        if (config.grid_focus_show) {\n            $$.grid.append('g').attr(\"class\", CLASS.xgridFocus).append('line').attr('class', CLASS.xgridFocus);\n        }\n        $$.xgrid = d3.selectAll([]);\n        if (!config.grid_lines_front) {\n            $$.initGridLines();\n        }\n    };\n    c3_chart_internal_fn.initGridLines = function () {\n        var $$ = this,\n            d3 = $$.d3;\n        $$.gridLines = $$.main.append('g').attr(\"clip-path\", $$.clipPathForGrid).attr('class', CLASS.grid + ' ' + CLASS.gridLines);\n        $$.gridLines.append('g').attr(\"class\", CLASS.xgridLines);\n        $$.gridLines.append('g').attr('class', CLASS.ygridLines);\n        $$.xgridLines = d3.selectAll([]);\n    };\n    c3_chart_internal_fn.updateXGrid = function (withoutUpdate) {\n        var $$ = this,\n            config = $$.config,\n            d3 = $$.d3,\n            xgridData = $$.generateGridData(config.grid_x_type, $$.x),\n            tickOffset = $$.isCategorized() ? $$.xAxis.tickOffset() : 0;\n\n        $$.xgridAttr = config.axis_rotated ? {\n            'x1': 0,\n            'x2': $$.width,\n            'y1': function y1(d) {\n                return $$.x(d) - tickOffset;\n            },\n            'y2': function y2(d) {\n                return $$.x(d) - tickOffset;\n            }\n        } : {\n            'x1': function x1(d) {\n                return $$.x(d) + tickOffset;\n            },\n            'x2': function x2(d) {\n                return $$.x(d) + tickOffset;\n            },\n            'y1': 0,\n            'y2': $$.height\n        };\n\n        $$.xgrid = $$.main.select('.' + CLASS.xgrids).selectAll('.' + CLASS.xgrid).data(xgridData);\n        $$.xgrid.enter().append('line').attr(\"class\", CLASS.xgrid);\n        if (!withoutUpdate) {\n            $$.xgrid.attr($$.xgridAttr).style(\"opacity\", function () {\n                return +d3.select(this).attr(config.axis_rotated ? 'y1' : 'x1') === (config.axis_rotated ? $$.height : 0) ? 0 : 1;\n            });\n        }\n        $$.xgrid.exit().remove();\n    };\n\n    c3_chart_internal_fn.updateYGrid = function () {\n        var $$ = this,\n            config = $$.config,\n            gridValues = $$.yAxis.tickValues() || $$.y.ticks(config.grid_y_ticks);\n        $$.ygrid = $$.main.select('.' + CLASS.ygrids).selectAll('.' + CLASS.ygrid).data(gridValues);\n        $$.ygrid.enter().append('line').attr('class', CLASS.ygrid);\n        $$.ygrid.attr(\"x1\", config.axis_rotated ? $$.y : 0).attr(\"x2\", config.axis_rotated ? $$.y : $$.width).attr(\"y1\", config.axis_rotated ? 0 : $$.y).attr(\"y2\", config.axis_rotated ? $$.height : $$.y);\n        $$.ygrid.exit().remove();\n        $$.smoothLines($$.ygrid, 'grid');\n    };\n\n    c3_chart_internal_fn.gridTextAnchor = function (d) {\n        return d.position ? d.position : \"end\";\n    };\n    c3_chart_internal_fn.gridTextDx = function (d) {\n        return d.position === 'start' ? 4 : d.position === 'middle' ? 0 : -4;\n    };\n    c3_chart_internal_fn.xGridTextX = function (d) {\n        return d.position === 'start' ? -this.height : d.position === 'middle' ? -this.height / 2 : 0;\n    };\n    c3_chart_internal_fn.yGridTextX = function (d) {\n        return d.position === 'start' ? 0 : d.position === 'middle' ? this.width / 2 : this.width;\n    };\n    c3_chart_internal_fn.updateGrid = function (duration) {\n        var $$ = this,\n            main = $$.main,\n            config = $$.config,\n            xgridLine,\n            ygridLine,\n            yv;\n\n        // hide if arc type\n        $$.grid.style('visibility', $$.hasArcType() ? 'hidden' : 'visible');\n\n        main.select('line.' + CLASS.xgridFocus).style(\"visibility\", \"hidden\");\n        if (config.grid_x_show) {\n            $$.updateXGrid();\n        }\n        $$.xgridLines = main.select('.' + CLASS.xgridLines).selectAll('.' + CLASS.xgridLine).data(config.grid_x_lines);\n        // enter\n        xgridLine = $$.xgridLines.enter().append('g').attr(\"class\", function (d) {\n            return CLASS.xgridLine + (d['class'] ? ' ' + d['class'] : '');\n        });\n        xgridLine.append('line').style(\"opacity\", 0);\n        xgridLine.append('text').attr(\"text-anchor\", $$.gridTextAnchor).attr(\"transform\", config.axis_rotated ? \"\" : \"rotate(-90)\").attr('dx', $$.gridTextDx).attr('dy', -5).style(\"opacity\", 0);\n        // udpate\n        // done in d3.transition() of the end of this function\n        // exit\n        $$.xgridLines.exit().transition().duration(duration).style(\"opacity\", 0).remove();\n\n        // Y-Grid\n        if (config.grid_y_show) {\n            $$.updateYGrid();\n        }\n        $$.ygridLines = main.select('.' + CLASS.ygridLines).selectAll('.' + CLASS.ygridLine).data(config.grid_y_lines);\n        // enter\n        ygridLine = $$.ygridLines.enter().append('g').attr(\"class\", function (d) {\n            return CLASS.ygridLine + (d['class'] ? ' ' + d['class'] : '');\n        });\n        ygridLine.append('line').style(\"opacity\", 0);\n        ygridLine.append('text').attr(\"text-anchor\", $$.gridTextAnchor).attr(\"transform\", config.axis_rotated ? \"rotate(-90)\" : \"\").attr('dx', $$.gridTextDx).attr('dy', -5).style(\"opacity\", 0);\n        // update\n        yv = $$.yv.bind($$);\n        $$.ygridLines.select('line').transition().duration(duration).attr(\"x1\", config.axis_rotated ? yv : 0).attr(\"x2\", config.axis_rotated ? yv : $$.width).attr(\"y1\", config.axis_rotated ? 0 : yv).attr(\"y2\", config.axis_rotated ? $$.height : yv).style(\"opacity\", 1);\n        $$.ygridLines.select('text').transition().duration(duration).attr(\"x\", config.axis_rotated ? $$.xGridTextX.bind($$) : $$.yGridTextX.bind($$)).attr(\"y\", yv).text(function (d) {\n            return d.text;\n        }).style(\"opacity\", 1);\n        // exit\n        $$.ygridLines.exit().transition().duration(duration).style(\"opacity\", 0).remove();\n    };\n    c3_chart_internal_fn.redrawGrid = function (withTransition) {\n        var $$ = this,\n            config = $$.config,\n            xv = $$.xv.bind($$),\n            lines = $$.xgridLines.select('line'),\n            texts = $$.xgridLines.select('text');\n        return [(withTransition ? lines.transition() : lines).attr(\"x1\", config.axis_rotated ? 0 : xv).attr(\"x2\", config.axis_rotated ? $$.width : xv).attr(\"y1\", config.axis_rotated ? xv : 0).attr(\"y2\", config.axis_rotated ? xv : $$.height).style(\"opacity\", 1), (withTransition ? texts.transition() : texts).attr(\"x\", config.axis_rotated ? $$.yGridTextX.bind($$) : $$.xGridTextX.bind($$)).attr(\"y\", xv).text(function (d) {\n            return d.text;\n        }).style(\"opacity\", 1)];\n    };\n    c3_chart_internal_fn.showXGridFocus = function (selectedData) {\n        var $$ = this,\n            config = $$.config,\n            dataToShow = selectedData.filter(function (d) {\n            return d && isValue(d.value);\n        }),\n            focusEl = $$.main.selectAll('line.' + CLASS.xgridFocus),\n            xx = $$.xx.bind($$);\n        if (!config.tooltip_show) {\n            return;\n        }\n        // Hide when scatter plot exists\n        if ($$.hasType('scatter') || $$.hasArcType()) {\n            return;\n        }\n        focusEl.style(\"visibility\", \"visible\").data([dataToShow[0]]).attr(config.axis_rotated ? 'y1' : 'x1', xx).attr(config.axis_rotated ? 'y2' : 'x2', xx);\n        $$.smoothLines(focusEl, 'grid');\n    };\n    c3_chart_internal_fn.hideXGridFocus = function () {\n        this.main.select('line.' + CLASS.xgridFocus).style(\"visibility\", \"hidden\");\n    };\n    c3_chart_internal_fn.updateXgridFocus = function () {\n        var $$ = this,\n            config = $$.config;\n        $$.main.select('line.' + CLASS.xgridFocus).attr(\"x1\", config.axis_rotated ? 0 : -10).attr(\"x2\", config.axis_rotated ? $$.width : -10).attr(\"y1\", config.axis_rotated ? -10 : 0).attr(\"y2\", config.axis_rotated ? -10 : $$.height);\n    };\n    c3_chart_internal_fn.generateGridData = function (type, scale) {\n        var $$ = this,\n            gridData = [],\n            xDomain,\n            firstYear,\n            lastYear,\n            i,\n            tickNum = $$.main.select(\".\" + CLASS.axisX).selectAll('.tick').size();\n        if (type === 'year') {\n            xDomain = $$.getXDomain();\n            firstYear = xDomain[0].getFullYear();\n            lastYear = xDomain[1].getFullYear();\n            for (i = firstYear; i <= lastYear; i++) {\n                gridData.push(new Date(i + '-01-01 00:00:00'));\n            }\n        } else {\n            gridData = scale.ticks(10);\n            if (gridData.length > tickNum) {\n                // use only int\n                gridData = gridData.filter(function (d) {\n                    return (\"\" + d).indexOf('.') < 0;\n                });\n            }\n        }\n        return gridData;\n    };\n    c3_chart_internal_fn.getGridFilterToRemove = function (params) {\n        return params ? function (line) {\n            var found = false;\n            [].concat(params).forEach(function (param) {\n                if ('value' in param && line.value === param.value || 'class' in param && line['class'] === param['class']) {\n                    found = true;\n                }\n            });\n            return found;\n        } : function () {\n            return true;\n        };\n    };\n    c3_chart_internal_fn.removeGridLines = function (params, forX) {\n        var $$ = this,\n            config = $$.config,\n            toRemove = $$.getGridFilterToRemove(params),\n            toShow = function toShow(line) {\n            return !toRemove(line);\n        },\n            classLines = forX ? CLASS.xgridLines : CLASS.ygridLines,\n            classLine = forX ? CLASS.xgridLine : CLASS.ygridLine;\n        $$.main.select('.' + classLines).selectAll('.' + classLine).filter(toRemove).transition().duration(config.transition_duration).style('opacity', 0).remove();\n        if (forX) {\n            config.grid_x_lines = config.grid_x_lines.filter(toShow);\n        } else {\n            config.grid_y_lines = config.grid_y_lines.filter(toShow);\n        }\n    };\n\n    c3_chart_internal_fn.initEventRect = function () {\n        var $$ = this;\n        $$.main.select('.' + CLASS.chart).append(\"g\").attr(\"class\", CLASS.eventRects).style('fill-opacity', 0);\n    };\n    c3_chart_internal_fn.redrawEventRect = function () {\n        var $$ = this,\n            config = $$.config,\n            eventRectUpdate,\n            maxDataCountTarget,\n            isMultipleX = $$.isMultipleX();\n\n        // rects for mouseover\n        var eventRects = $$.main.select('.' + CLASS.eventRects).style('cursor', config.zoom_enabled ? config.axis_rotated ? 'ns-resize' : 'ew-resize' : null).classed(CLASS.eventRectsMultiple, isMultipleX).classed(CLASS.eventRectsSingle, !isMultipleX);\n\n        // clear old rects\n        eventRects.selectAll('.' + CLASS.eventRect).remove();\n\n        // open as public variable\n        $$.eventRect = eventRects.selectAll('.' + CLASS.eventRect);\n\n        if (isMultipleX) {\n            eventRectUpdate = $$.eventRect.data([0]);\n            // enter : only one rect will be added\n            $$.generateEventRectsForMultipleXs(eventRectUpdate.enter());\n            // update\n            $$.updateEventRect(eventRectUpdate);\n            // exit : not needed because always only one rect exists\n        } else {\n            // Set data and update $$.eventRect\n            maxDataCountTarget = $$.getMaxDataCountTarget($$.data.targets);\n            eventRects.datum(maxDataCountTarget ? maxDataCountTarget.values : []);\n            $$.eventRect = eventRects.selectAll('.' + CLASS.eventRect);\n            eventRectUpdate = $$.eventRect.data(function (d) {\n                return d;\n            });\n            // enter\n            $$.generateEventRectsForSingleX(eventRectUpdate.enter());\n            // update\n            $$.updateEventRect(eventRectUpdate);\n            // exit\n            eventRectUpdate.exit().remove();\n        }\n    };\n    c3_chart_internal_fn.updateEventRect = function (eventRectUpdate) {\n        var $$ = this,\n            config = $$.config,\n            x,\n            y,\n            w,\n            h,\n            rectW,\n            rectX;\n\n        // set update selection if null\n        eventRectUpdate = eventRectUpdate || $$.eventRect.data(function (d) {\n            return d;\n        });\n\n        if ($$.isMultipleX()) {\n            // TODO: rotated not supported yet\n            x = 0;\n            y = 0;\n            w = $$.width;\n            h = $$.height;\n        } else {\n            if (($$.isCustomX() || $$.isTimeSeries()) && !$$.isCategorized()) {\n\n                // update index for x that is used by prevX and nextX\n                $$.updateXs();\n\n                rectW = function rectW(d) {\n                    var prevX = $$.getPrevX(d.index),\n                        nextX = $$.getNextX(d.index);\n\n                    // if there this is a single data point make the eventRect full width (or height)\n                    if (prevX === null && nextX === null) {\n                        return config.axis_rotated ? $$.height : $$.width;\n                    }\n\n                    if (prevX === null) {\n                        prevX = $$.x.domain()[0];\n                    }\n                    if (nextX === null) {\n                        nextX = $$.x.domain()[1];\n                    }\n\n                    return Math.max(0, ($$.x(nextX) - $$.x(prevX)) / 2);\n                };\n                rectX = function rectX(d) {\n                    var prevX = $$.getPrevX(d.index),\n                        nextX = $$.getNextX(d.index),\n                        thisX = $$.data.xs[d.id][d.index];\n\n                    // if there this is a single data point position the eventRect at 0\n                    if (prevX === null && nextX === null) {\n                        return 0;\n                    }\n\n                    if (prevX === null) {\n                        prevX = $$.x.domain()[0];\n                    }\n\n                    return ($$.x(thisX) + $$.x(prevX)) / 2;\n                };\n            } else {\n                rectW = $$.getEventRectWidth();\n                rectX = function rectX(d) {\n                    return $$.x(d.x) - rectW / 2;\n                };\n            }\n            x = config.axis_rotated ? 0 : rectX;\n            y = config.axis_rotated ? rectX : 0;\n            w = config.axis_rotated ? $$.width : rectW;\n            h = config.axis_rotated ? rectW : $$.height;\n        }\n\n        eventRectUpdate.attr('class', $$.classEvent.bind($$)).attr(\"x\", x).attr(\"y\", y).attr(\"width\", w).attr(\"height\", h);\n    };\n    c3_chart_internal_fn.generateEventRectsForSingleX = function (eventRectEnter) {\n        var $$ = this,\n            d3 = $$.d3,\n            config = $$.config;\n        eventRectEnter.append(\"rect\").attr(\"class\", $$.classEvent.bind($$)).style(\"cursor\", config.data_selection_enabled && config.data_selection_grouped ? \"pointer\" : null).on('mouseover', function (d) {\n            var index = d.index;\n\n            if ($$.dragging || $$.flowing) {\n                return;\n            } // do nothing while dragging/flowing\n            if ($$.hasArcType()) {\n                return;\n            }\n\n            // Expand shapes for selection\n            if (config.point_focus_expand_enabled) {\n                $$.expandCircles(index, null, true);\n            }\n            $$.expandBars(index, null, true);\n\n            // Call event handler\n            $$.main.selectAll('.' + CLASS.shape + '-' + index).each(function (d) {\n                config.data_onmouseover.call($$.api, d);\n            });\n        }).on('mouseout', function (d) {\n            var index = d.index;\n            if (!$$.config) {\n                return;\n            } // chart is destroyed\n            if ($$.hasArcType()) {\n                return;\n            }\n            $$.hideXGridFocus();\n            $$.hideTooltip();\n            // Undo expanded shapes\n            $$.unexpandCircles();\n            $$.unexpandBars();\n            // Call event handler\n            $$.main.selectAll('.' + CLASS.shape + '-' + index).each(function (d) {\n                config.data_onmouseout.call($$.api, d);\n            });\n        }).on('mousemove', function (d) {\n            var selectedData,\n                index = d.index,\n                eventRect = $$.svg.select('.' + CLASS.eventRect + '-' + index);\n\n            if ($$.dragging || $$.flowing) {\n                return;\n            } // do nothing while dragging/flowing\n            if ($$.hasArcType()) {\n                return;\n            }\n\n            if ($$.isStepType(d) && $$.config.line_step_type === 'step-after' && d3.mouse(this)[0] < $$.x($$.getXValue(d.id, index))) {\n                index -= 1;\n            }\n\n            // Show tooltip\n            selectedData = $$.filterTargetsToShow($$.data.targets).map(function (t) {\n                return $$.addName($$.getValueOnIndex(t.values, index));\n            });\n\n            if (config.tooltip_grouped) {\n                $$.showTooltip(selectedData, this);\n                $$.showXGridFocus(selectedData);\n            }\n\n            if (config.tooltip_grouped && (!config.data_selection_enabled || config.data_selection_grouped)) {\n                return;\n            }\n\n            $$.main.selectAll('.' + CLASS.shape + '-' + index).each(function () {\n                d3.select(this).classed(CLASS.EXPANDED, true);\n                if (config.data_selection_enabled) {\n                    eventRect.style('cursor', config.data_selection_grouped ? 'pointer' : null);\n                }\n                if (!config.tooltip_grouped) {\n                    $$.hideXGridFocus();\n                    $$.hideTooltip();\n                    if (!config.data_selection_grouped) {\n                        $$.unexpandCircles(index);\n                        $$.unexpandBars(index);\n                    }\n                }\n            }).filter(function (d) {\n                return $$.isWithinShape(this, d);\n            }).each(function (d) {\n                if (config.data_selection_enabled && (config.data_selection_grouped || config.data_selection_isselectable(d))) {\n                    eventRect.style('cursor', 'pointer');\n                }\n                if (!config.tooltip_grouped) {\n                    $$.showTooltip([d], this);\n                    $$.showXGridFocus([d]);\n                    if (config.point_focus_expand_enabled) {\n                        $$.expandCircles(index, d.id, true);\n                    }\n                    $$.expandBars(index, d.id, true);\n                }\n            });\n        }).on('click', function (d) {\n            var index = d.index;\n            if ($$.hasArcType() || !$$.toggleShape) {\n                return;\n            }\n            if ($$.cancelClick) {\n                $$.cancelClick = false;\n                return;\n            }\n            if ($$.isStepType(d) && config.line_step_type === 'step-after' && d3.mouse(this)[0] < $$.x($$.getXValue(d.id, index))) {\n                index -= 1;\n            }\n            $$.main.selectAll('.' + CLASS.shape + '-' + index).each(function (d) {\n                if (config.data_selection_grouped || $$.isWithinShape(this, d)) {\n                    $$.toggleShape(this, d, index);\n                    $$.config.data_onclick.call($$.api, d, this);\n                }\n            });\n        }).call(config.data_selection_draggable && $$.drag ? d3.behavior.drag().origin(Object).on('drag', function () {\n            $$.drag(d3.mouse(this));\n        }).on('dragstart', function () {\n            $$.dragstart(d3.mouse(this));\n        }).on('dragend', function () {\n            $$.dragend();\n        }) : function () {});\n    };\n\n    c3_chart_internal_fn.generateEventRectsForMultipleXs = function (eventRectEnter) {\n        var $$ = this,\n            d3 = $$.d3,\n            config = $$.config;\n\n        function mouseout() {\n            $$.svg.select('.' + CLASS.eventRect).style('cursor', null);\n            $$.hideXGridFocus();\n            $$.hideTooltip();\n            $$.unexpandCircles();\n            $$.unexpandBars();\n        }\n\n        eventRectEnter.append('rect').attr('x', 0).attr('y', 0).attr('width', $$.width).attr('height', $$.height).attr('class', CLASS.eventRect).on('mouseout', function () {\n            if (!$$.config) {\n                return;\n            } // chart is destroyed\n            if ($$.hasArcType()) {\n                return;\n            }\n            mouseout();\n        }).on('mousemove', function () {\n            var targetsToShow = $$.filterTargetsToShow($$.data.targets);\n            var mouse, closest, sameXData, selectedData;\n\n            if ($$.dragging) {\n                return;\n            } // do nothing when dragging\n            if ($$.hasArcType(targetsToShow)) {\n                return;\n            }\n\n            mouse = d3.mouse(this);\n            closest = $$.findClosestFromTargets(targetsToShow, mouse);\n\n            if ($$.mouseover && (!closest || closest.id !== $$.mouseover.id)) {\n                config.data_onmouseout.call($$.api, $$.mouseover);\n                $$.mouseover = undefined;\n            }\n\n            if (!closest) {\n                mouseout();\n                return;\n            }\n\n            if ($$.isScatterType(closest) || !config.tooltip_grouped) {\n                sameXData = [closest];\n            } else {\n                sameXData = $$.filterByX(targetsToShow, closest.x);\n            }\n\n            // show tooltip when cursor is close to some point\n            selectedData = sameXData.map(function (d) {\n                return $$.addName(d);\n            });\n            $$.showTooltip(selectedData, this);\n\n            // expand points\n            if (config.point_focus_expand_enabled) {\n                $$.expandCircles(closest.index, closest.id, true);\n            }\n            $$.expandBars(closest.index, closest.id, true);\n\n            // Show xgrid focus line\n            $$.showXGridFocus(selectedData);\n\n            // Show cursor as pointer if point is close to mouse position\n            if ($$.isBarType(closest.id) || $$.dist(closest, mouse) < config.point_sensitivity) {\n                $$.svg.select('.' + CLASS.eventRect).style('cursor', 'pointer');\n                if (!$$.mouseover) {\n                    config.data_onmouseover.call($$.api, closest);\n                    $$.mouseover = closest;\n                }\n            }\n        }).on('click', function () {\n            var targetsToShow = $$.filterTargetsToShow($$.data.targets);\n            var mouse, closest;\n            if ($$.hasArcType(targetsToShow)) {\n                return;\n            }\n\n            mouse = d3.mouse(this);\n            closest = $$.findClosestFromTargets(targetsToShow, mouse);\n            if (!closest) {\n                return;\n            }\n            // select if selection enabled\n            if ($$.isBarType(closest.id) || $$.dist(closest, mouse) < config.point_sensitivity) {\n                $$.main.selectAll('.' + CLASS.shapes + $$.getTargetSelectorSuffix(closest.id)).selectAll('.' + CLASS.shape + '-' + closest.index).each(function () {\n                    if (config.data_selection_grouped || $$.isWithinShape(this, closest)) {\n                        $$.toggleShape(this, closest, closest.index);\n                        $$.config.data_onclick.call($$.api, closest, this);\n                    }\n                });\n            }\n        }).call(config.data_selection_draggable && $$.drag ? d3.behavior.drag().origin(Object).on('drag', function () {\n            $$.drag(d3.mouse(this));\n        }).on('dragstart', function () {\n            $$.dragstart(d3.mouse(this));\n        }).on('dragend', function () {\n            $$.dragend();\n        }) : function () {});\n    };\n    c3_chart_internal_fn.dispatchEvent = function (type, index, mouse) {\n        var $$ = this,\n            selector = '.' + CLASS.eventRect + (!$$.isMultipleX() ? '-' + index : ''),\n            eventRect = $$.main.select(selector).node(),\n            box = eventRect.getBoundingClientRect(),\n            x = box.left + (mouse ? mouse[0] : 0),\n            y = box.top + (mouse ? mouse[1] : 0),\n            event = document.createEvent(\"MouseEvents\");\n\n        event.initMouseEvent(type, true, true, window, 0, x, y, x, y, false, false, false, false, 0, null);\n        eventRect.dispatchEvent(event);\n    };\n\n    c3_chart_internal_fn.initLegend = function () {\n        var $$ = this;\n        $$.legendItemTextBox = {};\n        $$.legendHasRendered = false;\n        $$.legend = $$.svg.append(\"g\").attr(\"transform\", $$.getTranslate('legend'));\n        if (!$$.config.legend_show) {\n            $$.legend.style('visibility', 'hidden');\n            $$.hiddenLegendIds = $$.mapToIds($$.data.targets);\n            return;\n        }\n        // MEMO: call here to update legend box and tranlate for all\n        // MEMO: translate will be upated by this, so transform not needed in updateLegend()\n        $$.updateLegendWithDefaults();\n    };\n    c3_chart_internal_fn.updateLegendWithDefaults = function () {\n        var $$ = this;\n        $$.updateLegend($$.mapToIds($$.data.targets), { withTransform: false, withTransitionForTransform: false, withTransition: false });\n    };\n    c3_chart_internal_fn.updateSizeForLegend = function (legendHeight, legendWidth) {\n        var $$ = this,\n            config = $$.config,\n            insetLegendPosition = {\n            top: $$.isLegendTop ? $$.getCurrentPaddingTop() + config.legend_inset_y + 5.5 : $$.currentHeight - legendHeight - $$.getCurrentPaddingBottom() - config.legend_inset_y,\n            left: $$.isLegendLeft ? $$.getCurrentPaddingLeft() + config.legend_inset_x + 0.5 : $$.currentWidth - legendWidth - $$.getCurrentPaddingRight() - config.legend_inset_x + 0.5\n        };\n\n        $$.margin3 = {\n            top: $$.isLegendRight ? 0 : $$.isLegendInset ? insetLegendPosition.top : $$.currentHeight - legendHeight,\n            right: NaN,\n            bottom: 0,\n            left: $$.isLegendRight ? $$.currentWidth - legendWidth : $$.isLegendInset ? insetLegendPosition.left : 0\n        };\n    };\n    c3_chart_internal_fn.transformLegend = function (withTransition) {\n        var $$ = this;\n        (withTransition ? $$.legend.transition() : $$.legend).attr(\"transform\", $$.getTranslate('legend'));\n    };\n    c3_chart_internal_fn.updateLegendStep = function (step) {\n        this.legendStep = step;\n    };\n    c3_chart_internal_fn.updateLegendItemWidth = function (w) {\n        this.legendItemWidth = w;\n    };\n    c3_chart_internal_fn.updateLegendItemHeight = function (h) {\n        this.legendItemHeight = h;\n    };\n    c3_chart_internal_fn.getLegendWidth = function () {\n        var $$ = this;\n        return $$.config.legend_show ? $$.isLegendRight || $$.isLegendInset ? $$.legendItemWidth * ($$.legendStep + 1) : $$.currentWidth : 0;\n    };\n    c3_chart_internal_fn.getLegendHeight = function () {\n        var $$ = this,\n            h = 0;\n        if ($$.config.legend_show) {\n            if ($$.isLegendRight) {\n                h = $$.currentHeight;\n            } else {\n                h = Math.max(20, $$.legendItemHeight) * ($$.legendStep + 1);\n            }\n        }\n        return h;\n    };\n    c3_chart_internal_fn.opacityForLegend = function (legendItem) {\n        return legendItem.classed(CLASS.legendItemHidden) ? null : 1;\n    };\n    c3_chart_internal_fn.opacityForUnfocusedLegend = function (legendItem) {\n        return legendItem.classed(CLASS.legendItemHidden) ? null : 0.3;\n    };\n    c3_chart_internal_fn.toggleFocusLegend = function (targetIds, focus) {\n        var $$ = this;\n        targetIds = $$.mapToTargetIds(targetIds);\n        $$.legend.selectAll('.' + CLASS.legendItem).filter(function (id) {\n            return targetIds.indexOf(id) >= 0;\n        }).classed(CLASS.legendItemFocused, focus).transition().duration(100).style('opacity', function () {\n            var opacity = focus ? $$.opacityForLegend : $$.opacityForUnfocusedLegend;\n            return opacity.call($$, $$.d3.select(this));\n        });\n    };\n    c3_chart_internal_fn.revertLegend = function () {\n        var $$ = this,\n            d3 = $$.d3;\n        $$.legend.selectAll('.' + CLASS.legendItem).classed(CLASS.legendItemFocused, false).transition().duration(100).style('opacity', function () {\n            return $$.opacityForLegend(d3.select(this));\n        });\n    };\n    c3_chart_internal_fn.showLegend = function (targetIds) {\n        var $$ = this,\n            config = $$.config;\n        if (!config.legend_show) {\n            config.legend_show = true;\n            $$.legend.style('visibility', 'visible');\n            if (!$$.legendHasRendered) {\n                $$.updateLegendWithDefaults();\n            }\n        }\n        $$.removeHiddenLegendIds(targetIds);\n        $$.legend.selectAll($$.selectorLegends(targetIds)).style('visibility', 'visible').transition().style('opacity', function () {\n            return $$.opacityForLegend($$.d3.select(this));\n        });\n    };\n    c3_chart_internal_fn.hideLegend = function (targetIds) {\n        var $$ = this,\n            config = $$.config;\n        if (config.legend_show && isEmpty(targetIds)) {\n            config.legend_show = false;\n            $$.legend.style('visibility', 'hidden');\n        }\n        $$.addHiddenLegendIds(targetIds);\n        $$.legend.selectAll($$.selectorLegends(targetIds)).style('opacity', 0).style('visibility', 'hidden');\n    };\n    c3_chart_internal_fn.clearLegendItemTextBoxCache = function () {\n        this.legendItemTextBox = {};\n    };\n    c3_chart_internal_fn.updateLegend = function (targetIds, options, transitions) {\n        var $$ = this,\n            config = $$.config;\n        var xForLegend, xForLegendText, xForLegendRect, yForLegend, yForLegendText, yForLegendRect, x1ForLegendTile, x2ForLegendTile, yForLegendTile;\n        var paddingTop = 4,\n            paddingRight = 10,\n            maxWidth = 0,\n            maxHeight = 0,\n            posMin = 10,\n            tileWidth = config.legend_item_tile_width + 5;\n        var l,\n            totalLength = 0,\n            offsets = {},\n            widths = {},\n            heights = {},\n            margins = [0],\n            steps = {},\n            step = 0;\n        var withTransition, withTransitionForTransform;\n        var texts, rects, tiles, background;\n\n        // Skip elements when their name is set to null\n        targetIds = targetIds.filter(function (id) {\n            return !isDefined(config.data_names[id]) || config.data_names[id] !== null;\n        });\n\n        options = options || {};\n        withTransition = getOption(options, \"withTransition\", true);\n        withTransitionForTransform = getOption(options, \"withTransitionForTransform\", true);\n\n        function getTextBox(textElement, id) {\n            if (!$$.legendItemTextBox[id]) {\n                $$.legendItemTextBox[id] = $$.getTextRect(textElement.textContent, CLASS.legendItem, textElement);\n            }\n            return $$.legendItemTextBox[id];\n        }\n\n        function updatePositions(textElement, id, index) {\n            var reset = index === 0,\n                isLast = index === targetIds.length - 1,\n                box = getTextBox(textElement, id),\n                itemWidth = box.width + tileWidth + (isLast && !($$.isLegendRight || $$.isLegendInset) ? 0 : paddingRight) + config.legend_padding,\n                itemHeight = box.height + paddingTop,\n                itemLength = $$.isLegendRight || $$.isLegendInset ? itemHeight : itemWidth,\n                areaLength = $$.isLegendRight || $$.isLegendInset ? $$.getLegendHeight() : $$.getLegendWidth(),\n                margin,\n                maxLength;\n\n            // MEMO: care about condifion of step, totalLength\n            function updateValues(id, withoutStep) {\n                if (!withoutStep) {\n                    margin = (areaLength - totalLength - itemLength) / 2;\n                    if (margin < posMin) {\n                        margin = (areaLength - itemLength) / 2;\n                        totalLength = 0;\n                        step++;\n                    }\n                }\n                steps[id] = step;\n                margins[step] = $$.isLegendInset ? 10 : margin;\n                offsets[id] = totalLength;\n                totalLength += itemLength;\n            }\n\n            if (reset) {\n                totalLength = 0;\n                step = 0;\n                maxWidth = 0;\n                maxHeight = 0;\n            }\n\n            if (config.legend_show && !$$.isLegendToShow(id)) {\n                widths[id] = heights[id] = steps[id] = offsets[id] = 0;\n                return;\n            }\n\n            widths[id] = itemWidth;\n            heights[id] = itemHeight;\n\n            if (!maxWidth || itemWidth >= maxWidth) {\n                maxWidth = itemWidth;\n            }\n            if (!maxHeight || itemHeight >= maxHeight) {\n                maxHeight = itemHeight;\n            }\n            maxLength = $$.isLegendRight || $$.isLegendInset ? maxHeight : maxWidth;\n\n            if (config.legend_equally) {\n                Object.keys(widths).forEach(function (id) {\n                    widths[id] = maxWidth;\n                });\n                Object.keys(heights).forEach(function (id) {\n                    heights[id] = maxHeight;\n                });\n                margin = (areaLength - maxLength * targetIds.length) / 2;\n                if (margin < posMin) {\n                    totalLength = 0;\n                    step = 0;\n                    targetIds.forEach(function (id) {\n                        updateValues(id);\n                    });\n                } else {\n                    updateValues(id, true);\n                }\n            } else {\n                updateValues(id);\n            }\n        }\n\n        if ($$.isLegendInset) {\n            step = config.legend_inset_step ? config.legend_inset_step : targetIds.length;\n            $$.updateLegendStep(step);\n        }\n\n        if ($$.isLegendRight) {\n            xForLegend = function xForLegend(id) {\n                return maxWidth * steps[id];\n            };\n            yForLegend = function yForLegend(id) {\n                return margins[steps[id]] + offsets[id];\n            };\n        } else if ($$.isLegendInset) {\n            xForLegend = function xForLegend(id) {\n                return maxWidth * steps[id] + 10;\n            };\n            yForLegend = function yForLegend(id) {\n                return margins[steps[id]] + offsets[id];\n            };\n        } else {\n            xForLegend = function xForLegend(id) {\n                return margins[steps[id]] + offsets[id];\n            };\n            yForLegend = function yForLegend(id) {\n                return maxHeight * steps[id];\n            };\n        }\n        xForLegendText = function xForLegendText(id, i) {\n            return xForLegend(id, i) + 4 + config.legend_item_tile_width;\n        };\n        yForLegendText = function yForLegendText(id, i) {\n            return yForLegend(id, i) + 9;\n        };\n        xForLegendRect = function xForLegendRect(id, i) {\n            return xForLegend(id, i);\n        };\n        yForLegendRect = function yForLegendRect(id, i) {\n            return yForLegend(id, i) - 5;\n        };\n        x1ForLegendTile = function x1ForLegendTile(id, i) {\n            return xForLegend(id, i) - 2;\n        };\n        x2ForLegendTile = function x2ForLegendTile(id, i) {\n            return xForLegend(id, i) - 2 + config.legend_item_tile_width;\n        };\n        yForLegendTile = function yForLegendTile(id, i) {\n            return yForLegend(id, i) + 4;\n        };\n\n        // Define g for legend area\n        l = $$.legend.selectAll('.' + CLASS.legendItem).data(targetIds).enter().append('g').attr('class', function (id) {\n            return $$.generateClass(CLASS.legendItem, id);\n        }).style('visibility', function (id) {\n            return $$.isLegendToShow(id) ? 'visible' : 'hidden';\n        }).style('cursor', 'pointer').on('click', function (id) {\n            if (config.legend_item_onclick) {\n                config.legend_item_onclick.call($$, id);\n            } else {\n                if ($$.d3.event.altKey) {\n                    $$.api.hide();\n                    $$.api.show(id);\n                } else {\n                    $$.api.toggle(id);\n                    $$.isTargetToShow(id) ? $$.api.focus(id) : $$.api.revert();\n                }\n            }\n        }).on('mouseover', function (id) {\n            if (config.legend_item_onmouseover) {\n                config.legend_item_onmouseover.call($$, id);\n            } else {\n                $$.d3.select(this).classed(CLASS.legendItemFocused, true);\n                if (!$$.transiting && $$.isTargetToShow(id)) {\n                    $$.api.focus(id);\n                }\n            }\n        }).on('mouseout', function (id) {\n            if (config.legend_item_onmouseout) {\n                config.legend_item_onmouseout.call($$, id);\n            } else {\n                $$.d3.select(this).classed(CLASS.legendItemFocused, false);\n                $$.api.revert();\n            }\n        });\n        l.append('text').text(function (id) {\n            return isDefined(config.data_names[id]) ? config.data_names[id] : id;\n        }).each(function (id, i) {\n            updatePositions(this, id, i);\n        }).style(\"pointer-events\", \"none\").attr('x', $$.isLegendRight || $$.isLegendInset ? xForLegendText : -200).attr('y', $$.isLegendRight || $$.isLegendInset ? -200 : yForLegendText);\n        l.append('rect').attr(\"class\", CLASS.legendItemEvent).style('fill-opacity', 0).attr('x', $$.isLegendRight || $$.isLegendInset ? xForLegendRect : -200).attr('y', $$.isLegendRight || $$.isLegendInset ? -200 : yForLegendRect);\n        l.append('line').attr('class', CLASS.legendItemTile).style('stroke', $$.color).style(\"pointer-events\", \"none\").attr('x1', $$.isLegendRight || $$.isLegendInset ? x1ForLegendTile : -200).attr('y1', $$.isLegendRight || $$.isLegendInset ? -200 : yForLegendTile).attr('x2', $$.isLegendRight || $$.isLegendInset ? x2ForLegendTile : -200).attr('y2', $$.isLegendRight || $$.isLegendInset ? -200 : yForLegendTile).attr('stroke-width', config.legend_item_tile_height);\n\n        // Set background for inset legend\n        background = $$.legend.select('.' + CLASS.legendBackground + ' rect');\n        if ($$.isLegendInset && maxWidth > 0 && background.size() === 0) {\n            background = $$.legend.insert('g', '.' + CLASS.legendItem).attr(\"class\", CLASS.legendBackground).append('rect');\n        }\n\n        texts = $$.legend.selectAll('text').data(targetIds).text(function (id) {\n            return isDefined(config.data_names[id]) ? config.data_names[id] : id;\n        }) // MEMO: needed for update\n        .each(function (id, i) {\n            updatePositions(this, id, i);\n        });\n        (withTransition ? texts.transition() : texts).attr('x', xForLegendText).attr('y', yForLegendText);\n\n        rects = $$.legend.selectAll('rect.' + CLASS.legendItemEvent).data(targetIds);\n        (withTransition ? rects.transition() : rects).attr('width', function (id) {\n            return widths[id];\n        }).attr('height', function (id) {\n            return heights[id];\n        }).attr('x', xForLegendRect).attr('y', yForLegendRect);\n\n        tiles = $$.legend.selectAll('line.' + CLASS.legendItemTile).data(targetIds);\n        (withTransition ? tiles.transition() : tiles).style('stroke', $$.levelColor ? function (id) {\n            return $$.levelColor($$.cache[id].values[0].value);\n        } : $$.color).attr('x1', x1ForLegendTile).attr('y1', yForLegendTile).attr('x2', x2ForLegendTile).attr('y2', yForLegendTile);\n\n        if (background) {\n            (withTransition ? background.transition() : background).attr('height', $$.getLegendHeight() - 12).attr('width', maxWidth * (step + 1) + 10);\n        }\n\n        // toggle legend state\n        $$.legend.selectAll('.' + CLASS.legendItem).classed(CLASS.legendItemHidden, function (id) {\n            return !$$.isTargetToShow(id);\n        });\n\n        // Update all to reflect change of legend\n        $$.updateLegendItemWidth(maxWidth);\n        $$.updateLegendItemHeight(maxHeight);\n        $$.updateLegendStep(step);\n        // Update size and scale\n        $$.updateSizes();\n        $$.updateScales();\n        $$.updateSvgSize();\n        // Update g positions\n        $$.transformAll(withTransitionForTransform, transitions);\n        $$.legendHasRendered = true;\n    };\n\n    c3_chart_internal_fn.initRegion = function () {\n        var $$ = this;\n        $$.region = $$.main.append('g').attr(\"clip-path\", $$.clipPath).attr(\"class\", CLASS.regions);\n    };\n    c3_chart_internal_fn.updateRegion = function (duration) {\n        var $$ = this,\n            config = $$.config;\n\n        // hide if arc type\n        $$.region.style('visibility', $$.hasArcType() ? 'hidden' : 'visible');\n\n        $$.mainRegion = $$.main.select('.' + CLASS.regions).selectAll('.' + CLASS.region).data(config.regions);\n        $$.mainRegion.enter().append('g').append('rect').style(\"fill-opacity\", 0);\n        $$.mainRegion.attr('class', $$.classRegion.bind($$));\n        $$.mainRegion.exit().transition().duration(duration).style(\"opacity\", 0).remove();\n    };\n    c3_chart_internal_fn.redrawRegion = function (withTransition) {\n        var $$ = this,\n            regions = $$.mainRegion.selectAll('rect').each(function () {\n            // data is binded to g and it's not transferred to rect (child node) automatically,\n            // then data of each rect has to be updated manually.\n            // TODO: there should be more efficient way to solve this?\n            var parentData = $$.d3.select(this.parentNode).datum();\n            $$.d3.select(this).datum(parentData);\n        }),\n            x = $$.regionX.bind($$),\n            y = $$.regionY.bind($$),\n            w = $$.regionWidth.bind($$),\n            h = $$.regionHeight.bind($$);\n        return [(withTransition ? regions.transition() : regions).attr(\"x\", x).attr(\"y\", y).attr(\"width\", w).attr(\"height\", h).style(\"fill-opacity\", function (d) {\n            return isValue(d.opacity) ? d.opacity : 0.1;\n        })];\n    };\n    c3_chart_internal_fn.regionX = function (d) {\n        var $$ = this,\n            config = $$.config,\n            xPos,\n            yScale = d.axis === 'y' ? $$.y : $$.y2;\n        if (d.axis === 'y' || d.axis === 'y2') {\n            xPos = config.axis_rotated ? 'start' in d ? yScale(d.start) : 0 : 0;\n        } else {\n            xPos = config.axis_rotated ? 0 : 'start' in d ? $$.x($$.isTimeSeries() ? $$.parseDate(d.start) : d.start) : 0;\n        }\n        return xPos;\n    };\n    c3_chart_internal_fn.regionY = function (d) {\n        var $$ = this,\n            config = $$.config,\n            yPos,\n            yScale = d.axis === 'y' ? $$.y : $$.y2;\n        if (d.axis === 'y' || d.axis === 'y2') {\n            yPos = config.axis_rotated ? 0 : 'end' in d ? yScale(d.end) : 0;\n        } else {\n            yPos = config.axis_rotated ? 'start' in d ? $$.x($$.isTimeSeries() ? $$.parseDate(d.start) : d.start) : 0 : 0;\n        }\n        return yPos;\n    };\n    c3_chart_internal_fn.regionWidth = function (d) {\n        var $$ = this,\n            config = $$.config,\n            start = $$.regionX(d),\n            end,\n            yScale = d.axis === 'y' ? $$.y : $$.y2;\n        if (d.axis === 'y' || d.axis === 'y2') {\n            end = config.axis_rotated ? 'end' in d ? yScale(d.end) : $$.width : $$.width;\n        } else {\n            end = config.axis_rotated ? $$.width : 'end' in d ? $$.x($$.isTimeSeries() ? $$.parseDate(d.end) : d.end) : $$.width;\n        }\n        return end < start ? 0 : end - start;\n    };\n    c3_chart_internal_fn.regionHeight = function (d) {\n        var $$ = this,\n            config = $$.config,\n            start = this.regionY(d),\n            end,\n            yScale = d.axis === 'y' ? $$.y : $$.y2;\n        if (d.axis === 'y' || d.axis === 'y2') {\n            end = config.axis_rotated ? $$.height : 'start' in d ? yScale(d.start) : $$.height;\n        } else {\n            end = config.axis_rotated ? 'end' in d ? $$.x($$.isTimeSeries() ? $$.parseDate(d.end) : d.end) : $$.height : $$.height;\n        }\n        return end < start ? 0 : end - start;\n    };\n    c3_chart_internal_fn.isRegionOnX = function (d) {\n        return !d.axis || d.axis === 'x';\n    };\n\n    c3_chart_internal_fn.getScale = function (min, max, forTimeseries) {\n        return (forTimeseries ? this.d3.time.scale() : this.d3.scale.linear()).range([min, max]);\n    };\n    c3_chart_internal_fn.getX = function (min, max, domain, offset) {\n        var $$ = this,\n            scale = $$.getScale(min, max, $$.isTimeSeries()),\n            _scale = domain ? scale.domain(domain) : scale,\n            key;\n        // Define customized scale if categorized axis\n        if ($$.isCategorized()) {\n            offset = offset || function () {\n                return 0;\n            };\n            scale = function scale(d, raw) {\n                var v = _scale(d) + offset(d);\n                return raw ? v : Math.ceil(v);\n            };\n        } else {\n            scale = function scale(d, raw) {\n                var v = _scale(d);\n                return raw ? v : Math.ceil(v);\n            };\n        }\n        // define functions\n        for (key in _scale) {\n            scale[key] = _scale[key];\n        }\n        scale.orgDomain = function () {\n            return _scale.domain();\n        };\n        // define custom domain() for categorized axis\n        if ($$.isCategorized()) {\n            scale.domain = function (domain) {\n                if (!arguments.length) {\n                    domain = this.orgDomain();\n                    return [domain[0], domain[1] + 1];\n                }\n                _scale.domain(domain);\n                return scale;\n            };\n        }\n        return scale;\n    };\n    c3_chart_internal_fn.getY = function (min, max, domain) {\n        var scale = this.getScale(min, max, this.isTimeSeriesY());\n        if (domain) {\n            scale.domain(domain);\n        }\n        return scale;\n    };\n    c3_chart_internal_fn.getYScale = function (id) {\n        return this.axis.getId(id) === 'y2' ? this.y2 : this.y;\n    };\n    c3_chart_internal_fn.getSubYScale = function (id) {\n        return this.axis.getId(id) === 'y2' ? this.subY2 : this.subY;\n    };\n    c3_chart_internal_fn.updateScales = function () {\n        var $$ = this,\n            config = $$.config,\n            forInit = !$$.x;\n        // update edges\n        $$.xMin = config.axis_rotated ? 1 : 0;\n        $$.xMax = config.axis_rotated ? $$.height : $$.width;\n        $$.yMin = config.axis_rotated ? 0 : $$.height;\n        $$.yMax = config.axis_rotated ? $$.width : 1;\n        $$.subXMin = $$.xMin;\n        $$.subXMax = $$.xMax;\n        $$.subYMin = config.axis_rotated ? 0 : $$.height2;\n        $$.subYMax = config.axis_rotated ? $$.width2 : 1;\n        // update scales\n        $$.x = $$.getX($$.xMin, $$.xMax, forInit ? undefined : $$.x.orgDomain(), function () {\n            return $$.xAxis.tickOffset();\n        });\n        $$.y = $$.getY($$.yMin, $$.yMax, forInit ? config.axis_y_default : $$.y.domain());\n        $$.y2 = $$.getY($$.yMin, $$.yMax, forInit ? config.axis_y2_default : $$.y2.domain());\n        $$.subX = $$.getX($$.xMin, $$.xMax, $$.orgXDomain, function (d) {\n            return d % 1 ? 0 : $$.subXAxis.tickOffset();\n        });\n        $$.subY = $$.getY($$.subYMin, $$.subYMax, forInit ? config.axis_y_default : $$.subY.domain());\n        $$.subY2 = $$.getY($$.subYMin, $$.subYMax, forInit ? config.axis_y2_default : $$.subY2.domain());\n        // update axes\n        $$.xAxisTickFormat = $$.axis.getXAxisTickFormat();\n        $$.xAxisTickValues = $$.axis.getXAxisTickValues();\n        $$.yAxisTickValues = $$.axis.getYAxisTickValues();\n        $$.y2AxisTickValues = $$.axis.getY2AxisTickValues();\n\n        $$.xAxis = $$.axis.getXAxis($$.x, $$.xOrient, $$.xAxisTickFormat, $$.xAxisTickValues, config.axis_x_tick_outer);\n        $$.subXAxis = $$.axis.getXAxis($$.subX, $$.subXOrient, $$.xAxisTickFormat, $$.xAxisTickValues, config.axis_x_tick_outer);\n        $$.yAxis = $$.axis.getYAxis($$.y, $$.yOrient, config.axis_y_tick_format, $$.yAxisTickValues, config.axis_y_tick_outer);\n        $$.y2Axis = $$.axis.getYAxis($$.y2, $$.y2Orient, config.axis_y2_tick_format, $$.y2AxisTickValues, config.axis_y2_tick_outer);\n\n        // Set initialized scales to brush and zoom\n        if (!forInit) {\n            if ($$.brush) {\n                $$.brush.scale($$.subX);\n            }\n            if (config.zoom_enabled) {\n                $$.zoom.scale($$.x);\n            }\n        }\n        // update for arc\n        if ($$.updateArc) {\n            $$.updateArc();\n        }\n    };\n\n    c3_chart_internal_fn.selectPoint = function (target, d, i) {\n        var $$ = this,\n            config = $$.config,\n            cx = (config.axis_rotated ? $$.circleY : $$.circleX).bind($$),\n            cy = (config.axis_rotated ? $$.circleX : $$.circleY).bind($$),\n            r = $$.pointSelectR.bind($$);\n        config.data_onselected.call($$.api, d, target.node());\n        // add selected-circle on low layer g\n        $$.main.select('.' + CLASS.selectedCircles + $$.getTargetSelectorSuffix(d.id)).selectAll('.' + CLASS.selectedCircle + '-' + i).data([d]).enter().append('circle').attr(\"class\", function () {\n            return $$.generateClass(CLASS.selectedCircle, i);\n        }).attr(\"cx\", cx).attr(\"cy\", cy).attr(\"stroke\", function () {\n            return $$.color(d);\n        }).attr(\"r\", function (d) {\n            return $$.pointSelectR(d) * 1.4;\n        }).transition().duration(100).attr(\"r\", r);\n    };\n    c3_chart_internal_fn.unselectPoint = function (target, d, i) {\n        var $$ = this;\n        $$.config.data_onunselected.call($$.api, d, target.node());\n        // remove selected-circle from low layer g\n        $$.main.select('.' + CLASS.selectedCircles + $$.getTargetSelectorSuffix(d.id)).selectAll('.' + CLASS.selectedCircle + '-' + i).transition().duration(100).attr('r', 0).remove();\n    };\n    c3_chart_internal_fn.togglePoint = function (selected, target, d, i) {\n        selected ? this.selectPoint(target, d, i) : this.unselectPoint(target, d, i);\n    };\n    c3_chart_internal_fn.selectPath = function (target, d) {\n        var $$ = this;\n        $$.config.data_onselected.call($$, d, target.node());\n        if ($$.config.interaction_brighten) {\n            target.transition().duration(100).style(\"fill\", function () {\n                return $$.d3.rgb($$.color(d)).brighter(0.75);\n            });\n        }\n    };\n    c3_chart_internal_fn.unselectPath = function (target, d) {\n        var $$ = this;\n        $$.config.data_onunselected.call($$, d, target.node());\n        if ($$.config.interaction_brighten) {\n            target.transition().duration(100).style(\"fill\", function () {\n                return $$.color(d);\n            });\n        }\n    };\n    c3_chart_internal_fn.togglePath = function (selected, target, d, i) {\n        selected ? this.selectPath(target, d, i) : this.unselectPath(target, d, i);\n    };\n    c3_chart_internal_fn.getToggle = function (that, d) {\n        var $$ = this,\n            toggle;\n        if (that.nodeName === 'circle') {\n            if ($$.isStepType(d)) {\n                // circle is hidden in step chart, so treat as within the click area\n                toggle = function toggle() {}; // TODO: how to select step chart?\n            } else {\n                toggle = $$.togglePoint;\n            }\n        } else if (that.nodeName === 'path') {\n            toggle = $$.togglePath;\n        }\n        return toggle;\n    };\n    c3_chart_internal_fn.toggleShape = function (that, d, i) {\n        var $$ = this,\n            d3 = $$.d3,\n            config = $$.config,\n            shape = d3.select(that),\n            isSelected = shape.classed(CLASS.SELECTED),\n            toggle = $$.getToggle(that, d).bind($$);\n\n        if (config.data_selection_enabled && config.data_selection_isselectable(d)) {\n            if (!config.data_selection_multiple) {\n                $$.main.selectAll('.' + CLASS.shapes + (config.data_selection_grouped ? $$.getTargetSelectorSuffix(d.id) : \"\")).selectAll('.' + CLASS.shape).each(function (d, i) {\n                    var shape = d3.select(this);\n                    if (shape.classed(CLASS.SELECTED)) {\n                        toggle(false, shape.classed(CLASS.SELECTED, false), d, i);\n                    }\n                });\n            }\n            shape.classed(CLASS.SELECTED, !isSelected);\n            toggle(!isSelected, shape, d, i);\n        }\n    };\n\n    c3_chart_internal_fn.initBar = function () {\n        var $$ = this;\n        $$.main.select('.' + CLASS.chart).append(\"g\").attr(\"class\", CLASS.chartBars);\n    };\n    c3_chart_internal_fn.updateTargetsForBar = function (targets) {\n        var $$ = this,\n            config = $$.config,\n            mainBarUpdate,\n            mainBarEnter,\n            classChartBar = $$.classChartBar.bind($$),\n            classBars = $$.classBars.bind($$),\n            classFocus = $$.classFocus.bind($$);\n        mainBarUpdate = $$.main.select('.' + CLASS.chartBars).selectAll('.' + CLASS.chartBar).data(targets).attr('class', function (d) {\n            return classChartBar(d) + classFocus(d);\n        });\n        mainBarEnter = mainBarUpdate.enter().append('g').attr('class', classChartBar).style(\"pointer-events\", \"none\");\n        // Bars for each data\n        mainBarEnter.append('g').attr(\"class\", classBars).style(\"cursor\", function (d) {\n            return config.data_selection_isselectable(d) ? \"pointer\" : null;\n        });\n    };\n    c3_chart_internal_fn.updateBar = function (durationForExit) {\n        var $$ = this,\n            barData = $$.barData.bind($$),\n            classBar = $$.classBar.bind($$),\n            initialOpacity = $$.initialOpacity.bind($$),\n            color = function color(d) {\n            return $$.color(d.id);\n        };\n        $$.mainBar = $$.main.selectAll('.' + CLASS.bars).selectAll('.' + CLASS.bar).data(barData);\n        $$.mainBar.enter().append('path').attr(\"class\", classBar).style(\"stroke\", color).style(\"fill\", color);\n        $$.mainBar.style(\"opacity\", initialOpacity);\n        $$.mainBar.exit().transition().duration(durationForExit).remove();\n    };\n    c3_chart_internal_fn.redrawBar = function (drawBar, withTransition) {\n        return [(withTransition ? this.mainBar.transition(Math.random().toString()) : this.mainBar).attr('d', drawBar).style(\"stroke\", this.color).style(\"fill\", this.color).style(\"opacity\", 1)];\n    };\n    c3_chart_internal_fn.getBarW = function (axis, barTargetsNum) {\n        var $$ = this,\n            config = $$.config,\n            w = typeof config.bar_width === 'number' ? config.bar_width : barTargetsNum ? axis.tickInterval() * config.bar_width_ratio / barTargetsNum : 0;\n        return config.bar_width_max && w > config.bar_width_max ? config.bar_width_max : w;\n    };\n    c3_chart_internal_fn.getBars = function (i, id) {\n        var $$ = this;\n        return (id ? $$.main.selectAll('.' + CLASS.bars + $$.getTargetSelectorSuffix(id)) : $$.main).selectAll('.' + CLASS.bar + (isValue(i) ? '-' + i : ''));\n    };\n    c3_chart_internal_fn.expandBars = function (i, id, reset) {\n        var $$ = this;\n        if (reset) {\n            $$.unexpandBars();\n        }\n        $$.getBars(i, id).classed(CLASS.EXPANDED, true);\n    };\n    c3_chart_internal_fn.unexpandBars = function (i) {\n        var $$ = this;\n        $$.getBars(i).classed(CLASS.EXPANDED, false);\n    };\n    c3_chart_internal_fn.generateDrawBar = function (barIndices, isSub) {\n        var $$ = this,\n            config = $$.config,\n            getPoints = $$.generateGetBarPoints(barIndices, isSub);\n        return function (d, i) {\n            // 4 points that make a bar\n            var points = getPoints(d, i);\n\n            // switch points if axis is rotated, not applicable for sub chart\n            var indexX = config.axis_rotated ? 1 : 0;\n            var indexY = config.axis_rotated ? 0 : 1;\n\n            var path = 'M ' + points[0][indexX] + ',' + points[0][indexY] + ' ' + 'L' + points[1][indexX] + ',' + points[1][indexY] + ' ' + 'L' + points[2][indexX] + ',' + points[2][indexY] + ' ' + 'L' + points[3][indexX] + ',' + points[3][indexY] + ' ' + 'z';\n\n            return path;\n        };\n    };\n    c3_chart_internal_fn.generateGetBarPoints = function (barIndices, isSub) {\n        var $$ = this,\n            axis = isSub ? $$.subXAxis : $$.xAxis,\n            barTargetsNum = barIndices.__max__ + 1,\n            barW = $$.getBarW(axis, barTargetsNum),\n            barX = $$.getShapeX(barW, barTargetsNum, barIndices, !!isSub),\n            barY = $$.getShapeY(!!isSub),\n            barOffset = $$.getShapeOffset($$.isBarType, barIndices, !!isSub),\n            barSpaceOffset = barW * ($$.config.bar_space / 2),\n            yScale = isSub ? $$.getSubYScale : $$.getYScale;\n        return function (d, i) {\n            var y0 = yScale.call($$, d.id)(0),\n                offset = barOffset(d, i) || y0,\n                // offset is for stacked bar chart\n            posX = barX(d),\n                posY = barY(d);\n            // fix posY not to overflow opposite quadrant\n            if ($$.config.axis_rotated) {\n                if (0 < d.value && posY < y0 || d.value < 0 && y0 < posY) {\n                    posY = y0;\n                }\n            }\n            // 4 points that make a bar\n            return [[posX + barSpaceOffset, offset], [posX + barSpaceOffset, posY - (y0 - offset)], [posX + barW - barSpaceOffset, posY - (y0 - offset)], [posX + barW - barSpaceOffset, offset]];\n        };\n    };\n    c3_chart_internal_fn.isWithinBar = function (that) {\n        var mouse = this.d3.mouse(that),\n            box = that.getBoundingClientRect(),\n            seg0 = that.pathSegList.getItem(0),\n            seg1 = that.pathSegList.getItem(1),\n            x = Math.min(seg0.x, seg1.x),\n            y = Math.min(seg0.y, seg1.y),\n            w = box.width,\n            h = box.height,\n            offset = 2,\n            sx = x - offset,\n            ex = x + w + offset,\n            sy = y + h + offset,\n            ey = y - offset;\n        return sx < mouse[0] && mouse[0] < ex && ey < mouse[1] && mouse[1] < sy;\n    };\n\n    c3_chart_internal_fn.getShapeIndices = function (typeFilter) {\n        var $$ = this,\n            config = $$.config,\n            indices = {},\n            i = 0,\n            j,\n            k;\n        $$.filterTargetsToShow($$.data.targets.filter(typeFilter, $$)).forEach(function (d) {\n            for (j = 0; j < config.data_groups.length; j++) {\n                if (config.data_groups[j].indexOf(d.id) < 0) {\n                    continue;\n                }\n                for (k = 0; k < config.data_groups[j].length; k++) {\n                    if (config.data_groups[j][k] in indices) {\n                        indices[d.id] = indices[config.data_groups[j][k]];\n                        break;\n                    }\n                }\n            }\n            if (isUndefined(indices[d.id])) {\n                indices[d.id] = i++;\n            }\n        });\n        indices.__max__ = i - 1;\n        return indices;\n    };\n    c3_chart_internal_fn.getShapeX = function (offset, targetsNum, indices, isSub) {\n        var $$ = this,\n            scale = isSub ? $$.subX : $$.x;\n        return function (d) {\n            var index = d.id in indices ? indices[d.id] : 0;\n            return d.x || d.x === 0 ? scale(d.x) - offset * (targetsNum / 2 - index) : 0;\n        };\n    };\n    c3_chart_internal_fn.getShapeY = function (isSub) {\n        var $$ = this;\n        return function (d) {\n            var scale = isSub ? $$.getSubYScale(d.id) : $$.getYScale(d.id);\n            return scale(d.value);\n        };\n    };\n    c3_chart_internal_fn.getShapeOffset = function (typeFilter, indices, isSub) {\n        var $$ = this,\n            targets = $$.orderTargets($$.filterTargetsToShow($$.data.targets.filter(typeFilter, $$))),\n            targetIds = targets.map(function (t) {\n            return t.id;\n        });\n        return function (d, i) {\n            var scale = isSub ? $$.getSubYScale(d.id) : $$.getYScale(d.id),\n                y0 = scale(0),\n                offset = y0;\n            targets.forEach(function (t) {\n                var values = $$.isStepType(d) ? $$.convertValuesToStep(t.values) : t.values;\n                if (t.id === d.id || indices[t.id] !== indices[d.id]) {\n                    return;\n                }\n                if (targetIds.indexOf(t.id) < targetIds.indexOf(d.id)) {\n                    // check if the x values line up\n                    if (typeof values[i] === 'undefined' || +values[i].x !== +d.x) {\n                        // \"+\" for timeseries\n                        // if not, try to find the value that does line up\n                        i = -1;\n                        values.forEach(function (v, j) {\n                            if (v.x === d.x) {\n                                i = j;\n                            }\n                        });\n                    }\n                    if (i in values && values[i].value * d.value >= 0) {\n                        offset += scale(values[i].value) - y0;\n                    }\n                }\n            });\n            return offset;\n        };\n    };\n    c3_chart_internal_fn.isWithinShape = function (that, d) {\n        var $$ = this,\n            shape = $$.d3.select(that),\n            isWithin;\n        if (!$$.isTargetToShow(d.id)) {\n            isWithin = false;\n        } else if (that.nodeName === 'circle') {\n            isWithin = $$.isStepType(d) ? $$.isWithinStep(that, $$.getYScale(d.id)(d.value)) : $$.isWithinCircle(that, $$.pointSelectR(d) * 1.5);\n        } else if (that.nodeName === 'path') {\n            isWithin = shape.classed(CLASS.bar) ? $$.isWithinBar(that) : true;\n        }\n        return isWithin;\n    };\n\n    c3_chart_internal_fn.getInterpolate = function (d) {\n        var $$ = this,\n            interpolation = $$.isInterpolationType($$.config.spline_interpolation_type) ? $$.config.spline_interpolation_type : 'cardinal';\n        return $$.isSplineType(d) ? interpolation : $$.isStepType(d) ? $$.config.line_step_type : \"linear\";\n    };\n\n    c3_chart_internal_fn.initLine = function () {\n        var $$ = this;\n        $$.main.select('.' + CLASS.chart).append(\"g\").attr(\"class\", CLASS.chartLines);\n    };\n    c3_chart_internal_fn.updateTargetsForLine = function (targets) {\n        var $$ = this,\n            config = $$.config,\n            mainLineUpdate,\n            mainLineEnter,\n            classChartLine = $$.classChartLine.bind($$),\n            classLines = $$.classLines.bind($$),\n            classAreas = $$.classAreas.bind($$),\n            classCircles = $$.classCircles.bind($$),\n            classFocus = $$.classFocus.bind($$);\n        mainLineUpdate = $$.main.select('.' + CLASS.chartLines).selectAll('.' + CLASS.chartLine).data(targets).attr('class', function (d) {\n            return classChartLine(d) + classFocus(d);\n        });\n        mainLineEnter = mainLineUpdate.enter().append('g').attr('class', classChartLine).style('opacity', 0).style(\"pointer-events\", \"none\");\n        // Lines for each data\n        mainLineEnter.append('g').attr(\"class\", classLines);\n        // Areas\n        mainLineEnter.append('g').attr('class', classAreas);\n        // Circles for each data point on lines\n        mainLineEnter.append('g').attr(\"class\", function (d) {\n            return $$.generateClass(CLASS.selectedCircles, d.id);\n        });\n        mainLineEnter.append('g').attr(\"class\", classCircles).style(\"cursor\", function (d) {\n            return config.data_selection_isselectable(d) ? \"pointer\" : null;\n        });\n        // Update date for selected circles\n        targets.forEach(function (t) {\n            $$.main.selectAll('.' + CLASS.selectedCircles + $$.getTargetSelectorSuffix(t.id)).selectAll('.' + CLASS.selectedCircle).each(function (d) {\n                d.value = t.values[d.index].value;\n            });\n        });\n        // MEMO: can not keep same color...\n        //mainLineUpdate.exit().remove();\n    };\n    c3_chart_internal_fn.updateLine = function (durationForExit) {\n        var $$ = this;\n        $$.mainLine = $$.main.selectAll('.' + CLASS.lines).selectAll('.' + CLASS.line).data($$.lineData.bind($$));\n        $$.mainLine.enter().append('path').attr('class', $$.classLine.bind($$)).style(\"stroke\", $$.color);\n        $$.mainLine.style(\"opacity\", $$.initialOpacity.bind($$)).style('shape-rendering', function (d) {\n            return $$.isStepType(d) ? 'crispEdges' : '';\n        }).attr('transform', null);\n        $$.mainLine.exit().transition().duration(durationForExit).style('opacity', 0).remove();\n    };\n    c3_chart_internal_fn.redrawLine = function (drawLine, withTransition) {\n        return [(withTransition ? this.mainLine.transition(Math.random().toString()) : this.mainLine).attr(\"d\", drawLine).style(\"stroke\", this.color).style(\"opacity\", 1)];\n    };\n    c3_chart_internal_fn.generateDrawLine = function (lineIndices, isSub) {\n        var $$ = this,\n            config = $$.config,\n            line = $$.d3.svg.line(),\n            getPoints = $$.generateGetLinePoints(lineIndices, isSub),\n            yScaleGetter = isSub ? $$.getSubYScale : $$.getYScale,\n            xValue = function xValue(d) {\n            return (isSub ? $$.subxx : $$.xx).call($$, d);\n        },\n            yValue = function yValue(d, i) {\n            return config.data_groups.length > 0 ? getPoints(d, i)[0][1] : yScaleGetter.call($$, d.id)(d.value);\n        };\n\n        line = config.axis_rotated ? line.x(yValue).y(xValue) : line.x(xValue).y(yValue);\n        if (!config.line_connectNull) {\n            line = line.defined(function (d) {\n                return d.value != null;\n            });\n        }\n        return function (d) {\n            var values = config.line_connectNull ? $$.filterRemoveNull(d.values) : d.values,\n                x = isSub ? $$.x : $$.subX,\n                y = yScaleGetter.call($$, d.id),\n                x0 = 0,\n                y0 = 0,\n                path;\n            if ($$.isLineType(d)) {\n                if (config.data_regions[d.id]) {\n                    path = $$.lineWithRegions(values, x, y, config.data_regions[d.id]);\n                } else {\n                    if ($$.isStepType(d)) {\n                        values = $$.convertValuesToStep(values);\n                    }\n                    path = line.interpolate($$.getInterpolate(d))(values);\n                }\n            } else {\n                if (values[0]) {\n                    x0 = x(values[0].x);\n                    y0 = y(values[0].value);\n                }\n                path = config.axis_rotated ? \"M \" + y0 + \" \" + x0 : \"M \" + x0 + \" \" + y0;\n            }\n            return path ? path : \"M 0 0\";\n        };\n    };\n    c3_chart_internal_fn.generateGetLinePoints = function (lineIndices, isSub) {\n        // partial duplication of generateGetBarPoints\n        var $$ = this,\n            config = $$.config,\n            lineTargetsNum = lineIndices.__max__ + 1,\n            x = $$.getShapeX(0, lineTargetsNum, lineIndices, !!isSub),\n            y = $$.getShapeY(!!isSub),\n            lineOffset = $$.getShapeOffset($$.isLineType, lineIndices, !!isSub),\n            yScale = isSub ? $$.getSubYScale : $$.getYScale;\n        return function (d, i) {\n            var y0 = yScale.call($$, d.id)(0),\n                offset = lineOffset(d, i) || y0,\n                // offset is for stacked area chart\n            posX = x(d),\n                posY = y(d);\n            // fix posY not to overflow opposite quadrant\n            if (config.axis_rotated) {\n                if (0 < d.value && posY < y0 || d.value < 0 && y0 < posY) {\n                    posY = y0;\n                }\n            }\n            // 1 point that marks the line position\n            return [[posX, posY - (y0 - offset)], [posX, posY - (y0 - offset)], // needed for compatibility\n            [posX, posY - (y0 - offset)], // needed for compatibility\n            [posX, posY - (y0 - offset)] // needed for compatibility\n            ];\n        };\n    };\n\n    c3_chart_internal_fn.lineWithRegions = function (d, x, y, _regions) {\n        var $$ = this,\n            config = $$.config,\n            prev = -1,\n            i,\n            j,\n            s = \"M\",\n            sWithRegion,\n            xp,\n            yp,\n            dx,\n            dy,\n            dd,\n            diff,\n            diffx2,\n            xOffset = $$.isCategorized() ? 0.5 : 0,\n            xValue,\n            yValue,\n            regions = [];\n\n        function isWithinRegions(x, regions) {\n            var i;\n            for (i = 0; i < regions.length; i++) {\n                if (regions[i].start < x && x <= regions[i].end) {\n                    return true;\n                }\n            }\n            return false;\n        }\n\n        // Check start/end of regions\n        if (isDefined(_regions)) {\n            for (i = 0; i < _regions.length; i++) {\n                regions[i] = {};\n                if (isUndefined(_regions[i].start)) {\n                    regions[i].start = d[0].x;\n                } else {\n                    regions[i].start = $$.isTimeSeries() ? $$.parseDate(_regions[i].start) : _regions[i].start;\n                }\n                if (isUndefined(_regions[i].end)) {\n                    regions[i].end = d[d.length - 1].x;\n                } else {\n                    regions[i].end = $$.isTimeSeries() ? $$.parseDate(_regions[i].end) : _regions[i].end;\n                }\n            }\n        }\n\n        // Set scales\n        xValue = config.axis_rotated ? function (d) {\n            return y(d.value);\n        } : function (d) {\n            return x(d.x);\n        };\n        yValue = config.axis_rotated ? function (d) {\n            return x(d.x);\n        } : function (d) {\n            return y(d.value);\n        };\n\n        // Define svg generator function for region\n        function generateM(points) {\n            return 'M' + points[0][0] + ' ' + points[0][1] + ' ' + points[1][0] + ' ' + points[1][1];\n        }\n        if ($$.isTimeSeries()) {\n            sWithRegion = function sWithRegion(d0, d1, j, diff) {\n                var x0 = d0.x.getTime(),\n                    x_diff = d1.x - d0.x,\n                    xv0 = new Date(x0 + x_diff * j),\n                    xv1 = new Date(x0 + x_diff * (j + diff)),\n                    points;\n                if (config.axis_rotated) {\n                    points = [[y(yp(j)), x(xv0)], [y(yp(j + diff)), x(xv1)]];\n                } else {\n                    points = [[x(xv0), y(yp(j))], [x(xv1), y(yp(j + diff))]];\n                }\n                return generateM(points);\n            };\n        } else {\n            sWithRegion = function sWithRegion(d0, d1, j, diff) {\n                var points;\n                if (config.axis_rotated) {\n                    points = [[y(yp(j), true), x(xp(j))], [y(yp(j + diff), true), x(xp(j + diff))]];\n                } else {\n                    points = [[x(xp(j), true), y(yp(j))], [x(xp(j + diff), true), y(yp(j + diff))]];\n                }\n                return generateM(points);\n            };\n        }\n\n        // Generate\n        for (i = 0; i < d.length; i++) {\n\n            // Draw as normal\n            if (isUndefined(regions) || !isWithinRegions(d[i].x, regions)) {\n                s += \" \" + xValue(d[i]) + \" \" + yValue(d[i]);\n            }\n            // Draw with region // TODO: Fix for horizotal charts\n            else {\n                    xp = $$.getScale(d[i - 1].x + xOffset, d[i].x + xOffset, $$.isTimeSeries());\n                    yp = $$.getScale(d[i - 1].value, d[i].value);\n\n                    dx = x(d[i].x) - x(d[i - 1].x);\n                    dy = y(d[i].value) - y(d[i - 1].value);\n                    dd = Math.sqrt(Math.pow(dx, 2) + Math.pow(dy, 2));\n                    diff = 2 / dd;\n                    diffx2 = diff * 2;\n\n                    for (j = diff; j <= 1; j += diffx2) {\n                        s += sWithRegion(d[i - 1], d[i], j, diff);\n                    }\n                }\n            prev = d[i].x;\n        }\n\n        return s;\n    };\n\n    c3_chart_internal_fn.updateArea = function (durationForExit) {\n        var $$ = this,\n            d3 = $$.d3;\n        $$.mainArea = $$.main.selectAll('.' + CLASS.areas).selectAll('.' + CLASS.area).data($$.lineData.bind($$));\n        $$.mainArea.enter().append('path').attr(\"class\", $$.classArea.bind($$)).style(\"fill\", $$.color).style(\"opacity\", function () {\n            $$.orgAreaOpacity = +d3.select(this).style('opacity');return 0;\n        });\n        $$.mainArea.style(\"opacity\", $$.orgAreaOpacity);\n        $$.mainArea.exit().transition().duration(durationForExit).style('opacity', 0).remove();\n    };\n    c3_chart_internal_fn.redrawArea = function (drawArea, withTransition) {\n        return [(withTransition ? this.mainArea.transition(Math.random().toString()) : this.mainArea).attr(\"d\", drawArea).style(\"fill\", this.color).style(\"opacity\", this.orgAreaOpacity)];\n    };\n    c3_chart_internal_fn.generateDrawArea = function (areaIndices, isSub) {\n        var $$ = this,\n            config = $$.config,\n            area = $$.d3.svg.area(),\n            getPoints = $$.generateGetAreaPoints(areaIndices, isSub),\n            yScaleGetter = isSub ? $$.getSubYScale : $$.getYScale,\n            xValue = function xValue(d) {\n            return (isSub ? $$.subxx : $$.xx).call($$, d);\n        },\n            value0 = function value0(d, i) {\n            return config.data_groups.length > 0 ? getPoints(d, i)[0][1] : yScaleGetter.call($$, d.id)($$.getAreaBaseValue(d.id));\n        },\n            value1 = function value1(d, i) {\n            return config.data_groups.length > 0 ? getPoints(d, i)[1][1] : yScaleGetter.call($$, d.id)(d.value);\n        };\n\n        area = config.axis_rotated ? area.x0(value0).x1(value1).y(xValue) : area.x(xValue).y0(config.area_above ? 0 : value0).y1(value1);\n        if (!config.line_connectNull) {\n            area = area.defined(function (d) {\n                return d.value !== null;\n            });\n        }\n\n        return function (d) {\n            var values = config.line_connectNull ? $$.filterRemoveNull(d.values) : d.values,\n                x0 = 0,\n                y0 = 0,\n                path;\n            if ($$.isAreaType(d)) {\n                if ($$.isStepType(d)) {\n                    values = $$.convertValuesToStep(values);\n                }\n                path = area.interpolate($$.getInterpolate(d))(values);\n            } else {\n                if (values[0]) {\n                    x0 = $$.x(values[0].x);\n                    y0 = $$.getYScale(d.id)(values[0].value);\n                }\n                path = config.axis_rotated ? \"M \" + y0 + \" \" + x0 : \"M \" + x0 + \" \" + y0;\n            }\n            return path ? path : \"M 0 0\";\n        };\n    };\n    c3_chart_internal_fn.getAreaBaseValue = function () {\n        return 0;\n    };\n    c3_chart_internal_fn.generateGetAreaPoints = function (areaIndices, isSub) {\n        // partial duplication of generateGetBarPoints\n        var $$ = this,\n            config = $$.config,\n            areaTargetsNum = areaIndices.__max__ + 1,\n            x = $$.getShapeX(0, areaTargetsNum, areaIndices, !!isSub),\n            y = $$.getShapeY(!!isSub),\n            areaOffset = $$.getShapeOffset($$.isAreaType, areaIndices, !!isSub),\n            yScale = isSub ? $$.getSubYScale : $$.getYScale;\n        return function (d, i) {\n            var y0 = yScale.call($$, d.id)(0),\n                offset = areaOffset(d, i) || y0,\n                // offset is for stacked area chart\n            posX = x(d),\n                posY = y(d);\n            // fix posY not to overflow opposite quadrant\n            if (config.axis_rotated) {\n                if (0 < d.value && posY < y0 || d.value < 0 && y0 < posY) {\n                    posY = y0;\n                }\n            }\n            // 1 point that marks the area position\n            return [[posX, offset], [posX, posY - (y0 - offset)], [posX, posY - (y0 - offset)], // needed for compatibility\n            [posX, offset] // needed for compatibility\n            ];\n        };\n    };\n\n    c3_chart_internal_fn.updateCircle = function () {\n        var $$ = this;\n        $$.mainCircle = $$.main.selectAll('.' + CLASS.circles).selectAll('.' + CLASS.circle).data($$.lineOrScatterData.bind($$));\n        $$.mainCircle.enter().append(\"circle\").attr(\"class\", $$.classCircle.bind($$)).attr(\"r\", $$.pointR.bind($$)).style(\"fill\", $$.color);\n        $$.mainCircle.style(\"opacity\", $$.initialOpacityForCircle.bind($$));\n        $$.mainCircle.exit().remove();\n    };\n    c3_chart_internal_fn.redrawCircle = function (cx, cy, withTransition) {\n        var selectedCircles = this.main.selectAll('.' + CLASS.selectedCircle);\n        return [(withTransition ? this.mainCircle.transition(Math.random().toString()) : this.mainCircle).style('opacity', this.opacityForCircle.bind(this)).style(\"fill\", this.color).attr(\"cx\", cx).attr(\"cy\", cy), (withTransition ? selectedCircles.transition(Math.random().toString()) : selectedCircles).attr(\"cx\", cx).attr(\"cy\", cy)];\n    };\n    c3_chart_internal_fn.circleX = function (d) {\n        return d.x || d.x === 0 ? this.x(d.x) : null;\n    };\n    c3_chart_internal_fn.updateCircleY = function () {\n        var $$ = this,\n            lineIndices,\n            getPoints;\n        if ($$.config.data_groups.length > 0) {\n            lineIndices = $$.getShapeIndices($$.isLineType), getPoints = $$.generateGetLinePoints(lineIndices);\n            $$.circleY = function (d, i) {\n                return getPoints(d, i)[0][1];\n            };\n        } else {\n            $$.circleY = function (d) {\n                return $$.getYScale(d.id)(d.value);\n            };\n        }\n    };\n    c3_chart_internal_fn.getCircles = function (i, id) {\n        var $$ = this;\n        return (id ? $$.main.selectAll('.' + CLASS.circles + $$.getTargetSelectorSuffix(id)) : $$.main).selectAll('.' + CLASS.circle + (isValue(i) ? '-' + i : ''));\n    };\n    c3_chart_internal_fn.expandCircles = function (i, id, reset) {\n        var $$ = this,\n            r = $$.pointExpandedR.bind($$);\n        if (reset) {\n            $$.unexpandCircles();\n        }\n        $$.getCircles(i, id).classed(CLASS.EXPANDED, true).attr('r', r);\n    };\n    c3_chart_internal_fn.unexpandCircles = function (i) {\n        var $$ = this,\n            r = $$.pointR.bind($$);\n        $$.getCircles(i).filter(function () {\n            return $$.d3.select(this).classed(CLASS.EXPANDED);\n        }).classed(CLASS.EXPANDED, false).attr('r', r);\n    };\n    c3_chart_internal_fn.pointR = function (d) {\n        var $$ = this,\n            config = $$.config;\n        return $$.isStepType(d) ? 0 : isFunction(config.point_r) ? config.point_r(d) : config.point_r;\n    };\n    c3_chart_internal_fn.pointExpandedR = function (d) {\n        var $$ = this,\n            config = $$.config;\n        if (config.point_focus_expand_enabled) {\n            return isFunction(config.point_focus_expand_r) ? config.point_focus_expand_r(d) : config.point_focus_expand_r ? config.point_focus_expand_r : $$.pointR(d) * 1.75;\n        } else {\n            return $$.pointR(d);\n        }\n    };\n    c3_chart_internal_fn.pointSelectR = function (d) {\n        var $$ = this,\n            config = $$.config;\n        return isFunction(config.point_select_r) ? config.point_select_r(d) : config.point_select_r ? config.point_select_r : $$.pointR(d) * 4;\n    };\n    c3_chart_internal_fn.isWithinCircle = function (that, r) {\n        var d3 = this.d3,\n            mouse = d3.mouse(that),\n            d3_this = d3.select(that),\n            cx = +d3_this.attr(\"cx\"),\n            cy = +d3_this.attr(\"cy\");\n        return Math.sqrt(Math.pow(cx - mouse[0], 2) + Math.pow(cy - mouse[1], 2)) < r;\n    };\n    c3_chart_internal_fn.isWithinStep = function (that, y) {\n        return Math.abs(y - this.d3.mouse(that)[1]) < 30;\n    };\n\n    c3_chart_internal_fn.getCurrentWidth = function () {\n        var $$ = this,\n            config = $$.config;\n        return config.size_width ? config.size_width : $$.getParentWidth();\n    };\n    c3_chart_internal_fn.getCurrentHeight = function () {\n        var $$ = this,\n            config = $$.config,\n            h = config.size_height ? config.size_height : $$.getParentHeight();\n        return h > 0 ? h : 320 / ($$.hasType('gauge') && !config.gauge_fullCircle ? 2 : 1);\n    };\n    c3_chart_internal_fn.getCurrentPaddingTop = function () {\n        var $$ = this,\n            config = $$.config,\n            padding = isValue(config.padding_top) ? config.padding_top : 0;\n        if ($$.title && $$.title.node()) {\n            padding += $$.getTitlePadding();\n        }\n        return padding;\n    };\n    c3_chart_internal_fn.getCurrentPaddingBottom = function () {\n        var config = this.config;\n        return isValue(config.padding_bottom) ? config.padding_bottom : 0;\n    };\n    c3_chart_internal_fn.getCurrentPaddingLeft = function (withoutRecompute) {\n        var $$ = this,\n            config = $$.config;\n        if (isValue(config.padding_left)) {\n            return config.padding_left;\n        } else if (config.axis_rotated) {\n            return !config.axis_x_show || config.axis_x_inner ? 1 : Math.max(ceil10($$.getAxisWidthByAxisId('x', withoutRecompute)), 40);\n        } else if (!config.axis_y_show || config.axis_y_inner) {\n            // && !config.axis_rotated\n            return $$.axis.getYAxisLabelPosition().isOuter ? 30 : 1;\n        } else {\n            return ceil10($$.getAxisWidthByAxisId('y', withoutRecompute));\n        }\n    };\n    c3_chart_internal_fn.getCurrentPaddingRight = function () {\n        var $$ = this,\n            config = $$.config,\n            defaultPadding = 10,\n            legendWidthOnRight = $$.isLegendRight ? $$.getLegendWidth() + 20 : 0;\n        if (isValue(config.padding_right)) {\n            return config.padding_right + 1; // 1 is needed not to hide tick line\n        } else if (config.axis_rotated) {\n            return defaultPadding + legendWidthOnRight;\n        } else if (!config.axis_y2_show || config.axis_y2_inner) {\n            // && !config.axis_rotated\n            return 2 + legendWidthOnRight + ($$.axis.getY2AxisLabelPosition().isOuter ? 20 : 0);\n        } else {\n            return ceil10($$.getAxisWidthByAxisId('y2')) + legendWidthOnRight;\n        }\n    };\n\n    c3_chart_internal_fn.getParentRectValue = function (key) {\n        var parent = this.selectChart.node(),\n            v;\n        while (parent && parent.tagName !== 'BODY') {\n            try {\n                v = parent.getBoundingClientRect()[key];\n            } catch (e) {\n                if (key === 'width') {\n                    // In IE in certain cases getBoundingClientRect\n                    // will cause an \"unspecified error\"\n                    v = parent.offsetWidth;\n                }\n            }\n            if (v) {\n                break;\n            }\n            parent = parent.parentNode;\n        }\n        return v;\n    };\n    c3_chart_internal_fn.getParentWidth = function () {\n        return this.getParentRectValue('width');\n    };\n    c3_chart_internal_fn.getParentHeight = function () {\n        var h = this.selectChart.style('height');\n        return h.indexOf('px') > 0 ? +h.replace('px', '') : 0;\n    };\n\n    c3_chart_internal_fn.getSvgLeft = function (withoutRecompute) {\n        var $$ = this,\n            config = $$.config,\n            hasLeftAxisRect = config.axis_rotated || !config.axis_rotated && !config.axis_y_inner,\n            leftAxisClass = config.axis_rotated ? CLASS.axisX : CLASS.axisY,\n            leftAxis = $$.main.select('.' + leftAxisClass).node(),\n            svgRect = leftAxis && hasLeftAxisRect ? leftAxis.getBoundingClientRect() : { right: 0 },\n            chartRect = $$.selectChart.node().getBoundingClientRect(),\n            hasArc = $$.hasArcType(),\n            svgLeft = svgRect.right - chartRect.left - (hasArc ? 0 : $$.getCurrentPaddingLeft(withoutRecompute));\n        return svgLeft > 0 ? svgLeft : 0;\n    };\n\n    c3_chart_internal_fn.getAxisWidthByAxisId = function (id, withoutRecompute) {\n        var $$ = this,\n            position = $$.axis.getLabelPositionById(id);\n        return $$.axis.getMaxTickWidth(id, withoutRecompute) + (position.isInner ? 20 : 40);\n    };\n    c3_chart_internal_fn.getHorizontalAxisHeight = function (axisId) {\n        var $$ = this,\n            config = $$.config,\n            h = 30;\n        if (axisId === 'x' && !config.axis_x_show) {\n            return 8;\n        }\n        if (axisId === 'x' && config.axis_x_height) {\n            return config.axis_x_height;\n        }\n        if (axisId === 'y' && !config.axis_y_show) {\n            return config.legend_show && !$$.isLegendRight && !$$.isLegendInset ? 10 : 1;\n        }\n        if (axisId === 'y2' && !config.axis_y2_show) {\n            return $$.rotated_padding_top;\n        }\n        // Calculate x axis height when tick rotated\n        if (axisId === 'x' && !config.axis_rotated && config.axis_x_tick_rotate) {\n            h = 30 + $$.axis.getMaxTickWidth(axisId) * Math.cos(Math.PI * (90 - config.axis_x_tick_rotate) / 180);\n        }\n        // Calculate y axis height when tick rotated\n        if (axisId === 'y' && config.axis_rotated && config.axis_y_tick_rotate) {\n            h = 30 + $$.axis.getMaxTickWidth(axisId) * Math.cos(Math.PI * (90 - config.axis_y_tick_rotate) / 180);\n        }\n        return h + ($$.axis.getLabelPositionById(axisId).isInner ? 0 : 10) + (axisId === 'y2' ? -10 : 0);\n    };\n\n    c3_chart_internal_fn.getEventRectWidth = function () {\n        return Math.max(0, this.xAxis.tickInterval());\n    };\n\n    c3_chart_internal_fn.initBrush = function () {\n        var $$ = this,\n            d3 = $$.d3;\n        $$.brush = d3.svg.brush().on(\"brush\", function () {\n            $$.redrawForBrush();\n        });\n        $$.brush.update = function () {\n            if ($$.context) {\n                $$.context.select('.' + CLASS.brush).call(this);\n            }\n            return this;\n        };\n        $$.brush.scale = function (scale) {\n            return $$.config.axis_rotated ? this.y(scale) : this.x(scale);\n        };\n    };\n    c3_chart_internal_fn.initSubchart = function () {\n        var $$ = this,\n            config = $$.config,\n            context = $$.context = $$.svg.append(\"g\").attr(\"transform\", $$.getTranslate('context')),\n            visibility = config.subchart_show ? 'visible' : 'hidden';\n\n        context.style('visibility', visibility);\n\n        // Define g for chart area\n        context.append('g').attr(\"clip-path\", $$.clipPathForSubchart).attr('class', CLASS.chart);\n\n        // Define g for bar chart area\n        context.select('.' + CLASS.chart).append(\"g\").attr(\"class\", CLASS.chartBars);\n\n        // Define g for line chart area\n        context.select('.' + CLASS.chart).append(\"g\").attr(\"class\", CLASS.chartLines);\n\n        // Add extent rect for Brush\n        context.append(\"g\").attr(\"clip-path\", $$.clipPath).attr(\"class\", CLASS.brush).call($$.brush);\n\n        // ATTENTION: This must be called AFTER chart added\n        // Add Axis\n        $$.axes.subx = context.append(\"g\").attr(\"class\", CLASS.axisX).attr(\"transform\", $$.getTranslate('subx')).attr(\"clip-path\", config.axis_rotated ? \"\" : $$.clipPathForXAxis).style(\"visibility\", config.subchart_axis_x_show ? visibility : 'hidden');\n    };\n    c3_chart_internal_fn.updateTargetsForSubchart = function (targets) {\n        var $$ = this,\n            context = $$.context,\n            config = $$.config,\n            contextLineEnter,\n            contextLineUpdate,\n            contextBarEnter,\n            contextBarUpdate,\n            classChartBar = $$.classChartBar.bind($$),\n            classBars = $$.classBars.bind($$),\n            classChartLine = $$.classChartLine.bind($$),\n            classLines = $$.classLines.bind($$),\n            classAreas = $$.classAreas.bind($$);\n\n        if (config.subchart_show) {\n            //-- Bar --//\n            contextBarUpdate = context.select('.' + CLASS.chartBars).selectAll('.' + CLASS.chartBar).data(targets).attr('class', classChartBar);\n            contextBarEnter = contextBarUpdate.enter().append('g').style('opacity', 0).attr('class', classChartBar);\n            // Bars for each data\n            contextBarEnter.append('g').attr(\"class\", classBars);\n\n            //-- Line --//\n            contextLineUpdate = context.select('.' + CLASS.chartLines).selectAll('.' + CLASS.chartLine).data(targets).attr('class', classChartLine);\n            contextLineEnter = contextLineUpdate.enter().append('g').style('opacity', 0).attr('class', classChartLine);\n            // Lines for each data\n            contextLineEnter.append(\"g\").attr(\"class\", classLines);\n            // Area\n            contextLineEnter.append(\"g\").attr(\"class\", classAreas);\n\n            //-- Brush --//\n            context.selectAll('.' + CLASS.brush + ' rect').attr(config.axis_rotated ? \"width\" : \"height\", config.axis_rotated ? $$.width2 : $$.height2);\n        }\n    };\n    c3_chart_internal_fn.updateBarForSubchart = function (durationForExit) {\n        var $$ = this;\n        $$.contextBar = $$.context.selectAll('.' + CLASS.bars).selectAll('.' + CLASS.bar).data($$.barData.bind($$));\n        $$.contextBar.enter().append('path').attr(\"class\", $$.classBar.bind($$)).style(\"stroke\", 'none').style(\"fill\", $$.color);\n        $$.contextBar.style(\"opacity\", $$.initialOpacity.bind($$));\n        $$.contextBar.exit().transition().duration(durationForExit).style('opacity', 0).remove();\n    };\n    c3_chart_internal_fn.redrawBarForSubchart = function (drawBarOnSub, withTransition, duration) {\n        (withTransition ? this.contextBar.transition(Math.random().toString()).duration(duration) : this.contextBar).attr('d', drawBarOnSub).style('opacity', 1);\n    };\n    c3_chart_internal_fn.updateLineForSubchart = function (durationForExit) {\n        var $$ = this;\n        $$.contextLine = $$.context.selectAll('.' + CLASS.lines).selectAll('.' + CLASS.line).data($$.lineData.bind($$));\n        $$.contextLine.enter().append('path').attr('class', $$.classLine.bind($$)).style('stroke', $$.color);\n        $$.contextLine.style(\"opacity\", $$.initialOpacity.bind($$));\n        $$.contextLine.exit().transition().duration(durationForExit).style('opacity', 0).remove();\n    };\n    c3_chart_internal_fn.redrawLineForSubchart = function (drawLineOnSub, withTransition, duration) {\n        (withTransition ? this.contextLine.transition(Math.random().toString()).duration(duration) : this.contextLine).attr(\"d\", drawLineOnSub).style('opacity', 1);\n    };\n    c3_chart_internal_fn.updateAreaForSubchart = function (durationForExit) {\n        var $$ = this,\n            d3 = $$.d3;\n        $$.contextArea = $$.context.selectAll('.' + CLASS.areas).selectAll('.' + CLASS.area).data($$.lineData.bind($$));\n        $$.contextArea.enter().append('path').attr(\"class\", $$.classArea.bind($$)).style(\"fill\", $$.color).style(\"opacity\", function () {\n            $$.orgAreaOpacity = +d3.select(this).style('opacity');return 0;\n        });\n        $$.contextArea.style(\"opacity\", 0);\n        $$.contextArea.exit().transition().duration(durationForExit).style('opacity', 0).remove();\n    };\n    c3_chart_internal_fn.redrawAreaForSubchart = function (drawAreaOnSub, withTransition, duration) {\n        (withTransition ? this.contextArea.transition(Math.random().toString()).duration(duration) : this.contextArea).attr(\"d\", drawAreaOnSub).style(\"fill\", this.color).style(\"opacity\", this.orgAreaOpacity);\n    };\n    c3_chart_internal_fn.redrawSubchart = function (withSubchart, transitions, duration, durationForExit, areaIndices, barIndices, lineIndices) {\n        var $$ = this,\n            d3 = $$.d3,\n            config = $$.config,\n            drawAreaOnSub,\n            drawBarOnSub,\n            drawLineOnSub;\n\n        $$.context.style('visibility', config.subchart_show ? 'visible' : 'hidden');\n\n        // subchart\n        if (config.subchart_show) {\n            // reflect main chart to extent on subchart if zoomed\n            if (d3.event && d3.event.type === 'zoom') {\n                $$.brush.extent($$.x.orgDomain()).update();\n            }\n            // update subchart elements if needed\n            if (withSubchart) {\n\n                // extent rect\n                if (!$$.brush.empty()) {\n                    $$.brush.extent($$.x.orgDomain()).update();\n                }\n                // setup drawer - MEMO: this must be called after axis updated\n                drawAreaOnSub = $$.generateDrawArea(areaIndices, true);\n                drawBarOnSub = $$.generateDrawBar(barIndices, true);\n                drawLineOnSub = $$.generateDrawLine(lineIndices, true);\n\n                $$.updateBarForSubchart(duration);\n                $$.updateLineForSubchart(duration);\n                $$.updateAreaForSubchart(duration);\n\n                $$.redrawBarForSubchart(drawBarOnSub, duration, duration);\n                $$.redrawLineForSubchart(drawLineOnSub, duration, duration);\n                $$.redrawAreaForSubchart(drawAreaOnSub, duration, duration);\n            }\n        }\n    };\n    c3_chart_internal_fn.redrawForBrush = function () {\n        var $$ = this,\n            x = $$.x;\n        $$.redraw({\n            withTransition: false,\n            withY: $$.config.zoom_rescale,\n            withSubchart: false,\n            withUpdateXDomain: true,\n            withDimension: false\n        });\n        $$.config.subchart_onbrush.call($$.api, x.orgDomain());\n    };\n    c3_chart_internal_fn.transformContext = function (withTransition, transitions) {\n        var $$ = this,\n            subXAxis;\n        if (transitions && transitions.axisSubX) {\n            subXAxis = transitions.axisSubX;\n        } else {\n            subXAxis = $$.context.select('.' + CLASS.axisX);\n            if (withTransition) {\n                subXAxis = subXAxis.transition();\n            }\n        }\n        $$.context.attr(\"transform\", $$.getTranslate('context'));\n        subXAxis.attr(\"transform\", $$.getTranslate('subx'));\n    };\n    c3_chart_internal_fn.getDefaultExtent = function () {\n        var $$ = this,\n            config = $$.config,\n            extent = isFunction(config.axis_x_extent) ? config.axis_x_extent($$.getXDomain($$.data.targets)) : config.axis_x_extent;\n        if ($$.isTimeSeries()) {\n            extent = [$$.parseDate(extent[0]), $$.parseDate(extent[1])];\n        }\n        return extent;\n    };\n\n    c3_chart_internal_fn.initText = function () {\n        var $$ = this;\n        $$.main.select('.' + CLASS.chart).append(\"g\").attr(\"class\", CLASS.chartTexts);\n        $$.mainText = $$.d3.selectAll([]);\n    };\n    c3_chart_internal_fn.updateTargetsForText = function (targets) {\n        var $$ = this,\n            mainTextUpdate,\n            mainTextEnter,\n            classChartText = $$.classChartText.bind($$),\n            classTexts = $$.classTexts.bind($$),\n            classFocus = $$.classFocus.bind($$);\n        mainTextUpdate = $$.main.select('.' + CLASS.chartTexts).selectAll('.' + CLASS.chartText).data(targets).attr('class', function (d) {\n            return classChartText(d) + classFocus(d);\n        });\n        mainTextEnter = mainTextUpdate.enter().append('g').attr('class', classChartText).style('opacity', 0).style(\"pointer-events\", \"none\");\n        mainTextEnter.append('g').attr('class', classTexts);\n    };\n    c3_chart_internal_fn.updateText = function (durationForExit) {\n        var $$ = this,\n            config = $$.config,\n            barOrLineData = $$.barOrLineData.bind($$),\n            classText = $$.classText.bind($$);\n        $$.mainText = $$.main.selectAll('.' + CLASS.texts).selectAll('.' + CLASS.text).data(barOrLineData);\n        $$.mainText.enter().append('text').attr(\"class\", classText).attr('text-anchor', function (d) {\n            return config.axis_rotated ? d.value < 0 ? 'end' : 'start' : 'middle';\n        }).style(\"stroke\", 'none').style(\"fill\", function (d) {\n            return $$.color(d);\n        }).style(\"fill-opacity\", 0);\n        $$.mainText.text(function (d, i, j) {\n            return $$.dataLabelFormat(d.id)(d.value, d.id, i, j);\n        });\n        $$.mainText.exit().transition().duration(durationForExit).style('fill-opacity', 0).remove();\n    };\n    c3_chart_internal_fn.redrawText = function (xForText, yForText, forFlow, withTransition) {\n        return [(withTransition ? this.mainText.transition() : this.mainText).attr('x', xForText).attr('y', yForText).style(\"fill\", this.color).style(\"fill-opacity\", forFlow ? 0 : this.opacityForText.bind(this))];\n    };\n    c3_chart_internal_fn.getTextRect = function (text, cls, element) {\n        var dummy = this.d3.select('body').append('div').classed('c3', true),\n            svg = dummy.append(\"svg\").style('visibility', 'hidden').style('position', 'fixed').style('top', 0).style('left', 0),\n            font = this.d3.select(element).style('font'),\n            rect;\n        svg.selectAll('.dummy').data([text]).enter().append('text').classed(cls ? cls : \"\", true).style('font', font).text(text).each(function () {\n            rect = this.getBoundingClientRect();\n        });\n        dummy.remove();\n        return rect;\n    };\n    c3_chart_internal_fn.generateXYForText = function (areaIndices, barIndices, lineIndices, forX) {\n        var $$ = this,\n            getAreaPoints = $$.generateGetAreaPoints(areaIndices, false),\n            getBarPoints = $$.generateGetBarPoints(barIndices, false),\n            getLinePoints = $$.generateGetLinePoints(lineIndices, false),\n            getter = forX ? $$.getXForText : $$.getYForText;\n        return function (d, i) {\n            var getPoints = $$.isAreaType(d) ? getAreaPoints : $$.isBarType(d) ? getBarPoints : getLinePoints;\n            return getter.call($$, getPoints(d, i), d, this);\n        };\n    };\n    c3_chart_internal_fn.getXForText = function (points, d, textElement) {\n        var $$ = this,\n            box = textElement.getBoundingClientRect(),\n            xPos,\n            padding;\n        if ($$.config.axis_rotated) {\n            padding = $$.isBarType(d) ? 4 : 6;\n            xPos = points[2][1] + padding * (d.value < 0 ? -1 : 1);\n        } else {\n            xPos = $$.hasType('bar') ? (points[2][0] + points[0][0]) / 2 : points[0][0];\n        }\n        // show labels regardless of the domain if value is null\n        if (d.value === null) {\n            if (xPos > $$.width) {\n                xPos = $$.width - box.width;\n            } else if (xPos < 0) {\n                xPos = 4;\n            }\n        }\n        return xPos;\n    };\n    c3_chart_internal_fn.getYForText = function (points, d, textElement) {\n        var $$ = this,\n            box = textElement.getBoundingClientRect(),\n            yPos;\n        if ($$.config.axis_rotated) {\n            yPos = (points[0][0] + points[2][0] + box.height * 0.6) / 2;\n        } else {\n            yPos = points[2][1];\n            if (d.value < 0 || d.value === 0 && !$$.hasPositiveValue) {\n                yPos += box.height;\n                if ($$.isBarType(d) && $$.isSafari()) {\n                    yPos -= 3;\n                } else if (!$$.isBarType(d) && $$.isChrome()) {\n                    yPos += 3;\n                }\n            } else {\n                yPos += $$.isBarType(d) ? -3 : -6;\n            }\n        }\n        // show labels regardless of the domain if value is null\n        if (d.value === null && !$$.config.axis_rotated) {\n            if (yPos < box.height) {\n                yPos = box.height;\n            } else if (yPos > this.height) {\n                yPos = this.height - 4;\n            }\n        }\n        return yPos;\n    };\n\n    c3_chart_internal_fn.initTitle = function () {\n        var $$ = this;\n        $$.title = $$.svg.append(\"text\").text($$.config.title_text).attr(\"class\", $$.CLASS.title);\n    };\n    c3_chart_internal_fn.redrawTitle = function () {\n        var $$ = this;\n        $$.title.attr(\"x\", $$.xForTitle.bind($$)).attr(\"y\", $$.yForTitle.bind($$));\n    };\n    c3_chart_internal_fn.xForTitle = function () {\n        var $$ = this,\n            config = $$.config,\n            position = config.title_position || 'left',\n            x;\n        if (position.indexOf('right') >= 0) {\n            x = $$.currentWidth - $$.getTextRect($$.title.node().textContent, $$.CLASS.title, $$.title.node()).width - config.title_padding.right;\n        } else if (position.indexOf('center') >= 0) {\n            x = ($$.currentWidth - $$.getTextRect($$.title.node().textContent, $$.CLASS.title, $$.title.node()).width) / 2;\n        } else {\n            // left\n            x = config.title_padding.left;\n        }\n        return x;\n    };\n    c3_chart_internal_fn.yForTitle = function () {\n        var $$ = this;\n        return $$.config.title_padding.top + $$.getTextRect($$.title.node().textContent, $$.CLASS.title, $$.title.node()).height;\n    };\n    c3_chart_internal_fn.getTitlePadding = function () {\n        var $$ = this;\n        return $$.yForTitle() + $$.config.title_padding.bottom;\n    };\n\n    c3_chart_internal_fn.initTooltip = function () {\n        var $$ = this,\n            config = $$.config,\n            i;\n        $$.tooltip = $$.selectChart.style(\"position\", \"relative\").append(\"div\").attr('class', CLASS.tooltipContainer).style(\"position\", \"absolute\").style(\"pointer-events\", \"none\").style(\"display\", \"none\");\n        // Show tooltip if needed\n        if (config.tooltip_init_show) {\n            if ($$.isTimeSeries() && isString(config.tooltip_init_x)) {\n                config.tooltip_init_x = $$.parseDate(config.tooltip_init_x);\n                for (i = 0; i < $$.data.targets[0].values.length; i++) {\n                    if ($$.data.targets[0].values[i].x - config.tooltip_init_x === 0) {\n                        break;\n                    }\n                }\n                config.tooltip_init_x = i;\n            }\n            $$.tooltip.html(config.tooltip_contents.call($$, $$.data.targets.map(function (d) {\n                return $$.addName(d.values[config.tooltip_init_x]);\n            }), $$.axis.getXAxisTickFormat(), $$.getYFormat($$.hasArcType()), $$.color));\n            $$.tooltip.style(\"top\", config.tooltip_init_position.top).style(\"left\", config.tooltip_init_position.left).style(\"display\", \"block\");\n        }\n    };\n    c3_chart_internal_fn.getTooltipSortFunction = function () {\n        var $$ = this,\n            config = $$.config;\n\n        if (config.data_groups.length === 0 || config.tooltip_order !== undefined) {\n            // if data are not grouped or if an order is specified\n            // for the tooltip values we sort them by their values\n\n            var order = config.tooltip_order;\n            if (order === undefined) {\n                order = config.data_order;\n            }\n\n            var valueOf = function valueOf(obj) {\n                return obj ? obj.value : null;\n            };\n\n            // if data are not grouped, we sort them by their value\n            if (isString(order) && order.toLowerCase() === 'asc') {\n                return function (a, b) {\n                    return valueOf(a) - valueOf(b);\n                };\n            } else if (isString(order) && order.toLowerCase() === 'desc') {\n                return function (a, b) {\n                    return valueOf(b) - valueOf(a);\n                };\n            } else if (isFunction(order)) {\n\n                // if the function is from data_order we need\n                // to wrap the returned function in order to format\n                // the sorted value to the expected format\n\n                var sortFunction = order;\n\n                if (config.tooltip_order === undefined) {\n                    sortFunction = function sortFunction(a, b) {\n                        return order(a ? {\n                            id: a.id,\n                            values: [a]\n                        } : null, b ? {\n                            id: b.id,\n                            values: [b]\n                        } : null);\n                    };\n                }\n\n                return sortFunction;\n            } else if (isArray(order)) {\n                return function (a, b) {\n                    return order.indexOf(a.id) - order.indexOf(b.id);\n                };\n            }\n        } else {\n            // if data are grouped, we follow the order of grouped targets\n            var ids = $$.orderTargets($$.data.targets).map(function (i) {\n                return i.id;\n            });\n\n            // if it was either asc or desc we need to invert the order\n            // returned by orderTargets\n            if ($$.isOrderAsc() || $$.isOrderDesc()) {\n                ids = ids.reverse();\n            }\n\n            return function (a, b) {\n                return ids.indexOf(a.id) - ids.indexOf(b.id);\n            };\n        }\n    };\n    c3_chart_internal_fn.getTooltipContent = function (d, defaultTitleFormat, defaultValueFormat, color) {\n        var $$ = this,\n            config = $$.config,\n            titleFormat = config.tooltip_format_title || defaultTitleFormat,\n            nameFormat = config.tooltip_format_name || function (name) {\n            return name;\n        },\n            valueFormat = config.tooltip_format_value || defaultValueFormat,\n            text,\n            i,\n            title,\n            value,\n            name,\n            bgcolor;\n\n        var tooltipSortFunction = this.getTooltipSortFunction();\n        if (tooltipSortFunction) {\n            d.sort(tooltipSortFunction);\n        }\n\n        for (i = 0; i < d.length; i++) {\n            if (!(d[i] && (d[i].value || d[i].value === 0))) {\n                continue;\n            }\n\n            if (!text) {\n                title = sanitise(titleFormat ? titleFormat(d[i].x) : d[i].x);\n                text = \"<table class='\" + $$.CLASS.tooltip + \"'>\" + (title || title === 0 ? \"<tr><th colspan='2'>\" + title + \"</th></tr>\" : \"\");\n            }\n\n            value = sanitise(valueFormat(d[i].value, d[i].ratio, d[i].id, d[i].index, d));\n            if (value !== undefined) {\n                // Skip elements when their name is set to null\n                if (d[i].name === null) {\n                    continue;\n                }\n                name = sanitise(nameFormat(d[i].name, d[i].ratio, d[i].id, d[i].index));\n                bgcolor = $$.levelColor ? $$.levelColor(d[i].value) : color(d[i].id);\n\n                text += \"<tr class='\" + $$.CLASS.tooltipName + \"-\" + $$.getTargetSelectorSuffix(d[i].id) + \"'>\";\n                text += \"<td class='name'><span style='background-color:\" + bgcolor + \"'></span>\" + name + \"</td>\";\n                text += \"<td class='value'>\" + value + \"</td>\";\n                text += \"</tr>\";\n            }\n        }\n        return text + \"</table>\";\n    };\n    c3_chart_internal_fn.tooltipPosition = function (dataToShow, tWidth, tHeight, element) {\n        var $$ = this,\n            config = $$.config,\n            d3 = $$.d3;\n        var svgLeft, tooltipLeft, tooltipRight, tooltipTop, chartRight;\n        var forArc = $$.hasArcType(),\n            mouse = d3.mouse(element);\n        // Determin tooltip position\n        if (forArc) {\n            tooltipLeft = ($$.width - ($$.isLegendRight ? $$.getLegendWidth() : 0)) / 2 + mouse[0];\n            tooltipTop = ($$.hasType('gauge') ? $$.height : $$.height / 2) + mouse[1] + 20;\n        } else {\n            svgLeft = $$.getSvgLeft(true);\n            if (config.axis_rotated) {\n                tooltipLeft = svgLeft + mouse[0] + 100;\n                tooltipRight = tooltipLeft + tWidth;\n                chartRight = $$.currentWidth - $$.getCurrentPaddingRight();\n                tooltipTop = $$.x(dataToShow[0].x) + 20;\n            } else {\n                tooltipLeft = svgLeft + $$.getCurrentPaddingLeft(true) + $$.x(dataToShow[0].x) + 20;\n                tooltipRight = tooltipLeft + tWidth;\n                chartRight = svgLeft + $$.currentWidth - $$.getCurrentPaddingRight();\n                tooltipTop = mouse[1] + 15;\n            }\n\n            if (tooltipRight > chartRight) {\n                // 20 is needed for Firefox to keep tooltip width\n                tooltipLeft -= tooltipRight - chartRight + 20;\n            }\n            if (tooltipTop + tHeight > $$.currentHeight) {\n                tooltipTop -= tHeight + 30;\n            }\n        }\n        if (tooltipTop < 0) {\n            tooltipTop = 0;\n        }\n        return { top: tooltipTop, left: tooltipLeft };\n    };\n    c3_chart_internal_fn.showTooltip = function (selectedData, element) {\n        var $$ = this,\n            config = $$.config;\n        var tWidth, tHeight, position;\n        var forArc = $$.hasArcType(),\n            dataToShow = selectedData.filter(function (d) {\n            return d && isValue(d.value);\n        }),\n            positionFunction = config.tooltip_position || c3_chart_internal_fn.tooltipPosition;\n        if (dataToShow.length === 0 || !config.tooltip_show) {\n            return;\n        }\n        $$.tooltip.html(config.tooltip_contents.call($$, selectedData, $$.axis.getXAxisTickFormat(), $$.getYFormat(forArc), $$.color)).style(\"display\", \"block\");\n\n        // Get tooltip dimensions\n        tWidth = $$.tooltip.property('offsetWidth');\n        tHeight = $$.tooltip.property('offsetHeight');\n\n        position = positionFunction.call(this, dataToShow, tWidth, tHeight, element);\n        // Set tooltip\n        $$.tooltip.style(\"top\", position.top + \"px\").style(\"left\", position.left + 'px');\n    };\n    c3_chart_internal_fn.hideTooltip = function () {\n        this.tooltip.style(\"display\", \"none\");\n    };\n\n    c3_chart_internal_fn.setTargetType = function (targetIds, type) {\n        var $$ = this,\n            config = $$.config;\n        $$.mapToTargetIds(targetIds).forEach(function (id) {\n            $$.withoutFadeIn[id] = type === config.data_types[id];\n            config.data_types[id] = type;\n        });\n        if (!targetIds) {\n            config.data_type = type;\n        }\n    };\n    c3_chart_internal_fn.hasType = function (type, targets) {\n        var $$ = this,\n            types = $$.config.data_types,\n            has = false;\n        targets = targets || $$.data.targets;\n        if (targets && targets.length) {\n            targets.forEach(function (target) {\n                var t = types[target.id];\n                if (t && t.indexOf(type) >= 0 || !t && type === 'line') {\n                    has = true;\n                }\n            });\n        } else if (Object.keys(types).length) {\n            Object.keys(types).forEach(function (id) {\n                if (types[id] === type) {\n                    has = true;\n                }\n            });\n        } else {\n            has = $$.config.data_type === type;\n        }\n        return has;\n    };\n    c3_chart_internal_fn.hasArcType = function (targets) {\n        return this.hasType('pie', targets) || this.hasType('donut', targets) || this.hasType('gauge', targets);\n    };\n    c3_chart_internal_fn.isLineType = function (d) {\n        var config = this.config,\n            id = isString(d) ? d : d.id;\n        return !config.data_types[id] || ['line', 'spline', 'area', 'area-spline', 'step', 'area-step'].indexOf(config.data_types[id]) >= 0;\n    };\n    c3_chart_internal_fn.isStepType = function (d) {\n        var id = isString(d) ? d : d.id;\n        return ['step', 'area-step'].indexOf(this.config.data_types[id]) >= 0;\n    };\n    c3_chart_internal_fn.isSplineType = function (d) {\n        var id = isString(d) ? d : d.id;\n        return ['spline', 'area-spline'].indexOf(this.config.data_types[id]) >= 0;\n    };\n    c3_chart_internal_fn.isAreaType = function (d) {\n        var id = isString(d) ? d : d.id;\n        return ['area', 'area-spline', 'area-step'].indexOf(this.config.data_types[id]) >= 0;\n    };\n    c3_chart_internal_fn.isBarType = function (d) {\n        var id = isString(d) ? d : d.id;\n        return this.config.data_types[id] === 'bar';\n    };\n    c3_chart_internal_fn.isScatterType = function (d) {\n        var id = isString(d) ? d : d.id;\n        return this.config.data_types[id] === 'scatter';\n    };\n    c3_chart_internal_fn.isPieType = function (d) {\n        var id = isString(d) ? d : d.id;\n        return this.config.data_types[id] === 'pie';\n    };\n    c3_chart_internal_fn.isGaugeType = function (d) {\n        var id = isString(d) ? d : d.id;\n        return this.config.data_types[id] === 'gauge';\n    };\n    c3_chart_internal_fn.isDonutType = function (d) {\n        var id = isString(d) ? d : d.id;\n        return this.config.data_types[id] === 'donut';\n    };\n    c3_chart_internal_fn.isArcType = function (d) {\n        return this.isPieType(d) || this.isDonutType(d) || this.isGaugeType(d);\n    };\n    c3_chart_internal_fn.lineData = function (d) {\n        return this.isLineType(d) ? [d] : [];\n    };\n    c3_chart_internal_fn.arcData = function (d) {\n        return this.isArcType(d.data) ? [d] : [];\n    };\n    /* not used\n     function scatterData(d) {\n     return isScatterType(d) ? d.values : [];\n     }\n     */\n    c3_chart_internal_fn.barData = function (d) {\n        return this.isBarType(d) ? d.values : [];\n    };\n    c3_chart_internal_fn.lineOrScatterData = function (d) {\n        return this.isLineType(d) || this.isScatterType(d) ? d.values : [];\n    };\n    c3_chart_internal_fn.barOrLineData = function (d) {\n        return this.isBarType(d) || this.isLineType(d) ? d.values : [];\n    };\n    c3_chart_internal_fn.isInterpolationType = function (type) {\n        return ['linear', 'linear-closed', 'basis', 'basis-open', 'basis-closed', 'bundle', 'cardinal', 'cardinal-open', 'cardinal-closed', 'monotone'].indexOf(type) >= 0;\n    };\n\n    c3_chart_internal_fn.isSafari = function () {\n        var ua = window.navigator.userAgent;\n        return ua.indexOf('Safari') >= 0 && ua.indexOf('Chrome') < 0;\n    };\n    c3_chart_internal_fn.isChrome = function () {\n        var ua = window.navigator.userAgent;\n        return ua.indexOf('Chrome') >= 0;\n    };\n\n    c3_chart_internal_fn.initZoom = function () {\n        var $$ = this,\n            d3 = $$.d3,\n            config = $$.config,\n            startEvent;\n\n        $$.zoom = d3.behavior.zoom().on(\"zoomstart\", function () {\n            startEvent = d3.event.sourceEvent;\n            $$.zoom.altDomain = d3.event.sourceEvent.altKey ? $$.x.orgDomain() : null;\n            config.zoom_onzoomstart.call($$.api, d3.event.sourceEvent);\n        }).on(\"zoom\", function () {\n            $$.redrawForZoom.call($$);\n        }).on('zoomend', function () {\n            var event = d3.event.sourceEvent;\n            // if click, do nothing. otherwise, click interaction will be canceled.\n            if (event && startEvent.clientX === event.clientX && startEvent.clientY === event.clientY) {\n                return;\n            }\n            $$.redrawEventRect();\n            $$.updateZoom();\n            config.zoom_onzoomend.call($$.api, $$.x.orgDomain());\n        });\n        $$.zoom.scale = function (scale) {\n            return config.axis_rotated ? this.y(scale) : this.x(scale);\n        };\n        $$.zoom.orgScaleExtent = function () {\n            var extent = config.zoom_extent ? config.zoom_extent : [1, 10];\n            return [extent[0], Math.max($$.getMaxDataCount() / extent[1], extent[1])];\n        };\n        $$.zoom.updateScaleExtent = function () {\n            var ratio = diffDomain($$.x.orgDomain()) / diffDomain($$.getZoomDomain()),\n                extent = this.orgScaleExtent();\n            this.scaleExtent([extent[0] * ratio, extent[1] * ratio]);\n            return this;\n        };\n    };\n    c3_chart_internal_fn.getZoomDomain = function () {\n        var $$ = this,\n            config = $$.config,\n            d3 = $$.d3,\n            min = d3.min([$$.orgXDomain[0], config.zoom_x_min]),\n            max = d3.max([$$.orgXDomain[1], config.zoom_x_max]);\n        return [min, max];\n    };\n    c3_chart_internal_fn.updateZoom = function () {\n        var $$ = this,\n            z = $$.config.zoom_enabled ? $$.zoom : function () {};\n        $$.main.select('.' + CLASS.zoomRect).call(z).on(\"dblclick.zoom\", null);\n        $$.main.selectAll('.' + CLASS.eventRect).call(z).on(\"dblclick.zoom\", null);\n    };\n    c3_chart_internal_fn.redrawForZoom = function () {\n        var $$ = this,\n            d3 = $$.d3,\n            config = $$.config,\n            zoom = $$.zoom,\n            x = $$.x;\n        if (!config.zoom_enabled) {\n            return;\n        }\n        if ($$.filterTargetsToShow($$.data.targets).length === 0) {\n            return;\n        }\n        if (d3.event.sourceEvent.type === 'mousemove' && zoom.altDomain) {\n            x.domain(zoom.altDomain);\n            zoom.scale(x).updateScaleExtent();\n            return;\n        }\n        if ($$.isCategorized() && x.orgDomain()[0] === $$.orgXDomain[0]) {\n            x.domain([$$.orgXDomain[0] - 1e-10, x.orgDomain()[1]]);\n        }\n        $$.redraw({\n            withTransition: false,\n            withY: config.zoom_rescale,\n            withSubchart: false,\n            withEventRect: false,\n            withDimension: false\n        });\n        if (d3.event.sourceEvent.type === 'mousemove') {\n            $$.cancelClick = true;\n        }\n        config.zoom_onzoom.call($$.api, x.orgDomain());\n    };\n\n    return c3;\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/c3/c3.js\n// module id = 2087\n// module chunks = 2","!function() {\n  var d3 = {\n    version: \"3.5.17\"\n  };\n  var d3_arraySlice = [].slice, d3_array = function(list) {\n    return d3_arraySlice.call(list);\n  };\n  var d3_document = this.document;\n  function d3_documentElement(node) {\n    return node && (node.ownerDocument || node.document || node).documentElement;\n  }\n  function d3_window(node) {\n    return node && (node.ownerDocument && node.ownerDocument.defaultView || node.document && node || node.defaultView);\n  }\n  if (d3_document) {\n    try {\n      d3_array(d3_document.documentElement.childNodes)[0].nodeType;\n    } catch (e) {\n      d3_array = function(list) {\n        var i = list.length, array = new Array(i);\n        while (i--) array[i] = list[i];\n        return array;\n      };\n    }\n  }\n  if (!Date.now) Date.now = function() {\n    return +new Date();\n  };\n  if (d3_document) {\n    try {\n      d3_document.createElement(\"DIV\").style.setProperty(\"opacity\", 0, \"\");\n    } catch (error) {\n      var d3_element_prototype = this.Element.prototype, d3_element_setAttribute = d3_element_prototype.setAttribute, d3_element_setAttributeNS = d3_element_prototype.setAttributeNS, d3_style_prototype = this.CSSStyleDeclaration.prototype, d3_style_setProperty = d3_style_prototype.setProperty;\n      d3_element_prototype.setAttribute = function(name, value) {\n        d3_element_setAttribute.call(this, name, value + \"\");\n      };\n      d3_element_prototype.setAttributeNS = function(space, local, value) {\n        d3_element_setAttributeNS.call(this, space, local, value + \"\");\n      };\n      d3_style_prototype.setProperty = function(name, value, priority) {\n        d3_style_setProperty.call(this, name, value + \"\", priority);\n      };\n    }\n  }\n  d3.ascending = d3_ascending;\n  function d3_ascending(a, b) {\n    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n  }\n  d3.descending = function(a, b) {\n    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n  };\n  d3.min = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && a > b) a = b;\n    }\n    return a;\n  };\n  d3.max = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b > a) a = b;\n    }\n    return a;\n  };\n  d3.extent = function(array, f) {\n    var i = -1, n = array.length, a, b, c;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    }\n    return [ a, c ];\n  };\n  function d3_number(x) {\n    return x === null ? NaN : +x;\n  }\n  function d3_numeric(x) {\n    return !isNaN(x);\n  }\n  d3.sum = function(array, f) {\n    var s = 0, n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = +array[i])) s += a;\n    } else {\n      while (++i < n) if (d3_numeric(a = +f.call(array, array[i], i))) s += a;\n    }\n    return s;\n  };\n  d3.mean = function(array, f) {\n    var s = 0, n = array.length, a, i = -1, j = n;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) s += a; else --j;\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) s += a; else --j;\n    }\n    if (j) return s / j;\n  };\n  d3.quantile = function(values, p) {\n    var H = (values.length - 1) * p + 1, h = Math.floor(H), v = +values[h - 1], e = H - h;\n    return e ? v + e * (values[h] - v) : v;\n  };\n  d3.median = function(array, f) {\n    var numbers = [], n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) numbers.push(a);\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) numbers.push(a);\n    }\n    if (numbers.length) return d3.quantile(numbers.sort(d3_ascending), .5);\n  };\n  d3.variance = function(array, f) {\n    var n = array.length, m = 0, a, d, s = 0, i = -1, j = 0;\n    if (arguments.length === 1) {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(array[i]))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    } else {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    }\n    if (j > 1) return s / (j - 1);\n  };\n  d3.deviation = function() {\n    var v = d3.variance.apply(this, arguments);\n    return v ? Math.sqrt(v) : v;\n  };\n  function d3_bisector(compare) {\n    return {\n      left: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) < 0) lo = mid + 1; else hi = mid;\n        }\n        return lo;\n      },\n      right: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) > 0) hi = mid; else lo = mid + 1;\n        }\n        return lo;\n      }\n    };\n  }\n  var d3_bisect = d3_bisector(d3_ascending);\n  d3.bisectLeft = d3_bisect.left;\n  d3.bisect = d3.bisectRight = d3_bisect.right;\n  d3.bisector = function(f) {\n    return d3_bisector(f.length === 1 ? function(d, x) {\n      return d3_ascending(f(d), x);\n    } : f);\n  };\n  d3.shuffle = function(array, i0, i1) {\n    if ((m = arguments.length) < 3) {\n      i1 = array.length;\n      if (m < 2) i0 = 0;\n    }\n    var m = i1 - i0, t, i;\n    while (m) {\n      i = Math.random() * m-- | 0;\n      t = array[m + i0], array[m + i0] = array[i + i0], array[i + i0] = t;\n    }\n    return array;\n  };\n  d3.permute = function(array, indexes) {\n    var i = indexes.length, permutes = new Array(i);\n    while (i--) permutes[i] = array[indexes[i]];\n    return permutes;\n  };\n  d3.pairs = function(array) {\n    var i = 0, n = array.length - 1, p0, p1 = array[0], pairs = new Array(n < 0 ? 0 : n);\n    while (i < n) pairs[i] = [ p0 = p1, p1 = array[++i] ];\n    return pairs;\n  };\n  d3.transpose = function(matrix) {\n    if (!(n = matrix.length)) return [];\n    for (var i = -1, m = d3.min(matrix, d3_transposeLength), transpose = new Array(m); ++i < m; ) {\n      for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n; ) {\n        row[j] = matrix[j][i];\n      }\n    }\n    return transpose;\n  };\n  function d3_transposeLength(d) {\n    return d.length;\n  }\n  d3.zip = function() {\n    return d3.transpose(arguments);\n  };\n  d3.keys = function(map) {\n    var keys = [];\n    for (var key in map) keys.push(key);\n    return keys;\n  };\n  d3.values = function(map) {\n    var values = [];\n    for (var key in map) values.push(map[key]);\n    return values;\n  };\n  d3.entries = function(map) {\n    var entries = [];\n    for (var key in map) entries.push({\n      key: key,\n      value: map[key]\n    });\n    return entries;\n  };\n  d3.merge = function(arrays) {\n    var n = arrays.length, m, i = -1, j = 0, merged, array;\n    while (++i < n) j += arrays[i].length;\n    merged = new Array(j);\n    while (--n >= 0) {\n      array = arrays[n];\n      m = array.length;\n      while (--m >= 0) {\n        merged[--j] = array[m];\n      }\n    }\n    return merged;\n  };\n  var abs = Math.abs;\n  d3.range = function(start, stop, step) {\n    if (arguments.length < 3) {\n      step = 1;\n      if (arguments.length < 2) {\n        stop = start;\n        start = 0;\n      }\n    }\n    if ((stop - start) / step === Infinity) throw new Error(\"infinite range\");\n    var range = [], k = d3_range_integerScale(abs(step)), i = -1, j;\n    start *= k, stop *= k, step *= k;\n    if (step < 0) while ((j = start + step * ++i) > stop) range.push(j / k); else while ((j = start + step * ++i) < stop) range.push(j / k);\n    return range;\n  };\n  function d3_range_integerScale(x) {\n    var k = 1;\n    while (x * k % 1) k *= 10;\n    return k;\n  }\n  function d3_class(ctor, properties) {\n    for (var key in properties) {\n      Object.defineProperty(ctor.prototype, key, {\n        value: properties[key],\n        enumerable: false\n      });\n    }\n  }\n  d3.map = function(object, f) {\n    var map = new d3_Map();\n    if (object instanceof d3_Map) {\n      object.forEach(function(key, value) {\n        map.set(key, value);\n      });\n    } else if (Array.isArray(object)) {\n      var i = -1, n = object.length, o;\n      if (arguments.length === 1) while (++i < n) map.set(i, object[i]); else while (++i < n) map.set(f.call(object, o = object[i], i), o);\n    } else {\n      for (var key in object) map.set(key, object[key]);\n    }\n    return map;\n  };\n  function d3_Map() {\n    this._ = Object.create(null);\n  }\n  var d3_map_proto = \"__proto__\", d3_map_zero = \"\\x00\";\n  d3_class(d3_Map, {\n    has: d3_map_has,\n    get: function(key) {\n      return this._[d3_map_escape(key)];\n    },\n    set: function(key, value) {\n      return this._[d3_map_escape(key)] = value;\n    },\n    remove: d3_map_remove,\n    keys: d3_map_keys,\n    values: function() {\n      var values = [];\n      for (var key in this._) values.push(this._[key]);\n      return values;\n    },\n    entries: function() {\n      var entries = [];\n      for (var key in this._) entries.push({\n        key: d3_map_unescape(key),\n        value: this._[key]\n      });\n      return entries;\n    },\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key), this._[key]);\n    }\n  });\n  function d3_map_escape(key) {\n    return (key += \"\") === d3_map_proto || key[0] === d3_map_zero ? d3_map_zero + key : key;\n  }\n  function d3_map_unescape(key) {\n    return (key += \"\")[0] === d3_map_zero ? key.slice(1) : key;\n  }\n  function d3_map_has(key) {\n    return d3_map_escape(key) in this._;\n  }\n  function d3_map_remove(key) {\n    return (key = d3_map_escape(key)) in this._ && delete this._[key];\n  }\n  function d3_map_keys() {\n    var keys = [];\n    for (var key in this._) keys.push(d3_map_unescape(key));\n    return keys;\n  }\n  function d3_map_size() {\n    var size = 0;\n    for (var key in this._) ++size;\n    return size;\n  }\n  function d3_map_empty() {\n    for (var key in this._) return false;\n    return true;\n  }\n  d3.nest = function() {\n    var nest = {}, keys = [], sortKeys = [], sortValues, rollup;\n    function map(mapType, array, depth) {\n      if (depth >= keys.length) return rollup ? rollup.call(nest, array) : sortValues ? array.sort(sortValues) : array;\n      var i = -1, n = array.length, key = keys[depth++], keyValue, object, setter, valuesByKey = new d3_Map(), values;\n      while (++i < n) {\n        if (values = valuesByKey.get(keyValue = key(object = array[i]))) {\n          values.push(object);\n        } else {\n          valuesByKey.set(keyValue, [ object ]);\n        }\n      }\n      if (mapType) {\n        object = mapType();\n        setter = function(keyValue, values) {\n          object.set(keyValue, map(mapType, values, depth));\n        };\n      } else {\n        object = {};\n        setter = function(keyValue, values) {\n          object[keyValue] = map(mapType, values, depth);\n        };\n      }\n      valuesByKey.forEach(setter);\n      return object;\n    }\n    function entries(map, depth) {\n      if (depth >= keys.length) return map;\n      var array = [], sortKey = sortKeys[depth++];\n      map.forEach(function(key, keyMap) {\n        array.push({\n          key: key,\n          values: entries(keyMap, depth)\n        });\n      });\n      return sortKey ? array.sort(function(a, b) {\n        return sortKey(a.key, b.key);\n      }) : array;\n    }\n    nest.map = function(array, mapType) {\n      return map(mapType, array, 0);\n    };\n    nest.entries = function(array) {\n      return entries(map(d3.map, array, 0), 0);\n    };\n    nest.key = function(d) {\n      keys.push(d);\n      return nest;\n    };\n    nest.sortKeys = function(order) {\n      sortKeys[keys.length - 1] = order;\n      return nest;\n    };\n    nest.sortValues = function(order) {\n      sortValues = order;\n      return nest;\n    };\n    nest.rollup = function(f) {\n      rollup = f;\n      return nest;\n    };\n    return nest;\n  };\n  d3.set = function(array) {\n    var set = new d3_Set();\n    if (array) for (var i = 0, n = array.length; i < n; ++i) set.add(array[i]);\n    return set;\n  };\n  function d3_Set() {\n    this._ = Object.create(null);\n  }\n  d3_class(d3_Set, {\n    has: d3_map_has,\n    add: function(key) {\n      this._[d3_map_escape(key += \"\")] = true;\n      return key;\n    },\n    remove: d3_map_remove,\n    values: d3_map_keys,\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key));\n    }\n  });\n  d3.behavior = {};\n  function d3_identity(d) {\n    return d;\n  }\n  d3.rebind = function(target, source) {\n    var i = 1, n = arguments.length, method;\n    while (++i < n) target[method = arguments[i]] = d3_rebind(target, source, source[method]);\n    return target;\n  };\n  function d3_rebind(target, source, method) {\n    return function() {\n      var value = method.apply(source, arguments);\n      return value === source ? target : value;\n    };\n  }\n  function d3_vendorSymbol(object, name) {\n    if (name in object) return name;\n    name = name.charAt(0).toUpperCase() + name.slice(1);\n    for (var i = 0, n = d3_vendorPrefixes.length; i < n; ++i) {\n      var prefixName = d3_vendorPrefixes[i] + name;\n      if (prefixName in object) return prefixName;\n    }\n  }\n  var d3_vendorPrefixes = [ \"webkit\", \"ms\", \"moz\", \"Moz\", \"o\", \"O\" ];\n  function d3_noop() {}\n  d3.dispatch = function() {\n    var dispatch = new d3_dispatch(), i = -1, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    return dispatch;\n  };\n  function d3_dispatch() {}\n  d3_dispatch.prototype.on = function(type, listener) {\n    var i = type.indexOf(\".\"), name = \"\";\n    if (i >= 0) {\n      name = type.slice(i + 1);\n      type = type.slice(0, i);\n    }\n    if (type) return arguments.length < 2 ? this[type].on(name) : this[type].on(name, listener);\n    if (arguments.length === 2) {\n      if (listener == null) for (type in this) {\n        if (this.hasOwnProperty(type)) this[type].on(name, null);\n      }\n      return this;\n    }\n  };\n  function d3_dispatch_event(dispatch) {\n    var listeners = [], listenerByName = new d3_Map();\n    function event() {\n      var z = listeners, i = -1, n = z.length, l;\n      while (++i < n) if (l = z[i].on) l.apply(this, arguments);\n      return dispatch;\n    }\n    event.on = function(name, listener) {\n      var l = listenerByName.get(name), i;\n      if (arguments.length < 2) return l && l.on;\n      if (l) {\n        l.on = null;\n        listeners = listeners.slice(0, i = listeners.indexOf(l)).concat(listeners.slice(i + 1));\n        listenerByName.remove(name);\n      }\n      if (listener) listeners.push(listenerByName.set(name, {\n        on: listener\n      }));\n      return dispatch;\n    };\n    return event;\n  }\n  d3.event = null;\n  function d3_eventPreventDefault() {\n    d3.event.preventDefault();\n  }\n  function d3_eventSource() {\n    var e = d3.event, s;\n    while (s = e.sourceEvent) e = s;\n    return e;\n  }\n  function d3_eventDispatch(target) {\n    var dispatch = new d3_dispatch(), i = 0, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    dispatch.of = function(thiz, argumentz) {\n      return function(e1) {\n        try {\n          var e0 = e1.sourceEvent = d3.event;\n          e1.target = target;\n          d3.event = e1;\n          dispatch[e1.type].apply(thiz, argumentz);\n        } finally {\n          d3.event = e0;\n        }\n      };\n    };\n    return dispatch;\n  }\n  d3.requote = function(s) {\n    return s.replace(d3_requote_re, \"\\\\$&\");\n  };\n  var d3_requote_re = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n  var d3_subclass = {}.__proto__ ? function(object, prototype) {\n    object.__proto__ = prototype;\n  } : function(object, prototype) {\n    for (var property in prototype) object[property] = prototype[property];\n  };\n  function d3_selection(groups) {\n    d3_subclass(groups, d3_selectionPrototype);\n    return groups;\n  }\n  var d3_select = function(s, n) {\n    return n.querySelector(s);\n  }, d3_selectAll = function(s, n) {\n    return n.querySelectorAll(s);\n  }, d3_selectMatches = function(n, s) {\n    var d3_selectMatcher = n.matches || n[d3_vendorSymbol(n, \"matchesSelector\")];\n    d3_selectMatches = function(n, s) {\n      return d3_selectMatcher.call(n, s);\n    };\n    return d3_selectMatches(n, s);\n  };\n  if (typeof Sizzle === \"function\") {\n    d3_select = function(s, n) {\n      return Sizzle(s, n)[0] || null;\n    };\n    d3_selectAll = Sizzle;\n    d3_selectMatches = Sizzle.matchesSelector;\n  }\n  d3.selection = function() {\n    return d3.select(d3_document.documentElement);\n  };\n  var d3_selectionPrototype = d3.selection.prototype = [];\n  d3_selectionPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, group, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(subnode = selector.call(node, node.__data__, i, j));\n          if (subnode && \"__data__\" in node) subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selector(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_select(selector, this);\n    };\n  }\n  d3_selectionPrototype.selectAll = function(selector) {\n    var subgroups = [], subgroup, node;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroups.push(subgroup = d3_array(selector.call(node, node.__data__, i, j)));\n          subgroup.parentNode = node;\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selectorAll(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_selectAll(selector, this);\n    };\n  }\n  var d3_nsXhtml = \"http://www.w3.org/1999/xhtml\";\n  var d3_nsPrefix = {\n    svg: \"http://www.w3.org/2000/svg\",\n    xhtml: d3_nsXhtml,\n    xlink: \"http://www.w3.org/1999/xlink\",\n    xml: \"http://www.w3.org/XML/1998/namespace\",\n    xmlns: \"http://www.w3.org/2000/xmlns/\"\n  };\n  d3.ns = {\n    prefix: d3_nsPrefix,\n    qualify: function(name) {\n      var i = name.indexOf(\":\"), prefix = name;\n      if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n      return d3_nsPrefix.hasOwnProperty(prefix) ? {\n        space: d3_nsPrefix[prefix],\n        local: name\n      } : name;\n    }\n  };\n  d3_selectionPrototype.attr = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node();\n        name = d3.ns.qualify(name);\n        return name.local ? node.getAttributeNS(name.space, name.local) : node.getAttribute(name);\n      }\n      for (value in name) this.each(d3_selection_attr(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_attr(name, value));\n  };\n  function d3_selection_attr(name, value) {\n    name = d3.ns.qualify(name);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrConstant() {\n      this.setAttribute(name, value);\n    }\n    function attrConstantNS() {\n      this.setAttributeNS(name.space, name.local, value);\n    }\n    function attrFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttribute(name); else this.setAttribute(name, x);\n    }\n    function attrFunctionNS() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttributeNS(name.space, name.local); else this.setAttributeNS(name.space, name.local, x);\n    }\n    return value == null ? name.local ? attrNullNS : attrNull : typeof value === \"function\" ? name.local ? attrFunctionNS : attrFunction : name.local ? attrConstantNS : attrConstant;\n  }\n  function d3_collapse(s) {\n    return s.trim().replace(/\\s+/g, \" \");\n  }\n  d3_selectionPrototype.classed = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node(), n = (name = d3_selection_classes(name)).length, i = -1;\n        if (value = node.classList) {\n          while (++i < n) if (!value.contains(name[i])) return false;\n        } else {\n          value = node.getAttribute(\"class\");\n          while (++i < n) if (!d3_selection_classedRe(name[i]).test(value)) return false;\n        }\n        return true;\n      }\n      for (value in name) this.each(d3_selection_classed(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_classed(name, value));\n  };\n  function d3_selection_classedRe(name) {\n    return new RegExp(\"(?:^|\\\\s+)\" + d3.requote(name) + \"(?:\\\\s+|$)\", \"g\");\n  }\n  function d3_selection_classes(name) {\n    return (name + \"\").trim().split(/^|\\s+/);\n  }\n  function d3_selection_classed(name, value) {\n    name = d3_selection_classes(name).map(d3_selection_classedName);\n    var n = name.length;\n    function classedConstant() {\n      var i = -1;\n      while (++i < n) name[i](this, value);\n    }\n    function classedFunction() {\n      var i = -1, x = value.apply(this, arguments);\n      while (++i < n) name[i](this, x);\n    }\n    return typeof value === \"function\" ? classedFunction : classedConstant;\n  }\n  function d3_selection_classedName(name) {\n    var re = d3_selection_classedRe(name);\n    return function(node, value) {\n      if (c = node.classList) return value ? c.add(name) : c.remove(name);\n      var c = node.getAttribute(\"class\") || \"\";\n      if (value) {\n        re.lastIndex = 0;\n        if (!re.test(c)) node.setAttribute(\"class\", d3_collapse(c + \" \" + name));\n      } else {\n        node.setAttribute(\"class\", d3_collapse(c.replace(re, \" \")));\n      }\n    };\n  }\n  d3_selectionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.each(d3_selection_style(priority, name[priority], value));\n        return this;\n      }\n      if (n < 2) {\n        var node = this.node();\n        return d3_window(node).getComputedStyle(node, null).getPropertyValue(name);\n      }\n      priority = \"\";\n    }\n    return this.each(d3_selection_style(name, value, priority));\n  };\n  function d3_selection_style(name, value, priority) {\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleConstant() {\n      this.style.setProperty(name, value, priority);\n    }\n    function styleFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.style.removeProperty(name); else this.style.setProperty(name, x, priority);\n    }\n    return value == null ? styleNull : typeof value === \"function\" ? styleFunction : styleConstant;\n  }\n  d3_selectionPrototype.property = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") return this.node()[name];\n      for (value in name) this.each(d3_selection_property(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_property(name, value));\n  };\n  function d3_selection_property(name, value) {\n    function propertyNull() {\n      delete this[name];\n    }\n    function propertyConstant() {\n      this[name] = value;\n    }\n    function propertyFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) delete this[name]; else this[name] = x;\n    }\n    return value == null ? propertyNull : typeof value === \"function\" ? propertyFunction : propertyConstant;\n  }\n  d3_selectionPrototype.text = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.textContent = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.textContent = \"\";\n    } : function() {\n      this.textContent = value;\n    }) : this.node().textContent;\n  };\n  d3_selectionPrototype.html = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.innerHTML = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.innerHTML = \"\";\n    } : function() {\n      this.innerHTML = value;\n    }) : this.node().innerHTML;\n  };\n  d3_selectionPrototype.append = function(name) {\n    name = d3_selection_creator(name);\n    return this.select(function() {\n      return this.appendChild(name.apply(this, arguments));\n    });\n  };\n  function d3_selection_creator(name) {\n    function create() {\n      var document = this.ownerDocument, namespace = this.namespaceURI;\n      return namespace === d3_nsXhtml && document.documentElement.namespaceURI === d3_nsXhtml ? document.createElement(name) : document.createElementNS(namespace, name);\n    }\n    function createNS() {\n      return this.ownerDocument.createElementNS(name.space, name.local);\n    }\n    return typeof name === \"function\" ? name : (name = d3.ns.qualify(name)).local ? createNS : create;\n  }\n  d3_selectionPrototype.insert = function(name, before) {\n    name = d3_selection_creator(name);\n    before = d3_selection_selector(before);\n    return this.select(function() {\n      return this.insertBefore(name.apply(this, arguments), before.apply(this, arguments) || null);\n    });\n  };\n  d3_selectionPrototype.remove = function() {\n    return this.each(d3_selectionRemove);\n  };\n  function d3_selectionRemove() {\n    var parent = this.parentNode;\n    if (parent) parent.removeChild(this);\n  }\n  d3_selectionPrototype.data = function(value, key) {\n    var i = -1, n = this.length, group, node;\n    if (!arguments.length) {\n      value = new Array(n = (group = this[0]).length);\n      while (++i < n) {\n        if (node = group[i]) {\n          value[i] = node.__data__;\n        }\n      }\n      return value;\n    }\n    function bind(group, groupData) {\n      var i, n = group.length, m = groupData.length, n0 = Math.min(n, m), updateNodes = new Array(m), enterNodes = new Array(m), exitNodes = new Array(n), node, nodeData;\n      if (key) {\n        var nodeByKeyValue = new d3_Map(), keyValues = new Array(n), keyValue;\n        for (i = -1; ++i < n; ) {\n          if (node = group[i]) {\n            if (nodeByKeyValue.has(keyValue = key.call(node, node.__data__, i))) {\n              exitNodes[i] = node;\n            } else {\n              nodeByKeyValue.set(keyValue, node);\n            }\n            keyValues[i] = keyValue;\n          }\n        }\n        for (i = -1; ++i < m; ) {\n          if (!(node = nodeByKeyValue.get(keyValue = key.call(groupData, nodeData = groupData[i], i)))) {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          } else if (node !== true) {\n            updateNodes[i] = node;\n            node.__data__ = nodeData;\n          }\n          nodeByKeyValue.set(keyValue, true);\n        }\n        for (i = -1; ++i < n; ) {\n          if (i in keyValues && nodeByKeyValue.get(keyValues[i]) !== true) {\n            exitNodes[i] = group[i];\n          }\n        }\n      } else {\n        for (i = -1; ++i < n0; ) {\n          node = group[i];\n          nodeData = groupData[i];\n          if (node) {\n            node.__data__ = nodeData;\n            updateNodes[i] = node;\n          } else {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          }\n        }\n        for (;i < m; ++i) {\n          enterNodes[i] = d3_selection_dataNode(groupData[i]);\n        }\n        for (;i < n; ++i) {\n          exitNodes[i] = group[i];\n        }\n      }\n      enterNodes.update = updateNodes;\n      enterNodes.parentNode = updateNodes.parentNode = exitNodes.parentNode = group.parentNode;\n      enter.push(enterNodes);\n      update.push(updateNodes);\n      exit.push(exitNodes);\n    }\n    var enter = d3_selection_enter([]), update = d3_selection([]), exit = d3_selection([]);\n    if (typeof value === \"function\") {\n      while (++i < n) {\n        bind(group = this[i], value.call(group, group.parentNode.__data__, i));\n      }\n    } else {\n      while (++i < n) {\n        bind(group = this[i], value);\n      }\n    }\n    update.enter = function() {\n      return enter;\n    };\n    update.exit = function() {\n      return exit;\n    };\n    return update;\n  };\n  function d3_selection_dataNode(data) {\n    return {\n      __data__: data\n    };\n  }\n  d3_selectionPrototype.datum = function(value) {\n    return arguments.length ? this.property(\"__data__\", value) : this.property(\"__data__\");\n  };\n  d3_selectionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_filter(selector) {\n    return function() {\n      return d3_selectMatches(this, selector);\n    };\n  }\n  d3_selectionPrototype.order = function() {\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = group.length - 1, next = group[i], node; --i >= 0; ) {\n        if (node = group[i]) {\n          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n          next = node;\n        }\n      }\n    }\n    return this;\n  };\n  d3_selectionPrototype.sort = function(comparator) {\n    comparator = d3_selection_sortComparator.apply(this, arguments);\n    for (var j = -1, m = this.length; ++j < m; ) this[j].sort(comparator);\n    return this.order();\n  };\n  function d3_selection_sortComparator(comparator) {\n    if (!arguments.length) comparator = d3_ascending;\n    return function(a, b) {\n      return a && b ? comparator(a.__data__, b.__data__) : !a - !b;\n    };\n  }\n  d3_selectionPrototype.each = function(callback) {\n    return d3_selection_each(this, function(node, i, j) {\n      callback.call(node, node.__data__, i, j);\n    });\n  };\n  function d3_selection_each(groups, callback) {\n    for (var j = 0, m = groups.length; j < m; j++) {\n      for (var group = groups[j], i = 0, n = group.length, node; i < n; i++) {\n        if (node = group[i]) callback(node, i, j);\n      }\n    }\n    return groups;\n  }\n  d3_selectionPrototype.call = function(callback) {\n    var args = d3_array(arguments);\n    callback.apply(args[0] = this, args);\n    return this;\n  };\n  d3_selectionPrototype.empty = function() {\n    return !this.node();\n  };\n  d3_selectionPrototype.node = function() {\n    for (var j = 0, m = this.length; j < m; j++) {\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        var node = group[i];\n        if (node) return node;\n      }\n    }\n    return null;\n  };\n  d3_selectionPrototype.size = function() {\n    var n = 0;\n    d3_selection_each(this, function() {\n      ++n;\n    });\n    return n;\n  };\n  function d3_selection_enter(selection) {\n    d3_subclass(selection, d3_selection_enterPrototype);\n    return selection;\n  }\n  var d3_selection_enterPrototype = [];\n  d3.selection.enter = d3_selection_enter;\n  d3.selection.enter.prototype = d3_selection_enterPrototype;\n  d3_selection_enterPrototype.append = d3_selectionPrototype.append;\n  d3_selection_enterPrototype.empty = d3_selectionPrototype.empty;\n  d3_selection_enterPrototype.node = d3_selectionPrototype.node;\n  d3_selection_enterPrototype.call = d3_selectionPrototype.call;\n  d3_selection_enterPrototype.size = d3_selectionPrototype.size;\n  d3_selection_enterPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, upgroup, group, node;\n    for (var j = -1, m = this.length; ++j < m; ) {\n      upgroup = (group = this[j]).update;\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = group.parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(upgroup[i] = subnode = selector.call(group.parentNode, node.__data__, i, j));\n          subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  d3_selection_enterPrototype.insert = function(name, before) {\n    if (arguments.length < 2) before = d3_selection_enterInsertBefore(this);\n    return d3_selectionPrototype.insert.call(this, name, before);\n  };\n  function d3_selection_enterInsertBefore(enter) {\n    var i0, j0;\n    return function(d, i, j) {\n      var group = enter[j].update, n = group.length, node;\n      if (j != j0) j0 = j, i0 = 0;\n      if (i >= i0) i0 = i + 1;\n      while (!(node = group[i0]) && ++i0 < n) ;\n      return node;\n    };\n  }\n  d3.select = function(node) {\n    var group;\n    if (typeof node === \"string\") {\n      group = [ d3_select(node, d3_document) ];\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = [ node ];\n      group.parentNode = d3_documentElement(node);\n    }\n    return d3_selection([ group ]);\n  };\n  d3.selectAll = function(nodes) {\n    var group;\n    if (typeof nodes === \"string\") {\n      group = d3_array(d3_selectAll(nodes, d3_document));\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = d3_array(nodes);\n      group.parentNode = null;\n    }\n    return d3_selection([ group ]);\n  };\n  d3_selectionPrototype.on = function(type, listener, capture) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof type !== \"string\") {\n        if (n < 2) listener = false;\n        for (capture in type) this.each(d3_selection_on(capture, type[capture], listener));\n        return this;\n      }\n      if (n < 2) return (n = this.node()[\"__on\" + type]) && n._;\n      capture = false;\n    }\n    return this.each(d3_selection_on(type, listener, capture));\n  };\n  function d3_selection_on(type, listener, capture) {\n    var name = \"__on\" + type, i = type.indexOf(\".\"), wrap = d3_selection_onListener;\n    if (i > 0) type = type.slice(0, i);\n    var filter = d3_selection_onFilters.get(type);\n    if (filter) type = filter, wrap = d3_selection_onFilter;\n    function onRemove() {\n      var l = this[name];\n      if (l) {\n        this.removeEventListener(type, l, l.$);\n        delete this[name];\n      }\n    }\n    function onAdd() {\n      var l = wrap(listener, d3_array(arguments));\n      onRemove.call(this);\n      this.addEventListener(type, this[name] = l, l.$ = capture);\n      l._ = listener;\n    }\n    function removeAll() {\n      var re = new RegExp(\"^__on([^.]+)\" + d3.requote(type) + \"$\"), match;\n      for (var name in this) {\n        if (match = name.match(re)) {\n          var l = this[name];\n          this.removeEventListener(match[1], l, l.$);\n          delete this[name];\n        }\n      }\n    }\n    return i ? listener ? onAdd : onRemove : listener ? d3_noop : removeAll;\n  }\n  var d3_selection_onFilters = d3.map({\n    mouseenter: \"mouseover\",\n    mouseleave: \"mouseout\"\n  });\n  if (d3_document) {\n    d3_selection_onFilters.forEach(function(k) {\n      if (\"on\" + k in d3_document) d3_selection_onFilters.remove(k);\n    });\n  }\n  function d3_selection_onListener(listener, argumentz) {\n    return function(e) {\n      var o = d3.event;\n      d3.event = e;\n      argumentz[0] = this.__data__;\n      try {\n        listener.apply(this, argumentz);\n      } finally {\n        d3.event = o;\n      }\n    };\n  }\n  function d3_selection_onFilter(listener, argumentz) {\n    var l = d3_selection_onListener(listener, argumentz);\n    return function(e) {\n      var target = this, related = e.relatedTarget;\n      if (!related || related !== target && !(related.compareDocumentPosition(target) & 8)) {\n        l.call(target, e);\n      }\n    };\n  }\n  var d3_event_dragSelect, d3_event_dragId = 0;\n  function d3_event_dragSuppress(node) {\n    var name = \".dragsuppress-\" + ++d3_event_dragId, click = \"click\" + name, w = d3.select(d3_window(node)).on(\"touchmove\" + name, d3_eventPreventDefault).on(\"dragstart\" + name, d3_eventPreventDefault).on(\"selectstart\" + name, d3_eventPreventDefault);\n    if (d3_event_dragSelect == null) {\n      d3_event_dragSelect = \"onselectstart\" in node ? false : d3_vendorSymbol(node.style, \"userSelect\");\n    }\n    if (d3_event_dragSelect) {\n      var style = d3_documentElement(node).style, select = style[d3_event_dragSelect];\n      style[d3_event_dragSelect] = \"none\";\n    }\n    return function(suppressClick) {\n      w.on(name, null);\n      if (d3_event_dragSelect) style[d3_event_dragSelect] = select;\n      if (suppressClick) {\n        var off = function() {\n          w.on(click, null);\n        };\n        w.on(click, function() {\n          d3_eventPreventDefault();\n          off();\n        }, true);\n        setTimeout(off, 0);\n      }\n    };\n  }\n  d3.mouse = function(container) {\n    return d3_mousePoint(container, d3_eventSource());\n  };\n  var d3_mouse_bug44083 = this.navigator && /WebKit/.test(this.navigator.userAgent) ? -1 : 0;\n  function d3_mousePoint(container, e) {\n    if (e.changedTouches) e = e.changedTouches[0];\n    var svg = container.ownerSVGElement || container;\n    if (svg.createSVGPoint) {\n      var point = svg.createSVGPoint();\n      if (d3_mouse_bug44083 < 0) {\n        var window = d3_window(container);\n        if (window.scrollX || window.scrollY) {\n          svg = d3.select(\"body\").append(\"svg\").style({\n            position: \"absolute\",\n            top: 0,\n            left: 0,\n            margin: 0,\n            padding: 0,\n            border: \"none\"\n          }, \"important\");\n          var ctm = svg[0][0].getScreenCTM();\n          d3_mouse_bug44083 = !(ctm.f || ctm.e);\n          svg.remove();\n        }\n      }\n      if (d3_mouse_bug44083) point.x = e.pageX, point.y = e.pageY; else point.x = e.clientX, \n      point.y = e.clientY;\n      point = point.matrixTransform(container.getScreenCTM().inverse());\n      return [ point.x, point.y ];\n    }\n    var rect = container.getBoundingClientRect();\n    return [ e.clientX - rect.left - container.clientLeft, e.clientY - rect.top - container.clientTop ];\n  }\n  d3.touch = function(container, touches, identifier) {\n    if (arguments.length < 3) identifier = touches, touches = d3_eventSource().changedTouches;\n    if (touches) for (var i = 0, n = touches.length, touch; i < n; ++i) {\n      if ((touch = touches[i]).identifier === identifier) {\n        return d3_mousePoint(container, touch);\n      }\n    }\n  };\n  d3.behavior.drag = function() {\n    var event = d3_eventDispatch(drag, \"drag\", \"dragstart\", \"dragend\"), origin = null, mousedown = dragstart(d3_noop, d3.mouse, d3_window, \"mousemove\", \"mouseup\"), touchstart = dragstart(d3_behavior_dragTouchId, d3.touch, d3_identity, \"touchmove\", \"touchend\");\n    function drag() {\n      this.on(\"mousedown.drag\", mousedown).on(\"touchstart.drag\", touchstart);\n    }\n    function dragstart(id, position, subject, move, end) {\n      return function() {\n        var that = this, target = d3.event.target.correspondingElement || d3.event.target, parent = that.parentNode, dispatch = event.of(that, arguments), dragged = 0, dragId = id(), dragName = \".drag\" + (dragId == null ? \"\" : \"-\" + dragId), dragOffset, dragSubject = d3.select(subject(target)).on(move + dragName, moved).on(end + dragName, ended), dragRestore = d3_event_dragSuppress(target), position0 = position(parent, dragId);\n        if (origin) {\n          dragOffset = origin.apply(that, arguments);\n          dragOffset = [ dragOffset.x - position0[0], dragOffset.y - position0[1] ];\n        } else {\n          dragOffset = [ 0, 0 ];\n        }\n        dispatch({\n          type: \"dragstart\"\n        });\n        function moved() {\n          var position1 = position(parent, dragId), dx, dy;\n          if (!position1) return;\n          dx = position1[0] - position0[0];\n          dy = position1[1] - position0[1];\n          dragged |= dx | dy;\n          position0 = position1;\n          dispatch({\n            type: \"drag\",\n            x: position1[0] + dragOffset[0],\n            y: position1[1] + dragOffset[1],\n            dx: dx,\n            dy: dy\n          });\n        }\n        function ended() {\n          if (!position(parent, dragId)) return;\n          dragSubject.on(move + dragName, null).on(end + dragName, null);\n          dragRestore(dragged);\n          dispatch({\n            type: \"dragend\"\n          });\n        }\n      };\n    }\n    drag.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return drag;\n    };\n    return d3.rebind(drag, event, \"on\");\n  };\n  function d3_behavior_dragTouchId() {\n    return d3.event.changedTouches[0].identifier;\n  }\n  d3.touches = function(container, touches) {\n    if (arguments.length < 2) touches = d3_eventSource().touches;\n    return touches ? d3_array(touches).map(function(touch) {\n      var point = d3_mousePoint(container, touch);\n      point.identifier = touch.identifier;\n      return point;\n    }) : [];\n  };\n  var ε = 1e-6, ε2 = ε * ε, π = Math.PI, τ = 2 * π, τε = τ - ε, halfπ = π / 2, d3_radians = π / 180, d3_degrees = 180 / π;\n  function d3_sgn(x) {\n    return x > 0 ? 1 : x < 0 ? -1 : 0;\n  }\n  function d3_cross2d(a, b, c) {\n    return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n  }\n  function d3_acos(x) {\n    return x > 1 ? 0 : x < -1 ? π : Math.acos(x);\n  }\n  function d3_asin(x) {\n    return x > 1 ? halfπ : x < -1 ? -halfπ : Math.asin(x);\n  }\n  function d3_sinh(x) {\n    return ((x = Math.exp(x)) - 1 / x) / 2;\n  }\n  function d3_cosh(x) {\n    return ((x = Math.exp(x)) + 1 / x) / 2;\n  }\n  function d3_tanh(x) {\n    return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n  }\n  function d3_haversin(x) {\n    return (x = Math.sin(x / 2)) * x;\n  }\n  var ρ = Math.SQRT2, ρ2 = 2, ρ4 = 4;\n  d3.interpolateZoom = function(p0, p1) {\n    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2], ux1 = p1[0], uy1 = p1[1], w1 = p1[2], dx = ux1 - ux0, dy = uy1 - uy0, d2 = dx * dx + dy * dy, i, S;\n    if (d2 < ε2) {\n      S = Math.log(w1 / w0) / ρ;\n      i = function(t) {\n        return [ ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(ρ * t * S) ];\n      };\n    } else {\n      var d1 = Math.sqrt(d2), b0 = (w1 * w1 - w0 * w0 + ρ4 * d2) / (2 * w0 * ρ2 * d1), b1 = (w1 * w1 - w0 * w0 - ρ4 * d2) / (2 * w1 * ρ2 * d1), r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0), r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n      S = (r1 - r0) / ρ;\n      i = function(t) {\n        var s = t * S, coshr0 = d3_cosh(r0), u = w0 / (ρ2 * d1) * (coshr0 * d3_tanh(ρ * s + r0) - d3_sinh(r0));\n        return [ ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / d3_cosh(ρ * s + r0) ];\n      };\n    }\n    i.duration = S * 1e3;\n    return i;\n  };\n  d3.behavior.zoom = function() {\n    var view = {\n      x: 0,\n      y: 0,\n      k: 1\n    }, translate0, center0, center, size = [ 960, 500 ], scaleExtent = d3_behavior_zoomInfinity, duration = 250, zooming = 0, mousedown = \"mousedown.zoom\", mousemove = \"mousemove.zoom\", mouseup = \"mouseup.zoom\", mousewheelTimer, touchstart = \"touchstart.zoom\", touchtime, event = d3_eventDispatch(zoom, \"zoomstart\", \"zoom\", \"zoomend\"), x0, x1, y0, y1;\n    if (!d3_behavior_zoomWheel) {\n      d3_behavior_zoomWheel = \"onwheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return -d3.event.deltaY * (d3.event.deltaMode ? 120 : 1);\n      }, \"wheel\") : \"onmousewheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return d3.event.wheelDelta;\n      }, \"mousewheel\") : (d3_behavior_zoomDelta = function() {\n        return -d3.event.detail;\n      }, \"MozMousePixelScroll\");\n    }\n    function zoom(g) {\n      g.on(mousedown, mousedowned).on(d3_behavior_zoomWheel + \".zoom\", mousewheeled).on(\"dblclick.zoom\", dblclicked).on(touchstart, touchstarted);\n    }\n    zoom.event = function(g) {\n      g.each(function() {\n        var dispatch = event.of(this, arguments), view1 = view;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.zoom\", function() {\n            view = this.__chart__ || {\n              x: 0,\n              y: 0,\n              k: 1\n            };\n            zoomstarted(dispatch);\n          }).tween(\"zoom:zoom\", function() {\n            var dx = size[0], dy = size[1], cx = center0 ? center0[0] : dx / 2, cy = center0 ? center0[1] : dy / 2, i = d3.interpolateZoom([ (cx - view.x) / view.k, (cy - view.y) / view.k, dx / view.k ], [ (cx - view1.x) / view1.k, (cy - view1.y) / view1.k, dx / view1.k ]);\n            return function(t) {\n              var l = i(t), k = dx / l[2];\n              this.__chart__ = view = {\n                x: cx - l[0] * k,\n                y: cy - l[1] * k,\n                k: k\n              };\n              zoomed(dispatch);\n            };\n          }).each(\"interrupt.zoom\", function() {\n            zoomended(dispatch);\n          }).each(\"end.zoom\", function() {\n            zoomended(dispatch);\n          });\n        } else {\n          this.__chart__ = view;\n          zoomstarted(dispatch);\n          zoomed(dispatch);\n          zoomended(dispatch);\n        }\n      });\n    };\n    zoom.translate = function(_) {\n      if (!arguments.length) return [ view.x, view.y ];\n      view = {\n        x: +_[0],\n        y: +_[1],\n        k: view.k\n      };\n      rescale();\n      return zoom;\n    };\n    zoom.scale = function(_) {\n      if (!arguments.length) return view.k;\n      view = {\n        x: view.x,\n        y: view.y,\n        k: null\n      };\n      scaleTo(+_);\n      rescale();\n      return zoom;\n    };\n    zoom.scaleExtent = function(_) {\n      if (!arguments.length) return scaleExtent;\n      scaleExtent = _ == null ? d3_behavior_zoomInfinity : [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.center = function(_) {\n      if (!arguments.length) return center;\n      center = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.size = function(_) {\n      if (!arguments.length) return size;\n      size = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.duration = function(_) {\n      if (!arguments.length) return duration;\n      duration = +_;\n      return zoom;\n    };\n    zoom.x = function(z) {\n      if (!arguments.length) return x1;\n      x1 = z;\n      x0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    zoom.y = function(z) {\n      if (!arguments.length) return y1;\n      y1 = z;\n      y0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    function location(p) {\n      return [ (p[0] - view.x) / view.k, (p[1] - view.y) / view.k ];\n    }\n    function point(l) {\n      return [ l[0] * view.k + view.x, l[1] * view.k + view.y ];\n    }\n    function scaleTo(s) {\n      view.k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], s));\n    }\n    function translateTo(p, l) {\n      l = point(l);\n      view.x += p[0] - l[0];\n      view.y += p[1] - l[1];\n    }\n    function zoomTo(that, p, l, k) {\n      that.__chart__ = {\n        x: view.x,\n        y: view.y,\n        k: view.k\n      };\n      scaleTo(Math.pow(2, k));\n      translateTo(center0 = p, l);\n      that = d3.select(that);\n      if (duration > 0) that = that.transition().duration(duration);\n      that.call(zoom.event);\n    }\n    function rescale() {\n      if (x1) x1.domain(x0.range().map(function(x) {\n        return (x - view.x) / view.k;\n      }).map(x0.invert));\n      if (y1) y1.domain(y0.range().map(function(y) {\n        return (y - view.y) / view.k;\n      }).map(y0.invert));\n    }\n    function zoomstarted(dispatch) {\n      if (!zooming++) dispatch({\n        type: \"zoomstart\"\n      });\n    }\n    function zoomed(dispatch) {\n      rescale();\n      dispatch({\n        type: \"zoom\",\n        scale: view.k,\n        translate: [ view.x, view.y ]\n      });\n    }\n    function zoomended(dispatch) {\n      if (!--zooming) dispatch({\n        type: \"zoomend\"\n      }), center0 = null;\n    }\n    function mousedowned() {\n      var that = this, dispatch = event.of(that, arguments), dragged = 0, subject = d3.select(d3_window(that)).on(mousemove, moved).on(mouseup, ended), location0 = location(d3.mouse(that)), dragRestore = d3_event_dragSuppress(that);\n      d3_selection_interrupt.call(that);\n      zoomstarted(dispatch);\n      function moved() {\n        dragged = 1;\n        translateTo(d3.mouse(that), location0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        subject.on(mousemove, null).on(mouseup, null);\n        dragRestore(dragged);\n        zoomended(dispatch);\n      }\n    }\n    function touchstarted() {\n      var that = this, dispatch = event.of(that, arguments), locations0 = {}, distance0 = 0, scale0, zoomName = \".zoom-\" + d3.event.changedTouches[0].identifier, touchmove = \"touchmove\" + zoomName, touchend = \"touchend\" + zoomName, targets = [], subject = d3.select(that), dragRestore = d3_event_dragSuppress(that);\n      started();\n      zoomstarted(dispatch);\n      subject.on(mousedown, null).on(touchstart, started);\n      function relocate() {\n        var touches = d3.touches(that);\n        scale0 = view.k;\n        touches.forEach(function(t) {\n          if (t.identifier in locations0) locations0[t.identifier] = location(t);\n        });\n        return touches;\n      }\n      function started() {\n        var target = d3.event.target;\n        d3.select(target).on(touchmove, moved).on(touchend, ended);\n        targets.push(target);\n        var changed = d3.event.changedTouches;\n        for (var i = 0, n = changed.length; i < n; ++i) {\n          locations0[changed[i].identifier] = null;\n        }\n        var touches = relocate(), now = Date.now();\n        if (touches.length === 1) {\n          if (now - touchtime < 500) {\n            var p = touches[0];\n            zoomTo(that, p, locations0[p.identifier], Math.floor(Math.log(view.k) / Math.LN2) + 1);\n            d3_eventPreventDefault();\n          }\n          touchtime = now;\n        } else if (touches.length > 1) {\n          var p = touches[0], q = touches[1], dx = p[0] - q[0], dy = p[1] - q[1];\n          distance0 = dx * dx + dy * dy;\n        }\n      }\n      function moved() {\n        var touches = d3.touches(that), p0, l0, p1, l1;\n        d3_selection_interrupt.call(that);\n        for (var i = 0, n = touches.length; i < n; ++i, l1 = null) {\n          p1 = touches[i];\n          if (l1 = locations0[p1.identifier]) {\n            if (l0) break;\n            p0 = p1, l0 = l1;\n          }\n        }\n        if (l1) {\n          var distance1 = (distance1 = p1[0] - p0[0]) * distance1 + (distance1 = p1[1] - p0[1]) * distance1, scale1 = distance0 && Math.sqrt(distance1 / distance0);\n          p0 = [ (p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2 ];\n          l0 = [ (l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2 ];\n          scaleTo(scale1 * scale0);\n        }\n        touchtime = null;\n        translateTo(p0, l0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        if (d3.event.touches.length) {\n          var changed = d3.event.changedTouches;\n          for (var i = 0, n = changed.length; i < n; ++i) {\n            delete locations0[changed[i].identifier];\n          }\n          for (var identifier in locations0) {\n            return void relocate();\n          }\n        }\n        d3.selectAll(targets).on(zoomName, null);\n        subject.on(mousedown, mousedowned).on(touchstart, touchstarted);\n        dragRestore();\n        zoomended(dispatch);\n      }\n    }\n    function mousewheeled() {\n      var dispatch = event.of(this, arguments);\n      if (mousewheelTimer) clearTimeout(mousewheelTimer); else d3_selection_interrupt.call(this), \n      translate0 = location(center0 = center || d3.mouse(this)), zoomstarted(dispatch);\n      mousewheelTimer = setTimeout(function() {\n        mousewheelTimer = null;\n        zoomended(dispatch);\n      }, 50);\n      d3_eventPreventDefault();\n      scaleTo(Math.pow(2, d3_behavior_zoomDelta() * .002) * view.k);\n      translateTo(center0, translate0);\n      zoomed(dispatch);\n    }\n    function dblclicked() {\n      var p = d3.mouse(this), k = Math.log(view.k) / Math.LN2;\n      zoomTo(this, p, location(p), d3.event.shiftKey ? Math.ceil(k) - 1 : Math.floor(k) + 1);\n    }\n    return d3.rebind(zoom, event, \"on\");\n  };\n  var d3_behavior_zoomInfinity = [ 0, Infinity ], d3_behavior_zoomDelta, d3_behavior_zoomWheel;\n  d3.color = d3_color;\n  function d3_color() {}\n  d3_color.prototype.toString = function() {\n    return this.rgb() + \"\";\n  };\n  d3.hsl = d3_hsl;\n  function d3_hsl(h, s, l) {\n    return this instanceof d3_hsl ? void (this.h = +h, this.s = +s, this.l = +l) : arguments.length < 2 ? h instanceof d3_hsl ? new d3_hsl(h.h, h.s, h.l) : d3_rgb_parse(\"\" + h, d3_rgb_hsl, d3_hsl) : new d3_hsl(h, s, l);\n  }\n  var d3_hslPrototype = d3_hsl.prototype = new d3_color();\n  d3_hslPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, this.l / k);\n  };\n  d3_hslPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, k * this.l);\n  };\n  d3_hslPrototype.rgb = function() {\n    return d3_hsl_rgb(this.h, this.s, this.l);\n  };\n  function d3_hsl_rgb(h, s, l) {\n    var m1, m2;\n    h = isNaN(h) ? 0 : (h %= 360) < 0 ? h + 360 : h;\n    s = isNaN(s) ? 0 : s < 0 ? 0 : s > 1 ? 1 : s;\n    l = l < 0 ? 0 : l > 1 ? 1 : l;\n    m2 = l <= .5 ? l * (1 + s) : l + s - l * s;\n    m1 = 2 * l - m2;\n    function v(h) {\n      if (h > 360) h -= 360; else if (h < 0) h += 360;\n      if (h < 60) return m1 + (m2 - m1) * h / 60;\n      if (h < 180) return m2;\n      if (h < 240) return m1 + (m2 - m1) * (240 - h) / 60;\n      return m1;\n    }\n    function vv(h) {\n      return Math.round(v(h) * 255);\n    }\n    return new d3_rgb(vv(h + 120), vv(h), vv(h - 120));\n  }\n  d3.hcl = d3_hcl;\n  function d3_hcl(h, c, l) {\n    return this instanceof d3_hcl ? void (this.h = +h, this.c = +c, this.l = +l) : arguments.length < 2 ? h instanceof d3_hcl ? new d3_hcl(h.h, h.c, h.l) : h instanceof d3_lab ? d3_lab_hcl(h.l, h.a, h.b) : d3_lab_hcl((h = d3_rgb_lab((h = d3.rgb(h)).r, h.g, h.b)).l, h.a, h.b) : new d3_hcl(h, c, l);\n  }\n  var d3_hclPrototype = d3_hcl.prototype = new d3_color();\n  d3_hclPrototype.brighter = function(k) {\n    return new d3_hcl(this.h, this.c, Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.darker = function(k) {\n    return new d3_hcl(this.h, this.c, Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.rgb = function() {\n    return d3_hcl_lab(this.h, this.c, this.l).rgb();\n  };\n  function d3_hcl_lab(h, c, l) {\n    if (isNaN(h)) h = 0;\n    if (isNaN(c)) c = 0;\n    return new d3_lab(l, Math.cos(h *= d3_radians) * c, Math.sin(h) * c);\n  }\n  d3.lab = d3_lab;\n  function d3_lab(l, a, b) {\n    return this instanceof d3_lab ? void (this.l = +l, this.a = +a, this.b = +b) : arguments.length < 2 ? l instanceof d3_lab ? new d3_lab(l.l, l.a, l.b) : l instanceof d3_hcl ? d3_hcl_lab(l.h, l.c, l.l) : d3_rgb_lab((l = d3_rgb(l)).r, l.g, l.b) : new d3_lab(l, a, b);\n  }\n  var d3_lab_K = 18;\n  var d3_lab_X = .95047, d3_lab_Y = 1, d3_lab_Z = 1.08883;\n  var d3_labPrototype = d3_lab.prototype = new d3_color();\n  d3_labPrototype.brighter = function(k) {\n    return new d3_lab(Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.darker = function(k) {\n    return new d3_lab(Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.rgb = function() {\n    return d3_lab_rgb(this.l, this.a, this.b);\n  };\n  function d3_lab_rgb(l, a, b) {\n    var y = (l + 16) / 116, x = y + a / 500, z = y - b / 200;\n    x = d3_lab_xyz(x) * d3_lab_X;\n    y = d3_lab_xyz(y) * d3_lab_Y;\n    z = d3_lab_xyz(z) * d3_lab_Z;\n    return new d3_rgb(d3_xyz_rgb(3.2404542 * x - 1.5371385 * y - .4985314 * z), d3_xyz_rgb(-.969266 * x + 1.8760108 * y + .041556 * z), d3_xyz_rgb(.0556434 * x - .2040259 * y + 1.0572252 * z));\n  }\n  function d3_lab_hcl(l, a, b) {\n    return l > 0 ? new d3_hcl(Math.atan2(b, a) * d3_degrees, Math.sqrt(a * a + b * b), l) : new d3_hcl(NaN, NaN, l);\n  }\n  function d3_lab_xyz(x) {\n    return x > .206893034 ? x * x * x : (x - 4 / 29) / 7.787037;\n  }\n  function d3_xyz_lab(x) {\n    return x > .008856 ? Math.pow(x, 1 / 3) : 7.787037 * x + 4 / 29;\n  }\n  function d3_xyz_rgb(r) {\n    return Math.round(255 * (r <= .00304 ? 12.92 * r : 1.055 * Math.pow(r, 1 / 2.4) - .055));\n  }\n  d3.rgb = d3_rgb;\n  function d3_rgb(r, g, b) {\n    return this instanceof d3_rgb ? void (this.r = ~~r, this.g = ~~g, this.b = ~~b) : arguments.length < 2 ? r instanceof d3_rgb ? new d3_rgb(r.r, r.g, r.b) : d3_rgb_parse(\"\" + r, d3_rgb, d3_hsl_rgb) : new d3_rgb(r, g, b);\n  }\n  function d3_rgbNumber(value) {\n    return new d3_rgb(value >> 16, value >> 8 & 255, value & 255);\n  }\n  function d3_rgbString(value) {\n    return d3_rgbNumber(value) + \"\";\n  }\n  var d3_rgbPrototype = d3_rgb.prototype = new d3_color();\n  d3_rgbPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    var r = this.r, g = this.g, b = this.b, i = 30;\n    if (!r && !g && !b) return new d3_rgb(i, i, i);\n    if (r && r < i) r = i;\n    if (g && g < i) g = i;\n    if (b && b < i) b = i;\n    return new d3_rgb(Math.min(255, r / k), Math.min(255, g / k), Math.min(255, b / k));\n  };\n  d3_rgbPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_rgb(k * this.r, k * this.g, k * this.b);\n  };\n  d3_rgbPrototype.hsl = function() {\n    return d3_rgb_hsl(this.r, this.g, this.b);\n  };\n  d3_rgbPrototype.toString = function() {\n    return \"#\" + d3_rgb_hex(this.r) + d3_rgb_hex(this.g) + d3_rgb_hex(this.b);\n  };\n  function d3_rgb_hex(v) {\n    return v < 16 ? \"0\" + Math.max(0, v).toString(16) : Math.min(255, v).toString(16);\n  }\n  function d3_rgb_parse(format, rgb, hsl) {\n    var r = 0, g = 0, b = 0, m1, m2, color;\n    m1 = /([a-z]+)\\((.*)\\)/.exec(format = format.toLowerCase());\n    if (m1) {\n      m2 = m1[2].split(\",\");\n      switch (m1[1]) {\n       case \"hsl\":\n        {\n          return hsl(parseFloat(m2[0]), parseFloat(m2[1]) / 100, parseFloat(m2[2]) / 100);\n        }\n\n       case \"rgb\":\n        {\n          return rgb(d3_rgb_parseNumber(m2[0]), d3_rgb_parseNumber(m2[1]), d3_rgb_parseNumber(m2[2]));\n        }\n      }\n    }\n    if (color = d3_rgb_names.get(format)) {\n      return rgb(color.r, color.g, color.b);\n    }\n    if (format != null && format.charAt(0) === \"#\" && !isNaN(color = parseInt(format.slice(1), 16))) {\n      if (format.length === 4) {\n        r = (color & 3840) >> 4;\n        r = r >> 4 | r;\n        g = color & 240;\n        g = g >> 4 | g;\n        b = color & 15;\n        b = b << 4 | b;\n      } else if (format.length === 7) {\n        r = (color & 16711680) >> 16;\n        g = (color & 65280) >> 8;\n        b = color & 255;\n      }\n    }\n    return rgb(r, g, b);\n  }\n  function d3_rgb_hsl(r, g, b) {\n    var min = Math.min(r /= 255, g /= 255, b /= 255), max = Math.max(r, g, b), d = max - min, h, s, l = (max + min) / 2;\n    if (d) {\n      s = l < .5 ? d / (max + min) : d / (2 - max - min);\n      if (r == max) h = (g - b) / d + (g < b ? 6 : 0); else if (g == max) h = (b - r) / d + 2; else h = (r - g) / d + 4;\n      h *= 60;\n    } else {\n      h = NaN;\n      s = l > 0 && l < 1 ? 0 : h;\n    }\n    return new d3_hsl(h, s, l);\n  }\n  function d3_rgb_lab(r, g, b) {\n    r = d3_rgb_xyz(r);\n    g = d3_rgb_xyz(g);\n    b = d3_rgb_xyz(b);\n    var x = d3_xyz_lab((.4124564 * r + .3575761 * g + .1804375 * b) / d3_lab_X), y = d3_xyz_lab((.2126729 * r + .7151522 * g + .072175 * b) / d3_lab_Y), z = d3_xyz_lab((.0193339 * r + .119192 * g + .9503041 * b) / d3_lab_Z);\n    return d3_lab(116 * y - 16, 500 * (x - y), 200 * (y - z));\n  }\n  function d3_rgb_xyz(r) {\n    return (r /= 255) <= .04045 ? r / 12.92 : Math.pow((r + .055) / 1.055, 2.4);\n  }\n  function d3_rgb_parseNumber(c) {\n    var f = parseFloat(c);\n    return c.charAt(c.length - 1) === \"%\" ? Math.round(f * 2.55) : f;\n  }\n  var d3_rgb_names = d3.map({\n    aliceblue: 15792383,\n    antiquewhite: 16444375,\n    aqua: 65535,\n    aquamarine: 8388564,\n    azure: 15794175,\n    beige: 16119260,\n    bisque: 16770244,\n    black: 0,\n    blanchedalmond: 16772045,\n    blue: 255,\n    blueviolet: 9055202,\n    brown: 10824234,\n    burlywood: 14596231,\n    cadetblue: 6266528,\n    chartreuse: 8388352,\n    chocolate: 13789470,\n    coral: 16744272,\n    cornflowerblue: 6591981,\n    cornsilk: 16775388,\n    crimson: 14423100,\n    cyan: 65535,\n    darkblue: 139,\n    darkcyan: 35723,\n    darkgoldenrod: 12092939,\n    darkgray: 11119017,\n    darkgreen: 25600,\n    darkgrey: 11119017,\n    darkkhaki: 12433259,\n    darkmagenta: 9109643,\n    darkolivegreen: 5597999,\n    darkorange: 16747520,\n    darkorchid: 10040012,\n    darkred: 9109504,\n    darksalmon: 15308410,\n    darkseagreen: 9419919,\n    darkslateblue: 4734347,\n    darkslategray: 3100495,\n    darkslategrey: 3100495,\n    darkturquoise: 52945,\n    darkviolet: 9699539,\n    deeppink: 16716947,\n    deepskyblue: 49151,\n    dimgray: 6908265,\n    dimgrey: 6908265,\n    dodgerblue: 2003199,\n    firebrick: 11674146,\n    floralwhite: 16775920,\n    forestgreen: 2263842,\n    fuchsia: 16711935,\n    gainsboro: 14474460,\n    ghostwhite: 16316671,\n    gold: 16766720,\n    goldenrod: 14329120,\n    gray: 8421504,\n    green: 32768,\n    greenyellow: 11403055,\n    grey: 8421504,\n    honeydew: 15794160,\n    hotpink: 16738740,\n    indianred: 13458524,\n    indigo: 4915330,\n    ivory: 16777200,\n    khaki: 15787660,\n    lavender: 15132410,\n    lavenderblush: 16773365,\n    lawngreen: 8190976,\n    lemonchiffon: 16775885,\n    lightblue: 11393254,\n    lightcoral: 15761536,\n    lightcyan: 14745599,\n    lightgoldenrodyellow: 16448210,\n    lightgray: 13882323,\n    lightgreen: 9498256,\n    lightgrey: 13882323,\n    lightpink: 16758465,\n    lightsalmon: 16752762,\n    lightseagreen: 2142890,\n    lightskyblue: 8900346,\n    lightslategray: 7833753,\n    lightslategrey: 7833753,\n    lightsteelblue: 11584734,\n    lightyellow: 16777184,\n    lime: 65280,\n    limegreen: 3329330,\n    linen: 16445670,\n    magenta: 16711935,\n    maroon: 8388608,\n    mediumaquamarine: 6737322,\n    mediumblue: 205,\n    mediumorchid: 12211667,\n    mediumpurple: 9662683,\n    mediumseagreen: 3978097,\n    mediumslateblue: 8087790,\n    mediumspringgreen: 64154,\n    mediumturquoise: 4772300,\n    mediumvioletred: 13047173,\n    midnightblue: 1644912,\n    mintcream: 16121850,\n    mistyrose: 16770273,\n    moccasin: 16770229,\n    navajowhite: 16768685,\n    navy: 128,\n    oldlace: 16643558,\n    olive: 8421376,\n    olivedrab: 7048739,\n    orange: 16753920,\n    orangered: 16729344,\n    orchid: 14315734,\n    palegoldenrod: 15657130,\n    palegreen: 10025880,\n    paleturquoise: 11529966,\n    palevioletred: 14381203,\n    papayawhip: 16773077,\n    peachpuff: 16767673,\n    peru: 13468991,\n    pink: 16761035,\n    plum: 14524637,\n    powderblue: 11591910,\n    purple: 8388736,\n    rebeccapurple: 6697881,\n    red: 16711680,\n    rosybrown: 12357519,\n    royalblue: 4286945,\n    saddlebrown: 9127187,\n    salmon: 16416882,\n    sandybrown: 16032864,\n    seagreen: 3050327,\n    seashell: 16774638,\n    sienna: 10506797,\n    silver: 12632256,\n    skyblue: 8900331,\n    slateblue: 6970061,\n    slategray: 7372944,\n    slategrey: 7372944,\n    snow: 16775930,\n    springgreen: 65407,\n    steelblue: 4620980,\n    tan: 13808780,\n    teal: 32896,\n    thistle: 14204888,\n    tomato: 16737095,\n    turquoise: 4251856,\n    violet: 15631086,\n    wheat: 16113331,\n    white: 16777215,\n    whitesmoke: 16119285,\n    yellow: 16776960,\n    yellowgreen: 10145074\n  });\n  d3_rgb_names.forEach(function(key, value) {\n    d3_rgb_names.set(key, d3_rgbNumber(value));\n  });\n  function d3_functor(v) {\n    return typeof v === \"function\" ? v : function() {\n      return v;\n    };\n  }\n  d3.functor = d3_functor;\n  d3.xhr = d3_xhrType(d3_identity);\n  function d3_xhrType(response) {\n    return function(url, mimeType, callback) {\n      if (arguments.length === 2 && typeof mimeType === \"function\") callback = mimeType, \n      mimeType = null;\n      return d3_xhr(url, mimeType, response, callback);\n    };\n  }\n  function d3_xhr(url, mimeType, response, callback) {\n    var xhr = {}, dispatch = d3.dispatch(\"beforesend\", \"progress\", \"load\", \"error\"), headers = {}, request = new XMLHttpRequest(), responseType = null;\n    if (this.XDomainRequest && !(\"withCredentials\" in request) && /^(http(s)?:)?\\/\\//.test(url)) request = new XDomainRequest();\n    \"onload\" in request ? request.onload = request.onerror = respond : request.onreadystatechange = function() {\n      request.readyState > 3 && respond();\n    };\n    function respond() {\n      var status = request.status, result;\n      if (!status && d3_xhrHasResponse(request) || status >= 200 && status < 300 || status === 304) {\n        try {\n          result = response.call(xhr, request);\n        } catch (e) {\n          dispatch.error.call(xhr, e);\n          return;\n        }\n        dispatch.load.call(xhr, result);\n      } else {\n        dispatch.error.call(xhr, request);\n      }\n    }\n    request.onprogress = function(event) {\n      var o = d3.event;\n      d3.event = event;\n      try {\n        dispatch.progress.call(xhr, request);\n      } finally {\n        d3.event = o;\n      }\n    };\n    xhr.header = function(name, value) {\n      name = (name + \"\").toLowerCase();\n      if (arguments.length < 2) return headers[name];\n      if (value == null) delete headers[name]; else headers[name] = value + \"\";\n      return xhr;\n    };\n    xhr.mimeType = function(value) {\n      if (!arguments.length) return mimeType;\n      mimeType = value == null ? null : value + \"\";\n      return xhr;\n    };\n    xhr.responseType = function(value) {\n      if (!arguments.length) return responseType;\n      responseType = value;\n      return xhr;\n    };\n    xhr.response = function(value) {\n      response = value;\n      return xhr;\n    };\n    [ \"get\", \"post\" ].forEach(function(method) {\n      xhr[method] = function() {\n        return xhr.send.apply(xhr, [ method ].concat(d3_array(arguments)));\n      };\n    });\n    xhr.send = function(method, data, callback) {\n      if (arguments.length === 2 && typeof data === \"function\") callback = data, data = null;\n      request.open(method, url, true);\n      if (mimeType != null && !(\"accept\" in headers)) headers[\"accept\"] = mimeType + \",*/*\";\n      if (request.setRequestHeader) for (var name in headers) request.setRequestHeader(name, headers[name]);\n      if (mimeType != null && request.overrideMimeType) request.overrideMimeType(mimeType);\n      if (responseType != null) request.responseType = responseType;\n      if (callback != null) xhr.on(\"error\", callback).on(\"load\", function(request) {\n        callback(null, request);\n      });\n      dispatch.beforesend.call(xhr, request);\n      request.send(data == null ? null : data);\n      return xhr;\n    };\n    xhr.abort = function() {\n      request.abort();\n      return xhr;\n    };\n    d3.rebind(xhr, dispatch, \"on\");\n    return callback == null ? xhr : xhr.get(d3_xhr_fixCallback(callback));\n  }\n  function d3_xhr_fixCallback(callback) {\n    return callback.length === 1 ? function(error, request) {\n      callback(error == null ? request : null);\n    } : callback;\n  }\n  function d3_xhrHasResponse(request) {\n    var type = request.responseType;\n    return type && type !== \"text\" ? request.response : request.responseText;\n  }\n  d3.dsv = function(delimiter, mimeType) {\n    var reFormat = new RegExp('[\"' + delimiter + \"\\n]\"), delimiterCode = delimiter.charCodeAt(0);\n    function dsv(url, row, callback) {\n      if (arguments.length < 3) callback = row, row = null;\n      var xhr = d3_xhr(url, mimeType, row == null ? response : typedResponse(row), callback);\n      xhr.row = function(_) {\n        return arguments.length ? xhr.response((row = _) == null ? response : typedResponse(_)) : row;\n      };\n      return xhr;\n    }\n    function response(request) {\n      return dsv.parse(request.responseText);\n    }\n    function typedResponse(f) {\n      return function(request) {\n        return dsv.parse(request.responseText, f);\n      };\n    }\n    dsv.parse = function(text, f) {\n      var o;\n      return dsv.parseRows(text, function(row, i) {\n        if (o) return o(row, i - 1);\n        var a = new Function(\"d\", \"return {\" + row.map(function(name, i) {\n          return JSON.stringify(name) + \": d[\" + i + \"]\";\n        }).join(\",\") + \"}\");\n        o = f ? function(row, i) {\n          return f(a(row), i);\n        } : a;\n      });\n    };\n    dsv.parseRows = function(text, f) {\n      var EOL = {}, EOF = {}, rows = [], N = text.length, I = 0, n = 0, t, eol;\n      function token() {\n        if (I >= N) return EOF;\n        if (eol) return eol = false, EOL;\n        var j = I;\n        if (text.charCodeAt(j) === 34) {\n          var i = j;\n          while (i++ < N) {\n            if (text.charCodeAt(i) === 34) {\n              if (text.charCodeAt(i + 1) !== 34) break;\n              ++i;\n            }\n          }\n          I = i + 2;\n          var c = text.charCodeAt(i + 1);\n          if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(i + 2) === 10) ++I;\n          } else if (c === 10) {\n            eol = true;\n          }\n          return text.slice(j + 1, i).replace(/\"\"/g, '\"');\n        }\n        while (I < N) {\n          var c = text.charCodeAt(I++), k = 1;\n          if (c === 10) eol = true; else if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(I) === 10) ++I, ++k;\n          } else if (c !== delimiterCode) continue;\n          return text.slice(j, I - k);\n        }\n        return text.slice(j);\n      }\n      while ((t = token()) !== EOF) {\n        var a = [];\n        while (t !== EOL && t !== EOF) {\n          a.push(t);\n          t = token();\n        }\n        if (f && (a = f(a, n++)) == null) continue;\n        rows.push(a);\n      }\n      return rows;\n    };\n    dsv.format = function(rows) {\n      if (Array.isArray(rows[0])) return dsv.formatRows(rows);\n      var fieldSet = new d3_Set(), fields = [];\n      rows.forEach(function(row) {\n        for (var field in row) {\n          if (!fieldSet.has(field)) {\n            fields.push(fieldSet.add(field));\n          }\n        }\n      });\n      return [ fields.map(formatValue).join(delimiter) ].concat(rows.map(function(row) {\n        return fields.map(function(field) {\n          return formatValue(row[field]);\n        }).join(delimiter);\n      })).join(\"\\n\");\n    };\n    dsv.formatRows = function(rows) {\n      return rows.map(formatRow).join(\"\\n\");\n    };\n    function formatRow(row) {\n      return row.map(formatValue).join(delimiter);\n    }\n    function formatValue(text) {\n      return reFormat.test(text) ? '\"' + text.replace(/\\\"/g, '\"\"') + '\"' : text;\n    }\n    return dsv;\n  };\n  d3.csv = d3.dsv(\",\", \"text/csv\");\n  d3.tsv = d3.dsv(\"\t\", \"text/tab-separated-values\");\n  var d3_timer_queueHead, d3_timer_queueTail, d3_timer_interval, d3_timer_timeout, d3_timer_frame = this[d3_vendorSymbol(this, \"requestAnimationFrame\")] || function(callback) {\n    setTimeout(callback, 17);\n  };\n  d3.timer = function() {\n    d3_timer.apply(this, arguments);\n  };\n  function d3_timer(callback, delay, then) {\n    var n = arguments.length;\n    if (n < 2) delay = 0;\n    if (n < 3) then = Date.now();\n    var time = then + delay, timer = {\n      c: callback,\n      t: time,\n      n: null\n    };\n    if (d3_timer_queueTail) d3_timer_queueTail.n = timer; else d3_timer_queueHead = timer;\n    d3_timer_queueTail = timer;\n    if (!d3_timer_interval) {\n      d3_timer_timeout = clearTimeout(d3_timer_timeout);\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n    return timer;\n  }\n  function d3_timer_step() {\n    var now = d3_timer_mark(), delay = d3_timer_sweep() - now;\n    if (delay > 24) {\n      if (isFinite(delay)) {\n        clearTimeout(d3_timer_timeout);\n        d3_timer_timeout = setTimeout(d3_timer_step, delay);\n      }\n      d3_timer_interval = 0;\n    } else {\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n  }\n  d3.timer.flush = function() {\n    d3_timer_mark();\n    d3_timer_sweep();\n  };\n  function d3_timer_mark() {\n    var now = Date.now(), timer = d3_timer_queueHead;\n    while (timer) {\n      if (now >= timer.t && timer.c(now - timer.t)) timer.c = null;\n      timer = timer.n;\n    }\n    return now;\n  }\n  function d3_timer_sweep() {\n    var t0, t1 = d3_timer_queueHead, time = Infinity;\n    while (t1) {\n      if (t1.c) {\n        if (t1.t < time) time = t1.t;\n        t1 = (t0 = t1).n;\n      } else {\n        t1 = t0 ? t0.n = t1.n : d3_timer_queueHead = t1.n;\n      }\n    }\n    d3_timer_queueTail = t0;\n    return time;\n  }\n  function d3_format_precision(x, p) {\n    return p - (x ? Math.ceil(Math.log(x) / Math.LN10) : 1);\n  }\n  d3.round = function(x, n) {\n    return n ? Math.round(x * (n = Math.pow(10, n))) / n : Math.round(x);\n  };\n  var d3_formatPrefixes = [ \"y\", \"z\", \"a\", \"f\", \"p\", \"n\", \"µ\", \"m\", \"\", \"k\", \"M\", \"G\", \"T\", \"P\", \"E\", \"Z\", \"Y\" ].map(d3_formatPrefix);\n  d3.formatPrefix = function(value, precision) {\n    var i = 0;\n    if (value = +value) {\n      if (value < 0) value *= -1;\n      if (precision) value = d3.round(value, d3_format_precision(value, precision));\n      i = 1 + Math.floor(1e-12 + Math.log(value) / Math.LN10);\n      i = Math.max(-24, Math.min(24, Math.floor((i - 1) / 3) * 3));\n    }\n    return d3_formatPrefixes[8 + i / 3];\n  };\n  function d3_formatPrefix(d, i) {\n    var k = Math.pow(10, abs(8 - i) * 3);\n    return {\n      scale: i > 8 ? function(d) {\n        return d / k;\n      } : function(d) {\n        return d * k;\n      },\n      symbol: d\n    };\n  }\n  function d3_locale_numberFormat(locale) {\n    var locale_decimal = locale.decimal, locale_thousands = locale.thousands, locale_grouping = locale.grouping, locale_currency = locale.currency, formatGroup = locale_grouping && locale_thousands ? function(value, width) {\n      var i = value.length, t = [], j = 0, g = locale_grouping[0], length = 0;\n      while (i > 0 && g > 0) {\n        if (length + g + 1 > width) g = Math.max(1, width - length);\n        t.push(value.substring(i -= g, i + g));\n        if ((length += g + 1) > width) break;\n        g = locale_grouping[j = (j + 1) % locale_grouping.length];\n      }\n      return t.reverse().join(locale_thousands);\n    } : d3_identity;\n    return function(specifier) {\n      var match = d3_format_re.exec(specifier), fill = match[1] || \" \", align = match[2] || \">\", sign = match[3] || \"-\", symbol = match[4] || \"\", zfill = match[5], width = +match[6], comma = match[7], precision = match[8], type = match[9], scale = 1, prefix = \"\", suffix = \"\", integer = false, exponent = true;\n      if (precision) precision = +precision.substring(1);\n      if (zfill || fill === \"0\" && align === \"=\") {\n        zfill = fill = \"0\";\n        align = \"=\";\n      }\n      switch (type) {\n       case \"n\":\n        comma = true;\n        type = \"g\";\n        break;\n\n       case \"%\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"f\";\n        break;\n\n       case \"p\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"r\";\n        break;\n\n       case \"b\":\n       case \"o\":\n       case \"x\":\n       case \"X\":\n        if (symbol === \"#\") prefix = \"0\" + type.toLowerCase();\n\n       case \"c\":\n        exponent = false;\n\n       case \"d\":\n        integer = true;\n        precision = 0;\n        break;\n\n       case \"s\":\n        scale = -1;\n        type = \"r\";\n        break;\n      }\n      if (symbol === \"$\") prefix = locale_currency[0], suffix = locale_currency[1];\n      if (type == \"r\" && !precision) type = \"g\";\n      if (precision != null) {\n        if (type == \"g\") precision = Math.max(1, Math.min(21, precision)); else if (type == \"e\" || type == \"f\") precision = Math.max(0, Math.min(20, precision));\n      }\n      type = d3_format_types.get(type) || d3_format_typeDefault;\n      var zcomma = zfill && comma;\n      return function(value) {\n        var fullSuffix = suffix;\n        if (integer && value % 1) return \"\";\n        var negative = value < 0 || value === 0 && 1 / value < 0 ? (value = -value, \"-\") : sign === \"-\" ? \"\" : sign;\n        if (scale < 0) {\n          var unit = d3.formatPrefix(value, precision);\n          value = unit.scale(value);\n          fullSuffix = unit.symbol + suffix;\n        } else {\n          value *= scale;\n        }\n        value = type(value, precision);\n        var i = value.lastIndexOf(\".\"), before, after;\n        if (i < 0) {\n          var j = exponent ? value.lastIndexOf(\"e\") : -1;\n          if (j < 0) before = value, after = \"\"; else before = value.substring(0, j), after = value.substring(j);\n        } else {\n          before = value.substring(0, i);\n          after = locale_decimal + value.substring(i + 1);\n        }\n        if (!zfill && comma) before = formatGroup(before, Infinity);\n        var length = prefix.length + before.length + after.length + (zcomma ? 0 : negative.length), padding = length < width ? new Array(length = width - length + 1).join(fill) : \"\";\n        if (zcomma) before = formatGroup(padding + before, padding.length ? width - after.length : Infinity);\n        negative += prefix;\n        value = before + after;\n        return (align === \"<\" ? negative + value + padding : align === \">\" ? padding + negative + value : align === \"^\" ? padding.substring(0, length >>= 1) + negative + value + padding.substring(length) : negative + (zcomma ? value : padding + value)) + fullSuffix;\n      };\n    };\n  }\n  var d3_format_re = /(?:([^{])?([<>=^]))?([+\\- ])?([$#])?(0)?(\\d+)?(,)?(\\.-?\\d+)?([a-z%])?/i;\n  var d3_format_types = d3.map({\n    b: function(x) {\n      return x.toString(2);\n    },\n    c: function(x) {\n      return String.fromCharCode(x);\n    },\n    o: function(x) {\n      return x.toString(8);\n    },\n    x: function(x) {\n      return x.toString(16);\n    },\n    X: function(x) {\n      return x.toString(16).toUpperCase();\n    },\n    g: function(x, p) {\n      return x.toPrecision(p);\n    },\n    e: function(x, p) {\n      return x.toExponential(p);\n    },\n    f: function(x, p) {\n      return x.toFixed(p);\n    },\n    r: function(x, p) {\n      return (x = d3.round(x, d3_format_precision(x, p))).toFixed(Math.max(0, Math.min(20, d3_format_precision(x * (1 + 1e-15), p))));\n    }\n  });\n  function d3_format_typeDefault(x) {\n    return x + \"\";\n  }\n  var d3_time = d3.time = {}, d3_date = Date;\n  function d3_date_utc() {\n    this._ = new Date(arguments.length > 1 ? Date.UTC.apply(this, arguments) : arguments[0]);\n  }\n  d3_date_utc.prototype = {\n    getDate: function() {\n      return this._.getUTCDate();\n    },\n    getDay: function() {\n      return this._.getUTCDay();\n    },\n    getFullYear: function() {\n      return this._.getUTCFullYear();\n    },\n    getHours: function() {\n      return this._.getUTCHours();\n    },\n    getMilliseconds: function() {\n      return this._.getUTCMilliseconds();\n    },\n    getMinutes: function() {\n      return this._.getUTCMinutes();\n    },\n    getMonth: function() {\n      return this._.getUTCMonth();\n    },\n    getSeconds: function() {\n      return this._.getUTCSeconds();\n    },\n    getTime: function() {\n      return this._.getTime();\n    },\n    getTimezoneOffset: function() {\n      return 0;\n    },\n    valueOf: function() {\n      return this._.valueOf();\n    },\n    setDate: function() {\n      d3_time_prototype.setUTCDate.apply(this._, arguments);\n    },\n    setDay: function() {\n      d3_time_prototype.setUTCDay.apply(this._, arguments);\n    },\n    setFullYear: function() {\n      d3_time_prototype.setUTCFullYear.apply(this._, arguments);\n    },\n    setHours: function() {\n      d3_time_prototype.setUTCHours.apply(this._, arguments);\n    },\n    setMilliseconds: function() {\n      d3_time_prototype.setUTCMilliseconds.apply(this._, arguments);\n    },\n    setMinutes: function() {\n      d3_time_prototype.setUTCMinutes.apply(this._, arguments);\n    },\n    setMonth: function() {\n      d3_time_prototype.setUTCMonth.apply(this._, arguments);\n    },\n    setSeconds: function() {\n      d3_time_prototype.setUTCSeconds.apply(this._, arguments);\n    },\n    setTime: function() {\n      d3_time_prototype.setTime.apply(this._, arguments);\n    }\n  };\n  var d3_time_prototype = Date.prototype;\n  function d3_time_interval(local, step, number) {\n    function round(date) {\n      var d0 = local(date), d1 = offset(d0, 1);\n      return date - d0 < d1 - date ? d0 : d1;\n    }\n    function ceil(date) {\n      step(date = local(new d3_date(date - 1)), 1);\n      return date;\n    }\n    function offset(date, k) {\n      step(date = new d3_date(+date), k);\n      return date;\n    }\n    function range(t0, t1, dt) {\n      var time = ceil(t0), times = [];\n      if (dt > 1) {\n        while (time < t1) {\n          if (!(number(time) % dt)) times.push(new Date(+time));\n          step(time, 1);\n        }\n      } else {\n        while (time < t1) times.push(new Date(+time)), step(time, 1);\n      }\n      return times;\n    }\n    function range_utc(t0, t1, dt) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = t0;\n        return range(utc, t1, dt);\n      } finally {\n        d3_date = Date;\n      }\n    }\n    local.floor = local;\n    local.round = round;\n    local.ceil = ceil;\n    local.offset = offset;\n    local.range = range;\n    var utc = local.utc = d3_time_interval_utc(local);\n    utc.floor = utc;\n    utc.round = d3_time_interval_utc(round);\n    utc.ceil = d3_time_interval_utc(ceil);\n    utc.offset = d3_time_interval_utc(offset);\n    utc.range = range_utc;\n    return local;\n  }\n  function d3_time_interval_utc(method) {\n    return function(date, k) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = date;\n        return method(utc, k)._;\n      } finally {\n        d3_date = Date;\n      }\n    };\n  }\n  d3_time.year = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setMonth(0, 1);\n    return date;\n  }, function(date, offset) {\n    date.setFullYear(date.getFullYear() + offset);\n  }, function(date) {\n    return date.getFullYear();\n  });\n  d3_time.years = d3_time.year.range;\n  d3_time.years.utc = d3_time.year.utc.range;\n  d3_time.day = d3_time_interval(function(date) {\n    var day = new d3_date(2e3, 0);\n    day.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n    return day;\n  }, function(date, offset) {\n    date.setDate(date.getDate() + offset);\n  }, function(date) {\n    return date.getDate() - 1;\n  });\n  d3_time.days = d3_time.day.range;\n  d3_time.days.utc = d3_time.day.utc.range;\n  d3_time.dayOfYear = function(date) {\n    var year = d3_time.year(date);\n    return Math.floor((date - year - (date.getTimezoneOffset() - year.getTimezoneOffset()) * 6e4) / 864e5);\n  };\n  [ \"sunday\", \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\" ].forEach(function(day, i) {\n    i = 7 - i;\n    var interval = d3_time[day] = d3_time_interval(function(date) {\n      (date = d3_time.day(date)).setDate(date.getDate() - (date.getDay() + i) % 7);\n      return date;\n    }, function(date, offset) {\n      date.setDate(date.getDate() + Math.floor(offset) * 7);\n    }, function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7) - (day !== i);\n    });\n    d3_time[day + \"s\"] = interval.range;\n    d3_time[day + \"s\"].utc = interval.utc.range;\n    d3_time[day + \"OfYear\"] = function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7);\n    };\n  });\n  d3_time.week = d3_time.sunday;\n  d3_time.weeks = d3_time.sunday.range;\n  d3_time.weeks.utc = d3_time.sunday.utc.range;\n  d3_time.weekOfYear = d3_time.sundayOfYear;\n  function d3_locale_timeFormat(locale) {\n    var locale_dateTime = locale.dateTime, locale_date = locale.date, locale_time = locale.time, locale_periods = locale.periods, locale_days = locale.days, locale_shortDays = locale.shortDays, locale_months = locale.months, locale_shortMonths = locale.shortMonths;\n    function d3_time_format(template) {\n      var n = template.length;\n      function format(date) {\n        var string = [], i = -1, j = 0, c, p, f;\n        while (++i < n) {\n          if (template.charCodeAt(i) === 37) {\n            string.push(template.slice(j, i));\n            if ((p = d3_time_formatPads[c = template.charAt(++i)]) != null) c = template.charAt(++i);\n            if (f = d3_time_formats[c]) c = f(date, p == null ? c === \"e\" ? \" \" : \"0\" : p);\n            string.push(c);\n            j = i + 1;\n          }\n        }\n        string.push(template.slice(j, i));\n        return string.join(\"\");\n      }\n      format.parse = function(string) {\n        var d = {\n          y: 1900,\n          m: 0,\n          d: 1,\n          H: 0,\n          M: 0,\n          S: 0,\n          L: 0,\n          Z: null\n        }, i = d3_time_parse(d, template, string, 0);\n        if (i != string.length) return null;\n        if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n        var localZ = d.Z != null && d3_date !== d3_date_utc, date = new (localZ ? d3_date_utc : d3_date)();\n        if (\"j\" in d) date.setFullYear(d.y, 0, d.j); else if (\"W\" in d || \"U\" in d) {\n          if (!(\"w\" in d)) d.w = \"W\" in d ? 1 : 0;\n          date.setFullYear(d.y, 0, 1);\n          date.setFullYear(d.y, 0, \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (date.getDay() + 5) % 7 : d.w + d.U * 7 - (date.getDay() + 6) % 7);\n        } else date.setFullYear(d.y, d.m, d.d);\n        date.setHours(d.H + (d.Z / 100 | 0), d.M + d.Z % 100, d.S, d.L);\n        return localZ ? date._ : date;\n      };\n      format.toString = function() {\n        return template;\n      };\n      return format;\n    }\n    function d3_time_parse(date, template, string, j) {\n      var c, p, t, i = 0, n = template.length, m = string.length;\n      while (i < n) {\n        if (j >= m) return -1;\n        c = template.charCodeAt(i++);\n        if (c === 37) {\n          t = template.charAt(i++);\n          p = d3_time_parsers[t in d3_time_formatPads ? template.charAt(i++) : t];\n          if (!p || (j = p(date, string, j)) < 0) return -1;\n        } else if (c != string.charCodeAt(j++)) {\n          return -1;\n        }\n      }\n      return j;\n    }\n    d3_time_format.utc = function(template) {\n      var local = d3_time_format(template);\n      function format(date) {\n        try {\n          d3_date = d3_date_utc;\n          var utc = new d3_date();\n          utc._ = date;\n          return local(utc);\n        } finally {\n          d3_date = Date;\n        }\n      }\n      format.parse = function(string) {\n        try {\n          d3_date = d3_date_utc;\n          var date = local.parse(string);\n          return date && date._;\n        } finally {\n          d3_date = Date;\n        }\n      };\n      format.toString = local.toString;\n      return format;\n    };\n    d3_time_format.multi = d3_time_format.utc.multi = d3_time_formatMulti;\n    var d3_time_periodLookup = d3.map(), d3_time_dayRe = d3_time_formatRe(locale_days), d3_time_dayLookup = d3_time_formatLookup(locale_days), d3_time_dayAbbrevRe = d3_time_formatRe(locale_shortDays), d3_time_dayAbbrevLookup = d3_time_formatLookup(locale_shortDays), d3_time_monthRe = d3_time_formatRe(locale_months), d3_time_monthLookup = d3_time_formatLookup(locale_months), d3_time_monthAbbrevRe = d3_time_formatRe(locale_shortMonths), d3_time_monthAbbrevLookup = d3_time_formatLookup(locale_shortMonths);\n    locale_periods.forEach(function(p, i) {\n      d3_time_periodLookup.set(p.toLowerCase(), i);\n    });\n    var d3_time_formats = {\n      a: function(d) {\n        return locale_shortDays[d.getDay()];\n      },\n      A: function(d) {\n        return locale_days[d.getDay()];\n      },\n      b: function(d) {\n        return locale_shortMonths[d.getMonth()];\n      },\n      B: function(d) {\n        return locale_months[d.getMonth()];\n      },\n      c: d3_time_format(locale_dateTime),\n      d: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      e: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      H: function(d, p) {\n        return d3_time_formatPad(d.getHours(), p, 2);\n      },\n      I: function(d, p) {\n        return d3_time_formatPad(d.getHours() % 12 || 12, p, 2);\n      },\n      j: function(d, p) {\n        return d3_time_formatPad(1 + d3_time.dayOfYear(d), p, 3);\n      },\n      L: function(d, p) {\n        return d3_time_formatPad(d.getMilliseconds(), p, 3);\n      },\n      m: function(d, p) {\n        return d3_time_formatPad(d.getMonth() + 1, p, 2);\n      },\n      M: function(d, p) {\n        return d3_time_formatPad(d.getMinutes(), p, 2);\n      },\n      p: function(d) {\n        return locale_periods[+(d.getHours() >= 12)];\n      },\n      S: function(d, p) {\n        return d3_time_formatPad(d.getSeconds(), p, 2);\n      },\n      U: function(d, p) {\n        return d3_time_formatPad(d3_time.sundayOfYear(d), p, 2);\n      },\n      w: function(d) {\n        return d.getDay();\n      },\n      W: function(d, p) {\n        return d3_time_formatPad(d3_time.mondayOfYear(d), p, 2);\n      },\n      x: d3_time_format(locale_date),\n      X: d3_time_format(locale_time),\n      y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 100, p, 2);\n      },\n      Y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 1e4, p, 4);\n      },\n      Z: d3_time_zone,\n      \"%\": function() {\n        return \"%\";\n      }\n    };\n    var d3_time_parsers = {\n      a: d3_time_parseWeekdayAbbrev,\n      A: d3_time_parseWeekday,\n      b: d3_time_parseMonthAbbrev,\n      B: d3_time_parseMonth,\n      c: d3_time_parseLocaleFull,\n      d: d3_time_parseDay,\n      e: d3_time_parseDay,\n      H: d3_time_parseHour24,\n      I: d3_time_parseHour24,\n      j: d3_time_parseDayOfYear,\n      L: d3_time_parseMilliseconds,\n      m: d3_time_parseMonthNumber,\n      M: d3_time_parseMinutes,\n      p: d3_time_parseAmPm,\n      S: d3_time_parseSeconds,\n      U: d3_time_parseWeekNumberSunday,\n      w: d3_time_parseWeekdayNumber,\n      W: d3_time_parseWeekNumberMonday,\n      x: d3_time_parseLocaleDate,\n      X: d3_time_parseLocaleTime,\n      y: d3_time_parseYear,\n      Y: d3_time_parseFullYear,\n      Z: d3_time_parseZone,\n      \"%\": d3_time_parseLiteralPercent\n    };\n    function d3_time_parseWeekdayAbbrev(date, string, i) {\n      d3_time_dayAbbrevRe.lastIndex = 0;\n      var n = d3_time_dayAbbrevRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseWeekday(date, string, i) {\n      d3_time_dayRe.lastIndex = 0;\n      var n = d3_time_dayRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonthAbbrev(date, string, i) {\n      d3_time_monthAbbrevRe.lastIndex = 0;\n      var n = d3_time_monthAbbrevRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonth(date, string, i) {\n      d3_time_monthRe.lastIndex = 0;\n      var n = d3_time_monthRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseLocaleFull(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.c.toString(), string, i);\n    }\n    function d3_time_parseLocaleDate(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.x.toString(), string, i);\n    }\n    function d3_time_parseLocaleTime(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.X.toString(), string, i);\n    }\n    function d3_time_parseAmPm(date, string, i) {\n      var n = d3_time_periodLookup.get(string.slice(i, i += 2).toLowerCase());\n      return n == null ? -1 : (date.p = n, i);\n    }\n    return d3_time_format;\n  }\n  var d3_time_formatPads = {\n    \"-\": \"\",\n    _: \" \",\n    \"0\": \"0\"\n  }, d3_time_numberRe = /^\\s*\\d+/, d3_time_percentRe = /^%/;\n  function d3_time_formatPad(value, fill, width) {\n    var sign = value < 0 ? \"-\" : \"\", string = (sign ? -value : value) + \"\", length = string.length;\n    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n  }\n  function d3_time_formatRe(names) {\n    return new RegExp(\"^(?:\" + names.map(d3.requote).join(\"|\") + \")\", \"i\");\n  }\n  function d3_time_formatLookup(names) {\n    var map = new d3_Map(), i = -1, n = names.length;\n    while (++i < n) map.set(names[i].toLowerCase(), i);\n    return map;\n  }\n  function d3_time_parseWeekdayNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 1));\n    return n ? (date.w = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberSunday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.U = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberMonday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.W = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseFullYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 4));\n    return n ? (date.y = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.y = d3_time_expandYear(+n[0]), i + n[0].length) : -1;\n  }\n  function d3_time_parseZone(date, string, i) {\n    return /^[+-]\\d{4}$/.test(string = string.slice(i, i + 5)) ? (date.Z = -string, \n    i + 5) : -1;\n  }\n  function d3_time_expandYear(d) {\n    return d + (d > 68 ? 1900 : 2e3);\n  }\n  function d3_time_parseMonthNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.m = n[0] - 1, i + n[0].length) : -1;\n  }\n  function d3_time_parseDay(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.d = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseDayOfYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.j = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseHour24(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.H = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMinutes(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.M = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseSeconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.S = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMilliseconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.L = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_zone(d) {\n    var z = d.getTimezoneOffset(), zs = z > 0 ? \"-\" : \"+\", zh = abs(z) / 60 | 0, zm = abs(z) % 60;\n    return zs + d3_time_formatPad(zh, \"0\", 2) + d3_time_formatPad(zm, \"0\", 2);\n  }\n  function d3_time_parseLiteralPercent(date, string, i) {\n    d3_time_percentRe.lastIndex = 0;\n    var n = d3_time_percentRe.exec(string.slice(i, i + 1));\n    return n ? i + n[0].length : -1;\n  }\n  function d3_time_formatMulti(formats) {\n    var n = formats.length, i = -1;\n    while (++i < n) formats[i][0] = this(formats[i][0]);\n    return function(date) {\n      var i = 0, f = formats[i];\n      while (!f[1](date)) f = formats[++i];\n      return f[0](date);\n    };\n  }\n  d3.locale = function(locale) {\n    return {\n      numberFormat: d3_locale_numberFormat(locale),\n      timeFormat: d3_locale_timeFormat(locale)\n    };\n  };\n  var d3_locale_enUS = d3.locale({\n    decimal: \".\",\n    thousands: \",\",\n    grouping: [ 3 ],\n    currency: [ \"$\", \"\" ],\n    dateTime: \"%a %b %e %X %Y\",\n    date: \"%m/%d/%Y\",\n    time: \"%H:%M:%S\",\n    periods: [ \"AM\", \"PM\" ],\n    days: [ \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\" ],\n    shortDays: [ \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\" ],\n    months: [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ],\n    shortMonths: [ \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\" ]\n  });\n  d3.format = d3_locale_enUS.numberFormat;\n  d3.geo = {};\n  function d3_adder() {}\n  d3_adder.prototype = {\n    s: 0,\n    t: 0,\n    add: function(y) {\n      d3_adderSum(y, this.t, d3_adderTemp);\n      d3_adderSum(d3_adderTemp.s, this.s, this);\n      if (this.s) this.t += d3_adderTemp.t; else this.s = d3_adderTemp.t;\n    },\n    reset: function() {\n      this.s = this.t = 0;\n    },\n    valueOf: function() {\n      return this.s;\n    }\n  };\n  var d3_adderTemp = new d3_adder();\n  function d3_adderSum(a, b, o) {\n    var x = o.s = a + b, bv = x - a, av = x - bv;\n    o.t = a - av + (b - bv);\n  }\n  d3.geo.stream = function(object, listener) {\n    if (object && d3_geo_streamObjectType.hasOwnProperty(object.type)) {\n      d3_geo_streamObjectType[object.type](object, listener);\n    } else {\n      d3_geo_streamGeometry(object, listener);\n    }\n  };\n  function d3_geo_streamGeometry(geometry, listener) {\n    if (geometry && d3_geo_streamGeometryType.hasOwnProperty(geometry.type)) {\n      d3_geo_streamGeometryType[geometry.type](geometry, listener);\n    }\n  }\n  var d3_geo_streamObjectType = {\n    Feature: function(feature, listener) {\n      d3_geo_streamGeometry(feature.geometry, listener);\n    },\n    FeatureCollection: function(object, listener) {\n      var features = object.features, i = -1, n = features.length;\n      while (++i < n) d3_geo_streamGeometry(features[i].geometry, listener);\n    }\n  };\n  var d3_geo_streamGeometryType = {\n    Sphere: function(object, listener) {\n      listener.sphere();\n    },\n    Point: function(object, listener) {\n      object = object.coordinates;\n      listener.point(object[0], object[1], object[2]);\n    },\n    MultiPoint: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) object = coordinates[i], listener.point(object[0], object[1], object[2]);\n    },\n    LineString: function(object, listener) {\n      d3_geo_streamLine(object.coordinates, listener, 0);\n    },\n    MultiLineString: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamLine(coordinates[i], listener, 0);\n    },\n    Polygon: function(object, listener) {\n      d3_geo_streamPolygon(object.coordinates, listener);\n    },\n    MultiPolygon: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamPolygon(coordinates[i], listener);\n    },\n    GeometryCollection: function(object, listener) {\n      var geometries = object.geometries, i = -1, n = geometries.length;\n      while (++i < n) d3_geo_streamGeometry(geometries[i], listener);\n    }\n  };\n  function d3_geo_streamLine(coordinates, listener, closed) {\n    var i = -1, n = coordinates.length - closed, coordinate;\n    listener.lineStart();\n    while (++i < n) coordinate = coordinates[i], listener.point(coordinate[0], coordinate[1], coordinate[2]);\n    listener.lineEnd();\n  }\n  function d3_geo_streamPolygon(coordinates, listener) {\n    var i = -1, n = coordinates.length;\n    listener.polygonStart();\n    while (++i < n) d3_geo_streamLine(coordinates[i], listener, 1);\n    listener.polygonEnd();\n  }\n  d3.geo.area = function(object) {\n    d3_geo_areaSum = 0;\n    d3.geo.stream(object, d3_geo_area);\n    return d3_geo_areaSum;\n  };\n  var d3_geo_areaSum, d3_geo_areaRingSum = new d3_adder();\n  var d3_geo_area = {\n    sphere: function() {\n      d3_geo_areaSum += 4 * π;\n    },\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_areaRingSum.reset();\n      d3_geo_area.lineStart = d3_geo_areaRingStart;\n    },\n    polygonEnd: function() {\n      var area = 2 * d3_geo_areaRingSum;\n      d3_geo_areaSum += area < 0 ? 4 * π + area : area;\n      d3_geo_area.lineStart = d3_geo_area.lineEnd = d3_geo_area.point = d3_noop;\n    }\n  };\n  function d3_geo_areaRingStart() {\n    var λ00, φ00, λ0, cosφ0, sinφ0;\n    d3_geo_area.point = function(λ, φ) {\n      d3_geo_area.point = nextPoint;\n      λ0 = (λ00 = λ) * d3_radians, cosφ0 = Math.cos(φ = (φ00 = φ) * d3_radians / 2 + π / 4), \n      sinφ0 = Math.sin(φ);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      φ = φ * d3_radians / 2 + π / 4;\n      var dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, cosφ = Math.cos(φ), sinφ = Math.sin(φ), k = sinφ0 * sinφ, u = cosφ0 * cosφ + k * Math.cos(adλ), v = k * sdλ * Math.sin(adλ);\n      d3_geo_areaRingSum.add(Math.atan2(v, u));\n      λ0 = λ, cosφ0 = cosφ, sinφ0 = sinφ;\n    }\n    d3_geo_area.lineEnd = function() {\n      nextPoint(λ00, φ00);\n    };\n  }\n  function d3_geo_cartesian(spherical) {\n    var λ = spherical[0], φ = spherical[1], cosφ = Math.cos(φ);\n    return [ cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ) ];\n  }\n  function d3_geo_cartesianDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n  }\n  function d3_geo_cartesianCross(a, b) {\n    return [ a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0] ];\n  }\n  function d3_geo_cartesianAdd(a, b) {\n    a[0] += b[0];\n    a[1] += b[1];\n    a[2] += b[2];\n  }\n  function d3_geo_cartesianScale(vector, k) {\n    return [ vector[0] * k, vector[1] * k, vector[2] * k ];\n  }\n  function d3_geo_cartesianNormalize(d) {\n    var l = Math.sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n    d[0] /= l;\n    d[1] /= l;\n    d[2] /= l;\n  }\n  function d3_geo_spherical(cartesian) {\n    return [ Math.atan2(cartesian[1], cartesian[0]), d3_asin(cartesian[2]) ];\n  }\n  function d3_geo_sphericalEqual(a, b) {\n    return abs(a[0] - b[0]) < ε && abs(a[1] - b[1]) < ε;\n  }\n  d3.geo.bounds = function() {\n    var λ0, φ0, λ1, φ1, λ_, λ__, φ__, p0, dλSum, ranges, range;\n    var bound = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        bound.point = ringPoint;\n        bound.lineStart = ringStart;\n        bound.lineEnd = ringEnd;\n        dλSum = 0;\n        d3_geo_area.polygonStart();\n      },\n      polygonEnd: function() {\n        d3_geo_area.polygonEnd();\n        bound.point = point;\n        bound.lineStart = lineStart;\n        bound.lineEnd = lineEnd;\n        if (d3_geo_areaRingSum < 0) λ0 = -(λ1 = 180), φ0 = -(φ1 = 90); else if (dλSum > ε) φ1 = 90; else if (dλSum < -ε) φ0 = -90;\n        range[0] = λ0, range[1] = λ1;\n      }\n    };\n    function point(λ, φ) {\n      ranges.push(range = [ λ0 = λ, λ1 = λ ]);\n      if (φ < φ0) φ0 = φ;\n      if (φ > φ1) φ1 = φ;\n    }\n    function linePoint(λ, φ) {\n      var p = d3_geo_cartesian([ λ * d3_radians, φ * d3_radians ]);\n      if (p0) {\n        var normal = d3_geo_cartesianCross(p0, p), equatorial = [ normal[1], -normal[0], 0 ], inflection = d3_geo_cartesianCross(equatorial, normal);\n        d3_geo_cartesianNormalize(inflection);\n        inflection = d3_geo_spherical(inflection);\n        var dλ = λ - λ_, s = dλ > 0 ? 1 : -1, λi = inflection[0] * d3_degrees * s, antimeridian = abs(dλ) > 180;\n        if (antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = inflection[1] * d3_degrees;\n          if (φi > φ1) φ1 = φi;\n        } else if (λi = (λi + 360) % 360 - 180, antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = -inflection[1] * d3_degrees;\n          if (φi < φ0) φ0 = φi;\n        } else {\n          if (φ < φ0) φ0 = φ;\n          if (φ > φ1) φ1 = φ;\n        }\n        if (antimeridian) {\n          if (λ < λ_) {\n            if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n          } else {\n            if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n          }\n        } else {\n          if (λ1 >= λ0) {\n            if (λ < λ0) λ0 = λ;\n            if (λ > λ1) λ1 = λ;\n          } else {\n            if (λ > λ_) {\n              if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n            } else {\n              if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n            }\n          }\n        }\n      } else {\n        point(λ, φ);\n      }\n      p0 = p, λ_ = λ;\n    }\n    function lineStart() {\n      bound.point = linePoint;\n    }\n    function lineEnd() {\n      range[0] = λ0, range[1] = λ1;\n      bound.point = point;\n      p0 = null;\n    }\n    function ringPoint(λ, φ) {\n      if (p0) {\n        var dλ = λ - λ_;\n        dλSum += abs(dλ) > 180 ? dλ + (dλ > 0 ? 360 : -360) : dλ;\n      } else λ__ = λ, φ__ = φ;\n      d3_geo_area.point(λ, φ);\n      linePoint(λ, φ);\n    }\n    function ringStart() {\n      d3_geo_area.lineStart();\n    }\n    function ringEnd() {\n      ringPoint(λ__, φ__);\n      d3_geo_area.lineEnd();\n      if (abs(dλSum) > ε) λ0 = -(λ1 = 180);\n      range[0] = λ0, range[1] = λ1;\n      p0 = null;\n    }\n    function angle(λ0, λ1) {\n      return (λ1 -= λ0) < 0 ? λ1 + 360 : λ1;\n    }\n    function compareRanges(a, b) {\n      return a[0] - b[0];\n    }\n    function withinRange(x, range) {\n      return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n    }\n    return function(feature) {\n      φ1 = λ1 = -(λ0 = φ0 = Infinity);\n      ranges = [];\n      d3.geo.stream(feature, bound);\n      var n = ranges.length;\n      if (n) {\n        ranges.sort(compareRanges);\n        for (var i = 1, a = ranges[0], b, merged = [ a ]; i < n; ++i) {\n          b = ranges[i];\n          if (withinRange(b[0], a) || withinRange(b[1], a)) {\n            if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n            if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n          } else {\n            merged.push(a = b);\n          }\n        }\n        var best = -Infinity, dλ;\n        for (var n = merged.length - 1, i = 0, a = merged[n], b; i <= n; a = b, ++i) {\n          b = merged[i];\n          if ((dλ = angle(a[1], b[0])) > best) best = dλ, λ0 = b[0], λ1 = a[1];\n        }\n      }\n      ranges = range = null;\n      return λ0 === Infinity || φ0 === Infinity ? [ [ NaN, NaN ], [ NaN, NaN ] ] : [ [ λ0, φ0 ], [ λ1, φ1 ] ];\n    };\n  }();\n  d3.geo.centroid = function(object) {\n    d3_geo_centroidW0 = d3_geo_centroidW1 = d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n    d3.geo.stream(object, d3_geo_centroid);\n    var x = d3_geo_centroidX2, y = d3_geo_centroidY2, z = d3_geo_centroidZ2, m = x * x + y * y + z * z;\n    if (m < ε2) {\n      x = d3_geo_centroidX1, y = d3_geo_centroidY1, z = d3_geo_centroidZ1;\n      if (d3_geo_centroidW1 < ε) x = d3_geo_centroidX0, y = d3_geo_centroidY0, z = d3_geo_centroidZ0;\n      m = x * x + y * y + z * z;\n      if (m < ε2) return [ NaN, NaN ];\n    }\n    return [ Math.atan2(y, x) * d3_degrees, d3_asin(z / Math.sqrt(m)) * d3_degrees ];\n  };\n  var d3_geo_centroidW0, d3_geo_centroidW1, d3_geo_centroidX0, d3_geo_centroidY0, d3_geo_centroidZ0, d3_geo_centroidX1, d3_geo_centroidY1, d3_geo_centroidZ1, d3_geo_centroidX2, d3_geo_centroidY2, d3_geo_centroidZ2;\n  var d3_geo_centroid = {\n    sphere: d3_noop,\n    point: d3_geo_centroidPoint,\n    lineStart: d3_geo_centroidLineStart,\n    lineEnd: d3_geo_centroidLineEnd,\n    polygonStart: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidLineStart;\n    }\n  };\n  function d3_geo_centroidPoint(λ, φ) {\n    λ *= d3_radians;\n    var cosφ = Math.cos(φ *= d3_radians);\n    d3_geo_centroidPointXYZ(cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ));\n  }\n  function d3_geo_centroidPointXYZ(x, y, z) {\n    ++d3_geo_centroidW0;\n    d3_geo_centroidX0 += (x - d3_geo_centroidX0) / d3_geo_centroidW0;\n    d3_geo_centroidY0 += (y - d3_geo_centroidY0) / d3_geo_centroidW0;\n    d3_geo_centroidZ0 += (z - d3_geo_centroidZ0) / d3_geo_centroidW0;\n  }\n  function d3_geo_centroidLineStart() {\n    var x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroid.point = nextPoint;\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), w = Math.atan2(Math.sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_centroidLineEnd() {\n    d3_geo_centroid.point = d3_geo_centroidPoint;\n  }\n  function d3_geo_centroidRingStart() {\n    var λ00, φ00, x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ00 = λ, φ00 = φ;\n      d3_geo_centroid.point = nextPoint;\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    d3_geo_centroid.lineEnd = function() {\n      nextPoint(λ00, φ00);\n      d3_geo_centroid.lineEnd = d3_geo_centroidLineEnd;\n      d3_geo_centroid.point = d3_geo_centroidPoint;\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), cx = y0 * z - z0 * y, cy = z0 * x - x0 * z, cz = x0 * y - y0 * x, m = Math.sqrt(cx * cx + cy * cy + cz * cz), u = x0 * x + y0 * y + z0 * z, v = m && -d3_acos(u) / m, w = Math.atan2(m, u);\n      d3_geo_centroidX2 += v * cx;\n      d3_geo_centroidY2 += v * cy;\n      d3_geo_centroidZ2 += v * cz;\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_compose(a, b) {\n    function compose(x, y) {\n      return x = a(x, y), b(x[0], x[1]);\n    }\n    if (a.invert && b.invert) compose.invert = function(x, y) {\n      return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n    };\n    return compose;\n  }\n  function d3_true() {\n    return true;\n  }\n  function d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener) {\n    var subject = [], clip = [];\n    segments.forEach(function(segment) {\n      if ((n = segment.length - 1) <= 0) return;\n      var n, p0 = segment[0], p1 = segment[n];\n      if (d3_geo_sphericalEqual(p0, p1)) {\n        listener.lineStart();\n        for (var i = 0; i < n; ++i) listener.point((p0 = segment[i])[0], p0[1]);\n        listener.lineEnd();\n        return;\n      }\n      var a = new d3_geo_clipPolygonIntersection(p0, segment, null, true), b = new d3_geo_clipPolygonIntersection(p0, null, a, false);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n      a = new d3_geo_clipPolygonIntersection(p1, segment, null, false);\n      b = new d3_geo_clipPolygonIntersection(p1, null, a, true);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n    });\n    clip.sort(compare);\n    d3_geo_clipPolygonLinkCircular(subject);\n    d3_geo_clipPolygonLinkCircular(clip);\n    if (!subject.length) return;\n    for (var i = 0, entry = clipStartInside, n = clip.length; i < n; ++i) {\n      clip[i].e = entry = !entry;\n    }\n    var start = subject[0], points, point;\n    while (1) {\n      var current = start, isSubject = true;\n      while (current.v) if ((current = current.n) === start) return;\n      points = current.z;\n      listener.lineStart();\n      do {\n        current.v = current.o.v = true;\n        if (current.e) {\n          if (isSubject) {\n            for (var i = 0, n = points.length; i < n; ++i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.n.x, 1, listener);\n          }\n          current = current.n;\n        } else {\n          if (isSubject) {\n            points = current.p.z;\n            for (var i = points.length - 1; i >= 0; --i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.p.x, -1, listener);\n          }\n          current = current.p;\n        }\n        current = current.o;\n        points = current.z;\n        isSubject = !isSubject;\n      } while (!current.v);\n      listener.lineEnd();\n    }\n  }\n  function d3_geo_clipPolygonLinkCircular(array) {\n    if (!(n = array.length)) return;\n    var n, i = 0, a = array[0], b;\n    while (++i < n) {\n      a.n = b = array[i];\n      b.p = a;\n      a = b;\n    }\n    a.n = b = array[0];\n    b.p = a;\n  }\n  function d3_geo_clipPolygonIntersection(point, points, other, entry) {\n    this.x = point;\n    this.z = points;\n    this.o = other;\n    this.e = entry;\n    this.v = false;\n    this.n = this.p = null;\n  }\n  function d3_geo_clip(pointVisible, clipLine, interpolate, clipStart) {\n    return function(rotate, listener) {\n      var line = clipLine(listener), rotatedClipStart = rotate.invert(clipStart[0], clipStart[1]);\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          clip.point = pointRing;\n          clip.lineStart = ringStart;\n          clip.lineEnd = ringEnd;\n          segments = [];\n          polygon = [];\n        },\n        polygonEnd: function() {\n          clip.point = point;\n          clip.lineStart = lineStart;\n          clip.lineEnd = lineEnd;\n          segments = d3.merge(segments);\n          var clipStartInside = d3_geo_pointInPolygon(rotatedClipStart, polygon);\n          if (segments.length) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            d3_geo_clipPolygon(segments, d3_geo_clipSort, clipStartInside, interpolate, listener);\n          } else if (clipStartInside) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            interpolate(null, null, 1, listener);\n            listener.lineEnd();\n          }\n          if (polygonStarted) listener.polygonEnd(), polygonStarted = false;\n          segments = polygon = null;\n        },\n        sphere: function() {\n          listener.polygonStart();\n          listener.lineStart();\n          interpolate(null, null, 1, listener);\n          listener.lineEnd();\n          listener.polygonEnd();\n        }\n      };\n      function point(λ, φ) {\n        var point = rotate(λ, φ);\n        if (pointVisible(λ = point[0], φ = point[1])) listener.point(λ, φ);\n      }\n      function pointLine(λ, φ) {\n        var point = rotate(λ, φ);\n        line.point(point[0], point[1]);\n      }\n      function lineStart() {\n        clip.point = pointLine;\n        line.lineStart();\n      }\n      function lineEnd() {\n        clip.point = point;\n        line.lineEnd();\n      }\n      var segments;\n      var buffer = d3_geo_clipBufferListener(), ringListener = clipLine(buffer), polygonStarted = false, polygon, ring;\n      function pointRing(λ, φ) {\n        ring.push([ λ, φ ]);\n        var point = rotate(λ, φ);\n        ringListener.point(point[0], point[1]);\n      }\n      function ringStart() {\n        ringListener.lineStart();\n        ring = [];\n      }\n      function ringEnd() {\n        pointRing(ring[0][0], ring[0][1]);\n        ringListener.lineEnd();\n        var clean = ringListener.clean(), ringSegments = buffer.buffer(), segment, n = ringSegments.length;\n        ring.pop();\n        polygon.push(ring);\n        ring = null;\n        if (!n) return;\n        if (clean & 1) {\n          segment = ringSegments[0];\n          var n = segment.length - 1, i = -1, point;\n          if (n > 0) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            while (++i < n) listener.point((point = segment[i])[0], point[1]);\n            listener.lineEnd();\n          }\n          return;\n        }\n        if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n        segments.push(ringSegments.filter(d3_geo_clipSegmentLength1));\n      }\n      return clip;\n    };\n  }\n  function d3_geo_clipSegmentLength1(segment) {\n    return segment.length > 1;\n  }\n  function d3_geo_clipBufferListener() {\n    var lines = [], line;\n    return {\n      lineStart: function() {\n        lines.push(line = []);\n      },\n      point: function(λ, φ) {\n        line.push([ λ, φ ]);\n      },\n      lineEnd: d3_noop,\n      buffer: function() {\n        var buffer = lines;\n        lines = [];\n        line = null;\n        return buffer;\n      },\n      rejoin: function() {\n        if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n      }\n    };\n  }\n  function d3_geo_clipSort(a, b) {\n    return ((a = a.x)[0] < 0 ? a[1] - halfπ - ε : halfπ - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfπ - ε : halfπ - b[1]);\n  }\n  var d3_geo_clipAntimeridian = d3_geo_clip(d3_true, d3_geo_clipAntimeridianLine, d3_geo_clipAntimeridianInterpolate, [ -π, -π / 2 ]);\n  function d3_geo_clipAntimeridianLine(listener) {\n    var λ0 = NaN, φ0 = NaN, sλ0 = NaN, clean;\n    return {\n      lineStart: function() {\n        listener.lineStart();\n        clean = 1;\n      },\n      point: function(λ1, φ1) {\n        var sλ1 = λ1 > 0 ? π : -π, dλ = abs(λ1 - λ0);\n        if (abs(dλ - π) < ε) {\n          listener.point(λ0, φ0 = (φ0 + φ1) / 2 > 0 ? halfπ : -halfπ);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          listener.point(λ1, φ0);\n          clean = 0;\n        } else if (sλ0 !== sλ1 && dλ >= π) {\n          if (abs(λ0 - sλ0) < ε) λ0 -= sλ0 * ε;\n          if (abs(λ1 - sλ1) < ε) λ1 -= sλ1 * ε;\n          φ0 = d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          clean = 0;\n        }\n        listener.point(λ0 = λ1, φ0 = φ1);\n        sλ0 = sλ1;\n      },\n      lineEnd: function() {\n        listener.lineEnd();\n        λ0 = φ0 = NaN;\n      },\n      clean: function() {\n        return 2 - clean;\n      }\n    };\n  }\n  function d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1) {\n    var cosφ0, cosφ1, sinλ0_λ1 = Math.sin(λ0 - λ1);\n    return abs(sinλ0_λ1) > ε ? Math.atan((Math.sin(φ0) * (cosφ1 = Math.cos(φ1)) * Math.sin(λ1) - Math.sin(φ1) * (cosφ0 = Math.cos(φ0)) * Math.sin(λ0)) / (cosφ0 * cosφ1 * sinλ0_λ1)) : (φ0 + φ1) / 2;\n  }\n  function d3_geo_clipAntimeridianInterpolate(from, to, direction, listener) {\n    var φ;\n    if (from == null) {\n      φ = direction * halfπ;\n      listener.point(-π, φ);\n      listener.point(0, φ);\n      listener.point(π, φ);\n      listener.point(π, 0);\n      listener.point(π, -φ);\n      listener.point(0, -φ);\n      listener.point(-π, -φ);\n      listener.point(-π, 0);\n      listener.point(-π, φ);\n    } else if (abs(from[0] - to[0]) > ε) {\n      var s = from[0] < to[0] ? π : -π;\n      φ = direction * s / 2;\n      listener.point(-s, φ);\n      listener.point(0, φ);\n      listener.point(s, φ);\n    } else {\n      listener.point(to[0], to[1]);\n    }\n  }\n  function d3_geo_pointInPolygon(point, polygon) {\n    var meridian = point[0], parallel = point[1], meridianNormal = [ Math.sin(meridian), -Math.cos(meridian), 0 ], polarAngle = 0, winding = 0;\n    d3_geo_areaRingSum.reset();\n    for (var i = 0, n = polygon.length; i < n; ++i) {\n      var ring = polygon[i], m = ring.length;\n      if (!m) continue;\n      var point0 = ring[0], λ0 = point0[0], φ0 = point0[1] / 2 + π / 4, sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), j = 1;\n      while (true) {\n        if (j === m) j = 0;\n        point = ring[j];\n        var λ = point[0], φ = point[1] / 2 + π / 4, sinφ = Math.sin(φ), cosφ = Math.cos(φ), dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, antimeridian = adλ > π, k = sinφ0 * sinφ;\n        d3_geo_areaRingSum.add(Math.atan2(k * sdλ * Math.sin(adλ), cosφ0 * cosφ + k * Math.cos(adλ)));\n        polarAngle += antimeridian ? dλ + sdλ * τ : dλ;\n        if (antimeridian ^ λ0 >= meridian ^ λ >= meridian) {\n          var arc = d3_geo_cartesianCross(d3_geo_cartesian(point0), d3_geo_cartesian(point));\n          d3_geo_cartesianNormalize(arc);\n          var intersection = d3_geo_cartesianCross(meridianNormal, arc);\n          d3_geo_cartesianNormalize(intersection);\n          var φarc = (antimeridian ^ dλ >= 0 ? -1 : 1) * d3_asin(intersection[2]);\n          if (parallel > φarc || parallel === φarc && (arc[0] || arc[1])) {\n            winding += antimeridian ^ dλ >= 0 ? 1 : -1;\n          }\n        }\n        if (!j++) break;\n        λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ, point0 = point;\n      }\n    }\n    return (polarAngle < -ε || polarAngle < ε && d3_geo_areaRingSum < -ε) ^ winding & 1;\n  }\n  function d3_geo_clipCircle(radius) {\n    var cr = Math.cos(radius), smallRadius = cr > 0, notHemisphere = abs(cr) > ε, interpolate = d3_geo_circleInterpolate(radius, 6 * d3_radians);\n    return d3_geo_clip(visible, clipLine, interpolate, smallRadius ? [ 0, -radius ] : [ -π, radius - π ]);\n    function visible(λ, φ) {\n      return Math.cos(λ) * Math.cos(φ) > cr;\n    }\n    function clipLine(listener) {\n      var point0, c0, v0, v00, clean;\n      return {\n        lineStart: function() {\n          v00 = v0 = false;\n          clean = 1;\n        },\n        point: function(λ, φ) {\n          var point1 = [ λ, φ ], point2, v = visible(λ, φ), c = smallRadius ? v ? 0 : code(λ, φ) : v ? code(λ + (λ < 0 ? π : -π), φ) : 0;\n          if (!point0 && (v00 = v0 = v)) listener.lineStart();\n          if (v !== v0) {\n            point2 = intersect(point0, point1);\n            if (d3_geo_sphericalEqual(point0, point2) || d3_geo_sphericalEqual(point1, point2)) {\n              point1[0] += ε;\n              point1[1] += ε;\n              v = visible(point1[0], point1[1]);\n            }\n          }\n          if (v !== v0) {\n            clean = 0;\n            if (v) {\n              listener.lineStart();\n              point2 = intersect(point1, point0);\n              listener.point(point2[0], point2[1]);\n            } else {\n              point2 = intersect(point0, point1);\n              listener.point(point2[0], point2[1]);\n              listener.lineEnd();\n            }\n            point0 = point2;\n          } else if (notHemisphere && point0 && smallRadius ^ v) {\n            var t;\n            if (!(c & c0) && (t = intersect(point1, point0, true))) {\n              clean = 0;\n              if (smallRadius) {\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n              } else {\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n              }\n            }\n          }\n          if (v && (!point0 || !d3_geo_sphericalEqual(point0, point1))) {\n            listener.point(point1[0], point1[1]);\n          }\n          point0 = point1, v0 = v, c0 = c;\n        },\n        lineEnd: function() {\n          if (v0) listener.lineEnd();\n          point0 = null;\n        },\n        clean: function() {\n          return clean | (v00 && v0) << 1;\n        }\n      };\n    }\n    function intersect(a, b, two) {\n      var pa = d3_geo_cartesian(a), pb = d3_geo_cartesian(b);\n      var n1 = [ 1, 0, 0 ], n2 = d3_geo_cartesianCross(pa, pb), n2n2 = d3_geo_cartesianDot(n2, n2), n1n2 = n2[0], determinant = n2n2 - n1n2 * n1n2;\n      if (!determinant) return !two && a;\n      var c1 = cr * n2n2 / determinant, c2 = -cr * n1n2 / determinant, n1xn2 = d3_geo_cartesianCross(n1, n2), A = d3_geo_cartesianScale(n1, c1), B = d3_geo_cartesianScale(n2, c2);\n      d3_geo_cartesianAdd(A, B);\n      var u = n1xn2, w = d3_geo_cartesianDot(A, u), uu = d3_geo_cartesianDot(u, u), t2 = w * w - uu * (d3_geo_cartesianDot(A, A) - 1);\n      if (t2 < 0) return;\n      var t = Math.sqrt(t2), q = d3_geo_cartesianScale(u, (-w - t) / uu);\n      d3_geo_cartesianAdd(q, A);\n      q = d3_geo_spherical(q);\n      if (!two) return q;\n      var λ0 = a[0], λ1 = b[0], φ0 = a[1], φ1 = b[1], z;\n      if (λ1 < λ0) z = λ0, λ0 = λ1, λ1 = z;\n      var δλ = λ1 - λ0, polar = abs(δλ - π) < ε, meridian = polar || δλ < ε;\n      if (!polar && φ1 < φ0) z = φ0, φ0 = φ1, φ1 = z;\n      if (meridian ? polar ? φ0 + φ1 > 0 ^ q[1] < (abs(q[0] - λ0) < ε ? φ0 : φ1) : φ0 <= q[1] && q[1] <= φ1 : δλ > π ^ (λ0 <= q[0] && q[0] <= λ1)) {\n        var q1 = d3_geo_cartesianScale(u, (-w + t) / uu);\n        d3_geo_cartesianAdd(q1, A);\n        return [ q, d3_geo_spherical(q1) ];\n      }\n    }\n    function code(λ, φ) {\n      var r = smallRadius ? radius : π - radius, code = 0;\n      if (λ < -r) code |= 1; else if (λ > r) code |= 2;\n      if (φ < -r) code |= 4; else if (φ > r) code |= 8;\n      return code;\n    }\n  }\n  function d3_geom_clipLine(x0, y0, x1, y1) {\n    return function(line) {\n      var a = line.a, b = line.b, ax = a.x, ay = a.y, bx = b.x, by = b.y, t0 = 0, t1 = 1, dx = bx - ax, dy = by - ay, r;\n      r = x0 - ax;\n      if (!dx && r > 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dx > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = x1 - ax;\n      if (!dx && r < 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dx > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      r = y0 - ay;\n      if (!dy && r > 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dy > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = y1 - ay;\n      if (!dy && r < 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dy > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      if (t0 > 0) line.a = {\n        x: ax + t0 * dx,\n        y: ay + t0 * dy\n      };\n      if (t1 < 1) line.b = {\n        x: ax + t1 * dx,\n        y: ay + t1 * dy\n      };\n      return line;\n    };\n  }\n  var d3_geo_clipExtentMAX = 1e9;\n  d3.geo.clipExtent = function() {\n    var x0, y0, x1, y1, stream, clip, clipExtent = {\n      stream: function(output) {\n        if (stream) stream.valid = false;\n        stream = clip(output);\n        stream.valid = true;\n        return stream;\n      },\n      extent: function(_) {\n        if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n        clip = d3_geo_clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]);\n        if (stream) stream.valid = false, stream = null;\n        return clipExtent;\n      }\n    };\n    return clipExtent.extent([ [ 0, 0 ], [ 960, 500 ] ]);\n  };\n  function d3_geo_clipExtent(x0, y0, x1, y1) {\n    return function(listener) {\n      var listener_ = listener, bufferListener = d3_geo_clipBufferListener(), clipLine = d3_geom_clipLine(x0, y0, x1, y1), segments, polygon, ring;\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          listener = bufferListener;\n          segments = [];\n          polygon = [];\n          clean = true;\n        },\n        polygonEnd: function() {\n          listener = listener_;\n          segments = d3.merge(segments);\n          var clipStartInside = insidePolygon([ x0, y1 ]), inside = clean && clipStartInside, visible = segments.length;\n          if (inside || visible) {\n            listener.polygonStart();\n            if (inside) {\n              listener.lineStart();\n              interpolate(null, null, 1, listener);\n              listener.lineEnd();\n            }\n            if (visible) {\n              d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener);\n            }\n            listener.polygonEnd();\n          }\n          segments = polygon = ring = null;\n        }\n      };\n      function insidePolygon(p) {\n        var wn = 0, n = polygon.length, y = p[1];\n        for (var i = 0; i < n; ++i) {\n          for (var j = 1, v = polygon[i], m = v.length, a = v[0], b; j < m; ++j) {\n            b = v[j];\n            if (a[1] <= y) {\n              if (b[1] > y && d3_cross2d(a, b, p) > 0) ++wn;\n            } else {\n              if (b[1] <= y && d3_cross2d(a, b, p) < 0) --wn;\n            }\n            a = b;\n          }\n        }\n        return wn !== 0;\n      }\n      function interpolate(from, to, direction, listener) {\n        var a = 0, a1 = 0;\n        if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoints(from, to) < 0 ^ direction > 0) {\n          do {\n            listener.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n          } while ((a = (a + direction + 4) % 4) !== a1);\n        } else {\n          listener.point(to[0], to[1]);\n        }\n      }\n      function pointVisible(x, y) {\n        return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n      }\n      function point(x, y) {\n        if (pointVisible(x, y)) listener.point(x, y);\n      }\n      var x__, y__, v__, x_, y_, v_, first, clean;\n      function lineStart() {\n        clip.point = linePoint;\n        if (polygon) polygon.push(ring = []);\n        first = true;\n        v_ = false;\n        x_ = y_ = NaN;\n      }\n      function lineEnd() {\n        if (segments) {\n          linePoint(x__, y__);\n          if (v__ && v_) bufferListener.rejoin();\n          segments.push(bufferListener.buffer());\n        }\n        clip.point = point;\n        if (v_) listener.lineEnd();\n      }\n      function linePoint(x, y) {\n        x = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, x));\n        y = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, y));\n        var v = pointVisible(x, y);\n        if (polygon) ring.push([ x, y ]);\n        if (first) {\n          x__ = x, y__ = y, v__ = v;\n          first = false;\n          if (v) {\n            listener.lineStart();\n            listener.point(x, y);\n          }\n        } else {\n          if (v && v_) listener.point(x, y); else {\n            var l = {\n              a: {\n                x: x_,\n                y: y_\n              },\n              b: {\n                x: x,\n                y: y\n              }\n            };\n            if (clipLine(l)) {\n              if (!v_) {\n                listener.lineStart();\n                listener.point(l.a.x, l.a.y);\n              }\n              listener.point(l.b.x, l.b.y);\n              if (!v) listener.lineEnd();\n              clean = false;\n            } else if (v) {\n              listener.lineStart();\n              listener.point(x, y);\n              clean = false;\n            }\n          }\n        }\n        x_ = x, y_ = y, v_ = v;\n      }\n      return clip;\n    };\n    function corner(p, direction) {\n      return abs(p[0] - x0) < ε ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < ε ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < ε ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2;\n    }\n    function compare(a, b) {\n      return comparePoints(a.x, b.x);\n    }\n    function comparePoints(a, b) {\n      var ca = corner(a, 1), cb = corner(b, 1);\n      return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];\n    }\n  }\n  function d3_geo_conic(projectAt) {\n    var φ0 = 0, φ1 = π / 3, m = d3_geo_projectionMutator(projectAt), p = m(φ0, φ1);\n    p.parallels = function(_) {\n      if (!arguments.length) return [ φ0 / π * 180, φ1 / π * 180 ];\n      return m(φ0 = _[0] * π / 180, φ1 = _[1] * π / 180);\n    };\n    return p;\n  }\n  function d3_geo_conicEqualArea(φ0, φ1) {\n    var sinφ0 = Math.sin(φ0), n = (sinφ0 + Math.sin(φ1)) / 2, C = 1 + sinφ0 * (2 * n - sinφ0), ρ0 = Math.sqrt(C) / n;\n    function forward(λ, φ) {\n      var ρ = Math.sqrt(C - 2 * n * Math.sin(φ)) / n;\n      return [ ρ * Math.sin(λ *= n), ρ0 - ρ * Math.cos(λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = ρ0 - y;\n      return [ Math.atan2(x, ρ0_y) / n, d3_asin((C - (x * x + ρ0_y * ρ0_y) * n * n) / (2 * n)) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEqualArea = function() {\n    return d3_geo_conic(d3_geo_conicEqualArea);\n  }).raw = d3_geo_conicEqualArea;\n  d3.geo.albers = function() {\n    return d3.geo.conicEqualArea().rotate([ 96, 0 ]).center([ -.6, 38.7 ]).parallels([ 29.5, 45.5 ]).scale(1070);\n  };\n  d3.geo.albersUsa = function() {\n    var lower48 = d3.geo.albers();\n    var alaska = d3.geo.conicEqualArea().rotate([ 154, 0 ]).center([ -2, 58.5 ]).parallels([ 55, 65 ]);\n    var hawaii = d3.geo.conicEqualArea().rotate([ 157, 0 ]).center([ -3, 19.9 ]).parallels([ 8, 18 ]);\n    var point, pointStream = {\n      point: function(x, y) {\n        point = [ x, y ];\n      }\n    }, lower48Point, alaskaPoint, hawaiiPoint;\n    function albersUsa(coordinates) {\n      var x = coordinates[0], y = coordinates[1];\n      point = null;\n      (lower48Point(x, y), point) || (alaskaPoint(x, y), point) || hawaiiPoint(x, y);\n      return point;\n    }\n    albersUsa.invert = function(coordinates) {\n      var k = lower48.scale(), t = lower48.translate(), x = (coordinates[0] - t[0]) / k, y = (coordinates[1] - t[1]) / k;\n      return (y >= .12 && y < .234 && x >= -.425 && x < -.214 ? alaska : y >= .166 && y < .234 && x >= -.214 && x < -.115 ? hawaii : lower48).invert(coordinates);\n    };\n    albersUsa.stream = function(stream) {\n      var lower48Stream = lower48.stream(stream), alaskaStream = alaska.stream(stream), hawaiiStream = hawaii.stream(stream);\n      return {\n        point: function(x, y) {\n          lower48Stream.point(x, y);\n          alaskaStream.point(x, y);\n          hawaiiStream.point(x, y);\n        },\n        sphere: function() {\n          lower48Stream.sphere();\n          alaskaStream.sphere();\n          hawaiiStream.sphere();\n        },\n        lineStart: function() {\n          lower48Stream.lineStart();\n          alaskaStream.lineStart();\n          hawaiiStream.lineStart();\n        },\n        lineEnd: function() {\n          lower48Stream.lineEnd();\n          alaskaStream.lineEnd();\n          hawaiiStream.lineEnd();\n        },\n        polygonStart: function() {\n          lower48Stream.polygonStart();\n          alaskaStream.polygonStart();\n          hawaiiStream.polygonStart();\n        },\n        polygonEnd: function() {\n          lower48Stream.polygonEnd();\n          alaskaStream.polygonEnd();\n          hawaiiStream.polygonEnd();\n        }\n      };\n    };\n    albersUsa.precision = function(_) {\n      if (!arguments.length) return lower48.precision();\n      lower48.precision(_);\n      alaska.precision(_);\n      hawaii.precision(_);\n      return albersUsa;\n    };\n    albersUsa.scale = function(_) {\n      if (!arguments.length) return lower48.scale();\n      lower48.scale(_);\n      alaska.scale(_ * .35);\n      hawaii.scale(_);\n      return albersUsa.translate(lower48.translate());\n    };\n    albersUsa.translate = function(_) {\n      if (!arguments.length) return lower48.translate();\n      var k = lower48.scale(), x = +_[0], y = +_[1];\n      lower48Point = lower48.translate(_).clipExtent([ [ x - .455 * k, y - .238 * k ], [ x + .455 * k, y + .238 * k ] ]).stream(pointStream).point;\n      alaskaPoint = alaska.translate([ x - .307 * k, y + .201 * k ]).clipExtent([ [ x - .425 * k + ε, y + .12 * k + ε ], [ x - .214 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      hawaiiPoint = hawaii.translate([ x - .205 * k, y + .212 * k ]).clipExtent([ [ x - .214 * k + ε, y + .166 * k + ε ], [ x - .115 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      return albersUsa;\n    };\n    return albersUsa.scale(1070);\n  };\n  var d3_geo_pathAreaSum, d3_geo_pathAreaPolygon, d3_geo_pathArea = {\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_pathAreaPolygon = 0;\n      d3_geo_pathArea.lineStart = d3_geo_pathAreaRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathArea.lineStart = d3_geo_pathArea.lineEnd = d3_geo_pathArea.point = d3_noop;\n      d3_geo_pathAreaSum += abs(d3_geo_pathAreaPolygon / 2);\n    }\n  };\n  function d3_geo_pathAreaRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathArea.point = function(x, y) {\n      d3_geo_pathArea.point = nextPoint;\n      x00 = x0 = x, y00 = y0 = y;\n    };\n    function nextPoint(x, y) {\n      d3_geo_pathAreaPolygon += y0 * x - x0 * y;\n      x0 = x, y0 = y;\n    }\n    d3_geo_pathArea.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  var d3_geo_pathBoundsX0, d3_geo_pathBoundsY0, d3_geo_pathBoundsX1, d3_geo_pathBoundsY1;\n  var d3_geo_pathBounds = {\n    point: d3_geo_pathBoundsPoint,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_pathBoundsPoint(x, y) {\n    if (x < d3_geo_pathBoundsX0) d3_geo_pathBoundsX0 = x;\n    if (x > d3_geo_pathBoundsX1) d3_geo_pathBoundsX1 = x;\n    if (y < d3_geo_pathBoundsY0) d3_geo_pathBoundsY0 = y;\n    if (y > d3_geo_pathBoundsY1) d3_geo_pathBoundsY1 = y;\n  }\n  function d3_geo_pathBuffer() {\n    var pointCircle = d3_geo_pathBufferCircle(4.5), buffer = [];\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointCircle = d3_geo_pathBufferCircle(_);\n        return stream;\n      },\n      result: function() {\n        if (buffer.length) {\n          var result = buffer.join(\"\");\n          buffer = [];\n          return result;\n        }\n      }\n    };\n    function point(x, y) {\n      buffer.push(\"M\", x, \",\", y, pointCircle);\n    }\n    function pointLineStart(x, y) {\n      buffer.push(\"M\", x, \",\", y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      buffer.push(\"L\", x, \",\", y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      buffer.push(\"Z\");\n    }\n    return stream;\n  }\n  function d3_geo_pathBufferCircle(radius) {\n    return \"m0,\" + radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius + \"z\";\n  }\n  var d3_geo_pathCentroid = {\n    point: d3_geo_pathCentroidPoint,\n    lineStart: d3_geo_pathCentroidLineStart,\n    lineEnd: d3_geo_pathCentroidLineEnd,\n    polygonStart: function() {\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidLineStart;\n      d3_geo_pathCentroid.lineEnd = d3_geo_pathCentroidLineEnd;\n    }\n  };\n  function d3_geo_pathCentroidPoint(x, y) {\n    d3_geo_centroidX0 += x;\n    d3_geo_centroidY0 += y;\n    ++d3_geo_centroidZ0;\n  }\n  function d3_geo_pathCentroidLineStart() {\n    var x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n  }\n  function d3_geo_pathCentroidLineEnd() {\n    d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n  }\n  function d3_geo_pathCentroidRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x00 = x0 = x, y00 = y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      z = y0 * x - x0 * y;\n      d3_geo_centroidX2 += z * (x0 + x);\n      d3_geo_centroidY2 += z * (y0 + y);\n      d3_geo_centroidZ2 += z * 3;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n    d3_geo_pathCentroid.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  function d3_geo_pathContext(context) {\n    var pointRadius = 4.5;\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointRadius = _;\n        return stream;\n      },\n      result: d3_noop\n    };\n    function point(x, y) {\n      context.moveTo(x + pointRadius, y);\n      context.arc(x, y, pointRadius, 0, τ);\n    }\n    function pointLineStart(x, y) {\n      context.moveTo(x, y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      context.lineTo(x, y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      context.closePath();\n    }\n    return stream;\n  }\n  function d3_geo_resample(project) {\n    var δ2 = .5, cosMinDistance = Math.cos(30 * d3_radians), maxDepth = 16;\n    function resample(stream) {\n      return (maxDepth ? resampleRecursive : resampleNone)(stream);\n    }\n    function resampleNone(stream) {\n      return d3_geo_transformPoint(stream, function(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      });\n    }\n    function resampleRecursive(stream) {\n      var λ00, φ00, x00, y00, a00, b00, c00, λ0, x0, y0, a0, b0, c0;\n      var resample = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          stream.polygonStart();\n          resample.lineStart = ringStart;\n        },\n        polygonEnd: function() {\n          stream.polygonEnd();\n          resample.lineStart = lineStart;\n        }\n      };\n      function point(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      }\n      function lineStart() {\n        x0 = NaN;\n        resample.point = linePoint;\n        stream.lineStart();\n      }\n      function linePoint(λ, φ) {\n        var c = d3_geo_cartesian([ λ, φ ]), p = project(λ, φ);\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x0 = p[0], y0 = p[1], λ0 = λ, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n        stream.point(x0, y0);\n      }\n      function lineEnd() {\n        resample.point = point;\n        stream.lineEnd();\n      }\n      function ringStart() {\n        lineStart();\n        resample.point = ringPoint;\n        resample.lineEnd = ringEnd;\n      }\n      function ringPoint(λ, φ) {\n        linePoint(λ00 = λ, φ00 = φ), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n        resample.point = linePoint;\n      }\n      function ringEnd() {\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x00, y00, λ00, a00, b00, c00, maxDepth, stream);\n        resample.lineEnd = lineEnd;\n        lineEnd();\n      }\n      return resample;\n    }\n    function resampleLineTo(x0, y0, λ0, a0, b0, c0, x1, y1, λ1, a1, b1, c1, depth, stream) {\n      var dx = x1 - x0, dy = y1 - y0, d2 = dx * dx + dy * dy;\n      if (d2 > 4 * δ2 && depth--) {\n        var a = a0 + a1, b = b0 + b1, c = c0 + c1, m = Math.sqrt(a * a + b * b + c * c), φ2 = Math.asin(c /= m), λ2 = abs(abs(c) - 1) < ε || abs(λ0 - λ1) < ε ? (λ0 + λ1) / 2 : Math.atan2(b, a), p = project(λ2, φ2), x2 = p[0], y2 = p[1], dx2 = x2 - x0, dy2 = y2 - y0, dz = dy * dx2 - dx * dy2;\n        if (dz * dz / d2 > δ2 || abs((dx * dx2 + dy * dy2) / d2 - .5) > .3 || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {\n          resampleLineTo(x0, y0, λ0, a0, b0, c0, x2, y2, λ2, a /= m, b /= m, c, depth, stream);\n          stream.point(x2, y2);\n          resampleLineTo(x2, y2, λ2, a, b, c, x1, y1, λ1, a1, b1, c1, depth, stream);\n        }\n      }\n    }\n    resample.precision = function(_) {\n      if (!arguments.length) return Math.sqrt(δ2);\n      maxDepth = (δ2 = _ * _) > 0 && 16;\n      return resample;\n    };\n    return resample;\n  }\n  d3.geo.path = function() {\n    var pointRadius = 4.5, projection, context, projectStream, contextStream, cacheStream;\n    function path(object) {\n      if (object) {\n        if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n        if (!cacheStream || !cacheStream.valid) cacheStream = projectStream(contextStream);\n        d3.geo.stream(object, cacheStream);\n      }\n      return contextStream.result();\n    }\n    path.area = function(object) {\n      d3_geo_pathAreaSum = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathArea));\n      return d3_geo_pathAreaSum;\n    };\n    path.centroid = function(object) {\n      d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathCentroid));\n      return d3_geo_centroidZ2 ? [ d3_geo_centroidX2 / d3_geo_centroidZ2, d3_geo_centroidY2 / d3_geo_centroidZ2 ] : d3_geo_centroidZ1 ? [ d3_geo_centroidX1 / d3_geo_centroidZ1, d3_geo_centroidY1 / d3_geo_centroidZ1 ] : d3_geo_centroidZ0 ? [ d3_geo_centroidX0 / d3_geo_centroidZ0, d3_geo_centroidY0 / d3_geo_centroidZ0 ] : [ NaN, NaN ];\n    };\n    path.bounds = function(object) {\n      d3_geo_pathBoundsX1 = d3_geo_pathBoundsY1 = -(d3_geo_pathBoundsX0 = d3_geo_pathBoundsY0 = Infinity);\n      d3.geo.stream(object, projectStream(d3_geo_pathBounds));\n      return [ [ d3_geo_pathBoundsX0, d3_geo_pathBoundsY0 ], [ d3_geo_pathBoundsX1, d3_geo_pathBoundsY1 ] ];\n    };\n    path.projection = function(_) {\n      if (!arguments.length) return projection;\n      projectStream = (projection = _) ? _.stream || d3_geo_pathProjectStream(_) : d3_identity;\n      return reset();\n    };\n    path.context = function(_) {\n      if (!arguments.length) return context;\n      contextStream = (context = _) == null ? new d3_geo_pathBuffer() : new d3_geo_pathContext(_);\n      if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n      return reset();\n    };\n    path.pointRadius = function(_) {\n      if (!arguments.length) return pointRadius;\n      pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n      return path;\n    };\n    function reset() {\n      cacheStream = null;\n      return path;\n    }\n    return path.projection(d3.geo.albersUsa()).context(null);\n  };\n  function d3_geo_pathProjectStream(project) {\n    var resample = d3_geo_resample(function(x, y) {\n      return project([ x * d3_degrees, y * d3_degrees ]);\n    });\n    return function(stream) {\n      return d3_geo_projectionRadians(resample(stream));\n    };\n  }\n  d3.geo.transform = function(methods) {\n    return {\n      stream: function(stream) {\n        var transform = new d3_geo_transform(stream);\n        for (var k in methods) transform[k] = methods[k];\n        return transform;\n      }\n    };\n  };\n  function d3_geo_transform(stream) {\n    this.stream = stream;\n  }\n  d3_geo_transform.prototype = {\n    point: function(x, y) {\n      this.stream.point(x, y);\n    },\n    sphere: function() {\n      this.stream.sphere();\n    },\n    lineStart: function() {\n      this.stream.lineStart();\n    },\n    lineEnd: function() {\n      this.stream.lineEnd();\n    },\n    polygonStart: function() {\n      this.stream.polygonStart();\n    },\n    polygonEnd: function() {\n      this.stream.polygonEnd();\n    }\n  };\n  function d3_geo_transformPoint(stream, point) {\n    return {\n      point: point,\n      sphere: function() {\n        stream.sphere();\n      },\n      lineStart: function() {\n        stream.lineStart();\n      },\n      lineEnd: function() {\n        stream.lineEnd();\n      },\n      polygonStart: function() {\n        stream.polygonStart();\n      },\n      polygonEnd: function() {\n        stream.polygonEnd();\n      }\n    };\n  }\n  d3.geo.projection = d3_geo_projection;\n  d3.geo.projectionMutator = d3_geo_projectionMutator;\n  function d3_geo_projection(project) {\n    return d3_geo_projectionMutator(function() {\n      return project;\n    })();\n  }\n  function d3_geo_projectionMutator(projectAt) {\n    var project, rotate, projectRotate, projectResample = d3_geo_resample(function(x, y) {\n      x = project(x, y);\n      return [ x[0] * k + δx, δy - x[1] * k ];\n    }), k = 150, x = 480, y = 250, λ = 0, φ = 0, δλ = 0, δφ = 0, δγ = 0, δx, δy, preclip = d3_geo_clipAntimeridian, postclip = d3_identity, clipAngle = null, clipExtent = null, stream;\n    function projection(point) {\n      point = projectRotate(point[0] * d3_radians, point[1] * d3_radians);\n      return [ point[0] * k + δx, δy - point[1] * k ];\n    }\n    function invert(point) {\n      point = projectRotate.invert((point[0] - δx) / k, (δy - point[1]) / k);\n      return point && [ point[0] * d3_degrees, point[1] * d3_degrees ];\n    }\n    projection.stream = function(output) {\n      if (stream) stream.valid = false;\n      stream = d3_geo_projectionRadians(preclip(rotate, projectResample(postclip(output))));\n      stream.valid = true;\n      return stream;\n    };\n    projection.clipAngle = function(_) {\n      if (!arguments.length) return clipAngle;\n      preclip = _ == null ? (clipAngle = _, d3_geo_clipAntimeridian) : d3_geo_clipCircle((clipAngle = +_) * d3_radians);\n      return invalidate();\n    };\n    projection.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent;\n      clipExtent = _;\n      postclip = _ ? d3_geo_clipExtent(_[0][0], _[0][1], _[1][0], _[1][1]) : d3_identity;\n      return invalidate();\n    };\n    projection.scale = function(_) {\n      if (!arguments.length) return k;\n      k = +_;\n      return reset();\n    };\n    projection.translate = function(_) {\n      if (!arguments.length) return [ x, y ];\n      x = +_[0];\n      y = +_[1];\n      return reset();\n    };\n    projection.center = function(_) {\n      if (!arguments.length) return [ λ * d3_degrees, φ * d3_degrees ];\n      λ = _[0] % 360 * d3_radians;\n      φ = _[1] % 360 * d3_radians;\n      return reset();\n    };\n    projection.rotate = function(_) {\n      if (!arguments.length) return [ δλ * d3_degrees, δφ * d3_degrees, δγ * d3_degrees ];\n      δλ = _[0] % 360 * d3_radians;\n      δφ = _[1] % 360 * d3_radians;\n      δγ = _.length > 2 ? _[2] % 360 * d3_radians : 0;\n      return reset();\n    };\n    d3.rebind(projection, projectResample, \"precision\");\n    function reset() {\n      projectRotate = d3_geo_compose(rotate = d3_geo_rotation(δλ, δφ, δγ), project);\n      var center = project(λ, φ);\n      δx = x - center[0] * k;\n      δy = y + center[1] * k;\n      return invalidate();\n    }\n    function invalidate() {\n      if (stream) stream.valid = false, stream = null;\n      return projection;\n    }\n    return function() {\n      project = projectAt.apply(this, arguments);\n      projection.invert = project.invert && invert;\n      return reset();\n    };\n  }\n  function d3_geo_projectionRadians(stream) {\n    return d3_geo_transformPoint(stream, function(x, y) {\n      stream.point(x * d3_radians, y * d3_radians);\n    });\n  }\n  function d3_geo_equirectangular(λ, φ) {\n    return [ λ, φ ];\n  }\n  (d3.geo.equirectangular = function() {\n    return d3_geo_projection(d3_geo_equirectangular);\n  }).raw = d3_geo_equirectangular.invert = d3_geo_equirectangular;\n  d3.geo.rotation = function(rotate) {\n    rotate = d3_geo_rotation(rotate[0] % 360 * d3_radians, rotate[1] * d3_radians, rotate.length > 2 ? rotate[2] * d3_radians : 0);\n    function forward(coordinates) {\n      coordinates = rotate(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    }\n    forward.invert = function(coordinates) {\n      coordinates = rotate.invert(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    };\n    return forward;\n  };\n  function d3_geo_identityRotation(λ, φ) {\n    return [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n  }\n  d3_geo_identityRotation.invert = d3_geo_equirectangular;\n  function d3_geo_rotation(δλ, δφ, δγ) {\n    return δλ ? δφ || δγ ? d3_geo_compose(d3_geo_rotationλ(δλ), d3_geo_rotationφγ(δφ, δγ)) : d3_geo_rotationλ(δλ) : δφ || δγ ? d3_geo_rotationφγ(δφ, δγ) : d3_geo_identityRotation;\n  }\n  function d3_geo_forwardRotationλ(δλ) {\n    return function(λ, φ) {\n      return λ += δλ, [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n    };\n  }\n  function d3_geo_rotationλ(δλ) {\n    var rotation = d3_geo_forwardRotationλ(δλ);\n    rotation.invert = d3_geo_forwardRotationλ(-δλ);\n    return rotation;\n  }\n  function d3_geo_rotationφγ(δφ, δγ) {\n    var cosδφ = Math.cos(δφ), sinδφ = Math.sin(δφ), cosδγ = Math.cos(δγ), sinδγ = Math.sin(δγ);\n    function rotation(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδφ + x * sinδφ;\n      return [ Math.atan2(y * cosδγ - k * sinδγ, x * cosδφ - z * sinδφ), d3_asin(k * cosδγ + y * sinδγ) ];\n    }\n    rotation.invert = function(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδγ - y * sinδγ;\n      return [ Math.atan2(y * cosδγ + z * sinδγ, x * cosδφ + k * sinδφ), d3_asin(k * cosδφ - x * sinδφ) ];\n    };\n    return rotation;\n  }\n  d3.geo.circle = function() {\n    var origin = [ 0, 0 ], angle, precision = 6, interpolate;\n    function circle() {\n      var center = typeof origin === \"function\" ? origin.apply(this, arguments) : origin, rotate = d3_geo_rotation(-center[0] * d3_radians, -center[1] * d3_radians, 0).invert, ring = [];\n      interpolate(null, null, 1, {\n        point: function(x, y) {\n          ring.push(x = rotate(x, y));\n          x[0] *= d3_degrees, x[1] *= d3_degrees;\n        }\n      });\n      return {\n        type: \"Polygon\",\n        coordinates: [ ring ]\n      };\n    }\n    circle.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return circle;\n    };\n    circle.angle = function(x) {\n      if (!arguments.length) return angle;\n      interpolate = d3_geo_circleInterpolate((angle = +x) * d3_radians, precision * d3_radians);\n      return circle;\n    };\n    circle.precision = function(_) {\n      if (!arguments.length) return precision;\n      interpolate = d3_geo_circleInterpolate(angle * d3_radians, (precision = +_) * d3_radians);\n      return circle;\n    };\n    return circle.angle(90);\n  };\n  function d3_geo_circleInterpolate(radius, precision) {\n    var cr = Math.cos(radius), sr = Math.sin(radius);\n    return function(from, to, direction, listener) {\n      var step = direction * precision;\n      if (from != null) {\n        from = d3_geo_circleAngle(cr, from);\n        to = d3_geo_circleAngle(cr, to);\n        if (direction > 0 ? from < to : from > to) from += direction * τ;\n      } else {\n        from = radius + direction * τ;\n        to = radius - .5 * step;\n      }\n      for (var point, t = from; direction > 0 ? t > to : t < to; t -= step) {\n        listener.point((point = d3_geo_spherical([ cr, -sr * Math.cos(t), -sr * Math.sin(t) ]))[0], point[1]);\n      }\n    };\n  }\n  function d3_geo_circleAngle(cr, point) {\n    var a = d3_geo_cartesian(point);\n    a[0] -= cr;\n    d3_geo_cartesianNormalize(a);\n    var angle = d3_acos(-a[1]);\n    return ((-a[2] < 0 ? -angle : angle) + 2 * Math.PI - ε) % (2 * Math.PI);\n  }\n  d3.geo.distance = function(a, b) {\n    var Δλ = (b[0] - a[0]) * d3_radians, φ0 = a[1] * d3_radians, φ1 = b[1] * d3_radians, sinΔλ = Math.sin(Δλ), cosΔλ = Math.cos(Δλ), sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), sinφ1 = Math.sin(φ1), cosφ1 = Math.cos(φ1), t;\n    return Math.atan2(Math.sqrt((t = cosφ1 * sinΔλ) * t + (t = cosφ0 * sinφ1 - sinφ0 * cosφ1 * cosΔλ) * t), sinφ0 * sinφ1 + cosφ0 * cosφ1 * cosΔλ);\n  };\n  d3.geo.graticule = function() {\n    var x1, x0, X1, X0, y1, y0, Y1, Y0, dx = 10, dy = dx, DX = 90, DY = 360, x, y, X, Y, precision = 2.5;\n    function graticule() {\n      return {\n        type: \"MultiLineString\",\n        coordinates: lines()\n      };\n    }\n    function lines() {\n      return d3.range(Math.ceil(X0 / DX) * DX, X1, DX).map(X).concat(d3.range(Math.ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(d3.range(Math.ceil(x0 / dx) * dx, x1, dx).filter(function(x) {\n        return abs(x % DX) > ε;\n      }).map(x)).concat(d3.range(Math.ceil(y0 / dy) * dy, y1, dy).filter(function(y) {\n        return abs(y % DY) > ε;\n      }).map(y));\n    }\n    graticule.lines = function() {\n      return lines().map(function(coordinates) {\n        return {\n          type: \"LineString\",\n          coordinates: coordinates\n        };\n      });\n    };\n    graticule.outline = function() {\n      return {\n        type: \"Polygon\",\n        coordinates: [ X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1)) ]\n      };\n    };\n    graticule.extent = function(_) {\n      if (!arguments.length) return graticule.minorExtent();\n      return graticule.majorExtent(_).minorExtent(_);\n    };\n    graticule.majorExtent = function(_) {\n      if (!arguments.length) return [ [ X0, Y0 ], [ X1, Y1 ] ];\n      X0 = +_[0][0], X1 = +_[1][0];\n      Y0 = +_[0][1], Y1 = +_[1][1];\n      if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n      if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.minorExtent = function(_) {\n      if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n      x0 = +_[0][0], x1 = +_[1][0];\n      y0 = +_[0][1], y1 = +_[1][1];\n      if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n      if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.step = function(_) {\n      if (!arguments.length) return graticule.minorStep();\n      return graticule.majorStep(_).minorStep(_);\n    };\n    graticule.majorStep = function(_) {\n      if (!arguments.length) return [ DX, DY ];\n      DX = +_[0], DY = +_[1];\n      return graticule;\n    };\n    graticule.minorStep = function(_) {\n      if (!arguments.length) return [ dx, dy ];\n      dx = +_[0], dy = +_[1];\n      return graticule;\n    };\n    graticule.precision = function(_) {\n      if (!arguments.length) return precision;\n      precision = +_;\n      x = d3_geo_graticuleX(y0, y1, 90);\n      y = d3_geo_graticuleY(x0, x1, precision);\n      X = d3_geo_graticuleX(Y0, Y1, 90);\n      Y = d3_geo_graticuleY(X0, X1, precision);\n      return graticule;\n    };\n    return graticule.majorExtent([ [ -180, -90 + ε ], [ 180, 90 - ε ] ]).minorExtent([ [ -180, -80 - ε ], [ 180, 80 + ε ] ]);\n  };\n  function d3_geo_graticuleX(y0, y1, dy) {\n    var y = d3.range(y0, y1 - ε, dy).concat(y1);\n    return function(x) {\n      return y.map(function(y) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_geo_graticuleY(x0, x1, dx) {\n    var x = d3.range(x0, x1 - ε, dx).concat(x1);\n    return function(y) {\n      return x.map(function(x) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_source(d) {\n    return d.source;\n  }\n  function d3_target(d) {\n    return d.target;\n  }\n  d3.geo.greatArc = function() {\n    var source = d3_source, source_, target = d3_target, target_;\n    function greatArc() {\n      return {\n        type: \"LineString\",\n        coordinates: [ source_ || source.apply(this, arguments), target_ || target.apply(this, arguments) ]\n      };\n    }\n    greatArc.distance = function() {\n      return d3.geo.distance(source_ || source.apply(this, arguments), target_ || target.apply(this, arguments));\n    };\n    greatArc.source = function(_) {\n      if (!arguments.length) return source;\n      source = _, source_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.target = function(_) {\n      if (!arguments.length) return target;\n      target = _, target_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.precision = function() {\n      return arguments.length ? greatArc : 0;\n    };\n    return greatArc;\n  };\n  d3.geo.interpolate = function(source, target) {\n    return d3_geo_interpolate(source[0] * d3_radians, source[1] * d3_radians, target[0] * d3_radians, target[1] * d3_radians);\n  };\n  function d3_geo_interpolate(x0, y0, x1, y1) {\n    var cy0 = Math.cos(y0), sy0 = Math.sin(y0), cy1 = Math.cos(y1), sy1 = Math.sin(y1), kx0 = cy0 * Math.cos(x0), ky0 = cy0 * Math.sin(x0), kx1 = cy1 * Math.cos(x1), ky1 = cy1 * Math.sin(x1), d = 2 * Math.asin(Math.sqrt(d3_haversin(y1 - y0) + cy0 * cy1 * d3_haversin(x1 - x0))), k = 1 / Math.sin(d);\n    var interpolate = d ? function(t) {\n      var B = Math.sin(t *= d) * k, A = Math.sin(d - t) * k, x = A * kx0 + B * kx1, y = A * ky0 + B * ky1, z = A * sy0 + B * sy1;\n      return [ Math.atan2(y, x) * d3_degrees, Math.atan2(z, Math.sqrt(x * x + y * y)) * d3_degrees ];\n    } : function() {\n      return [ x0 * d3_degrees, y0 * d3_degrees ];\n    };\n    interpolate.distance = d;\n    return interpolate;\n  }\n  d3.geo.length = function(object) {\n    d3_geo_lengthSum = 0;\n    d3.geo.stream(object, d3_geo_length);\n    return d3_geo_lengthSum;\n  };\n  var d3_geo_lengthSum;\n  var d3_geo_length = {\n    sphere: d3_noop,\n    point: d3_noop,\n    lineStart: d3_geo_lengthLineStart,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_lengthLineStart() {\n    var λ0, sinφ0, cosφ0;\n    d3_geo_length.point = function(λ, φ) {\n      λ0 = λ * d3_radians, sinφ0 = Math.sin(φ *= d3_radians), cosφ0 = Math.cos(φ);\n      d3_geo_length.point = nextPoint;\n    };\n    d3_geo_length.lineEnd = function() {\n      d3_geo_length.point = d3_geo_length.lineEnd = d3_noop;\n    };\n    function nextPoint(λ, φ) {\n      var sinφ = Math.sin(φ *= d3_radians), cosφ = Math.cos(φ), t = abs((λ *= d3_radians) - λ0), cosΔλ = Math.cos(t);\n      d3_geo_lengthSum += Math.atan2(Math.sqrt((t = cosφ * Math.sin(t)) * t + (t = cosφ0 * sinφ - sinφ0 * cosφ * cosΔλ) * t), sinφ0 * sinφ + cosφ0 * cosφ * cosΔλ);\n      λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ;\n    }\n  }\n  function d3_geo_azimuthal(scale, angle) {\n    function azimuthal(λ, φ) {\n      var cosλ = Math.cos(λ), cosφ = Math.cos(φ), k = scale(cosλ * cosφ);\n      return [ k * cosφ * Math.sin(λ), k * Math.sin(φ) ];\n    }\n    azimuthal.invert = function(x, y) {\n      var ρ = Math.sqrt(x * x + y * y), c = angle(ρ), sinc = Math.sin(c), cosc = Math.cos(c);\n      return [ Math.atan2(x * sinc, ρ * cosc), Math.asin(ρ && y * sinc / ρ) ];\n    };\n    return azimuthal;\n  }\n  var d3_geo_azimuthalEqualArea = d3_geo_azimuthal(function(cosλcosφ) {\n    return Math.sqrt(2 / (1 + cosλcosφ));\n  }, function(ρ) {\n    return 2 * Math.asin(ρ / 2);\n  });\n  (d3.geo.azimuthalEqualArea = function() {\n    return d3_geo_projection(d3_geo_azimuthalEqualArea);\n  }).raw = d3_geo_azimuthalEqualArea;\n  var d3_geo_azimuthalEquidistant = d3_geo_azimuthal(function(cosλcosφ) {\n    var c = Math.acos(cosλcosφ);\n    return c && c / Math.sin(c);\n  }, d3_identity);\n  (d3.geo.azimuthalEquidistant = function() {\n    return d3_geo_projection(d3_geo_azimuthalEquidistant);\n  }).raw = d3_geo_azimuthalEquidistant;\n  function d3_geo_conicConformal(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), t = function(φ) {\n      return Math.tan(π / 4 + φ / 2);\n    }, n = φ0 === φ1 ? Math.sin(φ0) : Math.log(cosφ0 / Math.cos(φ1)) / Math.log(t(φ1) / t(φ0)), F = cosφ0 * Math.pow(t(φ0), n) / n;\n    if (!n) return d3_geo_mercator;\n    function forward(λ, φ) {\n      if (F > 0) {\n        if (φ < -halfπ + ε) φ = -halfπ + ε;\n      } else {\n        if (φ > halfπ - ε) φ = halfπ - ε;\n      }\n      var ρ = F / Math.pow(t(φ), n);\n      return [ ρ * Math.sin(n * λ), F - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = F - y, ρ = d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y);\n      return [ Math.atan2(x, ρ0_y) / n, 2 * Math.atan(Math.pow(F / ρ, 1 / n)) - halfπ ];\n    };\n    return forward;\n  }\n  (d3.geo.conicConformal = function() {\n    return d3_geo_conic(d3_geo_conicConformal);\n  }).raw = d3_geo_conicConformal;\n  function d3_geo_conicEquidistant(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), n = φ0 === φ1 ? Math.sin(φ0) : (cosφ0 - Math.cos(φ1)) / (φ1 - φ0), G = cosφ0 / n + φ0;\n    if (abs(n) < ε) return d3_geo_equirectangular;\n    function forward(λ, φ) {\n      var ρ = G - φ;\n      return [ ρ * Math.sin(n * λ), G - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = G - y;\n      return [ Math.atan2(x, ρ0_y) / n, G - d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEquidistant = function() {\n    return d3_geo_conic(d3_geo_conicEquidistant);\n  }).raw = d3_geo_conicEquidistant;\n  var d3_geo_gnomonic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / cosλcosφ;\n  }, Math.atan);\n  (d3.geo.gnomonic = function() {\n    return d3_geo_projection(d3_geo_gnomonic);\n  }).raw = d3_geo_gnomonic;\n  function d3_geo_mercator(λ, φ) {\n    return [ λ, Math.log(Math.tan(π / 4 + φ / 2)) ];\n  }\n  d3_geo_mercator.invert = function(x, y) {\n    return [ x, 2 * Math.atan(Math.exp(y)) - halfπ ];\n  };\n  function d3_geo_mercatorProjection(project) {\n    var m = d3_geo_projection(project), scale = m.scale, translate = m.translate, clipExtent = m.clipExtent, clipAuto;\n    m.scale = function() {\n      var v = scale.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.translate = function() {\n      var v = translate.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.clipExtent = function(_) {\n      var v = clipExtent.apply(m, arguments);\n      if (v === m) {\n        if (clipAuto = _ == null) {\n          var k = π * scale(), t = translate();\n          clipExtent([ [ t[0] - k, t[1] - k ], [ t[0] + k, t[1] + k ] ]);\n        }\n      } else if (clipAuto) {\n        v = null;\n      }\n      return v;\n    };\n    return m.clipExtent(null);\n  }\n  (d3.geo.mercator = function() {\n    return d3_geo_mercatorProjection(d3_geo_mercator);\n  }).raw = d3_geo_mercator;\n  var d3_geo_orthographic = d3_geo_azimuthal(function() {\n    return 1;\n  }, Math.asin);\n  (d3.geo.orthographic = function() {\n    return d3_geo_projection(d3_geo_orthographic);\n  }).raw = d3_geo_orthographic;\n  var d3_geo_stereographic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / (1 + cosλcosφ);\n  }, function(ρ) {\n    return 2 * Math.atan(ρ);\n  });\n  (d3.geo.stereographic = function() {\n    return d3_geo_projection(d3_geo_stereographic);\n  }).raw = d3_geo_stereographic;\n  function d3_geo_transverseMercator(λ, φ) {\n    return [ Math.log(Math.tan(π / 4 + φ / 2)), -λ ];\n  }\n  d3_geo_transverseMercator.invert = function(x, y) {\n    return [ -y, 2 * Math.atan(Math.exp(x)) - halfπ ];\n  };\n  (d3.geo.transverseMercator = function() {\n    var projection = d3_geo_mercatorProjection(d3_geo_transverseMercator), center = projection.center, rotate = projection.rotate;\n    projection.center = function(_) {\n      return _ ? center([ -_[1], _[0] ]) : (_ = center(), [ _[1], -_[0] ]);\n    };\n    projection.rotate = function(_) {\n      return _ ? rotate([ _[0], _[1], _.length > 2 ? _[2] + 90 : 90 ]) : (_ = rotate(), \n      [ _[0], _[1], _[2] - 90 ]);\n    };\n    return rotate([ 0, 0, 90 ]);\n  }).raw = d3_geo_transverseMercator;\n  d3.geom = {};\n  function d3_geom_pointX(d) {\n    return d[0];\n  }\n  function d3_geom_pointY(d) {\n    return d[1];\n  }\n  d3.geom.hull = function(vertices) {\n    var x = d3_geom_pointX, y = d3_geom_pointY;\n    if (arguments.length) return hull(vertices);\n    function hull(data) {\n      if (data.length < 3) return [];\n      var fx = d3_functor(x), fy = d3_functor(y), i, n = data.length, points = [], flippedPoints = [];\n      for (i = 0; i < n; i++) {\n        points.push([ +fx.call(this, data[i], i), +fy.call(this, data[i], i), i ]);\n      }\n      points.sort(d3_geom_hullOrder);\n      for (i = 0; i < n; i++) flippedPoints.push([ points[i][0], -points[i][1] ]);\n      var upper = d3_geom_hullUpper(points), lower = d3_geom_hullUpper(flippedPoints);\n      var skipLeft = lower[0] === upper[0], skipRight = lower[lower.length - 1] === upper[upper.length - 1], polygon = [];\n      for (i = upper.length - 1; i >= 0; --i) polygon.push(data[points[upper[i]][2]]);\n      for (i = +skipLeft; i < lower.length - skipRight; ++i) polygon.push(data[points[lower[i]][2]]);\n      return polygon;\n    }\n    hull.x = function(_) {\n      return arguments.length ? (x = _, hull) : x;\n    };\n    hull.y = function(_) {\n      return arguments.length ? (y = _, hull) : y;\n    };\n    return hull;\n  };\n  function d3_geom_hullUpper(points) {\n    var n = points.length, hull = [ 0, 1 ], hs = 2;\n    for (var i = 2; i < n; i++) {\n      while (hs > 1 && d3_cross2d(points[hull[hs - 2]], points[hull[hs - 1]], points[i]) <= 0) --hs;\n      hull[hs++] = i;\n    }\n    return hull.slice(0, hs);\n  }\n  function d3_geom_hullOrder(a, b) {\n    return a[0] - b[0] || a[1] - b[1];\n  }\n  d3.geom.polygon = function(coordinates) {\n    d3_subclass(coordinates, d3_geom_polygonPrototype);\n    return coordinates;\n  };\n  var d3_geom_polygonPrototype = d3.geom.polygon.prototype = [];\n  d3_geom_polygonPrototype.area = function() {\n    var i = -1, n = this.length, a, b = this[n - 1], area = 0;\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      area += a[1] * b[0] - a[0] * b[1];\n    }\n    return area * .5;\n  };\n  d3_geom_polygonPrototype.centroid = function(k) {\n    var i = -1, n = this.length, x = 0, y = 0, a, b = this[n - 1], c;\n    if (!arguments.length) k = -1 / (6 * this.area());\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      c = a[0] * b[1] - b[0] * a[1];\n      x += (a[0] + b[0]) * c;\n      y += (a[1] + b[1]) * c;\n    }\n    return [ x * k, y * k ];\n  };\n  d3_geom_polygonPrototype.clip = function(subject) {\n    var input, closed = d3_geom_polygonClosed(subject), i = -1, n = this.length - d3_geom_polygonClosed(this), j, m, a = this[n - 1], b, c, d;\n    while (++i < n) {\n      input = subject.slice();\n      subject.length = 0;\n      b = this[i];\n      c = input[(m = input.length - closed) - 1];\n      j = -1;\n      while (++j < m) {\n        d = input[j];\n        if (d3_geom_polygonInside(d, a, b)) {\n          if (!d3_geom_polygonInside(c, a, b)) {\n            subject.push(d3_geom_polygonIntersect(c, d, a, b));\n          }\n          subject.push(d);\n        } else if (d3_geom_polygonInside(c, a, b)) {\n          subject.push(d3_geom_polygonIntersect(c, d, a, b));\n        }\n        c = d;\n      }\n      if (closed) subject.push(subject[0]);\n      a = b;\n    }\n    return subject;\n  };\n  function d3_geom_polygonInside(p, a, b) {\n    return (b[0] - a[0]) * (p[1] - a[1]) < (b[1] - a[1]) * (p[0] - a[0]);\n  }\n  function d3_geom_polygonIntersect(c, d, a, b) {\n    var x1 = c[0], x3 = a[0], x21 = d[0] - x1, x43 = b[0] - x3, y1 = c[1], y3 = a[1], y21 = d[1] - y1, y43 = b[1] - y3, ua = (x43 * (y1 - y3) - y43 * (x1 - x3)) / (y43 * x21 - x43 * y21);\n    return [ x1 + ua * x21, y1 + ua * y21 ];\n  }\n  function d3_geom_polygonClosed(coordinates) {\n    var a = coordinates[0], b = coordinates[coordinates.length - 1];\n    return !(a[0] - b[0] || a[1] - b[1]);\n  }\n  var d3_geom_voronoiEdges, d3_geom_voronoiCells, d3_geom_voronoiBeaches, d3_geom_voronoiBeachPool = [], d3_geom_voronoiFirstCircle, d3_geom_voronoiCircles, d3_geom_voronoiCirclePool = [];\n  function d3_geom_voronoiBeach() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.edge = this.site = this.circle = null;\n  }\n  function d3_geom_voronoiCreateBeach(site) {\n    var beach = d3_geom_voronoiBeachPool.pop() || new d3_geom_voronoiBeach();\n    beach.site = site;\n    return beach;\n  }\n  function d3_geom_voronoiDetachBeach(beach) {\n    d3_geom_voronoiDetachCircle(beach);\n    d3_geom_voronoiBeaches.remove(beach);\n    d3_geom_voronoiBeachPool.push(beach);\n    d3_geom_voronoiRedBlackNode(beach);\n  }\n  function d3_geom_voronoiRemoveBeach(beach) {\n    var circle = beach.circle, x = circle.x, y = circle.cy, vertex = {\n      x: x,\n      y: y\n    }, previous = beach.P, next = beach.N, disappearing = [ beach ];\n    d3_geom_voronoiDetachBeach(beach);\n    var lArc = previous;\n    while (lArc.circle && abs(x - lArc.circle.x) < ε && abs(y - lArc.circle.cy) < ε) {\n      previous = lArc.P;\n      disappearing.unshift(lArc);\n      d3_geom_voronoiDetachBeach(lArc);\n      lArc = previous;\n    }\n    disappearing.unshift(lArc);\n    d3_geom_voronoiDetachCircle(lArc);\n    var rArc = next;\n    while (rArc.circle && abs(x - rArc.circle.x) < ε && abs(y - rArc.circle.cy) < ε) {\n      next = rArc.N;\n      disappearing.push(rArc);\n      d3_geom_voronoiDetachBeach(rArc);\n      rArc = next;\n    }\n    disappearing.push(rArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var nArcs = disappearing.length, iArc;\n    for (iArc = 1; iArc < nArcs; ++iArc) {\n      rArc = disappearing[iArc];\n      lArc = disappearing[iArc - 1];\n      d3_geom_voronoiSetEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n    }\n    lArc = disappearing[0];\n    rArc = disappearing[nArcs - 1];\n    rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, rArc.site, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiAddBeach(site) {\n    var x = site.x, directrix = site.y, lArc, rArc, dxl, dxr, node = d3_geom_voronoiBeaches._;\n    while (node) {\n      dxl = d3_geom_voronoiLeftBreakPoint(node, directrix) - x;\n      if (dxl > ε) node = node.L; else {\n        dxr = x - d3_geom_voronoiRightBreakPoint(node, directrix);\n        if (dxr > ε) {\n          if (!node.R) {\n            lArc = node;\n            break;\n          }\n          node = node.R;\n        } else {\n          if (dxl > -ε) {\n            lArc = node.P;\n            rArc = node;\n          } else if (dxr > -ε) {\n            lArc = node;\n            rArc = node.N;\n          } else {\n            lArc = rArc = node;\n          }\n          break;\n        }\n      }\n    }\n    var newArc = d3_geom_voronoiCreateBeach(site);\n    d3_geom_voronoiBeaches.insert(lArc, newArc);\n    if (!lArc && !rArc) return;\n    if (lArc === rArc) {\n      d3_geom_voronoiDetachCircle(lArc);\n      rArc = d3_geom_voronoiCreateBeach(lArc.site);\n      d3_geom_voronoiBeaches.insert(newArc, rArc);\n      newArc.edge = rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      d3_geom_voronoiAttachCircle(lArc);\n      d3_geom_voronoiAttachCircle(rArc);\n      return;\n    }\n    if (!rArc) {\n      newArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      return;\n    }\n    d3_geom_voronoiDetachCircle(lArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var lSite = lArc.site, ax = lSite.x, ay = lSite.y, bx = site.x - ax, by = site.y - ay, rSite = rArc.site, cx = rSite.x - ax, cy = rSite.y - ay, d = 2 * (bx * cy - by * cx), hb = bx * bx + by * by, hc = cx * cx + cy * cy, vertex = {\n      x: (cy * hb - by * hc) / d + ax,\n      y: (bx * hc - cx * hb) / d + ay\n    };\n    d3_geom_voronoiSetEdgeEnd(rArc.edge, lSite, rSite, vertex);\n    newArc.edge = d3_geom_voronoiCreateEdge(lSite, site, null, vertex);\n    rArc.edge = d3_geom_voronoiCreateEdge(site, rSite, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiLeftBreakPoint(arc, directrix) {\n    var site = arc.site, rfocx = site.x, rfocy = site.y, pby2 = rfocy - directrix;\n    if (!pby2) return rfocx;\n    var lArc = arc.P;\n    if (!lArc) return -Infinity;\n    site = lArc.site;\n    var lfocx = site.x, lfocy = site.y, plby2 = lfocy - directrix;\n    if (!plby2) return lfocx;\n    var hl = lfocx - rfocx, aby2 = 1 / pby2 - 1 / plby2, b = hl / plby2;\n    if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n    return (rfocx + lfocx) / 2;\n  }\n  function d3_geom_voronoiRightBreakPoint(arc, directrix) {\n    var rArc = arc.N;\n    if (rArc) return d3_geom_voronoiLeftBreakPoint(rArc, directrix);\n    var site = arc.site;\n    return site.y === directrix ? site.x : Infinity;\n  }\n  function d3_geom_voronoiCell(site) {\n    this.site = site;\n    this.edges = [];\n  }\n  d3_geom_voronoiCell.prototype.prepare = function() {\n    var halfEdges = this.edges, iHalfEdge = halfEdges.length, edge;\n    while (iHalfEdge--) {\n      edge = halfEdges[iHalfEdge].edge;\n      if (!edge.b || !edge.a) halfEdges.splice(iHalfEdge, 1);\n    }\n    halfEdges.sort(d3_geom_voronoiHalfEdgeOrder);\n    return halfEdges.length;\n  };\n  function d3_geom_voronoiCloseCells(extent) {\n    var x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], x2, y2, x3, y3, cells = d3_geom_voronoiCells, iCell = cells.length, cell, iHalfEdge, halfEdges, nHalfEdges, start, end;\n    while (iCell--) {\n      cell = cells[iCell];\n      if (!cell || !cell.prepare()) continue;\n      halfEdges = cell.edges;\n      nHalfEdges = halfEdges.length;\n      iHalfEdge = 0;\n      while (iHalfEdge < nHalfEdges) {\n        end = halfEdges[iHalfEdge].end(), x3 = end.x, y3 = end.y;\n        start = halfEdges[++iHalfEdge % nHalfEdges].start(), x2 = start.x, y2 = start.y;\n        if (abs(x3 - x2) > ε || abs(y3 - y2) > ε) {\n          halfEdges.splice(iHalfEdge, 0, new d3_geom_voronoiHalfEdge(d3_geom_voronoiCreateBorderEdge(cell.site, end, abs(x3 - x0) < ε && y1 - y3 > ε ? {\n            x: x0,\n            y: abs(x2 - x0) < ε ? y2 : y1\n          } : abs(y3 - y1) < ε && x1 - x3 > ε ? {\n            x: abs(y2 - y1) < ε ? x2 : x1,\n            y: y1\n          } : abs(x3 - x1) < ε && y3 - y0 > ε ? {\n            x: x1,\n            y: abs(x2 - x1) < ε ? y2 : y0\n          } : abs(y3 - y0) < ε && x3 - x0 > ε ? {\n            x: abs(y2 - y0) < ε ? x2 : x0,\n            y: y0\n          } : null), cell.site, null));\n          ++nHalfEdges;\n        }\n      }\n    }\n  }\n  function d3_geom_voronoiHalfEdgeOrder(a, b) {\n    return b.angle - a.angle;\n  }\n  function d3_geom_voronoiCircle() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.x = this.y = this.arc = this.site = this.cy = null;\n  }\n  function d3_geom_voronoiAttachCircle(arc) {\n    var lArc = arc.P, rArc = arc.N;\n    if (!lArc || !rArc) return;\n    var lSite = lArc.site, cSite = arc.site, rSite = rArc.site;\n    if (lSite === rSite) return;\n    var bx = cSite.x, by = cSite.y, ax = lSite.x - bx, ay = lSite.y - by, cx = rSite.x - bx, cy = rSite.y - by;\n    var d = 2 * (ax * cy - ay * cx);\n    if (d >= -ε2) return;\n    var ha = ax * ax + ay * ay, hc = cx * cx + cy * cy, x = (cy * ha - ay * hc) / d, y = (ax * hc - cx * ha) / d, cy = y + by;\n    var circle = d3_geom_voronoiCirclePool.pop() || new d3_geom_voronoiCircle();\n    circle.arc = arc;\n    circle.site = cSite;\n    circle.x = x + bx;\n    circle.y = cy + Math.sqrt(x * x + y * y);\n    circle.cy = cy;\n    arc.circle = circle;\n    var before = null, node = d3_geom_voronoiCircles._;\n    while (node) {\n      if (circle.y < node.y || circle.y === node.y && circle.x <= node.x) {\n        if (node.L) node = node.L; else {\n          before = node.P;\n          break;\n        }\n      } else {\n        if (node.R) node = node.R; else {\n          before = node;\n          break;\n        }\n      }\n    }\n    d3_geom_voronoiCircles.insert(before, circle);\n    if (!before) d3_geom_voronoiFirstCircle = circle;\n  }\n  function d3_geom_voronoiDetachCircle(arc) {\n    var circle = arc.circle;\n    if (circle) {\n      if (!circle.P) d3_geom_voronoiFirstCircle = circle.N;\n      d3_geom_voronoiCircles.remove(circle);\n      d3_geom_voronoiCirclePool.push(circle);\n      d3_geom_voronoiRedBlackNode(circle);\n      arc.circle = null;\n    }\n  }\n  function d3_geom_voronoiClipEdges(extent) {\n    var edges = d3_geom_voronoiEdges, clip = d3_geom_clipLine(extent[0][0], extent[0][1], extent[1][0], extent[1][1]), i = edges.length, e;\n    while (i--) {\n      e = edges[i];\n      if (!d3_geom_voronoiConnectEdge(e, extent) || !clip(e) || abs(e.a.x - e.b.x) < ε && abs(e.a.y - e.b.y) < ε) {\n        e.a = e.b = null;\n        edges.splice(i, 1);\n      }\n    }\n  }\n  function d3_geom_voronoiConnectEdge(edge, extent) {\n    var vb = edge.b;\n    if (vb) return true;\n    var va = edge.a, x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], lSite = edge.l, rSite = edge.r, lx = lSite.x, ly = lSite.y, rx = rSite.x, ry = rSite.y, fx = (lx + rx) / 2, fy = (ly + ry) / 2, fm, fb;\n    if (ry === ly) {\n      if (fx < x0 || fx >= x1) return;\n      if (lx > rx) {\n        if (!va) va = {\n          x: fx,\n          y: y0\n        }; else if (va.y >= y1) return;\n        vb = {\n          x: fx,\n          y: y1\n        };\n      } else {\n        if (!va) va = {\n          x: fx,\n          y: y1\n        }; else if (va.y < y0) return;\n        vb = {\n          x: fx,\n          y: y0\n        };\n      }\n    } else {\n      fm = (lx - rx) / (ry - ly);\n      fb = fy - fm * fx;\n      if (fm < -1 || fm > 1) {\n        if (lx > rx) {\n          if (!va) va = {\n            x: (y0 - fb) / fm,\n            y: y0\n          }; else if (va.y >= y1) return;\n          vb = {\n            x: (y1 - fb) / fm,\n            y: y1\n          };\n        } else {\n          if (!va) va = {\n            x: (y1 - fb) / fm,\n            y: y1\n          }; else if (va.y < y0) return;\n          vb = {\n            x: (y0 - fb) / fm,\n            y: y0\n          };\n        }\n      } else {\n        if (ly < ry) {\n          if (!va) va = {\n            x: x0,\n            y: fm * x0 + fb\n          }; else if (va.x >= x1) return;\n          vb = {\n            x: x1,\n            y: fm * x1 + fb\n          };\n        } else {\n          if (!va) va = {\n            x: x1,\n            y: fm * x1 + fb\n          }; else if (va.x < x0) return;\n          vb = {\n            x: x0,\n            y: fm * x0 + fb\n          };\n        }\n      }\n    }\n    edge.a = va;\n    edge.b = vb;\n    return true;\n  }\n  function d3_geom_voronoiEdge(lSite, rSite) {\n    this.l = lSite;\n    this.r = rSite;\n    this.a = this.b = null;\n  }\n  function d3_geom_voronoiCreateEdge(lSite, rSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, rSite);\n    d3_geom_voronoiEdges.push(edge);\n    if (va) d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, va);\n    if (vb) d3_geom_voronoiSetEdgeEnd(edge, rSite, lSite, vb);\n    d3_geom_voronoiCells[lSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, lSite, rSite));\n    d3_geom_voronoiCells[rSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, rSite, lSite));\n    return edge;\n  }\n  function d3_geom_voronoiCreateBorderEdge(lSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, null);\n    edge.a = va;\n    edge.b = vb;\n    d3_geom_voronoiEdges.push(edge);\n    return edge;\n  }\n  function d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, vertex) {\n    if (!edge.a && !edge.b) {\n      edge.a = vertex;\n      edge.l = lSite;\n      edge.r = rSite;\n    } else if (edge.l === rSite) {\n      edge.b = vertex;\n    } else {\n      edge.a = vertex;\n    }\n  }\n  function d3_geom_voronoiHalfEdge(edge, lSite, rSite) {\n    var va = edge.a, vb = edge.b;\n    this.edge = edge;\n    this.site = lSite;\n    this.angle = rSite ? Math.atan2(rSite.y - lSite.y, rSite.x - lSite.x) : edge.l === lSite ? Math.atan2(vb.x - va.x, va.y - vb.y) : Math.atan2(va.x - vb.x, vb.y - va.y);\n  }\n  d3_geom_voronoiHalfEdge.prototype = {\n    start: function() {\n      return this.edge.l === this.site ? this.edge.a : this.edge.b;\n    },\n    end: function() {\n      return this.edge.l === this.site ? this.edge.b : this.edge.a;\n    }\n  };\n  function d3_geom_voronoiRedBlackTree() {\n    this._ = null;\n  }\n  function d3_geom_voronoiRedBlackNode(node) {\n    node.U = node.C = node.L = node.R = node.P = node.N = null;\n  }\n  d3_geom_voronoiRedBlackTree.prototype = {\n    insert: function(after, node) {\n      var parent, grandpa, uncle;\n      if (after) {\n        node.P = after;\n        node.N = after.N;\n        if (after.N) after.N.P = node;\n        after.N = node;\n        if (after.R) {\n          after = after.R;\n          while (after.L) after = after.L;\n          after.L = node;\n        } else {\n          after.R = node;\n        }\n        parent = after;\n      } else if (this._) {\n        after = d3_geom_voronoiRedBlackFirst(this._);\n        node.P = null;\n        node.N = after;\n        after.P = after.L = node;\n        parent = after;\n      } else {\n        node.P = node.N = null;\n        this._ = node;\n        parent = null;\n      }\n      node.L = node.R = null;\n      node.U = parent;\n      node.C = true;\n      after = node;\n      while (parent && parent.C) {\n        grandpa = parent.U;\n        if (parent === grandpa.L) {\n          uncle = grandpa.R;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.R) {\n              d3_geom_voronoiRedBlackRotateLeft(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, grandpa);\n          }\n        } else {\n          uncle = grandpa.L;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.L) {\n              d3_geom_voronoiRedBlackRotateRight(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, grandpa);\n          }\n        }\n        parent = after.U;\n      }\n      this._.C = false;\n    },\n    remove: function(node) {\n      if (node.N) node.N.P = node.P;\n      if (node.P) node.P.N = node.N;\n      node.N = node.P = null;\n      var parent = node.U, sibling, left = node.L, right = node.R, next, red;\n      if (!left) next = right; else if (!right) next = left; else next = d3_geom_voronoiRedBlackFirst(right);\n      if (parent) {\n        if (parent.L === node) parent.L = next; else parent.R = next;\n      } else {\n        this._ = next;\n      }\n      if (left && right) {\n        red = next.C;\n        next.C = node.C;\n        next.L = left;\n        left.U = next;\n        if (next !== right) {\n          parent = next.U;\n          next.U = node.U;\n          node = next.R;\n          parent.L = node;\n          next.R = right;\n          right.U = next;\n        } else {\n          next.U = parent;\n          parent = next;\n          node = next.R;\n        }\n      } else {\n        red = node.C;\n        node = next;\n      }\n      if (node) node.U = parent;\n      if (red) return;\n      if (node && node.C) {\n        node.C = false;\n        return;\n      }\n      do {\n        if (node === this._) break;\n        if (node === parent.L) {\n          sibling = parent.R;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            sibling = parent.R;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.R || !sibling.R.C) {\n              sibling.L.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateRight(this, sibling);\n              sibling = parent.R;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.R.C = false;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            node = this._;\n            break;\n          }\n        } else {\n          sibling = parent.L;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            sibling = parent.L;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.L || !sibling.L.C) {\n              sibling.R.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateLeft(this, sibling);\n              sibling = parent.L;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.L.C = false;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            node = this._;\n            break;\n          }\n        }\n        sibling.C = true;\n        node = parent;\n        parent = parent.U;\n      } while (!node.C);\n      if (node) node.C = false;\n    }\n  };\n  function d3_geom_voronoiRedBlackRotateLeft(tree, node) {\n    var p = node, q = node.R, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.R = q.L;\n    if (p.R) p.R.U = p;\n    q.L = p;\n  }\n  function d3_geom_voronoiRedBlackRotateRight(tree, node) {\n    var p = node, q = node.L, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.L = q.R;\n    if (p.L) p.L.U = p;\n    q.R = p;\n  }\n  function d3_geom_voronoiRedBlackFirst(node) {\n    while (node.L) node = node.L;\n    return node;\n  }\n  function d3_geom_voronoi(sites, bbox) {\n    var site = sites.sort(d3_geom_voronoiVertexOrder).pop(), x0, y0, circle;\n    d3_geom_voronoiEdges = [];\n    d3_geom_voronoiCells = new Array(sites.length);\n    d3_geom_voronoiBeaches = new d3_geom_voronoiRedBlackTree();\n    d3_geom_voronoiCircles = new d3_geom_voronoiRedBlackTree();\n    while (true) {\n      circle = d3_geom_voronoiFirstCircle;\n      if (site && (!circle || site.y < circle.y || site.y === circle.y && site.x < circle.x)) {\n        if (site.x !== x0 || site.y !== y0) {\n          d3_geom_voronoiCells[site.i] = new d3_geom_voronoiCell(site);\n          d3_geom_voronoiAddBeach(site);\n          x0 = site.x, y0 = site.y;\n        }\n        site = sites.pop();\n      } else if (circle) {\n        d3_geom_voronoiRemoveBeach(circle.arc);\n      } else {\n        break;\n      }\n    }\n    if (bbox) d3_geom_voronoiClipEdges(bbox), d3_geom_voronoiCloseCells(bbox);\n    var diagram = {\n      cells: d3_geom_voronoiCells,\n      edges: d3_geom_voronoiEdges\n    };\n    d3_geom_voronoiBeaches = d3_geom_voronoiCircles = d3_geom_voronoiEdges = d3_geom_voronoiCells = null;\n    return diagram;\n  }\n  function d3_geom_voronoiVertexOrder(a, b) {\n    return b.y - a.y || b.x - a.x;\n  }\n  d3.geom.voronoi = function(points) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, fx = x, fy = y, clipExtent = d3_geom_voronoiClipExtent;\n    if (points) return voronoi(points);\n    function voronoi(data) {\n      var polygons = new Array(data.length), x0 = clipExtent[0][0], y0 = clipExtent[0][1], x1 = clipExtent[1][0], y1 = clipExtent[1][1];\n      d3_geom_voronoi(sites(data), clipExtent).cells.forEach(function(cell, i) {\n        var edges = cell.edges, site = cell.site, polygon = polygons[i] = edges.length ? edges.map(function(e) {\n          var s = e.start();\n          return [ s.x, s.y ];\n        }) : site.x >= x0 && site.x <= x1 && site.y >= y0 && site.y <= y1 ? [ [ x0, y1 ], [ x1, y1 ], [ x1, y0 ], [ x0, y0 ] ] : [];\n        polygon.point = data[i];\n      });\n      return polygons;\n    }\n    function sites(data) {\n      return data.map(function(d, i) {\n        return {\n          x: Math.round(fx(d, i) / ε) * ε,\n          y: Math.round(fy(d, i) / ε) * ε,\n          i: i\n        };\n      });\n    }\n    voronoi.links = function(data) {\n      return d3_geom_voronoi(sites(data)).edges.filter(function(edge) {\n        return edge.l && edge.r;\n      }).map(function(edge) {\n        return {\n          source: data[edge.l.i],\n          target: data[edge.r.i]\n        };\n      });\n    };\n    voronoi.triangles = function(data) {\n      var triangles = [];\n      d3_geom_voronoi(sites(data)).cells.forEach(function(cell, i) {\n        var site = cell.site, edges = cell.edges.sort(d3_geom_voronoiHalfEdgeOrder), j = -1, m = edges.length, e0, s0, e1 = edges[m - 1].edge, s1 = e1.l === site ? e1.r : e1.l;\n        while (++j < m) {\n          e0 = e1;\n          s0 = s1;\n          e1 = edges[j].edge;\n          s1 = e1.l === site ? e1.r : e1.l;\n          if (i < s0.i && i < s1.i && d3_geom_voronoiTriangleArea(site, s0, s1) < 0) {\n            triangles.push([ data[i], data[s0.i], data[s1.i] ]);\n          }\n        }\n      });\n      return triangles;\n    };\n    voronoi.x = function(_) {\n      return arguments.length ? (fx = d3_functor(x = _), voronoi) : x;\n    };\n    voronoi.y = function(_) {\n      return arguments.length ? (fy = d3_functor(y = _), voronoi) : y;\n    };\n    voronoi.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent;\n      clipExtent = _ == null ? d3_geom_voronoiClipExtent : _;\n      return voronoi;\n    };\n    voronoi.size = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent && clipExtent[1];\n      return voronoi.clipExtent(_ && [ [ 0, 0 ], _ ]);\n    };\n    return voronoi;\n  };\n  var d3_geom_voronoiClipExtent = [ [ -1e6, -1e6 ], [ 1e6, 1e6 ] ];\n  function d3_geom_voronoiTriangleArea(a, b, c) {\n    return (a.x - c.x) * (b.y - a.y) - (a.x - b.x) * (c.y - a.y);\n  }\n  d3.geom.delaunay = function(vertices) {\n    return d3.geom.voronoi().triangles(vertices);\n  };\n  d3.geom.quadtree = function(points, x1, y1, x2, y2) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, compat;\n    if (compat = arguments.length) {\n      x = d3_geom_quadtreeCompatX;\n      y = d3_geom_quadtreeCompatY;\n      if (compat === 3) {\n        y2 = y1;\n        x2 = x1;\n        y1 = x1 = 0;\n      }\n      return quadtree(points);\n    }\n    function quadtree(data) {\n      var d, fx = d3_functor(x), fy = d3_functor(y), xs, ys, i, n, x1_, y1_, x2_, y2_;\n      if (x1 != null) {\n        x1_ = x1, y1_ = y1, x2_ = x2, y2_ = y2;\n      } else {\n        x2_ = y2_ = -(x1_ = y1_ = Infinity);\n        xs = [], ys = [];\n        n = data.length;\n        if (compat) for (i = 0; i < n; ++i) {\n          d = data[i];\n          if (d.x < x1_) x1_ = d.x;\n          if (d.y < y1_) y1_ = d.y;\n          if (d.x > x2_) x2_ = d.x;\n          if (d.y > y2_) y2_ = d.y;\n          xs.push(d.x);\n          ys.push(d.y);\n        } else for (i = 0; i < n; ++i) {\n          var x_ = +fx(d = data[i], i), y_ = +fy(d, i);\n          if (x_ < x1_) x1_ = x_;\n          if (y_ < y1_) y1_ = y_;\n          if (x_ > x2_) x2_ = x_;\n          if (y_ > y2_) y2_ = y_;\n          xs.push(x_);\n          ys.push(y_);\n        }\n      }\n      var dx = x2_ - x1_, dy = y2_ - y1_;\n      if (dx > dy) y2_ = y1_ + dx; else x2_ = x1_ + dy;\n      function insert(n, d, x, y, x1, y1, x2, y2) {\n        if (isNaN(x) || isNaN(y)) return;\n        if (n.leaf) {\n          var nx = n.x, ny = n.y;\n          if (nx != null) {\n            if (abs(nx - x) + abs(ny - y) < .01) {\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            } else {\n              var nPoint = n.point;\n              n.x = n.y = n.point = null;\n              insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            }\n          } else {\n            n.x = x, n.y = y, n.point = d;\n          }\n        } else {\n          insertChild(n, d, x, y, x1, y1, x2, y2);\n        }\n      }\n      function insertChild(n, d, x, y, x1, y1, x2, y2) {\n        var xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym, i = below << 1 | right;\n        n.leaf = false;\n        n = n.nodes[i] || (n.nodes[i] = d3_geom_quadtreeNode());\n        if (right) x1 = xm; else x2 = xm;\n        if (below) y1 = ym; else y2 = ym;\n        insert(n, d, x, y, x1, y1, x2, y2);\n      }\n      var root = d3_geom_quadtreeNode();\n      root.add = function(d) {\n        insert(root, d, +fx(d, ++i), +fy(d, i), x1_, y1_, x2_, y2_);\n      };\n      root.visit = function(f) {\n        d3_geom_quadtreeVisit(f, root, x1_, y1_, x2_, y2_);\n      };\n      root.find = function(point) {\n        return d3_geom_quadtreeFind(root, point[0], point[1], x1_, y1_, x2_, y2_);\n      };\n      i = -1;\n      if (x1 == null) {\n        while (++i < n) {\n          insert(root, data[i], xs[i], ys[i], x1_, y1_, x2_, y2_);\n        }\n        --i;\n      } else data.forEach(root.add);\n      xs = ys = data = d = null;\n      return root;\n    }\n    quadtree.x = function(_) {\n      return arguments.length ? (x = _, quadtree) : x;\n    };\n    quadtree.y = function(_) {\n      return arguments.length ? (y = _, quadtree) : y;\n    };\n    quadtree.extent = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ [ x1, y1 ], [ x2, y2 ] ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = +_[0][0], y1 = +_[0][1], x2 = +_[1][0], \n      y2 = +_[1][1];\n      return quadtree;\n    };\n    quadtree.size = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ x2 - x1, y2 - y1 ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = y1 = 0, x2 = +_[0], y2 = +_[1];\n      return quadtree;\n    };\n    return quadtree;\n  };\n  function d3_geom_quadtreeCompatX(d) {\n    return d.x;\n  }\n  function d3_geom_quadtreeCompatY(d) {\n    return d.y;\n  }\n  function d3_geom_quadtreeNode() {\n    return {\n      leaf: true,\n      nodes: [],\n      point: null,\n      x: null,\n      y: null\n    };\n  }\n  function d3_geom_quadtreeVisit(f, node, x1, y1, x2, y2) {\n    if (!f(node, x1, y1, x2, y2)) {\n      var sx = (x1 + x2) * .5, sy = (y1 + y2) * .5, children = node.nodes;\n      if (children[0]) d3_geom_quadtreeVisit(f, children[0], x1, y1, sx, sy);\n      if (children[1]) d3_geom_quadtreeVisit(f, children[1], sx, y1, x2, sy);\n      if (children[2]) d3_geom_quadtreeVisit(f, children[2], x1, sy, sx, y2);\n      if (children[3]) d3_geom_quadtreeVisit(f, children[3], sx, sy, x2, y2);\n    }\n  }\n  function d3_geom_quadtreeFind(root, x, y, x0, y0, x3, y3) {\n    var minDistance2 = Infinity, closestPoint;\n    (function find(node, x1, y1, x2, y2) {\n      if (x1 > x3 || y1 > y3 || x2 < x0 || y2 < y0) return;\n      if (point = node.point) {\n        var point, dx = x - node.x, dy = y - node.y, distance2 = dx * dx + dy * dy;\n        if (distance2 < minDistance2) {\n          var distance = Math.sqrt(minDistance2 = distance2);\n          x0 = x - distance, y0 = y - distance;\n          x3 = x + distance, y3 = y + distance;\n          closestPoint = point;\n        }\n      }\n      var children = node.nodes, xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym;\n      for (var i = below << 1 | right, j = i + 4; i < j; ++i) {\n        if (node = children[i & 3]) switch (i & 3) {\n         case 0:\n          find(node, x1, y1, xm, ym);\n          break;\n\n         case 1:\n          find(node, xm, y1, x2, ym);\n          break;\n\n         case 2:\n          find(node, x1, ym, xm, y2);\n          break;\n\n         case 3:\n          find(node, xm, ym, x2, y2);\n          break;\n        }\n      }\n    })(root, x0, y0, x3, y3);\n    return closestPoint;\n  }\n  d3.interpolateRgb = d3_interpolateRgb;\n  function d3_interpolateRgb(a, b) {\n    a = d3.rgb(a);\n    b = d3.rgb(b);\n    var ar = a.r, ag = a.g, ab = a.b, br = b.r - ar, bg = b.g - ag, bb = b.b - ab;\n    return function(t) {\n      return \"#\" + d3_rgb_hex(Math.round(ar + br * t)) + d3_rgb_hex(Math.round(ag + bg * t)) + d3_rgb_hex(Math.round(ab + bb * t));\n    };\n  }\n  d3.interpolateObject = d3_interpolateObject;\n  function d3_interpolateObject(a, b) {\n    var i = {}, c = {}, k;\n    for (k in a) {\n      if (k in b) {\n        i[k] = d3_interpolate(a[k], b[k]);\n      } else {\n        c[k] = a[k];\n      }\n    }\n    for (k in b) {\n      if (!(k in a)) {\n        c[k] = b[k];\n      }\n    }\n    return function(t) {\n      for (k in i) c[k] = i[k](t);\n      return c;\n    };\n  }\n  d3.interpolateNumber = d3_interpolateNumber;\n  function d3_interpolateNumber(a, b) {\n    a = +a, b = +b;\n    return function(t) {\n      return a * (1 - t) + b * t;\n    };\n  }\n  d3.interpolateString = d3_interpolateString;\n  function d3_interpolateString(a, b) {\n    var bi = d3_interpolate_numberA.lastIndex = d3_interpolate_numberB.lastIndex = 0, am, bm, bs, i = -1, s = [], q = [];\n    a = a + \"\", b = b + \"\";\n    while ((am = d3_interpolate_numberA.exec(a)) && (bm = d3_interpolate_numberB.exec(b))) {\n      if ((bs = bm.index) > bi) {\n        bs = b.slice(bi, bs);\n        if (s[i]) s[i] += bs; else s[++i] = bs;\n      }\n      if ((am = am[0]) === (bm = bm[0])) {\n        if (s[i]) s[i] += bm; else s[++i] = bm;\n      } else {\n        s[++i] = null;\n        q.push({\n          i: i,\n          x: d3_interpolateNumber(am, bm)\n        });\n      }\n      bi = d3_interpolate_numberB.lastIndex;\n    }\n    if (bi < b.length) {\n      bs = b.slice(bi);\n      if (s[i]) s[i] += bs; else s[++i] = bs;\n    }\n    return s.length < 2 ? q[0] ? (b = q[0].x, function(t) {\n      return b(t) + \"\";\n    }) : function() {\n      return b;\n    } : (b = q.length, function(t) {\n      for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    });\n  }\n  var d3_interpolate_numberA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g, d3_interpolate_numberB = new RegExp(d3_interpolate_numberA.source, \"g\");\n  d3.interpolate = d3_interpolate;\n  function d3_interpolate(a, b) {\n    var i = d3.interpolators.length, f;\n    while (--i >= 0 && !(f = d3.interpolators[i](a, b))) ;\n    return f;\n  }\n  d3.interpolators = [ function(a, b) {\n    var t = typeof b;\n    return (t === \"string\" ? d3_rgb_names.has(b.toLowerCase()) || /^(#|rgb\\(|hsl\\()/i.test(b) ? d3_interpolateRgb : d3_interpolateString : b instanceof d3_color ? d3_interpolateRgb : Array.isArray(b) ? d3_interpolateArray : t === \"object\" && isNaN(b) ? d3_interpolateObject : d3_interpolateNumber)(a, b);\n  } ];\n  d3.interpolateArray = d3_interpolateArray;\n  function d3_interpolateArray(a, b) {\n    var x = [], c = [], na = a.length, nb = b.length, n0 = Math.min(a.length, b.length), i;\n    for (i = 0; i < n0; ++i) x.push(d3_interpolate(a[i], b[i]));\n    for (;i < na; ++i) c[i] = a[i];\n    for (;i < nb; ++i) c[i] = b[i];\n    return function(t) {\n      for (i = 0; i < n0; ++i) c[i] = x[i](t);\n      return c;\n    };\n  }\n  var d3_ease_default = function() {\n    return d3_identity;\n  };\n  var d3_ease = d3.map({\n    linear: d3_ease_default,\n    poly: d3_ease_poly,\n    quad: function() {\n      return d3_ease_quad;\n    },\n    cubic: function() {\n      return d3_ease_cubic;\n    },\n    sin: function() {\n      return d3_ease_sin;\n    },\n    exp: function() {\n      return d3_ease_exp;\n    },\n    circle: function() {\n      return d3_ease_circle;\n    },\n    elastic: d3_ease_elastic,\n    back: d3_ease_back,\n    bounce: function() {\n      return d3_ease_bounce;\n    }\n  });\n  var d3_ease_mode = d3.map({\n    \"in\": d3_identity,\n    out: d3_ease_reverse,\n    \"in-out\": d3_ease_reflect,\n    \"out-in\": function(f) {\n      return d3_ease_reflect(d3_ease_reverse(f));\n    }\n  });\n  d3.ease = function(name) {\n    var i = name.indexOf(\"-\"), t = i >= 0 ? name.slice(0, i) : name, m = i >= 0 ? name.slice(i + 1) : \"in\";\n    t = d3_ease.get(t) || d3_ease_default;\n    m = d3_ease_mode.get(m) || d3_identity;\n    return d3_ease_clamp(m(t.apply(null, d3_arraySlice.call(arguments, 1))));\n  };\n  function d3_ease_clamp(f) {\n    return function(t) {\n      return t <= 0 ? 0 : t >= 1 ? 1 : f(t);\n    };\n  }\n  function d3_ease_reverse(f) {\n    return function(t) {\n      return 1 - f(1 - t);\n    };\n  }\n  function d3_ease_reflect(f) {\n    return function(t) {\n      return .5 * (t < .5 ? f(2 * t) : 2 - f(2 - 2 * t));\n    };\n  }\n  function d3_ease_quad(t) {\n    return t * t;\n  }\n  function d3_ease_cubic(t) {\n    return t * t * t;\n  }\n  function d3_ease_cubicInOut(t) {\n    if (t <= 0) return 0;\n    if (t >= 1) return 1;\n    var t2 = t * t, t3 = t2 * t;\n    return 4 * (t < .5 ? t3 : 3 * (t - t2) + t3 - .75);\n  }\n  function d3_ease_poly(e) {\n    return function(t) {\n      return Math.pow(t, e);\n    };\n  }\n  function d3_ease_sin(t) {\n    return 1 - Math.cos(t * halfπ);\n  }\n  function d3_ease_exp(t) {\n    return Math.pow(2, 10 * (t - 1));\n  }\n  function d3_ease_circle(t) {\n    return 1 - Math.sqrt(1 - t * t);\n  }\n  function d3_ease_elastic(a, p) {\n    var s;\n    if (arguments.length < 2) p = .45;\n    if (arguments.length) s = p / τ * Math.asin(1 / a); else a = 1, s = p / 4;\n    return function(t) {\n      return 1 + a * Math.pow(2, -10 * t) * Math.sin((t - s) * τ / p);\n    };\n  }\n  function d3_ease_back(s) {\n    if (!s) s = 1.70158;\n    return function(t) {\n      return t * t * ((s + 1) * t - s);\n    };\n  }\n  function d3_ease_bounce(t) {\n    return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;\n  }\n  d3.interpolateHcl = d3_interpolateHcl;\n  function d3_interpolateHcl(a, b) {\n    a = d3.hcl(a);\n    b = d3.hcl(b);\n    var ah = a.h, ac = a.c, al = a.l, bh = b.h - ah, bc = b.c - ac, bl = b.l - al;\n    if (isNaN(bc)) bc = 0, ac = isNaN(ac) ? b.c : ac;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hcl_lab(ah + bh * t, ac + bc * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateHsl = d3_interpolateHsl;\n  function d3_interpolateHsl(a, b) {\n    a = d3.hsl(a);\n    b = d3.hsl(b);\n    var ah = a.h, as = a.s, al = a.l, bh = b.h - ah, bs = b.s - as, bl = b.l - al;\n    if (isNaN(bs)) bs = 0, as = isNaN(as) ? b.s : as;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hsl_rgb(ah + bh * t, as + bs * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateLab = d3_interpolateLab;\n  function d3_interpolateLab(a, b) {\n    a = d3.lab(a);\n    b = d3.lab(b);\n    var al = a.l, aa = a.a, ab = a.b, bl = b.l - al, ba = b.a - aa, bb = b.b - ab;\n    return function(t) {\n      return d3_lab_rgb(al + bl * t, aa + ba * t, ab + bb * t) + \"\";\n    };\n  }\n  d3.interpolateRound = d3_interpolateRound;\n  function d3_interpolateRound(a, b) {\n    b -= a;\n    return function(t) {\n      return Math.round(a + b * t);\n    };\n  }\n  d3.transform = function(string) {\n    var g = d3_document.createElementNS(d3.ns.prefix.svg, \"g\");\n    return (d3.transform = function(string) {\n      if (string != null) {\n        g.setAttribute(\"transform\", string);\n        var t = g.transform.baseVal.consolidate();\n      }\n      return new d3_transform(t ? t.matrix : d3_transformIdentity);\n    })(string);\n  };\n  function d3_transform(m) {\n    var r0 = [ m.a, m.b ], r1 = [ m.c, m.d ], kx = d3_transformNormalize(r0), kz = d3_transformDot(r0, r1), ky = d3_transformNormalize(d3_transformCombine(r1, r0, -kz)) || 0;\n    if (r0[0] * r1[1] < r1[0] * r0[1]) {\n      r0[0] *= -1;\n      r0[1] *= -1;\n      kx *= -1;\n      kz *= -1;\n    }\n    this.rotate = (kx ? Math.atan2(r0[1], r0[0]) : Math.atan2(-r1[0], r1[1])) * d3_degrees;\n    this.translate = [ m.e, m.f ];\n    this.scale = [ kx, ky ];\n    this.skew = ky ? Math.atan2(kz, ky) * d3_degrees : 0;\n  }\n  d3_transform.prototype.toString = function() {\n    return \"translate(\" + this.translate + \")rotate(\" + this.rotate + \")skewX(\" + this.skew + \")scale(\" + this.scale + \")\";\n  };\n  function d3_transformDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1];\n  }\n  function d3_transformNormalize(a) {\n    var k = Math.sqrt(d3_transformDot(a, a));\n    if (k) {\n      a[0] /= k;\n      a[1] /= k;\n    }\n    return k;\n  }\n  function d3_transformCombine(a, b, k) {\n    a[0] += k * b[0];\n    a[1] += k * b[1];\n    return a;\n  }\n  var d3_transformIdentity = {\n    a: 1,\n    b: 0,\n    c: 0,\n    d: 1,\n    e: 0,\n    f: 0\n  };\n  d3.interpolateTransform = d3_interpolateTransform;\n  function d3_interpolateTransformPop(s) {\n    return s.length ? s.pop() + \",\" : \"\";\n  }\n  function d3_interpolateTranslate(ta, tb, s, q) {\n    if (ta[0] !== tb[0] || ta[1] !== tb[1]) {\n      var i = s.push(\"translate(\", null, \",\", null, \")\");\n      q.push({\n        i: i - 4,\n        x: d3_interpolateNumber(ta[0], tb[0])\n      }, {\n        i: i - 2,\n        x: d3_interpolateNumber(ta[1], tb[1])\n      });\n    } else if (tb[0] || tb[1]) {\n      s.push(\"translate(\" + tb + \")\");\n    }\n  }\n  function d3_interpolateRotate(ra, rb, s, q) {\n    if (ra !== rb) {\n      if (ra - rb > 180) rb += 360; else if (rb - ra > 180) ra += 360;\n      q.push({\n        i: s.push(d3_interpolateTransformPop(s) + \"rotate(\", null, \")\") - 2,\n        x: d3_interpolateNumber(ra, rb)\n      });\n    } else if (rb) {\n      s.push(d3_interpolateTransformPop(s) + \"rotate(\" + rb + \")\");\n    }\n  }\n  function d3_interpolateSkew(wa, wb, s, q) {\n    if (wa !== wb) {\n      q.push({\n        i: s.push(d3_interpolateTransformPop(s) + \"skewX(\", null, \")\") - 2,\n        x: d3_interpolateNumber(wa, wb)\n      });\n    } else if (wb) {\n      s.push(d3_interpolateTransformPop(s) + \"skewX(\" + wb + \")\");\n    }\n  }\n  function d3_interpolateScale(ka, kb, s, q) {\n    if (ka[0] !== kb[0] || ka[1] !== kb[1]) {\n      var i = s.push(d3_interpolateTransformPop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({\n        i: i - 4,\n        x: d3_interpolateNumber(ka[0], kb[0])\n      }, {\n        i: i - 2,\n        x: d3_interpolateNumber(ka[1], kb[1])\n      });\n    } else if (kb[0] !== 1 || kb[1] !== 1) {\n      s.push(d3_interpolateTransformPop(s) + \"scale(\" + kb + \")\");\n    }\n  }\n  function d3_interpolateTransform(a, b) {\n    var s = [], q = [];\n    a = d3.transform(a), b = d3.transform(b);\n    d3_interpolateTranslate(a.translate, b.translate, s, q);\n    d3_interpolateRotate(a.rotate, b.rotate, s, q);\n    d3_interpolateSkew(a.skew, b.skew, s, q);\n    d3_interpolateScale(a.scale, b.scale, s, q);\n    a = b = null;\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  }\n  function d3_uninterpolateNumber(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return (x - a) / b;\n    };\n  }\n  function d3_uninterpolateClamp(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return Math.max(0, Math.min(1, (x - a) / b));\n    };\n  }\n  d3.layout = {};\n  d3.layout.bundle = function() {\n    return function(links) {\n      var paths = [], i = -1, n = links.length;\n      while (++i < n) paths.push(d3_layout_bundlePath(links[i]));\n      return paths;\n    };\n  };\n  function d3_layout_bundlePath(link) {\n    var start = link.source, end = link.target, lca = d3_layout_bundleLeastCommonAncestor(start, end), points = [ start ];\n    while (start !== lca) {\n      start = start.parent;\n      points.push(start);\n    }\n    var k = points.length;\n    while (end !== lca) {\n      points.splice(k, 0, end);\n      end = end.parent;\n    }\n    return points;\n  }\n  function d3_layout_bundleAncestors(node) {\n    var ancestors = [], parent = node.parent;\n    while (parent != null) {\n      ancestors.push(node);\n      node = parent;\n      parent = parent.parent;\n    }\n    ancestors.push(node);\n    return ancestors;\n  }\n  function d3_layout_bundleLeastCommonAncestor(a, b) {\n    if (a === b) return a;\n    var aNodes = d3_layout_bundleAncestors(a), bNodes = d3_layout_bundleAncestors(b), aNode = aNodes.pop(), bNode = bNodes.pop(), sharedNode = null;\n    while (aNode === bNode) {\n      sharedNode = aNode;\n      aNode = aNodes.pop();\n      bNode = bNodes.pop();\n    }\n    return sharedNode;\n  }\n  d3.layout.chord = function() {\n    var chord = {}, chords, groups, matrix, n, padding = 0, sortGroups, sortSubgroups, sortChords;\n    function relayout() {\n      var subgroups = {}, groupSums = [], groupIndex = d3.range(n), subgroupIndex = [], k, x, x0, i, j;\n      chords = [];\n      groups = [];\n      k = 0, i = -1;\n      while (++i < n) {\n        x = 0, j = -1;\n        while (++j < n) {\n          x += matrix[i][j];\n        }\n        groupSums.push(x);\n        subgroupIndex.push(d3.range(n));\n        k += x;\n      }\n      if (sortGroups) {\n        groupIndex.sort(function(a, b) {\n          return sortGroups(groupSums[a], groupSums[b]);\n        });\n      }\n      if (sortSubgroups) {\n        subgroupIndex.forEach(function(d, i) {\n          d.sort(function(a, b) {\n            return sortSubgroups(matrix[i][a], matrix[i][b]);\n          });\n        });\n      }\n      k = (τ - padding * n) / k;\n      x = 0, i = -1;\n      while (++i < n) {\n        x0 = x, j = -1;\n        while (++j < n) {\n          var di = groupIndex[i], dj = subgroupIndex[di][j], v = matrix[di][dj], a0 = x, a1 = x += v * k;\n          subgroups[di + \"-\" + dj] = {\n            index: di,\n            subindex: dj,\n            startAngle: a0,\n            endAngle: a1,\n            value: v\n          };\n        }\n        groups[di] = {\n          index: di,\n          startAngle: x0,\n          endAngle: x,\n          value: groupSums[di]\n        };\n        x += padding;\n      }\n      i = -1;\n      while (++i < n) {\n        j = i - 1;\n        while (++j < n) {\n          var source = subgroups[i + \"-\" + j], target = subgroups[j + \"-\" + i];\n          if (source.value || target.value) {\n            chords.push(source.value < target.value ? {\n              source: target,\n              target: source\n            } : {\n              source: source,\n              target: target\n            });\n          }\n        }\n      }\n      if (sortChords) resort();\n    }\n    function resort() {\n      chords.sort(function(a, b) {\n        return sortChords((a.source.value + a.target.value) / 2, (b.source.value + b.target.value) / 2);\n      });\n    }\n    chord.matrix = function(x) {\n      if (!arguments.length) return matrix;\n      n = (matrix = x) && matrix.length;\n      chords = groups = null;\n      return chord;\n    };\n    chord.padding = function(x) {\n      if (!arguments.length) return padding;\n      padding = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortGroups = function(x) {\n      if (!arguments.length) return sortGroups;\n      sortGroups = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortSubgroups = function(x) {\n      if (!arguments.length) return sortSubgroups;\n      sortSubgroups = x;\n      chords = null;\n      return chord;\n    };\n    chord.sortChords = function(x) {\n      if (!arguments.length) return sortChords;\n      sortChords = x;\n      if (chords) resort();\n      return chord;\n    };\n    chord.chords = function() {\n      if (!chords) relayout();\n      return chords;\n    };\n    chord.groups = function() {\n      if (!groups) relayout();\n      return groups;\n    };\n    return chord;\n  };\n  d3.layout.force = function() {\n    var force = {}, event = d3.dispatch(\"start\", \"tick\", \"end\"), timer, size = [ 1, 1 ], drag, alpha, friction = .9, linkDistance = d3_layout_forceLinkDistance, linkStrength = d3_layout_forceLinkStrength, charge = -30, chargeDistance2 = d3_layout_forceChargeDistance2, gravity = .1, theta2 = .64, nodes = [], links = [], distances, strengths, charges;\n    function repulse(node) {\n      return function(quad, x1, _, x2) {\n        if (quad.point !== node) {\n          var dx = quad.cx - node.x, dy = quad.cy - node.y, dw = x2 - x1, dn = dx * dx + dy * dy;\n          if (dw * dw / theta2 < dn) {\n            if (dn < chargeDistance2) {\n              var k = quad.charge / dn;\n              node.px -= dx * k;\n              node.py -= dy * k;\n            }\n            return true;\n          }\n          if (quad.point && dn && dn < chargeDistance2) {\n            var k = quad.pointCharge / dn;\n            node.px -= dx * k;\n            node.py -= dy * k;\n          }\n        }\n        return !quad.charge;\n      };\n    }\n    force.tick = function() {\n      if ((alpha *= .99) < .005) {\n        timer = null;\n        event.end({\n          type: \"end\",\n          alpha: alpha = 0\n        });\n        return true;\n      }\n      var n = nodes.length, m = links.length, q, i, o, s, t, l, k, x, y;\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        s = o.source;\n        t = o.target;\n        x = t.x - s.x;\n        y = t.y - s.y;\n        if (l = x * x + y * y) {\n          l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;\n          x *= l;\n          y *= l;\n          t.x -= x * (k = s.weight + t.weight ? s.weight / (s.weight + t.weight) : .5);\n          t.y -= y * k;\n          s.x += x * (k = 1 - k);\n          s.y += y * k;\n        }\n      }\n      if (k = alpha * gravity) {\n        x = size[0] / 2;\n        y = size[1] / 2;\n        i = -1;\n        if (k) while (++i < n) {\n          o = nodes[i];\n          o.x += (x - o.x) * k;\n          o.y += (y - o.y) * k;\n        }\n      }\n      if (charge) {\n        d3_layout_forceAccumulate(q = d3.geom.quadtree(nodes), alpha, charges);\n        i = -1;\n        while (++i < n) {\n          if (!(o = nodes[i]).fixed) {\n            q.visit(repulse(o));\n          }\n        }\n      }\n      i = -1;\n      while (++i < n) {\n        o = nodes[i];\n        if (o.fixed) {\n          o.x = o.px;\n          o.y = o.py;\n        } else {\n          o.x -= (o.px - (o.px = o.x)) * friction;\n          o.y -= (o.py - (o.py = o.y)) * friction;\n        }\n      }\n      event.tick({\n        type: \"tick\",\n        alpha: alpha\n      });\n    };\n    force.nodes = function(x) {\n      if (!arguments.length) return nodes;\n      nodes = x;\n      return force;\n    };\n    force.links = function(x) {\n      if (!arguments.length) return links;\n      links = x;\n      return force;\n    };\n    force.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return force;\n    };\n    force.linkDistance = function(x) {\n      if (!arguments.length) return linkDistance;\n      linkDistance = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.distance = force.linkDistance;\n    force.linkStrength = function(x) {\n      if (!arguments.length) return linkStrength;\n      linkStrength = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.friction = function(x) {\n      if (!arguments.length) return friction;\n      friction = +x;\n      return force;\n    };\n    force.charge = function(x) {\n      if (!arguments.length) return charge;\n      charge = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.chargeDistance = function(x) {\n      if (!arguments.length) return Math.sqrt(chargeDistance2);\n      chargeDistance2 = x * x;\n      return force;\n    };\n    force.gravity = function(x) {\n      if (!arguments.length) return gravity;\n      gravity = +x;\n      return force;\n    };\n    force.theta = function(x) {\n      if (!arguments.length) return Math.sqrt(theta2);\n      theta2 = x * x;\n      return force;\n    };\n    force.alpha = function(x) {\n      if (!arguments.length) return alpha;\n      x = +x;\n      if (alpha) {\n        if (x > 0) {\n          alpha = x;\n        } else {\n          timer.c = null, timer.t = NaN, timer = null;\n          event.end({\n            type: \"end\",\n            alpha: alpha = 0\n          });\n        }\n      } else if (x > 0) {\n        event.start({\n          type: \"start\",\n          alpha: alpha = x\n        });\n        timer = d3_timer(force.tick);\n      }\n      return force;\n    };\n    force.start = function() {\n      var i, n = nodes.length, m = links.length, w = size[0], h = size[1], neighbors, o;\n      for (i = 0; i < n; ++i) {\n        (o = nodes[i]).index = i;\n        o.weight = 0;\n      }\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        if (typeof o.source == \"number\") o.source = nodes[o.source];\n        if (typeof o.target == \"number\") o.target = nodes[o.target];\n        ++o.source.weight;\n        ++o.target.weight;\n      }\n      for (i = 0; i < n; ++i) {\n        o = nodes[i];\n        if (isNaN(o.x)) o.x = position(\"x\", w);\n        if (isNaN(o.y)) o.y = position(\"y\", h);\n        if (isNaN(o.px)) o.px = o.x;\n        if (isNaN(o.py)) o.py = o.y;\n      }\n      distances = [];\n      if (typeof linkDistance === \"function\") for (i = 0; i < m; ++i) distances[i] = +linkDistance.call(this, links[i], i); else for (i = 0; i < m; ++i) distances[i] = linkDistance;\n      strengths = [];\n      if (typeof linkStrength === \"function\") for (i = 0; i < m; ++i) strengths[i] = +linkStrength.call(this, links[i], i); else for (i = 0; i < m; ++i) strengths[i] = linkStrength;\n      charges = [];\n      if (typeof charge === \"function\") for (i = 0; i < n; ++i) charges[i] = +charge.call(this, nodes[i], i); else for (i = 0; i < n; ++i) charges[i] = charge;\n      function position(dimension, size) {\n        if (!neighbors) {\n          neighbors = new Array(n);\n          for (j = 0; j < n; ++j) {\n            neighbors[j] = [];\n          }\n          for (j = 0; j < m; ++j) {\n            var o = links[j];\n            neighbors[o.source.index].push(o.target);\n            neighbors[o.target.index].push(o.source);\n          }\n        }\n        var candidates = neighbors[i], j = -1, l = candidates.length, x;\n        while (++j < l) if (!isNaN(x = candidates[j][dimension])) return x;\n        return Math.random() * size;\n      }\n      return force.resume();\n    };\n    force.resume = function() {\n      return force.alpha(.1);\n    };\n    force.stop = function() {\n      return force.alpha(0);\n    };\n    force.drag = function() {\n      if (!drag) drag = d3.behavior.drag().origin(d3_identity).on(\"dragstart.force\", d3_layout_forceDragstart).on(\"drag.force\", dragmove).on(\"dragend.force\", d3_layout_forceDragend);\n      if (!arguments.length) return drag;\n      this.on(\"mouseover.force\", d3_layout_forceMouseover).on(\"mouseout.force\", d3_layout_forceMouseout).call(drag);\n    };\n    function dragmove(d) {\n      d.px = d3.event.x, d.py = d3.event.y;\n      force.resume();\n    }\n    return d3.rebind(force, event, \"on\");\n  };\n  function d3_layout_forceDragstart(d) {\n    d.fixed |= 2;\n  }\n  function d3_layout_forceDragend(d) {\n    d.fixed &= ~6;\n  }\n  function d3_layout_forceMouseover(d) {\n    d.fixed |= 4;\n    d.px = d.x, d.py = d.y;\n  }\n  function d3_layout_forceMouseout(d) {\n    d.fixed &= ~4;\n  }\n  function d3_layout_forceAccumulate(quad, alpha, charges) {\n    var cx = 0, cy = 0;\n    quad.charge = 0;\n    if (!quad.leaf) {\n      var nodes = quad.nodes, n = nodes.length, i = -1, c;\n      while (++i < n) {\n        c = nodes[i];\n        if (c == null) continue;\n        d3_layout_forceAccumulate(c, alpha, charges);\n        quad.charge += c.charge;\n        cx += c.charge * c.cx;\n        cy += c.charge * c.cy;\n      }\n    }\n    if (quad.point) {\n      if (!quad.leaf) {\n        quad.point.x += Math.random() - .5;\n        quad.point.y += Math.random() - .5;\n      }\n      var k = alpha * charges[quad.point.index];\n      quad.charge += quad.pointCharge = k;\n      cx += k * quad.point.x;\n      cy += k * quad.point.y;\n    }\n    quad.cx = cx / quad.charge;\n    quad.cy = cy / quad.charge;\n  }\n  var d3_layout_forceLinkDistance = 20, d3_layout_forceLinkStrength = 1, d3_layout_forceChargeDistance2 = Infinity;\n  d3.layout.hierarchy = function() {\n    var sort = d3_layout_hierarchySort, children = d3_layout_hierarchyChildren, value = d3_layout_hierarchyValue;\n    function hierarchy(root) {\n      var stack = [ root ], nodes = [], node;\n      root.depth = 0;\n      while ((node = stack.pop()) != null) {\n        nodes.push(node);\n        if ((childs = children.call(hierarchy, node, node.depth)) && (n = childs.length)) {\n          var n, childs, child;\n          while (--n >= 0) {\n            stack.push(child = childs[n]);\n            child.parent = node;\n            child.depth = node.depth + 1;\n          }\n          if (value) node.value = 0;\n          node.children = childs;\n        } else {\n          if (value) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          delete node.children;\n        }\n      }\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var childs, parent;\n        if (sort && (childs = node.children)) childs.sort(sort);\n        if (value && (parent = node.parent)) parent.value += node.value;\n      });\n      return nodes;\n    }\n    hierarchy.sort = function(x) {\n      if (!arguments.length) return sort;\n      sort = x;\n      return hierarchy;\n    };\n    hierarchy.children = function(x) {\n      if (!arguments.length) return children;\n      children = x;\n      return hierarchy;\n    };\n    hierarchy.value = function(x) {\n      if (!arguments.length) return value;\n      value = x;\n      return hierarchy;\n    };\n    hierarchy.revalue = function(root) {\n      if (value) {\n        d3_layout_hierarchyVisitBefore(root, function(node) {\n          if (node.children) node.value = 0;\n        });\n        d3_layout_hierarchyVisitAfter(root, function(node) {\n          var parent;\n          if (!node.children) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          if (parent = node.parent) parent.value += node.value;\n        });\n      }\n      return root;\n    };\n    return hierarchy;\n  };\n  function d3_layout_hierarchyRebind(object, hierarchy) {\n    d3.rebind(object, hierarchy, \"sort\", \"children\", \"value\");\n    object.nodes = object;\n    object.links = d3_layout_hierarchyLinks;\n    return object;\n  }\n  function d3_layout_hierarchyVisitBefore(node, callback) {\n    var nodes = [ node ];\n    while ((node = nodes.pop()) != null) {\n      callback(node);\n      if ((children = node.children) && (n = children.length)) {\n        var n, children;\n        while (--n >= 0) nodes.push(children[n]);\n      }\n    }\n  }\n  function d3_layout_hierarchyVisitAfter(node, callback) {\n    var nodes = [ node ], nodes2 = [];\n    while ((node = nodes.pop()) != null) {\n      nodes2.push(node);\n      if ((children = node.children) && (n = children.length)) {\n        var i = -1, n, children;\n        while (++i < n) nodes.push(children[i]);\n      }\n    }\n    while ((node = nodes2.pop()) != null) {\n      callback(node);\n    }\n  }\n  function d3_layout_hierarchyChildren(d) {\n    return d.children;\n  }\n  function d3_layout_hierarchyValue(d) {\n    return d.value;\n  }\n  function d3_layout_hierarchySort(a, b) {\n    return b.value - a.value;\n  }\n  function d3_layout_hierarchyLinks(nodes) {\n    return d3.merge(nodes.map(function(parent) {\n      return (parent.children || []).map(function(child) {\n        return {\n          source: parent,\n          target: child\n        };\n      });\n    }));\n  }\n  d3.layout.partition = function() {\n    var hierarchy = d3.layout.hierarchy(), size = [ 1, 1 ];\n    function position(node, x, dx, dy) {\n      var children = node.children;\n      node.x = x;\n      node.y = node.depth * dy;\n      node.dx = dx;\n      node.dy = dy;\n      if (children && (n = children.length)) {\n        var i = -1, n, c, d;\n        dx = node.value ? dx / node.value : 0;\n        while (++i < n) {\n          position(c = children[i], x, d = c.value * dx, dy);\n          x += d;\n        }\n      }\n    }\n    function depth(node) {\n      var children = node.children, d = 0;\n      if (children && (n = children.length)) {\n        var i = -1, n;\n        while (++i < n) d = Math.max(d, depth(children[i]));\n      }\n      return 1 + d;\n    }\n    function partition(d, i) {\n      var nodes = hierarchy.call(this, d, i);\n      position(nodes[0], 0, size[0], size[1] / depth(nodes[0]));\n      return nodes;\n    }\n    partition.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return partition;\n    };\n    return d3_layout_hierarchyRebind(partition, hierarchy);\n  };\n  d3.layout.pie = function() {\n    var value = Number, sort = d3_layout_pieSortByValue, startAngle = 0, endAngle = τ, padAngle = 0;\n    function pie(data) {\n      var n = data.length, values = data.map(function(d, i) {\n        return +value.call(pie, d, i);\n      }), a = +(typeof startAngle === \"function\" ? startAngle.apply(this, arguments) : startAngle), da = (typeof endAngle === \"function\" ? endAngle.apply(this, arguments) : endAngle) - a, p = Math.min(Math.abs(da) / n, +(typeof padAngle === \"function\" ? padAngle.apply(this, arguments) : padAngle)), pa = p * (da < 0 ? -1 : 1), sum = d3.sum(values), k = sum ? (da - n * pa) / sum : 0, index = d3.range(n), arcs = [], v;\n      if (sort != null) index.sort(sort === d3_layout_pieSortByValue ? function(i, j) {\n        return values[j] - values[i];\n      } : function(i, j) {\n        return sort(data[i], data[j]);\n      });\n      index.forEach(function(i) {\n        arcs[i] = {\n          data: data[i],\n          value: v = values[i],\n          startAngle: a,\n          endAngle: a += v * k + pa,\n          padAngle: p\n        };\n      });\n      return arcs;\n    }\n    pie.value = function(_) {\n      if (!arguments.length) return value;\n      value = _;\n      return pie;\n    };\n    pie.sort = function(_) {\n      if (!arguments.length) return sort;\n      sort = _;\n      return pie;\n    };\n    pie.startAngle = function(_) {\n      if (!arguments.length) return startAngle;\n      startAngle = _;\n      return pie;\n    };\n    pie.endAngle = function(_) {\n      if (!arguments.length) return endAngle;\n      endAngle = _;\n      return pie;\n    };\n    pie.padAngle = function(_) {\n      if (!arguments.length) return padAngle;\n      padAngle = _;\n      return pie;\n    };\n    return pie;\n  };\n  var d3_layout_pieSortByValue = {};\n  d3.layout.stack = function() {\n    var values = d3_identity, order = d3_layout_stackOrderDefault, offset = d3_layout_stackOffsetZero, out = d3_layout_stackOut, x = d3_layout_stackX, y = d3_layout_stackY;\n    function stack(data, index) {\n      if (!(n = data.length)) return data;\n      var series = data.map(function(d, i) {\n        return values.call(stack, d, i);\n      });\n      var points = series.map(function(d) {\n        return d.map(function(v, i) {\n          return [ x.call(stack, v, i), y.call(stack, v, i) ];\n        });\n      });\n      var orders = order.call(stack, points, index);\n      series = d3.permute(series, orders);\n      points = d3.permute(points, orders);\n      var offsets = offset.call(stack, points, index);\n      var m = series[0].length, n, i, j, o;\n      for (j = 0; j < m; ++j) {\n        out.call(stack, series[0][j], o = offsets[j], points[0][j][1]);\n        for (i = 1; i < n; ++i) {\n          out.call(stack, series[i][j], o += points[i - 1][j][1], points[i][j][1]);\n        }\n      }\n      return data;\n    }\n    stack.values = function(x) {\n      if (!arguments.length) return values;\n      values = x;\n      return stack;\n    };\n    stack.order = function(x) {\n      if (!arguments.length) return order;\n      order = typeof x === \"function\" ? x : d3_layout_stackOrders.get(x) || d3_layout_stackOrderDefault;\n      return stack;\n    };\n    stack.offset = function(x) {\n      if (!arguments.length) return offset;\n      offset = typeof x === \"function\" ? x : d3_layout_stackOffsets.get(x) || d3_layout_stackOffsetZero;\n      return stack;\n    };\n    stack.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      return stack;\n    };\n    stack.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      return stack;\n    };\n    stack.out = function(z) {\n      if (!arguments.length) return out;\n      out = z;\n      return stack;\n    };\n    return stack;\n  };\n  function d3_layout_stackX(d) {\n    return d.x;\n  }\n  function d3_layout_stackY(d) {\n    return d.y;\n  }\n  function d3_layout_stackOut(d, y0, y) {\n    d.y0 = y0;\n    d.y = y;\n  }\n  var d3_layout_stackOrders = d3.map({\n    \"inside-out\": function(data) {\n      var n = data.length, i, j, max = data.map(d3_layout_stackMaxIndex), sums = data.map(d3_layout_stackReduceSum), index = d3.range(n).sort(function(a, b) {\n        return max[a] - max[b];\n      }), top = 0, bottom = 0, tops = [], bottoms = [];\n      for (i = 0; i < n; ++i) {\n        j = index[i];\n        if (top < bottom) {\n          top += sums[j];\n          tops.push(j);\n        } else {\n          bottom += sums[j];\n          bottoms.push(j);\n        }\n      }\n      return bottoms.reverse().concat(tops);\n    },\n    reverse: function(data) {\n      return d3.range(data.length).reverse();\n    },\n    \"default\": d3_layout_stackOrderDefault\n  });\n  var d3_layout_stackOffsets = d3.map({\n    silhouette: function(data) {\n      var n = data.length, m = data[0].length, sums = [], max = 0, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o > max) max = o;\n        sums.push(o);\n      }\n      for (j = 0; j < m; ++j) {\n        y0[j] = (max - sums[j]) / 2;\n      }\n      return y0;\n    },\n    wiggle: function(data) {\n      var n = data.length, x = data[0], m = x.length, i, j, k, s1, s2, s3, dx, o, o0, y0 = [];\n      y0[0] = o = o0 = 0;\n      for (j = 1; j < m; ++j) {\n        for (i = 0, s1 = 0; i < n; ++i) s1 += data[i][j][1];\n        for (i = 0, s2 = 0, dx = x[j][0] - x[j - 1][0]; i < n; ++i) {\n          for (k = 0, s3 = (data[i][j][1] - data[i][j - 1][1]) / (2 * dx); k < i; ++k) {\n            s3 += (data[k][j][1] - data[k][j - 1][1]) / dx;\n          }\n          s2 += s3 * data[i][j][1];\n        }\n        y0[j] = o -= s1 ? s2 / s1 * dx : 0;\n        if (o < o0) o0 = o;\n      }\n      for (j = 0; j < m; ++j) y0[j] -= o0;\n      return y0;\n    },\n    expand: function(data) {\n      var n = data.length, m = data[0].length, k = 1 / n, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o) for (i = 0; i < n; i++) data[i][j][1] /= o; else for (i = 0; i < n; i++) data[i][j][1] = k;\n      }\n      for (j = 0; j < m; ++j) y0[j] = 0;\n      return y0;\n    },\n    zero: d3_layout_stackOffsetZero\n  });\n  function d3_layout_stackOrderDefault(data) {\n    return d3.range(data.length);\n  }\n  function d3_layout_stackOffsetZero(data) {\n    var j = -1, m = data[0].length, y0 = [];\n    while (++j < m) y0[j] = 0;\n    return y0;\n  }\n  function d3_layout_stackMaxIndex(array) {\n    var i = 1, j = 0, v = array[0][1], k, n = array.length;\n    for (;i < n; ++i) {\n      if ((k = array[i][1]) > v) {\n        j = i;\n        v = k;\n      }\n    }\n    return j;\n  }\n  function d3_layout_stackReduceSum(d) {\n    return d.reduce(d3_layout_stackSum, 0);\n  }\n  function d3_layout_stackSum(p, d) {\n    return p + d[1];\n  }\n  d3.layout.histogram = function() {\n    var frequency = true, valuer = Number, ranger = d3_layout_histogramRange, binner = d3_layout_histogramBinSturges;\n    function histogram(data, i) {\n      var bins = [], values = data.map(valuer, this), range = ranger.call(this, values, i), thresholds = binner.call(this, range, values, i), bin, i = -1, n = values.length, m = thresholds.length - 1, k = frequency ? 1 : 1 / n, x;\n      while (++i < m) {\n        bin = bins[i] = [];\n        bin.dx = thresholds[i + 1] - (bin.x = thresholds[i]);\n        bin.y = 0;\n      }\n      if (m > 0) {\n        i = -1;\n        while (++i < n) {\n          x = values[i];\n          if (x >= range[0] && x <= range[1]) {\n            bin = bins[d3.bisect(thresholds, x, 1, m) - 1];\n            bin.y += k;\n            bin.push(data[i]);\n          }\n        }\n      }\n      return bins;\n    }\n    histogram.value = function(x) {\n      if (!arguments.length) return valuer;\n      valuer = x;\n      return histogram;\n    };\n    histogram.range = function(x) {\n      if (!arguments.length) return ranger;\n      ranger = d3_functor(x);\n      return histogram;\n    };\n    histogram.bins = function(x) {\n      if (!arguments.length) return binner;\n      binner = typeof x === \"number\" ? function(range) {\n        return d3_layout_histogramBinFixed(range, x);\n      } : d3_functor(x);\n      return histogram;\n    };\n    histogram.frequency = function(x) {\n      if (!arguments.length) return frequency;\n      frequency = !!x;\n      return histogram;\n    };\n    return histogram;\n  };\n  function d3_layout_histogramBinSturges(range, values) {\n    return d3_layout_histogramBinFixed(range, Math.ceil(Math.log(values.length) / Math.LN2 + 1));\n  }\n  function d3_layout_histogramBinFixed(range, n) {\n    var x = -1, b = +range[0], m = (range[1] - b) / n, f = [];\n    while (++x <= n) f[x] = m * x + b;\n    return f;\n  }\n  function d3_layout_histogramRange(values) {\n    return [ d3.min(values), d3.max(values) ];\n  }\n  d3.layout.pack = function() {\n    var hierarchy = d3.layout.hierarchy().sort(d3_layout_packSort), padding = 0, size = [ 1, 1 ], radius;\n    function pack(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], w = size[0], h = size[1], r = radius == null ? Math.sqrt : typeof radius === \"function\" ? radius : function() {\n        return radius;\n      };\n      root.x = root.y = 0;\n      d3_layout_hierarchyVisitAfter(root, function(d) {\n        d.r = +r(d.value);\n      });\n      d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n      if (padding) {\n        var dr = padding * (radius ? 1 : Math.max(2 * root.r / w, 2 * root.r / h)) / 2;\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r += dr;\n        });\n        d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r -= dr;\n        });\n      }\n      d3_layout_packTransform(root, w / 2, h / 2, radius ? 1 : 1 / Math.max(2 * root.r / w, 2 * root.r / h));\n      return nodes;\n    }\n    pack.size = function(_) {\n      if (!arguments.length) return size;\n      size = _;\n      return pack;\n    };\n    pack.radius = function(_) {\n      if (!arguments.length) return radius;\n      radius = _ == null || typeof _ === \"function\" ? _ : +_;\n      return pack;\n    };\n    pack.padding = function(_) {\n      if (!arguments.length) return padding;\n      padding = +_;\n      return pack;\n    };\n    return d3_layout_hierarchyRebind(pack, hierarchy);\n  };\n  function d3_layout_packSort(a, b) {\n    return a.value - b.value;\n  }\n  function d3_layout_packInsert(a, b) {\n    var c = a._pack_next;\n    a._pack_next = b;\n    b._pack_prev = a;\n    b._pack_next = c;\n    c._pack_prev = b;\n  }\n  function d3_layout_packSplice(a, b) {\n    a._pack_next = b;\n    b._pack_prev = a;\n  }\n  function d3_layout_packIntersects(a, b) {\n    var dx = b.x - a.x, dy = b.y - a.y, dr = a.r + b.r;\n    return .999 * dr * dr > dx * dx + dy * dy;\n  }\n  function d3_layout_packSiblings(node) {\n    if (!(nodes = node.children) || !(n = nodes.length)) return;\n    var nodes, xMin = Infinity, xMax = -Infinity, yMin = Infinity, yMax = -Infinity, a, b, c, i, j, k, n;\n    function bound(node) {\n      xMin = Math.min(node.x - node.r, xMin);\n      xMax = Math.max(node.x + node.r, xMax);\n      yMin = Math.min(node.y - node.r, yMin);\n      yMax = Math.max(node.y + node.r, yMax);\n    }\n    nodes.forEach(d3_layout_packLink);\n    a = nodes[0];\n    a.x = -a.r;\n    a.y = 0;\n    bound(a);\n    if (n > 1) {\n      b = nodes[1];\n      b.x = b.r;\n      b.y = 0;\n      bound(b);\n      if (n > 2) {\n        c = nodes[2];\n        d3_layout_packPlace(a, b, c);\n        bound(c);\n        d3_layout_packInsert(a, c);\n        a._pack_prev = c;\n        d3_layout_packInsert(c, b);\n        b = a._pack_next;\n        for (i = 3; i < n; i++) {\n          d3_layout_packPlace(a, b, c = nodes[i]);\n          var isect = 0, s1 = 1, s2 = 1;\n          for (j = b._pack_next; j !== b; j = j._pack_next, s1++) {\n            if (d3_layout_packIntersects(j, c)) {\n              isect = 1;\n              break;\n            }\n          }\n          if (isect == 1) {\n            for (k = a._pack_prev; k !== j._pack_prev; k = k._pack_prev, s2++) {\n              if (d3_layout_packIntersects(k, c)) {\n                break;\n              }\n            }\n          }\n          if (isect) {\n            if (s1 < s2 || s1 == s2 && b.r < a.r) d3_layout_packSplice(a, b = j); else d3_layout_packSplice(a = k, b);\n            i--;\n          } else {\n            d3_layout_packInsert(a, c);\n            b = c;\n            bound(c);\n          }\n        }\n      }\n    }\n    var cx = (xMin + xMax) / 2, cy = (yMin + yMax) / 2, cr = 0;\n    for (i = 0; i < n; i++) {\n      c = nodes[i];\n      c.x -= cx;\n      c.y -= cy;\n      cr = Math.max(cr, c.r + Math.sqrt(c.x * c.x + c.y * c.y));\n    }\n    node.r = cr;\n    nodes.forEach(d3_layout_packUnlink);\n  }\n  function d3_layout_packLink(node) {\n    node._pack_next = node._pack_prev = node;\n  }\n  function d3_layout_packUnlink(node) {\n    delete node._pack_next;\n    delete node._pack_prev;\n  }\n  function d3_layout_packTransform(node, x, y, k) {\n    var children = node.children;\n    node.x = x += k * node.x;\n    node.y = y += k * node.y;\n    node.r *= k;\n    if (children) {\n      var i = -1, n = children.length;\n      while (++i < n) d3_layout_packTransform(children[i], x, y, k);\n    }\n  }\n  function d3_layout_packPlace(a, b, c) {\n    var db = a.r + c.r, dx = b.x - a.x, dy = b.y - a.y;\n    if (db && (dx || dy)) {\n      var da = b.r + c.r, dc = dx * dx + dy * dy;\n      da *= da;\n      db *= db;\n      var x = .5 + (db - da) / (2 * dc), y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n      c.x = a.x + x * dx + y * dy;\n      c.y = a.y + x * dy - y * dx;\n    } else {\n      c.x = a.x + db;\n      c.y = a.y;\n    }\n  }\n  d3.layout.tree = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = null;\n    function tree(d, i) {\n      var nodes = hierarchy.call(this, d, i), root0 = nodes[0], root1 = wrapTree(root0);\n      d3_layout_hierarchyVisitAfter(root1, firstWalk), root1.parent.m = -root1.z;\n      d3_layout_hierarchyVisitBefore(root1, secondWalk);\n      if (nodeSize) d3_layout_hierarchyVisitBefore(root0, sizeNode); else {\n        var left = root0, right = root0, bottom = root0;\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          if (node.x < left.x) left = node;\n          if (node.x > right.x) right = node;\n          if (node.depth > bottom.depth) bottom = node;\n        });\n        var tx = separation(left, right) / 2 - left.x, kx = size[0] / (right.x + separation(right, left) / 2 + tx), ky = size[1] / (bottom.depth || 1);\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          node.x = (node.x + tx) * kx;\n          node.y = node.depth * ky;\n        });\n      }\n      return nodes;\n    }\n    function wrapTree(root0) {\n      var root1 = {\n        A: null,\n        children: [ root0 ]\n      }, queue = [ root1 ], node1;\n      while ((node1 = queue.pop()) != null) {\n        for (var children = node1.children, child, i = 0, n = children.length; i < n; ++i) {\n          queue.push((children[i] = child = {\n            _: children[i],\n            parent: node1,\n            children: (child = children[i].children) && child.slice() || [],\n            A: null,\n            a: null,\n            z: 0,\n            m: 0,\n            c: 0,\n            s: 0,\n            t: null,\n            i: i\n          }).a = child);\n        }\n      }\n      return root1.children[0];\n    }\n    function firstWalk(v) {\n      var children = v.children, siblings = v.parent.children, w = v.i ? siblings[v.i - 1] : null;\n      if (children.length) {\n        d3_layout_treeShift(v);\n        var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n        if (w) {\n          v.z = w.z + separation(v._, w._);\n          v.m = v.z - midpoint;\n        } else {\n          v.z = midpoint;\n        }\n      } else if (w) {\n        v.z = w.z + separation(v._, w._);\n      }\n      v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n    }\n    function secondWalk(v) {\n      v._.x = v.z + v.parent.m;\n      v.m += v.parent.m;\n    }\n    function apportion(v, w, ancestor) {\n      if (w) {\n        var vip = v, vop = v, vim = w, vom = vip.parent.children[0], sip = vip.m, sop = vop.m, sim = vim.m, som = vom.m, shift;\n        while (vim = d3_layout_treeRight(vim), vip = d3_layout_treeLeft(vip), vim && vip) {\n          vom = d3_layout_treeLeft(vom);\n          vop = d3_layout_treeRight(vop);\n          vop.a = v;\n          shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n          if (shift > 0) {\n            d3_layout_treeMove(d3_layout_treeAncestor(vim, v, ancestor), v, shift);\n            sip += shift;\n            sop += shift;\n          }\n          sim += vim.m;\n          sip += vip.m;\n          som += vom.m;\n          sop += vop.m;\n        }\n        if (vim && !d3_layout_treeRight(vop)) {\n          vop.t = vim;\n          vop.m += sim - sop;\n        }\n        if (vip && !d3_layout_treeLeft(vom)) {\n          vom.t = vip;\n          vom.m += sip - som;\n          ancestor = v;\n        }\n      }\n      return ancestor;\n    }\n    function sizeNode(node) {\n      node.x *= size[0];\n      node.y = node.depth * size[1];\n    }\n    tree.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return tree;\n    };\n    tree.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null ? sizeNode : null;\n      return tree;\n    };\n    tree.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) == null ? null : sizeNode;\n      return tree;\n    };\n    return d3_layout_hierarchyRebind(tree, hierarchy);\n  };\n  function d3_layout_treeSeparation(a, b) {\n    return a.parent == b.parent ? 1 : 2;\n  }\n  function d3_layout_treeLeft(v) {\n    var children = v.children;\n    return children.length ? children[0] : v.t;\n  }\n  function d3_layout_treeRight(v) {\n    var children = v.children, n;\n    return (n = children.length) ? children[n - 1] : v.t;\n  }\n  function d3_layout_treeMove(wm, wp, shift) {\n    var change = shift / (wp.i - wm.i);\n    wp.c -= change;\n    wp.s += shift;\n    wm.c += change;\n    wp.z += shift;\n    wp.m += shift;\n  }\n  function d3_layout_treeShift(v) {\n    var shift = 0, change = 0, children = v.children, i = children.length, w;\n    while (--i >= 0) {\n      w = children[i];\n      w.z += shift;\n      w.m += shift;\n      shift += w.s + (change += w.c);\n    }\n  }\n  function d3_layout_treeAncestor(vim, v, ancestor) {\n    return vim.a.parent === v.parent ? vim.a : ancestor;\n  }\n  d3.layout.cluster = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = false;\n    function cluster(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], previousNode, x = 0;\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var children = node.children;\n        if (children && children.length) {\n          node.x = d3_layout_clusterX(children);\n          node.y = d3_layout_clusterY(children);\n        } else {\n          node.x = previousNode ? x += separation(node, previousNode) : 0;\n          node.y = 0;\n          previousNode = node;\n        }\n      });\n      var left = d3_layout_clusterLeft(root), right = d3_layout_clusterRight(root), x0 = left.x - separation(left, right) / 2, x1 = right.x + separation(right, left) / 2;\n      d3_layout_hierarchyVisitAfter(root, nodeSize ? function(node) {\n        node.x = (node.x - root.x) * size[0];\n        node.y = (root.y - node.y) * size[1];\n      } : function(node) {\n        node.x = (node.x - x0) / (x1 - x0) * size[0];\n        node.y = (1 - (root.y ? node.y / root.y : 1)) * size[1];\n      });\n      return nodes;\n    }\n    cluster.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return cluster;\n    };\n    cluster.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null;\n      return cluster;\n    };\n    cluster.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) != null;\n      return cluster;\n    };\n    return d3_layout_hierarchyRebind(cluster, hierarchy);\n  };\n  function d3_layout_clusterY(children) {\n    return 1 + d3.max(children, function(child) {\n      return child.y;\n    });\n  }\n  function d3_layout_clusterX(children) {\n    return children.reduce(function(x, child) {\n      return x + child.x;\n    }, 0) / children.length;\n  }\n  function d3_layout_clusterLeft(node) {\n    var children = node.children;\n    return children && children.length ? d3_layout_clusterLeft(children[0]) : node;\n  }\n  function d3_layout_clusterRight(node) {\n    var children = node.children, n;\n    return children && (n = children.length) ? d3_layout_clusterRight(children[n - 1]) : node;\n  }\n  d3.layout.treemap = function() {\n    var hierarchy = d3.layout.hierarchy(), round = Math.round, size = [ 1, 1 ], padding = null, pad = d3_layout_treemapPadNull, sticky = false, stickies, mode = \"squarify\", ratio = .5 * (1 + Math.sqrt(5));\n    function scale(children, k) {\n      var i = -1, n = children.length, child, area;\n      while (++i < n) {\n        area = (child = children[i]).value * (k < 0 ? 0 : k);\n        child.area = isNaN(area) || area <= 0 ? 0 : area;\n      }\n    }\n    function squarify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), row = [], remaining = children.slice(), child, best = Infinity, score, u = mode === \"slice\" ? rect.dx : mode === \"dice\" ? rect.dy : mode === \"slice-dice\" ? node.depth & 1 ? rect.dy : rect.dx : Math.min(rect.dx, rect.dy), n;\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while ((n = remaining.length) > 0) {\n          row.push(child = remaining[n - 1]);\n          row.area += child.area;\n          if (mode !== \"squarify\" || (score = worst(row, u)) <= best) {\n            remaining.pop();\n            best = score;\n          } else {\n            row.area -= row.pop().area;\n            position(row, u, rect, false);\n            u = Math.min(rect.dx, rect.dy);\n            row.length = row.area = 0;\n            best = Infinity;\n          }\n        }\n        if (row.length) {\n          position(row, u, rect, true);\n          row.length = row.area = 0;\n        }\n        children.forEach(squarify);\n      }\n    }\n    function stickify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), remaining = children.slice(), child, row = [];\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while (child = remaining.pop()) {\n          row.push(child);\n          row.area += child.area;\n          if (child.z != null) {\n            position(row, child.z ? rect.dx : rect.dy, rect, !remaining.length);\n            row.length = row.area = 0;\n          }\n        }\n        children.forEach(stickify);\n      }\n    }\n    function worst(row, u) {\n      var s = row.area, r, rmax = 0, rmin = Infinity, i = -1, n = row.length;\n      while (++i < n) {\n        if (!(r = row[i].area)) continue;\n        if (r < rmin) rmin = r;\n        if (r > rmax) rmax = r;\n      }\n      s *= s;\n      u *= u;\n      return s ? Math.max(u * rmax * ratio / s, s / (u * rmin * ratio)) : Infinity;\n    }\n    function position(row, u, rect, flush) {\n      var i = -1, n = row.length, x = rect.x, y = rect.y, v = u ? round(row.area / u) : 0, o;\n      if (u == rect.dx) {\n        if (flush || v > rect.dy) v = rect.dy;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dy = v;\n          x += o.dx = Math.min(rect.x + rect.dx - x, v ? round(o.area / v) : 0);\n        }\n        o.z = true;\n        o.dx += rect.x + rect.dx - x;\n        rect.y += v;\n        rect.dy -= v;\n      } else {\n        if (flush || v > rect.dx) v = rect.dx;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dx = v;\n          y += o.dy = Math.min(rect.y + rect.dy - y, v ? round(o.area / v) : 0);\n        }\n        o.z = false;\n        o.dy += rect.y + rect.dy - y;\n        rect.x += v;\n        rect.dx -= v;\n      }\n    }\n    function treemap(d) {\n      var nodes = stickies || hierarchy(d), root = nodes[0];\n      root.x = root.y = 0;\n      if (root.value) root.dx = size[0], root.dy = size[1]; else root.dx = root.dy = 0;\n      if (stickies) hierarchy.revalue(root);\n      scale([ root ], root.dx * root.dy / root.value);\n      (stickies ? stickify : squarify)(root);\n      if (sticky) stickies = nodes;\n      return nodes;\n    }\n    treemap.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return treemap;\n    };\n    treemap.padding = function(x) {\n      if (!arguments.length) return padding;\n      function padFunction(node) {\n        var p = x.call(treemap, node, node.depth);\n        return p == null ? d3_layout_treemapPadNull(node) : d3_layout_treemapPad(node, typeof p === \"number\" ? [ p, p, p, p ] : p);\n      }\n      function padConstant(node) {\n        return d3_layout_treemapPad(node, x);\n      }\n      var type;\n      pad = (padding = x) == null ? d3_layout_treemapPadNull : (type = typeof x) === \"function\" ? padFunction : type === \"number\" ? (x = [ x, x, x, x ], \n      padConstant) : padConstant;\n      return treemap;\n    };\n    treemap.round = function(x) {\n      if (!arguments.length) return round != Number;\n      round = x ? Math.round : Number;\n      return treemap;\n    };\n    treemap.sticky = function(x) {\n      if (!arguments.length) return sticky;\n      sticky = x;\n      stickies = null;\n      return treemap;\n    };\n    treemap.ratio = function(x) {\n      if (!arguments.length) return ratio;\n      ratio = x;\n      return treemap;\n    };\n    treemap.mode = function(x) {\n      if (!arguments.length) return mode;\n      mode = x + \"\";\n      return treemap;\n    };\n    return d3_layout_hierarchyRebind(treemap, hierarchy);\n  };\n  function d3_layout_treemapPadNull(node) {\n    return {\n      x: node.x,\n      y: node.y,\n      dx: node.dx,\n      dy: node.dy\n    };\n  }\n  function d3_layout_treemapPad(node, padding) {\n    var x = node.x + padding[3], y = node.y + padding[0], dx = node.dx - padding[1] - padding[3], dy = node.dy - padding[0] - padding[2];\n    if (dx < 0) {\n      x += dx / 2;\n      dx = 0;\n    }\n    if (dy < 0) {\n      y += dy / 2;\n      dy = 0;\n    }\n    return {\n      x: x,\n      y: y,\n      dx: dx,\n      dy: dy\n    };\n  }\n  d3.random = {\n    normal: function(µ, σ) {\n      var n = arguments.length;\n      if (n < 2) σ = 1;\n      if (n < 1) µ = 0;\n      return function() {\n        var x, y, r;\n        do {\n          x = Math.random() * 2 - 1;\n          y = Math.random() * 2 - 1;\n          r = x * x + y * y;\n        } while (!r || r > 1);\n        return µ + σ * x * Math.sqrt(-2 * Math.log(r) / r);\n      };\n    },\n    logNormal: function() {\n      var random = d3.random.normal.apply(d3, arguments);\n      return function() {\n        return Math.exp(random());\n      };\n    },\n    bates: function(m) {\n      var random = d3.random.irwinHall(m);\n      return function() {\n        return random() / m;\n      };\n    },\n    irwinHall: function(m) {\n      return function() {\n        for (var s = 0, j = 0; j < m; j++) s += Math.random();\n        return s;\n      };\n    }\n  };\n  d3.scale = {};\n  function d3_scaleExtent(domain) {\n    var start = domain[0], stop = domain[domain.length - 1];\n    return start < stop ? [ start, stop ] : [ stop, start ];\n  }\n  function d3_scaleRange(scale) {\n    return scale.rangeExtent ? scale.rangeExtent() : d3_scaleExtent(scale.range());\n  }\n  function d3_scale_bilinear(domain, range, uninterpolate, interpolate) {\n    var u = uninterpolate(domain[0], domain[1]), i = interpolate(range[0], range[1]);\n    return function(x) {\n      return i(u(x));\n    };\n  }\n  function d3_scale_nice(domain, nice) {\n    var i0 = 0, i1 = domain.length - 1, x0 = domain[i0], x1 = domain[i1], dx;\n    if (x1 < x0) {\n      dx = i0, i0 = i1, i1 = dx;\n      dx = x0, x0 = x1, x1 = dx;\n    }\n    domain[i0] = nice.floor(x0);\n    domain[i1] = nice.ceil(x1);\n    return domain;\n  }\n  function d3_scale_niceStep(step) {\n    return step ? {\n      floor: function(x) {\n        return Math.floor(x / step) * step;\n      },\n      ceil: function(x) {\n        return Math.ceil(x / step) * step;\n      }\n    } : d3_scale_niceIdentity;\n  }\n  var d3_scale_niceIdentity = {\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  function d3_scale_polylinear(domain, range, uninterpolate, interpolate) {\n    var u = [], i = [], j = 0, k = Math.min(domain.length, range.length) - 1;\n    if (domain[k] < domain[0]) {\n      domain = domain.slice().reverse();\n      range = range.slice().reverse();\n    }\n    while (++j <= k) {\n      u.push(uninterpolate(domain[j - 1], domain[j]));\n      i.push(interpolate(range[j - 1], range[j]));\n    }\n    return function(x) {\n      var j = d3.bisect(domain, x, 1, k) - 1;\n      return i[j](u[j](x));\n    };\n  }\n  d3.scale.linear = function() {\n    return d3_scale_linear([ 0, 1 ], [ 0, 1 ], d3_interpolate, false);\n  };\n  function d3_scale_linear(domain, range, interpolate, clamp) {\n    var output, input;\n    function rescale() {\n      var linear = Math.min(domain.length, range.length) > 2 ? d3_scale_polylinear : d3_scale_bilinear, uninterpolate = clamp ? d3_uninterpolateClamp : d3_uninterpolateNumber;\n      output = linear(domain, range, uninterpolate, interpolate);\n      input = linear(range, domain, uninterpolate, d3_interpolate);\n      return scale;\n    }\n    function scale(x) {\n      return output(x);\n    }\n    scale.invert = function(y) {\n      return input(y);\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(Number);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.rangeRound = function(x) {\n      return scale.range(x).interpolate(d3_interpolateRound);\n    };\n    scale.clamp = function(x) {\n      if (!arguments.length) return clamp;\n      clamp = x;\n      return rescale();\n    };\n    scale.interpolate = function(x) {\n      if (!arguments.length) return interpolate;\n      interpolate = x;\n      return rescale();\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      d3_scale_linearNice(domain, m);\n      return rescale();\n    };\n    scale.copy = function() {\n      return d3_scale_linear(domain, range, interpolate, clamp);\n    };\n    return rescale();\n  }\n  function d3_scale_linearRebind(scale, linear) {\n    return d3.rebind(scale, linear, \"range\", \"rangeRound\", \"interpolate\", \"clamp\");\n  }\n  function d3_scale_linearNice(domain, m) {\n    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n    d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n    return domain;\n  }\n  function d3_scale_linearTickRange(domain, m) {\n    if (m == null) m = 10;\n    var extent = d3_scaleExtent(domain), span = extent[1] - extent[0], step = Math.pow(10, Math.floor(Math.log(span / m) / Math.LN10)), err = m / span * step;\n    if (err <= .15) step *= 10; else if (err <= .35) step *= 5; else if (err <= .75) step *= 2;\n    extent[0] = Math.ceil(extent[0] / step) * step;\n    extent[1] = Math.floor(extent[1] / step) * step + step * .5;\n    extent[2] = step;\n    return extent;\n  }\n  function d3_scale_linearTicks(domain, m) {\n    return d3.range.apply(d3, d3_scale_linearTickRange(domain, m));\n  }\n  function d3_scale_linearTickFormat(domain, m, format) {\n    var range = d3_scale_linearTickRange(domain, m);\n    if (format) {\n      var match = d3_format_re.exec(format);\n      match.shift();\n      if (match[8] === \"s\") {\n        var prefix = d3.formatPrefix(Math.max(abs(range[0]), abs(range[1])));\n        if (!match[7]) match[7] = \".\" + d3_scale_linearPrecision(prefix.scale(range[2]));\n        match[8] = \"f\";\n        format = d3.format(match.join(\"\"));\n        return function(d) {\n          return format(prefix.scale(d)) + prefix.symbol;\n        };\n      }\n      if (!match[7]) match[7] = \".\" + d3_scale_linearFormatPrecision(match[8], range);\n      format = match.join(\"\");\n    } else {\n      format = \",.\" + d3_scale_linearPrecision(range[2]) + \"f\";\n    }\n    return d3.format(format);\n  }\n  var d3_scale_linearFormatSignificant = {\n    s: 1,\n    g: 1,\n    p: 1,\n    r: 1,\n    e: 1\n  };\n  function d3_scale_linearPrecision(value) {\n    return -Math.floor(Math.log(value) / Math.LN10 + .01);\n  }\n  function d3_scale_linearFormatPrecision(type, range) {\n    var p = d3_scale_linearPrecision(range[2]);\n    return type in d3_scale_linearFormatSignificant ? Math.abs(p - d3_scale_linearPrecision(Math.max(abs(range[0]), abs(range[1])))) + +(type !== \"e\") : p - (type === \"%\") * 2;\n  }\n  d3.scale.log = function() {\n    return d3_scale_log(d3.scale.linear().domain([ 0, 1 ]), 10, true, [ 1, 10 ]);\n  };\n  function d3_scale_log(linear, base, positive, domain) {\n    function log(x) {\n      return (positive ? Math.log(x < 0 ? 0 : x) : -Math.log(x > 0 ? 0 : -x)) / Math.log(base);\n    }\n    function pow(x) {\n      return positive ? Math.pow(base, x) : -Math.pow(base, -x);\n    }\n    function scale(x) {\n      return linear(log(x));\n    }\n    scale.invert = function(x) {\n      return pow(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      positive = x[0] >= 0;\n      linear.domain((domain = x.map(Number)).map(log));\n      return scale;\n    };\n    scale.base = function(_) {\n      if (!arguments.length) return base;\n      base = +_;\n      linear.domain(domain.map(log));\n      return scale;\n    };\n    scale.nice = function() {\n      var niced = d3_scale_nice(domain.map(log), positive ? Math : d3_scale_logNiceNegative);\n      linear.domain(niced);\n      domain = niced.map(pow);\n      return scale;\n    };\n    scale.ticks = function() {\n      var extent = d3_scaleExtent(domain), ticks = [], u = extent[0], v = extent[1], i = Math.floor(log(u)), j = Math.ceil(log(v)), n = base % 1 ? 2 : base;\n      if (isFinite(j - i)) {\n        if (positive) {\n          for (;i < j; i++) for (var k = 1; k < n; k++) ticks.push(pow(i) * k);\n          ticks.push(pow(i));\n        } else {\n          ticks.push(pow(i));\n          for (;i++ < j; ) for (var k = n - 1; k > 0; k--) ticks.push(pow(i) * k);\n        }\n        for (i = 0; ticks[i] < u; i++) {}\n        for (j = ticks.length; ticks[j - 1] > v; j--) {}\n        ticks = ticks.slice(i, j);\n      }\n      return ticks;\n    };\n    scale.tickFormat = function(n, format) {\n      if (!arguments.length) return d3_scale_logFormat;\n      if (arguments.length < 2) format = d3_scale_logFormat; else if (typeof format !== \"function\") format = d3.format(format);\n      var k = Math.max(1, base * n / scale.ticks().length);\n      return function(d) {\n        var i = d / pow(Math.round(log(d)));\n        if (i * base < base - .5) i *= base;\n        return i <= k ? format(d) : \"\";\n      };\n    };\n    scale.copy = function() {\n      return d3_scale_log(linear.copy(), base, positive, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  var d3_scale_logFormat = d3.format(\".0e\"), d3_scale_logNiceNegative = {\n    floor: function(x) {\n      return -Math.ceil(-x);\n    },\n    ceil: function(x) {\n      return -Math.floor(-x);\n    }\n  };\n  d3.scale.pow = function() {\n    return d3_scale_pow(d3.scale.linear(), 1, [ 0, 1 ]);\n  };\n  function d3_scale_pow(linear, exponent, domain) {\n    var powp = d3_scale_powPow(exponent), powb = d3_scale_powPow(1 / exponent);\n    function scale(x) {\n      return linear(powp(x));\n    }\n    scale.invert = function(x) {\n      return powb(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      linear.domain((domain = x.map(Number)).map(powp));\n      return scale;\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      return scale.domain(d3_scale_linearNice(domain, m));\n    };\n    scale.exponent = function(x) {\n      if (!arguments.length) return exponent;\n      powp = d3_scale_powPow(exponent = x);\n      powb = d3_scale_powPow(1 / exponent);\n      linear.domain(domain.map(powp));\n      return scale;\n    };\n    scale.copy = function() {\n      return d3_scale_pow(linear.copy(), exponent, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_scale_powPow(e) {\n    return function(x) {\n      return x < 0 ? -Math.pow(-x, e) : Math.pow(x, e);\n    };\n  }\n  d3.scale.sqrt = function() {\n    return d3.scale.pow().exponent(.5);\n  };\n  d3.scale.ordinal = function() {\n    return d3_scale_ordinal([], {\n      t: \"range\",\n      a: [ [] ]\n    });\n  };\n  function d3_scale_ordinal(domain, ranger) {\n    var index, range, rangeBand;\n    function scale(x) {\n      return range[((index.get(x) || (ranger.t === \"range\" ? index.set(x, domain.push(x)) : NaN)) - 1) % range.length];\n    }\n    function steps(start, step) {\n      return d3.range(domain.length).map(function(i) {\n        return start + step * i;\n      });\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = [];\n      index = new d3_Map();\n      var i = -1, n = x.length, xi;\n      while (++i < n) if (!index.has(xi = x[i])) index.set(xi, domain.push(xi));\n      return scale[ranger.t].apply(scale, ranger.a);\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      rangeBand = 0;\n      ranger = {\n        t: \"range\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangePoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = (start + stop) / 2, \n      0) : (stop - start) / (domain.length - 1 + padding);\n      range = steps(start + step * padding / 2, step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangePoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundPoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = stop = Math.round((start + stop) / 2), \n      0) : (stop - start) / (domain.length - 1 + padding) | 0;\n      range = steps(start + Math.round(step * padding / 2 + (stop - start - (domain.length - 1 + padding) * step) / 2), step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangeRoundPoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = (stop - start) / (domain.length - padding + 2 * outerPadding);\n      range = steps(start + step * outerPadding, step);\n      if (reverse) range.reverse();\n      rangeBand = step * (1 - padding);\n      ranger = {\n        t: \"rangeBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = Math.floor((stop - start) / (domain.length - padding + 2 * outerPadding));\n      range = steps(start + Math.round((stop - start - (domain.length - padding) * step) / 2), step);\n      if (reverse) range.reverse();\n      rangeBand = Math.round(step * (1 - padding));\n      ranger = {\n        t: \"rangeRoundBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBand = function() {\n      return rangeBand;\n    };\n    scale.rangeExtent = function() {\n      return d3_scaleExtent(ranger.a[0]);\n    };\n    scale.copy = function() {\n      return d3_scale_ordinal(domain, ranger);\n    };\n    return scale.domain(domain);\n  }\n  d3.scale.category10 = function() {\n    return d3.scale.ordinal().range(d3_category10);\n  };\n  d3.scale.category20 = function() {\n    return d3.scale.ordinal().range(d3_category20);\n  };\n  d3.scale.category20b = function() {\n    return d3.scale.ordinal().range(d3_category20b);\n  };\n  d3.scale.category20c = function() {\n    return d3.scale.ordinal().range(d3_category20c);\n  };\n  var d3_category10 = [ 2062260, 16744206, 2924588, 14034728, 9725885, 9197131, 14907330, 8355711, 12369186, 1556175 ].map(d3_rgbString);\n  var d3_category20 = [ 2062260, 11454440, 16744206, 16759672, 2924588, 10018698, 14034728, 16750742, 9725885, 12955861, 9197131, 12885140, 14907330, 16234194, 8355711, 13092807, 12369186, 14408589, 1556175, 10410725 ].map(d3_rgbString);\n  var d3_category20b = [ 3750777, 5395619, 7040719, 10264286, 6519097, 9216594, 11915115, 13556636, 9202993, 12426809, 15186514, 15190932, 8666169, 11356490, 14049643, 15177372, 8077683, 10834324, 13528509, 14589654 ].map(d3_rgbString);\n  var d3_category20c = [ 3244733, 7057110, 10406625, 13032431, 15095053, 16616764, 16625259, 16634018, 3253076, 7652470, 10607003, 13101504, 7695281, 10394312, 12369372, 14342891, 6513507, 9868950, 12434877, 14277081 ].map(d3_rgbString);\n  d3.scale.quantile = function() {\n    return d3_scale_quantile([], []);\n  };\n  function d3_scale_quantile(domain, range) {\n    var thresholds;\n    function rescale() {\n      var k = 0, q = range.length;\n      thresholds = [];\n      while (++k < q) thresholds[k - 1] = d3.quantile(domain, k / q);\n      return scale;\n    }\n    function scale(x) {\n      if (!isNaN(x = +x)) return range[d3.bisect(thresholds, x)];\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(d3_number).filter(d3_numeric).sort(d3_ascending);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.quantiles = function() {\n      return thresholds;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return y < 0 ? [ NaN, NaN ] : [ y > 0 ? thresholds[y - 1] : domain[0], y < thresholds.length ? thresholds[y] : domain[domain.length - 1] ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantile(domain, range);\n    };\n    return rescale();\n  }\n  d3.scale.quantize = function() {\n    return d3_scale_quantize(0, 1, [ 0, 1 ]);\n  };\n  function d3_scale_quantize(x0, x1, range) {\n    var kx, i;\n    function scale(x) {\n      return range[Math.max(0, Math.min(i, Math.floor(kx * (x - x0))))];\n    }\n    function rescale() {\n      kx = range.length / (x1 - x0);\n      i = range.length - 1;\n      return scale;\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return [ x0, x1 ];\n      x0 = +x[0];\n      x1 = +x[x.length - 1];\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      y = y < 0 ? NaN : y / kx + x0;\n      return [ y, y + 1 / kx ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantize(x0, x1, range);\n    };\n    return rescale();\n  }\n  d3.scale.threshold = function() {\n    return d3_scale_threshold([ .5 ], [ 0, 1 ]);\n  };\n  function d3_scale_threshold(domain, range) {\n    function scale(x) {\n      if (x <= x) return range[d3.bisect(domain, x)];\n    }\n    scale.domain = function(_) {\n      if (!arguments.length) return domain;\n      domain = _;\n      return scale;\n    };\n    scale.range = function(_) {\n      if (!arguments.length) return range;\n      range = _;\n      return scale;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return [ domain[y - 1], domain[y] ];\n    };\n    scale.copy = function() {\n      return d3_scale_threshold(domain, range);\n    };\n    return scale;\n  }\n  d3.scale.identity = function() {\n    return d3_scale_identity([ 0, 1 ]);\n  };\n  function d3_scale_identity(domain) {\n    function identity(x) {\n      return +x;\n    }\n    identity.invert = identity;\n    identity.domain = identity.range = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(identity);\n      return identity;\n    };\n    identity.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    identity.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    identity.copy = function() {\n      return d3_scale_identity(domain);\n    };\n    return identity;\n  }\n  d3.svg = {};\n  function d3_zero() {\n    return 0;\n  }\n  d3.svg.arc = function() {\n    var innerRadius = d3_svg_arcInnerRadius, outerRadius = d3_svg_arcOuterRadius, cornerRadius = d3_zero, padRadius = d3_svg_arcAuto, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle, padAngle = d3_svg_arcPadAngle;\n    function arc() {\n      var r0 = Math.max(0, +innerRadius.apply(this, arguments)), r1 = Math.max(0, +outerRadius.apply(this, arguments)), a0 = startAngle.apply(this, arguments) - halfπ, a1 = endAngle.apply(this, arguments) - halfπ, da = Math.abs(a1 - a0), cw = a0 > a1 ? 0 : 1;\n      if (r1 < r0) rc = r1, r1 = r0, r0 = rc;\n      if (da >= τε) return circleSegment(r1, cw) + (r0 ? circleSegment(r0, 1 - cw) : \"\") + \"Z\";\n      var rc, cr, rp, ap, p0 = 0, p1 = 0, x0, y0, x1, y1, x2, y2, x3, y3, path = [];\n      if (ap = (+padAngle.apply(this, arguments) || 0) / 2) {\n        rp = padRadius === d3_svg_arcAuto ? Math.sqrt(r0 * r0 + r1 * r1) : +padRadius.apply(this, arguments);\n        if (!cw) p1 *= -1;\n        if (r1) p1 = d3_asin(rp / r1 * Math.sin(ap));\n        if (r0) p0 = d3_asin(rp / r0 * Math.sin(ap));\n      }\n      if (r1) {\n        x0 = r1 * Math.cos(a0 + p1);\n        y0 = r1 * Math.sin(a0 + p1);\n        x1 = r1 * Math.cos(a1 - p1);\n        y1 = r1 * Math.sin(a1 - p1);\n        var l1 = Math.abs(a1 - a0 - 2 * p1) <= π ? 0 : 1;\n        if (p1 && d3_svg_arcSweep(x0, y0, x1, y1) === cw ^ l1) {\n          var h1 = (a0 + a1) / 2;\n          x0 = r1 * Math.cos(h1);\n          y0 = r1 * Math.sin(h1);\n          x1 = y1 = null;\n        }\n      } else {\n        x0 = y0 = 0;\n      }\n      if (r0) {\n        x2 = r0 * Math.cos(a1 - p0);\n        y2 = r0 * Math.sin(a1 - p0);\n        x3 = r0 * Math.cos(a0 + p0);\n        y3 = r0 * Math.sin(a0 + p0);\n        var l0 = Math.abs(a0 - a1 + 2 * p0) <= π ? 0 : 1;\n        if (p0 && d3_svg_arcSweep(x2, y2, x3, y3) === 1 - cw ^ l0) {\n          var h0 = (a0 + a1) / 2;\n          x2 = r0 * Math.cos(h0);\n          y2 = r0 * Math.sin(h0);\n          x3 = y3 = null;\n        }\n      } else {\n        x2 = y2 = 0;\n      }\n      if (da > ε && (rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments))) > .001) {\n        cr = r0 < r1 ^ cw ? 0 : 1;\n        var rc1 = rc, rc0 = rc;\n        if (da < π) {\n          var oc = x3 == null ? [ x2, y2 ] : x1 == null ? [ x0, y0 ] : d3_geom_polygonIntersect([ x0, y0 ], [ x3, y3 ], [ x1, y1 ], [ x2, y2 ]), ax = x0 - oc[0], ay = y0 - oc[1], bx = x1 - oc[0], by = y1 - oc[1], kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2), lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = Math.min(rc, (r0 - lc) / (kc - 1));\n          rc1 = Math.min(rc, (r1 - lc) / (kc + 1));\n        }\n        if (x1 != null) {\n          var t30 = d3_svg_arcCornerTangents(x3 == null ? [ x2, y2 ] : [ x3, y3 ], [ x0, y0 ], r1, rc1, cw), t12 = d3_svg_arcCornerTangents([ x1, y1 ], [ x2, y2 ], r1, rc1, cw);\n          if (rc === rc1) {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t30[1], \"A\", r1, \",\", r1, \" 0 \", 1 - cw ^ d3_svg_arcSweep(t30[1][0], t30[1][1], t12[1][0], t12[1][1]), \",\", cw, \" \", t12[1], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t12[0]);\n          } else {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 1,\", cr, \" \", t12[0]);\n          }\n        } else {\n          path.push(\"M\", x0, \",\", y0);\n        }\n        if (x3 != null) {\n          var t03 = d3_svg_arcCornerTangents([ x0, y0 ], [ x3, y3 ], r0, -rc0, cw), t21 = d3_svg_arcCornerTangents([ x2, y2 ], x1 == null ? [ x0, y0 ] : [ x1, y1 ], r0, -rc0, cw);\n          if (rc === rc0) {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t21[1], \"A\", r0, \",\", r0, \" 0 \", cw ^ d3_svg_arcSweep(t21[1][0], t21[1][1], t03[1][0], t03[1][1]), \",\", 1 - cw, \" \", t03[1], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          } else {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          }\n        } else {\n          path.push(\"L\", x2, \",\", y2);\n        }\n      } else {\n        path.push(\"M\", x0, \",\", y0);\n        if (x1 != null) path.push(\"A\", r1, \",\", r1, \" 0 \", l1, \",\", cw, \" \", x1, \",\", y1);\n        path.push(\"L\", x2, \",\", y2);\n        if (x3 != null) path.push(\"A\", r0, \",\", r0, \" 0 \", l0, \",\", 1 - cw, \" \", x3, \",\", y3);\n      }\n      path.push(\"Z\");\n      return path.join(\"\");\n    }\n    function circleSegment(r1, cw) {\n      return \"M0,\" + r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + -r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + r1;\n    }\n    arc.innerRadius = function(v) {\n      if (!arguments.length) return innerRadius;\n      innerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.outerRadius = function(v) {\n      if (!arguments.length) return outerRadius;\n      outerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.cornerRadius = function(v) {\n      if (!arguments.length) return cornerRadius;\n      cornerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.padRadius = function(v) {\n      if (!arguments.length) return padRadius;\n      padRadius = v == d3_svg_arcAuto ? d3_svg_arcAuto : d3_functor(v);\n      return arc;\n    };\n    arc.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return arc;\n    };\n    arc.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return arc;\n    };\n    arc.padAngle = function(v) {\n      if (!arguments.length) return padAngle;\n      padAngle = d3_functor(v);\n      return arc;\n    };\n    arc.centroid = function() {\n      var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2, a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - halfπ;\n      return [ Math.cos(a) * r, Math.sin(a) * r ];\n    };\n    return arc;\n  };\n  var d3_svg_arcAuto = \"auto\";\n  function d3_svg_arcInnerRadius(d) {\n    return d.innerRadius;\n  }\n  function d3_svg_arcOuterRadius(d) {\n    return d.outerRadius;\n  }\n  function d3_svg_arcStartAngle(d) {\n    return d.startAngle;\n  }\n  function d3_svg_arcEndAngle(d) {\n    return d.endAngle;\n  }\n  function d3_svg_arcPadAngle(d) {\n    return d && d.padAngle;\n  }\n  function d3_svg_arcSweep(x0, y0, x1, y1) {\n    return (x0 - x1) * y0 - (y0 - y1) * x0 > 0 ? 0 : 1;\n  }\n  function d3_svg_arcCornerTangents(p0, p1, r1, rc, cw) {\n    var x01 = p0[0] - p1[0], y01 = p0[1] - p1[1], lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01), ox = lo * y01, oy = -lo * x01, x1 = p0[0] + ox, y1 = p0[1] + oy, x2 = p1[0] + ox, y2 = p1[1] + oy, x3 = (x1 + x2) / 2, y3 = (y1 + y2) / 2, dx = x2 - x1, dy = y2 - y1, d2 = dx * dx + dy * dy, r = r1 - rc, D = x1 * y2 - x2 * y1, d = (dy < 0 ? -1 : 1) * Math.sqrt(Math.max(0, r * r * d2 - D * D)), cx0 = (D * dy - dx * d) / d2, cy0 = (-D * dx - dy * d) / d2, cx1 = (D * dy + dx * d) / d2, cy1 = (-D * dx + dy * d) / d2, dx0 = cx0 - x3, dy0 = cy0 - y3, dx1 = cx1 - x3, dy1 = cy1 - y3;\n    if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n    return [ [ cx0 - ox, cy0 - oy ], [ cx0 * r1 / r, cy0 * r1 / r ] ];\n  }\n  function d3_svg_line(projection) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, tension = .7;\n    function line(data) {\n      var segments = [], points = [], i = -1, n = data.length, d, fx = d3_functor(x), fy = d3_functor(y);\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points), tension));\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points.push([ +fx.call(this, d, i), +fy.call(this, d, i) ]);\n        } else if (points.length) {\n          segment();\n          points = [];\n        }\n      }\n      if (points.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    line.x = function(_) {\n      if (!arguments.length) return x;\n      x = _;\n      return line;\n    };\n    line.y = function(_) {\n      if (!arguments.length) return y;\n      y = _;\n      return line;\n    };\n    line.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return line;\n    };\n    line.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      return line;\n    };\n    line.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return line;\n    };\n    return line;\n  }\n  d3.svg.line = function() {\n    return d3_svg_line(d3_identity);\n  };\n  var d3_svg_lineInterpolators = d3.map({\n    linear: d3_svg_lineLinear,\n    \"linear-closed\": d3_svg_lineLinearClosed,\n    step: d3_svg_lineStep,\n    \"step-before\": d3_svg_lineStepBefore,\n    \"step-after\": d3_svg_lineStepAfter,\n    basis: d3_svg_lineBasis,\n    \"basis-open\": d3_svg_lineBasisOpen,\n    \"basis-closed\": d3_svg_lineBasisClosed,\n    bundle: d3_svg_lineBundle,\n    cardinal: d3_svg_lineCardinal,\n    \"cardinal-open\": d3_svg_lineCardinalOpen,\n    \"cardinal-closed\": d3_svg_lineCardinalClosed,\n    monotone: d3_svg_lineMonotone\n  });\n  d3_svg_lineInterpolators.forEach(function(key, value) {\n    value.key = key;\n    value.closed = /-closed$/.test(key);\n  });\n  function d3_svg_lineLinear(points) {\n    return points.length > 1 ? points.join(\"L\") : points + \"Z\";\n  }\n  function d3_svg_lineLinearClosed(points) {\n    return points.join(\"L\") + \"Z\";\n  }\n  function d3_svg_lineStep(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p[0] + (p = points[i])[0]) / 2, \"V\", p[1]);\n    if (n > 1) path.push(\"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepBefore(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"V\", (p = points[i])[1], \"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepAfter(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p = points[i])[0], \"V\", p[1]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineCardinalOpen(points, tension) {\n    return points.length < 4 ? d3_svg_lineLinear(points) : points[1] + d3_svg_lineHermite(points.slice(1, -1), d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineCardinalClosed(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinearClosed(points) : points[0] + d3_svg_lineHermite((points.push(points[0]), \n    points), d3_svg_lineCardinalTangents([ points[points.length - 2] ].concat(points, [ points[1] ]), tension));\n  }\n  function d3_svg_lineCardinal(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineHermite(points, tangents) {\n    if (tangents.length < 1 || points.length != tangents.length && points.length != tangents.length + 2) {\n      return d3_svg_lineLinear(points);\n    }\n    var quad = points.length != tangents.length, path = \"\", p0 = points[0], p = points[1], t0 = tangents[0], t = t0, pi = 1;\n    if (quad) {\n      path += \"Q\" + (p[0] - t0[0] * 2 / 3) + \",\" + (p[1] - t0[1] * 2 / 3) + \",\" + p[0] + \",\" + p[1];\n      p0 = points[1];\n      pi = 2;\n    }\n    if (tangents.length > 1) {\n      t = tangents[1];\n      p = points[pi];\n      pi++;\n      path += \"C\" + (p0[0] + t0[0]) + \",\" + (p0[1] + t0[1]) + \",\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      for (var i = 2; i < tangents.length; i++, pi++) {\n        p = points[pi];\n        t = tangents[i];\n        path += \"S\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      }\n    }\n    if (quad) {\n      var lp = points[pi];\n      path += \"Q\" + (p[0] + t[0] * 2 / 3) + \",\" + (p[1] + t[1] * 2 / 3) + \",\" + lp[0] + \",\" + lp[1];\n    }\n    return path;\n  }\n  function d3_svg_lineCardinalTangents(points, tension) {\n    var tangents = [], a = (1 - tension) / 2, p0, p1 = points[0], p2 = points[1], i = 1, n = points.length;\n    while (++i < n) {\n      p0 = p1;\n      p1 = p2;\n      p2 = points[i];\n      tangents.push([ a * (p2[0] - p0[0]), a * (p2[1] - p0[1]) ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineBasis(points) {\n    if (points.length < 3) return d3_svg_lineLinear(points);\n    var i = 1, n = points.length, pi = points[0], x0 = pi[0], y0 = pi[1], px = [ x0, x0, x0, (pi = points[1])[0] ], py = [ y0, y0, y0, pi[1] ], path = [ x0, \",\", y0, \"L\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    points.push(points[n - 1]);\n    while (++i <= n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    points.pop();\n    path.push(\"L\", pi);\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisOpen(points) {\n    if (points.length < 4) return d3_svg_lineLinear(points);\n    var path = [], i = -1, n = points.length, pi, px = [ 0 ], py = [ 0 ];\n    while (++i < 3) {\n      pi = points[i];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path.push(d3_svg_lineDot4(d3_svg_lineBasisBezier3, px) + \",\" + d3_svg_lineDot4(d3_svg_lineBasisBezier3, py));\n    --i;\n    while (++i < n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisClosed(points) {\n    var path, i = -1, n = points.length, m = n + 4, pi, px = [], py = [];\n    while (++i < 4) {\n      pi = points[i % n];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path = [ d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    --i;\n    while (++i < m) {\n      pi = points[i % n];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBundle(points, tension) {\n    var n = points.length - 1;\n    if (n) {\n      var x0 = points[0][0], y0 = points[0][1], dx = points[n][0] - x0, dy = points[n][1] - y0, i = -1, p, t;\n      while (++i <= n) {\n        p = points[i];\n        t = i / n;\n        p[0] = tension * p[0] + (1 - tension) * (x0 + t * dx);\n        p[1] = tension * p[1] + (1 - tension) * (y0 + t * dy);\n      }\n    }\n    return d3_svg_lineBasis(points);\n  }\n  function d3_svg_lineDot4(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n  }\n  var d3_svg_lineBasisBezier1 = [ 0, 2 / 3, 1 / 3, 0 ], d3_svg_lineBasisBezier2 = [ 0, 1 / 3, 2 / 3, 0 ], d3_svg_lineBasisBezier3 = [ 0, 1 / 6, 2 / 3, 1 / 6 ];\n  function d3_svg_lineBasisBezier(path, x, y) {\n    path.push(\"C\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, y));\n  }\n  function d3_svg_lineSlope(p0, p1) {\n    return (p1[1] - p0[1]) / (p1[0] - p0[0]);\n  }\n  function d3_svg_lineFiniteDifferences(points) {\n    var i = 0, j = points.length - 1, m = [], p0 = points[0], p1 = points[1], d = m[0] = d3_svg_lineSlope(p0, p1);\n    while (++i < j) {\n      m[i] = (d + (d = d3_svg_lineSlope(p0 = p1, p1 = points[i + 1]))) / 2;\n    }\n    m[i] = d;\n    return m;\n  }\n  function d3_svg_lineMonotoneTangents(points) {\n    var tangents = [], d, a, b, s, m = d3_svg_lineFiniteDifferences(points), i = -1, j = points.length - 1;\n    while (++i < j) {\n      d = d3_svg_lineSlope(points[i], points[i + 1]);\n      if (abs(d) < ε) {\n        m[i] = m[i + 1] = 0;\n      } else {\n        a = m[i] / d;\n        b = m[i + 1] / d;\n        s = a * a + b * b;\n        if (s > 9) {\n          s = d * 3 / Math.sqrt(s);\n          m[i] = s * a;\n          m[i + 1] = s * b;\n        }\n      }\n    }\n    i = -1;\n    while (++i <= j) {\n      s = (points[Math.min(j, i + 1)][0] - points[Math.max(0, i - 1)][0]) / (6 * (1 + m[i] * m[i]));\n      tangents.push([ s || 0, m[i] * s || 0 ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineMonotone(points) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineMonotoneTangents(points));\n  }\n  d3.svg.line.radial = function() {\n    var line = d3_svg_line(d3_svg_lineRadial);\n    line.radius = line.x, delete line.x;\n    line.angle = line.y, delete line.y;\n    return line;\n  };\n  function d3_svg_lineRadial(points) {\n    var point, i = -1, n = points.length, r, a;\n    while (++i < n) {\n      point = points[i];\n      r = point[0];\n      a = point[1] - halfπ;\n      point[0] = r * Math.cos(a);\n      point[1] = r * Math.sin(a);\n    }\n    return points;\n  }\n  function d3_svg_area(projection) {\n    var x0 = d3_geom_pointX, x1 = d3_geom_pointX, y0 = 0, y1 = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, interpolateReverse = interpolate, L = \"L\", tension = .7;\n    function area(data) {\n      var segments = [], points0 = [], points1 = [], i = -1, n = data.length, d, fx0 = d3_functor(x0), fy0 = d3_functor(y0), fx1 = x0 === x1 ? function() {\n        return x;\n      } : d3_functor(x1), fy1 = y0 === y1 ? function() {\n        return y;\n      } : d3_functor(y1), x, y;\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points1), tension), L, interpolateReverse(projection(points0.reverse()), tension), \"Z\");\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points0.push([ x = +fx0.call(this, d, i), y = +fy0.call(this, d, i) ]);\n          points1.push([ +fx1.call(this, d, i), +fy1.call(this, d, i) ]);\n        } else if (points0.length) {\n          segment();\n          points0 = [];\n          points1 = [];\n        }\n      }\n      if (points0.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    area.x = function(_) {\n      if (!arguments.length) return x1;\n      x0 = x1 = _;\n      return area;\n    };\n    area.x0 = function(_) {\n      if (!arguments.length) return x0;\n      x0 = _;\n      return area;\n    };\n    area.x1 = function(_) {\n      if (!arguments.length) return x1;\n      x1 = _;\n      return area;\n    };\n    area.y = function(_) {\n      if (!arguments.length) return y1;\n      y0 = y1 = _;\n      return area;\n    };\n    area.y0 = function(_) {\n      if (!arguments.length) return y0;\n      y0 = _;\n      return area;\n    };\n    area.y1 = function(_) {\n      if (!arguments.length) return y1;\n      y1 = _;\n      return area;\n    };\n    area.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return area;\n    };\n    area.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      interpolateReverse = interpolate.reverse || interpolate;\n      L = interpolate.closed ? \"M\" : \"L\";\n      return area;\n    };\n    area.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return area;\n    };\n    return area;\n  }\n  d3_svg_lineStepBefore.reverse = d3_svg_lineStepAfter;\n  d3_svg_lineStepAfter.reverse = d3_svg_lineStepBefore;\n  d3.svg.area = function() {\n    return d3_svg_area(d3_identity);\n  };\n  d3.svg.area.radial = function() {\n    var area = d3_svg_area(d3_svg_lineRadial);\n    area.radius = area.x, delete area.x;\n    area.innerRadius = area.x0, delete area.x0;\n    area.outerRadius = area.x1, delete area.x1;\n    area.angle = area.y, delete area.y;\n    area.startAngle = area.y0, delete area.y0;\n    area.endAngle = area.y1, delete area.y1;\n    return area;\n  };\n  d3.svg.chord = function() {\n    var source = d3_source, target = d3_target, radius = d3_svg_chordRadius, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle;\n    function chord(d, i) {\n      var s = subgroup(this, source, d, i), t = subgroup(this, target, d, i);\n      return \"M\" + s.p0 + arc(s.r, s.p1, s.a1 - s.a0) + (equals(s, t) ? curve(s.r, s.p1, s.r, s.p0) : curve(s.r, s.p1, t.r, t.p0) + arc(t.r, t.p1, t.a1 - t.a0) + curve(t.r, t.p1, s.r, s.p0)) + \"Z\";\n    }\n    function subgroup(self, f, d, i) {\n      var subgroup = f.call(self, d, i), r = radius.call(self, subgroup, i), a0 = startAngle.call(self, subgroup, i) - halfπ, a1 = endAngle.call(self, subgroup, i) - halfπ;\n      return {\n        r: r,\n        a0: a0,\n        a1: a1,\n        p0: [ r * Math.cos(a0), r * Math.sin(a0) ],\n        p1: [ r * Math.cos(a1), r * Math.sin(a1) ]\n      };\n    }\n    function equals(a, b) {\n      return a.a0 == b.a0 && a.a1 == b.a1;\n    }\n    function arc(r, p, a) {\n      return \"A\" + r + \",\" + r + \" 0 \" + +(a > π) + \",1 \" + p;\n    }\n    function curve(r0, p0, r1, p1) {\n      return \"Q 0,0 \" + p1;\n    }\n    chord.radius = function(v) {\n      if (!arguments.length) return radius;\n      radius = d3_functor(v);\n      return chord;\n    };\n    chord.source = function(v) {\n      if (!arguments.length) return source;\n      source = d3_functor(v);\n      return chord;\n    };\n    chord.target = function(v) {\n      if (!arguments.length) return target;\n      target = d3_functor(v);\n      return chord;\n    };\n    chord.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return chord;\n    };\n    chord.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return chord;\n    };\n    return chord;\n  };\n  function d3_svg_chordRadius(d) {\n    return d.radius;\n  }\n  d3.svg.diagonal = function() {\n    var source = d3_source, target = d3_target, projection = d3_svg_diagonalProjection;\n    function diagonal(d, i) {\n      var p0 = source.call(this, d, i), p3 = target.call(this, d, i), m = (p0.y + p3.y) / 2, p = [ p0, {\n        x: p0.x,\n        y: m\n      }, {\n        x: p3.x,\n        y: m\n      }, p3 ];\n      p = p.map(projection);\n      return \"M\" + p[0] + \"C\" + p[1] + \" \" + p[2] + \" \" + p[3];\n    }\n    diagonal.source = function(x) {\n      if (!arguments.length) return source;\n      source = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.target = function(x) {\n      if (!arguments.length) return target;\n      target = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.projection = function(x) {\n      if (!arguments.length) return projection;\n      projection = x;\n      return diagonal;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalProjection(d) {\n    return [ d.x, d.y ];\n  }\n  d3.svg.diagonal.radial = function() {\n    var diagonal = d3.svg.diagonal(), projection = d3_svg_diagonalProjection, projection_ = diagonal.projection;\n    diagonal.projection = function(x) {\n      return arguments.length ? projection_(d3_svg_diagonalRadialProjection(projection = x)) : projection;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalRadialProjection(projection) {\n    return function() {\n      var d = projection.apply(this, arguments), r = d[0], a = d[1] - halfπ;\n      return [ r * Math.cos(a), r * Math.sin(a) ];\n    };\n  }\n  d3.svg.symbol = function() {\n    var type = d3_svg_symbolType, size = d3_svg_symbolSize;\n    function symbol(d, i) {\n      return (d3_svg_symbols.get(type.call(this, d, i)) || d3_svg_symbolCircle)(size.call(this, d, i));\n    }\n    symbol.type = function(x) {\n      if (!arguments.length) return type;\n      type = d3_functor(x);\n      return symbol;\n    };\n    symbol.size = function(x) {\n      if (!arguments.length) return size;\n      size = d3_functor(x);\n      return symbol;\n    };\n    return symbol;\n  };\n  function d3_svg_symbolSize() {\n    return 64;\n  }\n  function d3_svg_symbolType() {\n    return \"circle\";\n  }\n  function d3_svg_symbolCircle(size) {\n    var r = Math.sqrt(size / π);\n    return \"M0,\" + r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + -r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + r + \"Z\";\n  }\n  var d3_svg_symbols = d3.map({\n    circle: d3_svg_symbolCircle,\n    cross: function(size) {\n      var r = Math.sqrt(size / 5) / 2;\n      return \"M\" + -3 * r + \",\" + -r + \"H\" + -r + \"V\" + -3 * r + \"H\" + r + \"V\" + -r + \"H\" + 3 * r + \"V\" + r + \"H\" + r + \"V\" + 3 * r + \"H\" + -r + \"V\" + r + \"H\" + -3 * r + \"Z\";\n    },\n    diamond: function(size) {\n      var ry = Math.sqrt(size / (2 * d3_svg_symbolTan30)), rx = ry * d3_svg_symbolTan30;\n      return \"M0,\" + -ry + \"L\" + rx + \",0\" + \" 0,\" + ry + \" \" + -rx + \",0\" + \"Z\";\n    },\n    square: function(size) {\n      var r = Math.sqrt(size) / 2;\n      return \"M\" + -r + \",\" + -r + \"L\" + r + \",\" + -r + \" \" + r + \",\" + r + \" \" + -r + \",\" + r + \"Z\";\n    },\n    \"triangle-down\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + ry + \"L\" + rx + \",\" + -ry + \" \" + -rx + \",\" + -ry + \"Z\";\n    },\n    \"triangle-up\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + -ry + \"L\" + rx + \",\" + ry + \" \" + -rx + \",\" + ry + \"Z\";\n    }\n  });\n  d3.svg.symbolTypes = d3_svg_symbols.keys();\n  var d3_svg_symbolSqrt3 = Math.sqrt(3), d3_svg_symbolTan30 = Math.tan(30 * d3_radians);\n  d3_selectionPrototype.transition = function(name) {\n    var id = d3_transitionInheritId || ++d3_transitionId, ns = d3_transitionNamespace(name), subgroups = [], subgroup, node, transition = d3_transitionInherit || {\n      time: Date.now(),\n      ease: d3_ease_cubicInOut,\n      delay: 0,\n      duration: 250\n    };\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) d3_transitionNode(node, i, ns, id, transition);\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_selectionPrototype.interrupt = function(name) {\n    return this.each(name == null ? d3_selection_interrupt : d3_selection_interruptNS(d3_transitionNamespace(name)));\n  };\n  var d3_selection_interrupt = d3_selection_interruptNS(d3_transitionNamespace());\n  function d3_selection_interruptNS(ns) {\n    return function() {\n      var lock, activeId, active;\n      if ((lock = this[ns]) && (active = lock[activeId = lock.active])) {\n        active.timer.c = null;\n        active.timer.t = NaN;\n        if (--lock.count) delete lock[activeId]; else delete this[ns];\n        lock.active += .5;\n        active.event && active.event.interrupt.call(this, this.__data__, active.index);\n      }\n    };\n  }\n  function d3_transition(groups, ns, id) {\n    d3_subclass(groups, d3_transitionPrototype);\n    groups.namespace = ns;\n    groups.id = id;\n    return groups;\n  }\n  var d3_transitionPrototype = [], d3_transitionId = 0, d3_transitionInheritId, d3_transitionInherit;\n  d3_transitionPrototype.call = d3_selectionPrototype.call;\n  d3_transitionPrototype.empty = d3_selectionPrototype.empty;\n  d3_transitionPrototype.node = d3_selectionPrototype.node;\n  d3_transitionPrototype.size = d3_selectionPrototype.size;\n  d3.transition = function(selection, name) {\n    return selection && selection.transition ? d3_transitionInheritId ? selection.transition(name) : selection : d3.selection().transition(selection);\n  };\n  d3.transition.prototype = d3_transitionPrototype;\n  d3_transitionPrototype.select = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnode, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if ((node = group[i]) && (subnode = selector.call(node, node.__data__, i, j))) {\n          if (\"__data__\" in node) subnode.__data__ = node.__data__;\n          d3_transitionNode(subnode, i, ns, id, node[ns][id]);\n          subgroup.push(subnode);\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.selectAll = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnodes, node, subnode, transition;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          transition = node[ns][id];\n          subnodes = selector.call(node, node.__data__, i, j);\n          subgroups.push(subgroup = []);\n          for (var k = -1, o = subnodes.length; ++k < o; ) {\n            if (subnode = subnodes[k]) d3_transitionNode(subnode, k, ns, id, transition);\n            subgroup.push(subnode);\n          }\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_transition(subgroups, this.namespace, this.id);\n  };\n  d3_transitionPrototype.tween = function(name, tween) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) return this.node()[ns][id].tween.get(name);\n    return d3_selection_each(this, tween == null ? function(node) {\n      node[ns][id].tween.remove(name);\n    } : function(node) {\n      node[ns][id].tween.set(name, tween);\n    });\n  };\n  function d3_transition_tween(groups, name, value, tween) {\n    var id = groups.id, ns = groups.namespace;\n    return d3_selection_each(groups, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].tween.set(name, tween(value.call(node, node.__data__, i, j)));\n    } : (value = tween(value), function(node) {\n      node[ns][id].tween.set(name, value);\n    }));\n  }\n  d3_transitionPrototype.attr = function(nameNS, value) {\n    if (arguments.length < 2) {\n      for (value in nameNS) this.attr(value, nameNS[value]);\n      return this;\n    }\n    var interpolate = nameNS == \"transform\" ? d3_interpolateTransform : d3_interpolate, name = d3.ns.qualify(nameNS);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrTween(b) {\n      return b == null ? attrNull : (b += \"\", function() {\n        var a = this.getAttribute(name), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttribute(name, i(t));\n        });\n      });\n    }\n    function attrTweenNS(b) {\n      return b == null ? attrNullNS : (b += \"\", function() {\n        var a = this.getAttributeNS(name.space, name.local), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttributeNS(name.space, name.local, i(t));\n        });\n      });\n    }\n    return d3_transition_tween(this, \"attr.\" + nameNS, value, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.attrTween = function(nameNS, tween) {\n    var name = d3.ns.qualify(nameNS);\n    function attrTween(d, i) {\n      var f = tween.call(this, d, i, this.getAttribute(name));\n      return f && function(t) {\n        this.setAttribute(name, f(t));\n      };\n    }\n    function attrTweenNS(d, i) {\n      var f = tween.call(this, d, i, this.getAttributeNS(name.space, name.local));\n      return f && function(t) {\n        this.setAttributeNS(name.space, name.local, f(t));\n      };\n    }\n    return this.tween(\"attr.\" + nameNS, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.style(priority, name[priority], value);\n        return this;\n      }\n      priority = \"\";\n    }\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleString(b) {\n      return b == null ? styleNull : (b += \"\", function() {\n        var a = d3_window(this).getComputedStyle(this, null).getPropertyValue(name), i;\n        return a !== b && (i = d3_interpolate(a, b), function(t) {\n          this.style.setProperty(name, i(t), priority);\n        });\n      });\n    }\n    return d3_transition_tween(this, \"style.\" + name, value, styleString);\n  };\n  d3_transitionPrototype.styleTween = function(name, tween, priority) {\n    if (arguments.length < 3) priority = \"\";\n    function styleTween(d, i) {\n      var f = tween.call(this, d, i, d3_window(this).getComputedStyle(this, null).getPropertyValue(name));\n      return f && function(t) {\n        this.style.setProperty(name, f(t), priority);\n      };\n    }\n    return this.tween(\"style.\" + name, styleTween);\n  };\n  d3_transitionPrototype.text = function(value) {\n    return d3_transition_tween(this, \"text\", value, d3_transition_text);\n  };\n  function d3_transition_text(b) {\n    if (b == null) b = \"\";\n    return function() {\n      this.textContent = b;\n    };\n  }\n  d3_transitionPrototype.remove = function() {\n    var ns = this.namespace;\n    return this.each(\"end.transition\", function() {\n      var p;\n      if (this[ns].count < 2 && (p = this.parentNode)) p.removeChild(this);\n    });\n  };\n  d3_transitionPrototype.ease = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].ease;\n    if (typeof value !== \"function\") value = d3.ease.apply(d3, arguments);\n    return d3_selection_each(this, function(node) {\n      node[ns][id].ease = value;\n    });\n  };\n  d3_transitionPrototype.delay = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].delay;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].delay = +value.call(node, node.__data__, i, j);\n    } : (value = +value, function(node) {\n      node[ns][id].delay = value;\n    }));\n  };\n  d3_transitionPrototype.duration = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].duration;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].duration = Math.max(1, value.call(node, node.__data__, i, j));\n    } : (value = Math.max(1, value), function(node) {\n      node[ns][id].duration = value;\n    }));\n  };\n  d3_transitionPrototype.each = function(type, listener) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) {\n      var inherit = d3_transitionInherit, inheritId = d3_transitionInheritId;\n      try {\n        d3_transitionInheritId = id;\n        d3_selection_each(this, function(node, i, j) {\n          d3_transitionInherit = node[ns][id];\n          type.call(node, node.__data__, i, j);\n        });\n      } finally {\n        d3_transitionInherit = inherit;\n        d3_transitionInheritId = inheritId;\n      }\n    } else {\n      d3_selection_each(this, function(node) {\n        var transition = node[ns][id];\n        (transition.event || (transition.event = d3.dispatch(\"start\", \"end\", \"interrupt\"))).on(type, listener);\n      });\n    }\n    return this;\n  };\n  d3_transitionPrototype.transition = function() {\n    var id0 = this.id, id1 = ++d3_transitionId, ns = this.namespace, subgroups = [], subgroup, group, node, transition;\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if (node = group[i]) {\n          transition = node[ns][id0];\n          d3_transitionNode(node, i, ns, id1, {\n            time: transition.time,\n            ease: transition.ease,\n            delay: transition.delay + transition.duration,\n            duration: transition.duration\n          });\n        }\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id1);\n  };\n  function d3_transitionNamespace(name) {\n    return name == null ? \"__transition__\" : \"__transition_\" + name + \"__\";\n  }\n  function d3_transitionNode(node, i, ns, id, inherit) {\n    var lock = node[ns] || (node[ns] = {\n      active: 0,\n      count: 0\n    }), transition = lock[id], time, timer, duration, ease, tweens;\n    function schedule(elapsed) {\n      var delay = transition.delay;\n      timer.t = delay + time;\n      if (delay <= elapsed) return start(elapsed - delay);\n      timer.c = start;\n    }\n    function start(elapsed) {\n      var activeId = lock.active, active = lock[activeId];\n      if (active) {\n        active.timer.c = null;\n        active.timer.t = NaN;\n        --lock.count;\n        delete lock[activeId];\n        active.event && active.event.interrupt.call(node, node.__data__, active.index);\n      }\n      for (var cancelId in lock) {\n        if (+cancelId < id) {\n          var cancel = lock[cancelId];\n          cancel.timer.c = null;\n          cancel.timer.t = NaN;\n          --lock.count;\n          delete lock[cancelId];\n        }\n      }\n      timer.c = tick;\n      d3_timer(function() {\n        if (timer.c && tick(elapsed || 1)) {\n          timer.c = null;\n          timer.t = NaN;\n        }\n        return 1;\n      }, 0, time);\n      lock.active = id;\n      transition.event && transition.event.start.call(node, node.__data__, i);\n      tweens = [];\n      transition.tween.forEach(function(key, value) {\n        if (value = value.call(node, node.__data__, i)) {\n          tweens.push(value);\n        }\n      });\n      ease = transition.ease;\n      duration = transition.duration;\n    }\n    function tick(elapsed) {\n      var t = elapsed / duration, e = ease(t), n = tweens.length;\n      while (n > 0) {\n        tweens[--n].call(node, e);\n      }\n      if (t >= 1) {\n        transition.event && transition.event.end.call(node, node.__data__, i);\n        if (--lock.count) delete lock[id]; else delete node[ns];\n        return 1;\n      }\n    }\n    if (!transition) {\n      time = inherit.time;\n      timer = d3_timer(schedule, 0, time);\n      transition = lock[id] = {\n        tween: new d3_Map(),\n        time: time,\n        timer: timer,\n        delay: inherit.delay,\n        duration: inherit.duration,\n        ease: inherit.ease,\n        index: i\n      };\n      inherit = null;\n      ++lock.count;\n    }\n  }\n  d3.svg.axis = function() {\n    var scale = d3.scale.linear(), orient = d3_svg_axisDefaultOrient, innerTickSize = 6, outerTickSize = 6, tickPadding = 3, tickArguments_ = [ 10 ], tickValues = null, tickFormat_;\n    function axis(g) {\n      g.each(function() {\n        var g = d3.select(this);\n        var scale0 = this.__chart__ || scale, scale1 = this.__chart__ = scale.copy();\n        var ticks = tickValues == null ? scale1.ticks ? scale1.ticks.apply(scale1, tickArguments_) : scale1.domain() : tickValues, tickFormat = tickFormat_ == null ? scale1.tickFormat ? scale1.tickFormat.apply(scale1, tickArguments_) : d3_identity : tickFormat_, tick = g.selectAll(\".tick\").data(ticks, scale1), tickEnter = tick.enter().insert(\"g\", \".domain\").attr(\"class\", \"tick\").style(\"opacity\", ε), tickExit = d3.transition(tick.exit()).style(\"opacity\", ε).remove(), tickUpdate = d3.transition(tick.order()).style(\"opacity\", 1), tickSpacing = Math.max(innerTickSize, 0) + tickPadding, tickTransform;\n        var range = d3_scaleRange(scale1), path = g.selectAll(\".domain\").data([ 0 ]), pathUpdate = (path.enter().append(\"path\").attr(\"class\", \"domain\"), \n        d3.transition(path));\n        tickEnter.append(\"line\");\n        tickEnter.append(\"text\");\n        var lineEnter = tickEnter.select(\"line\"), lineUpdate = tickUpdate.select(\"line\"), text = tick.select(\"text\").text(tickFormat), textEnter = tickEnter.select(\"text\"), textUpdate = tickUpdate.select(\"text\"), sign = orient === \"top\" || orient === \"left\" ? -1 : 1, x1, x2, y1, y2;\n        if (orient === \"bottom\" || orient === \"top\") {\n          tickTransform = d3_svg_axisX, x1 = \"x\", y1 = \"y\", x2 = \"x2\", y2 = \"y2\";\n          text.attr(\"dy\", sign < 0 ? \"0em\" : \".71em\").style(\"text-anchor\", \"middle\");\n          pathUpdate.attr(\"d\", \"M\" + range[0] + \",\" + sign * outerTickSize + \"V0H\" + range[1] + \"V\" + sign * outerTickSize);\n        } else {\n          tickTransform = d3_svg_axisY, x1 = \"y\", y1 = \"x\", x2 = \"y2\", y2 = \"x2\";\n          text.attr(\"dy\", \".32em\").style(\"text-anchor\", sign < 0 ? \"end\" : \"start\");\n          pathUpdate.attr(\"d\", \"M\" + sign * outerTickSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + sign * outerTickSize);\n        }\n        lineEnter.attr(y2, sign * innerTickSize);\n        textEnter.attr(y1, sign * tickSpacing);\n        lineUpdate.attr(x2, 0).attr(y2, sign * innerTickSize);\n        textUpdate.attr(x1, 0).attr(y1, sign * tickSpacing);\n        if (scale1.rangeBand) {\n          var x = scale1, dx = x.rangeBand() / 2;\n          scale0 = scale1 = function(d) {\n            return x(d) + dx;\n          };\n        } else if (scale0.rangeBand) {\n          scale0 = scale1;\n        } else {\n          tickExit.call(tickTransform, scale1, scale0);\n        }\n        tickEnter.call(tickTransform, scale0, scale1);\n        tickUpdate.call(tickTransform, scale1, scale1);\n      });\n    }\n    axis.scale = function(x) {\n      if (!arguments.length) return scale;\n      scale = x;\n      return axis;\n    };\n    axis.orient = function(x) {\n      if (!arguments.length) return orient;\n      orient = x in d3_svg_axisOrients ? x + \"\" : d3_svg_axisDefaultOrient;\n      return axis;\n    };\n    axis.ticks = function() {\n      if (!arguments.length) return tickArguments_;\n      tickArguments_ = d3_array(arguments);\n      return axis;\n    };\n    axis.tickValues = function(x) {\n      if (!arguments.length) return tickValues;\n      tickValues = x;\n      return axis;\n    };\n    axis.tickFormat = function(x) {\n      if (!arguments.length) return tickFormat_;\n      tickFormat_ = x;\n      return axis;\n    };\n    axis.tickSize = function(x) {\n      var n = arguments.length;\n      if (!n) return innerTickSize;\n      innerTickSize = +x;\n      outerTickSize = +arguments[n - 1];\n      return axis;\n    };\n    axis.innerTickSize = function(x) {\n      if (!arguments.length) return innerTickSize;\n      innerTickSize = +x;\n      return axis;\n    };\n    axis.outerTickSize = function(x) {\n      if (!arguments.length) return outerTickSize;\n      outerTickSize = +x;\n      return axis;\n    };\n    axis.tickPadding = function(x) {\n      if (!arguments.length) return tickPadding;\n      tickPadding = +x;\n      return axis;\n    };\n    axis.tickSubdivide = function() {\n      return arguments.length && axis;\n    };\n    return axis;\n  };\n  var d3_svg_axisDefaultOrient = \"bottom\", d3_svg_axisOrients = {\n    top: 1,\n    right: 1,\n    bottom: 1,\n    left: 1\n  };\n  function d3_svg_axisX(selection, x0, x1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = x0(d);\n      return \"translate(\" + (isFinite(v0) ? v0 : x1(d)) + \",0)\";\n    });\n  }\n  function d3_svg_axisY(selection, y0, y1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = y0(d);\n      return \"translate(0,\" + (isFinite(v0) ? v0 : y1(d)) + \")\";\n    });\n  }\n  d3.svg.brush = function() {\n    var event = d3_eventDispatch(brush, \"brushstart\", \"brush\", \"brushend\"), x = null, y = null, xExtent = [ 0, 0 ], yExtent = [ 0, 0 ], xExtentDomain, yExtentDomain, xClamp = true, yClamp = true, resizes = d3_svg_brushResizes[0];\n    function brush(g) {\n      g.each(function() {\n        var g = d3.select(this).style(\"pointer-events\", \"all\").style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\").on(\"mousedown.brush\", brushstart).on(\"touchstart.brush\", brushstart);\n        var background = g.selectAll(\".background\").data([ 0 ]);\n        background.enter().append(\"rect\").attr(\"class\", \"background\").style(\"visibility\", \"hidden\").style(\"cursor\", \"crosshair\");\n        g.selectAll(\".extent\").data([ 0 ]).enter().append(\"rect\").attr(\"class\", \"extent\").style(\"cursor\", \"move\");\n        var resize = g.selectAll(\".resize\").data(resizes, d3_identity);\n        resize.exit().remove();\n        resize.enter().append(\"g\").attr(\"class\", function(d) {\n          return \"resize \" + d;\n        }).style(\"cursor\", function(d) {\n          return d3_svg_brushCursor[d];\n        }).append(\"rect\").attr(\"x\", function(d) {\n          return /[ew]$/.test(d) ? -3 : null;\n        }).attr(\"y\", function(d) {\n          return /^[ns]/.test(d) ? -3 : null;\n        }).attr(\"width\", 6).attr(\"height\", 6).style(\"visibility\", \"hidden\");\n        resize.style(\"display\", brush.empty() ? \"none\" : null);\n        var gUpdate = d3.transition(g), backgroundUpdate = d3.transition(background), range;\n        if (x) {\n          range = d3_scaleRange(x);\n          backgroundUpdate.attr(\"x\", range[0]).attr(\"width\", range[1] - range[0]);\n          redrawX(gUpdate);\n        }\n        if (y) {\n          range = d3_scaleRange(y);\n          backgroundUpdate.attr(\"y\", range[0]).attr(\"height\", range[1] - range[0]);\n          redrawY(gUpdate);\n        }\n        redraw(gUpdate);\n      });\n    }\n    brush.event = function(g) {\n      g.each(function() {\n        var event_ = event.of(this, arguments), extent1 = {\n          x: xExtent,\n          y: yExtent,\n          i: xExtentDomain,\n          j: yExtentDomain\n        }, extent0 = this.__chart__ || extent1;\n        this.__chart__ = extent1;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.brush\", function() {\n            xExtentDomain = extent0.i;\n            yExtentDomain = extent0.j;\n            xExtent = extent0.x;\n            yExtent = extent0.y;\n            event_({\n              type: \"brushstart\"\n            });\n          }).tween(\"brush:brush\", function() {\n            var xi = d3_interpolateArray(xExtent, extent1.x), yi = d3_interpolateArray(yExtent, extent1.y);\n            xExtentDomain = yExtentDomain = null;\n            return function(t) {\n              xExtent = extent1.x = xi(t);\n              yExtent = extent1.y = yi(t);\n              event_({\n                type: \"brush\",\n                mode: \"resize\"\n              });\n            };\n          }).each(\"end.brush\", function() {\n            xExtentDomain = extent1.i;\n            yExtentDomain = extent1.j;\n            event_({\n              type: \"brush\",\n              mode: \"resize\"\n            });\n            event_({\n              type: \"brushend\"\n            });\n          });\n        } else {\n          event_({\n            type: \"brushstart\"\n          });\n          event_({\n            type: \"brush\",\n            mode: \"resize\"\n          });\n          event_({\n            type: \"brushend\"\n          });\n        }\n      });\n    };\n    function redraw(g) {\n      g.selectAll(\".resize\").attr(\"transform\", function(d) {\n        return \"translate(\" + xExtent[+/e$/.test(d)] + \",\" + yExtent[+/^s/.test(d)] + \")\";\n      });\n    }\n    function redrawX(g) {\n      g.select(\".extent\").attr(\"x\", xExtent[0]);\n      g.selectAll(\".extent,.n>rect,.s>rect\").attr(\"width\", xExtent[1] - xExtent[0]);\n    }\n    function redrawY(g) {\n      g.select(\".extent\").attr(\"y\", yExtent[0]);\n      g.selectAll(\".extent,.e>rect,.w>rect\").attr(\"height\", yExtent[1] - yExtent[0]);\n    }\n    function brushstart() {\n      var target = this, eventTarget = d3.select(d3.event.target), event_ = event.of(target, arguments), g = d3.select(target), resizing = eventTarget.datum(), resizingX = !/^(n|s)$/.test(resizing) && x, resizingY = !/^(e|w)$/.test(resizing) && y, dragging = eventTarget.classed(\"extent\"), dragRestore = d3_event_dragSuppress(target), center, origin = d3.mouse(target), offset;\n      var w = d3.select(d3_window(target)).on(\"keydown.brush\", keydown).on(\"keyup.brush\", keyup);\n      if (d3.event.changedTouches) {\n        w.on(\"touchmove.brush\", brushmove).on(\"touchend.brush\", brushend);\n      } else {\n        w.on(\"mousemove.brush\", brushmove).on(\"mouseup.brush\", brushend);\n      }\n      g.interrupt().selectAll(\"*\").interrupt();\n      if (dragging) {\n        origin[0] = xExtent[0] - origin[0];\n        origin[1] = yExtent[0] - origin[1];\n      } else if (resizing) {\n        var ex = +/w$/.test(resizing), ey = +/^n/.test(resizing);\n        offset = [ xExtent[1 - ex] - origin[0], yExtent[1 - ey] - origin[1] ];\n        origin[0] = xExtent[ex];\n        origin[1] = yExtent[ey];\n      } else if (d3.event.altKey) center = origin.slice();\n      g.style(\"pointer-events\", \"none\").selectAll(\".resize\").style(\"display\", null);\n      d3.select(\"body\").style(\"cursor\", eventTarget.style(\"cursor\"));\n      event_({\n        type: \"brushstart\"\n      });\n      brushmove();\n      function keydown() {\n        if (d3.event.keyCode == 32) {\n          if (!dragging) {\n            center = null;\n            origin[0] -= xExtent[1];\n            origin[1] -= yExtent[1];\n            dragging = 2;\n          }\n          d3_eventPreventDefault();\n        }\n      }\n      function keyup() {\n        if (d3.event.keyCode == 32 && dragging == 2) {\n          origin[0] += xExtent[1];\n          origin[1] += yExtent[1];\n          dragging = 0;\n          d3_eventPreventDefault();\n        }\n      }\n      function brushmove() {\n        var point = d3.mouse(target), moved = false;\n        if (offset) {\n          point[0] += offset[0];\n          point[1] += offset[1];\n        }\n        if (!dragging) {\n          if (d3.event.altKey) {\n            if (!center) center = [ (xExtent[0] + xExtent[1]) / 2, (yExtent[0] + yExtent[1]) / 2 ];\n            origin[0] = xExtent[+(point[0] < center[0])];\n            origin[1] = yExtent[+(point[1] < center[1])];\n          } else center = null;\n        }\n        if (resizingX && move1(point, x, 0)) {\n          redrawX(g);\n          moved = true;\n        }\n        if (resizingY && move1(point, y, 1)) {\n          redrawY(g);\n          moved = true;\n        }\n        if (moved) {\n          redraw(g);\n          event_({\n            type: \"brush\",\n            mode: dragging ? \"move\" : \"resize\"\n          });\n        }\n      }\n      function move1(point, scale, i) {\n        var range = d3_scaleRange(scale), r0 = range[0], r1 = range[1], position = origin[i], extent = i ? yExtent : xExtent, size = extent[1] - extent[0], min, max;\n        if (dragging) {\n          r0 -= position;\n          r1 -= size + position;\n        }\n        min = (i ? yClamp : xClamp) ? Math.max(r0, Math.min(r1, point[i])) : point[i];\n        if (dragging) {\n          max = (min += position) + size;\n        } else {\n          if (center) position = Math.max(r0, Math.min(r1, 2 * center[i] - min));\n          if (position < min) {\n            max = min;\n            min = position;\n          } else {\n            max = position;\n          }\n        }\n        if (extent[0] != min || extent[1] != max) {\n          if (i) yExtentDomain = null; else xExtentDomain = null;\n          extent[0] = min;\n          extent[1] = max;\n          return true;\n        }\n      }\n      function brushend() {\n        brushmove();\n        g.style(\"pointer-events\", \"all\").selectAll(\".resize\").style(\"display\", brush.empty() ? \"none\" : null);\n        d3.select(\"body\").style(\"cursor\", null);\n        w.on(\"mousemove.brush\", null).on(\"mouseup.brush\", null).on(\"touchmove.brush\", null).on(\"touchend.brush\", null).on(\"keydown.brush\", null).on(\"keyup.brush\", null);\n        dragRestore();\n        event_({\n          type: \"brushend\"\n        });\n      }\n    }\n    brush.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.clamp = function(z) {\n      if (!arguments.length) return x && y ? [ xClamp, yClamp ] : x ? xClamp : y ? yClamp : null;\n      if (x && y) xClamp = !!z[0], yClamp = !!z[1]; else if (x) xClamp = !!z; else if (y) yClamp = !!z;\n      return brush;\n    };\n    brush.extent = function(z) {\n      var x0, x1, y0, y1, t;\n      if (!arguments.length) {\n        if (x) {\n          if (xExtentDomain) {\n            x0 = xExtentDomain[0], x1 = xExtentDomain[1];\n          } else {\n            x0 = xExtent[0], x1 = xExtent[1];\n            if (x.invert) x0 = x.invert(x0), x1 = x.invert(x1);\n            if (x1 < x0) t = x0, x0 = x1, x1 = t;\n          }\n        }\n        if (y) {\n          if (yExtentDomain) {\n            y0 = yExtentDomain[0], y1 = yExtentDomain[1];\n          } else {\n            y0 = yExtent[0], y1 = yExtent[1];\n            if (y.invert) y0 = y.invert(y0), y1 = y.invert(y1);\n            if (y1 < y0) t = y0, y0 = y1, y1 = t;\n          }\n        }\n        return x && y ? [ [ x0, y0 ], [ x1, y1 ] ] : x ? [ x0, x1 ] : y && [ y0, y1 ];\n      }\n      if (x) {\n        x0 = z[0], x1 = z[1];\n        if (y) x0 = x0[0], x1 = x1[0];\n        xExtentDomain = [ x0, x1 ];\n        if (x.invert) x0 = x(x0), x1 = x(x1);\n        if (x1 < x0) t = x0, x0 = x1, x1 = t;\n        if (x0 != xExtent[0] || x1 != xExtent[1]) xExtent = [ x0, x1 ];\n      }\n      if (y) {\n        y0 = z[0], y1 = z[1];\n        if (x) y0 = y0[1], y1 = y1[1];\n        yExtentDomain = [ y0, y1 ];\n        if (y.invert) y0 = y(y0), y1 = y(y1);\n        if (y1 < y0) t = y0, y0 = y1, y1 = t;\n        if (y0 != yExtent[0] || y1 != yExtent[1]) yExtent = [ y0, y1 ];\n      }\n      return brush;\n    };\n    brush.clear = function() {\n      if (!brush.empty()) {\n        xExtent = [ 0, 0 ], yExtent = [ 0, 0 ];\n        xExtentDomain = yExtentDomain = null;\n      }\n      return brush;\n    };\n    brush.empty = function() {\n      return !!x && xExtent[0] == xExtent[1] || !!y && yExtent[0] == yExtent[1];\n    };\n    return d3.rebind(brush, event, \"on\");\n  };\n  var d3_svg_brushCursor = {\n    n: \"ns-resize\",\n    e: \"ew-resize\",\n    s: \"ns-resize\",\n    w: \"ew-resize\",\n    nw: \"nwse-resize\",\n    ne: \"nesw-resize\",\n    se: \"nwse-resize\",\n    sw: \"nesw-resize\"\n  };\n  var d3_svg_brushResizes = [ [ \"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\" ], [ \"e\", \"w\" ], [ \"n\", \"s\" ], [] ];\n  var d3_time_format = d3_time.format = d3_locale_enUS.timeFormat;\n  var d3_time_formatUtc = d3_time_format.utc;\n  var d3_time_formatIso = d3_time_formatUtc(\"%Y-%m-%dT%H:%M:%S.%LZ\");\n  d3_time_format.iso = Date.prototype.toISOString && +new Date(\"2000-01-01T00:00:00.000Z\") ? d3_time_formatIsoNative : d3_time_formatIso;\n  function d3_time_formatIsoNative(date) {\n    return date.toISOString();\n  }\n  d3_time_formatIsoNative.parse = function(string) {\n    var date = new Date(string);\n    return isNaN(date) ? null : date;\n  };\n  d3_time_formatIsoNative.toString = d3_time_formatIso.toString;\n  d3_time.second = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 1e3) * 1e3);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 1e3);\n  }, function(date) {\n    return date.getSeconds();\n  });\n  d3_time.seconds = d3_time.second.range;\n  d3_time.seconds.utc = d3_time.second.utc.range;\n  d3_time.minute = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 6e4) * 6e4);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 6e4);\n  }, function(date) {\n    return date.getMinutes();\n  });\n  d3_time.minutes = d3_time.minute.range;\n  d3_time.minutes.utc = d3_time.minute.utc.range;\n  d3_time.hour = d3_time_interval(function(date) {\n    var timezone = date.getTimezoneOffset() / 60;\n    return new d3_date((Math.floor(date / 36e5 - timezone) + timezone) * 36e5);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 36e5);\n  }, function(date) {\n    return date.getHours();\n  });\n  d3_time.hours = d3_time.hour.range;\n  d3_time.hours.utc = d3_time.hour.utc.range;\n  d3_time.month = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setDate(1);\n    return date;\n  }, function(date, offset) {\n    date.setMonth(date.getMonth() + offset);\n  }, function(date) {\n    return date.getMonth();\n  });\n  d3_time.months = d3_time.month.range;\n  d3_time.months.utc = d3_time.month.utc.range;\n  function d3_time_scale(linear, methods, format) {\n    function scale(x) {\n      return linear(x);\n    }\n    scale.invert = function(x) {\n      return d3_time_scaleDate(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return linear.domain().map(d3_time_scaleDate);\n      linear.domain(x);\n      return scale;\n    };\n    function tickMethod(extent, count) {\n      var span = extent[1] - extent[0], target = span / count, i = d3.bisect(d3_time_scaleSteps, target);\n      return i == d3_time_scaleSteps.length ? [ methods.year, d3_scale_linearTickRange(extent.map(function(d) {\n        return d / 31536e6;\n      }), count)[2] ] : !i ? [ d3_time_scaleMilliseconds, d3_scale_linearTickRange(extent, count)[2] ] : methods[target / d3_time_scaleSteps[i - 1] < d3_time_scaleSteps[i] / target ? i - 1 : i];\n    }\n    scale.nice = function(interval, skip) {\n      var domain = scale.domain(), extent = d3_scaleExtent(domain), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" && tickMethod(extent, interval);\n      if (method) interval = method[0], skip = method[1];\n      function skipped(date) {\n        return !isNaN(date) && !interval.range(date, d3_time_scaleDate(+date + 1), skip).length;\n      }\n      return scale.domain(d3_scale_nice(domain, skip > 1 ? {\n        floor: function(date) {\n          while (skipped(date = interval.floor(date))) date = d3_time_scaleDate(date - 1);\n          return date;\n        },\n        ceil: function(date) {\n          while (skipped(date = interval.ceil(date))) date = d3_time_scaleDate(+date + 1);\n          return date;\n        }\n      } : interval));\n    };\n    scale.ticks = function(interval, skip) {\n      var extent = d3_scaleExtent(scale.domain()), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" ? tickMethod(extent, interval) : !interval.range && [ {\n        range: interval\n      }, skip ];\n      if (method) interval = method[0], skip = method[1];\n      return interval.range(extent[0], d3_time_scaleDate(+extent[1] + 1), skip < 1 ? 1 : skip);\n    };\n    scale.tickFormat = function() {\n      return format;\n    };\n    scale.copy = function() {\n      return d3_time_scale(linear.copy(), methods, format);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_time_scaleDate(t) {\n    return new Date(t);\n  }\n  var d3_time_scaleSteps = [ 1e3, 5e3, 15e3, 3e4, 6e4, 3e5, 9e5, 18e5, 36e5, 108e5, 216e5, 432e5, 864e5, 1728e5, 6048e5, 2592e6, 7776e6, 31536e6 ];\n  var d3_time_scaleLocalMethods = [ [ d3_time.second, 1 ], [ d3_time.second, 5 ], [ d3_time.second, 15 ], [ d3_time.second, 30 ], [ d3_time.minute, 1 ], [ d3_time.minute, 5 ], [ d3_time.minute, 15 ], [ d3_time.minute, 30 ], [ d3_time.hour, 1 ], [ d3_time.hour, 3 ], [ d3_time.hour, 6 ], [ d3_time.hour, 12 ], [ d3_time.day, 1 ], [ d3_time.day, 2 ], [ d3_time.week, 1 ], [ d3_time.month, 1 ], [ d3_time.month, 3 ], [ d3_time.year, 1 ] ];\n  var d3_time_scaleLocalFormat = d3_time_format.multi([ [ \".%L\", function(d) {\n    return d.getMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getDay() && d.getDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  var d3_time_scaleMilliseconds = {\n    range: function(start, stop, step) {\n      return d3.range(Math.ceil(start / step) * step, +stop, step).map(d3_time_scaleDate);\n    },\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  d3_time_scaleLocalMethods.year = d3_time.year;\n  d3_time.scale = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleLocalMethods, d3_time_scaleLocalFormat);\n  };\n  var d3_time_scaleUtcMethods = d3_time_scaleLocalMethods.map(function(m) {\n    return [ m[0].utc, m[1] ];\n  });\n  var d3_time_scaleUtcFormat = d3_time_formatUtc.multi([ [ \".%L\", function(d) {\n    return d.getUTCMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getUTCSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getUTCMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getUTCHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getUTCDay() && d.getUTCDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getUTCDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getUTCMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  d3_time_scaleUtcMethods.year = d3_time.year.utc;\n  d3_time.scale.utc = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleUtcMethods, d3_time_scaleUtcFormat);\n  };\n  d3.text = d3_xhrType(function(request) {\n    return request.responseText;\n  });\n  d3.json = function(url, callback) {\n    return d3_xhr(url, \"application/json\", d3_json, callback);\n  };\n  function d3_json(request) {\n    return JSON.parse(request.responseText);\n  }\n  d3.html = function(url, callback) {\n    return d3_xhr(url, \"text/html\", d3_html, callback);\n  };\n  function d3_html(request) {\n    var range = d3_document.createRange();\n    range.selectNode(d3_document.body);\n    return range.createContextualFragment(request.responseText);\n  }\n  d3.xml = d3_xhrType(function(request) {\n    return request.responseXML;\n  });\n  if (typeof define === \"function\" && define.amd) this.d3 = d3, define(d3); else if (typeof module === \"object\" && module.exports) module.exports = d3; else this.d3 = d3;\n}();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/c3/node_modules/d3/d3.js\n// module id = 2088\n// module chunks = 2"],"sourceRoot":""}