{"issues":[{"repoOwner":"coala","repoName":"coala","updatedAtMs":1535847742000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5745","number":5745,"title":"Imported classes should be arranged lexicographically","body":"Classes being imported in coala/coalib/bearlib/languages/__init__.py file should be arranged alphabetically.\nA good newcomer issue.","comments":0,"createdAt":"2018-09-01T23:10:26Z","updatedAt":"2018-09-02T00:22:22Z","closedAt":null,"state":"open","user":{"login":"shashwatmishra76","avatarUrl":"https://avatars2.githubusercontent.com/u/24711156?v=4"},"owner":{"login":"shashwatmishra76","avatarUrl":"https://avatars2.githubusercontent.com/u/24711156?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1535600703000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5739","number":5739,"title":"Add language for scss","body":"Like coalib/bearlib/languages/definitions/CSS.py","comments":0,"createdAt":"2018-08-30T03:45:03Z","updatedAt":"2018-08-30T03:45:03Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"},{"name":"importance/medium","color":"fbca04"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1535847517000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5740","number":5740,"title":"Add language for SASS","body":"Like coalib/bearlib/languages/definitions/CSS.py","comments":0,"createdAt":"2018-08-30T03:45:30Z","updatedAt":"2018-09-02T00:18:37Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"Prince-sharma","avatarUrl":"https://avatars1.githubusercontent.com/u/38017461?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"},{"name":"importance/medium","color":"fbca04"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1534753851000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5726","number":5726,"title":"Add language file for D","body":"","comments":0,"createdAt":"2018-08-20T08:25:23Z","updatedAt":"2018-08-20T08:30:51Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"area/CI","color":"eb6420"},{"name":"area/languages","color":"d4c5f9"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1535416866000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5730","number":5730,"title":"Add json language definition","body":"A JSON Language definition for coala in https://github.com/coala/coala/tree/master/coalib/bearlib/languages/definitions","comments":0,"createdAt":"2018-08-25T06:49:06Z","updatedAt":"2018-08-28T00:41:06Z","closedAt":"2018-08-28T00:41:06Z","state":"closed","user":{"login":"virresh","avatarUrl":"https://avatars0.githubusercontent.com/u/10978108?v=4"},"owner":{"login":"virresh","avatarUrl":"https://avatars0.githubusercontent.com/u/10978108?v=4"},"labels":[{"name":"area/aspects","color":"000000"},{"name":"area/documentation","color":"bfe5bf"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1535808813000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5737","number":5737,"title":"Discard ** in ignore = foo/**","body":"An ignore glob of ignore = foo/** will walk the entire structure of foo/, which is silly.\nThat is #3655 .\nBut a quicker problem to solve : ignore = foo/** can be rewritten as ignore = foo/ and suddenly it doesnt walk foo/ .\ncoala should recognise foo/** in the ignore and warn the user , and then remove the**` internally.","comments":2,"createdAt":"2018-08-29T12:25:03Z","updatedAt":"2018-09-01T13:33:33Z","closedAt":"2018-09-01T13:33:33Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"mach64","avatarUrl":"https://avatars3.githubusercontent.com/u/29517049?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"},{"name":"importance/high","color":"eb6420"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1535811495000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5738","number":5738,"title":"Fix mistake in Writing_Good_Commits.rst","body":"On line 36 it should be Closes instead of Fixes\nProbably a good newcomer issue.","comments":1,"createdAt":"2018-08-30T01:07:20Z","updatedAt":"2018-09-01T14:18:15Z","closedAt":null,"state":"open","user":{"login":"Utkarsh1308","avatarUrl":"https://avatars0.githubusercontent.com/u/23418707?v=4"},"owner":{"login":"Utkarsh1308","avatarUrl":"https://avatars0.githubusercontent.com/u/23418707?v=4"},"assignee":{"login":"Utkarsh1308","avatarUrl":"https://avatars0.githubusercontent.com/u/23418707?v=4"},"labels":[{"name":"area/aspects","color":"000000"},{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1533576774000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5695","number":5695,"title":"Add graphQL in language definitions","body":"https://github.com/coala/coala/tree/master/coalib/bearlib/languages/definitions","comments":0,"createdAt":"2018-08-06T17:31:30Z","updatedAt":"2018-08-06T17:32:54Z","closedAt":null,"state":"open","user":{"login":"virresh","avatarUrl":"https://avatars0.githubusercontent.com/u/10978108?v=4"},"owner":{"login":"virresh","avatarUrl":"https://avatars0.githubusercontent.com/u/10978108?v=4"},"labels":[{"name":"area/aspects","color":"000000"},{"name":"area/documentation","color":"bfe5bf"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1533991654000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5697","number":5697,"title":"Support File Proxies","body":"cola can only perform analysis on disk files as of now, it should also support analysis on in-memory files. This should be done using File Proxies so that it fits into current ecosystem.\nRefer: cEP-0028","comments":1,"createdAt":"2018-08-08T14:33:27Z","updatedAt":"2018-08-11T12:47:34Z","closedAt":"2018-08-11T12:47:34Z","state":"closed","user":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4"},"owner":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4"},"labels":[{"name":"area/CI","color":"eb6420"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1533947025000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5702","number":5702,"title":"Add meta-review process into newcomer guide","body":"Newcomers should do at least one meta-review or receive a meta-review before becoming developers.\nPlease assign this to me ;)","comments":0,"createdAt":"2018-08-10T13:57:23Z","updatedAt":"2018-08-11T00:23:45Z","closedAt":"2018-08-11T00:23:45Z","state":"closed","user":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4"},"owner":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1534320371000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5708","number":5708,"title":"Files to be checked debug log entry is emitting a message for every file","body":"59f78c1 resulting in very volumous log entries for each file.","comments":0,"createdAt":"2018-08-15T07:25:05Z","updatedAt":"2018-08-15T08:06:11Z","closedAt":"2018-08-15T08:06:11Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4"},"labels":[{"name":"importance/medium","color":"fbca04"},{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1534339942000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5710","number":5710,"title":"Create separate language definitions for varieties of Shell","body":"There is one language 'Shell' in https://github.com/coala/coala/tree/master/coalib/bearlib/languages/definitions .\nFor coala/coala-bears#2665 , we need at least the four varieties supported by ShellCheck","comments":2,"createdAt":"2018-08-15T09:13:07Z","updatedAt":"2018-08-15T13:32:22Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"shashwatmishra76","avatarUrl":"https://avatars2.githubusercontent.com/u/24711156?v=4"},"labels":[{"name":"area/languages","color":"d4c5f9"},{"name":"difficulty/low","color":"207de5"},{"name":"importance/medium","color":"fbca04"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1535861434000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5722","number":5722,"title":"LocalBearTestHelper.check_results allow regex as message text","body":"Sometimes the message text varies based on linter version, as we see at coala/coala-bears#2678,  or is incredibly long and not helpful to match the entire text.\nIt should be possible to specify only a regex to match the message text.","comments":1,"createdAt":"2018-08-17T13:48:14Z","updatedAt":"2018-09-02T04:10:34Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"Naveenaidu","avatarUrl":"https://avatars1.githubusercontent.com/u/30195193?v=4"},"labels":[{"name":"area/tests","color":"bfd4f2"},{"name":"difficulty/low","color":"207de5"},{"name":"importance/low","color":"70E870"},{"name":"type/feature","color":"0052cc"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1535046202000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5724","number":5724,"title":"Release notes not published at http://api.coala.io","body":"https://github.com/coala/coala/blob/master/RELEASE_NOTES.rst is not published in the api docs\n(or in the user docs, but that will be a bit more effort)","comments":5,"createdAt":"2018-08-19T13:22:57Z","updatedAt":"2018-08-23T17:43:22Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1534750954000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5725","number":5725,"title":"Listing bears failes with ImportError: attempted relative import with no known parent package","body":"Overview Description\nListing bears failes with ImportError: attempted relative import with no known parent package\nSteps to Reproduce\n\npip3 install --user coala-bears\npython3.6 ~/.local/lib64/python3.6/site-packages/coalib/coala.py -B\n\nActual Results\n[WARNING][09:32:28] Unable to collect bears from /home/christian/.local/lib64/python3.6/site-packages/coalib/bears/Bear.py. Probably the file is malformed or the module code raises an exception.\n[INFO][09:32:28] Exception was:\nTraceback (most recent call last):\n\n  File \"/home/christian/.local/lib64/python3.6/site-packages/coalib/collecting/Collectors.py\", line 129, in icollect_bears\n    for bear in _import_bears(matching_file, kinds):\n\n  File \"/home/christian/.local/lib64/python3.6/site-packages/coalib/collecting/Collectors.py\", line 27, in _import_bears\n    types=list):\n\n  File \"/home/christian/.local/lib64/python3.6/site-packages/coalib/collecting/Importers.py\", line 160, in iimport_objects\n    attributes, local)\n\n  File \"/home/christian/.local/lib64/python3.6/site-packages/coala_utils/decorators.py\", line 26, in yield_once_generator\n    for item in iterator(*args, **kwargs):\n\n  File \"/home/christian/.local/lib64/python3.6/site-packages/coalib/collecting/Importers.py\", line 119, in _iimport_objects\n    module = _import_module(file_path)\n\n  File \"/home/christian/.local/lib64/python3.6/site-packages/coalib/collecting/Importers.py\", line 31, in _import_module\n    return __import__(module_name)\n\n  File \"/home/christian/.local/lib64/python3.6/site-packages/coalib/bears/Bear.py\", line 21, in <module>\n    from .meta import bearclass\n\nImportError: attempted relative import with no known parent package\n[WARNING][09:32:28] Unable to collect bears from /home/christian/.local/lib64/python3.6/site-packages/coalib/bears/Bear.py. Probably the file is malformed or the module code raises an exception.\n[INFO][09:32:28] Exception was:\nTraceback (most recent call last):\n\n  File \"/home/christian/.local/lib64/python3.6/site-packages/coalib/collecting/Collectors.py\", line 129, in icollect_bears\n    for bear in _import_bears(matching_file, kinds):\n\n  File \"/home/christian/.local/lib64/python3.6/site-packages/coalib/collecting/Collectors.py\", line 27, in _import_bears\n    types=list):\n\n  File \"/home/christian/.local/lib64/python3.6/site-packages/coalib/collecting/Importers.py\", line 160, in iimport_objects\n    attributes, local)\n\n  File \"/home/christian/.local/lib64/python3.6/site-packages/coala_utils/decorators.py\", line 26, in yield_once_generator\n    for item in iterator(*args, **kwargs):\n\n  File \"/home/christian/.local/lib64/python3.6/site-packages/coalib/collecting/Importers.py\", line 119, in _iimport_objects\n    module = _import_module(file_path)\n\n  File \"/home/christian/.local/lib64/python3.6/site-packages/coalib/collecting/Importers.py\", line 31, in _import_module\n    return __import__(module_name)\n\n  File \"/home/christian/.local/lib64/python3.6/site-packages/coalib/bears/Bear.py\", line 21, in <module>\n    from .meta import bearclass\n\nImportError: attempted relative import with no known parent package\nGlobalBear\nLocalBear\n\n\nExpected Results\nA list of bears.\nReproducibility\nFull\nAdditional Information:\n\ncoalib version 0.11.0\ncoala_utils 0.6.7","comments":0,"createdAt":"2018-08-20T07:41:20Z","updatedAt":"2018-08-20T07:42:34Z","closedAt":null,"state":"open","user":{"login":"feddischson","avatarUrl":"https://avatars1.githubusercontent.com/u/6832431?v=4"},"owner":{"login":"feddischson","avatarUrl":"https://avatars1.githubusercontent.com/u/6832431?v=4"},"labels":[{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1532585253000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5654","number":5654,"title":"JSON Bear list is not sorted","body":"If I test the result against a sorted list, it gives different results.\n    def test_show_all_bears(self):\n        with bear_test_module():\n            retval, stdout, stderr = execute_coala(\n                coala.main, 'coala', '--json', '-B', '-I')\n            self.assertEqual(retval, 0)\n            output = json.loads(stdout)\n            self.assertEqual(len(output['bears']), TEST_BEARS_COUNT)\n            self.assertFalse(stderr)\n            self.assertEqual(output,\n>                            {'bears': list(TEST_BEAR_NAMES)})\nE           AssertionError: {'bea[103 chars]r', 'RaiseTestBear', 'SpaceConsistencyTestBear[119 chars]AA']} != {'bea[103 chars]r', 'SpaceConsistencyTestBear', 'RaiseTestBear[119 chars]AA']}\nE             {'bears': ['AspectTestBear',\nE                        'DependentBear',\nE                        'EchoBear',\nE                        'ErrorTestBear',\nE                        'JavaTestBear',\nE                        'LineCountTestBear',\nE           +            'SpaceConsistencyTestBear',\nE                        'RaiseTestBear',\nE           -            'SpaceConsistencyTestBear',\nE                        'TestBear',\nE                        'TestDepBearA',\nE                        'TestDepBearAA',\nE                        'TestDepBearBDependsA',\nE                        'TestDepBearCDependsB',\nE                        'TestDepBearDependsAAndAA']}","comments":3,"createdAt":"2018-07-22T05:45:53Z","updatedAt":"2018-07-26T06:07:33Z","closedAt":"2018-07-26T06:07:33Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"},{"name":"importance/high","color":"eb6420"},{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1532603040000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5655","number":5655,"title":"General bears require `languages=all` when using aspects","body":"For migrating bears to aspects, till now we have to specify the language which must not be for general bears. So, something like languages=All for general bears is required (only when using aspects).","comments":1,"createdAt":"2018-07-22T06:15:04Z","updatedAt":"2018-07-26T11:04:00Z","closedAt":"2018-07-26T11:04:00Z","state":"closed","user":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4"},"owner":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4"},"assignee":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4"},"labels":[{"name":"area/aspects","color":"000000"},{"name":"area/documentation","color":"bfe5bf"},{"name":"area/languages","color":"d4c5f9"},{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1532251618000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5657","number":5657,"title":"Languages incorrectly claims it is a tuple","body":"It should be a mapping, but the bug is it claims to be a tuple.\nReplace with 'object'.","comments":0,"createdAt":"2018-07-22T09:21:31Z","updatedAt":"2018-07-22T09:26:58Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4"},"labels":[{"name":"area/languages","color":"d4c5f9"},{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1532251742000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5658","number":5658,"title":"Languages should be a Mapping","body":"#5657 first. Then make Languages a Mapping and Iterable class (see collections)","comments":0,"createdAt":"2018-07-22T09:29:02Z","updatedAt":"2018-07-22T09:29:02Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"area/languages","color":"d4c5f9"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1532463974000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5659","number":5659,"title":"coala verbose mode","body":"If coala verbose setting is used then if a linter bear also has verbose mode it should also be used.","comments":12,"createdAt":"2018-07-22T11:20:36Z","updatedAt":"2018-07-24T20:26:14Z","closedAt":null,"state":"open","user":{"login":"anctartica","avatarUrl":"https://avatars0.githubusercontent.com/u/7020962?v=4"},"owner":{"login":"anctartica","avatarUrl":"https://avatars0.githubusercontent.com/u/7020962?v=4"},"assignee":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4"},"labels":[{"name":"area/CLI","color":"006b75"},{"name":"type/feature","color":"0052cc"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1532681642000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5664","number":5664,"title":"Installation error: ModuleNotFoundError: No module named 'appdirs'","body":"Installing coala-bears resulted in this , which I havent seen before.\n$ pip install -r requirements.txt \".[alldeps]\"\nProcessing /home/travis/build/jayvdb/coala-bears\nCollecting coala-0.12.0.dev99999999999999 from git+https://github.com/coala/coala#egg=coala-0.12.0.dev99999999999999 (from -r requirements.txt (line 3))\n  Cloning https://github.com/coala/coala to /tmp/pip-build-d6jpvz9r/coala-0.12.0.dev99999999999999\n  Running setup.py (path:/tmp/pip-build-d6jpvz9r/coala-0.12.0.dev99999999999999/setup.py) egg_info for package coala-0.12.0.dev99999999999999 produced metadata for project name coala. Fix your #egg=coala-0.12.0.dev99999999999999 fragments.\nCollecting HTTPolice~=0.5.2 (from -r bear-requirements.txt (line 1))\n  Using cached https://files.pythonhosted.org/packages/3a/b4/ad13fae41373a0734388b7fee1418fb9cdc57662ef46e25bcf805428c187/HTTPolice-0.5.2-py2.py3-none-any.whl\nCollecting aenum~=2.0.8 (from -r bear-requirements.txt (line 2))\n  Using cached https://files.pythonhosted.org/packages/01/11/e0b5efc82daace980210c1b5f1458676ccc6513514955678801b44f9169c/aenum-2.0.10-py3-none-any.whl\nCollecting apertium-lint~=0.29 (from -r bear-requirements.txt (line 3))\nCollecting autoflake~=0.7 (from -r bear-requirements.txt (line 4))\nCollecting autopep8~=1.2 (from -r bear-requirements.txt (line 5))\nCollecting bandit~=1.2 (from -r bear-requirements.txt (line 6))\n  Using cached https://files.pythonhosted.org/packages/77/41/d57366098a30a86af1821e231949221d2b6b896cc4bdd060cc1be27fdd47/bandit-1.4.0-py2.py3-none-any.whl\nCollecting cmakelint~=1.3 (from -r bear-requirements.txt (line 7))\nCollecting cppclean~=0.12.0 (from -r bear-requirements.txt (line 8))\nCollecting cpplint~=1.3 (from -r bear-requirements.txt (line 9))\nCollecting dennis~=0.9 (from -r bear-requirements.txt (line 10))\n  Using cached https://files.pythonhosted.org/packages/2d/2e/2cb43a5e787387b558d2eeefc2713305d2df97c4622cee37b1e6f5505031/dennis-0.9-py2.py3-none-any.whl\nCollecting docutils-ast-writer~=0.1.2 (from -r bear-requirements.txt (line 11))\nCollecting eradicate~=0.1.6 (from -r bear-requirements.txt (line 12))\nCollecting git-url-parse~=1.1.0 (from -r bear-requirements.txt (line 13))\n  Using cached https://files.pythonhosted.org/packages/0d/66/3f4a12c4e13aae46aaa8062c3bef12e86478aac1ed31f4c05c3e1887d367/git_url_parse-1.1.0-py3-none-any.whl\nCollecting guess-language-spirit~=0.5.2 (from -r bear-requirements.txt (line 14))\nCollecting html-linter~=0.4.0 (from -r bear-requirements.txt (line 15))\nCollecting isort~=4.2 (from -r bear-requirements.txt (line 16))\n  Using cached https://files.pythonhosted.org/packages/1f/2c/22eee714d7199ae0464beda6ad5fedec8fee6a2f7ffd1e8f1840928fe318/isort-4.3.4-py3-none-any.whl\nCollecting language-check~=1.0 (from -r bear-requirements.txt (line 17))\nCollecting libclang-py3~=3.4.0 (from -r bear-requirements.txt (line 18))\nCollecting lxml==3.6.0 (from -r bear-requirements.txt (line 19))\nCollecting memento_client~=0.6.1 (from -r bear-requirements.txt (line 20))\n  Using cached https://files.pythonhosted.org/packages/41/8d/8dfc683c1228779b2eb6e80681e70d450b20fce58d53483fb6e5c7f6ff34/memento_client-0.6.1-py2.py3-none-any.whl\nCollecting munkres3~=1.0 (from -r bear-requirements.txt (line 21))\nCollecting mypy-lang~=0.4.6 (from -r bear-requirements.txt (line 22))\nCollecting nbformat~=4.1 (from -r bear-requirements.txt (line 23))\n  Using cached https://files.pythonhosted.org/packages/da/27/9a654d2b6cc1eaa517d1c5a4405166c7f6d72f04f6e7eea41855fe808a46/nbformat-4.4.0-py2.py3-none-any.whl\nCollecting nltk~=3.2 (from -r bear-requirements.txt (line 24))\nCollecting proselint~=0.7.0 (from -r bear-requirements.txt (line 25))\nCollecting pycodestyle~=2.2 (from -r bear-requirements.txt (line 26))\n  Using cached https://files.pythonhosted.org/packages/e5/c6/ce130213489969aa58610042dff1d908c25c731c9575af6935c2dfad03aa/pycodestyle-2.4.0-py2.py3-none-any.whl\nCollecting pydocstyle~=2.0 (from -r bear-requirements.txt (line 27))\n  Using cached https://files.pythonhosted.org/packages/43/8a/f1141af0c8406788a5c38ad5001d4163d903b5384a6517239d2ac42734c8/pydocstyle-2.1.1-py3-none-any.whl\nCollecting pyflakes~=1.5.0 (from -r bear-requirements.txt (line 28))\n  Using cached https://files.pythonhosted.org/packages/27/49/924098b3b85c286696f37e014475d79471ffc44509613af420645a3c12cb/pyflakes-1.5.0-py2.py3-none-any.whl\nCollecting pylint~=1.7.2 (from -r bear-requirements.txt (line 29))\n  Using cached https://files.pythonhosted.org/packages/f8/86/410d53faff049641f34951843245d168261512aea787a1f9f05c3fa025a0/pylint-1.7.6-py2.py3-none-any.whl\nCollecting pyroma~=2.2.0 (from -r bear-requirements.txt (line 30))\nCollecting pyyaml~=3.12 (from -r bear-requirements.txt (line 31))\nCollecting radon==1.4.0 (from -r bear-requirements.txt (line 32))\n  Using cached https://files.pythonhosted.org/packages/b1/24/594df18af8141787d8e2d694fbc898fd26f0aa26597fe6f6652cdb773a7f/radon-1.4.0-py2.py3-none-any.whl\nCollecting restructuredtext-lint~=1.0.0 (from -r bear-requirements.txt (line 33))\nCollecting rstcheck~=3.1 (from -r bear-requirements.txt (line 34))\nCollecting safety~=1.8.2 (from -r bear-requirements.txt (line 35))\n  Downloading https://files.pythonhosted.org/packages/20/58/701d0b61562a63b7f0008bcfd673617b277ddaa2cde217a398f82c146cd4/safety-1.8.2-py2.py3-none-any.whl\nCollecting scspell3k~=2.0 (from -r bear-requirements.txt (line 36))\nCollecting vim-vint!=0.3.19,~=0.3.12 (from -r bear-requirements.txt (line 37))\nCollecting vulture~=0.25.0 (from -r bear-requirements.txt (line 38))\n  Using cached https://files.pythonhosted.org/packages/98/d7/3cc454c33422f1c43255928e7b4bac77a0bcabb113a946997edc60a2a176/vulture-0.25-py2.py3-none-any.whl\nCollecting yamllint~=1.6.1 (from -r bear-requirements.txt (line 39))\n  Using cached https://files.pythonhosted.org/packages/07/cf/213a023883122cc527bdc5cab135a4e30af93c1a0feaa6cabc16aaee68ac/yamllint-1.6.1-py2.py3-none-any.whl\nCollecting yapf~=0.21.0 (from -r bear-requirements.txt (line 40))\n  Using cached https://files.pythonhosted.org/packages/6d/0c/65c7318a7f134270ef565d1cdfffdb714a0de1526f9a6c71452552633da7/yapf-0.21.0-py2.py3-none-any.whl\nCollecting coala>0.11.* (from coala-bears==0.12.0.dev99999999999999)\n  Downloading https://files.pythonhosted.org/packages/24/5c/15242d3079510651c410f56672e6eceabda5b4e53b97344419c79e4239b3/coala-0.12.0.dev20180101025653-py34.py35.py36-none-any.whl (236kB)\n    100% |████████████████████████████████| 245kB 4.8MB/s \nCollecting appdirs~=1.4 (from coala->-r requirements.txt (line 3))\n  Using cached https://files.pythonhosted.org/packages/56/eb/810e700ed1349edde4cbdc1b2a21e28cdf115f9faf263f6bbf8447c1abf3/appdirs-1.4.3-py2.py3-none-any.whl\nCollecting cached_property~=1.4.3 (from coala->-r requirements.txt (line 3))\n  Using cached https://files.pythonhosted.org/packages/88/09/4b7a484f96cbceda746e03f0167021c909c3ceae1c6f2e844d79476cb70e/cached_property-1.4.3-py2.py3-none-any.whl\nCollecting cli_helpers~=1.0.2 (from coala->-r requirements.txt (line 3))\n  Using cached https://files.pythonhosted.org/packages/bf/4a/f3a506a57619978e1775279d2bc4435821db1c391087ac02aa20137f765d/cli_helpers-1.0.2-py3-none-any.whl\nCollecting coala_utils (from coala->-r requirements.txt (line 3))\n  Using cached https://files.pythonhosted.org/packages/93/7d/65d619f7a64ac2ea6d43b047e63a8605d1c7193195b52a59c7ea342f5a53/coala_utils-0.7.0-py3-none-any.whl\nCollecting colorlog<4.0,>=2.7 (from coala->-r requirements.txt (line 3))\n  Using cached https://files.pythonhosted.org/packages/69/eb/58ae10d3c46a0195ffdd0e3943d255d0d5029d71e5457785ecd665bcf0f3/colorlog-3.1.4-py2.py3-none-any.whl\nCollecting dependency_management (from coala->-r requirements.txt (line 3))\n  Using cached https://files.pythonhosted.org/packages/1d/c7/e1ff3d4b90b1a4197e90bb43c87200ce89c677e26dadbc55cc9f943de47b/dependency_management-0.4.0-py3-none-any.whl\nCollecting packaging>=16.8 (from coala->-r requirements.txt (line 3))\n  Downloading https://files.pythonhosted.org/packages/ad/c2/b500ea05d5f9f361a562f089fc91f77ed3b4783e13a08a3daf82069b1224/packaging-17.1-py2.py3-none-any.whl\nCollecting Pygments~=2.1 (from coala->-r requirements.txt (line 3))\n  Using cached https://files.pythonhosted.org/packages/02/ee/b6e02dc6529e82b75bb06823ff7d005b141037cb1416b10c6f00fc419dca/Pygments-2.2.0-py2.py3-none-any.whl\nCollecting PyPrint~=0.2.6 (from coala->-r requirements.txt (line 3))\n  Using cached https://files.pythonhosted.org/packages/b0/45/8912d660c6accfe665f6649433362aa0eb9a94a3a71ee3a71d8956f0a4ed/PyPrint-0.2.6-py3-none-any.whl\nCollecting requests~=2.12 (from coala->-r requirements.txt (line 3))\n  Using cached https://files.pythonhosted.org/packages/65/47/7e02164a2a3db50ed6d8a6ab1d6d60b69c4c3fdf57a284257925dfc12bda/requests-2.19.1-py2.py3-none-any.whl\nRequirement already satisfied: setuptools>=21.0.0 in /home/travis/virtualenv/python3.6.3/lib/python3.6/site-packages (from coala->-r requirements.txt (line 3))\nCollecting unidiff~=0.5.2 (from coala->-r requirements.txt (line 3))\n  Using cached https://files.pythonhosted.org/packages/68/52/c7278fc3c17d1aaade84597968d88f97f0f4ec7288ddedb6970a341c5170/unidiff-0.5.5-py2.py3-none-any.whl\nCollecting dominate>=2.2.0 (from HTTPolice~=0.5.2->-r bear-requirements.txt (line 1))\nCollecting bitstring>=3.1.4 (from HTTPolice~=0.5.2->-r bear-requirements.txt (line 1))\nRequirement already satisfied: six>=1.10.0 in /home/travis/virtualenv/python3.6.3/lib/python3.6/site-packages (from HTTPolice~=0.5.2->-r bear-requirements.txt (line 1))\nCollecting singledispatch>=3.4.0.3 (from HTTPolice~=0.5.2->-r bear-requirements.txt (line 1))\n  Using cached https://files.pythonhosted.org/packages/c5/10/369f50bcd4621b263927b0a1519987a04383d4a98fb10438042ad410cf88/singledispatch-3.4.0.3-py2.py3-none-any.whl\nCollecting defusedxml>=0.5.0 (from HTTPolice~=0.5.2->-r bear-requirements.txt (line 1))\n  Using cached https://files.pythonhosted.org/packages/87/1c/17f3e3935a913dfe2a5ca85fa5ccbef366bfd82eb318b1f75dadbf0affca/defusedxml-0.5.0-py2.py3-none-any.whl\nCollecting brotlipy>=0.5.1 (from HTTPolice~=0.5.2->-r bear-requirements.txt (line 1))\n  Using cached https://files.pythonhosted.org/packages/b8/e6/be86d2d6565fcf4bd82cca288ac1e264a50dbfa41bef86b63b5d69252fca/brotlipy-0.7.0-cp36-cp36m-manylinux1_x86_64.whl\nCollecting GitPython>=1.0.1 (from bandit~=1.2->-r bear-requirements.txt (line 6))\n  Downloading https://files.pythonhosted.org/packages/fe/e5/fafe827507644c32d6dc553a1c435cdf882e0c28918a5bab29f7fbebfb70/GitPython-2.1.11-py2.py3-none-any.whl (448kB)\n    100% |████████████████████████████████| 450kB 2.7MB/s \nCollecting stevedore>=1.17.1 (from bandit~=1.2->-r bear-requirements.txt (line 6))\n  Downloading https://files.pythonhosted.org/packages/a1/d9/93a975469c53a9ee85de9ec0deb12345aa777748b4c263860668592344fe/stevedore-1.29.0-py2.py3-none-any.whl\nCollecting click>=6 (from dennis~=0.9->-r bear-requirements.txt (line 10))\n  Using cached https://files.pythonhosted.org/packages/34/c1/8806f99713ddb993c5366c362b2f908f18269f8d792aff1abfd700775a77/click-6.7-py2.py3-none-any.whl\nCollecting polib>=1.0.8 (from dennis~=0.9->-r bear-requirements.txt (line 10))\n  Using cached https://files.pythonhosted.org/packages/30/a2/e407c3b00cace3d7fc8df14d364deeecfeb96044e1a317de583bc26eae58/polib-1.1.0-py2.py3-none-any.whl\nCollecting docutils>=0.12 (from docutils-ast-writer~=0.1.2->-r bear-requirements.txt (line 11))\n  Using cached https://files.pythonhosted.org/packages/36/fa/08e9e6e0e3cbd1d362c3bbee8d01d0aedb2155c4ac112b19ef3cae8eed8d/docutils-0.14-py3-none-any.whl\nRequirement already satisfied: pbr in /home/travis/virtualenv/python3.6.3/lib/python3.6/site-packages (from git-url-parse~=1.1.0->-r bear-requirements.txt (line 13))\nCollecting docopt>=0.6.1 (from html-linter~=0.4.0->-r bear-requirements.txt (line 15))\nCollecting template-remover (from html-linter~=0.4.0->-r bear-requirements.txt (line 15))\nCollecting traitlets>=4.1 (from nbformat~=4.1->-r bear-requirements.txt (line 23))\n  Using cached https://files.pythonhosted.org/packages/93/d6/abcb22de61d78e2fc3959c964628a5771e47e7cc60d53e9342e21ed6cc9a/traitlets-4.3.2-py2.py3-none-any.whl\nCollecting jupyter-core (from nbformat~=4.1->-r bear-requirements.txt (line 23))\n  Using cached https://files.pythonhosted.org/packages/1d/44/065d2d7bae7bebc06f1dd70d23c36da8c50c0f08b4236716743d706762a8/jupyter_core-4.4.0-py2.py3-none-any.whl\nCollecting jsonschema!=2.5.0,>=2.4 (from nbformat~=4.1->-r bear-requirements.txt (line 23))\n  Using cached https://files.pythonhosted.org/packages/77/de/47e35a97b2b05c2fadbec67d44cfcdcd09b8086951b331d82de90d2912da/jsonschema-2.6.0-py2.py3-none-any.whl\nCollecting ipython-genutils (from nbformat~=4.1->-r bear-requirements.txt (line 23))\n  Using cached https://files.pythonhosted.org/packages/fa/bc/9bd3b5c2b4774d5f33b2d544f1460be9df7df2fe42f352135381c347c69a/ipython_genutils-0.2.0-py2.py3-none-any.whl\nCollecting future (from proselint~=0.7.0->-r bear-requirements.txt (line 25))\nCollecting snowballstemmer (from pydocstyle~=2.0->-r bear-requirements.txt (line 27))\n  Using cached https://files.pythonhosted.org/packages/d4/6c/8a935e2c7b54a37714656d753e4187ee0631988184ed50c0cf6476858566/snowballstemmer-1.2.1-py2.py3-none-any.whl\nCollecting astroid<1.6,>=1.5.1 (from pylint~=1.7.2->-r bear-requirements.txt (line 29))\n  Using cached https://files.pythonhosted.org/packages/9a/a7/d8155abf1c58457f1c65a20208ff128ec403d810dd55c40a39047f1bbddd/astroid-1.5.3-py2.py3-none-any.whl\nCollecting mccabe (from pylint~=1.7.2->-r bear-requirements.txt (line 29))\n  Using cached https://files.pythonhosted.org/packages/87/89/479dc97e18549e21354893e4ee4ef36db1d237534982482c3681ee6e7b57/mccabe-0.6.1-py2.py3-none-any.whl\nCollecting colorama<0.4,>=0.3 (from radon==1.4.0->-r bear-requirements.txt (line 32))\n  Using cached https://files.pythonhosted.org/packages/db/c8/7dcf9dbcb22429512708fe3a547f8b6101c0d02137acbd892505aee57adf/colorama-0.3.9-py2.py3-none-any.whl\nCollecting mando<0.4,>=0.3 (from radon==1.4.0->-r bear-requirements.txt (line 32))\n  Using cached https://files.pythonhosted.org/packages/4a/77/180f0b61dca785a6b76c4f1ba611100fbc628abeb8415fa7c5c4c5d99e0b/mando-0.3.3-py2.py3-none-any.whl\nRequirement already satisfied: pip in /home/travis/virtualenv/python3.6.3/lib/python3.6/site-packages (from safety~=1.8.2->-r bear-requirements.txt (line 35))\nCollecting dparse>=0.4.1 (from safety~=1.8.2->-r bear-requirements.txt (line 35))\n  Downloading https://files.pythonhosted.org/packages/8d/89/39cdc1b885e0af65fd172be21c318c3c750d1fbca0582c7b7ffe9873ed78/dparse-0.4.1.tar.gz\nCollecting chardet>=2.3.0 (from vim-vint!=0.3.19,~=0.3.12->-r bear-requirements.txt (line 37))\n  Using cached https://files.pythonhosted.org/packages/bc/a9/01ffebfb562e4274b6487b4bb1ddec7ca55ec7510b22e4c51f14098443b8/chardet-3.0.4-py2.py3-none-any.whl\nCollecting ansicolor~=0.2.4 (from vim-vint!=0.3.19,~=0.3.12->-r bear-requirements.txt (line 37))\n  Using cached https://files.pythonhosted.org/packages/42/0b/f370fae6d0070758e8bbf46c77da779e4ea79870ea5197893b2678848aeb/ansicolor-0.2.6-py2.py3-none-any.whl\nCollecting testfixtures~=4.14.3 (from coala>0.11.*->coala-bears==0.12.0.dev99999999999999)\n  Downloading https://files.pythonhosted.org/packages/6c/4e/0381a0ead1f270f0bd2854e3ad40c24242bcf9ee99093e786111f831cad2/testfixtures-4.14.3-py2.py3-none-any.whl (77kB)\n    100% |████████████████████████████████| 81kB 10.4MB/s \nCollecting tabulate[widechars]>=0.8.2 (from cli_helpers~=1.0.2->coala->-r requirements.txt (line 3))\nCollecting terminaltables>=3.0.0 (from cli_helpers~=1.0.2->coala->-r requirements.txt (line 3))\nCollecting sarge~=0.1.4 (from dependency_management->coala->-r requirements.txt (line 3))\nCollecting pyparsing>=2.0.2 (from packaging>=16.8->coala->-r requirements.txt (line 3))\n  Using cached https://files.pythonhosted.org/packages/6a/8a/718fd7d3458f9fab8e67186b00abdd345b639976bc7fb3ae722e1b026a50/pyparsing-2.2.0-py2.py3-none-any.whl\nCollecting termcolor~=1.1.0 (from PyPrint~=0.2.6->coala->-r requirements.txt (line 3))\nCollecting certifi>=2017.4.17 (from requests~=2.12->coala->-r requirements.txt (line 3))\n  Using cached https://files.pythonhosted.org/packages/7c/e6/92ad559b7192d846975fc916b65f667c7b8c3a32bea7372340bfe9a15fa5/certifi-2018.4.16-py2.py3-none-any.whl\nCollecting idna<2.8,>=2.5 (from requests~=2.12->coala->-r requirements.txt (line 3))\n  Using cached https://files.pythonhosted.org/packages/4b/2a/0276479a4b3caeb8a8c1af2f8e4355746a97fab05a372e4a2c6a6b876165/idna-2.7-py2.py3-none-any.whl\nCollecting urllib3<1.24,>=1.21.1 (from requests~=2.12->coala->-r requirements.txt (line 3))\n  Using cached https://files.pythonhosted.org/packages/bd/c9/6fdd990019071a4a32a5e7cb78a1d92c53851ef4f56f62a3486e6a7d8ffb/urllib3-1.23-py2.py3-none-any.whl\nCollecting cffi>=1.0.0 (from brotlipy>=0.5.1->HTTPolice~=0.5.2->-r bear-requirements.txt (line 1))\n  Using cached https://files.pythonhosted.org/packages/6d/c0/47db8f624f3e4e2f3f27be03a93379d1ba16a1450a7b1aacfa0366e2c0dd/cffi-1.11.5-cp36-cp36m-manylinux1_x86_64.whl\nCollecting gitdb2>=2.0.0 (from GitPython>=1.0.1->bandit~=1.2->-r bear-requirements.txt (line 6))\n  Downloading https://files.pythonhosted.org/packages/a9/fb/d3afc4e2a8d506a07af19f125f7a473ae1b56f942ed2ba80776eb8ae23b1/gitdb2-2.0.4-py2.py3-none-any.whl (62kB)\n    100% |████████████████████████████████| 71kB 10.8MB/s \nCollecting decorator (from traitlets>=4.1->nbformat~=4.1->-r bear-requirements.txt (line 23))\n  Using cached https://files.pythonhosted.org/packages/bc/bb/a24838832ba35baf52f32ab1a49b906b5f82fb7c76b2f6a7e35e140bac30/decorator-4.3.0-py2.py3-none-any.whl\nCollecting lazy-object-proxy (from astroid<1.6,>=1.5.1->pylint~=1.7.2->-r bear-requirements.txt (line 29))\n  Using cached https://files.pythonhosted.org/packages/65/1f/2043ec33066e779905ed7e6580384425fdc7dc2ac64d6931060c75b0c5a3/lazy_object_proxy-1.3.1-cp36-cp36m-manylinux1_x86_64.whl\nCollecting wrapt (from astroid<1.6,>=1.5.1->pylint~=1.7.2->-r bear-requirements.txt (line 29))\nCollecting wcwidth; extra == \"widechars\" (from tabulate[widechars]>=0.8.2->cli_helpers~=1.0.2->coala->-r requirements.txt (line 3))\n  Using cached https://files.pythonhosted.org/packages/7e/9f/526a6947247599b084ee5232e4f9190a38f398d7300d866af3ab571a5bfe/wcwidth-0.1.7-py2.py3-none-any.whl\nCollecting pycparser (from cffi>=1.0.0->brotlipy>=0.5.1->HTTPolice~=0.5.2->-r bear-requirements.txt (line 1))\nCollecting smmap2>=2.0.0 (from gitdb2>=2.0.0->GitPython>=1.0.1->bandit~=1.2->-r bear-requirements.txt (line 6))\n  Downloading https://files.pythonhosted.org/packages/0f/14/e3112808b727f72df9531fc2f00b84d4966e66001748b6883a21c767e902/smmap2-2.0.4-py2.py3-none-any.whl\nBuilding wheels for collected packages: coala-bears, dparse\n  Running setup.py bdist_wheel for coala-bears ... done\n  Stored in directory: /home/travis/.cache/pip/wheels/b2/ca/19/7a08b6c420c1b225baecb51100ae57c6fcfa6399dbca4158c2\n  Running setup.py bdist_wheel for dparse ... done\n  Stored in directory: /home/travis/.cache/pip/wheels/4a/8d/fa/d8d1526ad5615bc0fc10502e16dfc2a70802106cba099d2518\nSuccessfully built coala-bears dparse\nInstalling collected packages: coala, dominate, bitstring, lxml, singledispatch, defusedxml, pycparser, cffi, brotlipy, HTTPolice, aenum, apertium-lint, pyflakes, autoflake, pycodestyle, autopep8, smmap2, gitdb2, GitPython, pyyaml, stevedore, bandit, cmakelint, cppclean, cpplint, click, polib, dennis, docutils, docutils-ast-writer, eradicate, git-url-parse, guess-language-spirit, docopt, template-remover, html-linter, isort, language-check, libclang-py3, certifi, idna, urllib3, chardet, requests, memento-client, munkres3, mypy-lang, decorator, ipython-genutils, traitlets, jupyter-core, jsonschema, nbformat, nltk, future, proselint, snowballstemmer, pydocstyle, lazy-object-proxy, wrapt, astroid, mccabe, pylint, pyroma, colorama, mando, radon, restructuredtext-lint, rstcheck, pyparsing, packaging, dparse, safety, scspell3k, ansicolor, vim-vint, vulture, yamllint, yapf, appdirs, cached-property, wcwidth, tabulate, terminaltables, cli-helpers, testfixtures, termcolor, PyPrint, coala-utils, colorlog, sarge, dependency-management, Pygments, unidiff, coala, coala-bears\n  Running setup.py install for coala ... error\n    Complete output from command /home/travis/virtualenv/python3.6.3/bin/python -u -c \"import setuptools, tokenize;__file__='/tmp/pip-build-d6jpvz9r/coala-0.12.0.dev99999999999999/setup.py';f=getattr(tokenize, 'open', open)(__file__);code=f.read().replace('\\r\\n', '\\n');f.close();exec(compile(code, __file__, 'exec'))\" install --record /tmp/pip-n6ktgc2w-record/install-record.txt --single-version-externally-managed --compile --install-headers /home/travis/virtualenv/python3.6.3/include/site/python3.6/coala:\n    running install\n    running build\n    running build_py\n    running build_manpage\n    Traceback (most recent call last):\n      File \"<string>\", line 1, in <module>\n      File \"/tmp/pip-build-d6jpvz9r/coala-0.12.0.dev99999999999999/setup.py\", line 244, in <module>\n        cmdclass=SETUP_COMMANDS,\n      File \"/home/travis/virtualenv/python3.6.3/lib/python3.6/site-packages/setuptools/__init__.py\", line 129, in setup\n        return distutils.core.setup(**attrs)\n      File \"/opt/python/3.6.3/lib/python3.6/distutils/core.py\", line 148, in setup\n        dist.run_commands()\n      File \"/opt/python/3.6.3/lib/python3.6/distutils/dist.py\", line 955, in run_commands\n        self.run_command(cmd)\n      File \"/opt/python/3.6.3/lib/python3.6/distutils/dist.py\", line 974, in run_command\n        cmd_obj.run()\n      File \"/home/travis/virtualenv/python3.6.3/lib/python3.6/site-packages/setuptools/command/install.py\", line 61, in run\n        return orig.install.run(self)\n      File \"/opt/python/3.6.3/lib/python3.6/distutils/command/install.py\", line 545, in run\n        self.run_command('build')\n      File \"/opt/python/3.6.3/lib/python3.6/distutils/cmd.py\", line 313, in run_command\n        self.distribution.run_command(command)\n      File \"/opt/python/3.6.3/lib/python3.6/distutils/dist.py\", line 974, in run_command\n        cmd_obj.run()\n      File \"/opt/python/3.6.3/lib/python3.6/distutils/command/build.py\", line 135, in run\n        self.run_command(cmd_name)\n      File \"/opt/python/3.6.3/lib/python3.6/distutils/cmd.py\", line 313, in run_command\n        self.distribution.run_command(command)\n      File \"/opt/python/3.6.3/lib/python3.6/distutils/dist.py\", line 974, in run_command\n        cmd_obj.run()\n      File \"/tmp/pip-build-d6jpvz9r/coala-0.12.0.dev99999999999999/setup.py\", line 38, in run\n        self.run_command('build_manpage')\n      File \"/opt/python/3.6.3/lib/python3.6/distutils/cmd.py\", line 313, in run_command\n        self.distribution.run_command(command)\n      File \"/opt/python/3.6.3/lib/python3.6/distutils/dist.py\", line 973, in run_command\n        cmd_obj.ensure_finalized()\n      File \"/opt/python/3.6.3/lib/python3.6/distutils/cmd.py\", line 107, in ensure_finalized\n        self.finalize_options()\n      File \"/tmp/pip-build-d6jpvz9r/coala-0.12.0.dev99999999999999/coalib/misc/BuildManPage.py\", line 57, in finalize_options\n        mod = __import__(mod_name, fromlist=fromlist)\n      File \"/tmp/pip-build-d6jpvz9r/coala-0.12.0.dev99999999999999/coalib/parsing/DefaultArgParser.py\", line 4, in <module>\n        from coalib.misc import Constants\n      File \"/tmp/pip-build-d6jpvz9r/coala-0.12.0.dev99999999999999/coalib/misc/Constants.py\", line 3, in <module>\n        import appdirs\n    ModuleNotFoundError: No module named 'appdirs'\n    \n    ----------------------------------------\nCommand \"/home/travis/virtualenv/python3.6.3/bin/python -u -c \"import setuptools, tokenize;__file__='/tmp/pip-build-d6jpvz9r/coala-0.12.0.dev99999999999999/setup.py';f=getattr(tokenize, 'open', open)(__file__);code=f.read().replace('\\r\\n', '\\n');f.close();exec(compile(code, __file__, 'exec'))\" install --record /tmp/pip-n6ktgc2w-record/install-record.txt --single-version-externally-managed --compile --install-headers /home/travis/virtualenv/python3.6.3/include/site/python3.6/coala\" failed with error code 1 in /tmp/pip-build-d6jpvz9r/coala-0.12.0.dev99999999999999/\n\nhttps://travis-ci.org/jayvdb/coala-bears/jobs/407420330","comments":3,"createdAt":"2018-07-24T02:50:36Z","updatedAt":"2018-07-27T08:54:02Z","closedAt":"2018-07-27T08:54:02Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1533378692000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5667","number":5667,"title":"Can not invoke coala as a Python modules","body":"$ python3.7 -m coala --bears TextLintBear --files README.rst \n/bin/python3.7: No module named coala\npython3.7 -m coalib --bears TextLintBear --files README.rst \n/bin/python3.7: No module named coalib","comments":8,"createdAt":"2018-07-26T09:09:26Z","updatedAt":"2018-08-04T10:31:32Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"Naveenaidu","avatarUrl":"https://avatars1.githubusercontent.com/u/30195193?v=4"},"labels":[{"name":"area/CLI","color":"006b75"},{"name":"difficulty/low","color":"207de5"},{"name":"importance/medium","color":"fbca04"},{"name":"type/feature","color":"0052cc"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1535844501000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5668","number":5668,"title":"Add Jekyll Liquid language","body":"We use Liquid language in Jekyll sites.\nWe should have a language definition for it.","comments":5,"createdAt":"2018-07-26T10:53:09Z","updatedAt":"2018-09-01T23:28:21Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"},{"name":"importance/medium","color":"fbca04"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1532669629000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5671","number":5671,"title":"coalaJSONTest has useless patch","body":"Patching of coalib.parsing.DefaultArgParser.get_all_bears_names in f9e46c8 is a bit unnecessary.\nShould look for other cases where two patches are used together","comments":1,"createdAt":"2018-07-27T02:49:19Z","updatedAt":"2018-07-27T05:33:49Z","closedAt":"2018-07-27T05:33:49Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"area/CLI","color":"006b75"},{"name":"area/tests","color":"bfd4f2"},{"name":"difficulty/low","color":"207de5"},{"name":"importance/low","color":"70E870"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1534329612000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5674","number":5674,"title":"TestUtilities.execute_coala should check for timeouts","body":"If there was a timeout during a test using execute_coala, pytest-timeout will emit Failed: Timeout >35.0s (number may change) and the timeout failure will be lost inside execute_coala/bear_test_module.\nThe test module will continue with the assertions, and cause various errors, as these coala output will be in a strange incomplete state.\nThis is one of the problems affecting #5571 and #5390\nA quick workaround is to detect Failed: Timeout is stderr inside execute_coala and re-raise the problem with the complete stderr and stdout for debugging purposes.","comments":4,"createdAt":"2018-07-28T02:19:42Z","updatedAt":"2018-08-15T10:40:12Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"starlord1311","avatarUrl":"https://avatars3.githubusercontent.com/u/32419214?v=4"},"labels":[{"name":"area/upstream","color":"5319e7"},{"name":"difficulty/low","color":"207de5"},{"name":"importance/high","color":"eb6420"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1535815764000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5676","number":5676,"title":"Fix the API breakage problem because of `debugger` flag in bear base class","body":"For further information https://github.com/coala/coala/pull/5599/files#r203964627","comments":8,"createdAt":"2018-07-28T10:40:37Z","updatedAt":"2018-09-01T15:29:24Z","closedAt":"2018-09-01T15:26:40Z","state":"closed","user":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4"},"owner":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4"},"assignee":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1533965471000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5683","number":5683,"title":"deprecate_settings to support splitting a value to two new args","body":"I would like to split the checkstyle_configs arg into two args, as they are two different data-types.\nIt seems @deprecate_settings and FunctionMetadata cant support this, as they expect a deprecated arg to only be used once.\nHere is a more detailed look at what I tried to do, and failed.\ndef get_name(value):\n    if value in known_checkstyles.keys():\n        return value\n\ndef get_path(value):\n    if value not in known_checkstyles.keys():\n        return value\n\nclass CheckstyleBear:\n    ...\n\n    @deprecate_settings(\n        java_style_name=('checkstyle_configs',\n                         get_name),\n        checkstyle_config=('checkstyle_configs',\n                           get_path),\n    )\n    def create_arguments(\n            self, filename, file, config_file,\n            checkstyle_config: path = None,\n            java_style_name: CheckstyleStyle = 'google',\n            ...","comments":0,"createdAt":"2018-07-31T02:49:26Z","updatedAt":"2018-08-11T05:31:11Z","closedAt":"2018-08-11T05:31:11Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"type/feature","color":"0052cc"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1533555354000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5685","number":5685,"title":"Inappropriate prompt message","body":"When coala is invoked with --single-action, a menu is shown with a prompt saying [ ] Enter number (Ctrl-D to exit): but valid input is a letter, not a number.\nNeeds a fix in:\nSTR_ENTER_NUMBER = 'Enter number (Ctrl-{} to exit): '.format('Z' if platform.system() == 'Windows' else 'D')\nDifficulty: Newcomer","comments":6,"createdAt":"2018-08-04T09:35:38Z","updatedAt":"2018-08-06T11:35:54Z","closedAt":"2018-08-06T11:35:54Z","state":"closed","user":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4"},"owner":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4"},"assignee":{"login":"Utkarsh1308","avatarUrl":"https://avatars0.githubusercontent.com/u/23418707?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1533991680000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5689","number":5689,"title":"Add tag based section filters.","body":"We need to have a way using which sections can be tagged and specific tags can be invoked. For example:\n[samples]\ntags = tag_one\nbears = SomeLongBear\n\n[other_sample]\nbears = SomeLongBear\n\nWhen run using coala --tags tag_one tag_two only samples section should be invoked.\nPart of cEP-0028.","comments":1,"createdAt":"2018-08-05T14:41:33Z","updatedAt":"2018-08-11T12:48:00Z","closedAt":"2018-08-11T12:48:00Z","state":"closed","user":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4"},"owner":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1533581367000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5692","number":5692,"title":"Add XML language in definitions","body":"c.f https://gitlab.com/coala/bears/coala-antlr/merge_requests/25/diffs?commit_id=36142dfb4456b6dd9ee4255e042ab313eab894b2#note_92551492\nRequired by XMLIndentBear","comments":1,"createdAt":"2018-08-05T16:36:07Z","updatedAt":"2018-08-06T18:49:27Z","closedAt":"2018-08-06T18:49:27Z","state":"closed","user":{"login":"virresh","avatarUrl":"https://avatars0.githubusercontent.com/u/10978108?v=4"},"owner":{"login":"virresh","avatarUrl":"https://avatars0.githubusercontent.com/u/10978108?v=4"},"assignee":{"login":"virresh","avatarUrl":"https://avatars0.githubusercontent.com/u/10978108?v=4"},"labels":[{"name":"area/aspects","color":"000000"},{"name":"area/documentation","color":"bfe5bf"},{"name":"area/languages","color":"d4c5f9"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1533541805000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5694","number":5694,"title":"Modify `Linter` module for aspects","body":"Linter module needs to be modified so that the Result object makes use of aspects. It can be made similar to the implementation in the Result module plus more features can be added to make it even more usable.","comments":0,"createdAt":"2018-08-06T07:45:07Z","updatedAt":"2018-08-06T07:50:05Z","closedAt":null,"state":"open","user":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4"},"owner":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4"},"labels":[{"name":"area/aspects","color":"000000"},{"name":"area/documentation","color":"bfe5bf"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1531136347000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5578","number":5578,"title":"Create Visual Basic language file","body":"Visual Basic has some interesting language components for strings and quotes.","comments":0,"createdAt":"2018-06-28T11:40:20Z","updatedAt":"2018-07-09T11:39:07Z","closedAt":"2018-07-09T11:39:07Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4"},"labels":[{"name":"area/languages","color":"d4c5f9"},{"name":"difficulty/low","color":"207de5"},{"name":"importance/low","color":"70E870"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1530479602000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5579","number":5579,"title":"AttributeError: 'coroutine' object has no attribute 'add_done_callback' on Python 3.7-dev","body":"NextGen scheduler is failing on Python 3.7 (dev):\n                for future in futures:\n>                   future.add_done_callback(functools.partial(\n                        self._finish_task, bear))\nE                   AttributeError: 'coroutine' object has no attribute 'add_done_callback'\nhttps://travis-ci.org/jayvdb/coala/jobs/397832084","comments":6,"createdAt":"2018-06-28T14:47:48Z","updatedAt":"2018-07-01T21:13:22Z","closedAt":"2018-06-30T15:44:36Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"labels":[{"name":"area/tests","color":"bfd4f2"},{"name":"importance/high","color":"eb6420"},{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1530248220000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5580","number":5580,"title":"Support Tcl `comment_delimiters`","body":"In Tcl, # only works at the beginning of a line of code whereas ;# is used in the middle of the statement.\nSupport for this needs to be added to coala.\nSee #5576 (comment)","comments":0,"createdAt":"2018-06-29T04:51:54Z","updatedAt":"2018-06-29T04:57:00Z","closedAt":null,"state":"open","user":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4"},"owner":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1530519420000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5582","number":5582,"title":"Create language file for PowerShell","body":"PowerShell should be a reasonably 'normal' language, except it uses a different escape character.","comments":0,"createdAt":"2018-06-30T22:21:31Z","updatedAt":"2018-07-02T08:17:00Z","closedAt":"2018-07-02T08:17:00Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1531080889000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5584","number":5584,"title":"NextGen-Core test fail for persistent_hash on Python 3.7","body":"Using Python 3.7 on docker from image python:3.7.0b5-stretch:\n=========================================================== test session starts ============================================================\nplatform linux -- Python 3.7.0b5, pytest-3.6.2, py-1.5.4, pluggy-0.6.0\nrootdir: /home, inifile: setup.cfg\nplugins: requests-mock-1.5.0, xdist-1.22.2, timeout-1.3.0, reqs-0.0.7, reorder-0.1.1, profiling-1.3.0, mock-1.10.0, instafail-0.3.0, forked-0.2, error-for-skips-1.0.0, env-0.6.2, cov-2.5.1\ntimeout: 35.0s\ntimeout method: signal\ntimeout func_only: False\ncollected 978 items / 849 deselected                                                                                                       \n\ncoalib/core/Bear.py ....                                                                                                             [  3%]\ncoalib/core/Core.py .                                                                                                                [  3%]\ncoalib/core/DependencyTracker.py ............                                                                                        [ 12%]\ncoalib/core/Graphs.py .                                                                                                              [ 13%]\ntests/core/BearTest.py ..............                                                                                                [ 24%]\ntests/core/CircularDependencyErrorTest.py ..                                                                                         [ 25%]\ntests/core/CoreTest.py ..................................................                                                            [ 64%]\ntests/core/DependencyBearTest.py .........                                                                                           [ 70%]\ntests/core/DependencyTrackerTest.py .........                                                                                        [ 77%]\ntests/core/FileBearTest.py .......                                                                                                   [ 83%]\ntests/core/GraphsTest.py .............                                                                                               [ 93%]\ntests/core/PersistentHashTest.py F\n\n_______________________________________________________ PersistentHashTest.test_int ________________________________________________________\n\nself = <tests.core.PersistentHashTest.PersistentHashTest testMethod=test_int>\n\n    def test_int(self):\n        self.assertEqual(\n            persistent_hash(3),\n>           b'\\xd8YA\\x03x|c\"@\\xe8\\x8b~\\xb9\\xb6\\x8d\\x95\\x8dzp\\x8a')\nE       AssertionError: b'\\xf9\\x85\\xb9\\x15H\\xa0\\x8f\\xb7;\\xb3\\xa8\\xc3\\x82\\xa3\\xe8\\xe0!\\xf7\\xfc\\xfc' != b'\\xd8YA\\x03x|c\"@\\xe8\\x8b~\\xb9\\xb6\\x8d\\x95\\x8dzp\\x8a'\n\ntests/core/PersistentHashTest.py:11: AssertionError\n\ntests/core/PersistentHashTest.py .                                                                                                   [ 94%]\ntests/core/ProjectBearTest.py .......                                                                                                [100%]\n========================================================= short test summary info ==========================================================\nFAIL tests/core/PersistentHashTest.py::PersistentHashTest::test_int\n\n========================================== 1 failed, 130 passed, 849 deselected in 10.49 seconds ===========================================\nroot@216ee8a992f9:/home# \nThe persistent_hash test failing could be nearly treated as \"expected\". Pickle data and thus hash representation might change for different Python versions. From usability perspective this is not a problem, but we would have to rethink how to write tests for persistent_hash. But since this might be flaky as well as this issue, I would raise a bug only when we really face it on our CI for master / we are finally going to test on Python 3.7.\nInstall commands in docker:\napt update\napt install -y python3-dev  # not sure this is required\npip3 install pyyaml==4.2b1\npip3 install -r requirements.txt -r test-requirements.txt\n# Test step\npytest -k core","comments":2,"createdAt":"2018-07-01T21:13:08Z","updatedAt":"2018-07-08T20:14:49Z","closedAt":null,"state":"open","user":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"owner":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"labels":[{"name":"area/tests","color":"bfd4f2"},{"name":"importance/high","color":"eb6420"},{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1530518442000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5587","number":5587,"title":"XML literals","body":"Visual Basic (and probably other .Net-ish languages) have XML literals.\nhttps://docs.microsoft.com/en-us/dotnet/visual-basic/programming-guide/language-features/xml/xml-literals-overview\nWe might consider them to be a string with nested delimiters (#5573) , but they are more than that.\nWe at the very least need to delineate text within XML elements (CDATA) as strings, so that they are not seen as code.","comments":0,"createdAt":"2018-07-02T08:00:42Z","updatedAt":"2018-07-02T08:00:42Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1531056429000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5589","number":5589,"title":".gitignore sync moban","body":"Disable py36 build on coala","comments":0,"createdAt":"2018-07-03T10:30:49Z","updatedAt":"2018-07-08T13:27:09Z","closedAt":"2018-07-08T13:27:09Z","state":"closed","user":{"login":"anctartica","avatarUrl":"https://avatars0.githubusercontent.com/u/7020962?v=4"},"owner":{"login":"anctartica","avatarUrl":"https://avatars0.githubusercontent.com/u/7020962?v=4"},"labels":[{"name":"platform/windows","color":"0052cc"},{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1530889248000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5591","number":5591,"title":"Allow more than one `comment_delimiter`","body":"Languages like Visual Basic have more than one comment_delimiter. coalib needs to support this functionality so that these languages can be added to coalang.","comments":0,"createdAt":"2018-07-03T12:26:29Z","updatedAt":"2018-07-06T15:00:48Z","closedAt":"2018-07-06T15:00:48Z","state":"closed","user":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4"},"owner":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4"},"assignee":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1532192405000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5592","number":5592,"title":"Replace coala-header.png with SVG and CSS","body":"https://github.com/coala/coala/blob/master/docs/_static/images/coala-header.png has been replaced with HTML + CSS in coala/artwork#37 .\nThis can be used to remove the png in this repo.","comments":3,"createdAt":"2018-07-03T17:43:58Z","updatedAt":"2018-07-21T17:00:05Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"sangamcse","avatarUrl":"https://avatars2.githubusercontent.com/u/26381717?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/low","color":"207de5"},{"name":"importance/low","color":"70E870"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1530763284000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5593","number":5593,"title":"The setup.py is not in the docs direcotry","body":"When I try to install the coala by the \"Development Setup Notes\" I found the \"setup.py\" is not in the docs directory.\n\"setup.py\" is in the coala direcotry.","comments":1,"createdAt":"2018-07-04T03:29:06Z","updatedAt":"2018-07-05T04:01:24Z","closedAt":"2018-07-05T04:01:24Z","state":"closed","user":{"login":"he1l0world","avatarUrl":"https://avatars2.githubusercontent.com/u/27997963?v=4"},"owner":{"login":"he1l0world","avatarUrl":"https://avatars2.githubusercontent.com/u/27997963?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1530962165000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5594","number":5594,"title":"LocalBearTestHelper.assertComparableObjectsEqual doesn't give any helpful details when the attribute variable is a dict containing a class","body":"When I was trying to solve coala/coala-bears#2571 , I made a mistake in Result.from_values()'s diffs argument which is a dict with {filename: Diff()} structure, which was intended for the \"expected value\". Precisely, I made a mistake (I put a wrong argument) when creating the Diff instance that I need to put in the diffs argument. But when I ran the test, I got an error result like this:\nE               AssertionError: {'short_url_redirect_text': <coalib.results.Diff.Diff object at 0x7f6341d2edd8>} != {'short_url_redirect_text': <coalib.results.Diff.Diff object at 0x7f6341d964e0>}\nE               - {'short_url_redirect_text': <coalib.results.Diff.Diff object at 0x7f6341d2edd8>}\nE               ?                                                                          ^ ^^^\nE               \nE               + {'short_url_redirect_text': <coalib.results.Diff.Diff object at 0x7f6341d964e0>}\nE               ?                                                                          ^^^ ^\nE                : diffs mismatch.\n\n../coala/coalib/testing/LocalBearTestHelper.py:132: AssertionError\n\nFrom that AssertionError log, I thought LocalBearTestHelper.assertComparableObjectsEqual() also matches the memory id, but actually it's not.\nI hope I can also get the elements that differ inside of the Diff class which is contained in a dict in a class attribute","comments":2,"createdAt":"2018-07-04T05:42:40Z","updatedAt":"2018-07-07T11:16:05Z","closedAt":null,"state":"open","user":{"login":"refeed","avatarUrl":"https://avatars1.githubusercontent.com/u/20320125?v=4"},"owner":{"login":"refeed","avatarUrl":"https://avatars1.githubusercontent.com/u/20320125?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1530922739000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5600","number":5600,"title":"Add linter option to remove an error message if line/column number is 0","body":"For example, CheckStyle may report an error as follows:\nCheckstyleBad.java:0: Missing package-info.java file\nLine number 0 means it is unrelated to any particular line, but the whole file. When coala detects 0 line/column number, it should not generate an error message. Instead, drop that error and emit a warning (after stripping that number).\nref. https://gitter.im/coala/coala-bears?at=5b3cfbf17b811a6d63cf84fe","comments":5,"createdAt":"2018-07-05T13:01:36Z","updatedAt":"2018-07-07T00:18:59Z","closedAt":"2018-07-07T00:18:59Z","state":"closed","user":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4"},"owner":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4"},"labels":[{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1530861565000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5602","number":5602,"title":"Test failed on python3.7 job on Travis CI","body":"PersistentHashTest.py  and JSONEncoderTest.py these two test are failing on python3.7 job.\nJSONEncoderTest  failed because re._pattern_type changed to re.Pattern","comments":0,"createdAt":"2018-07-06T07:14:28Z","updatedAt":"2018-07-06T07:19:25Z","closedAt":null,"state":"open","user":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4"},"owner":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4"},"labels":[{"name":"area/tests","color":"bfd4f2"},{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1535421399000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5603","number":5603,"title":"Add alias Node to language JavaScript","body":"'node' is a common alias for JavaScript.","comments":0,"createdAt":"2018-07-07T04:41:35Z","updatedAt":"2018-08-28T01:56:39Z","closedAt":"2018-08-28T01:56:39Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"Akhelesh","avatarUrl":"https://avatars2.githubusercontent.com/u/42298056?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1531121648000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5604","number":5604,"title":"docs: Replace the Basic rST link with a working link","body":"Steps to reproduce:\n\nHead to https://api.coala.io/en/latest/Developers/Useful_Links.html.\nClick on the Basic rST in rST-Links\n\nThe page would show a permission denied error.\nReplace the link with a proper working link.","comments":2,"createdAt":"2018-07-07T08:08:02Z","updatedAt":"2018-07-09T07:34:08Z","closedAt":"2018-07-09T07:34:08Z","state":"closed","user":{"login":"shikharvaish28","avatarUrl":"https://avatars1.githubusercontent.com/u/22795943?v=4"},"owner":{"login":"shikharvaish28","avatarUrl":"https://avatars1.githubusercontent.com/u/22795943?v=4"},"assignee":{"login":"m3rc3n4ry","avatarUrl":"https://avatars2.githubusercontent.com/u/29359259?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1535148882000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5605","number":5605,"title":"Newcomers_Guide.rst: display \"move on to more difficult issues\" message as note block","body":"On Newcomers Guide page there is a message saying:\n\nNote: After you have solved a difficulty/newcomer issue, please don’t take up any more. Instead, move on to more difficult issues.\n\nAs this message starts with \"Note:\", maybe it would be more logical to have this marked as \"Note\" block (similar to \"Don’t just fix a newcomer issue!\" message which is lower on that page).","comments":1,"createdAt":"2018-07-07T15:08:50Z","updatedAt":"2018-08-24T22:14:42Z","closedAt":null,"state":"open","user":{"login":"nikitavbv","avatarUrl":"https://avatars1.githubusercontent.com/u/24596921?v=4"},"owner":{"login":"nikitavbv","avatarUrl":"https://avatars1.githubusercontent.com/u/24596921?v=4"},"assignee":{"login":"InquiridorTechie","avatarUrl":"https://avatars1.githubusercontent.com/u/31249906?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1531177496000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5613","number":5613,"title":"FileFactory: Use `cached-property` package instead of manual written `memoize_property` decorator","body":"A package for exactly that exists, so we should use it. Then we can remove some code on our side.\nAcceptance criteria:\n\nFileFactory uses @cached_property from the package cached-property instead of @memoized_property for all annotated fields.\nFileFactory.__init__ does not initialize self.cache = {} any more.\nThe file memoized_property.py is deleted.","comments":0,"createdAt":"2018-07-08T19:42:46Z","updatedAt":"2018-07-09T23:04:56Z","closedAt":"2018-07-09T23:04:56Z","state":"closed","user":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"owner":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"assignee":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4"},"labels":[{"name":"area/core","color":"eb6420"},{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"importance/high","color":"eb6420"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1531112582000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5614","number":5614,"title":"Travis docs cache invalidated","body":"Each master travis job ends with\nchange detected (content changed, file is created, or file is deleted):\n/home/travis/build/coala/coala/docs/_build/doctrees/coalib.bearlib.abstractions.doctree\n/home/travis/build/coala/coala/docs/_build/doctrees/coalib.bearlib.aspects.doctree\n/home/travis/build/coala/coala/docs/_build/doctrees/coalib.bearlib.doctree\n/home/travis/build/coala/coala/docs/_build/doctrees/coalib.bearlib.languages.definitions.doctree\n/home/travis/build/coala/coala/docs/_build/doctrees/coalib.bearlib.languages.doctree\n/home/travis/build/coala/coala/docs/_build/doctrees/coalib.bearlib.languages.documentation.doctree\n/home/travis/build/coala/coala/docs/_build/doctrees/coalib.bearlib.naming_conventions.doctree\n/home/travis/build/coala/coala/docs/_build/doctrees/coalib.bearlib.spacing.doctree\n/home/travis/build/coala/coala/docs/_build/doctrees/coalib.bears.doctree\n/home/travis/build/coala/coala/docs/_build/doctrees/coalib.collecting.doctree\n/home/travis/build/coala/coala/docs/_build/doctrees/coalib.core.doctree\n/home/travis/build/coala/coala/docs/_build/doctrees/coalib.doctree\n...\n\nThis is happening even when the job doesnt modify the source for the docs, like\nhttps://travis-ci.org/coala/coala/builds/401439163\nOne reason is these are binary files (pickles?), and they include the full path of each file, which on travis means that the masters catch entry includes /home/travis/build/coala/coala/ while the fork contains /home/travis/build/jayvdb/coala/.  As this is happening on master builds also, there is also something else in these files causing it to be invalidated.\nIn that directory is also a environment.pickle and index.doctree, and they are not being invalidated.\nThey should be cached, especially environment.pickle which is very large.","comments":2,"createdAt":"2018-07-09T03:03:53Z","updatedAt":"2018-07-09T05:03:02Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1531320156000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5615","number":5615,"title":"coala fails on latest dependency_management","body":"When changing the dependency to use the latest package management version, like jayvdb@e135727 , the build fails on missing CabalRequirement.\nAt least https://gitlab.com/coala/package_manager/issues/177 needs to be fixed.\nThere could also be other issues.","comments":1,"createdAt":"2018-07-09T05:42:18Z","updatedAt":"2018-07-11T14:42:36Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"anctartica","avatarUrl":"https://avatars0.githubusercontent.com/u/7020962?v=4"},"labels":[{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1531213063000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5619","number":5619,"title":"coala fails to ignore file","body":"The rstcheck section of the .coafile ignores docs/Developers/coala_settings.rst\nhttps://github.com/anctartica/coala/blob/master/.coafile#L123.\nHowever, running coala --ci on Appveyor build throws the following warning related to the ignored file:\nExecuting section rst...\nExecuting section rstcheck...\n[WARNING][08:47:25] RSTcheckBear: This result has no patch attached.\ndocs\\Developers\\coala_settings.rst\n[   4] ..·argparse::\n**** RSTcheckBear [Section: rstcheck | Severity: INFO] ****\n!    ! (INFO/1) No directive entry for \"argparse\" in module \"docutils.parsers.rst.languages.en\".\nExecuting section text...\n\nhttps://ci.appveyor.com/project/anctartica/coala/build/1.0.30/job/nl99jijb782fnhj8#L1599","comments":0,"createdAt":"2018-07-10T08:57:43Z","updatedAt":"2018-07-10T08:57:43Z","closedAt":null,"state":"open","user":{"login":"anctartica","avatarUrl":"https://avatars0.githubusercontent.com/u/7020962?v=4"},"owner":{"login":"anctartica","avatarUrl":"https://avatars0.githubusercontent.com/u/7020962?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1535421576000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5621","number":5621,"title":"Create doc page about moban","body":"moban is now fairly established in coala repos.\nIt is time for some docs.\nEspecially about how to do sync PR whenever it is needed.","comments":5,"createdAt":"2018-07-10T14:16:38Z","updatedAt":"2018-08-28T01:59:36Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"},{"name":"importance/medium","color":"fbca04"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1531668324000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5625","number":5625,"title":"Add self on `run` method of TooManyLinesBear","body":"https://api.coala.io/en/latest/Developers/Testing_Bears.html#understanding-through-examples\ndifficulty/newcomer","comments":3,"createdAt":"2018-07-11T10:13:51Z","updatedAt":"2018-07-15T15:25:24Z","closedAt":"2018-07-15T15:25:24Z","state":"closed","user":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4"},"owner":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4"},"assignee":{"login":"sinscary","avatarUrl":"https://avatars0.githubusercontent.com/u/13782355?v=4"},"labels":[{"name":"area/CI","color":"eb6420"},{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1531731484000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5626","number":5626,"title":"class name docs should use CapWords convention","body":"Files to be fixed are Redundancy.py, Metadata.py, root.py, Formatting.py, Smell.py, Security.py, Spelling.py.","comments":2,"createdAt":"2018-07-11T12:30:10Z","updatedAt":"2018-07-16T08:58:04Z","closedAt":"2018-07-16T08:58:04Z","state":"closed","user":{"login":"MacBox7","avatarUrl":"https://avatars0.githubusercontent.com/u/15063552?v=4"},"owner":{"login":"MacBox7","avatarUrl":"https://avatars0.githubusercontent.com/u/15063552?v=4"},"assignee":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"},{"name":"type/codestyle","color":"d4c5f9"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1531640333000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5628","number":5628,"title":"CI build failure because of httpstat.us SSL certificate error","body":"https://travis-ci.org/virresh/coala/jobs/402970785#L1642\nhttps://ci.appveyor.com/project/anctartica/coala\nhttps://circleci.com/gh/virresh/coala/6\ndifficulty/low\nimportance/high","comments":4,"createdAt":"2018-07-12T09:52:08Z","updatedAt":"2018-07-15T07:38:53Z","closedAt":"2018-07-15T07:38:53Z","state":"closed","user":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4"},"owner":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4"},"labels":[{"name":"area/CI","color":"eb6420"},{"name":"area/tests","color":"bfd4f2"},{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1532987662000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5631","number":5631,"title":"Newcomers_Guide.rst: fix link color in \"Struggling with this? ...\" message","body":"On Newcomers Guide page there is a block saying:\n\nStruggling with this? We have a very verbose guide on this topic in our Google Code In resources which can help you find a suitable repository and run coala on a bigger project.\n\nwhere \"our Google Code In resources\" is a link. However, it is underlined with dark color (on dark background) making it unnoticeable for reader. Maybe it would be a good idea to change border color to a lighter one.\nI attach the screenshot of this block to make things more clear:","comments":2,"createdAt":"2018-07-14T16:01:23Z","updatedAt":"2018-07-30T21:54:22Z","closedAt":"2018-07-30T21:54:21Z","state":"closed","user":{"login":"nikitavbv","avatarUrl":"https://avatars1.githubusercontent.com/u/24596921?v=4"},"owner":{"login":"nikitavbv","avatarUrl":"https://avatars1.githubusercontent.com/u/24596921?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1534260434000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5636","number":5636,"title":"Python 3.3 unsupported check failing due to pytest 3.6.1 not available for that version","body":"Collecting pytest~=3.6.1 (from -r requirements.txt (line 20))\n  Could not find a version that satisfies the requirement pytest~=3.6.1 (from -r requirements.txt (line 20)) (from versions: 2.0.0, 2.0.1, 2.0.2, 2.0.3, 2.1.0, 2.1.1, 2.1.2, 2.1.3, 2.2.0, 2.2.1, 2.2.2, 2.2.3, 2.2.4, 2.3.0, 2.3.1, 2.3.2, 2.3.3, 2.3.4, 2.3.5, 2.4.0, 2.4.1, 2.4.2, 2.5.0, 2.5.1, 2.5.2, 2.6.0, 2.6.1, 2.6.2, 2.6.3, 2.6.4, 2.7.0, 2.7.1, 2.7.2, 2.7.3, 2.8.0, 2.8.1, 2.8.2, 2.8.3, 2.8.4, 2.8.5, 2.8.6, 2.8.7, 2.9.0, 2.9.1, 2.9.2, 3.0.0, 3.0.1, 3.0.2, 3.0.3, 3.0.4, 3.0.5, 3.0.6, 3.0.7, 3.1.0, 3.1.1, 3.1.2, 3.1.3, 3.2.0, 3.2.1, 3.2.2, 3.2.3, 3.2.4, 3.2.5)\nNo matching distribution found for pytest~=3.6.1 (from -r requirements.txt (line 20))\n\nSee https://travis-ci.org/coala/coala/builds/404413480 for example","comments":0,"createdAt":"2018-07-17T09:02:11Z","updatedAt":"2018-08-14T15:27:14Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"area/CI","color":"eb6420"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1533312840000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5637","number":5637,"title":"Make `LocalBearTestHelper` compatible with aspects","body":"LocalBearTestHelper needs to be modified to use aspects as well in order to test aspect functionality in bears.","comments":0,"createdAt":"2018-07-18T07:05:34Z","updatedAt":"2018-08-03T16:14:00Z","closedAt":"2018-08-03T16:14:00Z","state":"closed","user":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4"},"owner":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4"},"assignee":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4"},"labels":[{"name":"area/aspects","color":"000000"},{"name":"area/documentation","color":"bfe5bf"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1531990784000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5640","number":5640,"title":"Sync moban","body":"Appveyor should now run coala --ci","comments":0,"createdAt":"2018-07-19T05:16:32Z","updatedAt":"2018-07-19T08:59:44Z","closedAt":"2018-07-19T08:59:44Z","state":"closed","user":{"login":"anctartica","avatarUrl":"https://avatars0.githubusercontent.com/u/7020962?v=4"},"owner":{"login":"anctartica","avatarUrl":"https://avatars0.githubusercontent.com/u/7020962?v=4"},"labels":[{"name":"platform/windows","color":"0052cc"},{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1532963285000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5642","number":5642,"title":"CachingUtilities.py: Remove unused local variable","body":"Difficulty: Newcomer","comments":13,"createdAt":"2018-07-19T07:11:29Z","updatedAt":"2018-07-30T15:08:05Z","closedAt":"2018-07-30T15:08:05Z","state":"closed","user":{"login":"MacBox7","avatarUrl":"https://avatars0.githubusercontent.com/u/15063552?v=4"},"owner":{"login":"MacBox7","avatarUrl":"https://avatars0.githubusercontent.com/u/15063552?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"type/codestyle","color":"d4c5f9"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1532426167000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5643","number":5643,"title":"ConsoleInteraction.py: Remove unused import","body":"Pyflakes error report =>\n./output/ConsoleInteraction.py:39: 'pygments.formatters.TerminalFormatter' imported but unused\n\nDifficulty: Newcomer","comments":1,"createdAt":"2018-07-19T11:18:05Z","updatedAt":"2018-07-24T09:56:07Z","closedAt":"2018-07-24T09:56:07Z","state":"closed","user":{"login":"MacBox7","avatarUrl":"https://avatars0.githubusercontent.com/u/15063552?v=4"},"owner":{"login":"MacBox7","avatarUrl":"https://avatars0.githubusercontent.com/u/15063552?v=4"},"assignee":{"login":"XDoubleU","avatarUrl":"https://avatars3.githubusercontent.com/u/28691666?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"type/codestyle","color":"d4c5f9"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1532515291000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5644","number":5644,"title":"Handle pyflakes errors on languages and aspects","body":"Pyflakes error report =>\n./bearlib/languages/__init__.py:6: '.Language.Language' imported but unused\n./bearlib/languages/__init__.py:7: '.Language.Languages' imported but unused\n./bearlib/languages/__init__.py:9: '.definitions.Unknown.Unknown' imported but unused\n./bearlib/languages/__init__.py:10: '.definitions.C.C' imported but unused\n./bearlib/languages/__init__.py:11: '.definitions.CPP.CPP' imported but unused\n./bearlib/languages/__init__.py:12: '.definitions.CSharp.CSharp' imported but unused\n./bearlib/languages/__init__.py:13: '.definitions.CSS.CSS' imported but unused\n./bearlib/languages/__init__.py:14: '.definitions.Fortran.Fortran' imported but unused\n./bearlib/languages/__init__.py:15: '.definitions.Golang.Golang' imported but unused\n./bearlib/languages/__init__.py:16: '.definitions.html.HTML' imported but unused\n./bearlib/languages/__init__.py:17: '.definitions.Java.Java' imported but unused\n./bearlib/languages/__init__.py:18: '.definitions.JavaScript.JavaScript' imported but unused\n./bearlib/languages/__init__.py:19: '.definitions.JSP.JSP' imported but unused\n./bearlib/languages/__init__.py:20: '.definitions.Matlab.Matlab' imported but unused\n./bearlib/languages/__init__.py:21: '.definitions.Markdown.Markdown' imported but unused\n./bearlib/languages/__init__.py:22: '.definitions.ObjectiveC.ObjectiveC' imported but unused\n./bearlib/languages/__init__.py:23: '.definitions.PHP.PHP' imported but unused\n./bearlib/languages/__init__.py:24: '.definitions.PLSQL.PLSQL' imported but unused\n./bearlib/languages/__init__.py:25: '.definitions.Python.Python' imported but unused\n./bearlib/languages/__init__.py:26: '.definitions.Ruby.Ruby' imported but unused\n./bearlib/languages/__init__.py:27: '.definitions.Scala.Scala' imported but unused\n./bearlib/languages/__init__.py:28: '.definitions.Swift.Swift' imported but unused\n./bearlib/languages/__init__.py:29: '.definitions.Vala.Vala' imported but unused\n./bearlib/languages/__init__.py:30: '.definitions.TypeScript.TypeScript' imported but unused\n./bearlib/languages/__init__.py:31: '.definitions.Shell.Shell' imported but unused\n./bearlib/languages/__init__.py:32: '.definitions.Jinja2.Jinja2' imported but unused\n./bearlib/aspects/Metadata.py:271: redefinition of unused 'Length' from line 161\n\nDiffuculty: Low\nNeeds Discussion\nAspects","comments":1,"createdAt":"2018-07-19T11:20:49Z","updatedAt":"2018-07-25T10:41:31Z","closedAt":null,"state":"open","user":{"login":"MacBox7","avatarUrl":"https://avatars0.githubusercontent.com/u/15063552?v=4"},"owner":{"login":"MacBox7","avatarUrl":"https://avatars0.githubusercontent.com/u/15063552?v=4"},"assignee":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"},{"name":"importance/low","color":"70E870"},{"name":"type/codestyle","color":"d4c5f9"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1532085957000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5646","number":5646,"title":"Section: Set files to ignore list from another section","body":"It is quite common to have two sections with opposite sets of files included.\ne.g. one section might use line length = 80 and the other section uses 120\nAt the moment, to do this requires listing the same files twice.","comments":0,"createdAt":"2018-07-20T11:25:57Z","updatedAt":"2018-07-20T11:25:57Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"type/feature","color":"0052cc"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1535583275000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5442","number":5442,"title":"CachingUtilities.pickle_load and .pickle_dump docstring refers to non-existant filename","body":"Docstring is\ndef pickle_load(log_printer, identifier, fallback=None):\n    \"\"\"\n    Get the data stored in ``filename`` present in the user\n    config directory. Example usage:\n    ...\n    \"\"\"\nBut filename is not a parameter.  A better description is needed to explain which file is loaded.\nThe same applies to pickle_dump.","comments":5,"createdAt":"2018-05-05T05:16:49Z","updatedAt":"2018-08-29T22:54:35Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"SubbulakshmiRS","avatarUrl":"https://avatars3.githubusercontent.com/u/32260751?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"},{"name":"importance/medium","color":"fbca04"},{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1526233857000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5444","number":5444,"title":"Executing_Tests.rst: Mention codecov","body":"coala test coverage is published on https://codecov.io/gh/coala/ (GitHub projects) and https://codecov.io/gl/coala/ (GitLab projects).\nThe Executing_Tests.rst document refers to 'website' , which is actually that codecov website.  This needs to be more clear.\nfwiw, Adding_CI.rst does mention codecov.","comments":1,"createdAt":"2018-05-07T01:51:59Z","updatedAt":"2018-05-13T17:50:57Z","closedAt":"2018-05-13T17:50:57Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"gopalgoel19","avatarUrl":"https://avatars0.githubusercontent.com/u/11490517?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/low","color":"207de5"},{"name":"importance/low","color":"70E870"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1525775656000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5445","number":5445,"title":"test_user_coafile_parsing doesnt use setUp and tearDown","body":"test_user_coafile_parsing modifies Constants.user_coafile during the test.\nIf the assertEqual fails, Constants.user_coafile will not be restored, which could result in lots of other tests to fail in unpredictable ways.\nThe test class should have a setUp and tearDown which saves & restores any coalib state which is modified during the tests in that class.","comments":0,"createdAt":"2018-05-07T02:01:29Z","updatedAt":"2018-05-08T10:34:16Z","closedAt":"2018-05-08T10:34:16Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"siddhant-curious","avatarUrl":"https://avatars1.githubusercontent.com/u/14145704?v=4"},"labels":[{"name":"area/config","color":"fbca04"},{"name":"area/tests","color":"bfd4f2"},{"name":"difficulty/low","color":"207de5"},{"name":"importance/low","color":"70E870"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1525735942000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5446","number":5446,"title":"There's a typo in Formatting aspect file","body":"There's a typo in aspects.Formatting.py. Change example_langague to example_language.\nNewcomers are welcome for this issue.","comments":0,"createdAt":"2018-05-07T08:00:29Z","updatedAt":"2018-05-07T23:32:22Z","closedAt":"2018-05-07T23:32:22Z","state":"closed","user":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4"},"owner":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4"},"labels":[{"name":"area/aspects","color":"000000"},{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1530763385000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5449","number":5449,"title":"Building docs instructions","body":"The instructions on https://api.coala.io/en/latest/Developers/Development_Setup.html are wrong.\nNo need to change to docs repo.","comments":8,"createdAt":"2018-05-08T11:12:46Z","updatedAt":"2018-07-05T04:03:05Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"bekicot","avatarUrl":"https://avatars0.githubusercontent.com/u/1826884?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"},{"name":"importance/medium","color":"fbca04"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1525807571000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5451","number":5451,"title":"Updating dependencies doesn't flush cache","body":"Overview Description\nWhenever a linter is upgraded, the cache of coala is not flushed and new linting fixes introduced in the dependency are not shown\nFor e.g, take pycodestyle\nW605 invalid escape sequence '\\s' was introduced in pycodestyle==2.4\nSo when coala is run with pycodestyle==2.3, the output is cached and thus doesn't show any results for W605\nBut even after updating to pycodestyle==2.4, the output is shown exactly same as before being cached\nSteps to Reproduce\nCreate a directory (mkdir cacheTest).\nMake a file file.py having contents:\nimport re\n\nreg = '#\\s(\\d+)'\nstring = '#123, # 123'\n\nprint(re.compile(reg).findall(string))\n\nThe contents of .coafile are:\n[all]\nfiles = file.py\nbears = PycodestyleBear\n\n\nEnsure pycodestyle is set to version 2.3\n\npip install pycodestyle==2.3\n\n\nRun coala\n\ncoala\n\n\nNow install pycodestyle version 2.4\n\npip install pycodestyle==2.4\n\n\nNow again run coala\n\ncoala\n\n5 Now run coala with flushed cache\ncoala --flush-cache\n\nActual Results\nThe output is different after flushing the cache\nExpected Results\nAfter updating to pycodestyle==2.4, there shouldn't have been a need to explicitly flush cache\nReproducibility\n100%\nAdditional Information:\nA sample run on my machine:\n(coala) viresh@viresh-PC:~/Desktop/coalaDebug$ pip install pycodestyle==2.3\nCollecting pycodestyle==2.3\n  Using cached https://files.pythonhosted.org/packages/32/09/8e580517e4af96141c41f531bca14c4408e7cb716864022737811aaac1be/pycodestyle-2.3.0-py2.py3-none-any.whl\nInstalling collected packages: pycodestyle\n  Found existing installation: pycodestyle 2.4.0\n    Uninstalling pycodestyle-2.4.0:\n      Successfully uninstalled pycodestyle-2.4.0\nSuccessfully installed pycodestyle-2.3.0\nYou are using pip version 9.0.1, however version 10.0.1 is available.\nYou should consider upgrading via the 'pip install --upgrade pip' command.\n\n\n(coala) viresh@viresh-PC:~/Desktop/coalaDebug$ coala\nExecuting section all...\nExecuting section cli...\n\n\n(coala) viresh@viresh-PC:~/Desktop/coalaDebug$ pip install pycodestyle==2.4\nCollecting pycodestyle==2.4\n  Using cached https://files.pythonhosted.org/packages/e5/c6/ce130213489969aa58610042dff1d908c25c731c9575af6935c2dfad03aa/pycodestyle-2.4.0-py2.py3-none-any.whl\nInstalling collected packages: pycodestyle\n  Found existing installation: pycodestyle 2.3.0\n    Uninstalling pycodestyle-2.3.0:\n      Successfully uninstalled pycodestyle-2.3.0\nSuccessfully installed pycodestyle-2.4.0\nYou are using pip version 9.0.1, however version 10.0.1 is available.\nYou should consider upgrading via the 'pip install --upgrade pip' command.\n\n\n(coala) viresh@viresh-PC:~/Desktop/coalaDebug$ coala\nExecuting section all...\nExecuting section cli...\n\n\n(coala) viresh@viresh-PC:~/Desktop/coalaDebug$ coala --flush-cache\nExecuting section all...\n\nfile.py\n[   3] reg·=·'#\\s(\\d+)'\n**** PycodestyleBear (W605) [Section: all | Severity: NORMAL] ****\n!    ! W605 invalid escape sequence '\\s'\n[    ] *0. Do (N)othing\n[    ]  1. (O)pen file\n[    ]  2. Add (I)gnore comment\n[    ] Enter number (Ctrl-D to exit): 0\n\nfile.py\n[   3] reg·=·'#\\s(\\d+)'\n**** PycodestyleBear (W605) [Section: all | Severity: NORMAL] ****\n!    ! W605 invalid escape sequence '\\d'\n[    ] *0. Do (N)othing\n[    ]  1. (O)pen file\n[    ]  2. Add (I)gnore comment\n[    ] Enter number (Ctrl-D to exit): 0\nExecuting section cli...\n(coala) viresh@viresh-PC:~/Desktop/coalaDebug$ \n\nTL;DR :\nUpgrading dependencies should flush the cache. It doesnt.\nCache needs to record something about the dependencies to trigger flushing.\nPossibilities: Maybe executable file timestamp Or dep management needs to obtain version of installed dep and that should be stored in coala settings cache\ndifficulty/high","comments":0,"createdAt":"2018-05-08T19:24:53Z","updatedAt":"2018-05-08T19:26:11Z","closedAt":null,"state":"open","user":{"login":"virresh","avatarUrl":"https://avatars0.githubusercontent.com/u/10978108?v=4"},"owner":{"login":"virresh","avatarUrl":"https://avatars0.githubusercontent.com/u/10978108?v=4"},"labels":[{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1525885335000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5453","number":5453,"title":"Investigate pyinstaller","body":"PyInstaller is a program that freezes (packages) Python programs into stand-alone executables, under Windows, Linux, Mac OS X, FreeBSD, Solaris and AIX.\n\nPyInstaller would help to greatly decrease the Docker image size and possibly ship \"embedded\" or \"ready to use\" versions of coala or helpful for CI builds.\nhttps://www.pyinstaller.org/","comments":0,"createdAt":"2018-05-09T17:02:15Z","updatedAt":"2018-05-09T17:02:15Z","closedAt":null,"state":"open","user":{"login":"yukiisbored","avatarUrl":"https://avatars0.githubusercontent.com/u/18437312?v=4"},"owner":{"login":"yukiisbored","avatarUrl":"https://avatars0.githubusercontent.com/u/18437312?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1525886016000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5454","number":5454,"title":"Write a Pipfile ","body":"Pipfile is the successor to requirements.txt. It would be interesting to test it out on coala. Since coala have mobans integrated to generate configuration files. This Pipfile must be generated from a template based on data from coala/mobans.","comments":1,"createdAt":"2018-05-09T17:08:09Z","updatedAt":"2018-05-09T17:13:36Z","closedAt":"2018-05-09T17:13:36Z","state":"closed","user":{"login":"yukiisbored","avatarUrl":"https://avatars0.githubusercontent.com/u/18437312?v=4"},"owner":{"login":"yukiisbored","avatarUrl":"https://avatars0.githubusercontent.com/u/18437312?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1525924024000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5455","number":5455,"title":".coafile: ignore_length_regex field's regex seems vague","body":"we should either check for\n\n\nurls that are that long that if they are started from the beginning of the line and then also that are greater than 80 characters and then ignore them. Current regex being used ^.*https?:// seems wrong as anyone can write a line as long as he/she wants and then end it with something starting with https:// to bypass the line length  rule. i.e. we should force one to line break even if the line contains a url until the url is what they started with and the url is what they are ending their line with.\n\n\nchecking for urls can be made more advanced by using something like (http|ftp|https)://([\\w_-]+(?:(?:\\.[\\w_-]+)+))([\\w.,@?^=%&:/~+#-]*[\\w@?^=%&/~+#-])?","comments":0,"createdAt":"2018-05-10T03:42:09Z","updatedAt":"2018-05-10T03:47:04Z","closedAt":null,"state":"open","user":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4"},"owner":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4"},"labels":[{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1532442883000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5456","number":5456,"title":"coala should ask for the proper bear name if it is misspelled","body":"many bear names have capital alphabets in b/w them which is hard to remember. If an invalid bear name is encountered, try to match it with the closest possible bear name from the list of installed bears, and ask the user whether he meant that bear (y,N)? Can be integrated with cib to ask for the installation of the bear too if its not installed yet.","comments":4,"createdAt":"2018-05-10T18:55:17Z","updatedAt":"2018-07-24T14:34:43Z","closedAt":null,"state":"open","user":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4"},"owner":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1526397858000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5457","number":5457,"title":"ConfigurationGathering.get_all_bears change function name","body":"the function name is misleading as it does not get all bears, rather it gets all bears from the config files present. The actual function exists in Collectors.py","comments":1,"createdAt":"2018-05-12T07:41:16Z","updatedAt":"2018-05-15T15:24:18Z","closedAt":null,"state":"open","user":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4"},"owner":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1529409615000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5463","number":5463,"title":"TypeScript aliases is not a tuple","body":"aliases in coalib/bearlib/languages/definitions/TypeScript.py needs to be a tuple.","comments":4,"createdAt":"2018-05-16T12:48:45Z","updatedAt":"2018-06-19T12:00:15Z","closedAt":"2018-06-19T12:00:15Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"ananyaarun","avatarUrl":"https://avatars2.githubusercontent.com/u/32260628?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1526536927000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5466","number":5466,"title":"Appveyor builds fail on pip install","body":"https://ci.appveyor.com/project/coala/coala/build/1.0.12921/job/7qk3gl78ax38vc3i\npython --version\nPython 3.4.4\npython -c \"import struct; print(struct.calcsize('P') * 8)\"\n32\n%CMD_IN_ENV% pip install --cache-dir=C:\\pip_cache -r requirements.txt -r test-requirements.txt\nUsing default MSVC build environment for 32 bit architecture\nExecuting: pip install --cache-dir=C:\\pip_cache -r requirements.txt -r test-requirements.txt\nERROR: To modify pip, please run the following command:\nc:\\python34\\python.exe -m pip install --cache-dir=C:\\pip_cache -r requirements.txt -r test-requirements.txt\nCommand exited with code 1\n\nI guess the problem is pip>=9.0.0,<10 in test-requirements.txt","comments":0,"createdAt":"2018-05-17T05:05:49Z","updatedAt":"2018-05-17T06:02:07Z","closedAt":"2018-05-17T06:02:07Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"area/CI","color":"eb6420"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1528828480000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5476","number":5476,"title":"Ignore Bears that start with an _","body":"coala should ignore bears that start with an _ , since these are not meant to be exposed to the user\ne.g, the the _CommitBear is not meant to be exposed directly, it should only be inherited by a VCS Bear and then become invokable\ncurrently if we do\n $ coala -B | grep Commit\n[INFO][13:51:23] Generating grammar tables from /usr/lib/python3.5/lib2to3/Grammar.txt\n[INFO][13:51:23] Generating grammar tables from /usr/lib/python3.5/lib2to3/PatternGrammar.txt\n_CommitBear\nGitCommitBear\nHgCommitBear\n\nThe _CommitBear should not be exposed.\nAlso note that the file in which CommitBear is defined is not exactly _CommitBear, due to which a user cannot use bears=_CommitBear inside the .coafile\nBut if the user writes bears=CommitBear, then the _CommitBear is invoked.\nHere's a sample output of the debug logs when one runs _CommitBear by specifying bears = CommitBear in the .coafile:\n[DEBUG][13:47:42] Running bear _CommitBear...\n[ERROR][13:47:42] Bear _CommitBear failed to run. Take a look at debug messages (`-V`) for further information.\n[DEBUG][13:47:42] The bear _CommitBear raised an exception. If you are the author of this bear, please make sure to catch all exceptions. If not and this error annoys you, you might want to get in contact with the author of this bear.\n\nTraceback information is provided below:\n\nTraceback (most recent call last):\n  File \"/mnt/Common/Earlier/GIT/coala/coala/coalib/bears/Bear.py\", line 309, in execute\n    return [] if result is None else list(result)\n  File \"/mnt/Common/Earlier/GIT/coala/coala-bears/bears/vcs/CommitBear.py\", line 136, in run\n    (stdout, stderr) = self.get_head_commit()\nTypeError: 'NoneType' object is not iterable","comments":2,"createdAt":"2018-05-24T08:26:02Z","updatedAt":"2018-06-12T18:34:40Z","closedAt":null,"state":"open","user":{"login":"virresh","avatarUrl":"https://avatars0.githubusercontent.com/u/10978108?v=4"},"owner":{"login":"virresh","avatarUrl":"https://avatars0.githubusercontent.com/u/10978108?v=4"},"labels":[{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1527770979000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5477","number":5477,"title":"Scroll in About page","body":"We can put scroll or decrease padding as mentioned in attached snapshot.\nI am assuming that website https://coala.io/#/about code maintained from here only. If not, please transfer issue to associated repo.","comments":2,"createdAt":"2018-05-24T09:15:13Z","updatedAt":"2018-05-31T12:49:39Z","closedAt":"2018-05-31T12:49:31Z","state":"closed","user":{"login":"rishiip","avatarUrl":"https://avatars0.githubusercontent.com/u/7964257?v=4"},"owner":{"login":"rishiip","avatarUrl":"https://avatars0.githubusercontent.com/u/7964257?v=4"},"labels":[{"name":"status/invalid","color":"000000"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1527167114000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5478","number":5478,"title":"Support nolint","body":"nolint is very similar to noqa, with lots of linters already in coala -bears using nolint as a defacto standard, including:\n\nCpplint\ngometalinter\nlintr\n\nIt is also used in uppercase NOLINT, and sometimes also NOLINT(...) or nolint: ....","comments":2,"createdAt":"2018-05-24T12:59:26Z","updatedAt":"2018-05-24T13:05:14Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"area/CI","color":"eb6420"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1529503075000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5479","number":5479,"title":"coala scans .bak files in community repo","body":"This is a bit odd\n[WARNING][08:45:26] Bear KeywordBear failed to run on file /home/travis/build/coala/community/.coafile.bak. Take a look at debug messages (`-V`) for further information.\n[DEBUG][08:45:26] The bear KeywordBear raised an exception. If you are the author of this bear, please make sure to catch all exceptions. If not and this error annoys you, you might want to get in contact with the author of this bear.\nTraceback information is provided below:\nTraceback (most recent call last):\n  File \"/home/travis/virtualenv/python3.6.3/lib/python3.6/site-packages/coalib/bears/Bear.py\", line 282, in execute\n    return [] if result is None else list(result)\n  File \"/home/travis/virtualenv/python3.6.3/lib/python3.6/site-packages/bears/general/KeywordBear.py\", line 97, in run\n    comments = list(_get_comments(dependency_results))\n  File \"/home/travis/virtualenv/python3.6.3/lib/python3.6/site-packages/bears/general/KeywordBear.py\", line 23, in _get_comments\n    if isinstance(result.contents, str):\nAttributeError: 'Result' object has no attribute 'contents'\ncoala/community#106 (comment)\nThe Travis build script doesnt do anything unusual, such as caching the previous coala run data, yet somehow coala is finding and linting a .coafile.bak and running into trouble with it.","comments":7,"createdAt":"2018-05-24T14:39:02Z","updatedAt":"2018-06-20T13:57:55Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"importance/high","color":"eb6420"},{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1527175762000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5480","number":5480,"title":"ShowPatchAction: Make patches better readable","body":"Currently no context lines are displayed, which makes it very hard to grasp simple code relocations. E.g. coala proposed following patch (I added unified-diff-like markers because coala just colors added and deleted lines, it doesn't show + and -):\n[----] /app/etc/test.json\n[++++] /app/etc/test.json\n[  18]+         \"xray\": {\n[  19]+             \"package\": [\n[  20]+                 \"com.example.xray\"\n[  21]+             ],\n[  22]+             \"value\": 33.33\n[  23]+         },\n[  23]-         },\n[  24]-         \"xray\": {\n[  25]-             \"package\": [\n[  26]-                 \"com.example.xray\"\n[  27]-             ],\n[  28]-             \"value\": 33.33\n\nI just relocated the xray entry, but it's really hard to see that (look at the line numbers). Esp. you have a problem to check where it is exactly located. You can only see the line numbers, open your editor, navigate to those lines, and check up if the position is correct and doesn't produce invalid JSON.\nThis is not acceptable and coala has to print better diffs here showing a few context lines like git does.","comments":0,"createdAt":"2018-05-24T15:28:55Z","updatedAt":"2018-05-24T15:29:22Z","closedAt":null,"state":"open","user":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"owner":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"labels":[{"name":"area/actions","color":"207de5"},{"name":"difficulty/medium","color":"0052cc"},{"name":"importance/high","color":"eb6420"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1528797055000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5481","number":5481,"title":"Fail when a File isn't found or when a bear declared doesn't exist","body":"I think coala should fail when a file isn't found or when a blob results in no files and when bear declared doesn't actually exist.\nBy making it into a warning, It could accidentally mistaken to be a \"success\" when it should actually fail. There's no good reason why it shouldn't fail, if there is when can easily solve this by adding an option in the section like allow_invalid_blobs and allow_invalid_bears.","comments":1,"createdAt":"2018-05-25T13:54:20Z","updatedAt":"2018-06-12T09:50:55Z","closedAt":null,"state":"open","user":{"login":"yukiisbored","avatarUrl":"https://avatars0.githubusercontent.com/u/18437312?v=4"},"owner":{"login":"yukiisbored","avatarUrl":"https://avatars0.githubusercontent.com/u/18437312?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1527978527000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5489","number":5489,"title":"Exception while using variable as value for message_arguments dictionary items","body":"Overview Description : When passing a variable name as a dictionary item value in message_arguments for new_result() API, it  raises an exception TypeError: unorderable types: dict() < dict().\nclass Rule8:\n    CLASS_NAME_LOWER_CASE = {\n        'message': \"Class-name starts with an lower case '{name}'\",\n        'additional_info': \"Class-name should NOT start with lower case\",\n        'severity': SEV.MAJOR,\n        'confidence': 100\n    }\nfor cname in cname_list: \n    yield self.new_result(**Rule8.CLASS_NAME_LOWER_CASE,\n                                  message_arguments= {'name': cname},\n                                  file=filename)\n\ncname is of type <class 'str'>\nSteps to Reproduce\n\nReading a text file with lines of single word and creating a list ( cname_list)\nIterating through each items in cname_list and calling yield new_result with message_argument = {'name': cname}\nRunning coala, it raises an exception.\n\nActual Results\nraises an exception TypeError: unorderable types: dict() < dict().\nLogs are at https://pastebin.com/WQJSNr83\nExpected Results\ncoala should show the result.\nReproducibility\nAlways\nAdditional Information:\ncoala==0.11.0\ncoala-bears==0.11.1\ncoala-utils==0.6.7\nappdirs==1.4.3\ncertifi==2018.1.18\nchardet==3.0.4\nclang==5.0\ncoala==0.11.0\ncoala-utils==0.6.7\ncolorama==0.3.9\ncolorlog==2.10.0\ndependency-management==0.4.0\nidna==2.6\nPygments==2.2.0\nPyPrint==0.2.6\nrequests==2.18.4\nsarge==0.1.4\ntermcolor==1.1.0\nunidiff==0.5.5\nurllib3==1.22","comments":1,"createdAt":"2018-05-31T18:40:55Z","updatedAt":"2018-06-02T22:28:47Z","closedAt":null,"state":"open","user":{"login":"amit81saxena","avatarUrl":"https://avatars2.githubusercontent.com/u/23297766?v=4"},"owner":{"login":"amit81saxena","avatarUrl":"https://avatars2.githubusercontent.com/u/23297766?v=4"},"labels":[{"name":"difficulty/medium","color":"0052cc"},{"name":"status/needs discussion","color":"d93f0b"},{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1528555286000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5490","number":5490,"title":"Update TypeScript keywords","body":"Add abstract, never and object","comments":6,"createdAt":"2018-06-01T04:51:54Z","updatedAt":"2018-06-09T14:41:26Z","closedAt":"2018-06-09T14:41:26Z","state":"closed","user":{"login":"cRAN-cg","avatarUrl":"https://avatars1.githubusercontent.com/u/8614844?v=4"},"owner":{"login":"cRAN-cg","avatarUrl":"https://avatars1.githubusercontent.com/u/8614844?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1528312657000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5495","number":5495,"title":"`sections` throws ValueError","body":"[all]\nignore = .git/**\nfiles = mytest.py\nbears = PEP8Bear,PyUnusedCodeBear\n\n[all.chalbe]\nbears = KeywordBear\nfiles = **\nlanguage = python 3\nkeywords = coala\n\nWith the above config it working fine and I can access\nsections\nduring debugging.\nBut when I try something like this\n[all]\nignore = .git/**\nfiles = mytest.py\nbears = PEP8Bear,PyUnusedCodeBear\n\n[all.chalbe]\nbears = KeywordBear\nfiles = **\nignore+=mytest.py\nlanguage = python 3\nkeywords = coala\n\nThe inherited ignore didn't work, also  [sections] (https://github.com/coala/coala/blob/master/coalib/coala_main.py#L139)  throws ValueError\nAnd that is coming from\nhere","comments":7,"createdAt":"2018-06-05T09:00:28Z","updatedAt":"2018-06-06T19:17:37Z","closedAt":null,"state":"open","user":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4"},"owner":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4"},"labels":[{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1528312679000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5497","number":5497,"title":"coafile += bug","body":"coala/community@e47a9d5\n [all]\n files = **.py, **.js, **.sh\n ignore = .git/**, **/__pycache__/**, gci/client.py, */migrations/**, private/*\n\n [all.generalization]\n-ignore += org_name.txt, .coafile, requirements.txt, .travis.yml, LICENSE, public/**, _site/**\n+ignore +=\n  org_name.txt, .coafile, requirements.txt, .travis.yml, LICENSE,\n  .moban.yml, .moban.dt/community-gitignore.jj2,\n  public/**, _site/**\nThis caused the values inherited from all to be discarded.\ncoala/community#144 (comment)","comments":2,"createdAt":"2018-06-06T18:07:53Z","updatedAt":"2018-06-06T19:17:59Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"area/config","color":"fbca04"},{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1528458424000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5499","number":5499,"title":"Make `--files` optional (useful when only GitCommitBear is used)","body":"If I only want to run GitCommitBear, why bother adding files which GitCommitBear doesn't use at all?\nCurrently, running coala --bears GitCommitBear returns\n[WARNING][15:34:52] coala will not run any analysis. Did you forget to give the `--files` argument?","comments":1,"createdAt":"2018-06-07T07:47:33Z","updatedAt":"2018-06-08T11:47:04Z","closedAt":null,"state":"open","user":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4"},"owner":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4"},"labels":[{"name":"area/CI","color":"eb6420"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1528795206000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5501","number":5501,"title":"Modify `LocalBearTestHelper` according to the base class","body":"blocked till #5496 gets merged.\nstatus/blocked","comments":0,"createdAt":"2018-06-07T14:06:47Z","updatedAt":"2018-06-12T09:20:06Z","closedAt":null,"state":"open","user":{"login":"sangamcse","avatarUrl":"https://avatars2.githubusercontent.com/u/26381717?v=4"},"owner":{"login":"sangamcse","avatarUrl":"https://avatars2.githubusercontent.com/u/26381717?v=4"},"assignee":{"login":"sangamcse","avatarUrl":"https://avatars2.githubusercontent.com/u/26381717?v=4"},"labels":[{"name":"area/tests","color":"bfd4f2"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1535812834000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5508","number":5508,"title":"Undeclared coalib dependency on pytest-timeout","body":"coalib currently depends on pytest-timeout, which isnt listed as a dependency in requirements.txt\n$ git grep pytest coalib/\ncoalib/testing/LocalBearTestHelper.py:import pytest\ncoalib/testing/LocalBearTestHelper.py:    @pytest.mark.timeout(timeout)\n\nThis was done in 328bce6, and released in 0.9.0.\nIt originally came from coala/coala-bears@9d02f80\nWe would not want to add pytest-timeout or even pytest in the dependencies of coalib, as that makes any enviroment with coala dicate the test environment versions that the coala user must use, which may conflict with their own needs.\nPossibly we need to move the test helpers to a separate repo, in order to avoid our test needs poluting the environment of our users.","comments":1,"createdAt":"2018-06-09T23:22:37Z","updatedAt":"2018-09-01T14:40:34Z","closedAt":"2018-09-01T14:40:34Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"area/CI","color":"eb6420"},{"name":"area/tests","color":"bfd4f2"},{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1534335534000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5509","number":5509,"title":"Incorrect syntax in HelloWorldBear","body":"Incorrect syntax\nlogging.debug(\"Hello World! Checking file\", filename, \".\")\nhttp://api.coala.io/en/latest/Developers/Writing_Native_Bears.html#a-hello-world-bear","comments":14,"createdAt":"2018-06-10T00:13:00Z","updatedAt":"2018-08-15T12:18:54Z","closedAt":"2018-06-15T18:24:11Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"SubbulakshmiRS","avatarUrl":"https://avatars3.githubusercontent.com/u/32260751?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1533994812000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5510","number":5510,"title":"Typo in parse_cli","body":"docstring and function signature for parse_cli method uses variable name comment_seperators, should be comment_separators to fix spelling and to align with function signature of Setting class definition.\nProbably a good newcomer issue.","comments":10,"createdAt":"2018-06-10T00:37:26Z","updatedAt":"2018-08-11T13:40:12Z","closedAt":"2018-08-11T13:40:12Z","state":"closed","user":{"login":"CCInCharge","avatarUrl":"https://avatars2.githubusercontent.com/u/7788704?v=4"},"owner":{"login":"CCInCharge","avatarUrl":"https://avatars2.githubusercontent.com/u/7788704?v=4"},"assignee":{"login":"shashwatmishra76","avatarUrl":"https://avatars2.githubusercontent.com/u/24711156?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/low","color":"207de5"},{"name":"importance/low","color":"70E870"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1530037518000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5512","number":5512,"title":"Review.rst: Rename `Github` to `GitHub`","body":"See https://github.com/coala/coala/blob/master/docs/Developers/Review.rst#manual-review-process\n\nAnyone can submit commits for review. These are submitted via Pull Requests on Github.\n\nGithub -> GitHub","comments":2,"createdAt":"2018-06-10T17:25:04Z","updatedAt":"2018-06-26T18:25:18Z","closedAt":"2018-06-26T18:25:18Z","state":"closed","user":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4"},"owner":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4"},"assignee":{"login":"harvipan","avatarUrl":"https://avatars1.githubusercontent.com/u/40180746?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1532873405000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5513","number":5513,"title":"Add meta-review documentation","body":"Documentation regarding 'what is meta-review & how the ranking list is generated' is needed.\nThis is part of GSoC'18 meta-review project.\nPlease kindly assign this issue to me ;)","comments":0,"createdAt":"2018-06-11T04:08:11Z","updatedAt":"2018-07-29T14:10:05Z","closedAt":"2018-07-29T14:10:05Z","state":"closed","user":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4"},"owner":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4"},"assignee":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/medium","color":"0052cc"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1533963951000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5515","number":5515,"title":"Create taste `min_file_length`","body":"Create a taste min_file_length (under FileLength aspect) corresponding to LineCountBear setting min_lines_per_file https://github.com/coala/coala-bears/blob/master/bears/general/LineCountBear.py#L21.\nIt can be of the same format as the taste max_file_length as per the cEP https://github.com/coala/cEPs/blob/master/cEP-0010.md.","comments":0,"createdAt":"2018-06-13T04:40:57Z","updatedAt":"2018-08-11T05:05:51Z","closedAt":"2018-08-11T05:05:51Z","state":"closed","user":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4"},"owner":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4"},"assignee":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4"},"labels":[{"name":"area/aspects","color":"000000"},{"name":"area/documentation","color":"bfe5bf"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1528884456000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5516","number":5516,"title":"Change `preferred_quotation` taste's default to `\"`","body":"preferred_quotation taste of the Quotation aspect should default to \" instead of '.\nThere are mainly two reasons for this.\nFirstly, plenty of languages support either \" or both \" and '. It is worth noting that during the implementation of the bear, for languages like cpp, if preferred_quotes = ', then also, it makes sense to apply the default value (which would be \" now) rather than explicitly setting it to \". Discussion is going on here coala/cEPs#148 (comment).\nSecondly, the bear setting corresponding to the taste (https://github.com/coala/coala-bears/blob/master/bears/general/QuotesBear.py#L66) uses \" as default value. Turning the taste to the same default will ensure consistency and less confusion while implementation and maintenance of the code.\nAlso, the taste may be amended for furthermore clarity as done in the cEP PR coala/cEPs#148.","comments":1,"createdAt":"2018-06-13T08:44:30Z","updatedAt":"2018-06-13T10:07:36Z","closedAt":null,"state":"open","user":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4"},"owner":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4"},"assignee":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4"},"labels":[{"name":"area/aspects","color":"000000"},{"name":"area/documentation","color":"bfe5bf"},{"name":"status/needs discussion","color":"d93f0b"},{"name":"status/needs info","color":"006b75"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1529555550000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5517","number":5517,"title":"Create a mapping function when data-types differ in bear settings and it's corresponding aspect","body":"There is a need for a mapping function to map bear settings to aspect tastes in cases when data types or just values differ.\ne.g. use_spaces is a bear setting which takes in bool as an argument whereas it's corresponding taste indent_type takes in space or tab i.e. a string as an argument. The setting is used in approx. 15 bears, so it is worth implementing rather than handling it in all bears separately. The function will also be helpful for such instances in future when data-types differ or even when just the values differ.","comments":0,"createdAt":"2018-06-13T09:38:23Z","updatedAt":"2018-06-21T04:32:30Z","closedAt":"2018-06-21T04:32:30Z","state":"closed","user":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4"},"owner":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4"},"assignee":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4"},"labels":[{"name":"area/aspects","color":"000000"},{"name":"type/feature","color":"0052cc"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1529326073000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5518","number":5518,"title":"Doctests interfering with the Root aspect","body":"Formatting aspect in the doctest (https://github.com/coala/coala/blob/master/coalib/bearlib/aspects/root.py#L18) overrides the actual Formatting aspect (https://github.com/coala/coala/blob/master/coalib/bearlib/aspects/Formatting.py#L5).\nThe problem was found here https://gitter.im/coala/coala?at=5b14d874e26c847ac8b5855d when Root.Spacing.Indentation was returning AspectNotFound error when it actually existed. The error goes and tests pass when the Formatting aspect of the doctests is renamed or doctests are disabled for pytest.\nPotential solutions to this bug are explained here #5492 (comment)","comments":0,"createdAt":"2018-06-13T10:01:31Z","updatedAt":"2018-06-18T12:47:53Z","closedAt":"2018-06-15T16:26:10Z","state":"closed","user":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4"},"owner":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4"},"assignee":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4"},"labels":[{"name":"area/aspects","color":"000000"},{"name":"area/documentation","color":"bfe5bf"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1534753145000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5519","number":5519,"title":"Rename the `Formatting` aspect of the doctest","body":"The Formatting aspect in the doctests (here https://github.com/coala/coala/blob/master/coalib/bearlib/aspects/root.py#L18) needs to be renamed to some crazy name as a workaround till #5518 is resolved.","comments":4,"createdAt":"2018-06-13T10:09:57Z","updatedAt":"2018-08-20T08:19:05Z","closedAt":"2018-08-20T08:19:04Z","state":"closed","user":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4"},"owner":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4"},"assignee":{"login":"jschwarzwalder","avatarUrl":"https://avatars0.githubusercontent.com/u/8946787?v=4"},"labels":[{"name":"area/aspects","color":"000000"},{"name":"area/documentation","color":"bfe5bf"},{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1528989795000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5520","number":5520,"title":"Add more description to `preferred_quotation` taste","body":"preferred_quotation taste needs more description for making it in accordance with the new design of Quotation aspect, being discussed here coala/cEPs#148","comments":0,"createdAt":"2018-06-13T10:27:41Z","updatedAt":"2018-06-14T15:23:15Z","closedAt":"2018-06-14T15:23:15Z","state":"closed","user":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4"},"owner":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4"},"assignee":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4"},"labels":[{"name":"area/aspects","color":"000000"},{"name":"area/documentation","color":"bfe5bf"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1529466386000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5525","number":5525,"title":"Builds are failing due to pytest-timeout plugin","body":"Traceback report says timeout plugin could not be loaded, which is causing builds failure.\n_pytest.vendored_packages.pluggy.PluginValidationError: Plugin 'timeout' could not be loaded: (pytest 3.1.3 (/home/travis/virtualenv/python3.4.4/lib/python3.4/site-packages), Requirement.parse('pytest>=3.6.0'))!\n\nHere is the full Traceback report: https://pastebin.com/ChVhArnj","comments":5,"createdAt":"2018-06-14T06:02:08Z","updatedAt":"2018-06-20T03:46:26Z","closedAt":"2018-06-14T07:57:02Z","state":"closed","user":{"login":"sangamcse","avatarUrl":"https://avatars2.githubusercontent.com/u/26381717?v=4"},"owner":{"login":"sangamcse","avatarUrl":"https://avatars2.githubusercontent.com/u/26381717?v=4"},"labels":[{"name":"area/upstream","color":"5319e7"},{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1529088292000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5529","number":5529,"title":"'nltk_data' cache directory should be hidden","body":"It's so annoying, it downloads stuff directly to your home directory,  I have to delete it every time. When I run coala, the cycle goes on and on. It so annoying.","comments":3,"createdAt":"2018-06-15T05:17:18Z","updatedAt":"2018-06-15T18:44:52Z","closedAt":null,"state":"open","user":{"login":"EverWinter23","avatarUrl":"https://avatars0.githubusercontent.com/u/21227016?v=4"},"owner":{"login":"EverWinter23","avatarUrl":"https://avatars0.githubusercontent.com/u/21227016?v=4"},"assignee":{"login":"EverWinter23","avatarUrl":"https://avatars0.githubusercontent.com/u/21227016?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"area/upstream","color":"5319e7"},{"name":"importance/low","color":"70E870"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1529122582000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5531","number":5531,"title":"Long file list and BlockingIOError: [Errno 11] write could not complete without blocking","body":"Traceback (most recent call last):\n  File \"/opt/python/3.6.3/lib/python3.6/logging/__init__.py\", line 994, in emit\n    stream.write(msg)\nBlockingIOError: [Errno 11] write could not complete without blocking\nCall stack:\n  File \"/home/travis/virtualenv/python3.6.3/bin/coala\", line 11, in <module>\n    sys.exit(main())\n  File \"/home/travis/virtualenv/python3.6.3/lib/python3.6/site-packages/coalib/coala.py\", line 78, in main\n    return mode_non_interactive(console_printer, args)\n  File \"/home/travis/virtualenv/python3.6.3/lib/python3.6/site-packages/coalib/coala_modes.py\", line 36, in mode_non_interactive\n    console_printer=console_printer)\n  File \"/home/travis/virtualenv/python3.6.3/lib/python3.6/site-packages/coalib/coala_main.py\", line 113, in run_coala\n    console_printer=console_printer)\n  File \"/home/travis/virtualenv/python3.6.3/lib/python3.6/site-packages/coalib/processes/Processing.py\", line 710, in execute_section\n    console_printer=console_printer)\n  File \"/home/travis/virtualenv/python3.6.3/lib/python3.6/site-packages/coalib/processes/Processing.py\", line 367, in instantiate_processes\n    complete_file_dict = get_file_dict(complete_filename_list, log_printer)\n  File \"/home/travis/virtualenv/python3.6.3/lib/python3.6/site-packages/coalib/processes/Processing.py\", line 275, in get_file_dict\n    '\\n'.join(file_dict.keys()))\n  File \"/home/travis/virtualenv/python3.6.3/lib/python3.6/site-packages/coalib/output/printers/LogPrinter.py\", line 20, in debug\n    **kwargs)\n  File \"/home/travis/virtualenv/python3.6.3/lib/python3.6/site-packages/coalib/output/printers/LogPrinter.py\", line 151, in log_message\n    self.logger.log(log_message.log_level, log_message.message)\nMessage: 'Files that will be checked:\\n/home/travis/build/jayvdb/gh-board/script/fetch-issues.js\\n/home/travis/build/jayvdb/gh-board/script/queries/index.js\\n/home/travis/build/jayvdb/gh-board/src/bipartite-graph.js\\n/home/travis/build/jayvdb/gh-board/src/card-model.js\\n/home/travis/build/jayvdb/gh-board/src/database.js\\n/home/travis/build/jayvdb/gh-board/src/filter-store.js\\n/home/travis/build/jayvdb/gh-board/src/gfm-dom.js\\n/home/travis/build/jayvdb/gh-board/src/github-client.js\\n/home/travis/build/jayvdb/gh-board/src/hacks/mermaid-stubs.js\\n/home/travis/build/jayvdb/gh-board/src/hacks/xmlhttprequest-filler.js\\n/home/travis/build/jayvdb/gh-board/src/helpers.js\\n/home/travis/build/jayvdb/gh-board/src/history.js\\n/home/travis/build/jayvdb/gh-board/src/index.js\\n/home/travis/build/jayvdb/gh-board/src/initial-data.js\\n/home/travis/build/jayvdb/gh-board/src/issue-store.js...\nhttps://travis-ci.org/jayvdb/gh-board/jobs/392980783#L2512","comments":0,"createdAt":"2018-06-16T04:11:29Z","updatedAt":"2018-06-16T04:16:22Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1535813657000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5532","number":5532,"title":"Multiple += in single settings section","body":"The following should work\n[foo]\nignore += blah\nignore += baz","comments":10,"createdAt":"2018-06-16T04:13:00Z","updatedAt":"2018-09-01T14:54:17Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"},{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1529133503000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5533","number":5533,"title":"Improve AssertionError message of `assert_result_equal(..)`","body":"After changing to pytest, the AssertionError message is changed to custom message see --> https://github.com/coala/coala/blob/master/coalib/testing/BaseTestHelper.py#L22 .\nPrevious AssertionError message is better --> https://github.com/coala/coala/blob/master/tests/testing/LocalBearTestHelperTest.py#L81\n#5505 (comment)","comments":2,"createdAt":"2018-06-16T06:52:15Z","updatedAt":"2018-06-16T07:18:23Z","closedAt":null,"state":"open","user":{"login":"sangamcse","avatarUrl":"https://avatars2.githubusercontent.com/u/26381717?v=4"},"owner":{"login":"sangamcse","avatarUrl":"https://avatars2.githubusercontent.com/u/26381717?v=4"},"assignee":{"login":"sangamcse","avatarUrl":"https://avatars2.githubusercontent.com/u/26381717?v=4"},"labels":[{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1529207353000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5534","number":5534,"title":"Add module docstrings to aspects component","body":"As part of #5359 , aspects component needs module docstrings which explain the purpose of each module.\nThey should conform with pep257, and be tested with pydocstyle.","comments":0,"createdAt":"2018-06-17T03:43:48Z","updatedAt":"2018-06-17T03:49:13Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"jschwarzwalder","avatarUrl":"https://avatars0.githubusercontent.com/u/8946787?v=4"},"labels":[{"name":"area/aspects","color":"000000"},{"name":"area/documentation","color":"bfe5bf"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1529207459000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5535","number":5535,"title":"Add module docstrings to languages component","body":"As part of #5359 , languages component (coalib/bearlib/languages/) needs module docstrings which explain the purpose of each module.\nThey should conform with pep257, and be tested with pydocstyle.","comments":0,"createdAt":"2018-06-17T03:45:40Z","updatedAt":"2018-06-17T03:50:59Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4"},"labels":[{"name":"area/aspects","color":"000000"},{"name":"area/documentation","color":"bfe5bf"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1529207563000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5536","number":5536,"title":"Add module docstrings to settings component","body":"As part of #5359 , languages component (coalib/settings/) needs module docstrings which explain the purpose of each module.\nThey should conform with pep257, and be tested with pydocstyle.","comments":0,"createdAt":"2018-06-17T03:47:17Z","updatedAt":"2018-06-17T03:52:43Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4"},"labels":[{"name":"area/aspects","color":"000000"},{"name":"area/documentation","color":"bfe5bf"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1535708043000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5537","number":5537,"title":"Add module docstrings to core nextgen components","body":"As part of #5359 , nextgen core component (coalib/core/) needs module docstrings which explain the purpose of each module.\nThey should conform with pep257, and be tested with pydocstyle.","comments":2,"createdAt":"2018-06-17T03:48:18Z","updatedAt":"2018-08-31T09:34:03Z","closedAt":"2018-08-31T09:34:03Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4"},"labels":[{"name":"area/core","color":"eb6420"},{"name":"area/documentation","color":"bfe5bf"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1529305714000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5539","number":5539,"title":"pytest failing on all CI","body":"The error is =>\n#!/bin/bash -eo pipefail\npython -m pytest\n\nTraceback (most recent call last):\n  File \"/home/circleci/.local/lib/python3.4/site-packages/_pytest/vendored_packages/pluggy.py\", line 510, in load_setuptools_entrypoints\n    plugin = ep.load()\n  File \"/usr/local/lib/python3.4/site-packages/pkg_resources/__init__.py\", line 2321, in load\n    self.require(*args, **kwargs)\n  File \"/usr/local/lib/python3.4/site-packages/pkg_resources/__init__.py\", line 2344, in require\n    items = working_set.resolve(reqs, env, installer, extras=self.extras)\n  File \"/usr/local/lib/python3.4/site-packages/pkg_resources/__init__.py\", line 783, in resolve\n    raise VersionConflict(dist, req).with_context(dependent_req)\npkg_resources.VersionConflict: (pytest 3.1.3 (/home/circleci/.local/lib/python3.4/site-packages), Requirement.parse('pytest>=3.6.0'))\n\nProbably some dependency made usage of higher pytest version mandatory. The change needs to be made in coala-mobans. So that it can be resolved in all repos.","comments":6,"createdAt":"2018-06-17T11:58:02Z","updatedAt":"2018-06-18T07:08:34Z","closedAt":"2018-06-18T07:08:34Z","state":"closed","user":{"login":"MacBox7","avatarUrl":"https://avatars0.githubusercontent.com/u/15063552?v=4"},"owner":{"login":"MacBox7","avatarUrl":"https://avatars0.githubusercontent.com/u/15063552?v=4"},"labels":[{"name":"area/CI","color":"eb6420"},{"name":"area/upstream","color":"5319e7"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1529406110000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5541","number":5541,"title":"doctest polluting tests with TrumpScript alias ts ","body":"Similar to #5518 , TrumpScript's alias 'ts' is causing problems with #5540","comments":5,"createdAt":"2018-06-18T12:48:01Z","updatedAt":"2018-06-19T11:01:50Z","closedAt":"2018-06-19T11:01:50Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"},{"name":"importance/high","color":"eb6420"},{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1529834282000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5543","number":5543,"title":"Use newer pytest","body":"There are a few useful pytest plugins which require a newer version of pytest.\nAll the existing ones will need to be checked for compatibility","comments":4,"createdAt":"2018-06-19T08:32:23Z","updatedAt":"2018-06-24T09:58:02Z","closedAt":"2018-06-24T09:58:02Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1529413699000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5545","number":5545,"title":"Add settings inspection toolset in Debgguer interface","body":"Add the code of Settings inspection toolset so that user can access the settings of a Bear in Debug environment.","comments":0,"createdAt":"2018-06-19T13:08:19Z","updatedAt":"2018-06-19T13:08:19Z","closedAt":null,"state":"open","user":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4"},"owner":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1530555433000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5546","number":5546,"title":"Newcomer Guide: Join GitLab newcomers group","body":"The newcomers guide should be updated to recommend that newcomers join\nhttps://gitlab.com/coala/roles/newcomers","comments":3,"createdAt":"2018-06-20T01:12:39Z","updatedAt":"2018-07-02T18:17:13Z","closedAt":"2018-07-02T18:17:13Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"Simda93","avatarUrl":"https://avatars2.githubusercontent.com/u/6503066?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"importance/medium","color":"fbca04"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1530720500000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5549","number":5549,"title":"Broken syntax for GitBasics.rst","body":"https://github.com/coala/coala/blame/master/docs/Developers/Git_Basics.rst#L125\nThe suggestions given are rendered incorrectly here\ndifficulty/newcomer\n(Make them appear under bullets, each + demarcating a new suggestion probably)","comments":6,"createdAt":"2018-06-21T14:01:43Z","updatedAt":"2018-07-04T16:08:20Z","closedAt":null,"state":"open","user":{"login":"virresh","avatarUrl":"https://avatars0.githubusercontent.com/u/10978108?v=4"},"owner":{"login":"virresh","avatarUrl":"https://avatars0.githubusercontent.com/u/10978108?v=4"},"assignee":{"login":"0110G","avatarUrl":"https://avatars1.githubusercontent.com/u/39427377?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1533484589000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5550","number":5550,"title":"Improve the Review Doc","body":"Recently I saw this happen #5521 (comment)\nBoth the duplicate PRs had reviews from developers even I was about to review it when I found out that both the newcomers didn't ask for assignment on the related issue thread.\nMaybe we should add a few points to our review docs http://api.coala.io/en/latest/Developers/Review.html#for-the-reviewers that the reviewers should check for whether the author asked for assignment or not and what to do in case there are duplicate PRs for the same issue and neither have been assigned to their respective authors (imo all of the unassigned ones should be closed)\nThis seems like a newcomer issue","comments":2,"createdAt":"2018-06-21T15:48:13Z","updatedAt":"2018-08-05T15:56:29Z","closedAt":null,"state":"open","user":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4"},"owner":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/low","color":"207de5"},{"name":"importance/low","color":"70E870"},{"name":"status/blocked","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1529658437000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5554","number":5554,"title":"aspects: Create `allowed_values` and remove `suggested_values`","body":"suggested_values is not useful as most of the times they include things like (True, False) which is but obvious when it's a bool and things like (12,34,56) when it's an int.\nBut yes we have indent_type which has (space, tab) in suggested_values and (\", \\') in preferred_quotes, these might be useful. So basically suggested_values are useful in cases when it lists us the allowed options only. Suggested values in tastes like indent_type and preferred_quotes and other such cases can be changed to allowed_values while the suggested_values can be removed from all other tastes. This won't cause any harm as suggested_values are not being used by the aspects module atm.","comments":2,"createdAt":"2018-06-22T07:33:38Z","updatedAt":"2018-06-22T09:07:17Z","closedAt":null,"state":"open","user":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4"},"owner":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4"},"assignee":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4"},"labels":[{"name":"area/aspects","color":"000000"},{"name":"area/documentation","color":"bfe5bf"},{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1529666872000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5555","number":5555,"title":"Add prof in .gitignore","body":"Ignore prof files --->**prof","comments":1,"createdAt":"2018-06-22T10:01:29Z","updatedAt":"2018-06-22T11:27:52Z","closedAt":"2018-06-22T11:27:52Z","state":"closed","user":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4"},"owner":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4"},"labels":[{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1530190356000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5556","number":5556,"title":"Fix broken links in Development_Setup.rst","body":"There are two broken links in  Development Setup Notes:\n\nIn venv section:\n\n\nNow you can activate the environment and start the next part.\n\nWhich should probably point to Repositories section(?)\n\nIn Using virtualenv section:\n\n\nAfter this, you can start installing from git.\n\nWhich should point to Installing from Git\nIt looks like issue for newcomers.","comments":3,"createdAt":"2018-06-22T18:56:58Z","updatedAt":"2018-06-28T12:52:36Z","closedAt":"2018-06-28T12:52:36Z","state":"closed","user":{"login":"stobis","avatarUrl":"https://avatars1.githubusercontent.com/u/23073061?v=4"},"owner":{"login":"stobis","avatarUrl":"https://avatars1.githubusercontent.com/u/23073061?v=4"},"assignee":{"login":"starkblaze01","avatarUrl":"https://avatars3.githubusercontent.com/u/22374162?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1530400375000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5559","number":5559,"title":"pyyaml 3.x fails on Python 3.7-dev","body":"Build error\nhttps://travis-ci.org/jayvdb/coala/jobs/395717595","comments":6,"createdAt":"2018-06-23T03:59:34Z","updatedAt":"2018-06-30T23:12:55Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"area/CI","color":"eb6420"},{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1529978595000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5565","number":5565,"title":"coalib.misc.Shell.run_interactive_shell_command() doesn't work when we're using a string as the `command` argument with shell=True","body":"When I ran run_shell_command('echo Some text here > testfile2.txt', shell=True), I just got ('', 'c: e: command not found\\n').\nrun_shell_command('echo Some text here > testfile2.txt', shell=True) is should be working because from the run_interactive_shell_command()'s docstring:\n    :param command: The command to run on shell. This parameter can either\n                    be a sequence of arguments that are directly passed to\n                    the process or a string. A string gets splitted beforehand\n                    using ``shlex.split()``. If providing ``shell=True`` as a\n                    keyword-argument, no ``shlex.split()`` is performed and the\n                    command string goes directly to ``subprocess.Popen()``.\n\n\nIf providing shell=True as a keyword-argument, no shlex.split() is performed and the command string goes directly to subprocess.Popen().","comments":1,"createdAt":"2018-06-25T14:42:22Z","updatedAt":"2018-06-26T02:03:15Z","closedAt":null,"state":"open","user":{"login":"refeed","avatarUrl":"https://avatars1.githubusercontent.com/u/20320125?v=4"},"owner":{"login":"refeed","avatarUrl":"https://avatars1.githubusercontent.com/u/20320125?v=4"},"assignee":{"login":"refeed","avatarUrl":"https://avatars1.githubusercontent.com/u/20320125?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1533997034000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5567","number":5567,"title":"Add `escape_quotes` to language definitions","body":"escape_quotes (like \\\", \\' and \"\", '') need to be added to the language definition as per the language compatibility and preference. This will be helpful for designing respective tastes for the QuotesBear as well as for the usage in the bear itself.","comments":1,"createdAt":"2018-06-26T04:44:19Z","updatedAt":"2018-08-11T14:17:14Z","closedAt":"2018-08-11T14:17:14Z","state":"closed","user":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4"},"owner":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4"},"assignee":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4"},"labels":[{"name":"area/aspects","color":"000000"},{"name":"area/documentation","color":"bfe5bf"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1530253713000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5569","number":5569,"title":"Create language file for m4","body":"m4 uses paired delimiters for string literals.\nm4 files are often found in automate-based projects.\nAdding m4 will ensure the coala language property information is not designed to handle only quote delimited strings.","comments":0,"createdAt":"2018-06-26T07:16:57Z","updatedAt":"2018-06-29T06:28:33Z","closedAt":"2018-06-29T06:28:33Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4"},"labels":[{"name":"difficulty/medium","color":"0052cc"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1530251756000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5570","number":5570,"title":"Create basic language file for Tcl","body":"Tcl uses several ways to define string literals, including paired delimiters.\nAdding Tcl will ensure the coala language property information is not designed to handle only quote delimited strings.","comments":1,"createdAt":"2018-06-26T07:18:30Z","updatedAt":"2018-06-29T05:55:56Z","closedAt":"2018-06-29T05:55:56Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1531974298000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5571","number":5571,"title":"AppVeyor failure: PermissionError: [WinError 5] Access is denied","body":"https://ci.appveyor.com/project/coala/coala/build/1.0.13331/job/7stk9roj690frdq6\ntests\\coalaTest.py ......\n+++++++++++++++++++++++++++++++++++ Timeout ++++++++++++++++++++++++++++++++++++\n~~~~~~~~~~~~~~~~~~~~~~~~~~ Stack of MainThread (552) ~~~~~~~~~~~~~~~~~~~~~~~~~~~\n  File \"c:\\python34\\lib\\runpy.py\", line 170, in _run_module_as_main\n    \"__main__\", mod_spec)\n  File \"c:\\python34\\lib\\runpy.py\", line 85, in _run_code\n    exec(code, run_globals)\n  File \"C:\\Python34\\Scripts\\py.test.exe\\__main__.py\", line 9, in <module>\n    sys.exit(main())\n  File \"c:\\python34\\lib\\site-packages\\_pytest\\config\\__init__.py\", line 65, in main\n    return config.hook.pytest_cmdline_main(config=config)\n  File \"c:\\python34\\lib\\site-packages\\pluggy\\__init__.py\", line 617, in __call__\n    return self._hookexec(self, self._nonwrappers + self._wrappers, kwargs)\n  File \"c:\\python34\\lib\\site-packages\\pluggy\\__init__.py\", line 222, in _hookexec\n    return self._inner_hookexec(hook, methods, kwargs)\n  File \"c:\\python34\\lib\\site-packages\\pluggy\\__init__.py\", line 216, in <lambda>\n    firstresult=hook.spec_opts.get('firstresult'),\n  File \"c:\\python34\\lib\\site-packages\\pluggy\\callers.py\", line 180, in _multicall\n    res = hook_impl.function(*args)\n  File \"c:\\python34\\lib\\site-packages\\_pytest\\main.py\", line 208, in pytest_cmdline_main\n    return wrap_session(config, _main)\n  File \"c:\\python34\\lib\\site-packages\\_pytest\\main.py\", line 178, in wrap_session\n    session.exitstatus = doit(config, session) or 0\n  File \"c:\\python34\\lib\\site-packages\\_pytest\\main.py\", line 215, in _main\n    config.hook.pytest_runtestloop(session=session)\n  File \"c:\\python34\\lib\\site-packages\\pluggy\\__init__.py\", line 617, in __call__\n    return self._hookexec(self, self._nonwrappers + self._wrappers, kwargs)\n  File \"c:\\python34\\lib\\site-packages\\pluggy\\__init__.py\", line 222, in _hookexec\n    return self._inner_hookexec(hook, methods, kwargs)\n  File \"c:\\python34\\lib\\site-packages\\pluggy\\__init__.py\", line 216, in <lambda>\n    firstresult=hook.spec_opts.get('firstresult'),\n  File \"c:\\python34\\lib\\site-packages\\pluggy\\callers.py\", line 180, in _multicall\n    res = hook_impl.function(*args)\n  File \"c:\\python34\\lib\\site-packages\\_pytest\\main.py\", line 236, in pytest_runtestloop\n    item.config.hook.pytest_runtest_protocol(item=item, nextitem=nextitem)\n  File \"c:\\python34\\lib\\site-packages\\pluggy\\__init__.py\", line 617, in __call__\n    return self._hookexec(self, self._nonwrappers + self._wrappers, kwargs)\n  File \"c:\\python34\\lib\\site-packages\\pluggy\\__init__.py\", line 222, in _hookexec\n    return self._inner_hookexec(hook, methods, kwargs)\n  File \"c:\\python34\\lib\\site-packages\\pluggy\\__init__.py\", line 216, in <lambda>\n    firstresult=hook.spec_opts.get('firstresult'),\n  File \"c:\\python34\\lib\\site-packages\\pluggy\\callers.py\", line 180, in _multicall\n    res = hook_impl.function(*args)\n  File \"c:\\python34\\lib\\site-packages\\_pytest\\runner.py\", line 64, in pytest_runtest_protocol\n    runtestprotocol(item, nextitem=nextitem)\n  File \"c:\\python34\\lib\\site-packages\\_pytest\\runner.py\", line 79, in runtestprotocol\n    reports.append(call_and_report(item, \"call\", log))\n  File \"c:\\python34\\lib\\site-packages\\_pytest\\runner.py\", line 159, in call_and_report\n    call = call_runtest_hook(item, when, **kwds)\n  File \"c:\\python34\\lib\\site-packages\\_pytest\\runner.py\", line 183, in call_runtest_hook\n    treat_keyboard_interrupt_as_exception=item.config.getvalue(\"usepdb\"),\n  File \"c:\\python34\\lib\\site-packages\\_pytest\\runner.py\", line 198, in __init__\n    self.result = func()\n  File \"c:\\python34\\lib\\site-packages\\_pytest\\runner.py\", line 181, in <lambda>\n    lambda: ihook(item=item, **kwds),\n  File \"c:\\python34\\lib\\site-packages\\pluggy\\__init__.py\", line 617, in __call__\n    return self._hookexec(self, self._nonwrappers + self._wrappers, kwargs)\n  File \"c:\\python34\\lib\\site-packages\\pluggy\\__init__.py\", line 222, in _hookexec\n    return self._inner_hookexec(hook, methods, kwargs)\n  File \"c:\\python34\\lib\\site-packages\\pluggy\\__init__.py\", line 216, in <lambda>\n    firstresult=hook.spec_opts.get('firstresult'),\n  File \"c:\\python34\\lib\\site-packages\\pluggy\\callers.py\", line 180, in _multicall\n    res = hook_impl.function(*args)\n  File \"c:\\python34\\lib\\site-packages\\_pytest\\runner.py\", line 109, in pytest_runtest_call\n    item.runtest()\n  File \"c:\\python34\\lib\\site-packages\\_pytest\\unittest.py\", line 186, in runtest\n    self._testcase(result=self)\n  File \"c:\\python34\\lib\\unittest\\case.py\", line 628, in __call__\n    return self.run(*args, **kwds)\n  File \"c:\\python34\\lib\\unittest\\case.py\", line 580, in run\n    testMethod()\n  File \"C:\\projects\\coala\\tests\\coalaTest.py\", line 303, in test_coala_with_color\n    coala.main, 'coala')\n  File \"C:\\projects\\coala\\tests\\TestUtilities.py\", line 44, in execute_coala\n    retval = func(debug=debug)\n  File \"C:\\projects\\coala\\coalib\\coala.py\", line 120, in main\n    return mode_normal(console_printer, None, args, debug=debug)\n  File \"C:\\projects\\coala\\coalib\\coala_modes.py\", line 28, in mode_normal\n    debug=debug)\n  File \"C:\\projects\\coala\\coalib\\coala_main.py\", line 184, in run_coala\n    False))\n  File \"C:\\projects\\coala\\coalib\\processes\\Processing.py\", line 790, in execute_section\n    use_raw_files=use_raw_files)\n  File \"C:\\projects\\coala\\coalib\\processes\\Processing.py\", line 400, in instantiate_processes\n    manager = processing.Manager()\n+++++++++++++++++++++++++++++++++++ Timeout ++++++++++++++++++++++++++++++++++++\nTraceback (most recent call last):\n  File \"<string>\", line 1, in <module>\n  File \"c:\\python34\\lib\\multiprocessing\\spawn.py\", line 100, in spawn_main\n    new_handle = steal_handle(parent_pid, pipe_handle)\n  File \"c:\\python34\\lib\\multiprocessing\\reduction.py\", line 86, in steal_handle\n    _winapi.DUPLICATE_SAME_ACCESS | _winapi.DUPLICATE_CLOSE_SOURCE)\nPermissionError: [WinError 5] Access is denied\nCommand exited with code 1","comments":4,"createdAt":"2018-06-26T13:32:06Z","updatedAt":"2018-07-19T04:24:58Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"platform/linux","color":"c2e0c6"},{"name":"platform/windows","color":"0052cc"},{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1530181527000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5572","number":5572,"title":"Expand ruby language definition","body":"The ruby language definition in coala is empty.\ncoala should have at least a basic language file for ruby.\nThere are quite a few concepts in Ruby which can not be correctly described using the limited coala language concepts, especially % string literals and balanced delimiters.","comments":3,"createdAt":"2018-06-27T13:11:07Z","updatedAt":"2018-06-28T10:25:27Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"bekicot","avatarUrl":"https://avatars0.githubusercontent.com/u/1826884?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"},{"name":"importance/low","color":"70E870"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1530107081000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5573","number":5573,"title":"Balanced string delimiters","body":"The coala language definitions have a string_delimiters which contains pairs of (start, end), and is used for pairs where the first unescaped end is the delimiter.\nIt is worth noting that at the moment, escaping is hard-wired to assume \\ is the escape character.\nThis is defined inside coala_utils's position_is_escaped.  I've raised https://gitlab.com/coala/coala-utils/issues/64 about fixing that.\nMany languages have a concept of balanced string delimiters, where the delimiter is not the first unescaped end: instead it is the matching unescaped end.  A stack is required to handle this, and coala_utils's StringProcessing doesnt support this yet.\nFor a simple example, the curly braces in Tcl are nested string delimiters.\nRuby has % string literals which are the same concept with a leading token.\nThe existing coala language definition property string_delimiters can not be re-used as-is to describe these balanced string delimiters, and we couldnt possibly use it at the moment as StringProcessing doesnt support this anyway.\nHowever it is worthwhile investigating how we might describe balanced/nested string delimiters, before attempting to implement them.\nWe might be able to re-use string_delimiters if we infer that any start, end which is also in encapsulators is a nested/balanced string delimiter.\nThat provides a way to support Tcl's {..}, but doesnt support Ruby's approach.\nMore analysis needed.\nQuite possibly a few additional language properties will be needed to be able to correctly describe balanced string delimiters for the major languages.","comments":0,"createdAt":"2018-06-27T13:44:41Z","updatedAt":"2018-06-27T13:44:41Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"area/languages","color":"d4c5f9"},{"name":"type/feature","color":"0052cc"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1535813523000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5574","number":5574,"title":"Create 'unsupported' language definitions for languages which do not use `\\` as escape sequence","body":"https://gitlab.com/coala/coala-utils/issues/64 shows that escape char \\ is hard-wired into many functions and can not be easily removed.\nTo prevent bugs, we need coalang files for languages which do not use \\ as the escape character, and those files need to clearly indicate that the language is not supported, with a comment explaining why.","comments":0,"createdAt":"2018-06-27T13:59:23Z","updatedAt":"2018-09-01T14:52:03Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4"},"labels":[{"name":"area/languages","color":"d4c5f9"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1521302613000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5251","number":5251,"title":"Linter.py: correction in process_diff docstring","body":"docstring of the process_diff function defines the parameter diff as An instance of coalib.results.Diff object containing....\nEither the word object should be removed or it should be replaced with the word class.","comments":3,"createdAt":"2018-03-10T10:46:06Z","updatedAt":"2018-03-17T16:03:33Z","closedAt":"2018-03-17T16:03:33Z","state":"closed","user":{"login":"manankalra","avatarUrl":"https://avatars3.githubusercontent.com/u/12759088?v=4"},"owner":{"login":"manankalra","avatarUrl":"https://avatars3.githubusercontent.com/u/12759088?v=4"},"assignee":{"login":"luqmanulkhair","avatarUrl":"https://avatars3.githubusercontent.com/u/884795?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1520949700000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5254","number":5254,"title":"`Ctrl+Z` command to terminate the program not working in Windows","body":"coala must terminate after pressing Ctrl+Z keys as shown in the CLI.\n\nMigrated from coala/coala-bears#1612","comments":4,"createdAt":"2018-03-11T16:51:15Z","updatedAt":"2018-03-13T14:01:40Z","closedAt":null,"state":"open","user":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"owner":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"labels":[{"name":"area/usability","color":"d4c5f9"},{"name":"difficulty/low","color":"207de5"},{"name":"platform/windows","color":"0052cc"},{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1524072800000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5260","number":5260,"title":"The `apply()` of DoNothingAction is not called in `ask_for_action_and_apply()`","body":"The function ask_for_action_and_apply() just returns if the action chosen by the user is Do (N)othing.\nif apply_single == 'Do (N)othing':\n  return False\n\nSure, it is conceptually the same as it would be if the apply() of DoNothingAction was called but IMHO its a bit weird and inconsistent that we don't try to apply() the DoNothingAction.","comments":3,"createdAt":"2018-03-15T14:20:26Z","updatedAt":"2018-04-18T17:33:20Z","closedAt":"2018-04-18T17:33:20Z","state":"closed","user":{"login":"nityeshaga","avatarUrl":"https://avatars1.githubusercontent.com/u/24698858?v=4"},"owner":{"login":"nityeshaga","avatarUrl":"https://avatars1.githubusercontent.com/u/24698858?v=4"},"assignee":{"login":"nityeshaga","avatarUrl":"https://avatars1.githubusercontent.com/u/24698858?v=4"},"labels":[{"name":"area/actions","color":"207de5"},{"name":"difficulty/low","color":"207de5"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1521390821000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5263","number":5263,"title":"Writing_Documentation.rst: reStructuredText link is not working","body":"The reStructuredText guide link (http://www.sphinx-doc.org/en/latest/rest.html) is not working. Change it to http://www.sphinx-doc.org/en/master/rest.html maybe.\n(ref: https://github.com/coala/coala/blob/master/docs/Developers/Writing_Documentation.rst)","comments":4,"createdAt":"2018-03-17T03:49:05Z","updatedAt":"2018-03-18T16:33:41Z","closedAt":"2018-03-18T16:33:41Z","state":"closed","user":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4"},"owner":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4"},"assignee":{"login":"lalitmee","avatarUrl":"https://avatars0.githubusercontent.com/u/10762218?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1522178825000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5266","number":5266,"title":"Rename method _cleanup_bear in Core.py","body":"I think the name _bear_cleanup() would be more suited to this method since _cleanup_bear() (this name is seems to be in line with our bear naming convention) sounds like a separate bear that does some cleanup rather than a method that removes a bear from the running_tasks dict.\ncc @Makman2","comments":5,"createdAt":"2018-03-18T09:33:33Z","updatedAt":"2018-03-27T19:27:05Z","closedAt":"2018-03-27T19:26:56Z","state":"closed","user":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4"},"owner":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4"},"milestone":{"title":"Nextgen-Core","createdAt":"2017-06-09T22:33:56Z","dueOn":null,"state":"open","htmlUrl":"https://github.com/coala/coala/milestone/18","description":""},"labels":[{"name":"status/invalid","color":"000000"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1521906648000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5270","number":5270,"title":"Core.py: Remove wrong part of caching docs","body":"If the section and parameters to execute_task are the same from a previous run, the cache will be queried instead of executing execute_task.\n\nThis is only partially correct, the section part here is wrong. Only the parameters to execute_task are cache relevant.","comments":1,"createdAt":"2018-03-18T19:16:11Z","updatedAt":"2018-03-24T15:50:48Z","closedAt":"2018-03-24T15:50:47Z","state":"closed","user":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"owner":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"assignee":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4"},"milestone":{"title":"Nextgen-Core","createdAt":"2017-06-09T22:33:56Z","dueOn":null,"state":"open","htmlUrl":"https://github.com/coala/coala/milestone/18","description":""},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/low","color":"207de5"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1523200053000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5273","number":5273,"title":"Include markdown and flow in coalang","body":"This is to support the settings of JSStandardBear.\ncoala/coala-bears#2230","comments":2,"createdAt":"2018-03-19T10:51:23Z","updatedAt":"2018-04-08T15:07:33Z","closedAt":"2018-04-08T15:07:33Z","state":"closed","user":{"login":"anctartica","avatarUrl":"https://avatars0.githubusercontent.com/u/7020962?v=4"},"owner":{"login":"anctartica","avatarUrl":"https://avatars0.githubusercontent.com/u/7020962?v=4"},"assignee":{"login":"anctartica","avatarUrl":"https://avatars0.githubusercontent.com/u/7020962?v=4"},"labels":[{"name":"area/CI","color":"eb6420"},{"name":"difficulty/medium","color":"0052cc"},{"name":"importance/medium","color":"fbca04"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1523239111000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5274","number":5274,"title":"Development Setup on Windows","body":"https://api.coala.io/en/latest/Developers/Development_Setup.html mentions source, which is not going to work on Windows if the developer is trying those commands in a cmd.exe\nAlso Windows doesnt have python3 ; it only has python.  Yippee.","comments":6,"createdAt":"2018-03-19T12:40:43Z","updatedAt":"2018-04-09T01:58:31Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"VickedVic","avatarUrl":"https://avatars2.githubusercontent.com/u/36702205?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"platform/windows","color":"0052cc"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1523070457000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5276","number":5276,"title":"Modify installing from git instructions in development_setup documentation","body":"https://github.com/coala/coala/blob/master/docs/Developers/Development_Setup.rst#installing-from-git\nChange cd - to cd ..\nThis makes it compatible with windows cmd as well\n(and also will run in case the OLDPWD variable is not set by chance in any linux environment)","comments":3,"createdAt":"2018-03-19T13:54:26Z","updatedAt":"2018-04-07T03:07:37Z","closedAt":"2018-04-07T03:07:37Z","state":"closed","user":{"login":"virresh","avatarUrl":"https://avatars0.githubusercontent.com/u/10978108?v=4"},"owner":{"login":"virresh","avatarUrl":"https://avatars0.githubusercontent.com/u/10978108?v=4"},"assignee":{"login":"gabi0348","avatarUrl":"https://avatars2.githubusercontent.com/u/32877573?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1523008840000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5277","number":5277,"title":"VSCode Syntax Highlighter Plugin for .coafile","body":"Is there an official .coafile syntax highlighter plugin for vscode?\nIf not then I would like to work on this as a mini project. 😄","comments":6,"createdAt":"2018-03-19T19:36:50Z","updatedAt":"2018-04-06T10:00:40Z","closedAt":"2018-04-06T10:00:40Z","state":"closed","user":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4"},"owner":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4"},"assignee":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4"},"labels":[{"name":"difficulty/medium","color":"0052cc"},{"name":"status/invalid","color":"000000"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1523919192000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5281","number":5281,"title":"Have de-ansi-ifying flag on the Linter in the core so as to support colorised output.","body":"Some tools produce colorised output, instead of individually writing custom logic to deal with it having a mechanism that supports many colorised output.","comments":8,"createdAt":"2018-03-22T03:58:33Z","updatedAt":"2018-04-16T22:53:12Z","closedAt":"2018-04-16T22:53:12Z","state":"closed","user":{"login":"aashraybhandar1","avatarUrl":"https://avatars0.githubusercontent.com/u/12982393?v=4"},"owner":{"login":"aashraybhandar1","avatarUrl":"https://avatars0.githubusercontent.com/u/12982393?v=4"},"assignee":{"login":"aashraybhandar1","avatarUrl":"https://avatars0.githubusercontent.com/u/12982393?v=4"},"labels":[{"name":"area/lintbears","color":"ededed"},{"name":"difficulty/medium","color":"0052cc"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1523083217000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5282","number":5282,"title":"No available attributes for Matlab/Octave language","body":"Cannot add ignore comments to Matlab/Octave file.\n\n[    ] *0. Do (N)othing\n[    ]  1. (O)pen file\n[    ]  2. (A)pply patch\n[    ]  3. Print (M)ore info\n[    ]  4. Add (I)gnore comment\n[    ]  5. Show Applied (P)atches\n[    ]  6. (G)enerate patches\n[    ] Enter number (Ctrl-D to exit): 4\n!    ! Please enter a value for the parameter 'language' (No description given.): Matlab\n[ERROR][16:52:13] Failed to execute the action IgnoreResultAction with error: There are no available attributes for this language..\n[    ] *0. Do (N)othing\n[    ]  1. (O)pen file\n[    ]  2. (A)pply patch\n[    ]  3. Print (M)ore info\n[    ]  4. Add (I)gnore comment\n[    ]  5. Show Applied (P)atches\n[    ]  6. (G)enerate patches\n[    ] Enter number (Ctrl-D to exit): 4\n!    ! Please enter a value for the parameter 'language' (No description given.): Octave\n[ERROR][16:52:20] Failed to execute the action IgnoreResultAction with error: There are no available attributes for this language..","comments":2,"createdAt":"2018-03-22T20:56:12Z","updatedAt":"2018-04-07T06:40:17Z","closedAt":"2018-04-07T06:40:17Z","state":"closed","user":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4"},"owner":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4"},"assignee":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4"},"labels":[{"name":"area/actions","color":"207de5"},{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1522672831000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5286","number":5286,"title":"GitCommitBear writes redundant messages to stdout","body":"This has been moved to coala/coala-bears#2374","comments":2,"createdAt":"2018-03-24T22:17:26Z","updatedAt":"2018-04-02T12:40:31Z","closedAt":"2018-03-25T02:29:47Z","state":"closed","user":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4"},"owner":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4"},"labels":[{"name":"status/invalid","color":"000000"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1523079384000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5287","number":5287,"title":"commits should not include WIP prefix.","body":"http://coala.io/commit should explicitly state that commits should not have a WIP prefix.\nThe PR title can include the WIP prefix, but ... we have labels for that.","comments":4,"createdAt":"2018-03-25T07:24:05Z","updatedAt":"2018-04-07T05:36:24Z","closedAt":"2018-04-07T05:36:24Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"HyeockJinKim","avatarUrl":"https://avatars0.githubusercontent.com/u/26498366?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/low","color":"207de5"},{"name":"importance/low","color":"70E870"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1522609007000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5290","number":5290,"title":"Documentation: Add guidelines on git merge conflicts","body":"Add guildelines on how to fix github PR merge conflicts in documentation.\nRefer https://help.github.com/articles/resolving-a-merge-conflict-using-the-command-line/\nlabel: difficulty/newcomer area/documentation","comments":3,"createdAt":"2018-03-27T08:32:48Z","updatedAt":"2018-04-01T18:56:47Z","closedAt":"2018-03-27T08:37:43Z","state":"closed","user":{"login":"Vamshi99","avatarUrl":"https://avatars2.githubusercontent.com/u/20969586?v=4"},"owner":{"login":"Vamshi99","avatarUrl":"https://avatars2.githubusercontent.com/u/20969586?v=4"},"labels":[{"name":"status/invalid","color":"000000"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1522355110000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5291","number":5291,"title":"Nextgen-Core: Raise exception in core.run() when bear or result-callback raised an exception","body":"Currently the core properly cleans up the failing bear and discards all dependent tasks and bears, and then swallows the exception.\nHowever, coala (and other users) needs to know that something didn't work perfectly, for example returning an error code that some analysis was run, but couldn't complete due to errors.\nI propose to write a custom exception that aggregates all those swallowed exceptions and is then raised in core.run().\nclass Exceptions(Exception):\n    def __init__(self, exceptions):\n        super().__init__('Multiple exceptions happened:\\n' + '\\n\\n'.join(str(ex) for ex in exceptions)\n        self.exceptions = exceptions\nTo make use of it, the core Session has another field, e.g. self.silent_errors or self.recovered_errors (or similar), where all components can put in their errors if they can recover from them. When exiting the run, the Session checks if exceptions were placed into self.silent_errors/self.recovered_errors, constructs an Exceptions instance with all of those errors and raises it in the main thread.\nAcceptance criteria:\n\nAn exception is implemented that is capable of storing multiple exceptions and emitting an appropriate error message\ncore.run() raises this exception if at least one bear or result-callback failed. The raised exception provides information on all exceptions occurred and swallowed inside core.run().","comments":3,"createdAt":"2018-03-27T20:27:55Z","updatedAt":"2018-03-29T20:25:10Z","closedAt":null,"state":"open","user":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"owner":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"assignee":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4"},"milestone":{"title":"Nextgen-Core","createdAt":"2017-06-09T22:33:56Z","dueOn":null,"state":"open","htmlUrl":"https://github.com/coala/coala/milestone/18","description":""},"labels":[{"name":"area/core","color":"eb6420"},{"name":"difficulty/medium","color":"0052cc"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1522321250000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5292","number":5292,"title":"Documentation: Add guidelines on how members should show their association to coala on online platforms","body":"Recently I came across a GitHub profile of a guy who mentioned himself as a \"Maintainer @coala\"\nOn further investigation, I found out that he was just a member of the newcomer team and wasn't even a part of the developers team. (This has already been reported to John)\nWe need to lay down some ground rules for our members on how they should show their association to coala on different websites. For example:\n\nMembers of the newcomers team -> Member @coala\nMembers of the developers team -> Developer @coala\nMembers of the research team -> Research @coala\n\nWe need something along these lines so that we don't have members putting forth misleading/false information on their profiles.\ncc @jayvdb","comments":3,"createdAt":"2018-03-29T05:33:22Z","updatedAt":"2018-03-29T11:00:50Z","closedAt":"2018-03-29T11:00:50Z","state":"closed","user":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4"},"owner":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1522525676000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5295","number":5295,"title":"Add support for writing ignore comment in some languages","body":"There is currently no ignore comment support for PHP.\n\n[    ] *0. Do (N)othing\n[    ]  1. (O)pen file\n[    ]  2. Add (I)gnore comment\n[    ] Enter number (Ctrl-D to exit): 2\n!    ! Please enter a value for the parameter 'language' (No description given.): php\n[ERROR][12:50:23] Failed to execute the action IgnoreResultAction with error: There are no available attributes for this language..\n\nAdd corresponding attributes (e.g. comment delimiter) to coalib/bearlib/languages/definitions/PHP.py\nSame issue for Fortran, ObjectiveC, PLSQL, Ruby, Scala and Swift. There are indeed thousands of languages, but these already have stub code in coalib/bearlib/languages/definitions, so I think it could be a quick fix.","comments":6,"createdAt":"2018-03-29T16:53:45Z","updatedAt":"2018-03-31T19:47:56Z","closedAt":"2018-03-31T19:47:56Z","state":"closed","user":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4"},"owner":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4"},"assignee":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4"},"labels":[{"name":"area/actions","color":"207de5"},{"name":"difficulty/low","color":"207de5"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1523060292000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5296","number":5296,"title":"Add support for writing ignore comment in Fortran","body":"There is currently no ignore comment support for Fortran.\n\n[ ] *0. Do (N)othing\n[ ] 1. (O)pen file\n[ ] 2. Add (I)gnore comment\n[ ] Enter number (Ctrl-D to exit): 2\n! ! Please enter a value for the parameter 'language' (No description given.): Fortran\n[ERROR][12:50:23] Failed to execute the action IgnoreResultAction with error: There are no available attributes for this language..\n\nAdd corresponding attributes (e.g. comment delimiter) to coalib/bearlib/languages/definitions/Fortran.py","comments":4,"createdAt":"2018-03-29T17:00:16Z","updatedAt":"2018-04-07T00:18:12Z","closedAt":"2018-04-07T00:18:12Z","state":"closed","user":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4"},"owner":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4"},"assignee":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4"},"labels":[{"name":"area/actions","color":"207de5"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1523009484000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5297","number":5297,"title":"Add position number convention to linter bear guide","body":"coala uses one-based row number and one-based column number (see https://api.coala.io/en/latest/coalib.results.html#module-coalib.results.Result). This should also be mentioned in the tutorial.\nLinter bear writers should be careful about that convention to avoid inconsistency. IMO this should be updated: http://api.coala.io/en/latest/Developers/Writing_Linter_Bears.html","comments":2,"createdAt":"2018-03-31T04:14:32Z","updatedAt":"2018-04-06T10:11:24Z","closedAt":null,"state":"open","user":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4"},"owner":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/low","color":"207de5"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1523060733000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5300","number":5300,"title":"Add support for writing ignore comment in different languages","body":"When adding ignore comments, some languages are not supported. Some of them have stub definitions here with some attributes (e.g., comment delimiter) missing, while others even don't have stub definitions.\nFor example, you may want to add ignore comments when using LineLengthBear. This can happen to all languages IMO.\nCurrent open issues:\n\nJinja2\nphp\n\nIssues to be open (those already have stub):\n\nObjectiveC\nPLSQL\nRuby\nScala\nSwift\n\nAnd many many more.\nSince there are thousands of languages missing, it is suggested that contributors should create an issue only if they want to solve it.","comments":1,"createdAt":"2018-03-31T20:23:34Z","updatedAt":"2018-04-07T00:25:33Z","closedAt":null,"state":"open","user":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4"},"owner":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4"},"labels":[{"name":"area/actions","color":"207de5"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1522532934000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5301","number":5301,"title":"Run coala on specific files and use .coafile settings at the same time","body":"Currently, when we want to run coala on a specific file, we may do this:\ncoala --bears PyLintBear --files test.py\nand with --no-config flag if there is a coala configure file in the current directory (to avoid using that configuration).\nHowever, sometimes we may want to run coala on a specific file and use settings (e.g., bears) in .coafile at the same time. (This is what https://github.com/coala/coala-vs-code is doing now).\nFor example, if our .coafile is as follows:\n[python]\nfiles = **.py\nlanguage = python\nbears = PyLintBear\n\n[javascript]\nfiles = **.js\nbears = JSHintBear\nlanguage = javascript\nallow_unused_variables = True\njavascript_strictness = False\n\nThen if we run coala --files test.py, --files test.py is simply ignored. This is not what we expect.\nAnother situation is .coafile doesn't include files attribute.\nFor example, if our .coafile is as follows:\n[python]\nlanguage = python\nbears = PyLintBear\n\n[javascript]\nbears = JSHintBear\nlanguage = javascript\nallow_unused_variables = True\njavascript_strictness = False\n\nThen if we run coala --files test.py, all sections would be run! Of course, we don't want to run JSHintBear on python scripts. This is also not what we expect.","comments":2,"createdAt":"2018-03-31T21:39:21Z","updatedAt":"2018-03-31T21:48:54Z","closedAt":"2018-03-31T21:47:31Z","state":"closed","user":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4"},"owner":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4"},"labels":[{"name":"status/invalid","color":"000000"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1525160106000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5302","number":5302,"title":"Generate docs for aspects too when doing `setup.py docs`","body":"What https://github.com/coala/aspect-docs does right now should be embedded as a build-step in our setup.py docs command and put into the API docs.\nThen we can archive/move to GitLab/delete that repo.","comments":8,"createdAt":"2018-04-01T12:12:50Z","updatedAt":"2018-05-01T07:35:06Z","closedAt":null,"state":"open","user":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"owner":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"labels":[{"name":"area/aspects","color":"000000"},{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/medium","color":"0052cc"},{"name":"status/needs design","color":"5319e7"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1523956401000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5305","number":5305,"title":"Path-settings for bears: Better support for relative files","body":"From coala/coala-bears#2373 (by @cbaines):\n\nIf the rubocop config file is specified with a relative path, e.g. [1], then this means that coala must be run in a working directory such that the configuration file exists at this relative path. This breaks things like the Emacs Flycheck integration, which runs coala not always in the directory where the .coafile exists.\n1:\nrubocop_config = .rubocop.yml\nI'm not sure if this is something that can be fixed, or how to do it. Is there someway to specifying a path in the .coafile as relative to the .coafile itself, or can the RuboCopBear determine the correct path at runtime, ... It would at least be good to have the RuboCopBear check the config file exists before trying to run rubocop.","comments":5,"createdAt":"2018-04-02T13:16:34Z","updatedAt":"2018-04-17T09:13:21Z","closedAt":null,"state":"open","user":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"owner":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"labels":[{"name":"area/bears","color":"eb6420"},{"name":"difficulty/medium","color":"0052cc"},{"name":"importance/high","color":"eb6420"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1522785385000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5306","number":5306,"title":"Improve message when adding an ignore comment in an unsupported language","body":"src/main.c\n[   1] #include·<stdio.h>·\n**** SpaceConsistencyBear [Section: all | Severity: NORMAL] ****\n!    ! Line contains following spacing inconsistencies:\n!    ! - Trailing whitespaces.\n[----] /home/nityeshaga/coala/coala-tutorial/src/main.c\n[++++] /home/nityeshaga/coala/coala-tutorial/src/main.c\n[   1] #include <stdio.h> \n[   1] #include <stdio.h>\n[    ] *0. Do (N)othing\n[    ]  1. (O)pen file\n[    ]  2. (A)pply patch\n[    ]  3. Print (M)ore info\n[    ]  4. Add (I)gnore comment\n[    ]  5. Show Applied (P)atches\n[    ]  6. (G)enerate patches\n[    ] Enter number (Ctrl-D to exit): i\n!    ! Please enter a value for the parameter 'language' (No description given.): nolang\n[WARNING][20:41:04] coala does not support Ignore in \"nolang\". Consider opening an issue at https://github.com/coala/coala/issues so we can add support for this language.\n[    ] An ignore comment was added to your source code.\n\nAs expected, when I opened the file, no ignore comment was added to the source. IMHO saying that an ignore comment was added to the source code is misleading.\nWe should fix this bug.","comments":1,"createdAt":"2018-04-02T15:22:07Z","updatedAt":"2018-04-03T19:56:25Z","closedAt":null,"state":"open","user":{"login":"nityeshaga","avatarUrl":"https://avatars1.githubusercontent.com/u/24698858?v=4"},"owner":{"login":"nityeshaga","avatarUrl":"https://avatars1.githubusercontent.com/u/24698858?v=4"},"labels":[{"name":"area/actions","color":"207de5"},{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1525747756000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5307","number":5307,"title":".coafile: Replace default section with all","body":"Refer coala/coala-bears#2397\ndifficulty/newcomer","comments":10,"createdAt":"2018-04-02T19:44:51Z","updatedAt":"2018-05-08T02:49:16Z","closedAt":"2018-05-08T02:48:32Z","state":"closed","user":{"login":"MacBox7","avatarUrl":"https://avatars0.githubusercontent.com/u/15063552?v=4"},"owner":{"login":"MacBox7","avatarUrl":"https://avatars0.githubusercontent.com/u/15063552?v=4"},"assignee":{"login":"sachinmukherjee","avatarUrl":"https://avatars2.githubusercontent.com/u/19318218?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1522774304000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5308","number":5308,"title":"NextGen-Core: Investigate alternative processing pool implementations","body":"See https://wiki.python.org/moin/ParallelProcessing for alternative frameworks offering parallel computation API (for example \"Ray\" or \"POSH\").","comments":0,"createdAt":"2018-04-03T16:49:07Z","updatedAt":"2018-04-03T16:51:44Z","closedAt":null,"state":"open","user":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"owner":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"milestone":{"title":"Nextgen-Core","createdAt":"2017-06-09T22:33:56Z","dueOn":null,"state":"open","htmlUrl":"https://github.com/coala/coala/milestone/18","description":""},"labels":[{"name":"area/core","color":"eb6420"},{"name":"difficulty/high","color":"B319e7"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1525158421000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5309","number":5309,"title":"When not providing any section in coafiles remove warning message of the deprecated `Default` section","body":"","comments":9,"createdAt":"2018-04-04T00:49:20Z","updatedAt":"2018-05-01T07:07:01Z","closedAt":null,"state":"open","user":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4"},"owner":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4"},"assignee":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1535813921000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5310","number":5310,"title":"Result.py: Add docstring regarding the case that line or column is None","body":"The output generated by coala can have line being None or column being None.\ncolumn = None means there is an error with the whole line.\nline = None means the whole file. The reason behind it is that it's an unknown line means it can occur anywhere in the file.\nAll combinations with None values and numbers for line and column are allowed, except line=None and column=<some number>\nThis should be clarified in the documentation.\n(ref: http://api.coala.io/en/latest/coalib.results.html#module-coalib.results.Result)","comments":2,"createdAt":"2018-04-04T04:13:32Z","updatedAt":"2018-09-01T14:58:41Z","closedAt":null,"state":"open","user":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4"},"owner":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/low","color":"207de5"},{"name":"importance/medium","color":"fbca04"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1523011856000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5314","number":5314,"title":"PULL_REQUEST_TEMPLATE.md: Change `cobot` to `corobo`","body":"","comments":0,"createdAt":"2018-04-05T07:12:23Z","updatedAt":"2018-04-06T10:50:56Z","closedAt":"2018-04-06T10:50:56Z","state":"closed","user":{"login":"sangamcse","avatarUrl":"https://avatars2.githubusercontent.com/u/26381717?v=4"},"owner":{"login":"sangamcse","avatarUrl":"https://avatars2.githubusercontent.com/u/26381717?v=4"},"assignee":{"login":"HizkiFW","avatarUrl":"https://avatars3.githubusercontent.com/u/7418049?v=4"},"labels":[{"name":"area/CI","color":"eb6420"},{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1526675007000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5315","number":5315,"title":"Add more supports to php language definition","body":"Missing supports for php in coala that can be added are keywords, comment_delimiter, multiline_comment_delimiters, indent_types, etc.\ndifficulty/low\narea/action","comments":0,"createdAt":"2018-04-05T19:51:01Z","updatedAt":"2018-05-18T20:23:27Z","closedAt":"2018-05-18T20:23:27Z","state":"closed","user":{"login":"sangamcse","avatarUrl":"https://avatars2.githubusercontent.com/u/26381717?v=4"},"owner":{"login":"sangamcse","avatarUrl":"https://avatars2.githubusercontent.com/u/26381717?v=4"},"assignee":{"login":"bekicot","avatarUrl":"https://avatars0.githubusercontent.com/u/1826884?v=4"},"labels":[{"name":"area/CI","color":"eb6420"},{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1529398651000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5316","number":5316,"title":"Invalid link to GitHub on coala API Documentation","body":"coala uses Read the Docs to generate API webpages. However, there is a floating window at the bottom right corner which displays a link to corresponding GitHub page.\nFor example, on the page coalib package, you can click on the small floating window at the bottom right corner and it would display a window as follows:\n\nThe view link points to https://github.com/coala/coala/blob/master/docs/coalib.rst, which doesn't exist.","comments":4,"createdAt":"2018-04-06T03:02:25Z","updatedAt":"2018-06-19T08:57:31Z","closedAt":null,"state":"open","user":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4"},"owner":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"area/upstream","color":"5319e7"},{"name":"difficulty/medium","color":"0052cc"},{"name":"importance/medium","color":"fbca04"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1523008588000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5318","number":5318,"title":"Revert use of invalid classifier for 3.4.4","body":"308e1e3 changed the setup.py classifiers to be:\n-Programming Language :: Python :: 3.4\n+Programming Language :: Python :: 3.4.4\nHowever that is not a known classifier according to https://pypi.python.org/pypi?%3Aaction=list_classifiers","comments":0,"createdAt":"2018-04-06T08:00:00Z","updatedAt":"2018-04-06T09:56:28Z","closedAt":"2018-04-06T09:56:28Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"tadityar","avatarUrl":"https://avatars1.githubusercontent.com/u/7445868?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"importance/high","color":"eb6420"},{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1523232364000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5319","number":5319,"title":"Check 3.4.3 is unsupported","body":"On travis builds, on master, there are a set of extra checks that certain versions are not installable.\n308e1e3 lifted the minimum from 3.4 to 3.4.4 , so 3.4.3 should be added to the list of environments to check are not installable.","comments":2,"createdAt":"2018-04-06T08:05:46Z","updatedAt":"2018-04-09T00:06:04Z","closedAt":"2018-04-09T00:00:50Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"Hori75","avatarUrl":"https://avatars0.githubusercontent.com/u/31226068?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"},{"name":"importance/medium","color":"fbca04"},{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1523201914000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5320","number":5320,"title":"Remove setup.py of man pages on Windows","body":"#4894 added man/man1 to setup.py, but who knows if it works, and man/man1 for Windows is extra silly given it does nothing.","comments":2,"createdAt":"2018-04-06T08:15:20Z","updatedAt":"2018-04-08T15:38:34Z","closedAt":"2018-04-08T15:38:34Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"nikitavbv","avatarUrl":"https://avatars1.githubusercontent.com/u/24596921?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"platform/windows","color":"0052cc"},{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1530191893000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5321","number":5321,"title":"Test the man page","body":"#4894 added man/man1 to setup.py, but who knows if it works.  We should have some test logic which verifies that man can load the man page correctly\nIn the referenced issue, a much more complex solution was used by a team who generally verify their stuff works.\nhttps://github.com/wkentaro/wstool/blob/68003a95c2bde7b26101a9621de814ff82a73b64/setup.py#L21","comments":6,"createdAt":"2018-04-06T08:17:21Z","updatedAt":"2018-06-28T13:18:13Z","closedAt":"2018-06-28T13:18:13Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"nikitavbv","avatarUrl":"https://avatars1.githubusercontent.com/u/24596921?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"area/install","color":"bfdadc"},{"name":"area/tests","color":"bfd4f2"},{"name":"difficulty/medium","color":"0052cc"},{"name":"importance/medium","color":"fbca04"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1523039542000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5326","number":5326,"title":"Add yaml file linting to .coafile","body":"See https://github.com/coala/coala-bears/blob/master/.coafile#L70\nWe need the same in this repo.  Also check files named .yaml (even if none exist, so we catch any future additions)\nAlso fix any problems found.","comments":0,"createdAt":"2018-04-06T14:54:31Z","updatedAt":"2018-04-06T18:32:22Z","closedAt":"2018-04-06T18:32:22Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"},{"name":"importance/medium","color":"fbca04"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1523366098000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5328","number":5328,"title":"Delete rultor stuff","body":".rultor.yml should be removed.\nAlso .misc/rultor_secrets.sh.asc","comments":3,"createdAt":"2018-04-06T15:25:35Z","updatedAt":"2018-04-10T13:14:58Z","closedAt":"2018-04-10T13:14:58Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"HizkiFW","avatarUrl":"https://avatars3.githubusercontent.com/u/7418049?v=4"},"labels":[{"name":"area/CI","color":"eb6420"},{"name":"difficulty/low","color":"207de5"},{"name":"importance/low","color":"70E870"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1533790471000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5329","number":5329,"title":"Diff.py: Update ``split_diff`` docstring","body":"In the docstring of split_diff function, Line 323 should be updated to - If ``-1`` is given, every change....\nThis is needed to prevent bear developers from using any arbitrary negative value (and use a common value) in order to ease out the process of implementing changes to the current behavior in future.\ndifficulty/newcomer\narea/documentation","comments":5,"createdAt":"2018-04-06T15:29:52Z","updatedAt":"2018-08-09T04:54:31Z","closedAt":"2018-08-09T04:54:31Z","state":"closed","user":{"login":"manankalra","avatarUrl":"https://avatars3.githubusercontent.com/u/12759088?v=4"},"owner":{"login":"manankalra","avatarUrl":"https://avatars3.githubusercontent.com/u/12759088?v=4"},"assignee":{"login":"blindacai","avatarUrl":"https://avatars0.githubusercontent.com/u/7420826?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1526093505000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5330","number":5330,"title":"Add language definition for Haskell","body":"https://github.com/coala/coala/tree/master/coalib/bearlib/languages/definitions has no Haskell.\n:-(","comments":2,"createdAt":"2018-04-07T01:36:57Z","updatedAt":"2018-05-12T02:51:45Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"area/languages","color":"d4c5f9"},{"name":"difficulty/medium","color":"0052cc"},{"name":"importance/medium","color":"fbca04"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1526230355000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5331","number":5331,"title":"FilterTest.py: change import","body":"tests/parsing/FilterTest.py imports available_filters from coalib.parsing.FilterHelper\nfrom coalib.parsing.FilterHelper import available_filters\nIMO it should be changed into\nfrom coalib.parsing.filters import available_filters\nref:\nFilterTest: https://github.com/coala/coala/blob/master/tests/parsing/FilterTest.py#L4\nFilterHelper: https://github.com/coala/coala/blob/master/coalib/parsing/FilterHelper.py#L2\nfilters: https://github.com/coala/coala/blob/master/coalib/parsing/filters/__init__.py","comments":3,"createdAt":"2018-04-07T04:02:02Z","updatedAt":"2018-05-13T16:52:35Z","closedAt":"2018-05-13T16:52:35Z","state":"closed","user":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4"},"owner":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4"},"assignee":{"login":"tallicamike","avatarUrl":"https://avatars0.githubusercontent.com/u/1883838?v=4"},"labels":[{"name":"area/tests","color":"bfd4f2"},{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"importance/low","color":"70E870"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1524827014000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5332","number":5332,"title":"Try grip","body":"Could be a replacement for pip.\nEugeny/grip#2","comments":5,"createdAt":"2018-04-07T10:01:46Z","updatedAt":"2018-04-27T11:03:34Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"alphadose","avatarUrl":"https://avatars1.githubusercontent.com/u/25170258?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"},{"name":"importance/low","color":"70E870"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1534727663000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5333","number":5333,"title":"Make all blocks even colored in Newcomers Guide","body":"See #5119\nThe grey colored patches over yellow background are due to the extra colon before the exemplar commands. Just remove one colon and it will look fine.","comments":17,"createdAt":"2018-04-07T11:45:51Z","updatedAt":"2018-08-20T01:14:23Z","closedAt":null,"state":"open","user":{"login":"kriti21","avatarUrl":"https://avatars3.githubusercontent.com/u/19872082?v=4"},"owner":{"login":"kriti21","avatarUrl":"https://avatars3.githubusercontent.com/u/19872082?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1523105150000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5334","number":5334,"title":"NextGen-Core: persistent_hash - Cache calls?","body":"Using an lru_cache has the potential to speed up runs significantly that occur in the same process. This is especially useful for IDE integrations.\nEvaluations have to be made implementing either Python's lru_cache with a sensible number or a different caching strategy so coala doesn't consume too many resources. A \"switch\" to turn on call-caching is maybe also an additional option. So a normal coala run which runs the core only once in a process has decreased memory consumption, but daemon-like applications which run coala repeatedly don't have to recompute cache-key-hashes all the time.","comments":1,"createdAt":"2018-04-07T12:24:32Z","updatedAt":"2018-04-07T12:45:50Z","closedAt":null,"state":"open","user":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"owner":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"milestone":{"title":"Nextgen-Core","createdAt":"2017-06-09T22:33:56Z","dueOn":null,"state":"open","htmlUrl":"https://github.com/coala/coala/milestone/18","description":""},"labels":[{"name":"area/core","color":"eb6420"},{"name":"difficulty/medium","color":"0052cc"},{"name":"status/needs design","color":"5319e7"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1531745649000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5335","number":5335,"title":"Move testfixtures requirement to test-requirements.txt","body":"","comments":14,"createdAt":"2018-04-07T14:16:37Z","updatedAt":"2018-07-16T12:54:09Z","closedAt":"2018-07-16T12:54:09Z","state":"closed","user":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"owner":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"assignee":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"},{"name":"importance/critical","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1523113379000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5336","number":5336,"title":"NextGen-Core: Investigate usage of `attrs` package to replace/enhance `persistent_hash` for caching","body":"Our requirements for a hash function:\n\nIt works on all currently existing Python objects.\nIt changes when the \"content\" of an instance changes (i.e. when fields change that identify the instance, for example a complex number: If the real or imaginary part changes, the hash needs to change too. This doesn't count for \"cache\" values, i.e. imagine you want to speed up repeated calls to the \"abs()\" function of a complex number, you have created a \"_abs_cache\" field which is initially None. Changing it shall not change the hash value, as it's not an \"instance identifying value\". If that is not avoidable, it shall be possible to override hashing behaviour in classes.)\nIt's not volatile across different Python runs (see for example hash randomization in Python for certain types).\n\nThere is a major problem though:\n\nThe hash function that attr generates utilizes repr. This will fulfil the above demands only for objects that are annotated with attr and only use objects annotated with it.","comments":1,"createdAt":"2018-04-07T15:02:53Z","updatedAt":"2018-04-07T15:02:59Z","closedAt":null,"state":"open","user":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"owner":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"milestone":{"title":"Nextgen-Core","createdAt":"2017-06-09T22:33:56Z","dueOn":null,"state":"open","htmlUrl":"https://github.com/coala/coala/milestone/18","description":""},"labels":[{"name":"area/core","color":"eb6420"},{"name":"difficulty/high","color":"B319e7"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1523720496000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5337","number":5337,"title":"Linter_Bears_Advanced.rst: Wrong indentation","body":"See https://github.com/coala/coala/blame/master/docs/Developers/Linter_Bears_Advanced.rst#L123\nSample code uses wrong indentation\n@linter(executable='my_tool')\nclass MyBear:\ndef process_output(self, output, filename, file):\n    for issue in json.loads(output):\n        yield Result.from_values(origin=self,\n                                 message=issue[\"message\"],\n                                 file=filename)","comments":3,"createdAt":"2018-04-08T02:44:05Z","updatedAt":"2018-04-14T15:41:36Z","closedAt":"2018-04-14T15:41:36Z","state":"closed","user":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4"},"owner":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1529541876000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5338","number":5338,"title":"add .ignore to .gitignore","body":"these files are used my many search tools to search through code","comments":4,"createdAt":"2018-04-08T04:34:54Z","updatedAt":"2018-06-21T00:44:36Z","closedAt":null,"state":"open","user":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4"},"owner":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4"},"assignee":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4"},"labels":[{"name":"area/upstream","color":"5319e7"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1525040797000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5340","number":5340,"title":"CollectFilesTest.test_file_invalid unnecessary parameters","body":"The following can be removed.\n                                           ignored_file_paths=None,\n                                           limit_file_paths=None,","comments":2,"createdAt":"2018-04-08T12:14:10Z","updatedAt":"2018-04-29T22:26:37Z","closedAt":"2018-04-29T22:26:37Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"NovaOutlaw","avatarUrl":"https://avatars1.githubusercontent.com/u/18121833?v=4"},"labels":[{"name":"area/tests","color":"bfd4f2"},{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"importance/low","color":"70E870"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1533471909000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5341","number":5341,"title":"Processing.instantiate_processes: Remove superfluous parameter in inner function call to `collect_files`","body":"The None in here is unnecessary:\n    filename_list = collect_files(\n        glob_list(section.get('files', '')),\n        None,\n        ...","comments":4,"createdAt":"2018-04-08T12:17:06Z","updatedAt":"2018-08-05T12:25:09Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"riddhyasona","avatarUrl":"https://avatars1.githubusercontent.com/u/32356489?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"importance/low","color":"70E870"},{"name":"type/codestyle","color":"d4c5f9"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1523816827000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5342","number":5342,"title":"absolute paths not working when provided through CLI or config file","body":"coala seems to treat them always as relative and thus leads to error","comments":8,"createdAt":"2018-04-08T12:24:16Z","updatedAt":"2018-04-15T18:27:07Z","closedAt":null,"state":"open","user":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4"},"owner":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4"},"labels":[{"name":"status/invalid","color":"000000"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1531404046000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5343","number":5343,"title":"Model flow language definition","body":"This is required for supporting JSStandardBear settings.\nFlow is a derivative of a specific javascript version, therefore needs to be defined carefully.","comments":2,"createdAt":"2018-04-08T13:36:05Z","updatedAt":"2018-07-12T14:00:46Z","closedAt":null,"state":"open","user":{"login":"anctartica","avatarUrl":"https://avatars0.githubusercontent.com/u/7020962?v=4"},"owner":{"login":"anctartica","avatarUrl":"https://avatars0.githubusercontent.com/u/7020962?v=4"},"labels":[{"name":"area/bears","color":"eb6420"},{"name":"area/languages","color":"d4c5f9"},{"name":"difficulty/low","color":"207de5"},{"name":"status/needs design","color":"5319e7"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1535813846000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5345","number":5345,"title":"Shouldn't be getting Executing section cli... when [cli] is empty","body":"","comments":0,"createdAt":"2018-04-08T16:54:01Z","updatedAt":"2018-09-01T14:57:26Z","closedAt":null,"state":"open","user":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4"},"owner":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4"},"labels":[{"name":"area/CLI","color":"006b75"},{"name":"area/config","color":"fbca04"},{"name":"difficulty/low","color":"207de5"},{"name":"importance/medium","color":"fbca04"},{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1524358046000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5346","number":5346,"title":"linter: Implement new parameters to control line-index and column-index conversion to handle zero-based and one-based conventions","body":"Many tools have different conventions regarding what is the first line or column. Some emit 0, some emit 1.\nAcceptance criteria:\n\n@linter accepts argument(s) that controls the conversion of zero-based line/column indexes. When enabled, zero-based indexes are incremented by 1 to match coala's (one-based) convention. The user is able to control column- and line-conversion individually.\nThe new parameter is documented in our API and in our tutorials and guides (namely Writing_Linter_Bears.rst).\nTests exist for the new parameter.\n\nNotes:\nFrom my experience I would recommend to have only one parameter that controls the conversion for both, lines and columns at once.","comments":2,"createdAt":"2018-04-08T17:24:49Z","updatedAt":"2018-04-22T00:47:26Z","closedAt":"2018-04-22T00:47:26Z","state":"closed","user":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"owner":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"assignee":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4"},"labels":[{"name":"area/lintbears","color":"ededed"},{"name":"difficulty/low","color":"207de5"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1523237044000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5348","number":5348,"title":"Reactivate osx job on master only","body":"#3611 entirely removed osx.\nWould be good to reactivate,  but not run on PRs","comments":0,"createdAt":"2018-04-09T01:24:04Z","updatedAt":"2018-04-09T01:24:04Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"Hori75","avatarUrl":"https://avatars0.githubusercontent.com/u/31226068?v=4"},"labels":[{"name":"area/CI","color":"eb6420"},{"name":"difficulty/low","color":"207de5"},{"name":"importance/low","color":"70E870"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1526479383000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5354","number":5354,"title":"Writing_Linter_Bears docs for global-linter-bears produce TypeError: `self` is missing in `create_arguments` signature","body":"In Writing_Linter_Bears.html#global-linter-bears, it is written create_arguments(config_file), but it gives TypeError written below.\nTypeError: create_arguments() takes 1 positional argument but 2 were given\n\nstatus/needs discussion","comments":16,"createdAt":"2018-04-09T19:35:00Z","updatedAt":"2018-05-16T14:03:03Z","closedAt":"2018-05-16T14:03:03Z","state":"closed","user":{"login":"sangamcse","avatarUrl":"https://avatars2.githubusercontent.com/u/26381717?v=4"},"owner":{"login":"sangamcse","avatarUrl":"https://avatars2.githubusercontent.com/u/26381717?v=4"},"assignee":{"login":"z1ggy-o","avatarUrl":"https://avatars1.githubusercontent.com/u/19348185?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"status/needs info","color":"006b75"},{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1524322344000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5355","number":5355,"title":"coala core needs a warning/error if it sees a 0 col or row","body":"coala uses one-based row number and one-based column number (see https://api.coala.io/en/latest/coalib.results.html#module-coalib.results.Result).\nHowever, some bear may violate this rule, e.g. PyLintBear.\ncoala core should produce a warning or an error if it sees a 0 column or row.","comments":0,"createdAt":"2018-04-10T06:14:43Z","updatedAt":"2018-04-21T14:52:24Z","closedAt":"2018-04-21T14:52:24Z","state":"closed","user":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4"},"owner":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4"},"assignee":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4"},"labels":[{"name":"area/CI","color":"eb6420"},{"name":"area/bears","color":"eb6420"},{"name":"area/lintbears","color":"ededed"},{"name":"difficulty/medium","color":"0052cc"},{"name":"importance/medium","color":"fbca04"},{"name":"type/feature","color":"0052cc"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1526127582000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5356","number":5356,"title":"ambiguous comment","body":"coala/coalib/settings/ConfigurationGathering.py\n    \n    \n         Line 487\n      in\n      ca86eef\n    \n    \n    \n    \n\n        \n          \n           # `arg_list = arg_list or default_list` \n        \n    \n  \n\n\nno such thing as default_list","comments":4,"createdAt":"2018-04-10T12:29:27Z","updatedAt":"2018-05-12T12:19:42Z","closedAt":null,"state":"open","user":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4"},"owner":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4"},"labels":[{"name":"area/config","color":"fbca04"},{"name":"difficulty/low","color":"207de5"},{"name":"importance/low","color":"70E870"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1524929088000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5357","number":5357,"title":"Why is there a need to collect `sys.argv[1:]` when the args have already been parsed once with `default_arg_parser().parse_args()`","body":"This may be more of a doubt and less of an issue\n\n  \n    \n      coala/coalib/settings/ConfigurationGathering.py\n    \n    \n        Lines 442 to 446\n      in\n      ca86eef\n    \n    \n    \n    \n\n        \n          \n           def gather_configuration(acquire_settings, \n        \n\n        \n          \n                                    log_printer=None, \n        \n\n        \n          \n                                    arg_list=None, \n        \n\n        \n          \n                                    arg_parser=None, \n        \n\n        \n          \n                                    args=None): \n        \n    \n  \n\n\n\n  \n    \n      coala/coalib/settings/ConfigurationGathering.py\n    \n    \n        Lines 485 to 488\n      in\n      ca86eef\n    \n    \n    \n    \n\n        \n          \n           if args is None: \n        \n\n        \n          \n               # Note: arg_list can also be []. Hence we cannot use \n        \n\n        \n          \n               # `arg_list = arg_list or default_list` \n        \n\n        \n          \n               arg_list = sys.argv[1:] if arg_list is None else arg_list \n        \n    \n  \n\n\nso arg_list are the args provided while testing, args are the args that are actually parsed over here,\n\n  \n    \n      coala/coalib/coala.py\n    \n    \n         Line 35\n      in\n      ca86eef\n    \n    \n    \n    \n\n        \n          \n           args = default_arg_parser().parse_args() \n        \n    \n  \n\n\nso I don't see why is there a requirement to collect the args received to coala again through sys.argv[1:]","comments":1,"createdAt":"2018-04-10T12:34:33Z","updatedAt":"2018-04-28T15:24:48Z","closedAt":null,"state":"open","user":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4"},"owner":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4"},"labels":[{"name":"area/CLI","color":"006b75"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1523366636000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5358","number":5358,"title":"setup.py: Add `@coala.io` domain mail ID","body":"https://github.com/coala/coala/blob/master/setup.py#L88\ndifficulty/newcomer","comments":1,"createdAt":"2018-04-10T13:13:11Z","updatedAt":"2018-04-10T13:23:56Z","closedAt":null,"state":"open","user":{"login":"sangamcse","avatarUrl":"https://avatars2.githubusercontent.com/u/26381717?v=4"},"owner":{"login":"sangamcse","avatarUrl":"https://avatars2.githubusercontent.com/u/26381717?v=4"},"labels":[{"name":"status/blocked","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1529304872000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5359","number":5359,"title":"Add module docstrings","body":"coalib usually doesnt have any module docstrings.\nThey are used to describe the content & scope of the module succinctly.","comments":6,"createdAt":"2018-04-10T16:48:28Z","updatedAt":"2018-06-18T06:54:32Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"type/feature","color":"0052cc"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1523737281000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5360","number":5360,"title":"Add Markdown to init.py","body":"Need to include it in init.py to use Markdown definition.","comments":2,"createdAt":"2018-04-10T16:52:59Z","updatedAt":"2018-04-14T20:21:21Z","closedAt":"2018-04-14T11:54:20Z","state":"closed","user":{"login":"anctartica","avatarUrl":"https://avatars0.githubusercontent.com/u/7020962?v=4"},"owner":{"login":"anctartica","avatarUrl":"https://avatars0.githubusercontent.com/u/7020962?v=4"},"labels":[{"name":"area/languages","color":"d4c5f9"},{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1532171235000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5364","number":5364,"title":"Fix typo in docstring of Smell.py","body":"There is a bracket typo at coalib/bearlib/aspects/Smell.py\nChange public class Customer… to public class Customer {\nNewcomers are welcome for this issue.","comments":11,"createdAt":"2018-04-11T09:24:46Z","updatedAt":"2018-07-21T11:07:15Z","closedAt":"2018-07-21T11:07:15Z","state":"closed","user":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4"},"owner":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1523444165000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5365","number":5365,"title":"Add functionality of removing the need to provide values to settings which already have a default value with optional arguments in config files or sections created through CLI","body":"currently they are treated as a part of the value to the earlier setting which makes the value to the earlier setting invalid at all times","comments":0,"createdAt":"2018-04-11T10:56:05Z","updatedAt":"2018-04-11T10:56:05Z","closedAt":null,"state":"open","user":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4"},"owner":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1524679647000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5366","number":5366,"title":"Typo in Constants.py and ConfigurationGatheringTest.py","body":"Line 99 of ConfigurationGatheringTest.py\nLine 118 of Constants.py\ndifficulty/newcomer","comments":7,"createdAt":"2018-04-11T21:02:33Z","updatedAt":"2018-04-25T18:07:27Z","closedAt":"2018-04-25T18:07:27Z","state":"closed","user":{"login":"sangamcse","avatarUrl":"https://avatars2.githubusercontent.com/u/26381717?v=4"},"owner":{"login":"sangamcse","avatarUrl":"https://avatars2.githubusercontent.com/u/26381717?v=4"},"assignee":{"login":"GopiKishan14","avatarUrl":"https://avatars3.githubusercontent.com/u/32811229?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1523518020000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5368","number":5368,"title":"Take a look at debug messages (`-V`) for further information should not appear when already in debug mode","body":"","comments":2,"createdAt":"2018-04-12T05:57:40Z","updatedAt":"2018-04-12T07:27:00Z","closedAt":"2018-04-12T07:27:00Z","state":"closed","user":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4"},"owner":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4"},"labels":[{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1523698381000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5372","number":5372,"title":"PycodestyleBear checks are breaking the circleci and travis builds","body":"New checks are added in pycodestyle 2.4.0 release on (2018-04-10) which are W504, W605, W606, and E252. These checks are breaking the builds of coala.\nHere is a snapshot of the failure\ncoalib/bearlib/aspects/docs.py\n[  25] ·················fix_suggestions:·str=''):\n**** PycodestyleBear (E252) [Section: autopep8 | Severity: NORMAL] ****\n!    ! E252 missing whitespace around parameter equals\n\ncoalib/results/SourceRange.py\n[ 194] ········return·(super().__contains__(item)·and\n**** PycodestyleBear (W504) [Section: autopep8 | Severity: NORMAL] ****\n!    ! W504 line break after binary operator\n\ntests/coalaTest.py\n[ 308] ················self.assertNotRegex(err,·'^\\[WARNING\\]')\n**** PycodestyleBear (W605) [Section: autopep8 | Severity: NORMAL] ****\n!    ! W605 invalid escape sequence '\\]'\n\nIt can be fixed by adding these new checks to pycodestyle_ignore list under autopep8 section of .coafile.\nHere is the build links. https://circleci.com/gh/coala/coala/16850 , https://travis-ci.org/coala/coala/jobs/365460326#L1562","comments":22,"createdAt":"2018-04-12T07:21:23Z","updatedAt":"2018-04-14T09:33:01Z","closedAt":"2018-04-14T09:33:01Z","state":"closed","user":{"login":"sangamcse","avatarUrl":"https://avatars2.githubusercontent.com/u/26381717?v=4"},"owner":{"login":"sangamcse","avatarUrl":"https://avatars2.githubusercontent.com/u/26381717?v=4"},"assignee":{"login":"sangamcse","avatarUrl":"https://avatars2.githubusercontent.com/u/26381717?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"},{"name":"importance/critical","color":"e11d21"},{"name":"type/codestyle","color":"d4c5f9"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1523700353000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5373","number":5373,"title":"Typo in DocstyleDefinitionTest, TextPositionTest & TextRangeTest","body":"instantation -> instantiation\nhttps://github.com/coala/coala/blob/master/tests/bearlib/languages/documentation/DocstyleDefinitionTest.py#L20\nhttps://github.com/coala/coala/blob/master/tests/results/TextPositionTest.py#L8\nhttps://github.com/coala/coala/blob/master/tests/results/TextRangeTest.py#L9","comments":1,"createdAt":"2018-04-13T03:49:25Z","updatedAt":"2018-04-14T10:05:53Z","closedAt":"2018-04-14T10:05:53Z","state":"closed","user":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4"},"owner":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4"},"assignee":{"login":"corinv","avatarUrl":"https://avatars0.githubusercontent.com/u/22667461?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1523593149000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5374","number":5374,"title":"Developers should have the option to run coala even if the files haven't changed at all","body":"not an extra tag which has to be provided always, something like give it once and forget it.\ncurrently its frustrating to change the file everytime you run coala to test something,\nof course one can use sed but that too gets irritating if you have to change the files being tested upon repeatedly.","comments":5,"createdAt":"2018-04-13T03:55:03Z","updatedAt":"2018-04-13T04:19:09Z","closedAt":"2018-04-13T04:01:28Z","state":"closed","user":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4"},"owner":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4"},"labels":[{"name":"area/CI","color":"eb6420"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1532969439000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5375","number":5375,"title":"Change .coafile as circle.yml no more exists","body":"In the yml section of the .coafile we have circle.yml which no more exists\nChange it to its new path","comments":4,"createdAt":"2018-04-13T12:08:08Z","updatedAt":"2018-07-30T16:50:39Z","closedAt":"2018-07-30T16:50:39Z","state":"closed","user":{"login":"harshhx17","avatarUrl":"https://avatars2.githubusercontent.com/u/31805694?v=4"},"owner":{"login":"harshhx17","avatarUrl":"https://avatars2.githubusercontent.com/u/31805694?v=4"},"assignee":{"login":"souravbadami","avatarUrl":"https://avatars0.githubusercontent.com/u/11073943?v=4"},"labels":[{"name":"area/CI","color":"eb6420"},{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"importance/medium","color":"fbca04"},{"name":"type/codestyle","color":"d4c5f9"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1523699399000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5376","number":5376,"title":"Caching in circleci","body":"The present circleci configuration has wrong directories to save as cache\nFound a cache from build 16771 at dependency-cache-MfIdcOGAB6o5lgJk3zgUtho6OdSTiSuos39lCQTkx_U=\nSize: 2.1 MB\nCached paths:\n\n/home/circleci/project/$HOME/nltk_data\n/home/circleci/project/docs/_build\n/home/circleci/project/$HOME/.cache/pip\n\nOnly one of these paths exist","comments":1,"createdAt":"2018-04-13T12:44:08Z","updatedAt":"2018-04-14T09:49:59Z","closedAt":"2018-04-14T09:49:59Z","state":"closed","user":{"login":"harshhx17","avatarUrl":"https://avatars2.githubusercontent.com/u/31805694?v=4"},"owner":{"login":"harshhx17","avatarUrl":"https://avatars2.githubusercontent.com/u/31805694?v=4"},"assignee":{"login":"harshhx17","avatarUrl":"https://avatars2.githubusercontent.com/u/31805694?v=4"},"labels":[{"name":"area/CI","color":"eb6420"},{"name":"difficulty/low","color":"207de5"},{"name":"importance/medium","color":"fbca04"},{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1524045222000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5378","number":5378,"title":"Update the catalog of available actions when a user chains the actions together in input","body":"During a coala interaction session, the acquire_actions_and_apply() function updates the catalog of actions available to the user after the successful application of each action. This way the set of actions available to the user is based on the current status of the Result object. It does so by running an is_applicable() check  for all actions.\nBut this happens only when a user selects actions one after the other. On the other hand if he/she chains actions together, coala just executes them one after the other without ever updating the catalog. This allows for some counter-intuitive use-cases like follows:\n\n**** SpaceConsistencyBear [Section: cli | Severity: NORMAL] ****\n!    ! Line contains following spacing inconsistencies:\n!    ! - Trailing whitespaces.\n[----] /home/nityeshaga/coala/coala-tutorial/src/main.c\n[++++] /home/nityeshaga/coala/coala-tutorial/src/main.c\n[   1] #include <stdio.h>\n[   1] #include <stdio.h>\n[    ] *0. Do (N)othing\n[    ]  1. (O)pen file\n[    ]  2. (A)pply patch\n[    ]  3. Print (M)ore info\n[    ]  4. Add (I)gnore comment\n[    ]  5. Show Applied (P)atches\n[    ]  6. (G)enerate patches\n[    ] Enter number (Ctrl-D to exit): a\n[    ] Patch applied successfully.\n[    ] *0. Do (N)othing\n[    ]  1. (O)pen file\n[    ]  2. Print (M)ore info\n[    ]  3. Add (I)gnore comment\n[    ] Enter number (Ctrl-D to exit): g\n[    ] Please enter a valid letter or number.\n\nAs we can see, normally, the user cannot select GeneratePatchesAction after selecting the ApplyPatchAction. But coala allows him/her to do so by chaining the actions together as follows --\n\n**** SpaceConsistencyBear [Section: cli | Severity: NORMAL] ****\n!    ! Line contains following spacing inconsistencies:\n!    ! - Trailing whitespaces.\n[----] /home/nityeshaga/coala/coala-tutorial/src/main.c\n[++++] /home/nityeshaga/coala/coala-tutorial/src/main.c\n[   1] #include <stdio.h>\n[   1] #include <stdio.h>\n[    ] *0. Do (N)othing\n[    ]  1. (O)pen file\n[    ]  2. (A)pply patch\n[    ]  3. Print (M)ore info\n[    ]  4. Add (I)gnore comment\n[    ]  5. Show Applied (P)atches\n[    ]  6. (G)enerate patches\n[    ] Enter number (Ctrl-D to exit): ag\n[    ] Patch applied successfully.\n[WARNING][22:44:59] 'cli' is an internally reserved section name. It may have been generated into your coafile while running coala with --save. The settings in that section will inherit implicitly to all sections as defaults just like CLI args do. Please change the name of that section in your coafile to avoid any unexpected behavior.\n[    ] *0. Do Nothing\n[    ]  1. Apply patch ('SpaceConsistencyBear')\n[    ]  2. Apply patch ('ArtisticStyleBear')\n[    ]  3. Apply patch ('CSecurityBear')\n[    ]  4. Apply patch ('ClangBear')\n[    ]  5. Apply patch ('ClangComplexityBear')\n[    ]  6. Apply patch ('GNUIndentBear')\n[    ]  7. Apply patch ('DocGrammarBear')\n[    ]  8. Apply patch ('DocumentationStyleBear')\n[    ]  9. Apply patch ('FilenameBear')\n[    ]  10. Apply patch ('InvalidLinkBear')\n[    ]  11. Apply patch ('KeywordBear')\n[    ]  12. Apply patch ('LicenseCheckBear')\n[    ]  13. Apply patch ('LineCountBear')\n[    ]  14. Apply patch ('LineLengthBear')\n[    ]  15. Apply patch ('MementoBear')\n[    ]  16. Apply patch ('SpaceConsistencyBear')\n[    ]  17. Apply patch ('URLBear')\n[    ]  18. Apply patch ('coalaBear')\n[    ]  Enter a number:\n\nIMHO we need a more consistent behaviour across such use-cases.","comments":2,"createdAt":"2018-04-13T19:15:51Z","updatedAt":"2018-04-18T09:53:42Z","closedAt":null,"state":"open","user":{"login":"nityeshaga","avatarUrl":"https://avatars1.githubusercontent.com/u/24698858?v=4"},"owner":{"login":"nityeshaga","avatarUrl":"https://avatars1.githubusercontent.com/u/24698858?v=4"},"labels":[{"name":"area/actions","color":"207de5"},{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1523669163000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5379","number":5379,"title":"Add output mode to emit a unified diff","body":"It can be useful to use coala to obtain a patch file of fixes that have been found by the bears.\nFor simplicity, unified diff output format should be the only format initially.\n--json will be a bit of a guide on how to do this.\nOne way to solve this is to write a converter of the JSON output to a unified diff format, discarding all the non-fix results.","comments":0,"createdAt":"2018-04-14T01:25:53Z","updatedAt":"2018-04-14T01:26:03Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"area/CLI","color":"006b75"},{"name":"area/results","color":"eb6420"},{"name":"area/usability","color":"d4c5f9"},{"name":"difficulty/medium","color":"0052cc"},{"name":"type/feature","color":"0052cc"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1525272715000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5382","number":5382,"title":"Remove E252 from ignore list and fix the missing whitespaces around parameter equals","body":"As discussed in #5372 (comment)\nEdit:\nE252 is the new check of pycodestyle 2.4.0 and is in ignore list of .coafile.\nThis issue is to fix all the missing whitespaces around the parameter equals.\ndifficulty/low\nimportance/low","comments":3,"createdAt":"2018-04-14T09:39:41Z","updatedAt":"2018-05-02T14:51:55Z","closedAt":"2018-04-17T09:24:19Z","state":"closed","user":{"login":"sangamcse","avatarUrl":"https://avatars2.githubusercontent.com/u/26381717?v=4"},"owner":{"login":"sangamcse","avatarUrl":"https://avatars2.githubusercontent.com/u/26381717?v=4"},"assignee":{"login":"yzgyyang","avatarUrl":"https://avatars0.githubusercontent.com/u/16748524?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"},{"name":"importance/low","color":"70E870"},{"name":"type/codestyle","color":"d4c5f9"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1527419809000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5383","number":5383,"title":"Remove W605 from ignore list and fix invalid escape sequence","body":"As per discussed in #5372 (comment)\ncoala/coala-bears#2432 can help.\nimportance/high\ndifficulty/low","comments":8,"createdAt":"2018-04-14T10:08:46Z","updatedAt":"2018-05-27T11:16:49Z","closedAt":"2018-05-27T11:16:49Z","state":"closed","user":{"login":"sangamcse","avatarUrl":"https://avatars2.githubusercontent.com/u/26381717?v=4"},"owner":{"login":"sangamcse","avatarUrl":"https://avatars2.githubusercontent.com/u/26381717?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"},{"name":"importance/medium","color":"fbca04"},{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1523802769000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5385","number":5385,"title":"NextGen-Settings: Investigate packages to create a hashable and immutable `Section` object","body":"We need immutable sections to ensure that bears are not allowed to modify them to avoid side effects. Such an immutable section would implement comparison, hashes, etc.\ncc @Makman2 @jayvdb","comments":8,"createdAt":"2018-04-14T19:37:48Z","updatedAt":"2018-04-15T14:32:49Z","closedAt":null,"state":"open","user":{"login":"nityeshaga","avatarUrl":"https://avatars1.githubusercontent.com/u/24698858?v=4"},"owner":{"login":"nityeshaga","avatarUrl":"https://avatars1.githubusercontent.com/u/24698858?v=4"},"labels":[{"name":"area/core","color":"eb6420"},{"name":"status/needs discussion","color":"d93f0b"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1523816644000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5386","number":5386,"title":"NextGen-Core: Auto-daemonize coala to speed up subsequent runs","body":"This would exactly work like gradle's daemon feature: If you spawn coala multiple times, it tries to run a coala-daemon, that keeps things in memory. This avoids cache reloads and file reloads for unchanged files.","comments":4,"createdAt":"2018-04-14T21:22:41Z","updatedAt":"2018-04-15T18:24:04Z","closedAt":null,"state":"open","user":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"owner":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"labels":[{"name":"area/core","color":"eb6420"},{"name":"difficulty/high","color":"B319e7"},{"name":"status/needs design","color":"5319e7"},{"name":"status/needs discussion","color":"d93f0b"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1533552560000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5389","number":5389,"title":"Remove E133, E242 and E303 from pycodestyle_ignore list of .coafile","body":"These 2 checks are important to select and will not affect any code.\ndifficulty/newcomer","comments":7,"createdAt":"2018-04-15T14:40:05Z","updatedAt":"2018-08-06T10:49:20Z","closedAt":"2018-08-06T10:49:20Z","state":"closed","user":{"login":"sangamcse","avatarUrl":"https://avatars2.githubusercontent.com/u/26381717?v=4"},"owner":{"login":"sangamcse","avatarUrl":"https://avatars2.githubusercontent.com/u/26381717?v=4"},"assignee":{"login":"shashwatmishra76","avatarUrl":"https://avatars2.githubusercontent.com/u/24711156?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"importance/medium","color":"fbca04"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1531977190000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5390","number":5390,"title":"test_coala_with|without_color fails","body":"Rather random failure in these two tests\nhttps://circleci.com/gh/coala/coala/16945\nFor without color,\n            for err in errors:\n>               self.assertRegex(err, '^\\[WARNING\\]')\nE               AssertionError: Regex didn't match: '^\\\\[WARNING\\\\]' not found in '[ERROR][15:31:29] An unknown error occurred. This is a bug. We are sorry for the inconvenience. Please contact the developers for assistance. During execution of coala an exception was raised. This should never happen. When asked for, the following information may help investigating:'","comments":2,"createdAt":"2018-04-15T15:45:10Z","updatedAt":"2018-07-19T05:13:10Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1523920000000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5391","number":5391,"title":"Remove E241 check from pycodestyle_ignore list","body":"E241 check is for multiple spaces after ',' and is important code style check. This is should not be ignored. There is one line of code change required after removing this check. Both should be done on this issue.\ndifficulty/newcomer\ntype/codestyle","comments":1,"createdAt":"2018-04-15T16:10:51Z","updatedAt":"2018-04-16T23:06:40Z","closedAt":"2018-04-16T23:06:40Z","state":"closed","user":{"login":"sangamcse","avatarUrl":"https://avatars2.githubusercontent.com/u/26381717?v=4"},"owner":{"login":"sangamcse","avatarUrl":"https://avatars2.githubusercontent.com/u/26381717?v=4"},"assignee":{"login":"lakhanshiva","avatarUrl":"https://avatars3.githubusercontent.com/u/4762264?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1535425850000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5398","number":5398,"title":"\"filters\" rewrite","body":"Foremost,\n[['language', 'c', 'java'], ['can_fix', 'syntax']]\n\nis just wrong on every level.\nVery worst case it should be tuples, not lists.\nHowever it should be a dict, or OrderedDict if the order matters.\n{'language': ['c', 'java'], 'can_fix': 'syntax'}\n\nAnd better yet it should be a proper class, so that it can be used in type annotations.\nIn some places this 'structure' is given argument name filters, which hints it may contain multiple items.\nIn other places (e.g. apply_filter) it is filter_name.\nAnd for is_valid_filter, the arg name is filter, which is a builtin function.","comments":6,"createdAt":"2018-04-17T06:25:33Z","updatedAt":"2018-08-28T03:10:50Z","closedAt":"2018-08-28T03:10:50Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"Utkarsh1308","avatarUrl":"https://avatars0.githubusercontent.com/u/23418707?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"},{"name":"importance/high","color":"eb6420"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1523966945000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5400","number":5400,"title":"Remove implementation of SpaceConsistencyTestBear","body":"SpaceConsistencyTestBear contains an old algorithm of the SpaceConsistencyBear.\nAnd there are five tests which depend on the output of its algorithm.\nWhen the run method is replaced with pass, these tests fail:\nFAIL tests/coalaCITest.py::coalaCITest::test_limit_files_affirmative\nFAIL tests/coalaCITest.py::coalaCITest::test_show_patch\nFAIL tests/coalaCITest.py::coalaCITest::test_show_patch_debug\nFAIL tests/coalaTest.py::coalaTest::test_run_coala_no_autoapply\nFAIL tests/coalaTest.py::coalaTest::test_run_coala_no_autoapply_debug\n\nBut more importantly, some unexpected parts of the codebase suddenly have no coverage.\ncoalib/coala_main.py                                                  104      1     48      1    99%   207, 206->207\ncoalib/output/ConsoleInteraction.py                                   337      1    156      1    99%   296, 287->296\ncoalib/results/result_actions/ShowPatchAction.py                       72      2     28      1    97%   104-107, 103->104\n\nThat means those lines of code are being indirectly tested by the inner workings of the bear.\nThese lines of code all need specific tests which are not based on large, old and convoluted algorithm of a bear.\nThey should have tiny neat little bears which are very simple and do only enough to activate those lines of code, and do it directly.","comments":0,"createdAt":"2018-04-17T12:09:05Z","updatedAt":"2018-04-17T12:09:05Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"area/tests","color":"bfd4f2"},{"name":"difficulty/medium","color":"0052cc"},{"name":"importance/medium","color":"fbca04"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1535472169000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5403","number":5403,"title":"Add git commit to Newcomers guide","body":"Part of Step 4 (Sending Your Changes) is \"create a commit\"\nBut the command to do this is not shown.","comments":15,"createdAt":"2018-04-18T22:14:46Z","updatedAt":"2018-08-28T16:02:49Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"dorothykiz1","avatarUrl":"https://avatars3.githubusercontent.com/u/30805504?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1529088222000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5404","number":5404,"title":"Newcomers Guide doesnt explicitly show how to test changes","body":"Part of Step 3 (Creating a Fork and Testing Your Changes) is obviously to test the changes.\nThere is a 'See also: Executing tests' pointing to http://api.coala.io/en/latest/Developers/Executing_Tests.html , which says to use pytest.\nBut the command pytest is not shown directly in the newcomers guide.\nRunning pytest should be a separate paragraph and code block, added before running coala,","comments":1,"createdAt":"2018-04-18T22:20:12Z","updatedAt":"2018-06-15T18:43:42Z","closedAt":"2018-06-15T18:43:42Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1524202321000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5406","number":5406,"title":"coala -B --json fails when one bear fails","body":"coala -B --json (and probably just coala -B) return a non-exit code when one of the bears can not be loaded.  It should show which bears can not be loaded.\n coala -B --json\n[WARNING][02:46:37] Implicit 'Default' section inheritance is deprecated. It will be removed soon. To silence this warning remove settings in the 'Default' section from your coafile. You can use dots to specify inheritance: the section 'all.python' will inherit all settings from 'all'.\n[WARNING][02:46:37] Unable to collect bears from /home/travis/virtualenv/python3.4.4/lib/python3.4/site-packages/bears/c_languages/ClangBear.py. Probably the file is malformed or the module code raises an exception.\n[INFO][02:46:37] Exception was:\nTraceback (most recent call last):\n  File \"/home/travis/virtualenv/python3.4.4/lib/python3.4/site-packages/coalib/collecting/Collectors.py\", line 134, in icollect_bears\n    for bear in _import_bears(matching_file, kinds):\n  File \"/home/travis/virtualenv/python3.4.4/lib/python3.4/site-packages/coalib/collecting/Collectors.py\", line 26, in _import_bears\n    types=list):\n  File \"/home/travis/virtualenv/python3.4.4/lib/python3.4/site-packages/coalib/collecting/Importers.py\", line 160, in iimport_objects\n    attributes, local)\n  File \"/home/travis/virtualenv/python3.4.4/lib/python3.4/site-packages/coala_utils/decorators.py\", line 27, in yield_once_generator\n    for item in iterator(*args, **kwargs):\n  File \"/home/travis/virtualenv/python3.4.4/lib/python3.4/site-packages/coalib/collecting/Importers.py\", line 119, in _iimport_objects\n    module = _import_module(file_path)\n  File \"/home/travis/virtualenv/python3.4.4/lib/python3.4/site-packages/coalib/collecting/Importers.py\", line 31, in _import_module\n    return __import__(module_name)\n  File \"/home/travis/virtualenv/python3.4.4/lib/python3.4/site-packages/bears/c_languages/ClangBear.py\", line 1, in <module>\n    from clang.cindex import Index, LibclangError\nImportError: No module named 'clang'\n\nhttps://travis-ci.org/coala/coala/jobs/368944378","comments":0,"createdAt":"2018-04-20T05:32:01Z","updatedAt":"2018-04-20T05:32:01Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"difficulty/medium","color":"0052cc"},{"name":"importance/medium","color":"fbca04"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1524319571000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5409","number":5409,"title":"test-requirements.txt: fix pytest-reqs version","body":"test-requirements.txt is currently using pytest-reqs~=0.0.6, which is out-of-date. This should be changed into 0.1.0\nReason:\npytest-reqs added a warning on pytest_reqs.py#L10 a month ago. They include this in their latest release version, 0.1.0.\nFYI: See why pip 10 is incompatible: di/pytest-reqs#13 pypa/pip#5243","comments":2,"createdAt":"2018-04-21T03:53:19Z","updatedAt":"2018-04-21T14:06:11Z","closedAt":"2018-04-21T14:06:11Z","state":"closed","user":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4"},"owner":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4"},"assignee":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"area/CI","color":"eb6420"},{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1524321642000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5412","number":5412,"title":"linter/strip_ansi: Error when using `use_stderr=True` and `use_stdout=True`","body":"The feature added in #5281 has a flaw when using the options use_stderr=True and use_stdout=True together:\noutput = tuple(compress(\n    output,\n    (options['use_stdout'], options['use_stderr'])))\nif len(output) == 1:\n    output = output[\n\nif options['strip_ansi']:\n    output = strip_ansi(output)\nIn that case output becomes a tuple and strip_ansi will fail:\nTypeError: expected string or bytes-like object","comments":0,"createdAt":"2018-04-21T13:16:06Z","updatedAt":"2018-04-21T14:40:42Z","closedAt":"2018-04-21T14:40:42Z","state":"closed","user":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"owner":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"assignee":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"labels":[{"name":"area/lintbears","color":"ededed"},{"name":"difficulty/low","color":"207de5"},{"name":"importance/high","color":"eb6420"},{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1532442049000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5415","number":5415,"title":"process_output_corrected should not treat \\n as reason to empty a file","body":"If there is an error on stderr, usually stdout is \\n.\nprocess_output_corrected should interpret \\n as intended to be the corrected file being an empty file.  It should emit an INFO message to say \\n was ignored.\nPossibly an extra flag might be added to allow \\n to really mean an empty file, if there is no way that the linter ever has an empty file except when it is recommending an empty file (but #2821 , that is almost never correct, which is why it is stupid to let empty files be created.)\nc.f. coala/coala-bears#2414 (comment)\nAlso this will probably fix the regular problems we have with MarkdownBear.","comments":3,"createdAt":"2018-04-21T13:56:13Z","updatedAt":"2018-07-24T14:20:49Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"area/lintbears","color":"ededed"},{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1526237557000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5416","number":5416,"title":"Identify missing CAN_FIX","body":"A bear which uses the corrected and unified-diff output formats should also have CAN_FIX metadata.\ncoala should detect when this metadata is missing and emit a warning.\nEDIT by @Makman2:\nRephrased to mention the output formats instead of the process_xxx functions. Also this issue applies to the unified-diff output format.","comments":1,"createdAt":"2018-04-21T23:45:53Z","updatedAt":"2018-05-13T18:52:37Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"gopalgoel19","avatarUrl":"https://avatars0.githubusercontent.com/u/11490517?v=4"},"labels":[{"name":"area/aspects","color":"000000"},{"name":"area/lintbears","color":"ededed"},{"name":"difficulty/low","color":"207de5"},{"name":"importance/low","color":"70E870"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1525265520000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5417","number":5417,"title":"COAFILE_OUTPUT is wrong for coarc","body":"The string COAFILE_OUTPUT provides instructions for generating a .coafile ; it is not suitable for generating a .coarc.\nChange the message for .coafile .coarc or default_coafile/system_coafile errors","comments":4,"createdAt":"2018-04-22T00:05:47Z","updatedAt":"2018-05-02T12:52:00Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"PrajwalM2212","avatarUrl":"https://avatars3.githubusercontent.com/u/30733262?v=4"},"labels":[{"name":"area/CLI","color":"006b75"},{"name":"area/config","color":"fbca04"},{"name":"difficulty/low","color":"207de5"},{"name":"importance/low","color":"70E870"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1524395932000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5418","number":5418,"title":"Linter API docs: Typo in output_format documentation: It's unified-diff and not unified_diff","body":"","comments":0,"createdAt":"2018-04-22T10:53:12Z","updatedAt":"2018-04-22T11:18:52Z","closedAt":"2018-04-22T11:18:52Z","state":"closed","user":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"owner":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"assignee":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"area/lintbears","color":"ededed"},{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"importance/high","color":"eb6420"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1525660648000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5420","number":5420,"title":"Add a note to reviewers","body":"Add \"Check that the changes haven't been pushed from master branch\" as a note to reviewers in the reviewing guide.\nThe wording needs to be clear enough to convey that this isn't mandatory (so that reviewers don't advice newcomers to close even their mergeable good PRs) and is just a good practice.\nlabel: difficulty/newcomer","comments":6,"createdAt":"2018-04-23T20:17:01Z","updatedAt":"2018-05-07T02:37:28Z","closedAt":null,"state":"open","user":{"login":"prnvdixit","avatarUrl":"https://avatars2.githubusercontent.com/u/24798215?v=4"},"owner":{"login":"prnvdixit","avatarUrl":"https://avatars2.githubusercontent.com/u/24798215?v=4"},"assignee":{"login":"ShubhamBansal1997","avatarUrl":"https://avatars3.githubusercontent.com/u/2090043?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/low","color":"207de5"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1529597497000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5423","number":5423,"title":"The blocks having title \"Note\" should be gray colored in all guides except the Newcomers guide","body":"The colored theme was meant for Newcomer's guide only. However, some changes are affecting the guide for writing good commits as well. All blocks in this file should be gray colored.\nRefer #5119","comments":10,"createdAt":"2018-04-25T08:15:45Z","updatedAt":"2018-06-21T16:11:37Z","closedAt":null,"state":"open","user":{"login":"kriti21","avatarUrl":"https://avatars3.githubusercontent.com/u/19872082?v=4"},"owner":{"login":"kriti21","avatarUrl":"https://avatars3.githubusercontent.com/u/19872082?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/low","color":"207de5"},{"name":"status/blocked","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1524943925000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5429","number":5429,"title":"Installation command for ``shellcheck`` needs to be changed","body":"shellcheck won't install in circleci with existing command, issue in reference to https://blog.doismellburning.co.uk/shellcheck-on-circleci/","comments":1,"createdAt":"2018-04-28T17:41:35Z","updatedAt":"2018-04-28T19:32:05Z","closedAt":"2018-04-28T19:32:05Z","state":"closed","user":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4"},"owner":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4"},"assignee":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4"},"labels":[{"name":"area/CI","color":"eb6420"},{"name":"difficulty/low","color":"207de5"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1535813739000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5432","number":5432,"title":"Writing_Documentation.rst: root directory --> docs directory","body":"difficulty/newcomer","comments":0,"createdAt":"2018-04-29T05:18:05Z","updatedAt":"2018-09-01T14:55:39Z","closedAt":null,"state":"open","user":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4"},"owner":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1525087142000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5433","number":5433,"title":"BearDownloadTest.test_status_code_error timeout","body":"The test BearDownloadTest.test_status_code_error is failing with a timeout more often than not.\nThis has been happening on Travis, Circle and Appveyor for ~24 hrs.","comments":8,"createdAt":"2018-04-29T12:39:02Z","updatedAt":"2018-04-30T11:19:02Z","closedAt":"2018-04-30T11:19:02Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"area/tests","color":"bfd4f2"},{"name":"difficulty/medium","color":"0052cc"},{"name":"importance/critical","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1525036442000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5434","number":5434,"title":"Ignore option not reshowned, if the there is some unknown language entered by user","body":"https://bpaste.net/show/0f4626ca0292\nWhen user entered the jinja2 template the then it showed a message An ignore comment was added to your source code but not any ignore comment was added ( it's acceptable ) but Add (I)gnore comment option needs to be reshowned when any user entered the non-supported definitions like jinja2\ndifficulty/low","comments":1,"createdAt":"2018-04-29T15:37:34Z","updatedAt":"2018-04-29T21:14:02Z","closedAt":null,"state":"open","user":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4"},"owner":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4"},"labels":[{"name":"area/CI","color":"eb6420"},{"name":"area/actions","color":"207de5"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1528551558000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5439","number":5439,"title":"Testing_Bears.rst: Ambiguous description of ``check_validity`` ","body":"Under Example 2, it’s mentioned that check_validity asserts if your bear yields any results for a particular check with a list of strings. This is not at all true as check_validity asserts only when your bear doesn’t yield any results for a particular check. The text should be changed accordingly.\narea/documentation\ndifficulty/newcomer","comments":3,"createdAt":"2018-05-04T06:57:56Z","updatedAt":"2018-06-09T13:39:18Z","closedAt":"2018-06-09T13:39:18Z","state":"closed","user":{"login":"manankalra","avatarUrl":"https://avatars3.githubusercontent.com/u/12759088?v=4"},"owner":{"login":"manankalra","avatarUrl":"https://avatars3.githubusercontent.com/u/12759088?v=4"},"assignee":{"login":"stobis","avatarUrl":"https://avatars1.githubusercontent.com/u/23073061?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/low","color":"207de5"},{"name":"importance/medium","color":"fbca04"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1532741765000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5440","number":5440,"title":"Constants.default_coafile is confusing","body":"coalib.misc.Constants has a default_coafile which is now quite confusing because it is the system coafile there is also a file called default_coafile.\nCreate a new constant system_coafile which has the same value as default_coafile, and remove usages of default_coafile.","comments":4,"createdAt":"2018-05-05T01:19:55Z","updatedAt":"2018-07-28T01:36:05Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"PrajwalM2212","avatarUrl":"https://avatars3.githubusercontent.com/u/30733262?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"},{"name":"importance/medium","color":"fbca04"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1525579358000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5441","number":5441,"title":"Unnecessary imports on CachingUtilities.pickle_load docstring","body":"The docstring contains\n    >>> from pyprint.NullPrinter import NullPrinter\n    >>> from coalib.output.printers.LogPrinter import LogPrinter\nThose imports are not used, and should be removed.","comments":3,"createdAt":"2018-05-05T05:12:58Z","updatedAt":"2018-05-06T04:02:38Z","closedAt":"2018-05-06T04:02:38Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"satya-vinay","avatarUrl":"https://avatars3.githubusercontent.com/u/16017648?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"importance/low","color":"70E870"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1516547575000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5013","number":5013,"title":"change glob of ApplyPatchAction in .coafile from * to **","body":"result.origin in case of many bears changes from their original name, eg. ESLintBear becomes ESLintBear (prettier/prettier) due to which the glob * may not match and ApplyPatchAction won't work.\nAlthough it won't affect the result, but as many users often refer to this file for their own project they may find that some bears are not working if they exactly put this statement over there.\ndifficulty/newcomer","comments":14,"createdAt":"2017-12-29T03:31:39Z","updatedAt":"2018-01-21T15:12:55Z","closedAt":"2018-01-21T15:12:55Z","state":"closed","user":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4"},"owner":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4"},"assignee":{"login":"clarammdantas","avatarUrl":"https://avatars1.githubusercontent.com/u/15564640?v=4"},"labels":[{"name":"area/CLI","color":"006b75"},{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1514826284000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5020","number":5020,"title":"Don't re.escape() cmdline path args in tests","body":"2nd step after #4890 for getting rid of inconveniently used re.escape()s\nSince #4883 coala cmdline args can have single-backslash path separators on Windows, which were formerly doubled in the tests by using re.escape to avoid their removal by coala's settings handling (always interpreting backslashes as escape characters)\nOccurencies of those obsolete re.escape()s can be found via #5019 (comment) #5019 (comment) #5019 (comment)\nMaybe there are even more... :)\ncc @Makman2","comments":2,"createdAt":"2017-12-31T17:06:47Z","updatedAt":"2018-01-01T17:04:44Z","closedAt":"2018-01-01T17:04:44Z","state":"closed","user":{"login":"userzimmermann","avatarUrl":"https://avatars3.githubusercontent.com/u/2088633?v=4"},"owner":{"login":"userzimmermann","avatarUrl":"https://avatars3.githubusercontent.com/u/2088633?v=4"},"assignee":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4"},"labels":[{"name":"area/tests","color":"bfd4f2"},{"name":"status/blocked","color":"e11d21"},{"name":"type/codestyle","color":"d4c5f9"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1515198013000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5022","number":5022,"title":"DefaultArgParser: Add type=PathArg to all remaining FILE and DIR args","body":"Oops :) In #4883 I didn't add the new type=PathArg to all cmdline arg definitions with file or directory path values. That needs to be completed...\nSuch args are basically all that define metavar='FILE' or 'DIR'","comments":4,"createdAt":"2017-12-31T22:01:39Z","updatedAt":"2018-01-06T00:20:13Z","closedAt":"2018-01-06T00:20:13Z","state":"closed","user":{"login":"userzimmermann","avatarUrl":"https://avatars3.githubusercontent.com/u/2088633?v=4"},"owner":{"login":"userzimmermann","avatarUrl":"https://avatars3.githubusercontent.com/u/2088633?v=4"},"assignee":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4"},"labels":[{"name":"area/CLI","color":"006b75"},{"name":"difficulty/low","color":"207de5"},{"name":"type/feature","color":"0052cc"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1516580883000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5025","number":5025,"title":"ConfigurationGathering.py: Fix docstring of function warn_config_absent()","body":"return values of True and False are interchanged\ndifficulty/newcomer","comments":15,"createdAt":"2018-01-01T15:32:28Z","updatedAt":"2018-01-22T00:28:03Z","closedAt":"2018-01-22T00:28:03Z","state":"closed","user":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4"},"owner":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4"},"assignee":{"login":"shikhar-scs","avatarUrl":"https://avatars1.githubusercontent.com/u/25258877?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1515448686000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5026","number":5026,"title":"FilterTest: Unused import `InvalidFilterException`","body":"Remove this import.","comments":6,"createdAt":"2018-01-01T21:57:57Z","updatedAt":"2018-01-08T21:58:06Z","closedAt":"2018-01-08T21:58:06Z","state":"closed","user":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"owner":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"assignee":{"login":"yugeshk","avatarUrl":"https://avatars1.githubusercontent.com/u/31157397?v=4"},"labels":[{"name":"area/tests","color":"bfd4f2"},{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1519415936000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5027","number":5027,"title":"Remove LLVM dependency","body":"Only Diff.from_clang_fixit and SourceRange.from_clang_range need libclang and LLVM for the native binaries. These functions are only used in ClangBear inside coala/coala-bears, and are very specific for that particular bear. They should be moved there until the next coala release.\nAlthough meaning it's an API break, it doesn't make sense to keep it due to this additional dependency.\nEDIT by @Makman2:\n\nChanged issue description completely.\nAdded another usage referencce for libclang","comments":2,"createdAt":"2018-01-02T20:10:46Z","updatedAt":"2018-02-23T19:58:56Z","closedAt":"2018-02-23T19:58:56Z","state":"closed","user":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"owner":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"assignee":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"labels":[{"name":"area/CI","color":"eb6420"},{"name":"difficulty/low","color":"207de5"},{"name":"importance/high","color":"eb6420"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1522446870000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5034","number":5034,"title":"Ignore comments added by coala for more than one bear don't work properly -- Fix IgnoreResultAction to use conjunctions","body":"From coala/coala-bears#2209:\n\nEven though the ignore statement has been added, the same bear is prompting.\n[   1] print(·'Hey'·)··//·Ignore·CPDBear··//·Ignore·PycodestyleBear·(E201)\n\nDownloads/new.py\n[   2] print('Hey')\n**** CPDBear [Section: cli | Severity: NORMAL] ****\n!    ! Duplicate code found.\n[    ] *0. Do (N)othing\n[    ]  1. (O)pen file\n[    ]  2. Print (M)ore info\n[    ]  3. Add (I)gnore comment\n[    ] Enter number (Ctrl-D to exit): 3\n!    ! Please enter a value for the parameter 'language' (No description given.): CPP\n[    ] An ignore comment was added to your source code.\n\nAnd look what it did to the file\nprint( 'Hey' )  // Ignore CPDBear  // Ignore PycodestyleBear (E201)  // Ignore CPDBear\nprint('Hey')\n\nTwo statements ignoring the same bear have been added.\nI think that coala is reading only the second ignore statement.","comments":20,"createdAt":"2018-01-03T18:35:22Z","updatedAt":"2018-03-30T21:54:30Z","closedAt":null,"state":"open","user":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"owner":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"assignee":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4"},"labels":[{"name":"area/CLI","color":"006b75"},{"name":"difficulty/medium","color":"0052cc"},{"name":"importance/critical","color":"e11d21"},{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1522433263000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5037","number":5037,"title":"Add support for --run-after and --run-before to a particular section in coafile","body":".coafile\n[a]\nsetting1...\n\n[b]\nsetting2...\n\n[c]\nsetting3...\n\n[d]\nsetting4...\n\nNow coala should be able to run commands\n1.coala --run-after b       => coala will only execute section c and d\n2.coala --run-before c    => coala will only execute section a and b","comments":10,"createdAt":"2018-01-03T23:27:59Z","updatedAt":"2018-03-30T18:07:43Z","closedAt":null,"state":"open","user":{"login":"khanchi97","avatarUrl":"https://avatars0.githubusercontent.com/u/22270415?v=4"},"owner":{"login":"khanchi97","avatarUrl":"https://avatars0.githubusercontent.com/u/22270415?v=4"},"labels":[{"name":"area/CLI","color":"006b75"},{"name":"difficulty/low","color":"207de5"},{"name":"status/needs discussion","color":"d93f0b"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1519483626000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5038","number":5038,"title":"Add support for section ordering","body":".coafile\n[a]\nsetting1...\n\n[b]\nsetting2...\n\n[c]\nsetting3...\n\n[d]\nsetting4...\n\nNow, if run\n\ncoala a d c b   => should run sections in order a -> d -> c -> b\ncoala d c b a   => should run sections in order d -> c -> b -> a","comments":6,"createdAt":"2018-01-03T23:38:02Z","updatedAt":"2018-02-24T14:47:06Z","closedAt":"2018-02-24T14:47:06Z","state":"closed","user":{"login":"khanchi97","avatarUrl":"https://avatars0.githubusercontent.com/u/22270415?v=4"},"owner":{"login":"khanchi97","avatarUrl":"https://avatars0.githubusercontent.com/u/22270415?v=4"},"assignee":{"login":"khanchi97","avatarUrl":"https://avatars0.githubusercontent.com/u/22270415?v=4"},"labels":[{"name":"area/CLI","color":"006b75"},{"name":"area/core","color":"eb6420"},{"name":"difficulty/medium","color":"0052cc"},{"name":"type/feature","color":"0052cc"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1529193225000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5040","number":5040,"title":"Some output by coala not visible on most of terminal Dark colour themes","body":"I have tried a tonne of dark terminal themes and except for a few like the Dracula theme render the first param given to results way too dark to be visible eg.\n\nSame theme shown with selecting those lines:\n\nI think it prints those lines as a certain kind of output message type which most dark themes render to be with either black or some other dark colour. That should be changed to some other output message type.\neg. Dracula theme, one of the very few Dark themes that renders those messages somewhat properly","comments":6,"createdAt":"2018-01-05T09:02:37Z","updatedAt":"2018-06-16T23:53:45Z","closedAt":null,"state":"open","user":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4"},"owner":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"},{"name":"importance/low","color":"70E870"},{"name":"status/needs discussion","color":"d93f0b"},{"name":"status/needs info","color":"006b75"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1522433263000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5041","number":5041,"title":"The glob `*` does not match all bears","body":"Many bears' result.origin is not just the name of the bear. For e.g.. ESLintBear has result.origin \"ESLintBear (prettier/prettier)\" and the glob * doesn't match anything with file seperators in it i.e. / or \\, we have to use glob **. The PR #5017 fixes the issue with --apply-patches command line argument but if the .coafile has something like this\ndefault_actions = *: ApplyPatchAction\n\nThis may not match all bears. This needs to be solved. Many things can be done to solve this eg:\n\n\nThe result.origin of those bears can be changed\n\n\nI don't think that any user will think this through and use glob * specifically to ignore such bears so we can internally change all the glob * to **\n\n\nWe can prompt the user that some bears won't if they ever use the glob *\n\n\nstatus/needs discussion on what is the best solution","comments":7,"createdAt":"2018-01-05T16:52:08Z","updatedAt":"2018-03-30T18:07:43Z","closedAt":null,"state":"open","user":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4"},"owner":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4"},"assignee":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4"},"labels":[{"name":"area/config","color":"fbca04"},{"name":"difficulty/low","color":"207de5"},{"name":"status/needs discussion","color":"d93f0b"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1516481605000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5042","number":5042,"title":"Document all available actions that can be used with `default_actions` setting","body":"Also no mention of any command line argument for the same (if it exists. If it does not exists should open a new issue to make one and then another issue to add that too to the docs) More newcomer issues 😃","comments":16,"createdAt":"2018-01-05T17:59:35Z","updatedAt":"2018-01-20T20:53:25Z","closedAt":"2018-01-20T20:48:39Z","state":"closed","user":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4"},"owner":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4"},"assignee":{"login":"mrsaicharan1","avatarUrl":"https://avatars3.githubusercontent.com/u/25197147?v=4"},"labels":[{"name":"status/invalid","color":"000000"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1516123241000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5043","number":5043,"title":".coafile Correct command","body":"default_action: *: ShowPatchAction this is not the correct format and should be changed to\ndefault_actions = *: ShowPatchAction","comments":6,"createdAt":"2018-01-05T18:02:06Z","updatedAt":"2018-01-16T17:20:41Z","closedAt":"2018-01-16T17:20:41Z","state":"closed","user":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4"},"owner":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4"},"assignee":{"login":"vibhanshuvaibhav","avatarUrl":"https://avatars1.githubusercontent.com/u/34730592?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1522433263000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5044","number":5044,"title":".coafile not showing the correct error","body":"An earlier typo in .coafile which is being fixed by #5043 doesn't show the correct error message. Instead it shows an error based on the previous line\neg. if your .coafile has this\nuse_spaces = true\ndefault_action: **: ApplyPatchAction\n\nit will show\n Unable to convert parameter 'use_spaces' into type <class 'bool'>.\n\nif your .coafile is\nfiles = *.txt\ndefault_action: **: ApplyPatchAction\n\nIt will show Unable to find that file/ No matching file\nor if your .coafile is\nbears = SpaceConsistencyBear\ndefault_action: **: ApplyPatchAction\n\nit will show\nNo bears matching 'SpaceConsistencyBear\ndefault_action: **: ApplyPatchAction' were found. Make sure you have coala-bears installed or you have typed the name correctly.\n\nInstead it should point out the error in the statement itself","comments":12,"createdAt":"2018-01-05T18:09:06Z","updatedAt":"2018-03-30T18:07:43Z","closedAt":null,"state":"open","user":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4"},"owner":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4"},"assignee":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4"},"labels":[{"name":"area/CLI","color":"006b75"},{"name":"difficulty/low","color":"207de5"},{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1515193387000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5045","number":5045,"title":"DiffTest failing on CI","body":"See build https://travis-ci.org/coala/coala/jobs/325392018\nSeems there was a recent update to 0.5.5 of the unidiff module on 3rd January 2018. Fixing the version below 0.5.5 should fix ti.","comments":2,"createdAt":"2018-01-05T21:21:19Z","updatedAt":"2018-01-05T23:03:07Z","closedAt":"2018-01-05T22:54:27Z","state":"closed","user":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"owner":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"assignee":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"labels":[{"name":"area/CI","color":"eb6420"},{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"importance/critical","color":"e11d21"},{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1516043214000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5048","number":5048,"title":"Installing coala","body":"Hello Everyone\nI am new here.\nI am trying to install coala. I have used all three steps.\nBut when I try to use coala, I get this error\n\"No command 'coala' found, did you mean:\nCommand 'cola' from package 'git-cola' (universe)\ncoala: command not found\"\nWhat is wrong here?","comments":3,"createdAt":"2018-01-06T14:45:57Z","updatedAt":"2018-01-15T19:06:54Z","closedAt":"2018-01-15T19:06:46Z","state":"closed","user":{"login":"claporslap","avatarUrl":"https://avatars3.githubusercontent.com/u/35170411?v=4"},"owner":{"login":"claporslap","avatarUrl":"https://avatars3.githubusercontent.com/u/35170411?v=4"},"labels":[{"name":"status/invalid","color":"000000"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1515616755000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5049","number":5049,"title":"Development Setup notes should also mention about seperate documentation repository","body":"I think Development Notes should also have the mention of seperate documentation repository like in Installation guide so that to any new comer it will be clear that he/she has to also clone the documentation repository first and then install all the requirements and then make to generate the documentation locally.\n###Additional Information\nI can take up this issue if any mentor agrees!","comments":7,"createdAt":"2018-01-06T18:25:08Z","updatedAt":"2018-01-10T20:39:15Z","closedAt":"2018-01-09T18:18:48Z","state":"closed","user":{"login":"Prabhat-IIT","avatarUrl":"https://avatars0.githubusercontent.com/u/20185657?v=4"},"owner":{"login":"Prabhat-IIT","avatarUrl":"https://avatars0.githubusercontent.com/u/20185657?v=4"},"labels":[{"name":"status/needs info","color":"006b75"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1515941664000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5051","number":5051,"title":"No link for docs in coala api","body":"In coala docs, there is a link for the coala api, in the side bar, under For Developers\nImplement vice-versa\ni.e. a link in the sidebar in coala api for the docs","comments":7,"createdAt":"2018-01-07T14:09:58Z","updatedAt":"2018-01-14T14:54:24Z","closedAt":"2018-01-10T00:26:59Z","state":"closed","user":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4"},"owner":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4"},"assignee":{"login":"namantw","avatarUrl":"https://avatars1.githubusercontent.com/u/31323328?v=4"},"labels":[{"name":"status/invalid","color":"000000"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1515447326000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5055","number":5055,"title":"SpaceConsistencyBear change docstring indentation","body":"","comments":0,"createdAt":"2018-01-08T16:17:04Z","updatedAt":"2018-01-08T21:35:26Z","closedAt":"2018-01-08T21:35:26Z","state":"closed","user":{"login":"newbazz","avatarUrl":"https://avatars1.githubusercontent.com/u/25884863?v=4"},"owner":{"login":"newbazz","avatarUrl":"https://avatars1.githubusercontent.com/u/25884863?v=4"},"assignee":{"login":"newbazz","avatarUrl":"https://avatars1.githubusercontent.com/u/25884863?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1516040758000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5056","number":5056,"title":"Fix a typo","body":"In this line change ist to isn't\ndifficulty/newcomer","comments":1,"createdAt":"2018-01-08T17:13:47Z","updatedAt":"2018-01-15T18:25:58Z","closedAt":"2018-01-15T18:25:58Z","state":"closed","user":{"login":"khanchi97","avatarUrl":"https://avatars0.githubusercontent.com/u/22270415?v=4"},"owner":{"login":"khanchi97","avatarUrl":"https://avatars0.githubusercontent.com/u/22270415?v=4"},"assignee":{"login":"jackthepirate6","avatarUrl":"https://avatars2.githubusercontent.com/u/25016228?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1515443923000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5058","number":5058,"title":"Build break generating docs","body":"Same as coala/coala-bears#2225","comments":0,"createdAt":"2018-01-08T20:19:35Z","updatedAt":"2018-01-08T20:38:43Z","closedAt":"2018-01-08T20:38:43Z","state":"closed","user":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"owner":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"assignee":{"login":"newbazz","avatarUrl":"https://avatars1.githubusercontent.com/u/25884863?v=4"},"labels":[{"name":"area/CI","color":"eb6420"},{"name":"difficulty/low","color":"207de5"},{"name":"importance/critical","color":"e11d21"},{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1531105709000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5060","number":5060,"title":"Allow sphinx version 1.6.6 in docs-requirements.txt","body":"Same as coala/coala-bears#2225\nThe solution from coala/coala-bears#2225 should be copied here. In case there's no solution yet, you can still investigate and apply it here, so coala/coala-bears#2225 can take over the solution from this issue / repository.","comments":5,"createdAt":"2018-01-08T20:30:04Z","updatedAt":"2018-07-09T03:08:29Z","closedAt":null,"state":"open","user":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"owner":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"labels":[{"name":"area/CI","color":"eb6420"},{"name":"difficulty/medium","color":"0052cc"},{"name":"importance/low","color":"70E870"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1516546416000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5061","number":5061,"title":"Git_Basics.rst: Fix formatting for code","body":"Fix formatting for \"git status\" command under pushing the commit section","comments":1,"createdAt":"2018-01-09T05:36:35Z","updatedAt":"2018-01-21T14:53:36Z","closedAt":"2018-01-21T14:53:36Z","state":"closed","user":{"login":"anctartica","avatarUrl":"https://avatars0.githubusercontent.com/u/7020962?v=4"},"owner":{"login":"anctartica","avatarUrl":"https://avatars0.githubusercontent.com/u/7020962?v=4"},"assignee":{"login":"aman9875","avatarUrl":"https://avatars0.githubusercontent.com/u/24245095?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1522418783000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5062","number":5062,"title":"correct the installation instructions for the coala docs","body":"To generate the documentation of coala it is given in the Installation guide and Development notes to use make instead of python setup.py docs which is now the right way to build the documentation. So, it needs to be updated.","comments":13,"createdAt":"2018-01-09T18:30:37Z","updatedAt":"2018-03-30T14:06:23Z","closedAt":"2018-03-30T14:06:23Z","state":"closed","user":{"login":"Prabhat-IIT","avatarUrl":"https://avatars0.githubusercontent.com/u/20185657?v=4"},"owner":{"login":"Prabhat-IIT","avatarUrl":"https://avatars0.githubusercontent.com/u/20185657?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"status/stale","color":"fbca04"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1515699140000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5063","number":5063,"title":"Windows dependency getting installed in linux system","body":"https://files.gitter.im/coala/coala/w2I2/image.png\nThis is what is being given while running coala\ntype/bug","comments":7,"createdAt":"2018-01-10T17:57:13Z","updatedAt":"2018-01-11T19:32:20Z","closedAt":"2018-01-11T12:08:28Z","state":"closed","user":{"login":"newbazz","avatarUrl":"https://avatars1.githubusercontent.com/u/25884863?v=4"},"owner":{"login":"newbazz","avatarUrl":"https://avatars1.githubusercontent.com/u/25884863?v=4"},"assignee":{"login":"newbazz","avatarUrl":"https://avatars1.githubusercontent.com/u/25884863?v=4"},"labels":[{"name":"status/invalid","color":"000000"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1515939889000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5071","number":5071,"title":"`pip3 install coala-bears --pre` not working as expected","body":"","comments":4,"createdAt":"2018-01-11T16:34:52Z","updatedAt":"2018-01-14T14:24:49Z","closedAt":"2018-01-14T14:24:30Z","state":"closed","user":{"login":"khanchi97","avatarUrl":"https://avatars0.githubusercontent.com/u/22270415?v=4"},"owner":{"login":"khanchi97","avatarUrl":"https://avatars0.githubusercontent.com/u/22270415?v=4"},"labels":[{"name":"status/invalid","color":"000000"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1515940082000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5074","number":5074,"title":"coala inferring only comma separated bears in ignore statements","body":"whereas it should do it for all thats specified in http://docs.coala.io/en/latest/Users/Tutorial.html#ignoring-code-inside-files like and\n\n  \n    \n      coala/coalib/processes/Processing.py\n    \n    \n         Line 476\n      in\n      b5d7973\n    \n    \n    \n    \n\n        \n          \n           return list(StringConverter(toignore, list_delimiters=', '))","comments":1,"createdAt":"2018-01-13T13:37:33Z","updatedAt":"2018-01-14T14:28:02Z","closedAt":"2018-01-13T16:36:45Z","state":"closed","user":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4"},"owner":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4"},"labels":[{"name":"status/invalid","color":"000000"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1522433246000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5076","number":5076,"title":"PyUnusedCodeBear ignoring two extra lines","body":"status: blocked by #4854\nSteps to replicate:\ntake a perfect python file, and add this in the end\n # Ignore SpaceConsistencyBear, PycodestyleBear\nimport os as oss  \nimport os as sso    \n\nprint(\"HelloWorld\")\n\n[extra spaces after oss and sso]\nuse .coafile:\n[cli]\nbears = SpaceConsistencyBear, PycodestyleBear\nuse_spaces = True\nfiles = *.py\n\nEverything will be as expected, the first line will be ignored while both the bears will show inconsistencies with sso line\nNow replace SpaceConsistencyBear with PyUnusedCodeBear in both .coafile and python files. You can also remove use_spaces = True\nNow run the same\nUnexpectedly, the PyUnusedCodeBear won't show any inconsistency till you change your file to\n # Ignore SpaceConsistencyBear, PycodestyleBear\nimport os as oss  \n\n\nimport os as sso    \n\nprint(\"HelloWorld\")\n\nnot even with a single new line b/w sso and oss line\nNothing wrong with SpaceConsistencyBear or PycodestyleBear\nDon't know whether this kind of problem is encountered with other bears too","comments":3,"createdAt":"2018-01-13T16:22:11Z","updatedAt":"2018-03-30T18:07:26Z","closedAt":null,"state":"open","user":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4"},"owner":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4"},"labels":[{"name":"status/blocked","color":"e11d21"},{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1522433246000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5079","number":5079,"title":"Provide a warning message if coala ran on nothing i.e no files","body":"status: blocked by #4928","comments":5,"createdAt":"2018-01-14T17:36:15Z","updatedAt":"2018-03-30T18:07:26Z","closedAt":null,"state":"open","user":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4"},"owner":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4"},"assignee":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4"},"labels":[{"name":"area/CLI","color":"006b75"},{"name":"difficulty/low","color":"207de5"},{"name":"status/blocked","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1516544919000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5080","number":5080,"title":"Provide users an escape method for coala ignore lines if they want to use 'ignore' or 'noqa' in the programs","body":"status: blocked by: #4854 status: needs discussion on what should be the keywords for escaping\nthe users may use it as a param name or somewhere in the comments or while defining a string","comments":3,"createdAt":"2018-01-14T18:15:04Z","updatedAt":"2018-01-21T14:28:39Z","closedAt":"2018-01-21T09:52:46Z","state":"closed","user":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4"},"owner":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4"},"labels":[{"name":"status/invalid","color":"000000"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1522433246000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5083","number":5083,"title":"Ignoring code add extra functionality","body":"No support for the following kind of ignores:\n<some code>\n# start ignoring bearA\n<some other code>\n# start ignoring bearB\n<some more code>\n# stop ignoring bearA\n<some other more code>\n#stop ignoring bearB\n\nand\n<some code>\n# start ignoring bearA\n<some other code>\n# start ignoring bearB\n<some more code>\n# stop ignoring bearB\n<some other more code>\n#stop ignoring bearA","comments":6,"createdAt":"2018-01-14T22:17:04Z","updatedAt":"2018-03-30T18:07:26Z","closedAt":null,"state":"open","user":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4"},"owner":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4"},"labels":[{"name":"area/config","color":"fbca04"},{"name":"difficulty/medium","color":"0052cc"},{"name":"type/feature","color":"0052cc"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1517080781000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5085","number":5085,"title":"Review.rst: rephrase a sentence","body":"It would be nice to use their instead of his when refering to someone in the sentence\nReviewing always involves saying someone that his code isn't right, be very careful not to appear rude even if you don't mean it! to be more inclusive.\nThe page in question: http://api.coala.io/en/latest/Developers/Review.html\nThe file in question: Review.rst, at line 33.","comments":0,"createdAt":"2018-01-15T17:16:40Z","updatedAt":"2018-01-27T19:19:41Z","closedAt":"2018-01-27T19:19:41Z","state":"closed","user":{"login":"Kagamihime","avatarUrl":"https://avatars0.githubusercontent.com/u/25638564?v=4"},"owner":{"login":"Kagamihime","avatarUrl":"https://avatars0.githubusercontent.com/u/25638564?v=4"},"assignee":{"login":"kunal09","avatarUrl":"https://avatars1.githubusercontent.com/u/18301033?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1516549041000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5087","number":5087,"title":"Newcomers_Guide.rst: typo error","body":"There's a typo: to to should be to in the file Newcomers_Guide.rst at line 400.","comments":3,"createdAt":"2018-01-16T12:18:40Z","updatedAt":"2018-01-21T15:37:21Z","closedAt":"2018-01-21T15:37:21Z","state":"closed","user":{"login":"Kagamihime","avatarUrl":"https://avatars0.githubusercontent.com/u/25638564?v=4"},"owner":{"login":"Kagamihime","avatarUrl":"https://avatars0.githubusercontent.com/u/25638564?v=4"},"assignee":{"login":"amalrajan","avatarUrl":"https://avatars2.githubusercontent.com/u/28838105?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1516806648000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5097","number":5097,"title":"Error 4 while installing coala-bears","body":"I have python version 3.5.2, I wrote the following in terminal\n$pip3 install coala-bears\n\nI got an error:\n\nCommand \"python setup.py egg_info\" failed with error code 4 in /tmp/pip-build-tyw_Xt/coala/","comments":9,"createdAt":"2018-01-19T18:50:55Z","updatedAt":"2018-01-24T15:10:48Z","closedAt":"2018-01-24T15:10:25Z","state":"closed","user":{"login":"duskybomb","avatarUrl":"https://avatars3.githubusercontent.com/u/13499577?v=4"},"owner":{"login":"duskybomb","avatarUrl":"https://avatars3.githubusercontent.com/u/13499577?v=4"},"labels":[{"name":"status/invalid","color":"000000"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1516909918000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5101","number":5101,"title":"bear native tutorial: update to new logging","body":"Migrated here from coala/documentation#435","comments":0,"createdAt":"2018-01-21T16:03:23Z","updatedAt":"2018-01-25T19:51:58Z","closedAt":"2018-01-25T19:51:58Z","state":"closed","user":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"owner":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"assignee":{"login":"Kagamihime","avatarUrl":"https://avatars0.githubusercontent.com/u/25638564?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/low","color":"207de5"},{"name":"importance/medium","color":"fbca04"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1524682069000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5104","number":5104,"title":"Bear Results not displayed in correct order","body":"Problem: coala/coala-bears#2244 (comment)\nPossible Solution: coala/coala-bears#2244 (comment)\n@Makman2 what should be done in the case mentioned when some bear doesn't give value to line of SourceRange. We would need something else to order the results. Maybe an additional parameter to the Result object which has intel of its order?","comments":6,"createdAt":"2018-01-23T13:42:01Z","updatedAt":"2018-04-25T18:47:49Z","closedAt":null,"state":"open","user":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4"},"owner":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4"},"labels":[{"name":"area/CLI","color":"006b75"},{"name":"difficulty/low","color":"207de5"},{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1525453319000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5107","number":5107,"title":"Add support for writing ignore comment in Jinja2","body":"","comments":8,"createdAt":"2018-01-24T17:16:11Z","updatedAt":"2018-05-04T17:01:59Z","closedAt":"2018-05-04T17:01:59Z","state":"closed","user":{"login":"kriti21","avatarUrl":"https://avatars3.githubusercontent.com/u/19872082?v=4"},"owner":{"login":"kriti21","avatarUrl":"https://avatars3.githubusercontent.com/u/19872082?v=4"},"assignee":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4"},"labels":[{"name":"area/actions","color":"207de5"},{"name":"difficulty/low","color":"207de5"},{"name":"type/feature","color":"0052cc"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1519306473000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5108","number":5108,"title":".editorconfig: Typo Error","body":"There's a typo: fies should be files at line no 15 in the file coala/.editorconfig","comments":5,"createdAt":"2018-01-24T17:52:38Z","updatedAt":"2018-02-22T13:34:33Z","closedAt":"2018-02-22T13:34:33Z","state":"closed","user":{"login":"jackthepirate6","avatarUrl":"https://avatars2.githubusercontent.com/u/25016228?v=4"},"owner":{"login":"jackthepirate6","avatarUrl":"https://avatars2.githubusercontent.com/u/25016228?v=4"},"assignee":{"login":"monsij","avatarUrl":"https://avatars0.githubusercontent.com/u/23289387?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1535081523000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5109","number":5109,"title":"Writing native bears tutorial: use the `format` string method in an example","body":"In the first example code of the tutorial \"Guide to Writing a Native Bear\" (in the section \"A Hello World Bear\"), the call to debug should be passed one argument: a string that would be formatted using the methode format.","comments":21,"createdAt":"2018-01-24T18:02:15Z","updatedAt":"2018-08-24T03:32:03Z","closedAt":"2018-08-24T03:32:02Z","state":"closed","user":{"login":"Kagamihime","avatarUrl":"https://avatars0.githubusercontent.com/u/25638564?v=4"},"owner":{"login":"Kagamihime","avatarUrl":"https://avatars0.githubusercontent.com/u/25638564?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1531987359000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5115","number":5115,"title":"Throw error for conflicting cli args: `config` and `no_config`","body":"coala should throw error if we are using both cli options( -c and -I ) at same time, as these options are conflicting to each other.\ncoala -c .confile --no-config\nor\ncoala -c .confile -I","comments":3,"createdAt":"2018-01-27T19:21:57Z","updatedAt":"2018-07-19T08:02:39Z","closedAt":"2018-07-19T08:02:39Z","state":"closed","user":{"login":"khanchi97","avatarUrl":"https://avatars0.githubusercontent.com/u/22270415?v=4"},"owner":{"login":"khanchi97","avatarUrl":"https://avatars0.githubusercontent.com/u/22270415?v=4"},"assignee":{"login":"raduklb","avatarUrl":"https://avatars2.githubusercontent.com/u/36372694?v=4"},"labels":[{"name":"area/CLI","color":"006b75"},{"name":"difficulty/low","color":"207de5"},{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1522441089000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5123","number":5123,"title":"RELEASE_NOTES.rst : Typo Error","body":"Spelling mistakes like 'availibility', 'ben', 'modifyable', 'seperation', 'libary' along with some grammatical errors are present in file coala/RELEASE_NOTES.rst","comments":8,"createdAt":"2018-01-31T18:27:08Z","updatedAt":"2018-03-30T20:18:09Z","closedAt":"2018-03-30T20:18:09Z","state":"closed","user":{"login":"richa208","avatarUrl":"https://avatars2.githubusercontent.com/u/25206394?v=4"},"owner":{"login":"richa208","avatarUrl":"https://avatars2.githubusercontent.com/u/25206394?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1519312620000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5126","number":5126,"title":"Missing parameter `check_order` in docstring","body":"There is a missing parameter check_order in the docstring of the check_results method.","comments":1,"createdAt":"2018-02-02T07:51:18Z","updatedAt":"2018-02-22T15:17:00Z","closedAt":"2018-02-22T15:17:00Z","state":"closed","user":{"login":"yash-nisar","avatarUrl":"https://avatars1.githubusercontent.com/u/14862976?v=4"},"owner":{"login":"yash-nisar","avatarUrl":"https://avatars1.githubusercontent.com/u/14862976?v=4"},"assignee":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/low","color":"207de5"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1522433247000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5127","number":5127,"title":"Refactoring the Class SpacingHelper.py","body":"Hi everyone, I was looking for class by class to start contributing to this community and I saw this part of the class \"SpacingHelper.py\".\n\n  \n    \n      coala/coalib/bearlib/spacing/SpacingHelper.py\n    \n    \n        Lines 29 to 40\n      in\n      1d9eb29\n    \n    \n    \n    \n\n        \n          \n           for char in line: \n        \n\n        \n          \n               if char == ' ': \n        \n\n        \n          \n                   count += 1 \n        \n\n        \n          \n                   continue \n        \n\n        \n          \n            \n        \n\n        \n          \n               if char == '\\t': \n        \n\n        \n          \n                   count += self.tab_width - (count % self.tab_width) \n        \n\n        \n          \n                   continue \n        \n\n        \n          \n            \n        \n\n        \n          \n               break \n        \n\n        \n          \n            \n        \n\n        \n          \n           return count \n        \n    \n  \n\n\nI was thinking of replacing them using the commands line.count(\" \") and line.count(\"\\t\")\nWhat do u think, guys?!\nThe idea is try to avoid using a lot of for-loops (for-loops and performance hate each other).\nI don't like VERY much this article but the main idea is something that we have to know:\nYou (Probably) Don’t Need For-Loops - By Randy Daw-Ran Liou","comments":9,"createdAt":"2018-02-02T22:57:39Z","updatedAt":"2018-03-30T18:07:27Z","closedAt":null,"state":"open","user":{"login":"GabrielDS","avatarUrl":"https://avatars2.githubusercontent.com/u/26201531?v=4"},"owner":{"login":"GabrielDS","avatarUrl":"https://avatars2.githubusercontent.com/u/26201531?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"},{"name":"status/needs design","color":"5319e7"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1529242308000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5129","number":5129,"title":"Problem with ``# ignore all``","body":"See\n{'f': ['first line  # stop ignoring, invalid ignore range\\n',\n       'second line\\n  # ignore all\\n',\n       \"one more line\\n\"\n       \"third line\\n\",\n       \"fourth line  # gnore shouldn't trigger without i!\\n\",\n       '# Start ignoring ABear, BBear and CBear\\n',\n       '# Stop ignoring\\n',\n       'seventh']}\n\nQuotesBear is showing error only on \"third line\\n\" and not \"one more line\\n\" when preferred_quotation = '\nSimilarly, in the file below\nprint( 'Hey' )  # ignore all\nprint( 'Hey' )\nprint( 'Hey' )\n\nPycodestyleBear is showing an error only on the third print( 'Hey' ) and not on the above two.\n# ignore all must ignore only the respective line, not the line below it!\nAlso refer coala/coala-bears#1176","comments":8,"createdAt":"2018-02-04T09:45:43Z","updatedAt":"2018-06-17T13:31:48Z","closedAt":null,"state":"open","user":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4"},"owner":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"},{"name":"status/blocked","color":"e11d21"},{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1529185630000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5131","number":5131,"title":"LocalBearTestHelper correct the docstring indentation","body":"difficulty/newcomer","comments":12,"createdAt":"2018-02-05T09:50:30Z","updatedAt":"2018-06-16T21:47:10Z","closedAt":null,"state":"open","user":{"login":"newbazz","avatarUrl":"https://avatars1.githubusercontent.com/u/25884863?v=4"},"owner":{"login":"newbazz","avatarUrl":"https://avatars1.githubusercontent.com/u/25884863?v=4"},"assignee":{"login":"pushkalkatara","avatarUrl":"https://avatars0.githubusercontent.com/u/21266230?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1519314694000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5132","number":5132,"title":"FunctionMetadata.py: Typo Error","body":"There's a typo: deprecared should be deprecated at line no 38 in the file\ncoala/coalib/settings/FunctionMetadata.py","comments":8,"createdAt":"2018-02-05T14:30:44Z","updatedAt":"2018-02-22T15:51:34Z","closedAt":"2018-02-22T15:51:34Z","state":"closed","user":{"login":"jackthepirate6","avatarUrl":"https://avatars2.githubusercontent.com/u/25016228?v=4"},"owner":{"login":"jackthepirate6","avatarUrl":"https://avatars2.githubusercontent.com/u/25016228?v=4"},"assignee":{"login":"ouromoros","avatarUrl":"https://avatars2.githubusercontent.com/u/9008546?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1521665684000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5136","number":5136,"title":"Cache control","body":"Once the NextGen-Core is implemented, we have way more possibilities for different cache operating modes that shall be available as CLI arguments in coala.\n\n\n--cache-strategy / --cache-protocol:\nControls how coala manages caches for the next run.\nFollowing modes could be implemented:\n\nnone: Don't use a cache at all. A shortcut-flag could be additionally implemented, --no-cache, effectively meaning --cache-protocol=none\nprimitive: Use a cache that grows infinitely. All cache entries are stored for all following runs, and aren't removed. Effective when many recurrent changes happen in coafiles and settings. Fastest in storing.\nlri/last-recently-used\nCached items persist only until the next run.\nStretch issue: Implement count-parameters that allow to control when to discard items from the cache, e.g. after 3 runs of coala without using a cached item, discard it.\n\nMy recommendation is to use lri as default, as coala mostly is executed locally.\n\n\n--clear-cache\nClears the cache.\n\n\n--export-cache / --import-cache\nMaybe useful to share caches. Like CI server for any project run coala, and you can download the cache from there as an artifact to speed up your builds / coala runs.\n\n\n--cache-compression\nAccepts as arguments:\n\nnone: No cache compression. This is default.\nOther flags that specify common compression capabilities Python provides (for example lzma or gzip).\nCache compression should be evaluated before regarding its effectiveness, because the cache will mainly store hashes which usually aren't really redundant, the gain might be very low. The little performance penalty when loading the cache might be too much when respecting a possible very low gain of cache space reduction.\n\n\n\n--optimize-cache\nA little performance penalty to make the cache loading faster. Particularly this feature shall utilize pickletools.optimize. But this is not exclusive to this flag.","comments":10,"createdAt":"2018-02-07T19:13:16Z","updatedAt":"2018-03-21T20:54:44Z","closedAt":null,"state":"open","user":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"owner":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"milestone":{"title":"Nextgen-Core","createdAt":"2017-06-09T22:33:56Z","dueOn":null,"state":"open","htmlUrl":"https://github.com/coala/coala/milestone/18","description":""},"labels":[{"name":"area/core","color":"eb6420"},{"name":"difficulty/medium","color":"0052cc"},{"name":"status/blocked","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1518633443000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5137","number":5137,"title":"LocalBearTestHelper: Change the docstring indentation","body":"difficulty/newcomer","comments":9,"createdAt":"2018-02-07T20:38:54Z","updatedAt":"2018-02-14T18:37:23Z","closedAt":"2018-02-14T18:37:11Z","state":"closed","user":{"login":"newbazz","avatarUrl":"https://avatars1.githubusercontent.com/u/25884863?v=4"},"owner":{"login":"newbazz","avatarUrl":"https://avatars1.githubusercontent.com/u/25884863?v=4"},"assignee":{"login":"flaredragon","avatarUrl":"https://avatars0.githubusercontent.com/u/29121452?v=4"},"labels":[{"name":"status/duplicate","color":"000000"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1522433248000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5148","number":5148,"title":"Why don't we have colors in `.coafile` configuration file","body":"","comments":10,"createdAt":"2018-02-11T09:21:34Z","updatedAt":"2018-03-30T18:07:28Z","closedAt":null,"state":"open","user":{"login":"khanchi97","avatarUrl":"https://avatars0.githubusercontent.com/u/22270415?v=4"},"owner":{"login":"khanchi97","avatarUrl":"https://avatars0.githubusercontent.com/u/22270415?v=4"},"labels":[{"name":"difficulty/medium","color":"0052cc"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1520178640000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5149","number":5149,"title":"Can something be done to prevent the creation of thousands of .coverage files in my local coala repository?","body":"Why are these being created? I don't think I have ran pytest that many times\nhttps://gist.github.com/ishanSrt/1f36a98bf4e155c5d74d50348292c244\nthis is after i deleted half of them","comments":11,"createdAt":"2018-02-11T11:22:37Z","updatedAt":"2018-03-04T15:50:40Z","closedAt":null,"state":"open","user":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4"},"owner":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4"},"labels":[{"name":"area/tests","color":"bfd4f2"},{"name":"difficulty/low","color":"207de5"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1526493019000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5150","number":5150,"title":"Add Visual Studio Code to known editors for coala","body":"","comments":13,"createdAt":"2018-02-11T17:17:06Z","updatedAt":"2018-05-16T17:50:19Z","closedAt":null,"state":"open","user":{"login":"kriti21","avatarUrl":"https://avatars3.githubusercontent.com/u/19872082?v=4"},"owner":{"login":"kriti21","avatarUrl":"https://avatars3.githubusercontent.com/u/19872082?v=4"},"assignee":{"login":"ayush9398","avatarUrl":"https://avatars2.githubusercontent.com/u/21312552?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1522433248000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5152","number":5152,"title":"Investigate on callback behaviour regarding scheduler blocking","body":"From the FIXME in the core:\n\nLong operations on the result-callback could block the scheduler significantly. It should be possible to schedule new Python Threads on the given event_loop and process the callback there.","comments":4,"createdAt":"2018-02-12T11:41:47Z","updatedAt":"2018-03-30T18:07:28Z","closedAt":null,"state":"open","user":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"owner":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"milestone":{"title":"Nextgen-Core","createdAt":"2017-06-09T22:33:56Z","dueOn":null,"state":"open","htmlUrl":"https://github.com/coala/coala/milestone/18","description":""},"labels":[{"name":"area/core","color":"eb6420"},{"name":"difficulty/medium","color":"0052cc"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1531274645000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5154","number":5154,"title":"Any plans for a 0.12 release?","body":"There hasn't been any new releases for awhile and the documentation appears to point to features that are only available in unreleased versions (such as section inheritance). Wondering if there's any plans to have a new release in the near future?","comments":2,"createdAt":"2018-02-13T02:09:42Z","updatedAt":"2018-07-11T02:04:05Z","closedAt":"2018-07-11T02:03:48Z","state":"closed","user":{"login":"zxiiro","avatarUrl":"https://avatars2.githubusercontent.com/u/150177?v=4"},"owner":{"login":"zxiiro","avatarUrl":"https://avatars2.githubusercontent.com/u/150177?v=4"},"labels":[{"name":"importance/high","color":"eb6420"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1524315503000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5155","number":5155,"title":"Custom coala bear: Use Closes vs Fixes depending on whether issue has the \"bug\" label","body":"Because this is very specific to coala, I've filed the issue here. Maybe this should be in a completely new repo, like custom-bears that are only relevant for our org.\nWhat the bear has to do? It checks the commit message whether it contains an issue reference, and makes a HTTP request on the referenced issue. If it's marked as bug, Fixes has to be used as a keyword, otherwise Closes. Should also work on multiple issue references.\nMaybe we can derive the bear somehow from GitCommitBear? Or reuse it somehow?","comments":11,"createdAt":"2018-02-13T11:28:37Z","updatedAt":"2018-04-21T12:58:23Z","closedAt":"2018-04-17T09:19:02Z","state":"closed","user":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"owner":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"labels":[{"name":"area/bears","color":"eb6420"},{"name":"difficulty/low","color":"207de5"},{"name":"status/needs design","color":"5319e7"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1524092798000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5156","number":5156,"title":"Inconsistency in output of coala -B --json & coala -B commands","body":"Output of coala -B only displays the name of the bears. But coala -B --json displays all the details of the bears. Content of coala -B --json command matches the content of coala -B --show-details.\nTo keep the behaviour consistent, we should only display the name of the bears just like coala -B in json format .","comments":4,"createdAt":"2018-02-13T12:41:34Z","updatedAt":"2018-04-18T23:06:38Z","closedAt":"2018-04-18T23:06:38Z","state":"closed","user":{"login":"shreyans800755","avatarUrl":"https://avatars2.githubusercontent.com/u/3727351?v=4"},"owner":{"login":"shreyans800755","avatarUrl":"https://avatars2.githubusercontent.com/u/3727351?v=4"},"assignee":{"login":"anctartica","avatarUrl":"https://avatars0.githubusercontent.com/u/7020962?v=4"},"labels":[{"name":"area/CLI","color":"006b75"},{"name":"difficulty/low","color":"207de5"},{"name":"status/blocked","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1531277936000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5157","number":5157,"title":"Release 0.12","body":"freeze\n changelog\n ascii art\n pypi push","comments":7,"createdAt":"2018-02-13T15:25:49Z","updatedAt":"2018-07-11T02:58:56Z","closedAt":null,"state":"open","user":{"login":"Mixih","avatarUrl":"https://avatars2.githubusercontent.com/u/5818750?v=4"},"owner":{"login":"Mixih","avatarUrl":"https://avatars2.githubusercontent.com/u/5818750?v=4"},"milestone":{"title":"0.12","createdAt":"2017-04-08T16:02:24Z","dueOn":null,"state":"open","htmlUrl":"https://github.com/coala/coala/milestone/16","description":""},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1518557713000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5159","number":5159,"title":"README.md: The graph is not showing anything for closed PRs and issues","body":"","comments":2,"createdAt":"2018-02-13T17:46:41Z","updatedAt":"2018-02-13T21:35:13Z","closedAt":"2018-02-13T21:34:51Z","state":"closed","user":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"owner":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"area/upstream","color":"5319e7"},{"name":"difficulty/low","color":"207de5"},{"name":"importance/high","color":"eb6420"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1519322464000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5162","number":5162,"title":"Add `tags` for VIM's tagfiles in .gitignore","body":"vim users need to create tag files to jump around the codebase. This file must not be committed. Hence, must be included in .gitignore file.","comments":3,"createdAt":"2018-02-14T15:20:52Z","updatedAt":"2018-02-22T18:01:04Z","closedAt":"2018-02-22T18:01:04Z","state":"closed","user":{"login":"nityeshaga","avatarUrl":"https://avatars1.githubusercontent.com/u/24698858?v=4"},"owner":{"login":"nityeshaga","avatarUrl":"https://avatars1.githubusercontent.com/u/24698858?v=4"},"assignee":{"login":"nityeshaga","avatarUrl":"https://avatars1.githubusercontent.com/u/24698858?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1519426967000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5165","number":5165,"title":"Linter_Bears_Advanced.rst: Typo Error","body":"On the line number 20\n\"value=2\" should be \"value2\"","comments":4,"createdAt":"2018-02-15T03:25:04Z","updatedAt":"2018-02-23T23:02:47Z","closedAt":"2018-02-23T23:02:47Z","state":"closed","user":{"login":"jackthepirate6","avatarUrl":"https://avatars2.githubusercontent.com/u/25016228?v=4"},"owner":{"login":"jackthepirate6","avatarUrl":"https://avatars2.githubusercontent.com/u/25016228?v=4"},"assignee":{"login":"rajvaibhavdubey","avatarUrl":"https://avatars2.githubusercontent.com/u/33062425?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1522433249000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5166","number":5166,"title":"coala running with -A tag not providing any options to select from","body":"command ran: coala --bears=PEP8Bear --files=peptest.py -A\nfile: any file incomplient with PEP8 (not necessary)\ncoala doesn't give me any options to choose from and keeps on providing the same list of available actions with no numbers endlessly\n[    ] Do (N)othing\n[    ] (S)how patch\n[    ] (A)pply patch\n[    ] Add (I)gnore comment\n[    ] (O)pen file\n[    ] Print Aspec(T) Information\n[    ] Print (D)ebug message\n[    ] Print (M)ore info\n[    ] Enter number (Ctrl-D to exit): \n[    ] Do (N)othing\n[    ] (S)how patch\n[    ] (A)pply patch\n[    ] Add (I)gnore comment\n[    ] (O)pen file\n[    ] Print Aspec(T) Information\n[    ] Print (D)ebug message\n[    ] Print (M)ore info\n[    ] Enter number (Ctrl-D to exit): \n[    ] Do (N)othing\n[    ] (S)how patch\n[    ] (A)pply patch\n[    ] Add (I)gnore comment\n[    ] (O)pen file\n[    ] Print Aspec(T) Information\n[    ] Print (D)ebug message\n[    ] Print (M)ore info\n[    ] Enter number (Ctrl-D to exit): \n[    ] Do (N)othing\n[    ] (S)how patch\n[    ] (A)pply patch\n[    ] Add (I)gnore comment\n[    ] (O)pen file\n[    ] Print Aspec(T) Information\n[    ] Print (D)ebug message\n[    ] Print (M)ore info\n[    ] Enter number (Ctrl-D to exit): \n[    ] Do (N)othing\n[    ] (S)how patch\n[    ] (A)pply patch\n[    ] Add (I)gnore comment\n[    ] (O)pen file\n[    ] Print Aspec(T) Information\n[    ] Print (D)ebug message\n[    ] Print (M)ore info\n[    ] Enter number (Ctrl-D to exit): \n[    ] Do (N)othing\n[    ] (S)how patch\n[    ] (A)pply patch\n[    ] Add (I)gnore comment\n[    ] (O)pen file\n[    ] Print Aspec(T) Information\n[    ] Print (D)ebug message\n[    ] Print (M)ore info\n[    ] Enter number (Ctrl-D to exit): 2\n[    ] Do (N)othing\n[    ] (S)how patch\n[    ] (A)pply patch\n[    ] Add (I)gnore comment\n[    ] (O)pen file\n[    ] Print Aspec(T) Information\n[    ] Print (D)ebug message\n[    ] Print (M)ore info\n[    ] Enter number (Ctrl-D to exit): \n[    ] Do (N)othing","comments":7,"createdAt":"2018-02-15T04:51:52Z","updatedAt":"2018-03-30T18:07:29Z","closedAt":null,"state":"open","user":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4"},"owner":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4"},"assignee":{"login":"Naveenaidu","avatarUrl":"https://avatars1.githubusercontent.com/u/30195193?v=4"},"labels":[{"name":"area/actions","color":"207de5"},{"name":"difficulty/low","color":"207de5"},{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1519132708000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5167","number":5167,"title":"Unexpected behaviour on selecting the option 4. Show Applied (P)atches","body":"peptest.py\n[   2] import·sys,·math\n**** PEP8Bear [Section: cli | Severity: NORMAL] ****\n!    ! The code does not comply to PEP8.\n[----] /Users/ishansrivastava/Desktop/peptest.py\n[++++] /Users/ishansrivastava/Desktop/peptest.py\n[   2] import sys, math\n[   2] import sys\n[   3] import math\n[    ] *0. Do (N)othing\n[    ]  1. (O)pen file\n[    ]  2. (A)pply patch\n[    ]  3. Add (I)gnore comment\n[    ]  4. Show Applied (P)atches\n[    ]  5. (G)enerate patches\n[    ] Enter number (Ctrl-D to exit): 4\n[    ] All actions have been applied\n[    ] *0. Do (N)othing\n[    ]  1. (O)pen file\n[    ]  2. (A)pply patch\n[    ]  3. Add (I)gnore comment\n[    ]  4. Show Applied (P)atches\n[    ]  5. (G)enerate patches\n[    ] Enter number (Ctrl-D to exit): 4\n\n**** PEP8Bear [Section: cli] ****\n**** Action Applied: ShowAppliedPatchesAction ****\n\n!    ! [Severity: NORMAL]\n[----] /Users/ishansrivastava/Desktop/peptest.py\n[++++] /Users/ishansrivastava/Desktop/peptest.py\n[   2] import sys, math\n[   2] import sys\n[   3] import math\n\n**************\n\n[    ] All actions have been applied\n[    ] *0. Do (N)othing\n[    ]  1. (O)pen file\n[    ]  2. (A)pply patch\n[    ]  3. Add (I)gnore comment\n[    ]  4. Show Applied (P)atches\n[    ]  5. (G)enerate patches\n[    ] Enter number (Ctrl-D to exit): \n\n1\nI had to hit 4, two times to actually see the applied patch (for me to see the patch for the first time)\n2\nAfter hitting 4s, why am I getting [ ] All actions have been applied when they are actually not applied and I am just viewing the suggested patches\n3\nIs there even need for such option when I can see the available patch already with line numbers in the first few lines of coala output\n4\nIf I select 5 Generate Patches and then select SpaceConsistencyBear, and then keep hitting 4, it shows me the same patch (each time I hit 4) TWICE!\n[WARNING][10:34:30] acquire_settings: section parameter is deprecated.\nPlease enter a value for the setting \"use_spaces\" (True if spaces are to be used instead of tabs.) needed by SpaceConsistencyBear for section \"cli\": \ntrue\nExecuting section cli...\n[    ] Patch generated successfully.\n[    ] *0. Do (N)othing\n[    ]  1. (O)pen file\n[    ]  2. (A)pply patch\n[    ]  3. Add (I)gnore comment\n[    ]  4. Show Applied (P)atches\n[    ]  5. (G)enerate patches\n[    ] Enter number (Ctrl-D to exit): 4\n\n**** PEP8Bear [Section: cli] ****\n**** Action Applied: ShowAppliedPatchesAction ****\n\n!    ! [Severity: NORMAL]\n[----] /Users/ishansrivastava/Desktop/peptest.py\n[++++] /Users/ishansrivastava/Desktop/peptest.py\n[   2] import sys, math\n[   2] import sys\n[   3] import math\n\n**************\n\n\n**** PEP8Bear [Section: cli] ****\n**** Action Applied: GeneratePatchesAction ****\n\n!    ! [Severity: NORMAL]\n[----] /Users/ishansrivastava/Desktop/peptest.py\n[++++] /Users/ishansrivastava/Desktop/peptest.py\n[   2] import sys, math\n[   2] import sys\n[   3] import math\n\n**************\n\n[    ] All actions have been applied\n[    ] *0. Do (N)othing\n[    ]  1. (O)pen file\n[    ]  2. (A)pply patch\n[    ]  3. Add (I)gnore comment\n[    ]  4. Show Applied (P)atches\n[    ]  5. (G)enerate patches\n[    ] Enter number (Ctrl-D to exit):","comments":5,"createdAt":"2018-02-15T05:05:53Z","updatedAt":"2018-02-20T13:18:28Z","closedAt":"2018-02-20T13:18:27Z","state":"closed","user":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4"},"owner":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4"},"labels":[{"name":"area/actions","color":"207de5"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1518699932000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5168","number":5168,"title":"ConfigurationGatheringTest.py add test when we are using some Local Bears and the files param is not specified","body":"","comments":1,"createdAt":"2018-02-15T11:34:40Z","updatedAt":"2018-02-15T13:05:32Z","closedAt":"2018-02-15T11:54:24Z","state":"closed","user":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4"},"owner":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4"},"labels":[{"name":"status/invalid","color":"000000"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1524314871000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5172","number":5172,"title":"Update the Getting started tutorial by replacing the deprecated `Default` section with `cli`","body":"The getting started with coala tutorial mentions the, now deprecated, Default section. Quite confusingly, it uses both cli (the correct name) and Default to refer to the same section of the .coafile at different places. This must be tripping a lot of new users.\nI think that it needs a fresh rewrite in those places.\nSince, this is the first entry point for new users, I feel that this should be done asap.\nRelated issue","comments":6,"createdAt":"2018-02-15T14:10:16Z","updatedAt":"2018-04-21T12:47:51Z","closedAt":"2018-04-21T12:47:51Z","state":"closed","user":{"login":"nityeshaga","avatarUrl":"https://avatars1.githubusercontent.com/u/24698858?v=4"},"owner":{"login":"nityeshaga","avatarUrl":"https://avatars1.githubusercontent.com/u/24698858?v=4"},"assignee":{"login":"nityeshaga","avatarUrl":"https://avatars1.githubusercontent.com/u/24698858?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/low","color":"207de5"},{"name":"importance/high","color":"eb6420"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1518877820000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5174","number":5174,"title":"Unable to run code analysis","body":"Overview Description\nRunning SpaceConsistencyBear on c program from the getting started with coala(Github) using the following command:\ncoala --files=main.c --bears=SpaceConsistencyBear --save\nSteps to Reproduce\n\nInstall python 3.4.4 on Windows 8.1\npip3 install coala-bears\npip3 install virtualenv\nCreate a simple program with the following code and save it as main.c\n\n#include <stdio.h> \n\nint main(void) {\n    printf(\"Welcome to coala. Keep following the tutorial, you are doing a great job so far!\\n\");\n\n    return 0;\n}\n\n\n\nrun virtualenv from [python34 instaled directory]\\Lib\\venv\\scripts\\nt\\activate.bat and go to the location where your main.c file is located.\nrun the command coala --files=main.c --bears=SpaceConsistencyBear --save\n\nActual Results\n←[31m[ERROR]←[0m[21:29:30] An unknown error occurred. This is a bug. We are sorr\ny for the inconvenience. Please contact the developers for assistance. During ex\necution of coala an exception was raised. This should never happen. When asked f\nor, the following information may help investigating:←[0m\n←[34m[INFO]←[0m[21:29:30] Exception was:\nTraceback (most recent call last):\n\n  File \"c:\\python34\\lib\\site-packages\\pkg_resources\\__init__.py\", line 2801, in\n_dep_map\n    return self.__dep_map\n\n  File \"c:\\python34\\lib\\site-packages\\pkg_resources\\__init__.py\", line 2658, in\n__getattr__\n    raise AttributeError(attr)\n\nAttributeError: _DistInfoDistribution__dep_map\n\n\nDuring handling of the above exception, another exception occurred:\n\n\nTraceback (most recent call last):\n\n  File \"c:\\python34\\lib\\site-packages\\coalib\\coala_main.py\", line 81, in run_coa\nla\n    arg_list=arg_list)\n\n  File \"c:\\python34\\lib\\site-packages\\coalib\\settings\\ConfigurationGathering.py\"\n, line 387, in gather_configuration\n    log_printer)\n\n  File \"c:\\python34\\lib\\site-packages\\coalib\\settings\\SectionFilling.py\", line 3\n1, in fill_settings\n    bear_dirs = section.bear_dirs()\n\n  File \"c:\\python34\\lib\\site-packages\\coalib\\settings\\Section.py\", line 116, in\nbear_dirs\n    for bear_dir in collect_registered_bears_dirs('coalabears')]\n\n  File \"c:\\python34\\lib\\site-packages\\coalib\\collecting\\Collectors.py\", line 307\n, in collect_registered_bears_dirs\n    registered_package = ep.load()\n\n  File \"c:\\python34\\lib\\site-packages\\pkg_resources\\__init__.py\", line 2354, in\nload\n    self.require(*args, **kwargs)\n\n  File \"c:\\python34\\lib\\site-packages\\pkg_resources\\__init__.py\", line 2371, in\nrequire\n    items = working_set.resolve(reqs, env, installer)\n\n  File \"c:\\python34\\lib\\site-packages\\pkg_resources\\__init__.py\", line 847, in r\nesolve\n    new_requirements = dist.requires(req.extras)[::-1]\n\n  File \"c:\\python34\\lib\\site-packages\\pkg_resources\\__init__.py\", line 2602, in\nrequires\n    dm = self._dep_map\n\n  File \"c:\\python34\\lib\\site-packages\\pkg_resources\\__init__.py\", line 2803, in\n_dep_map\n    self.__dep_map = self._compute_dependencies()\n\n  File \"c:\\python34\\lib\\site-packages\\pkg_resources\\__init__.py\", line 2836, in\n_compute_dependencies\n    common = frozenset(reqs_for_extra(None))\n\n  File \"c:\\python34\\lib\\site-packages\\pkg_resources\\__init__.py\", line 2833, in\nreqs_for_extra\n    if req.marker_fn(override={'extra':extra}):\n\n  File \"c:\\python34\\lib\\site-packages\\_markerlib\\markers.py\", line 113, in marke\nr_fn\n    return eval(compiled_marker, environment)\n\n  File \"<environment marker>\", line 1, in <module>\n\nNameError: name 'platform_system' is not defined←[0m\n\n\nExpected Results\nCoala should ask me to remove trailing space. From here\nAdditional Information:\nOperating System: Windows 8.1 64-bit\nPython Version: 3.4.4","comments":4,"createdAt":"2018-02-15T17:11:04Z","updatedAt":"2018-02-17T14:30:20Z","closedAt":"2018-02-17T14:13:40Z","state":"closed","user":{"login":"maliknaik16","avatarUrl":"https://avatars1.githubusercontent.com/u/6859756?v=4"},"owner":{"login":"maliknaik16","avatarUrl":"https://avatars1.githubusercontent.com/u/6859756?v=4"},"labels":[{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1523177318000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5176","number":5176,"title":"requirements.txt: Remove redundant version part of setuptools","body":"setuptools>=21.0.0 is equal to setuptools>=21.","comments":8,"createdAt":"2018-02-17T14:25:38Z","updatedAt":"2018-04-08T08:48:38Z","closedAt":null,"state":"open","user":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"owner":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"assignee":{"login":"himanshuc3","avatarUrl":"https://avatars3.githubusercontent.com/u/19166045?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"},{"name":"importance/low","color":"70E870"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1520784252000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5177","number":5177,"title":"Backport to 0.11: Raise required setuptools version","body":"Due to #5174 we need to backport that for the latest stable 0.11. We should raise the required version to our current spec setuptools>=21.","comments":2,"createdAt":"2018-02-17T14:26:18Z","updatedAt":"2018-03-11T16:04:12Z","closedAt":null,"state":"open","user":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"owner":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"labels":[{"name":"importance/high","color":"eb6420"},{"name":"needs backport","color":"b60205"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1519153120000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5185","number":5185,"title":"Add bear to support Mercurial version control system","body":"coala currently supports only git vcs. It would be good to include mercurial as well.","comments":3,"createdAt":"2018-02-18T20:52:30Z","updatedAt":"2018-02-20T18:58:40Z","closedAt":"2018-02-20T18:58:34Z","state":"closed","user":{"login":"kriti21","avatarUrl":"https://avatars3.githubusercontent.com/u/19872082?v=4"},"owner":{"login":"kriti21","avatarUrl":"https://avatars3.githubusercontent.com/u/19872082?v=4"},"labels":[{"name":"status/invalid","color":"000000"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1534079847000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5188","number":5188,"title":"persistent_hash: Missing support for collection types with not guaranteed iteration order","body":"Like dict and set. sorted can be used to sort the data beforehand.","comments":14,"createdAt":"2018-02-19T22:31:05Z","updatedAt":"2018-08-12T13:17:27Z","closedAt":"2018-08-12T13:17:27Z","state":"closed","user":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"owner":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"assignee":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4"},"milestone":{"title":"Nextgen-Core","createdAt":"2017-06-09T22:33:56Z","dueOn":null,"state":"open","htmlUrl":"https://github.com/coala/coala/milestone/18","description":""},"labels":[{"name":"area/core","color":"eb6420"},{"name":"difficulty/low","color":"207de5"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1520509060000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5190","number":5190,"title":"Show Applied Patches - name for the option seems misleading","body":"I don't think the name Show Applied Patches is appropriate and is misleading since it does not show the patches that are already applied, but the patches that would be applied in the future by the current inconsistency detected by coala.\nstatus/needs discussion","comments":18,"createdAt":"2018-02-20T13:16:38Z","updatedAt":"2018-03-08T11:37:40Z","closedAt":null,"state":"open","user":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4"},"owner":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"},{"name":"status/needs discussion","color":"d93f0b"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1520180563000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5191","number":5191,"title":"No need of option Show Applied Patches in case you can already see the applied patch in the first few lines of coala output","body":"reference comment: #5167 (comment)\nits not completely solved\npeptest.py\n[   2] import·sys,·math\n**** PEP8Bear [Section: cli | Severity: NORMAL] ****\n!    ! The code does not comply to PEP8.\n[----] /Users/ishansrivastava/Desktop/peptest.py\n[++++] /Users/ishansrivastava/Desktop/peptest.py\n[   2] import sys, math\n[   2] import sys\n[   3] import math\n[    ] *0. Do (N)othing\n[    ]  1. (O)pen file\n[    ]  2. (A)pply patch\n[    ]  3. Add (I)gnore comment\n[    ]  4. Show Applied (P)atches\n[    ]  5. (G)enerate patches","comments":31,"createdAt":"2018-02-20T13:16:44Z","updatedAt":"2018-03-04T16:22:43Z","closedAt":"2018-03-04T16:22:43Z","state":"closed","user":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4"},"owner":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4"},"assignee":{"login":"harshhx17","avatarUrl":"https://avatars2.githubusercontent.com/u/31805694?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"},{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1523090939000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5192","number":5192,"title":"After hitting option 4 Show Applied Patches, we get [ ] All actions have been applied which is misleading","body":"After hitting 4s, why am I getting [ ] All actions have been applied when they are actually not applied and I am just viewing the suggested patches\nreference comment: #5167 (comment)","comments":3,"createdAt":"2018-02-20T13:16:48Z","updatedAt":"2018-04-07T08:48:59Z","closedAt":"2018-04-07T08:48:59Z","state":"closed","user":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4"},"owner":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4"},"assignee":{"login":"Naveenaidu","avatarUrl":"https://avatars1.githubusercontent.com/u/30195193?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"},{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1522525369000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5193","number":5193,"title":"Unexpected behaviour on selecting the option 5. Generate Patches then option 4. Show Applied (P)atches ","body":"After i hit 4 and actually see the output of Show Applied Patches and then\nIf I select 5 Generate Patches and then select SpaceConsistencyBear, and then keep hitting 4, it shows me the same patch (each time I hit 4) TWICE!\n[WARNING][10:34:30] acquire_settings: section parameter is deprecated.\nPlease enter a value for the setting \"use_spaces\" (True if spaces are to be used instead of tabs.) needed by SpaceConsistencyBear for section \"cli\": \ntrue\nExecuting section cli...\n[    ] Patch generated successfully.\n[    ] *0. Do (N)othing\n[    ]  1. (O)pen file\n[    ]  2. (A)pply patch\n[    ]  3. Add (I)gnore comment\n[    ]  4. Show Applied (P)atches\n[    ]  5. (G)enerate patches\n[    ] Enter number (Ctrl-D to exit): 4\n\n**** PEP8Bear [Section: cli] ****\n**** Action Applied: ShowAppliedPatchesAction ****\n\n!    ! [Severity: NORMAL]\n[----] /Users/ishansrivastava/Desktop/peptest.py\n[++++] /Users/ishansrivastava/Desktop/peptest.py\n[   2] import sys, math\n[   2] import sys\n[   3] import math\n\n**************\n\n\n**** PEP8Bear [Section: cli] ****\n**** Action Applied: GeneratePatchesAction ****\n\n!    ! [Severity: NORMAL]\n[----] /Users/ishansrivastava/Desktop/peptest.py\n[++++] /Users/ishansrivastava/Desktop/peptest.py\n[   2] import sys, math\n[   2] import sys\n[   3] import math\n\n**************\n\n[    ] All actions have been applied\n[    ] *0. Do (N)othing\n[    ]  1. (O)pen file\n[    ]  2. (A)pply patch\n[    ]  3. Add (I)gnore comment\n[    ]  4. Show Applied (P)atches\n[    ]  5. (G)enerate patches\n[    ] Enter number (Ctrl-D to exit): \n\nfile used:\n# Import should be separated by end of line\nimport sys, math\n\n# Multiple statements in one line is not allowed\nfor i in range(10): print \"foo\"; print \"bar\"\n\n# comparison to None should be 'if cond is None\nif object == None: pass\n\nAfter generating any patch for any bear using action 5 (doesn't matter how many times and how many bears I use) It always shows me 2 same patches for PEP8Bear. BTW not sure what is Generate Patches supposed to do over here. If the generated patches are not supposed to be shown in Show Applied Patches then we only have to fix the patch being displayed twice.","comments":3,"createdAt":"2018-02-20T13:16:54Z","updatedAt":"2018-03-31T19:42:49Z","closedAt":null,"state":"open","user":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4"},"owner":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4"},"assignee":{"login":"kwsohn","avatarUrl":"https://avatars0.githubusercontent.com/u/17075274?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"},{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1522449989000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5194","number":5194,"title":"Unexpected behaviour on selecting the option 4. Show Applied (P)atches ","body":"peptest.py\n[   2] import·sys,·math\n**** PEP8Bear [Section: cli | Severity: NORMAL] ****\n!    ! The code does not comply to PEP8.\n[----] /Users/ishansrivastava/Desktop/peptest.py\n[++++] /Users/ishansrivastava/Desktop/peptest.py\n[   2] import sys, math\n[   2] import sys\n[   3] import math\n[    ] *0. Do (N)othing\n[    ]  1. (O)pen file\n[    ]  2. (A)pply patch\n[    ]  3. Add (I)gnore comment\n[    ]  4. Show Applied (P)atches\n[    ]  5. (G)enerate patches\n[    ] Enter number (Ctrl-D to exit): 4\n[    ] All actions have been applied\n[    ] *0. Do (N)othing\n[    ]  1. (O)pen file\n[    ]  2. (A)pply patch\n[    ]  3. Add (I)gnore comment\n[    ]  4. Show Applied (P)atches\n[    ]  5. (G)enerate patches\n[    ] Enter number (Ctrl-D to exit): 4\n\n**** PEP8Bear [Section: cli] ****\n**** Action Applied: ShowAppliedPatchesAction ****\n\n!    ! [Severity: NORMAL]\n[----] /Users/ishansrivastava/Desktop/peptest.py\n[++++] /Users/ishansrivastava/Desktop/peptest.py\n[   2] import sys, math\n[   2] import sys\n[   3] import math\n\n**************\n\n[    ] All actions have been applied\n[    ] *0. Do (N)othing\n[    ]  1. (O)pen file\n[    ]  2. (A)pply patch\n[    ]  3. Add (I)gnore comment\n[    ]  4. Show Applied (P)atches\n[    ]  5. (G)enerate patches\n[    ] Enter number (Ctrl-D to exit): \n\nWhy do I need to hit 4, two times to actually see the applied patch (for me to see the patch for the first time)","comments":15,"createdAt":"2018-02-20T13:17:05Z","updatedAt":"2018-03-30T22:46:29Z","closedAt":null,"state":"open","user":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4"},"owner":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4"},"assignee":{"login":"Crphang","avatarUrl":"https://avatars3.githubusercontent.com/u/4986717?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"},{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1522420770000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5195","number":5195,"title":"Writing_Good_Commits.rst: Example 3 is misleading.","body":"Example 3 uses 'Fixes' instead of 'Closes' when fixing a typo. However, the common practice is to use 'Fixes' only when fixing a bug.\n(ref: https://github.com/coala/coala/blob/master/docs/Developers/Writing_Good_Commits.rst)","comments":7,"createdAt":"2018-02-20T18:54:12Z","updatedAt":"2018-03-30T14:39:30Z","closedAt":"2018-03-30T14:39:30Z","state":"closed","user":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4"},"owner":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4"},"assignee":{"login":"Anonymous26","avatarUrl":"https://avatars3.githubusercontent.com/u/20697219?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"importance/high","color":"eb6420"},{"name":"status/stale","color":"fbca04"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1523808613000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5201","number":5201,"title":"Fix typo in the docstring of try_to_apply_section()","body":"Line 705 says choose_action instead of chosen_action. Need to change it.","comments":10,"createdAt":"2018-02-23T16:42:12Z","updatedAt":"2018-04-15T16:10:13Z","closedAt":"2018-04-15T16:10:13Z","state":"closed","user":{"login":"nityeshaga","avatarUrl":"https://avatars1.githubusercontent.com/u/24698858?v=4"},"owner":{"login":"nityeshaga","avatarUrl":"https://avatars1.githubusercontent.com/u/24698858?v=4"},"assignee":{"login":"raduklb","avatarUrl":"https://avatars2.githubusercontent.com/u/36372694?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1535811028000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5202","number":5202,"title":"In `ask_for_action_and_apply()`, if `apply_single` is non-False, function should return when match is found","body":"In the function ask_for_action_and_apply() in ConsoleInteraction.py, if the apply_single parameter is non-False, then the for loop inside it iterates through the entire metadata_list before returning False.\nIMHO we should include a break statement inside the if block (which is in the for loop) such that the function may return after a match is found because there is no need to go through the remaining actions in metadata_list.","comments":15,"createdAt":"2018-02-23T18:17:22Z","updatedAt":"2018-09-01T14:10:28Z","closedAt":null,"state":"open","user":{"login":"nityeshaga","avatarUrl":"https://avatars1.githubusercontent.com/u/24698858?v=4"},"owner":{"login":"nityeshaga","avatarUrl":"https://avatars1.githubusercontent.com/u/24698858?v=4"},"assignee":{"login":"rak-shit","avatarUrl":"https://avatars3.githubusercontent.com/u/30564496?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"type/performance","color":"fef2c0"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1522728693000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5205","number":5205,"title":"Redefinition of the same function `format_lines()` in 3 files","body":"The function format_lines() is defined in the exact same way in ShowAppliedPatchesAction.py, ConsoleInteraction.py and coala_main.py. (in ShowAppliedPatchesAction.py version, there is a very minor difference- the amount of padding is 4 in it whereas others contain 5, but IMHO it is inconsequential).\nWe should keep only one copy, I suggest the coala_main() one because:\n\nit is \"coala_main\"\nit contains a some comment- # type: (object, object, object) -> object\n\nWe can then import the function from coala_main() in the other 2 files. This reduces redundancy of code.","comments":10,"createdAt":"2018-02-25T11:53:53Z","updatedAt":"2018-04-03T04:11:33Z","closedAt":null,"state":"open","user":{"login":"nityeshaga","avatarUrl":"https://avatars1.githubusercontent.com/u/24698858?v=4"},"owner":{"login":"nityeshaga","avatarUrl":"https://avatars1.githubusercontent.com/u/24698858?v=4"},"assignee":{"login":"nityeshaga","avatarUrl":"https://avatars1.githubusercontent.com/u/24698858?v=4"},"labels":[{"name":"area/CLI","color":"006b75"},{"name":"difficulty/low","color":"207de5"},{"name":"type/codestyle","color":"d4c5f9"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1520794451000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5206","number":5206,"title":"Tests fail to reach 100% code coverage locally, though CI build passes.","body":"Here are the local logs: https://gist.github.com/nvzard/ef99b21d57a429b08760347f46edf12e\ncoalib/misc/CachingUtilities.py       76      1     20      1    98%   171, 168->171","comments":5,"createdAt":"2018-02-26T16:39:08Z","updatedAt":"2018-03-11T18:54:11Z","closedAt":null,"state":"open","user":{"login":"nvzard","avatarUrl":"https://avatars0.githubusercontent.com/u/19310512?v=4"},"owner":{"login":"nvzard","avatarUrl":"https://avatars0.githubusercontent.com/u/19310512?v=4"},"assignee":{"login":"harshhx17","avatarUrl":"https://avatars2.githubusercontent.com/u/31805694?v=4"},"labels":[{"name":"area/tests","color":"bfd4f2"},{"name":"difficulty/low","color":"207de5"},{"name":"importance/high","color":"eb6420"},{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1520663322000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5207","number":5207,"title":"appveyor.yml: Remove everything related to LLVM","body":"4febc53 removed libclang-py3 from the requirements, so any remaining artifacts in appveyor.yml shall be removed too.","comments":1,"createdAt":"2018-02-26T16:55:00Z","updatedAt":"2018-03-10T06:28:42Z","closedAt":"2018-03-10T06:28:42Z","state":"closed","user":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"owner":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"assignee":{"login":"harshhx17","avatarUrl":"https://avatars2.githubusercontent.com/u/31805694?v=4"},"labels":[{"name":"area/CI","color":"eb6420"},{"name":"difficulty/low","color":"207de5"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1522433249000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5211","number":5211,"title":"OpenEditorAction: Add new value to specify a custom executable name","body":"Recently the discussion happened (#5160), that some editor names have a too generic name (in the mentioned PR it was code, which stands for VSCode).\nShall a new value be allowed that allows to override the behaviour that the key itself is used as an executable name? Such as executable or executable_name?","comments":3,"createdAt":"2018-02-26T20:56:24Z","updatedAt":"2018-03-30T18:07:29Z","closedAt":null,"state":"open","user":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"owner":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"labels":[{"name":"status/needs discussion","color":"d93f0b"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1520373328000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5212","number":5212,"title":"README.rst: docs build status is red","body":"The badge shows that builds are failing, but following the link, the docs seem to be okay.","comments":1,"createdAt":"2018-02-26T23:37:40Z","updatedAt":"2018-03-06T21:55:28Z","closedAt":"2018-03-06T21:42:40Z","state":"closed","user":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"owner":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"},{"name":"importance/medium","color":"fbca04"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1519823877000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5214","number":5214,"title":"The check at line 680 in `choose_action()` is inadequate ","body":"In function choose_action() in file ConsoleInteraction.py the condition\n\nif actions_desc_len == len(actions_desc):\n\nat line 680 informs the user of a wrong choice only if it is the only character input by him/her. If a wrong choice is entered along with a few valid ones, it fails to inform the user about it.\nFor example:\n[    ] *0. Do (N)othing\n[    ]  1. (O)pen file\n[    ]  2. (A)pply patch\n[    ]  3. Print (M)ore info\n[    ]  4. Add (I)gnore comment\n[    ]  5. Show Applied (P)atches\n[    ]  6. (G)enerate patches\n[    ] Enter number (Ctrl-D to exit):\n\nIf the user presses MXG (X being the invalid choice), coala fails to inform the user of a wrong character entered. It just silently executes the actions related to M and G.\nInstead if the user presses just X, coala complains saying Please enter a valid letter.","comments":3,"createdAt":"2018-02-27T10:42:51Z","updatedAt":"2018-02-28T13:17:57Z","closedAt":"2018-02-28T13:17:49Z","state":"closed","user":{"login":"nityeshaga","avatarUrl":"https://avatars1.githubusercontent.com/u/24698858?v=4"},"owner":{"login":"nityeshaga","avatarUrl":"https://avatars1.githubusercontent.com/u/24698858?v=4"},"assignee":{"login":"nityeshaga","avatarUrl":"https://avatars1.githubusercontent.com/u/24698858?v=4"},"labels":[{"name":"status/invalid","color":"000000"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1523230666000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5218","number":5218,"title":"CircleCI: Update to 2.0 syntax","body":"Dear customer,\nWe wanted to let you know that we are planning on sunsetting CircleCI 1.0 on August 31st, 2018. Our goal as a company for 2018 is to invest in delivering more features and better performance on CircleCI 2.0, which unlocks faster builds and greater control. For more information, you can read our blog post on sunsetting CircleCI 1.0.\n...\nConfig.yml translator. Note: This will generate a baseline config.yml file that you can adjust to fit your needs.\n1.0 to 2.0 migration documentation.\nLanguage-specific 2.0 tutorials.","comments":3,"createdAt":"2018-02-28T13:10:56Z","updatedAt":"2018-04-08T23:37:46Z","closedAt":"2018-04-08T23:37:46Z","state":"closed","user":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"owner":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"assignee":{"login":"alphadose","avatarUrl":"https://avatars1.githubusercontent.com/u/25170258?v=4"},"labels":[{"name":"area/CI","color":"eb6420"},{"name":"difficulty/medium","color":"0052cc"},{"name":"importance/critical","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1523081651000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5219","number":5219,"title":"The error message in ConsoleInteraction.py is not adequate.","body":"The error message that get's printed when an invalid character is entered is as :- Please enter a valid letter. But this is not completely true as the user can also enter numbers to select Actions.\nThe error message must be changed to Please enter a valid letter or number.\nFor example:-\nThe output when i enter 10 as an option.\n[    ] *0. Do (N)othing\n[    ]  1. (O)pen file\n[    ]  2. (A)pply patch\n[    ]  3. Print (M)ore info\n[    ]  4. Add (I)gnore comment\n[    ]  5. Show Applied (P)atches\n[    ]  6. (G)enerate patches\n[    ] Enter number (Ctrl-D to exit):\n[    ] Please enter a valid letter.","comments":19,"createdAt":"2018-02-28T14:49:12Z","updatedAt":"2018-04-07T06:14:11Z","closedAt":"2018-04-07T06:14:11Z","state":"closed","user":{"login":"Naveenaidu","avatarUrl":"https://avatars1.githubusercontent.com/u/30195193?v=4"},"owner":{"login":"Naveenaidu","avatarUrl":"https://avatars1.githubusercontent.com/u/30195193?v=4"},"assignee":{"login":"sanjeethboddi","avatarUrl":"https://avatars1.githubusercontent.com/u/22007564?v=4"},"labels":[{"name":"area/CLI","color":"006b75"},{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1529655345000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5223","number":5223,"title":"Fix typo in docstring of ResultAction.py","body":"Line 81 says :return\nIt needs to be changed to :return:","comments":16,"createdAt":"2018-03-01T10:32:11Z","updatedAt":"2018-06-22T08:15:45Z","closedAt":"2018-06-22T08:15:45Z","state":"closed","user":{"login":"harshhx17","avatarUrl":"https://avatars2.githubusercontent.com/u/31805694?v=4"},"owner":{"login":"harshhx17","avatarUrl":"https://avatars2.githubusercontent.com/u/31805694?v=4"},"assignee":{"login":"ChetanKhanna","avatarUrl":"https://avatars0.githubusercontent.com/u/31681374?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1531983504000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5225","number":5225,"title":"Enhance the error message when user enters an invalid choice","body":"As discussed in #5214, I propose to do the following changes to the error message:\n\nuse ! ! instead of [ ] for the error message\nmake the message of a different colour\nmaybe we can show the erroneous character, that was entered, in the error message. So, it might look something like this:\n\n!  ! (X) is not a valid letter.\n\nThis should make the error message more conspicuous and helpful.","comments":6,"createdAt":"2018-03-01T16:49:59Z","updatedAt":"2018-07-19T06:58:24Z","closedAt":"2018-07-19T06:58:24Z","state":"closed","user":{"login":"nityeshaga","avatarUrl":"https://avatars1.githubusercontent.com/u/24698858?v=4"},"owner":{"login":"nityeshaga","avatarUrl":"https://avatars1.githubusercontent.com/u/24698858?v=4"},"assignee":{"login":"kwsohn","avatarUrl":"https://avatars0.githubusercontent.com/u/17075274?v=4"},"labels":[{"name":"area/CLI","color":"006b75"},{"name":"difficulty/low","color":"207de5"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1520177687000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5230","number":5230,"title":"CachinUtilities.py: Use cPickle instead of pickle","body":"In the file coalib/misc/CachingUtilities.py replace pickle with cPickle which can lead to a minor performance gain since cPickle is about 1000 times faster than pickle. We only using pickle.dump() and pickle.load() so it shouldn't have any compatibility issues since both the modules have identical functions for dumping and loading.\nI'm opening this issue with reference to the optimize caching GSoC project. Even though it is a minor change it is a performance improvement nevertheless.\nIMO it should remain blocked since its related to a GSoC project.\nstatus/blocked difficulty/low type/performance","comments":3,"createdAt":"2018-03-02T13:13:33Z","updatedAt":"2018-03-04T15:34:47Z","closedAt":"2018-03-04T15:34:47Z","state":"closed","user":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4"},"owner":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1532527871000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5232","number":5232,"title":"Is ShowAppliedPatchAction really neccessary?","body":"When the DIFF_EXCERPT_MAX_SIZE is greater than 4, then both Show Patch and Show Applied Patches is shown. The output shown by both is almost the same.\nscibase-ieee-V3.py\n[   1] ##·This·script·combines·both·extact_article_from·issue.py·and·Extract_Issue_Links.py\n**** PEP8Bear [Section: cli | Severity: NORMAL] ****\n!    ! The code does not comply to PEP8.\n!    ! +1 -1 in /home/theprophet/test-coala/scibase-ieee-V3.py\n[    ] *0. Do (N)othing\n[    ]  1. (O)pen file\n[    ]  2. (A)pply patch\n[    ]  3. (S)how patch\n[    ]  4. Add (I)gnore comment\n[    ]  5. Show Applied (P)atches\n[    ]  6. (G)enerate patches\n[    ] Enter number (Ctrl-D to exit): 3\n\n--> The sample output when (S)how Patch  is selected\n[----] /home/theprophet/test-coala/scibase-ieee-V3.py\n[++++] /home/theprophet/test-coala/scibase-ieee-V3.py\n[   1] ## This script combines both extact_article_from issue.py and Extract_Issue_Links.py\n[   1] # This script combines both extact_article_from issue.py and Extract_Issue_Links.py\n[    ] Displayed patch successfully.\n\n\n--> The sample output when Show Applied (P)atches is selected\n**** PEP8Bear [Section: cli] ****\n**** Action Applied: ShowPatchAction ****\n\n!    ! [Severity: NORMAL]\n[----] /home/theprophet/test-coala/scibase-ieee-V3.py\n[++++] /home/theprophet/test-coala/scibase-ieee-V3.py\n[   1] ## This script combines both extact_article_from issue.py and Extract_Issue_Links.py\n[   1] # This script combines both extact_article_from issue.py and Extract_Issue_Links.py\n\n**************\n\n\nIf I am not wrong  ShowAppliedPatchesAction()  loops through all the applied actions and then actually calls  ShowPatchAction() and then adds extra bit of information to the output of ShowPatchAction(). Is a seperate action for this work  really necessary? Why not incorporate the action done by ShowAppliedPatchesAction() into the ShowPatchAction(). I think the Show Applied Patches is a redundant option.\nStatus:- Needs Discussion.","comments":10,"createdAt":"2018-03-03T16:44:20Z","updatedAt":"2018-07-25T14:11:11Z","closedAt":null,"state":"open","user":{"login":"Naveenaidu","avatarUrl":"https://avatars1.githubusercontent.com/u/30195193?v=4"},"owner":{"login":"Naveenaidu","avatarUrl":"https://avatars1.githubusercontent.com/u/30195193?v=4"},"assignee":{"login":"Naveenaidu","avatarUrl":"https://avatars1.githubusercontent.com/u/30195193?v=4"},"labels":[{"name":"area/actions","color":"207de5"},{"name":"difficulty/medium","color":"0052cc"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1520783675000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5233","number":5233,"title":"Remove unnecessary option when  `DIFF_EXCERPT_MAX_SIZE` is greater than 4","body":"When the DIFF_EXCERPT_MAX_SIZE is greater than 4, then both Show Patch and Show Applied Patches is shown.I think one of the option needs to be removed. Since both of them show the same output. Which option needs to be removed is what needs to be discussed here?\nThe sample output:-\nscibase-ieee-V3.py\n[   1] ##·This·script·combines·both·extact_article_from·issue.py·and·Extract_Issue_Links.py\n**** PEP8Bear [Section: cli | Severity: NORMAL] ****\n!    ! The code does not comply to PEP8.\n!    ! +1 -1 in /home/theprophet/test-coala/scibase-ieee-V3.py\n[    ] *0. Do (N)othing\n[    ]  1. (O)pen file\n[    ]  2. (A)pply patch\n[    ]  3. (S)how patch\n[    ]  4. Add (I)gnore comment\n[    ]  5. Show Applied (P)atches\n[    ]  6. (G)enerate patches\n[    ] Enter number (Ctrl-D to exit): 3\n\nStatus:- Needs Discussion.","comments":15,"createdAt":"2018-03-03T16:44:27Z","updatedAt":"2018-03-11T15:54:35Z","closedAt":null,"state":"open","user":{"login":"Naveenaidu","avatarUrl":"https://avatars1.githubusercontent.com/u/30195193?v=4"},"owner":{"login":"Naveenaidu","avatarUrl":"https://avatars1.githubusercontent.com/u/30195193?v=4"},"assignee":{"login":"Naveenaidu","avatarUrl":"https://avatars1.githubusercontent.com/u/30195193?v=4"},"labels":[{"name":"difficulty/medium","color":"0052cc"},{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1520666705000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5236","number":5236,"title":"Typo under Writing_Linter_Bears","body":"There is one typo in Running and Testing our Bear section.  Follow this link --> Writing_Linter_Bears.html\n$ coala --bear-dirs=. --bears=PythonTutorialBear \\\n> -S pylint_rcfile=my_rcfile --files=sample.py\n\nChange PythonTutorialBear to PylintTutorialBear.\n\nMigrated from coala/coala-bears#2232","comments":0,"createdAt":"2018-03-04T14:51:44Z","updatedAt":"2018-03-10T07:25:05Z","closedAt":"2018-03-10T07:25:05Z","state":"closed","user":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"owner":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"assignee":{"login":"Pradhvan","avatarUrl":"https://avatars3.githubusercontent.com/u/13925830?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1520187399000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5238","number":5238,"title":"ShowAppliedPatchesAction not working correctly, giving the same results as ShowPatchAction","body":"references: #5231 (comment)\n#5191\n#5190","comments":4,"createdAt":"2018-03-04T16:24:19Z","updatedAt":"2018-03-04T18:16:39Z","closedAt":"2018-03-04T16:47:54Z","state":"closed","user":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4"},"owner":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4"},"labels":[{"name":"status/duplicate","color":"000000"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1523178663000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5239","number":5239,"title":"Vi is not added to the list of editors","body":"Coala does not recognise vi as an editor, although it does recognise vim and nvim.\nVi needs to be added to the list of editors in OpenEditorAction.py\nThis is what happens when you try to open a file with vi:\nPlease enter a value for the parameter 'editor' (The editor to open the file with.): vi\n\nchoose vi editor\n\nThe editor \"vi\" is unknown to coala. Files won't be opened at the correct positions and other quirks might occur. Consider opening an issue at https://github.com/coala/coala/issues so we can add support for this editor. Supported editors are: atom, emacs, emacsclient, geany, gedit, gvim, kate, nano, nvim, subl, vim, xed","comments":11,"createdAt":"2018-03-04T19:51:38Z","updatedAt":"2018-04-08T09:11:03Z","closedAt":null,"state":"open","user":{"login":"karansingh1559","avatarUrl":"https://avatars0.githubusercontent.com/u/24516531?v=4"},"owner":{"login":"karansingh1559","avatarUrl":"https://avatars0.githubusercontent.com/u/24516531?v=4"},"assignee":{"login":"karansingh1559","avatarUrl":"https://avatars0.githubusercontent.com/u/24516531?v=4"},"labels":[{"name":"area/actions","color":"207de5"},{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1520789937000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5241","number":5241,"title":"No need for SpaceConsistencyBear to run if PEP8Bear is also passed into the bears argument","body":"PEP8Bear also takes into consideration of Trailing Whitespaces just as SpaceConsistencyBear does. So it automatically fixes the patch. And because of that when SpaceConsistencyBear starts running from the process queue it does show that there are errors, but shows no option for the user to Apply a Patch since that patch was already applied by the PEP8Bear. This might create confusion among the users.\nAnd IMO fixing this might also increase the performance of coala .\nThe Sample outputs  when both SpaceConsistencyBear and PEP8Bear are used:-\ntest.py\n[   3] def·test(a1,b1=\"\",c1=\"\",a2):·\n**** PEP8Bear [Section: cli | Severity: NORMAL] ****\n!    ! The code does not comply to PEP8.\n[----] /home/theprophet/test-coala/test.py\n[++++] /home/theprophet/test-coala/test.py\n[   3] def test(a1,b1=\"\",c1=\"\",a2): \n[   3] def test(a1, b1=\"\", c1=\"\", a2):\n[    ] *0. Do (N)othing\n[    ]  1. (O)pen file\n[    ]  2. (A)pply patch\n[    ]  3. Add (I)gnore comment\n[    ]  4. Show Applied (P)atches\n[    ]  5. (G)enerate patches\n[    ] Enter number (Ctrl-D to exit): 2\n[    ] Patch applied successfully.\n[    ] *0. Do (N)othing\n[    ]  1. (O)pen file\n[    ]  2. Add (I)gnore comment\n[    ] Enter number (Ctrl-D to exit): 0\n\ntest.py\n[   3] def·test(a1,b1=\"\",c1=\"\",a2):·\n**** SpaceConsistencyBear [Section: cli | Severity: NORMAL] ****\n!    ! Line contains following spacing inconsistencies:\n!    ! - Trailing whitespaces.\n[    ] *0. Do (N)othing\n[    ]  1. (O)pen file\n[    ]  2. Print (M)ore info\n[    ]  3. Add (I)gnore comment\n[    ] Enter number (Ctrl-D to exit): 0\n\nThe Trailing whitespaces was already fixed by the PEP8Bear, but this issue comes up again in SpaceConsistencyBear again but now with no options to apply,since it was already fixed. IMO there is no need for the SpaceConsistencyBear to run here. It simply slows down the coala and creates confusion.\nThe output when the file runs only with SpaceConsistencyBear\ntest.py\n[   3] def·test(a1,·b1=\"\",·c1=\"\",·a2):·\n**** SpaceConsistencyBear [Section: cli | Severity: NORMAL] ****\n!    ! Line contains following spacing inconsistencies:\n!    ! - Trailing whitespaces.\n[----] /home/theprophet/test-coala/test.py\n[++++] /home/theprophet/test-coala/test.py\n[   3] def test(a1, b1=\"\", c1=\"\", a2): \n[   3] def test(a1, b1=\"\", c1=\"\", a2):\n[    ] *0. Do (N)othing\n[    ]  1. (O)pen file\n[    ]  2. (A)pply patch\n[    ]  3. Print (M)ore info\n[    ]  4. Add (I)gnore comment\n[    ]  5. Show Applied (P)atches\n[    ]  6. (G)enerate patches\n[    ] Enter number (Ctrl-D to exit): 2\n[    ] Patch applied successfully.\n[    ] *0. Do (N)othing\n[    ]  1. (O)pen file\n[    ]  2. Print (M)ore info\n[    ]  3. Add (I)gnore comment\n[    ] Enter number (Ctrl-D to exit): 0\n\n\nstatus\\needs discussion\n@Makman2  Need your opinion.","comments":6,"createdAt":"2018-03-07T13:15:25Z","updatedAt":"2018-03-11T17:38:57Z","closedAt":"2018-03-11T17:38:57Z","state":"closed","user":{"login":"Naveenaidu","avatarUrl":"https://avatars1.githubusercontent.com/u/30195193?v=4"},"owner":{"login":"Naveenaidu","avatarUrl":"https://avatars1.githubusercontent.com/u/30195193?v=4"},"labels":[{"name":"status/wontfix/not happening","color":"000000"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1520786669000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5242","number":5242,"title":"Undesirable output when Vulture Bear is used","body":"When i use VultureBear along with any other bear the output we get is as:-\ntest.py\n[   3] def·test(a1,b1=\"\",c1=\"\",a2):·\n**** PEP8Bear [Section: cli | Severity: NORMAL] ****\n!    ! The code does not comply to PEP8.\n[----] /home/theprophet/test-coala/test.py\n[++++] /home/theprophet/test-coala/test.py\n[   3] def test(a1,b1=\"\",c1=\"\",a2): \n[   3] def test(a1, b1=\"\", c1=\"\", a2):\n[    ] *0. Do (N)othing\n[    ]  1. (O)pen file\n[    ]  2. (A)pply patch\n[    ]  3. Add (I)gnore comment\n[    ]  4. Show Applied (P)atches\n[    ]  5. (G)enerate patches\n[    ] Enter number (Ctrl-D to exit): test.py:11: expected an indented block at \"'''\n    print(d)\n\n    print(b)\n    print(c)\n'''\"\n2\n[    ] Patch applied successfully.\n[    ] *0. Do (N)othing\n[    ]  1. (O)pen file\n[    ]  2. Add (I)gnore comment\n[    ] Enter number (Ctrl-D to exit): 0\n\nThe output of the Vulture Bear is getting merged into other bears. And also the output of the Vulture Bear gets shown without any interaction of the user.\nIMO we should provide a option to the user ,which gives him the freedom to view the result from Vulture Bear whenever he wants.\nThe desired output IMHO should be:-\ntest.py\n[   3] def·test(a1,b1=\"\",c1=\"\",a2):·\n**** PEP8Bear [Section: cli | Severity: NORMAL] ****\n!    ! The code does not comply to PEP8.\n[----] /home/theprophet/test-coala/test.py\n[++++] /home/theprophet/test-coala/test.py\n[   3] def test(a1,b1=\"\",c1=\"\",a2): \n[   3] def test(a1, b1=\"\", c1=\"\", a2):\n[    ] *0. Do (N)othing\n[    ]  1. (O)pen file\n[    ]  2. (A)pply patch\n[    ]  3. Add (I)gnore comment\n[    ]  4. Show Applied (P)atches\n[    ]  5. (G)enerate patches\n[    ]  6. Show VultureBear Output\n[    ] Enter number (Ctrl-D to exit):\n\n\nstatus/needs Discussion\ncc @Makman2","comments":8,"createdAt":"2018-03-07T17:09:26Z","updatedAt":"2018-03-11T16:44:29Z","closedAt":"2018-03-11T16:44:14Z","state":"closed","user":{"login":"Naveenaidu","avatarUrl":"https://avatars1.githubusercontent.com/u/30195193?v=4"},"owner":{"login":"Naveenaidu","avatarUrl":"https://avatars1.githubusercontent.com/u/30195193?v=4"},"labels":[{"name":"status/invalid","color":"000000"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1523184459000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5244","number":5244,"title":"Add notepadqq to known editors","body":"notepadqq is the linux variant of notepad++\nOpenEditorAction.py doesn't have notepadqq in its known list of gui editors it would be nice to have it.","comments":9,"createdAt":"2018-03-09T04:46:07Z","updatedAt":"2018-04-08T10:47:39Z","closedAt":"2018-04-08T10:47:39Z","state":"closed","user":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4"},"owner":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4"},"assignee":{"login":"guilherme-p","avatarUrl":"https://avatars1.githubusercontent.com/u/31377673?v=4"},"labels":[{"name":"area/actions","color":"207de5"},{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1520788436000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5245","number":5245,"title":"Typo in the docstring of `modify_line()` in Diff.py","body":"One of the example inside the docstring of modify_line() in Diff.py shows wrong output.\nOriginal line:-\n >>> diff = Diff(['Hey there! Gorgeous.\\n',\n        ...              \"It's nice that we're here.\\n\"])\n\nThe example that needs to be changed:-\n>>> diff.modify_line(1,\n        ...                  'Hello. :( Gorgeous.\\n')\n        >>> diff.modified\n        ['Hello. :( This is sad.\\n', \"It's nice that we're here.\\n\"]","comments":8,"createdAt":"2018-03-09T10:34:16Z","updatedAt":"2018-03-11T17:13:56Z","closedAt":"2018-03-11T15:40:03Z","state":"closed","user":{"login":"Naveenaidu","avatarUrl":"https://avatars1.githubusercontent.com/u/30195193?v=4"},"owner":{"login":"Naveenaidu","avatarUrl":"https://avatars1.githubusercontent.com/u/30195193?v=4"},"labels":[{"name":"status/invalid","color":"000000"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1520661480000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5246","number":5246,"title":"packaging version conflict","body":"The master build on Travis is failing for 9 days with an error on various versions of Python\npkg_resources.ContextualVersionConflict: (packaging 17.1 (/home/travis/virtualenv/python3.4.4/lib/python3.4/site-packages), Requirement.parse('packaging~=16.8'), {'coala'})\n\nhttps://travis-ci.org/coala/coala/builds/347475123\npkg_resources.ContextualVersionConflict: (packaging 17.1 (/home/travis/virtualenv/python3.5.5/lib/python3.5/site-packages), Requirement.parse('packaging~=16.8'), {'coala'})\n\nhttps://travis-ci.org/coala/coala/jobs/351030728\ncaused by #4325\nyou can not ever pin setuptools or packaging or anything of those packages which are 'almost' stdlib.","comments":2,"createdAt":"2018-03-09T10:34:32Z","updatedAt":"2018-03-10T05:58:00Z","closedAt":"2018-03-10T05:58:00Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"area/CI","color":"eb6420"},{"name":"area/upstream","color":"5319e7"},{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1523071817000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5248","number":5248,"title":"Writing Linter Bears.rst: Contents of RESULT_SEVERITY are ambigous","body":"Under https://api.coala.io/en/latest/Developers/Writing_Linter_Bears.html#using-severities, it is mentioned that there are three severity levels: INFO, NORMAL & MAJOR.\nAt the end of the same section it says:\n\ncoalib.results.RESULT_SEVERITY contains three different values, Info, Warning and Error you can use.\n\nThe above line is misleading as the contents of coalib.results.RESULT_SEVERITY has the prior types of severities. This redundancy should be removed or changed to a rather clear explanation of whatever is intended here.","comments":9,"createdAt":"2018-03-10T03:36:31Z","updatedAt":"2018-04-07T03:30:17Z","closedAt":"2018-04-07T03:30:17Z","state":"closed","user":{"login":"manankalra","avatarUrl":"https://avatars3.githubusercontent.com/u/12759088?v=4"},"owner":{"login":"manankalra","avatarUrl":"https://avatars3.githubusercontent.com/u/12759088?v=4"},"assignee":{"login":"SergeyGorbatyuk171","avatarUrl":"https://avatars1.githubusercontent.com/u/22103776?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1520788965000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5249","number":5249,"title":"cOALA - Intentional or Typo?","body":"","comments":7,"createdAt":"2018-03-10T07:04:50Z","updatedAt":"2018-03-11T17:22:45Z","closedAt":"2018-03-11T17:22:36Z","state":"closed","user":{"login":"peterennis","avatarUrl":"https://avatars1.githubusercontent.com/u/140737?v=4"},"owner":{"login":"peterennis","avatarUrl":"https://avatars1.githubusercontent.com/u/140737?v=4"},"labels":[{"name":"status/invalid","color":"000000"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1522256214000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5250","number":5250,"title":"Remove clang related code","body":"After #5027 , there shouldnt have been any llvm,clang stuff in this repo, but there is ... cc @Makman2\nRemove clang stuff\ntests/misc/ExceptionsTest.py:            'libclang-py3 0.3', 'libclang-py3==0.2')), 13)\ntests/output/ConsoleInteractionTest.py:                [Result('ClangCloneDetectionBear',\ntests/output/ConsoleInteractionTest.py:**** ClangCloneDetectionBear [Section:  | Severity: NORMAL] ****\n\nIf these tests are not already in coala-bears, they should be copied there.\nAlso there are a few bugs raised about clang.  They need to be opened as new issues in the coala-bears repo.","comments":7,"createdAt":"2018-03-10T10:42:35Z","updatedAt":"2018-03-28T16:56:54Z","closedAt":"2018-03-28T16:56:54Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"lalitmee","avatarUrl":"https://avatars0.githubusercontent.com/u/10762218?v=4"},"labels":[{"name":"area/tests","color":"bfd4f2"},{"name":"difficulty/low","color":"207de5"},{"name":"importance/low","color":"70E870"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1513451704000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4769","number":4769,"title":"Clear anomaly between “Fixes” & “Closes”","body":"The commit guide doesn't make it clear when to use \"Fixes\" and \"Closes\" for documentation changes. The commit guide should be modified to convey that “Fixes” should be used only for those issues that are labelled “bug” - “Closes” works for pretty much everything else.\nLabel: initiatives/gci","comments":4,"createdAt":"2017-10-21T18:44:34Z","updatedAt":"2017-12-16T19:15:04Z","closedAt":"2017-10-22T20:52:55Z","state":"closed","user":{"login":"prnvdixit","avatarUrl":"https://avatars2.githubusercontent.com/u/24798215?v=4"},"owner":{"login":"prnvdixit","avatarUrl":"https://avatars2.githubusercontent.com/u/24798215?v=4"},"labels":[{"name":"status/duplicate","color":"000000"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1518123623000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4770","number":4770,"title":"Single PR for an issue","body":"The Newcomer guide doesn’t specify that the contributor should try to submit only a single PR for each issue. It should convey that otherwise, it makes it tough for reviewers to see if previous changes have been accommodated in current commit or not.\nLabel: initiatives/gci","comments":5,"createdAt":"2017-10-21T18:49:13Z","updatedAt":"2018-02-08T21:00:23Z","closedAt":null,"state":"open","user":{"login":"prnvdixit","avatarUrl":"https://avatars2.githubusercontent.com/u/24798215?v=4"},"owner":{"login":"prnvdixit","avatarUrl":"https://avatars2.githubusercontent.com/u/24798215?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1514349780000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4771","number":4771,"title":"Newcomer's guide should limit one newcomer issue per contributor","body":"The current Newcomer's guide doesn't directly imply that everyone should do \"only one\" newcomer issue. Edit docs so as to make \"you should do only one newcomer issue\" more implied.\nLabel: initiatives/gci","comments":10,"createdAt":"2017-10-21T19:25:25Z","updatedAt":"2017-12-27T04:43:00Z","closedAt":"2017-12-27T04:43:00Z","state":"closed","user":{"login":"prnvdixit","avatarUrl":"https://avatars2.githubusercontent.com/u/24798215?v=4"},"owner":{"login":"prnvdixit","avatarUrl":"https://avatars2.githubusercontent.com/u/24798215?v=4"},"assignee":{"login":"theOriginalMuktaka","avatarUrl":"https://avatars0.githubusercontent.com/u/15193589?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"initiatives/gci","color":"e99695"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1509276253000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4775","number":4775,"title":"Redesign coalib.bearlib.languages on top of pygments","body":"We partly reinvented the wheel with our manual coalib.bearlib.languages.definitions\nWe should gather all that content dynamically from pygments. @jayvdb's #3162 already was a good step in that direction. But we don't even need code generation. Just loading all the definitions at runtime into our Language framework should be enough\nWe can further reuse the complete lexer system of pygments, simplifying AnnotationBear to a minimum of wrapper code instead of further bloating it up with coala/coala-bears#1332 (which still blocks other PRs)\n@aptrishu This would actually be the beginning of the redesign mentioned in coala/coala-bears#1332 (review) ... Would you like to try?\n@sils @Makman2 @jayvdb Opinions?","comments":8,"createdAt":"2017-10-22T19:23:48Z","updatedAt":"2017-10-29T11:24:13Z","closedAt":null,"state":"open","user":{"login":"userzimmermann","avatarUrl":"https://avatars3.githubusercontent.com/u/2088633?v=4"},"owner":{"login":"userzimmermann","avatarUrl":"https://avatars3.githubusercontent.com/u/2088633?v=4"},"assignee":{"login":"userzimmermann","avatarUrl":"https://avatars3.githubusercontent.com/u/2088633?v=4"},"labels":[{"name":"area/languages","color":"d4c5f9"},{"name":"difficulty/high","color":"B319e7"},{"name":"type/feature","color":"0052cc"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1518123614000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4783","number":4783,"title":"Clarify steps after completing Newcomer's guide","body":"The Newcomer guide should convey that fixing difficulty/low or higher issues requires one to understand only a section of project and are relatively easier while the projects may require quite some time (even months). Still, the interested contributors can ping the maintainers if they are willing to take up a project.\nlabel: initiatives/gci","comments":5,"createdAt":"2017-10-24T14:08:48Z","updatedAt":"2018-02-08T21:00:14Z","closedAt":null,"state":"open","user":{"login":"prnvdixit","avatarUrl":"https://avatars2.githubusercontent.com/u/24798215?v=4"},"owner":{"login":"prnvdixit","avatarUrl":"https://avatars2.githubusercontent.com/u/24798215?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1508864928000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4784","number":4784,"title":"corobo Usage Stats","body":"Identify the most regularly used corobo commands.\nThis task involves three parts:\n\nDesigning the database to store (command, frequency) pairs\nUpdating the table on each command (or buffer commands, if you're worried about performance)\nAn interface to view the results\n\nContributors most likely to help regarding issue : @meetmangukiya\nlabel : initiatives/gci","comments":4,"createdAt":"2017-10-24T15:08:07Z","updatedAt":"2017-10-24T17:08:48Z","closedAt":"2017-10-24T16:15:48Z","state":"closed","user":{"login":"prnvdixit","avatarUrl":"https://avatars2.githubusercontent.com/u/24798215?v=4"},"owner":{"login":"prnvdixit","avatarUrl":"https://avatars2.githubusercontent.com/u/24798215?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1508863445000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4786","number":4786,"title":"test issue","body":"just testing :) sorry.","comments":0,"createdAt":"2017-10-24T16:08:42Z","updatedAt":"2017-10-24T16:44:05Z","closedAt":"2017-10-24T16:44:05Z","state":"closed","user":{"login":"sils","avatarUrl":"https://avatars0.githubusercontent.com/u/5716520?v=4"},"owner":{"login":"sils","avatarUrl":"https://avatars0.githubusercontent.com/u/5716520?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1525196679000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4787","number":4787,"title":"Explain the functionality of .coafile in 'Getting Started with coala'","body":"I propose that maybe we should clarify what the .coafile is for in the guide Getting Started with coala.\nI am a new user of coala. I am not sure if others agree with me but I think there is one point in the 'Getting Started with coala' guide that is confusing. In the section 'Configuration Files - coafiles', the guide does not really introduce what functionality the .coafile has. It says that it is a configuration file. But what I couldn't find there is that the .coafile is something that allows you to run coala the way you want without specifying all the arguments again. Like it says in the 'about' page of the homepage, it gives one of the 2 options to run coala. I was really confused about why we need the .coafile when I was reading the guide. I have also looked into the Configuration File page in the doc to try to find out what it is. It wasn't until I stumbled upon the about section on the homepage that I see what the .coafile is for.\nI have not used any tool similar to coala, so maybe this is more obvious to other people.","comments":1,"createdAt":"2017-10-24T16:14:52Z","updatedAt":"2018-05-01T17:44:39Z","closedAt":null,"state":"open","user":{"login":"zhongLxyz","avatarUrl":"https://avatars0.githubusercontent.com/u/25083417?v=4"},"owner":{"login":"zhongLxyz","avatarUrl":"https://avatars0.githubusercontent.com/u/25083417?v=4"},"assignee":{"login":"Kanav-7","avatarUrl":"https://avatars0.githubusercontent.com/u/23416069?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/low","color":"207de5"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1508862133000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4788","number":4788,"title":"test issue please ignore","body":"","comments":0,"createdAt":"2017-10-24T16:22:02Z","updatedAt":"2017-10-24T16:22:13Z","closedAt":"2017-10-24T16:22:13Z","state":"closed","user":{"login":"fneu","avatarUrl":"https://avatars2.githubusercontent.com/u/7591685?v=4"},"owner":{"login":"fneu","avatarUrl":"https://avatars2.githubusercontent.com/u/7591685?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1508863745000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4789","number":4789,"title":"test issue please ignore","body":"test","comments":1,"createdAt":"2017-10-24T16:23:38Z","updatedAt":"2017-10-24T16:49:05Z","closedAt":"2017-10-24T16:49:05Z","state":"closed","user":{"login":"fneu","avatarUrl":"https://avatars2.githubusercontent.com/u/7591685?v=4"},"owner":{"login":"fneu","avatarUrl":"https://avatars2.githubusercontent.com/u/7591685?v=4"},"assignee":{"login":"fneu","avatarUrl":"https://avatars2.githubusercontent.com/u/7591685?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1508864144000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4790","number":4790,"title":"test issue please ignore","body":"test","comments":2,"createdAt":"2017-10-24T16:37:07Z","updatedAt":"2017-10-24T16:55:44Z","closedAt":"2017-10-24T16:51:26Z","state":"closed","user":{"login":"fneu","avatarUrl":"https://avatars2.githubusercontent.com/u/7591685?v=4"},"owner":{"login":"fneu","avatarUrl":"https://avatars2.githubusercontent.com/u/7591685?v=4"},"assignee":{"login":"fneu","avatarUrl":"https://avatars2.githubusercontent.com/u/7591685?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1508864199000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4792","number":4792,"title":"another test issue","body":"again. Sorry really need a big repo to test this.","comments":4,"createdAt":"2017-10-24T16:49:58Z","updatedAt":"2017-10-24T16:56:39Z","closedAt":"2017-10-24T16:51:07Z","state":"closed","user":{"login":"sils","avatarUrl":"https://avatars0.githubusercontent.com/u/5716520?v=4"},"owner":{"login":"sils","avatarUrl":"https://avatars0.githubusercontent.com/u/5716520?v=4"},"assignee":{"login":"fneu","avatarUrl":"https://avatars2.githubusercontent.com/u/7591685?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1510236996000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4793","number":4793,"title":"Fix Typo Mistake","body":"1.) In Note of step 2 in New commer Guide\nReplace To see all of the corobo commands, with To see all of the corobo commands:\n2.) Replace cobot with corobo in Review.rst.\nNote: Before submitting any PR first read New commer Guide","comments":11,"createdAt":"2017-10-24T19:56:30Z","updatedAt":"2017-11-09T14:16:36Z","closedAt":"2017-11-09T14:16:36Z","state":"closed","user":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4"},"owner":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"initiatives/gci","color":"e99695"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1509022131000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4794","number":4794,"title":"AppVeyor build fails","body":"https://ci.appveyor.com/project/coala/coala/build/1.0.10140/job/6u27rtxt162q7e0h\nIt seems like an upstream package was broken.\nTried to test it in a fedora docker container, but like the other Linux builds indicate, I can't reproduce. coala installs successfully there. Maybe it's Windows only.","comments":7,"createdAt":"2017-10-24T21:49:15Z","updatedAt":"2017-10-26T12:48:51Z","closedAt":"2017-10-26T02:18:59Z","state":"closed","user":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"owner":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"assignee":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"labels":[{"name":"area/CI","color":"eb6420"},{"name":"importance/critical","color":"e11d21"},{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1518723394000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4799","number":4799,"title":"Problems with nested `ignore` definitions in .coala","body":"Hi,\nI have problem with ignore syntax in .coafile.\nCheck those 3 configurations:\n# variant (1)\n\n[all]\nfiles = **/*.py\nignore =\n    **/migrations/**,\n    manage.py,\n    wsgi.py,\n    asgi.py,\n\n[all.python.imports]\nbears = PyImportSortBear\n\n\n# variant (2)\n\n[all]\nfiles = **/*.py\n\n[all.python.imports]\nbears = PyImportSortBear\nignore =\n    **/migrations/**,\n    manage.py,\n    wsgi.py,\n    asgi.py,\n\n\n# variant (3)\n\n[all]\nfiles = **/*.py\nignore =\n    **/migrations/**,\n    manage.py,\n\n[all.python.imports]\nbears = PyImportSortBear\nignore +=\n    wsgi.py,\n    asgi.py,\n\nVariant (1) and (2) works as expected — files in migrations/ subdir and files wsgi.py + asgi.py are successfully ignored.\nBut when I try to split it like in variant (3) it doesn’t work. Only wsgi.py + asgi.py are ignored, migrations/ are still checked by coala.\nI also tried several variations of (3): rename section name to [all.imports], put ignore definitions on single line, include/exclude comma after last item, but all of them fails.\nMy env: coala version 0.11.0, run in Docker container.\nExample of wrong output:\n[INFO][12:40:29] Applied 'ShowPatchAction' on 'system_apps/tickets/migrations/0008_auto_20171012_1011.py' from 'PyImportSortBear'.\n[INFO][12:40:29] Applied 'ShowPatchAction' on 'system_apps/tickets/migrations/0ld/0003_auto_20160913_1509.py' from 'PyImportSortBear'.\n[INFO][12:40:29] Applied 'ShowPatchAction' on 'contact/migrations/0001_squashed_0010_auto_20170429_1028.py' from 'PyImportSortBear'.","comments":7,"createdAt":"2017-10-26T13:01:05Z","updatedAt":"2018-02-15T19:36:34Z","closedAt":null,"state":"open","user":{"login":"msgre","avatarUrl":"https://avatars1.githubusercontent.com/u/64869?v=4"},"owner":{"login":"msgre","avatarUrl":"https://avatars1.githubusercontent.com/u/64869?v=4"},"assignee":{"login":"Vedarth","avatarUrl":"https://avatars2.githubusercontent.com/u/22793275?v=4"},"labels":[{"name":"importance/high","color":"eb6420"},{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1518716778000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4800","number":4800,"title":"Add/Modify missing unit documentation in `__init__.py` file.","body":"Add missing unit documentation in __init__.py file of coalib folder and it's subfolders. For missing info you can use this blog for reference. https://damngamerz.github.io/gsoc/An-Insight-Into-coala's-Structure.html\ninitiatives/gci  documentation\nOpened by @damngamerz at gitter//damngamerz","comments":6,"createdAt":"2017-10-26T18:02:00Z","updatedAt":"2018-02-15T17:46:18Z","closedAt":null,"state":"open","user":{"login":"co-robo","avatarUrl":"https://avatars2.githubusercontent.com/u/29058257?v=4"},"owner":{"login":"co-robo","avatarUrl":"https://avatars2.githubusercontent.com/u/29058257?v=4"},"assignee":{"login":"Vedarth","avatarUrl":"https://avatars2.githubusercontent.com/u/22793275?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/low","color":"207de5"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1509420085000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4810","number":4810,"title":"Add tests: Check if using `--output` overwrites files instead of appending","body":"#4726 introduced overwriting of files when using coala multiple times for the file specified with --output. Before, file data was appended (which leads to corruption e.g. when also using --json). This has to be tested, so we can have this behaviour enforced across versions and standardize this.","comments":0,"createdAt":"2017-10-29T19:47:54Z","updatedAt":"2017-10-31T03:21:25Z","closedAt":"2017-10-31T03:21:25Z","state":"closed","user":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"owner":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"assignee":{"login":"mohitkyadav","avatarUrl":"https://avatars3.githubusercontent.com/u/25580776?v=4"},"labels":[{"name":"area/tests","color":"bfd4f2"},{"name":"difficulty/low","color":"207de5"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1509916118000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4811","number":4811,"title":"--show-description and --show-details don't work as expected for entrypoints json and format","body":"--show-description and --show-details don't work as expected. Both the entrypoints dumps pre-decided set of attributes of bears without checking these args.\nOutput can be compared by running the following commands:\ncoala -B --filter-by language r --show-description\ncoala -B --filter-by language r --show-description --json\ncoala -B --filter-by language r --show-description --format","comments":1,"createdAt":"2017-10-29T21:52:08Z","updatedAt":"2017-11-05T21:08:38Z","closedAt":null,"state":"open","user":{"login":"shreyans800755","avatarUrl":"https://avatars2.githubusercontent.com/u/3727351?v=4"},"owner":{"login":"shreyans800755","avatarUrl":"https://avatars2.githubusercontent.com/u/3727351?v=4"},"assignee":{"login":"shreyans800755","avatarUrl":"https://avatars2.githubusercontent.com/u/3727351?v=4"},"labels":[{"name":"area/CLI","color":"006b75"},{"name":"difficulty/medium","color":"0052cc"},{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1509916097000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4815","number":4815,"title":"Improve output-format system - Add export feeds","body":"Currently the CLI code is generally very complicated. One part is the handling of different output formats, like JSON, formatted or normal output. Everywhere is specific code for different operation modes of coala (showing bears vs normal execution), and this will continue to become more complicated with more features we add.\nInspired by scrapy's export feeds, we can add our own ExportFeed module. This module is responsible for accepting objects from everywhere in code (e.g. with a function export, or maybe by overriding print itself) and print them accordingly to the user.\nSent objects to the export feed may be primitive (strings, ints, floats, arbitrary objects). However, to be able to control how things shall be printed/exported for different output formats, we can support overridable methods for objects, like __json__, __formatted__ or similar.\nOne question is maybe: Why not just letting coala return the values and we just print them?\nThere's a major problem with that: For example, we want to prompt results immediately in normal execution mode (checking files) as soon as they arrive. Returning results after the execution has finished is too late. So we need a system that is capable of immediately handling objects to print/export as soon as they arrive.\nThere are still some major points left to design (what degree of interaction shall happen in the components and in the export feed? Return values of coala command for in-Python-use or only use feed export module?), but this is a basic idea on how to possibly centralize and modularize things again.\nSuggestions? :)","comments":5,"createdAt":"2017-10-30T16:58:40Z","updatedAt":"2017-11-05T21:08:17Z","closedAt":null,"state":"open","user":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"owner":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"assignee":{"login":"shreyans800755","avatarUrl":"https://avatars2.githubusercontent.com/u/3727351?v=4"},"labels":[{"name":"area/CLI","color":"006b75"},{"name":"difficulty/high","color":"B319e7"},{"name":"status/needs design","color":"5319e7"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1518123321000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4816","number":4816,"title":"Detect and prevent spelling errors in documentation","body":"Use a coala bear to detect spelling mistakes in current documentation , and prevent them from re-occurring by improving the .coafile.\nhttps://github.com/coala/coala/tree/master/docs\ninitiative/gci","comments":7,"createdAt":"2017-10-31T17:03:17Z","updatedAt":"2018-02-08T20:55:21Z","closedAt":null,"state":"open","user":{"login":"nvzard","avatarUrl":"https://avatars0.githubusercontent.com/u/19310512?v=4"},"owner":{"login":"nvzard","avatarUrl":"https://avatars0.githubusercontent.com/u/19310512?v=4"},"assignee":{"login":"amisha2016","avatarUrl":"https://avatars0.githubusercontent.com/u/17342222?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/low","color":"207de5"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1513784322000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4820","number":4820,"title":"Add note discouraging CircleCI on forks","body":"http://api.coala.io/en/latest/Developers/Adding_CI.html\nCircle CI should only be enabled on forks to debug problems with Circle CI.\ndifficulty/newcomer\nOpened by @jayvdb at Gitter","comments":9,"createdAt":"2017-11-01T09:58:38Z","updatedAt":"2017-12-20T15:38:42Z","closedAt":"2017-12-20T05:53:41Z","state":"closed","user":{"login":"co-robo","avatarUrl":"https://avatars2.githubusercontent.com/u/29058257?v=4"},"owner":{"login":"co-robo","avatarUrl":"https://avatars2.githubusercontent.com/u/29058257?v=4"},"labels":[{"name":"status/duplicate","color":"000000"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1509697921000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4823","number":4823,"title":"Writing_Native_Bears.rst:  Fix documentation","body":"In the second line of the second point in the Communicating with the User section of Writing_Native_Bears.rst change the first word of that line from This to There\ndifficulty/newcomer initiative/gci","comments":3,"createdAt":"2017-11-02T12:20:57Z","updatedAt":"2017-11-03T08:32:01Z","closedAt":"2017-11-03T08:32:01Z","state":"closed","user":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4"},"owner":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4"},"assignee":{"login":"pradeepgangwar","avatarUrl":"https://avatars1.githubusercontent.com/u/21259802?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1509767969000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4824","number":4824,"title":"Force preserve line endings when patching","body":"In Windows create a python file and write the code\ndef a(x,y):\n    pass\n\nChange line endings to unix style.\nRun coala with PEP8Bear and it will suggest you a replacement:\n|   1| def·a(x,y):\n|   2| ····pass\n|    | [NORMAL] PEP8Bear:\n|    | The code does not comply to PEP8.\n|----|    | d:\\dev\\ccm\\source\\pyccm\\snmpttrules\\parser.py\n|    |++++| d:\\dev\\ccm\\source\\pyccm\\snmpttrules\\parser.py\n|   1|    |-def a(x,y):\n|   2|    |-    pass\n|    |   1|+def a(x, y):\n|    |   2|+    pass\n\nAccept Patch.\nCheck line endings.\nNow it's windows style line endings.\nPatch should save line endings or the user should have an ability to specify which line endings style to use in the patch operation.","comments":1,"createdAt":"2017-11-02T13:47:36Z","updatedAt":"2017-11-04T03:59:29Z","closedAt":null,"state":"open","user":{"login":"r3code","avatarUrl":"https://avatars0.githubusercontent.com/u/1355056?v=4"},"owner":{"login":"r3code","avatarUrl":"https://avatars0.githubusercontent.com/u/1355056?v=4"},"labels":[{"name":"area/bears","color":"eb6420"},{"name":"area/config","color":"fbca04"},{"name":"difficulty/medium","color":"0052cc"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1509896009000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4828","number":4828,"title":"Missing space in cli section warning","body":"The message 'cli' is an internally reserved section name ... in ConfigurationGathering.py has two sentences joined together without whitespace between them\n    '... just like CLI args do.'\n    'Please change the name ...'","comments":0,"createdAt":"2017-11-03T14:32:03Z","updatedAt":"2017-11-05T15:33:29Z","closedAt":"2017-11-05T15:33:29Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"damian1996","avatarUrl":"https://avatars2.githubusercontent.com/u/26581525?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1509756132000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4831","number":4831,"title":"Redesign default configuration system (default_coafile, .coarc)","body":"It's not recommended to modify default_coafile right now, and .coarc is only user bound. It's worth to spend some time designing a proper and standardized foundation (e.g. allowing system-wide files the user can modify).\nSee http://yamllint.readthedocs.io/en/latest/configuration.html\nWe could maybe take some ideas from them 👍","comments":0,"createdAt":"2017-11-04T00:42:12Z","updatedAt":"2017-11-04T00:42:12Z","closedAt":null,"state":"open","user":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"owner":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"labels":[{"name":"area/CLI","color":"006b75"},{"name":"difficulty/high","color":"B319e7"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1512407212000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4835","number":4835,"title":"Add meta folder of Visual Studio Code to .gitignore","body":"We already ignore meta folders for other IDEs/editors (e.g. Sublime).\nExtending the .gitignore to include the meta-folder for VSCode (.vscode) allows developers to use this editor painlessly, without having to worry about accidentally committing this folder :)","comments":4,"createdAt":"2017-11-05T12:50:52Z","updatedAt":"2017-12-04T17:06:52Z","closedAt":"2017-12-04T17:06:52Z","state":"closed","user":{"login":"mrtes","avatarUrl":"https://avatars3.githubusercontent.com/u/19871688?v=4"},"owner":{"login":"mrtes","avatarUrl":"https://avatars3.githubusercontent.com/u/19871688?v=4"},"assignee":{"login":"bhavishyagopesh","avatarUrl":"https://avatars0.githubusercontent.com/u/22556226?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1522418776000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4838","number":4838,"title":"Bear glob patterns are case sensitive","body":"Right now, bear glob patterns in coala are case sensitive. With new options available to display bears along with its details through CLI, case sensitive is becoming hindrance in terms of usability.\nFor example:\ncoala --show-bears --bears *Clang* is giving list of bears with the word Clang in it (case sensitive)\nBut at the same time, coala --show-bears *clang* is failing to fetch the same list of bears.\nSo, if user wants to search for the details of bear(s), then (s)he must know the case of the bear which kinda doesn't make sense.","comments":8,"createdAt":"2017-11-05T21:03:15Z","updatedAt":"2018-03-30T14:06:16Z","closedAt":null,"state":"open","user":{"login":"shreyans800755","avatarUrl":"https://avatars2.githubusercontent.com/u/3727351?v=4"},"owner":{"login":"shreyans800755","avatarUrl":"https://avatars2.githubusercontent.com/u/3727351?v=4"},"assignee":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4"},"labels":[{"name":"area/CLI","color":"006b75"},{"name":"difficulty/medium","color":"0052cc"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1513872519000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4840","number":4840,"title":"docs/Developers: Fix typo in Newcomers_Guide.rst","body":"In last Note of Step 2 of Newcomer's Guide, change To see all of corobo commands, to To see all of corobo commands:\nRelevant file can be found here\nlabels: initiatives/gci","comments":16,"createdAt":"2017-11-09T13:54:47Z","updatedAt":"2017-12-21T16:08:39Z","closedAt":"2017-12-21T16:08:39Z","state":"closed","user":{"login":"IpshitaC","avatarUrl":"https://avatars0.githubusercontent.com/u/18362353?v=4"},"owner":{"login":"IpshitaC","avatarUrl":"https://avatars0.githubusercontent.com/u/18362353?v=4"},"assignee":{"login":"adi23arora","avatarUrl":"https://avatars0.githubusercontent.com/u/17095968?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"initiatives/gci","color":"e99695"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1510344751000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4844","number":4844,"title":".coafile: Also lint docs/conf.py","body":"Everything in the coala repo itself should be linted too :)\ncc @shreyans800755","comments":0,"createdAt":"2017-11-10T18:51:44Z","updatedAt":"2017-11-10T20:12:31Z","closedAt":"2017-11-10T20:12:31Z","state":"closed","user":{"login":"userzimmermann","avatarUrl":"https://avatars3.githubusercontent.com/u/2088633?v=4"},"owner":{"login":"userzimmermann","avatarUrl":"https://avatars3.githubusercontent.com/u/2088633?v=4"},"assignee":{"login":"userzimmermann","avatarUrl":"https://avatars3.githubusercontent.com/u/2088633?v=4"},"labels":[{"name":"area/CI","color":"eb6420"},{"name":"area/documentation","color":"bfe5bf"},{"name":"area/tests","color":"bfd4f2"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1510411773000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4845","number":4845,"title":"FilterTest.test_filter_by_unknown wrongly uses assertRaisesRegex","body":"FilterTest.test_filter_by_unknown executes coala in non-debug mode, checks return code, and then tries to check an exception that can never occur at that point:\n\n  \n    \n      coala/tests/parsing/FilterTest.py\n    \n    \n        Lines 101 to 110\n      in\n      539a4e5\n    \n    \n    \n    \n\n        \n          \n           def test_filter_by_unknown(self): \n        \n\n        \n          \n               with bear_test_module(): \n        \n\n        \n          \n                   retval, stdout, stderr = execute_coala( \n        \n\n        \n          \n                       coala.main, 'coala', '-B', '--filter-by', 'unknown', 'arg1') \n        \n\n        \n          \n                   self.assertEqual(retval, 2) \n        \n\n        \n          \n                   self.assertRaisesRegex(InvalidFilterException, \n        \n\n        \n          \n                                          '{!r} is an invalid filter. Available ' \n        \n\n        \n          \n                                          'filters: {}'.format( \n        \n\n        \n          \n                                              filter, \n        \n\n        \n          \n                                              ', '.join(sorted(available_filters)))) \n        \n    \n  \n\n\nIt passes anyway because assertRaisesRegex provides a context manager meant to be used via with statement. That way the whole expression is just useless. The actual error message has to be found in stdout\nThis blocks #4821\nAnd BTW: There is no local filter variable defined. It just refers to the builtins.filter function ;)\ncc @aashutoshrathi @shreyans800755","comments":2,"createdAt":"2017-11-10T22:05:59Z","updatedAt":"2017-11-11T14:49:33Z","closedAt":"2017-11-11T14:49:33Z","state":"closed","user":{"login":"userzimmermann","avatarUrl":"https://avatars3.githubusercontent.com/u/2088633?v=4"},"owner":{"login":"userzimmermann","avatarUrl":"https://avatars3.githubusercontent.com/u/2088633?v=4"},"assignee":{"login":"userzimmermann","avatarUrl":"https://avatars3.githubusercontent.com/u/2088633?v=4"},"labels":[{"name":"area/tests","color":"bfd4f2"},{"name":"importance/critical","color":"e11d21"},{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1516042920000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4847","number":4847,"title":"mention smart questions in newcomers guide","body":"Opened by @jayvdb at Gitter","comments":7,"createdAt":"2017-11-11T13:20:43Z","updatedAt":"2018-01-15T19:02:00Z","closedAt":"2018-01-15T19:02:00Z","state":"closed","user":{"login":"co-robo","avatarUrl":"https://avatars2.githubusercontent.com/u/29058257?v=4"},"owner":{"login":"co-robo","avatarUrl":"https://avatars2.githubusercontent.com/u/29058257?v=4"},"assignee":{"login":"44rdvark","avatarUrl":"https://avatars0.githubusercontent.com/u/25840847?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1514664210000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4848","number":4848,"title":"InvalidFilterException should change name and base class","body":"Currently, coalib.parsing.InvalidFilterException.InvalidFilterException is based on Exception. It should be based on LookupError. Also, the Exception suffix is untypical. Better InvalidFilterError or just FilterError\nThis is also related to #4495 and #4821\ncc @aashutoshrathi @shreyans800755","comments":20,"createdAt":"2017-11-11T15:35:09Z","updatedAt":"2017-12-30T20:03:30Z","closedAt":"2017-11-16T00:35:42Z","state":"closed","user":{"login":"userzimmermann","avatarUrl":"https://avatars3.githubusercontent.com/u/2088633?v=4"},"owner":{"login":"userzimmermann","avatarUrl":"https://avatars3.githubusercontent.com/u/2088633?v=4"},"assignee":{"login":"mohit2872","avatarUrl":"https://avatars0.githubusercontent.com/u/17459912?v=4"},"labels":[{"name":"area/core","color":"eb6420"},{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"importance/low","color":"70E870"},{"name":"type/codestyle","color":"d4c5f9"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1519248788000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4849","number":4849,"title":"Should ignore Additoinal Parameters if a section is disabled using `enabled = False` ","body":"let say, in .coafile I have disabled a section using enabled = False in that section.And wrapped tool in that section also require additional parameters.Now when run coala, I think it shouldn't ask for those additional parameters, because that sectoin is disabled.But it asked for those parameters, don't know why?\nIt should ignore everything which is inside that section.","comments":1,"createdAt":"2017-11-11T17:04:17Z","updatedAt":"2018-02-21T21:33:08Z","closedAt":"2018-02-21T21:33:08Z","state":"closed","user":{"login":"khanchi97","avatarUrl":"https://avatars0.githubusercontent.com/u/22270415?v=4"},"owner":{"login":"khanchi97","avatarUrl":"https://avatars0.githubusercontent.com/u/22270415?v=4"},"assignee":{"login":"khanchi97","avatarUrl":"https://avatars0.githubusercontent.com/u/22270415?v=4"},"labels":[{"name":"difficulty/medium","color":"0052cc"},{"name":"importance/critical","color":"e11d21"},{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1518147843000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4850","number":4850,"title":"IgnoreResultAction for PycodestyleBear requests language value","body":"**** PycodestyleBear (E402) [Section: autopep8 | Severity: NORMAL] ****\n!    ! E402 module level import not at top of file\n[    ] *0. Do (N)othing\n[    ]  1. (O)pen file\n[    ]  2. Add (I)gnore comment\n[    ] Enter number (Ctrl-Z to exit): i\n!    ! Please enter a value for the parameter 'language' (No description given.):\n\nThis is very confusing! And even unnecessary ;)","comments":9,"createdAt":"2017-11-11T17:19:29Z","updatedAt":"2018-02-09T03:44:03Z","closedAt":null,"state":"open","user":{"login":"userzimmermann","avatarUrl":"https://avatars3.githubusercontent.com/u/2088633?v=4"},"owner":{"login":"userzimmermann","avatarUrl":"https://avatars3.githubusercontent.com/u/2088633?v=4"},"labels":[{"name":"area/actions","color":"207de5"},{"name":"area/bears","color":"eb6420"},{"name":"area/languages","color":"d4c5f9"},{"name":"difficulty/medium","color":"0052cc"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1517069246000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4851","number":4851,"title":"IgnoreResultAction violates line length restrictions","body":"Realized while dealing with #3337 (comment) (import at end of file, overwriting a class for experimental purpose)\n**** PyUnusedCodeBear [Section: flakes | Severity: NORMAL] ****\n!    ! This file contains unused source code.\n[----] c:\\users\\zimmermann\\projects\\coala\\lib\\coalib\\parsing\\confparser.py\n[++++] c:\\users\\zimmermann\\projects\\coala\\lib\\coalib\\parsing\\confparser.py\n[ 165] from .SimplerConfParser import SimplerConfParser as ConfParser\n[    ] *0. Do (N)othing\n[    ]  1. (O)pen file\n[    ]  2. (A)pply patch\n[    ]  3. Print (M)ore info\n[    ]  4. Add (I)gnore comment\n[    ]  5. Show Applied (P)atches\n[    ]  6. (G)enerate patches\n[    ] Enter number (Ctrl-Z to exit): i\n[    ] An ignore comment was added to your source code.\n\nResults in:\nfrom .SimplerConfParser import SimplerConfParser as ConfParser  # Ignore PyUnusedCodeBear","comments":9,"createdAt":"2017-11-11T17:25:50Z","updatedAt":"2018-01-27T16:07:26Z","closedAt":null,"state":"open","user":{"login":"userzimmermann","avatarUrl":"https://avatars3.githubusercontent.com/u/2088633?v=4"},"owner":{"login":"userzimmermann","avatarUrl":"https://avatars3.githubusercontent.com/u/2088633?v=4"},"assignee":{"login":"alphadose","avatarUrl":"https://avatars1.githubusercontent.com/u/25170258?v=4"},"labels":[{"name":"area/CLI","color":"006b75"},{"name":"area/actions","color":"207de5"},{"name":"area/results","color":"eb6420"},{"name":"difficulty/medium","color":"0052cc"},{"name":"importance/high","color":"eb6420"},{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1516022685000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4852","number":4852,"title":"# Ignore comments can't be aggregated above related source lines","body":"Recognized when dealing with #3337 (comment) and #3337 (comment) (import at end of file, overwriting a class for experimental purpose)\nWhen adding 2 # Ignore comments to the end of the line...\nfrom .SimplerConfParser import SimplerConfParser as ConfParser  # Ignore PyUnusedCodeBear  # Ignore PycodestyleBear (E402)\n... then both are used\nBut in any of the following cases only the second one is used:\n# Ignore PyUnusedCodeBear  # Ignore PycodestyleBear (E402)\nfrom .SimplerConfParser import SimplerConfParser as ConfParser\n# Ignore PyUnusedCodeBear\n# Ignore PycodestyleBear (E402)\nfrom .SimplerConfParser import SimplerConfParser as ConfParser","comments":9,"createdAt":"2017-11-11T17:41:56Z","updatedAt":"2018-01-15T13:24:45Z","closedAt":null,"state":"open","user":{"login":"userzimmermann","avatarUrl":"https://avatars3.githubusercontent.com/u/2088633?v=4"},"owner":{"login":"userzimmermann","avatarUrl":"https://avatars3.githubusercontent.com/u/2088633?v=4"},"assignee":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4"},"labels":[{"name":"area/actions","color":"207de5"},{"name":"area/usability","color":"d4c5f9"},{"name":"difficulty/medium","color":"0052cc"},{"name":"importance/high","color":"eb6420"},{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1510487446000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4853","number":4853,"title":"IgnoreResultAction is offered again after applied","body":"Realized while dealing with #3337 (comment) (import at end of file, overwriting a class for experimental purpose)\n**** PyUnusedCodeBear [Section: flakes | Severity: NORMAL] ****\n!    ! This file contains unused source code.\n[----] c:\\users\\zimmermann\\projects\\coala\\lib\\coalib\\parsing\\confparser.py\n[++++] c:\\users\\zimmermann\\projects\\coala\\lib\\coalib\\parsing\\confparser.py\n[ 165] from .SimplerConfParser import SimplerConfParser as ConfParser\n[    ] *0. Do (N)othing\n[    ]  1. (O)pen file\n[    ]  2. (A)pply patch\n[    ]  3. Print (M)ore info\n[    ]  4. Add (I)gnore comment\n[    ]  5. Show Applied (P)atches\n[    ]  6. (G)enerate patches\n[    ] Enter number (Ctrl-Z to exit): i\n[    ] An ignore comment was added to your source code.\n[    ] *0. Do (N)othing\n[    ]  1. (O)pen file\n[    ]  2. Print (M)ore info\n[    ]  3. Add (I)gnore comment","comments":4,"createdAt":"2017-11-11T17:47:24Z","updatedAt":"2017-11-12T11:50:46Z","closedAt":"2017-11-12T11:50:46Z","state":"closed","user":{"login":"userzimmermann","avatarUrl":"https://avatars3.githubusercontent.com/u/2088633?v=4"},"owner":{"login":"userzimmermann","avatarUrl":"https://avatars3.githubusercontent.com/u/2088633?v=4"},"labels":[{"name":"area/CLI","color":"006b75"},{"name":"area/actions","color":"207de5"},{"name":"area/results","color":"eb6420"},{"name":"difficulty/medium","color":"0052cc"},{"name":"importance/medium","color":"fbca04"},{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1515500061000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4854","number":4854,"title":"Confusing bear-dependent reactions to # Ignore","body":"Realized while dealing with #3337 (comment) (import at end of file, overwriting a class for experimental purpose)\nFor example, when there is just # Ignore at the end of the source line, PyUnusedCodeBear result for that line is not shown:\nfrom .SimplerConfParser import SimplerConfParser as ConfParser  # Ignore\nBut when it's above the line, the result is shown:\n# Ignore\nfrom .SimplerConfParser import SimplerConfParser as ConfParser\n**** PyUnusedCodeBear [Section: flakes | Severity: NORMAL] ****\n!    ! This file contains unused source code.\n[----] c:\\users\\zimmermann\\projects\\coala\\lib\\coalib\\parsing\\confparser.py\n[++++] c:\\users\\zimmermann\\projects\\coala\\lib\\coalib\\parsing\\confparser.py\n[ 166] from .SimplerConfParser import SimplerConfParser as ConfParser\n\nBut with full # Ignore PyUnusedCodeBear comment above the line, it works as expected:\n# Ignore PyUnusedCodeBear\nfrom .SimplerConfParser import SimplerConfParser as ConfParser\nAnd now the strangest part! When there is an # Ignore for another bear, PyUnusedCodeBear result also isn't shown, but only if it's at end of line:\nfrom .SimplerConfParser import SimplerConfParser as ConfParser  # Ignore PycodestyleBear (E402)\nOtherwise:\n# Ignore PycodestyleBear (E402)\nfrom .SimplerConfParser import SimplerConfParser as ConfParser\n**** PyUnusedCodeBear [Section: flakes | Severity: NORMAL] ****\n!    ! This file contains unused source code.\n[----] c:\\users\\zimmermann\\projects\\coala\\lib\\coalib\\parsing\\confparser.py\n[++++] c:\\users\\zimmermann\\projects\\coala\\lib\\coalib\\parsing\\confparser.py\n[ 166] from .SimplerConfParser import SimplerConfParser as ConfParser","comments":3,"createdAt":"2017-11-11T18:20:57Z","updatedAt":"2018-01-09T12:14:21Z","closedAt":null,"state":"open","user":{"login":"userzimmermann","avatarUrl":"https://avatars3.githubusercontent.com/u/2088633?v=4"},"owner":{"login":"userzimmermann","avatarUrl":"https://avatars3.githubusercontent.com/u/2088633?v=4"},"assignee":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4"},"labels":[{"name":"area/actions","color":"207de5"},{"name":"area/results","color":"eb6420"},{"name":"difficulty/medium","color":"0052cc"},{"name":"importance/high","color":"eb6420"},{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1511094168000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4857","number":4857,"title":"Clarify that the 'low' review in newcomer process requires critical comments of the code in the PR","body":"difficulty/low\nOpened by @jayvdb at Gitter","comments":0,"createdAt":"2017-11-12T12:41:02Z","updatedAt":"2017-11-19T12:22:48Z","closedAt":"2017-11-19T12:22:48Z","state":"closed","user":{"login":"co-robo","avatarUrl":"https://avatars2.githubusercontent.com/u/29058257?v=4"},"owner":{"login":"co-robo","avatarUrl":"https://avatars2.githubusercontent.com/u/29058257?v=4"},"assignee":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1510972924000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4858","number":4858,"title":"Investigate if Globbing.py can be replaced with standard library modules.","body":"The Python standard library features the modules \"glob\" and \"fnmatch\" to support globs.\nThe API seems to match the public functions in coalas Globbing.py module, on a first glance.\nAre there reasons this module should persist or can we replace it, if the standard library modules behave the same?","comments":7,"createdAt":"2017-11-12T12:43:52Z","updatedAt":"2017-11-18T02:42:04Z","closedAt":null,"state":"open","user":{"login":"mrtes","avatarUrl":"https://avatars3.githubusercontent.com/u/19871688?v=4"},"owner":{"login":"mrtes","avatarUrl":"https://avatars3.githubusercontent.com/u/19871688?v=4"},"assignee":{"login":"mrtes","avatarUrl":"https://avatars3.githubusercontent.com/u/19871688?v=4"},"labels":[{"name":"difficulty/medium","color":"0052cc"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1510525284000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4859","number":4859,"title":"ConsoleInteractionTest.test_acquire_actions_and_apply is defined twice","body":"The original test gets replaced with a slightly modified copied method of same name that checks the behavior of acquire_actions_and_apply with apply_single=True\nThis also prevents #4179 from getting properly tested\ncc @mrtes @Nosferatul @jayvdb @shreyans800755 @Adrianzatreanu @yukiisbored","comments":0,"createdAt":"2017-11-12T15:02:57Z","updatedAt":"2017-11-12T22:21:24Z","closedAt":"2017-11-12T22:21:24Z","state":"closed","user":{"login":"userzimmermann","avatarUrl":"https://avatars3.githubusercontent.com/u/2088633?v=4"},"owner":{"login":"userzimmermann","avatarUrl":"https://avatars3.githubusercontent.com/u/2088633?v=4"},"assignee":{"login":"userzimmermann","avatarUrl":"https://avatars3.githubusercontent.com/u/2088633?v=4"},"labels":[{"name":"area/tests","color":"bfd4f2"},{"name":"importance/high","color":"eb6420"},{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1535396095000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4861","number":4861,"title":"ConsoleInteractionTest.test_ask_for_actions_and_apply is defined twice","body":"Just like #4859 and also useful for properly testing of PRs like #4179\ncc @mrtes @Nosferatul @Adrianzatreanu @yukiisbored","comments":8,"createdAt":"2017-11-12T15:29:04Z","updatedAt":"2018-08-27T18:54:55Z","closedAt":null,"state":"open","user":{"login":"userzimmermann","avatarUrl":"https://avatars3.githubusercontent.com/u/2088633?v=4"},"owner":{"login":"userzimmermann","avatarUrl":"https://avatars3.githubusercontent.com/u/2088633?v=4"},"assignee":{"login":"pkcod","avatarUrl":"https://avatars3.githubusercontent.com/u/29246710?v=4"},"labels":[{"name":"area/tests","color":"bfd4f2"},{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"importance/high","color":"eb6420"},{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1519052036000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4862","number":4862,"title":"ConsoleInteractionTest.test_acquire_actions_and_apply for apply_single=True is not well designed","body":"This should be processed after #4860 is merged and is will also get useful for properly testing PRs like #4179\ntest_acquire_actions_and_apply was just copied and only slightly modified for testing ConsoleInteraction.acquire_actions_and_apply with parameter apply_single=True:\n\n  \n    \n      coala/tests/output/ConsoleInteractionTest.py\n    \n    \n        Lines 422 to 471\n      in\n      8da058e\n    \n    \n    \n    \n\n        \n          \n           def test_acquire_actions_and_apply(self): \n        \n\n        \n          \n               with make_temp() as testfile_path: \n        \n\n        \n          \n                   file_dict = {testfile_path: ['1\\n', '2\\n', '3\\n']} \n        \n\n        \n          \n                   diff = Diff(file_dict[testfile_path]) \n        \n\n        \n          \n                   diff.delete_line(2) \n        \n\n        \n          \n                   diff.change_line(3, '3\\n', '3_changed\\n') \n        \n\n        \n          \n                   with simulate_console_inputs('a', 'n') as generator, \\ \n        \n\n        \n          \n                           retrieve_stdout() as sio: \n        \n\n        \n          \n                       ApplyPatchAction.is_applicable = staticmethod( \n        \n\n        \n          \n                           lambda *args: True) \n        \n\n        \n          \n                       acquire_actions_and_apply(self.console_printer, \n        \n\n        \n          \n                                                 Section(''), \n        \n\n        \n          \n                                                 self.file_diff_dict, \n        \n\n        \n          \n                                                 Result('origin', 'message', diffs={ \n        \n\n        \n          \n                                                     testfile_path: diff}), \n        \n\n        \n          \n                                                 file_dict, apply_single=True) \n        \n\n        \n          \n                       self.assertEqual(generator.last_input, -1) \n        \n\n        \n          \n                       self.assertIn('', sio.getvalue()) \n        \n\n        \n          \n            \n        \n\n        \n          \n                   class InvalidateTestAction(ResultAction): \n        \n\n        \n          \n            \n        \n\n        \n          \n                       is_applicable = staticmethod(lambda *args: True) \n        \n\n        \n          \n            \n        \n\n        \n          \n                       def apply(*args, **kwargs): \n        \n\n        \n          \n                           ApplyPatchAction.is_applicable = staticmethod( \n        \n\n        \n          \n                               lambda *args: 'ApplyPatchAction cannot be applied.') \n        \n\n        \n          \n            \n        \n\n        \n          \n                   old_applypatch_is_applicable = ApplyPatchAction.is_applicable \n        \n\n        \n          \n                   ApplyPatchAction.is_applicable = staticmethod(lambda *args: True) \n        \n\n        \n          \n                   cli_actions = [ApplyPatchAction(), InvalidateTestAction()] \n        \n\n        \n          \n            \n        \n\n        \n          \n                   with simulate_console_inputs('a') as generator, \\ \n        \n\n        \n          \n                           retrieve_stdout() as sio: \n        \n\n        \n          \n                       acquire_actions_and_apply(self.console_printer, \n        \n\n        \n          \n                                                 Section(''), \n        \n\n        \n          \n                                                 self.file_diff_dict, \n        \n\n        \n          \n                                                 Result('origin', 'message', \n        \n\n        \n          \n                                                        diffs={testfile_path: diff}), \n        \n\n        \n          \n                                                 file_dict, \n        \n\n        \n          \n                                                 cli_actions=cli_actions, \n        \n\n        \n          \n                                                 apply_single=True) \n        \n\n        \n          \n                       self.assertEqual(generator.last_input, -1) \n        \n\n        \n          \n            \n        \n\n        \n          \n                       action_fail = 'Failed to execute the action' \n        \n\n        \n          \n                       self.assertNotIn(action_fail, sio.getvalue()) \n        \n\n        \n          \n            \n        \n\n        \n          \n                       apply_path_desc = ApplyPatchAction().get_metadata().desc \n        \n\n        \n          \n                       self.assertEqual(sio.getvalue().count(apply_path_desc), 0) \n        \n\n        \n          \n            \n        \n\n        \n          \n                   ApplyPatchAction.is_applicable = old_applypatch_is_applicable \n        \n    \n  \n\n\nIt keeps too much testing logic which is just completely bypassed by apply_single=True, like all those simulated console inputs and custom actions. The whole test code can be heavily reduced. And there is also a little mistake:\nassertIn('', sio.getvalue()) can never fail. The empty string is always contained in any string. It should be assertNot(sio.getvalue()). There might be more such cases. I haven't looked into every detail yet...\ncc @mrtes @Nosferatul @Adrianzatreanu @yukiisbored","comments":9,"createdAt":"2017-11-12T16:34:10Z","updatedAt":"2018-02-19T14:53:56Z","closedAt":null,"state":"open","user":{"login":"userzimmermann","avatarUrl":"https://avatars3.githubusercontent.com/u/2088633?v=4"},"owner":{"login":"userzimmermann","avatarUrl":"https://avatars3.githubusercontent.com/u/2088633?v=4"},"assignee":{"login":"anctartica","avatarUrl":"https://avatars0.githubusercontent.com/u/7020962?v=4"},"labels":[{"name":"area/tests","color":"bfd4f2"},{"name":"difficulty/low","color":"207de5"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1515942112000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4863","number":4863,"title":"ConsoleInteraction.ask_for_actions_and_apply: No check for invalid apply_single","body":"If apply_single refers to some non-existent action, just nothing happens. The function just returns with True:\n\n  \n    \n      coala/coalib/output/ConsoleInteraction.py\n    \n    \n        Lines 747 to 827\n      in\n      8da058e\n    \n    \n    \n    \n\n        \n          \n           def ask_for_action_and_apply(console_printer, \n        \n\n        \n          \n                                        section, \n        \n\n        \n          \n                                        metadata_list, \n        \n\n        \n          \n                                        action_dict, \n        \n\n        \n          \n                                        failed_actions, \n        \n\n        \n          \n                                        result, \n        \n\n        \n          \n                                        file_diff_dict, \n        \n\n        \n          \n                                        file_dict, \n        \n\n        \n          \n                                        applied_actions, \n        \n\n        \n          \n                                        apply_single=False): \n        \n\n        \n          \n               \"\"\" \n        \n\n        \n          \n               Asks the user for an action and applies it. \n        \n\n        \n          \n            \n        \n\n        \n          \n               :param console_printer: Object to print messages on the console. \n        \n\n        \n          \n               :param section:         Currently active section. \n        \n\n        \n          \n               :param metadata_list:   Contains metadata for all the actions. \n        \n\n        \n          \n               :param action_dict:     Contains the action names as keys and their \n        \n\n        \n          \n                                       references as values. \n        \n\n        \n          \n               :param failed_actions:  A set of all actions that have failed. A failed \n        \n\n        \n          \n                                       action remains in the list until it is successfully \n        \n\n        \n          \n                                       executed. \n        \n\n        \n          \n               :param result:          Result corresponding to the actions. \n        \n\n        \n          \n               :param file_diff_dict:  If it is an action which applies a patch, this \n        \n\n        \n          \n                                       contains the diff of the patch to be applied to \n        \n\n        \n          \n                                       the file with filename as keys. \n        \n\n        \n          \n               :param file_dict:       Dictionary with filename as keys and its contents \n        \n\n        \n          \n                                       as values. \n        \n\n        \n          \n               :param apply_single:    The action that should be applied for all results. \n        \n\n        \n          \n                                       If it's not selected, has a value of False. \n        \n\n        \n          \n               :param applied_actions: A dictionary that contains the result, file_dict, \n        \n\n        \n          \n                                       file_diff_dict and the section for an action. \n        \n\n        \n          \n               :return:                Returns a boolean value. True will be returned, if \n        \n\n        \n          \n                                       it makes sense that the user may choose to execute \n        \n\n        \n          \n                                       another action, False otherwise. \n        \n\n        \n          \n               \"\"\" \n        \n\n        \n          \n               actions_desc, actions_name = choose_action(console_printer, metadata_list, \n        \n\n        \n          \n                                                          apply_single) \n        \n\n        \n          \n            \n        \n\n        \n          \n               if apply_single: \n        \n\n        \n          \n                   if apply_single == 'Do (N)othing': \n        \n\n        \n          \n                       return False \n        \n\n        \n          \n                   for index, action_details in enumerate(metadata_list, 1): \n        \n\n        \n          \n                       if apply_single == action_details.desc: \n        \n\n        \n          \n                           action_name, section = get_action_info( \n        \n\n        \n          \n                               section, metadata_list[index - 1], failed_actions) \n        \n\n        \n          \n                           chosen_action = action_dict[action_details.name] \n        \n\n        \n          \n                           try_to_apply_action(action_name, \n        \n\n        \n          \n                                               chosen_action, \n        \n\n        \n          \n                                               console_printer, \n        \n\n        \n          \n                                               section, \n        \n\n        \n          \n                                               metadata_list, \n        \n\n        \n          \n                                               action_dict, \n        \n\n        \n          \n                                               failed_actions, \n        \n\n        \n          \n                                               result, \n        \n\n        \n          \n                                               file_diff_dict, \n        \n\n        \n          \n                                               file_dict, \n        \n\n        \n          \n                                               applied_actions) \n        \n\n        \n          \n               else: \n        \n\n        \n          \n                   for action_choice, action_choice_name in zip(actions_desc, \n        \n\n        \n          \n                                                                actions_name): \n        \n\n        \n          \n                       if action_choice == 'Do (N)othing': \n        \n\n        \n          \n                           return False \n        \n\n        \n          \n                       chosen_action = action_dict[action_choice_name] \n        \n\n        \n          \n                       action_choice_made = action_choice \n        \n\n        \n          \n                       for index, action_details in enumerate(metadata_list, 1): \n        \n\n        \n          \n                           if action_choice_made in action_details.desc: \n        \n\n        \n          \n                               action_name, section = get_action_info( \n        \n\n        \n          \n                                   section, metadata_list[index-1], failed_actions) \n        \n\n        \n          \n                               try_to_apply_action(action_name, \n        \n\n        \n          \n                                                   chosen_action, \n        \n\n        \n          \n                                                   console_printer, \n        \n\n        \n          \n                                                   section, \n        \n\n        \n          \n                                                   metadata_list, \n        \n\n        \n          \n                                                   action_dict, \n        \n\n        \n          \n                                                   failed_actions, \n        \n\n        \n          \n                                                   result, \n        \n\n        \n          \n                                                   file_diff_dict, \n        \n\n        \n          \n                                                   file_dict, \n        \n\n        \n          \n                                                   applied_actions) \n        \n\n        \n          \n            \n        \n\n        \n          \n               return True \n        \n    \n  \n\n\nThis allowed hacks like setting apply_single=True in the 2nd variant of ConsoleInteractionTest.test_acquire_actions_and_apply (which is getting properly renamed by #4860 BTW), which then causes further problems in PRs like #4179 (comment)\nThe above test needs anyway some redesign according to #4862 whereby apply_single=True should just not be used\nask_for_actions_and_apply needs to raise some exception on invalid apply_single values\ncc @mrtes @Nosferatul @Adrianzatreanu @yukiisbored","comments":5,"createdAt":"2017-11-12T16:56:27Z","updatedAt":"2018-01-14T15:01:52Z","closedAt":null,"state":"open","user":{"login":"userzimmermann","avatarUrl":"https://avatars3.githubusercontent.com/u/2088633?v=4"},"owner":{"login":"userzimmermann","avatarUrl":"https://avatars3.githubusercontent.com/u/2088633?v=4"},"assignee":{"login":"khanchi97","avatarUrl":"https://avatars0.githubusercontent.com/u/22270415?v=4"},"labels":[{"name":"area/actions","color":"207de5"},{"name":"difficulty/medium","color":"0052cc"},{"name":"importance/high","color":"eb6420"},{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1523950984000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4864","number":4864,"title":"Need tests/parsing/FilterHelperTest.py as companion to FilterTest.py","body":"FilterTest.py tests bear filtering on a very high level by executing coala. An additional FilterHelperTest.py should be created for testing the internal features of coalib.parsing.FilterHelpers on a lower level. For example, there is currently no test that specifically checks that InvalidFilterException (which is currently about to be renamed to BearFilterTest by #4856) is raised, which is just not possible in the way FilterTest.py performs tests (at least not before #4649 is merged)\n@mohit2872 Interested? :)\ncc @Makman2 @shreyans800755","comments":15,"createdAt":"2017-11-12T17:25:48Z","updatedAt":"2018-04-17T07:43:04Z","closedAt":"2018-04-17T07:43:04Z","state":"closed","user":{"login":"userzimmermann","avatarUrl":"https://avatars3.githubusercontent.com/u/2088633?v=4"},"owner":{"login":"userzimmermann","avatarUrl":"https://avatars3.githubusercontent.com/u/2088633?v=4"},"assignee":{"login":"sangamcse","avatarUrl":"https://avatars2.githubusercontent.com/u/26381717?v=4"},"labels":[{"name":"area/tests","color":"bfd4f2"},{"name":"difficulty/low","color":"207de5"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1512243328000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4866","number":4866,"title":"Interactions.fail_acquire_settings: Remove `section` parameter","body":"Do a git grep fail_acquire_settings, and you'll see all occurrences where calls have to be adapted. However, one of it is quite tricky, because the function is passed itself as a parameter and will be probably called somewhen later. Please take care of not breaking API 👍","comments":2,"createdAt":"2017-11-12T23:12:02Z","updatedAt":"2017-12-02T19:35:28Z","closedAt":"2017-12-02T19:35:28Z","state":"closed","user":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"owner":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"assignee":{"login":"alphadose","avatarUrl":"https://avatars1.githubusercontent.com/u/25170258?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1517172008000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4868","number":4868,"title":"ConsoleInteraction: Remove unnecessary parameters from show_bear","body":"From the comment at #4817 (comment) in\ndef show_bear(bear,\n              show_description,\n              show_params,\n              console_printer,\n              args):\n\nparameters show_description and show_params are redundent as both of these can be easily derived from args.\nWe need to clean up these.","comments":9,"createdAt":"2017-11-13T19:52:53Z","updatedAt":"2018-01-28T20:40:08Z","closedAt":"2018-01-28T20:40:08Z","state":"closed","user":{"login":"shreyans800755","avatarUrl":"https://avatars2.githubusercontent.com/u/3727351?v=4"},"owner":{"login":"shreyans800755","avatarUrl":"https://avatars2.githubusercontent.com/u/3727351?v=4"},"assignee":{"login":"alphadose","avatarUrl":"https://avatars1.githubusercontent.com/u/25170258?v=4"},"labels":[{"name":"area/CLI","color":"006b75"},{"name":"difficulty/low","color":"207de5"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1510824732000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4870","number":4870,"title":"Appveyor build fails","body":"https://ci.appveyor.com/project/coala/coala/build/1.0.10495/job/4xgjs0pur66bsia6\nhttps://ci.appveyor.com/project/coala/coala/build/1.0.10494/job/uoxvugdhmi0bo0wq\nSomehow  BearTest.py in test/bears and test/core directory  and  BuildManPageTest.py in tests\\misc are failing during build of appveyor.\nimportance/critical\ndifficulty/high\ntype/bug","comments":1,"createdAt":"2017-11-15T13:21:21Z","updatedAt":"2017-11-16T09:32:12Z","closedAt":"2017-11-16T09:32:12Z","state":"closed","user":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4"},"owner":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4"},"labels":[{"name":"area/CI","color":"eb6420"},{"name":"importance/critical","color":"e11d21"},{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1519249716000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4871","number":4871,"title":"Add cli mode to emit a asciinema of command run and the command output","body":"Opened by @jayvdb at Gitter","comments":3,"createdAt":"2017-11-15T22:24:43Z","updatedAt":"2018-02-21T21:48:36Z","closedAt":null,"state":"open","user":{"login":"co-robo","avatarUrl":"https://avatars2.githubusercontent.com/u/29058257?v=4"},"owner":{"login":"co-robo","avatarUrl":"https://avatars2.githubusercontent.com/u/29058257?v=4"},"labels":[{"name":"difficulty/medium","color":"0052cc"},{"name":"status/needs design","color":"5319e7"},{"name":"status/needs info","color":"006b75"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1519426515000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4872","number":4872,"title":"InvalidFilterException should change name","body":"the Exception suffix is untypical. Better InvalidFilterError or just FilterError\n\nFrom #4848","comments":6,"createdAt":"2017-11-16T00:34:03Z","updatedAt":"2018-02-23T22:55:15Z","closedAt":null,"state":"open","user":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"owner":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"assignee":{"login":"mohit2872","avatarUrl":"https://avatars0.githubusercontent.com/u/17459912?v=4"},"labels":[{"name":"area/core","color":"eb6420"},{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"importance/low","color":"70E870"},{"name":"type/codestyle","color":"d4c5f9"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1511817130000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4873","number":4873,"title":"InvalidFilterException should change base class","body":"Currently, coalib.parsing.InvalidFilterException.InvalidFilterException is based on Exception. It should be based on LookupError\n\nFrom #4848","comments":2,"createdAt":"2017-11-16T00:34:56Z","updatedAt":"2017-11-27T21:12:10Z","closedAt":"2017-11-27T21:12:10Z","state":"closed","user":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"owner":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"assignee":{"login":"richer6605","avatarUrl":"https://avatars2.githubusercontent.com/u/20852502?v=4"},"labels":[{"name":"area/core","color":"eb6420"},{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"importance/low","color":"70E870"},{"name":"type/codestyle","color":"d4c5f9"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1523029171000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4876","number":4876,"title":"rultor fails to merge","body":"+ ff=only\n+ rebase=false\n+ container=coala_coala-bears_2127\n+ as_root=true\n+ mkdir -p /home/rultor/.ssh\n+ echo -e 'Host github.com\\n\\tStrictHostKeyChecking no\\n'\n+ chmod 600 /home/rultor/.ssh/config\n+ git clone git@github.com:coala/coala-bears.git repo\nCloning into 'repo'...\n+ cd repo\n+ git config user.email me@rultor.com\n+ git config user.name rultor\n+ '[' -z 'export '\\''fork=git@github.com:RaiVaibhav/coala-bears.git'\\''' ']'\n+ cd ..\n+ cat\n+ '[' true = true ']'\n+ cat\n+ chmod a+x entry.sh\n+ cat\n+ echo 'export '\\''fork=git@github.com:RaiVaibhav/coala-bears.git'\\''' ';' 'export '\\''fork_branch=mybranch1'\\''' ';' 'export '\\''head=git@github.com:coala/coala-bears.git'\\''' ';' 'export '\\''head_branch=master'\\''' ';' 'export '\\''pull_id=2127'\\''' ';' 'export '\\''pull_title=CSSCombBear.py: Add use_space_before_opening_brace'\\''' ';' 'export '\\''author=makman2'\\''' ';' 'DATE=`date --utc +%Y%m%d%H%M%S`' ';' 'python3 .ci/adjust_version_number.py bears/VERSION -b \"$DATE\"' ';' 'bash .ci/check_maintainership.sh' ';' 'bash .ci/deploy.pypi.sh' ';'\n+ gpgconf --reload gpg-agent\n+ gpg --keyserver hkp://pool.sks-keyservers.net --verbose --recv-keys 9AF0FA4C\ngpg: requesting key 9AF0FA4C from hkp server pool.sks-keyservers.net\ngpg: armor header: Version: SKS 1.1.6\ngpg: armor header: Comment: Hostname: keys.klaus-uwe.me\ngpg: pub  2048R/9AF0FA4C 2014-08-17  Rultor.com <gpg@rultor.com>\ngpg: key 9AF0FA4C: \"Rultor.com <gpg@rultor.com>\" not changed\ngpg: Total number processed: 1\ngpg:              unchanged: 1\n+ gpg --version\ngpg (GnuPG) 1.4.20\nCopyright (C) 2015 Free Software Foundation, Inc.\nLicense GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>\nThis is free software: you are free to change and redistribute it.\nThere is NO WARRANTY, to the extent permitted by law.\n\nHome: ~/.gnupg\nSupported algorithms:\nPubkey: RSA, RSA-E, RSA-S, ELG-E, DSA\nCipher: IDEA, 3DES, CAST5, BLOWFISH, AES, AES192, AES256, TWOFISH,\n        CAMELLIA128, CAMELLIA192, CAMELLIA256\nHash: MD5, SHA1, RIPEMD160, SHA256, SHA384, SHA512, SHA224\nCompression: Uncompressed, ZIP, ZLIB, BZIP2\n++ pwd\n++ pwd\n+ gpg --verbose --keyring=/tmp/rultor-pkMZ/.gpg/pubring.gpg --secret-keyring=/tmp/rultor-pkMZ/.gpg/secring.gpg --decrypt repo/.ci/rultor_secrets.sh.asc\ngpg: public key is 9A839C3A\ngpg: using subkey 9A839C3A instead of primary key 9AF0FA4C\ngpg: using subkey 9A839C3A instead of primary key 9AF0FA4C\ngpg: encrypted with 2048-bit RSA key, ID 9A839C3A, created 2014-08-17\n      \"Rultor.com <gpg@rultor.com>\"\ngpg: AES256 encrypted data\ngpg: original file name='rultor-OCHk'\n+ gpg --no-tty --batch --verbose --decrypt --passphrase rultor-key:coala/coala-bears rultor_secrets.sh.enc\ngpg: AES encrypted data\ngpg: gpg-agent is not available in this session\ngpg: encrypted with 1 passphrase\ngpg: decryption failed: bad key\n'cid' file is absent, container wasn't started correctly","comments":13,"createdAt":"2017-11-16T12:16:46Z","updatedAt":"2018-04-06T15:39:31Z","closedAt":"2018-04-06T15:39:31Z","state":"closed","user":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"owner":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"labels":[{"name":"area/CI","color":"eb6420"},{"name":"importance/critical","color":"e11d21"},{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1510933464000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4878","number":4878,"title":"Investigate bear glob pattern behaviour for `*`","body":"In bear glob patterns, ** and * are giving same results. Actual discussion - #4832 (comment)\nCC @Makman2","comments":2,"createdAt":"2017-11-16T18:49:55Z","updatedAt":"2017-11-17T15:44:24Z","closedAt":null,"state":"open","user":{"login":"shreyans800755","avatarUrl":"https://avatars2.githubusercontent.com/u/3727351?v=4"},"owner":{"login":"shreyans800755","avatarUrl":"https://avatars2.githubusercontent.com/u/3727351?v=4"},"labels":[{"name":"status/needs discussion","color":"d93f0b"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1512132889000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4879","number":4879,"title":"Change cobot to corobo in Review.rst","body":"For changing label we do corobo mark wip <url> but in documentation it is given cobot mark wip <url>\nReplace cobot with corobo in Review.\nRelevant file can be found here","comments":5,"createdAt":"2017-11-17T05:00:01Z","updatedAt":"2017-12-01T12:54:49Z","closedAt":"2017-12-01T12:54:49Z","state":"closed","user":{"login":"Pratul1997","avatarUrl":"https://avatars0.githubusercontent.com/u/22653162?v=4"},"owner":{"login":"Pratul1997","avatarUrl":"https://avatars0.githubusercontent.com/u/22653162?v=4"},"assignee":{"login":"Grox-Ni","avatarUrl":"https://avatars3.githubusercontent.com/u/14857092?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"initiatives/gci","color":"e99695"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1513520008000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4880","number":4880,"title":"google form link for promotion request  in Newcomers_Guide.rst is not showing.","body":"Go to the link\ndifficulty/newcomer","comments":8,"createdAt":"2017-11-17T14:21:26Z","updatedAt":"2017-12-17T14:13:28Z","closedAt":"2017-12-17T14:13:28Z","state":"closed","user":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4"},"owner":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4"},"assignee":{"login":"Nshul","avatarUrl":"https://avatars3.githubusercontent.com/u/26252118?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1518609681000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4881","number":4881,"title":"coala -B --json fails","body":"Fresh install of coala and coala-bears master on a new venv:\nThen I run coala -B --json\n[WARNING][11:33:59] Implicit 'Default' section inheritance is deprecated. It will be removed soon. To silence this warning remove settings in the 'Default' section from your coafile. You can use dots to specify inheritance: the section 'all.python' will inherit all settings from 'all'.\n[ERROR][11:34:02] An unknown error occurred. This is a bug. We are sorry for the inconvenience. Please contact the developers for assistance. During execution of coala an exception was raised. This should never happen. When asked for, the following information may help investigating:\n[INFO][11:34:02] Exception was:\nTraceback (most recent call last):\n\n  File \"/home/sanketdg/projects/coala/coalib/coala.py\", line 84, in main\n    args)\n\n  File \"/home/sanketdg/projects/coala/coalib/output/ConsoleInteraction.py\", line 990, in show_bears\n    print_bears(bears, show_description, show_params, console_printer, args)\n\n  File \"/home/sanketdg/projects/coala/coalib/output/ConsoleInteraction.py\", line 950, in print_bears\n    separators=(',', ': '))\n\n  File \"/home/sanketdg/.pyenv/versions/3.6.1/lib/python3.6/json/__init__.py\", line 238, in dumps\n    **kw).encode(obj)\n\n  File \"/home/sanketdg/.pyenv/versions/3.6.1/lib/python3.6/json/encoder.py\", line 201, in encode\n    chunks = list(chunks)\n\n  File \"/home/sanketdg/.pyenv/versions/3.6.1/lib/python3.6/json/encoder.py\", line 430, in _iterencode\n    yield from _iterencode_dict(o, _current_indent_level)\n\n  File \"/home/sanketdg/.pyenv/versions/3.6.1/lib/python3.6/json/encoder.py\", line 404, in _iterencode_dict\n    yield from chunks\n\n  File \"/home/sanketdg/.pyenv/versions/3.6.1/lib/python3.6/json/encoder.py\", line 325, in _iterencode_list\n    yield from chunks\n\n  File \"/home/sanketdg/.pyenv/versions/3.6.1/lib/python3.6/json/encoder.py\", line 438, in _iterencode\n    yield from _iterencode(o, _current_indent_level)\n\n  File \"/home/sanketdg/.pyenv/versions/3.6.1/lib/python3.6/json/encoder.py\", line 430, in _iterencode\n    yield from _iterencode_dict(o, _current_indent_level)\n\n  File \"/home/sanketdg/.pyenv/versions/3.6.1/lib/python3.6/json/encoder.py\", line 404, in _iterencode_dict\n    yield from chunks\n\n  File \"/home/sanketdg/.pyenv/versions/3.6.1/lib/python3.6/json/encoder.py\", line 438, in _iterencode\n    yield from _iterencode(o, _current_indent_level)\n\n  File \"/home/sanketdg/.pyenv/versions/3.6.1/lib/python3.6/json/encoder.py\", line 428, in _iterencode\n    yield from _iterencode_list(o, _current_indent_level)\n\n  File \"/home/sanketdg/.pyenv/versions/3.6.1/lib/python3.6/json/encoder.py\", line 325, in _iterencode_list\n    yield from chunks\n\n  File \"/home/sanketdg/.pyenv/versions/3.6.1/lib/python3.6/json/encoder.py\", line 437, in _iterencode\n    o = _default(o)\n\n  File \"/home/sanketdg/projects/coala/coalib/output/JSONEncoder.py\", line 32, in default\n    for member in get_public_members(obj)}\n\n  File \"/home/sanketdg/.pyenv/versions/3.6.1/envs/coala/lib/python3.6/site-packages/coala_utils/decorators.py\", line 134, in get_public_members\n    return {attr: getattr(obj, attr) for attr in dir(obj)\n\n  File \"/home/sanketdg/.pyenv/versions/3.6.1/envs/coala/lib/python3.6/site-packages/coala_utils/decorators.py\", line 136, in <dictcomp>\n    and not hasattr(getattr(obj, attr), '__call__')}\n\n  File \"/home/sanketdg/.pyenv/versions/3.6.1/envs/coala/lib/python3.6/site-packages/dependency_management/requirements/DistributionRequirement.py\", line 205, in package_managers\n    self.get_package_managers())\n\n  File \"/home/sanketdg/.pyenv/versions/3.6.1/envs/coala/lib/python3.6/site-packages/dependency_management/requirements/DistributionRequirement.py\", line 193, in get_package_managers\n    '{}'.format(','.join(self.packages.keys())))\n\nNotImplementedError: This platform doesn't have any of the specified package manager(s): apt_get","comments":20,"createdAt":"2017-11-18T06:05:56Z","updatedAt":"2018-02-14T12:01:21Z","closedAt":null,"state":"open","user":{"login":"SanketDG","avatarUrl":"https://avatars3.githubusercontent.com/u/8980971?v=4"},"owner":{"login":"SanketDG","avatarUrl":"https://avatars3.githubusercontent.com/u/8980971?v=4"},"assignee":{"login":"anctartica","avatarUrl":"https://avatars0.githubusercontent.com/u/7020962?v=4"},"labels":[{"name":"difficulty/medium","color":"0052cc"},{"name":"importance/medium","color":"fbca04"},{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1524954537000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4884","number":4884,"title":"Write GlobalBearTestHelper to simplify tests for global bears","body":"","comments":8,"createdAt":"2017-11-19T17:21:22Z","updatedAt":"2018-04-28T22:28:57Z","closedAt":null,"state":"open","user":{"login":"khanchi97","avatarUrl":"https://avatars0.githubusercontent.com/u/22270415?v=4"},"owner":{"login":"khanchi97","avatarUrl":"https://avatars0.githubusercontent.com/u/22270415?v=4"},"assignee":{"login":"sangamcse","avatarUrl":"https://avatars2.githubusercontent.com/u/26381717?v=4"},"labels":[{"name":"area/tests","color":"bfd4f2"},{"name":"difficulty/medium","color":"0052cc"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1514656191000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4885","number":4885,"title":"coalaCITest.setUp() defines unused attributes self.unescaped_coafile and self.coafile","body":"Recognized while creating #4883\n\n  \n    \n      coala/tests/coalaCITest.py\n    \n    \n        Lines 13 to 16\n      in\n      9de6241\n    \n    \n    \n    \n\n        \n          \n           def setUp(self): \n        \n\n        \n          \n               self.old_argv = sys.argv \n        \n\n        \n          \n               self.unescaped_coafile = os.path.abspath('./.coafile') \n        \n\n        \n          \n               self.coafile = re.escape(self.unescaped_coafile) \n        \n    \n  \n\n\nSince they have no relevant side-effects, those unused attributes should be removed","comments":6,"createdAt":"2017-11-19T19:01:58Z","updatedAt":"2017-12-30T17:49:51Z","closedAt":"2017-12-30T17:49:51Z","state":"closed","user":{"login":"userzimmermann","avatarUrl":"https://avatars3.githubusercontent.com/u/2088633?v=4"},"owner":{"login":"userzimmermann","avatarUrl":"https://avatars3.githubusercontent.com/u/2088633?v=4"},"assignee":{"login":"clarammdantas","avatarUrl":"https://avatars1.githubusercontent.com/u/15564640?v=4"},"labels":[{"name":"area/tests","color":"bfd4f2"},{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1523889345000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4886","number":4886,"title":"No tests for coala --ignore","body":"Recognized while creating #4883\nThere should be added some tests for this cmdline option. This is its definition:\n\n  \n    \n      coala/coalib/parsing/DefaultArgParser.py\n    \n    \n        Lines 148 to 150\n      in\n      4e0c88e\n    \n    \n    \n    \n\n        \n          \n           inputs_group.add_argument( \n        \n\n        \n          \n               '-i', '--ignore', nargs='+', metavar='FILE', \n        \n\n        \n          \n               help='files that should be ignored')","comments":7,"createdAt":"2017-11-19T19:09:55Z","updatedAt":"2018-04-16T14:35:45Z","closedAt":"2018-04-16T14:35:45Z","state":"closed","user":{"login":"userzimmermann","avatarUrl":"https://avatars3.githubusercontent.com/u/2088633?v=4"},"owner":{"login":"userzimmermann","avatarUrl":"https://avatars3.githubusercontent.com/u/2088633?v=4"},"assignee":{"login":"Vedarth","avatarUrl":"https://avatars2.githubusercontent.com/u/22793275?v=4"},"labels":[{"name":"area/tests","color":"bfd4f2"},{"name":"difficulty/low","color":"207de5"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1512530396000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4887","number":4887,"title":"No tests for coala --limit-files","body":"Recognized while creating #4883\nThere should be added some tests for this cmdline option. This is its definition:\n\n  \n    \n      coala/coalib/parsing/DefaultArgParser.py\n    \n    \n        Lines 152 to 154\n      in\n      4e0c88e\n    \n    \n    \n    \n\n        \n          \n           inputs_group.add_argument( \n        \n\n        \n          \n               '--limit-files', nargs='+', metavar='FILE', \n        \n\n        \n          \n               help=\"filter the `--files` argument's matches further\")","comments":1,"createdAt":"2017-11-19T19:10:56Z","updatedAt":"2017-12-06T03:19:56Z","closedAt":"2017-12-06T03:19:56Z","state":"closed","user":{"login":"userzimmermann","avatarUrl":"https://avatars3.githubusercontent.com/u/2088633?v=4"},"owner":{"login":"userzimmermann","avatarUrl":"https://avatars3.githubusercontent.com/u/2088633?v=4"},"assignee":{"login":"UnimaginaryUnit","avatarUrl":"https://avatars2.githubusercontent.com/u/20122955?v=4"},"labels":[{"name":"area/CLI","color":"006b75"},{"name":"area/tests","color":"bfd4f2"},{"name":"difficulty/medium","color":"0052cc"},{"name":"initiatives/gci","color":"e99695"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1520678953000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4888","number":4888,"title":"No tests for coala --bear-dirs","body":"Recognized while creating #4883\nThere should be added some tests for this cmdline option. This is its definition:\n\n  \n    \n      coala/coalib/parsing/DefaultArgParser.py\n    \n    \n        Lines 156 to 158\n      in\n      4e0c88e\n    \n    \n    \n    \n\n        \n          \n           inputs_group.add_argument( \n        \n\n        \n          \n               '-d', '--bear-dirs', nargs='+', metavar='DIR', \n        \n\n        \n          \n               help='additional directories which may contain bears')","comments":2,"createdAt":"2017-11-19T19:12:19Z","updatedAt":"2018-03-10T10:49:13Z","closedAt":"2018-03-10T10:49:13Z","state":"closed","user":{"login":"userzimmermann","avatarUrl":"https://avatars3.githubusercontent.com/u/2088633?v=4"},"owner":{"login":"userzimmermann","avatarUrl":"https://avatars3.githubusercontent.com/u/2088633?v=4"},"assignee":{"login":"nvzard","avatarUrl":"https://avatars0.githubusercontent.com/u/19310512?v=4"},"labels":[{"name":"area/CLI","color":"006b75"},{"name":"area/tests","color":"bfd4f2"},{"name":"difficulty/medium","color":"0052cc"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1515254898000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4890","number":4890,"title":"Don't use re.escape for making windows paths work as config setting values","body":"Many coala config settings, like those in a .coafile are file system paths. Like the files that shall be analyzed :) Those paths can and should always be OS-independently defined with/unix/style/forward/slashes\nBut when it comes to working interactively with coala in a Windows shell with path auto-completion, or when it comes to run coala's own tests in a Windows environment, there are windows\\style\\paths\\with\\backslashes to deal with\nBut in coala settings processing, backslashes are interpreted as escaping syntax for special characters, like in a Python string literal. So the backslashes from Windows paths just get lost. So far, this problem is solved by escaping the backslashes themselves when needed, but unfortunately using re.escape, which not only escapes backslashes but all non-alphanumeric characters\n#4883 removes most of those re.escapes since it makes them obsolete. But some of them remain and, depending on the use case, either the escaping should instead be done with coala_utils.string_processing.escape as @Makman2 suggested in #4883 (comment) or the backslashes should be turned into forward slashes like #4883 does it with cmdline arguments\nBTW: #4883 should be merged before doing this ;)","comments":9,"createdAt":"2017-11-20T00:45:12Z","updatedAt":"2018-01-06T16:08:18Z","closedAt":"2018-01-06T16:08:18Z","state":"closed","user":{"login":"userzimmermann","avatarUrl":"https://avatars3.githubusercontent.com/u/2088633?v=4"},"owner":{"login":"userzimmermann","avatarUrl":"https://avatars3.githubusercontent.com/u/2088633?v=4"},"assignee":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4"},"labels":[{"name":"area/config","color":"fbca04"},{"name":"area/tests","color":"bfd4f2"},{"name":"difficulty/low","color":"207de5"},{"name":"platform/windows","color":"0052cc"},{"name":"type/codestyle","color":"d4c5f9"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1524400798000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4891","number":4891,"title":"Implement travieso","body":"https://github.com/wizeline/travieso\nThis might be something useful to have on our repos, as it could save some time when we want to hunt for what actually went wrong.\nOpinions would be appreciated concerning this, since I'm not sure what the cost of implementing it would be.","comments":3,"createdAt":"2017-11-20T00:45:32Z","updatedAt":"2018-04-22T12:39:58Z","closedAt":"2018-04-22T12:39:57Z","state":"closed","user":{"login":"supergr35","avatarUrl":"https://avatars2.githubusercontent.com/u/23623348?v=4"},"owner":{"login":"supergr35","avatarUrl":"https://avatars2.githubusercontent.com/u/23623348?v=4"},"labels":[{"name":"status/blocked","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1511751875000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4892","number":4892,"title":"Add tests for bear attribute SEE_MORE","body":"Add tests for SEE_MORE, which was added in #3978","comments":4,"createdAt":"2017-11-20T11:51:22Z","updatedAt":"2017-11-27T03:04:35Z","closedAt":"2017-11-27T02:57:49Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"newbazz","avatarUrl":"https://avatars1.githubusercontent.com/u/25884863?v=4"},"labels":[{"name":"status/invalid","color":"000000"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1519305607000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4894","number":4894,"title":"Man page coala.1 installed in unaccessible location","body":"The man page is installed into site-packages, I believe.\nThis may be how it should be installed: https://github.com/nose-devs/nose/blob/master/setup.py#L109\nMore info at pypa/packaging-problems#72","comments":4,"createdAt":"2017-11-21T13:48:27Z","updatedAt":"2018-02-22T13:20:07Z","closedAt":"2018-02-22T13:20:07Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"Vedarth","avatarUrl":"https://avatars2.githubusercontent.com/u/22793275?v=4"},"labels":[{"name":"difficulty/medium","color":"0052cc"},{"name":"importance/medium","color":"fbca04"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1511284834000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4896","number":4896,"title":"test issue","body":"","comments":1,"createdAt":"2017-11-21T17:19:40Z","updatedAt":"2017-11-21T17:20:34Z","closedAt":"2017-11-21T17:20:19Z","state":"closed","user":{"login":"sils","avatarUrl":"https://avatars0.githubusercontent.com/u/5716520?v=4"},"owner":{"login":"sils","avatarUrl":"https://avatars0.githubusercontent.com/u/5716520?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1512058589000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4898","number":4898,"title":"Refine bear picking strategy with more advanced prioritization","body":"Proposed priority (not in order of work priority)\n\nCould FIX problem\nMinimizing number of bears (1 super bear vs 10 tiny bear)\nCommon runtime (native, then external bear using python, ruby, etc)\nMaybe we can get the runtime type through bear requirement?","comments":1,"createdAt":"2017-11-22T07:53:54Z","updatedAt":"2017-11-30T16:16:29Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"area/aspects","color":"000000"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1518119291000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4901","number":4901,"title":"Display command-line in `execute_bears` on test-fail when a linter is used","body":"For example :\npylint -c fileA.py --super-aggressive-lints\n(Disclaimer: Those are all invalid flags in pylint, use at own risk :P)\nEDIT by @Makman2:\nRemove obsolete label-keywords","comments":4,"createdAt":"2017-11-23T10:01:53Z","updatedAt":"2018-02-08T19:48:11Z","closedAt":"2018-02-08T19:48:11Z","state":"closed","user":{"login":"yash-nisar","avatarUrl":"https://avatars1.githubusercontent.com/u/14862976?v=4"},"owner":{"login":"yash-nisar","avatarUrl":"https://avatars1.githubusercontent.com/u/14862976?v=4"},"assignee":{"login":"alphadose","avatarUrl":"https://avatars1.githubusercontent.com/u/25170258?v=4"},"labels":[{"name":"area/tests","color":"bfd4f2"},{"name":"difficulty/low","color":"207de5"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1514822435000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4903","number":4903,"title":"docs: change git installation command","body":"In docs/Developer/Git_Basics.rst, change git installation command from git-all to git.\nOpened by @mamat-rahmat at Gitter","comments":7,"createdAt":"2017-11-24T00:03:39Z","updatedAt":"2018-01-01T16:00:35Z","closedAt":"2018-01-01T16:00:35Z","state":"closed","user":{"login":"co-robo","avatarUrl":"https://avatars2.githubusercontent.com/u/29058257?v=4"},"owner":{"login":"co-robo","avatarUrl":"https://avatars2.githubusercontent.com/u/29058257?v=4"},"assignee":{"login":"nikhil-seth","avatarUrl":"https://avatars0.githubusercontent.com/u/32011091?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"importance/critical","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1535148976000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4904","number":4904,"title":"docs: Explain unack usage explicitly","body":"Explain that unack is used for disapprove commit that is ack-ed by someone else.\ndifficulty/newcomer\nOpened by @mamat-rahmat at Gitter","comments":7,"createdAt":"2017-11-24T01:58:29Z","updatedAt":"2018-08-24T22:16:16Z","closedAt":null,"state":"open","user":{"login":"co-robo","avatarUrl":"https://avatars2.githubusercontent.com/u/29058257?v=4"},"owner":{"login":"co-robo","avatarUrl":"https://avatars2.githubusercontent.com/u/29058257?v=4"},"assignee":{"login":"darthgera123","avatarUrl":"https://avatars1.githubusercontent.com/u/30871411?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1511905544000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4905","number":4905,"title":"docs: \"tutorial\" page doesn't exist in README.rst","body":"In coala-html, the \"ABOUT\" section has a link to \"tutorial\", but that page doesn't exists.","comments":3,"createdAt":"2017-11-24T05:07:25Z","updatedAt":"2017-11-28T21:45:44Z","closedAt":"2017-11-28T21:45:19Z","state":"closed","user":{"login":"Lavenderjiang","avatarUrl":"https://avatars1.githubusercontent.com/u/22594040?v=4"},"owner":{"login":"Lavenderjiang","avatarUrl":"https://avatars1.githubusercontent.com/u/22594040?v=4"},"labels":[{"name":"status/invalid","color":"000000"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1512053709000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4914","number":4914,"title":"Write a commit-checklist for reviewers","body":"Especially for newcomers important.","comments":6,"createdAt":"2017-11-26T22:34:00Z","updatedAt":"2017-11-30T14:55:09Z","closedAt":null,"state":"open","user":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"owner":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"assignee":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/medium","color":"0052cc"},{"name":"status/needs design","color":"5319e7"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1512278322000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4916","number":4916,"title":"Support `--files /dev/null`","body":"Opened by @adtac at Gitter","comments":18,"createdAt":"2017-11-28T12:20:45Z","updatedAt":"2017-12-03T05:18:42Z","closedAt":"2017-12-03T05:18:34Z","state":"closed","user":{"login":"co-robo","avatarUrl":"https://avatars2.githubusercontent.com/u/29058257?v=4"},"owner":{"login":"co-robo","avatarUrl":"https://avatars2.githubusercontent.com/u/29058257?v=4"},"assignee":{"login":"starlord1311","avatarUrl":"https://avatars3.githubusercontent.com/u/32419214?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"},{"name":"status/needs discussion","color":"d93f0b"},{"name":"status/wontfix/not happening","color":"000000"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1527702444000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4927","number":4927,"title":"Git_Basics.rst: Mention about first time Git Configration","body":"We need to have a mention about this for the benefit of people new to OSS.\nAnd working first time with Git and Github as well.\nref - https://git-scm.com/book/en/v2/Getting-Started-First-Time-Git-Setup","comments":6,"createdAt":"2017-11-30T13:41:52Z","updatedAt":"2018-05-30T17:47:24Z","closedAt":null,"state":"open","user":{"login":"mridubhatnagar","avatarUrl":"https://avatars3.githubusercontent.com/u/16894718?v=4"},"owner":{"login":"mridubhatnagar","avatarUrl":"https://avatars3.githubusercontent.com/u/16894718?v=4"},"assignee":{"login":"sanshay","avatarUrl":"https://avatars3.githubusercontent.com/u/30698563?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1513959689000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4928","number":4928,"title":"Don't require a `--files` flag if we're running only global bears","body":"","comments":6,"createdAt":"2017-11-30T14:22:18Z","updatedAt":"2017-12-22T16:21:29Z","closedAt":null,"state":"open","user":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"owner":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"assignee":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4"},"labels":[{"name":"difficulty/medium","color":"0052cc"},{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1519260576000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4929","number":4929,"title":"mention a link in smart question in newcomers guide","body":"","comments":18,"createdAt":"2017-11-30T15:51:47Z","updatedAt":"2018-02-22T00:49:36Z","closedAt":"2018-02-22T00:49:36Z","state":"closed","user":{"login":"newbazz","avatarUrl":"https://avatars1.githubusercontent.com/u/25884863?v=4"},"owner":{"login":"newbazz","avatarUrl":"https://avatars1.githubusercontent.com/u/25884863?v=4"},"assignee":{"login":"priyanshsaxena","avatarUrl":"https://avatars2.githubusercontent.com/u/15215748?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1513203760000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4934","number":4934,"title":"API documentation: adding links to the homepage and user's guide","body":"I want to propose adding the links leading to the coala homepage and the coala 'For users' guides in the navigation panel of the Coala API Documentation.\nI propose this because it will make it easier to look up other information when the users are only on the API documentation page. This is mainly for the sake of new developers for reasons I will explain below. As to my knowledge, currently there isn't a way to go from the newcomer's guide to the other places directly. In my experience, I often need to look up information on the homepage or user's guide when I am completing the tasks for the new developers. For example, in step 0 -  Run Coala, I imagine many new developers would need to install Coala. Besides, new developers might want to familiarize themselves with the usage of Coala. And now if I only have the API doc page open, I would have to either google to find the other pages (or retrieve from bookmarks).\nAt the top of the newcomer's guide, there is already a line saying \"you might also want to look at our website\" with a link of the coala homepage. But I found that it feels more natural to go to the navigation panel and look for a link when you want to jump to a different page.","comments":1,"createdAt":"2017-12-02T01:40:23Z","updatedAt":"2017-12-13T22:22:40Z","closedAt":"2017-12-13T22:22:40Z","state":"closed","user":{"login":"zhongLxyz","avatarUrl":"https://avatars0.githubusercontent.com/u/25083417?v=4"},"owner":{"login":"zhongLxyz","avatarUrl":"https://avatars0.githubusercontent.com/u/25083417?v=4"},"assignee":{"login":"vddesai1998","avatarUrl":"https://avatars3.githubusercontent.com/u/24962153?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1515423640000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4939","number":4939,"title":"linter: GlobalBear example wrong in docstring","body":"https://github.com/coala/coala/blob/master/coalib/bearlib/abstractions/Linter.py#L780\nThe filename param doesn't exist in this scope.","comments":3,"createdAt":"2017-12-04T14:37:28Z","updatedAt":"2018-01-08T15:00:40Z","closedAt":"2018-01-08T15:00:40Z","state":"closed","user":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"owner":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"assignee":{"login":"stobis","avatarUrl":"https://avatars1.githubusercontent.com/u/23073061?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1513206664000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4940","number":4940,"title":"linter documentation: Use single quotes for strings instead of double quotes in docstrings","body":"... where applicable to conform with our style guides.\nSometimes double quotes shall be kept, for example when there's a single quote inside them. You can always check up the right representation py starting python and entering it:\n>>> \"A string\"\n'A string'\n>>> \"A string and '\"\n\"A string and '\"\n>>>","comments":3,"createdAt":"2017-12-04T15:26:38Z","updatedAt":"2017-12-13T23:11:04Z","closedAt":"2017-12-13T23:11:04Z","state":"closed","user":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"owner":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"assignee":{"login":"starkblaze01","avatarUrl":"https://avatars3.githubusercontent.com/u/22374162?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1523366093000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4952","number":4952,"title":"Add ShellCheckBear to .coafile","body":"We dont have an explicit coding standard for shell scripts.\nI believe we've mostly been using two space indents, but find the most common between here and the coala-bears repo, and force it here.\n(There will be a second issue for updating coala-bears.)\nTry to avoid using the docker; install shellcheck directly using apt-get if possible.","comments":4,"createdAt":"2017-12-08T18:05:20Z","updatedAt":"2018-04-10T13:14:53Z","closedAt":"2018-04-10T13:14:53Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"sangamcse","avatarUrl":"https://avatars2.githubusercontent.com/u/26381717?v=4"},"labels":[{"name":"difficulty/medium","color":"0052cc"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1512938146000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4954","number":4954,"title":"Update `ASCIINEMA` of `GitCommitBear `","body":"Update ASCIINEMA:\nAdd detailed explanation of GitCommitBear, show working with the help of basic git commands(use git log) it will clear the workflow, as currently GitCommitBear runs only on HEAD of commit. It can't patch commit messages.\ndifficulty/low","comments":3,"createdAt":"2017-12-08T19:59:38Z","updatedAt":"2017-12-10T20:35:46Z","closedAt":"2017-12-10T20:35:38Z","state":"closed","user":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4"},"owner":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4"},"labels":[{"name":"status/invalid","color":"000000"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1513567691000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4955","number":4955,"title":"Add docstring for coala_modes.py mode_normal","body":"This function should have a proper docstring, and indicate that log_printer is unused & deprecated.","comments":4,"createdAt":"2017-12-09T06:25:15Z","updatedAt":"2017-12-18T03:28:11Z","closedAt":"2017-12-18T03:28:11Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"vrishank97","avatarUrl":"https://avatars2.githubusercontent.com/u/14790428?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/low","color":"207de5"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1516301676000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4957","number":4957,"title":"--apply-patches and ApplyPatchAction does not work as expected","body":"Steps to Reproduce\n\nUsing https://github.com/coala/gci-leaders codebase\nWith the following .coafile (minimal version of what's in the repo)\n\n[all]\nfiles = lib/*.js, static/js/*.js\neslint_config = .eslintrc\nbears = ESLintBear\n\n\nRun coala --apply-patches\n\nActual Results\nThe problem was not fixed automatically, instead it's asking what to do, like the usual coala run.\nExpected Results\nThe problem is fixed automatically without user's intervention.\nAdditional Information:\n❯ coala --version         \n0.12.0.dev20171202193440\n\n\ndefault_actions = *: ApplyPatchAction also does not work.\nPatching with coala using interactive CLI does work as expected.","comments":6,"createdAt":"2017-12-09T13:42:29Z","updatedAt":"2018-01-18T18:54:36Z","closedAt":"2018-01-18T18:54:36Z","state":"closed","user":{"login":"blazeu","avatarUrl":"https://avatars0.githubusercontent.com/u/1438859?v=4"},"owner":{"login":"blazeu","avatarUrl":"https://avatars0.githubusercontent.com/u/1438859?v=4"},"assignee":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4"},"labels":[{"name":"area/CLI","color":"006b75"},{"name":"difficulty/medium","color":"0052cc"},{"name":"importance/high","color":"eb6420"},{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1515716182000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4959","number":4959,"title":"Linter documentation: Document that severity_map is case insensitive.","body":"So passing this\n{'E': RESULT_SEVERITY.MAJOR}\nor this\n{'e': RESULT_SEVERITY.MAJOR}\nmakes no difference.\ndifficulty/low so newcomers aren't confused about what this issue tries to achieve and this issue requires some reading on @linter ;)","comments":7,"createdAt":"2017-12-10T17:28:53Z","updatedAt":"2018-01-12T00:16:22Z","closedAt":null,"state":"open","user":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"owner":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"assignee":{"login":"clarammdantas","avatarUrl":"https://avatars1.githubusercontent.com/u/15564640?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/low","color":"207de5"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1518468591000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4962","number":4962,"title":"Create a asciinema video that helps newcomer with initial steps to start contributing to the org","body":"1)To fork the repo\n2) git clone of the forked repo\n3) branching from master\n4) add, commit push\n1 video showing all this for 1 repository.","comments":3,"createdAt":"2017-12-12T09:42:54Z","updatedAt":"2018-02-12T20:49:51Z","closedAt":null,"state":"open","user":{"login":"mridubhatnagar","avatarUrl":"https://avatars3.githubusercontent.com/u/16894718?v=4"},"owner":{"login":"mridubhatnagar","avatarUrl":"https://avatars3.githubusercontent.com/u/16894718?v=4"},"assignee":{"login":"sangamcse","avatarUrl":"https://avatars2.githubusercontent.com/u/26381717?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/low","color":"207de5"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1513187041000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4964","number":4964,"title":"Error while running Writing linter bear Tutorial","body":"Steps to Reproduce:\n\nCopy final code for PylintTutorialBear from coala documentation here.\nCreate any sample.py in the same folder.\nRun the following\n\ncoala --bear-dirs=. --bears=PylintTutorialBear --files=sample.py --flush-cache -V\n\nExpected result:\npylint to run on sample.py\nActual result:\nerror displayed with following logs\n\nExtra details:\nWindows 10\ncoala v0.11.0","comments":2,"createdAt":"2017-12-12T15:33:45Z","updatedAt":"2017-12-13T17:44:01Z","closedAt":"2017-12-13T06:33:51Z","state":"closed","user":{"login":"parimatrix","avatarUrl":"https://avatars1.githubusercontent.com/u/25114873?v=4"},"owner":{"login":"parimatrix","avatarUrl":"https://avatars1.githubusercontent.com/u/25114873?v=4"},"labels":[{"name":"status/invalid","color":"000000"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1520653019000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4968","number":4968,"title":"Problem in the getting started with coala tutorial","body":"Getting Started with Coala Tutorial has some problems\nI followed the link Getting Started and cloned the tutorial repo.\nSteps to reproduce\n\ncd coala-tutorial\ncoala --files=src/*.c --bears=SpaceConsistencyBear --save\n\nActual Results\n[cli]\nbears = SpaceConsistencyBear\nfiles = src/*.c\nuse_spaces = True\n\nExpected Results\n[Default]\nbears = SpaceConsistencyBear\nfiles = src/*.c\nuse_spaces = yeah\n\nReproducability\nIt would be great if somebody can tell whether this is just with me or is occuring with others too\nAdditional Information\nI tried to change the\n[cli]\n\nto\n[Default]\n\nAnd then tested the implicit inheritance but instead received\n[WARNING][22:48:11] Implicit 'Default' section inheritance is deprecated. It will be removed soon. To silence this warning remove settings in the 'Default' section from your coafile. You can use dots to specify inheritance: the section 'all.python' will inherit all settings from 'all'.\n\n\nWhile I was filling up the survey of coala usabiltiy i read about this cEPS. The proposal there is quite relevant to the problems i am facing. Am i facing these deviations from expected result because of this??","comments":11,"createdAt":"2017-12-13T17:43:48Z","updatedAt":"2018-03-10T03:36:59Z","closedAt":"2018-03-10T03:36:59Z","state":"closed","user":{"login":"Nshul","avatarUrl":"https://avatars3.githubusercontent.com/u/26252118?v=4"},"owner":{"login":"Nshul","avatarUrl":"https://avatars3.githubusercontent.com/u/26252118?v=4"},"assignee":{"login":"Rahmeen14","avatarUrl":"https://avatars3.githubusercontent.com/u/24973238?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"importance/high","color":"eb6420"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1532076556000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4972","number":4972,"title":"coala_modes.py: Deprecate log_printer param for mode_normal","body":"Issue\nlog_printer param is now deprecated and unused.\nProposal\nProvide a deprecation warning (with logging.warn) if log_printer param is used.\nEDIT by @Makman2:\nRemoved DeprecationWarning and rephrased to not confuse with the class from the warnings module (as we don't use those warnings, at least not yet)","comments":14,"createdAt":"2017-12-14T07:26:42Z","updatedAt":"2018-07-20T08:49:16Z","closedAt":"2018-07-20T08:49:16Z","state":"closed","user":{"login":"vrishank97","avatarUrl":"https://avatars2.githubusercontent.com/u/14790428?v=4"},"owner":{"login":"vrishank97","avatarUrl":"https://avatars2.githubusercontent.com/u/14790428?v=4"},"assignee":{"login":"gabi0348","avatarUrl":"https://avatars2.githubusercontent.com/u/32877573?v=4"},"labels":[{"name":"area/CLI","color":"006b75"},{"name":"difficulty/low","color":"207de5"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1516050203000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4973","number":4973,"title":"Installation page should mention about versions of python and pip3.","body":"The home page for installation should mention about the minimum versions of python and pip required to install coala.The same is mentioned in the installation docs(Refer #237) but should also be there at Home page.I think the new user would want to install coala in one go and since the details aren't mentioned on the home page,the same becomes difficult.\nAdditional Information\nI would like to work on this,if approved.","comments":6,"createdAt":"2017-12-14T09:45:44Z","updatedAt":"2018-01-15T21:03:23Z","closedAt":"2018-01-15T21:03:23Z","state":"closed","user":{"login":"avirlrma","avatarUrl":"https://avatars1.githubusercontent.com/u/22575238?v=4"},"owner":{"login":"avirlrma","avatarUrl":"https://avatars1.githubusercontent.com/u/22575238?v=4"},"assignee":{"login":"Prabhat-IIT","avatarUrl":"https://avatars0.githubusercontent.com/u/20185657?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1522433262000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4975","number":4975,"title":"Why coala show those results which have been fixed already","body":"Why coala shows those results which have been fixed already.\nSteps to reproduce\n\nUsing PycodestyleBear on a file and file has some lines in which no. of character > 79\nSo now when coala prompt for the first line E501 line too long(83 > 79 characters)\nI opened the file (by pressing 1) and fix all the lines which had no. of characters more than 79 and exit.So now after this why coala prompt the same message for those lines which has been fixed.","comments":7,"createdAt":"2017-12-16T12:30:47Z","updatedAt":"2018-03-30T18:07:42Z","closedAt":null,"state":"open","user":{"login":"khanchi97","avatarUrl":"https://avatars0.githubusercontent.com/u/22270415?v=4"},"owner":{"login":"khanchi97","avatarUrl":"https://avatars0.githubusercontent.com/u/22270415?v=4"},"labels":[{"name":"difficulty/high","color":"B319e7"},{"name":"importance/medium","color":"fbca04"},{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1515447193000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4976","number":4976,"title":"Disambiguation in \"Closes xyz\" vs \"Fixes xyz\"","body":"See original issue for details:\ncoala/documentation#465","comments":3,"createdAt":"2017-12-16T19:10:58Z","updatedAt":"2018-01-08T21:33:13Z","closedAt":"2018-01-08T21:33:13Z","state":"closed","user":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"owner":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"assignee":{"login":"alphadose","avatarUrl":"https://avatars1.githubusercontent.com/u/25170258?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/low","color":"207de5"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1513486013000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4978","number":4978,"title":"Use correct Link ","body":"coala/coalib/parsing/DefaultArgParser.py\n    \n    \n         Line 40\n      in\n      0599b0a\n    \n    \n    \n    \n\n        \n          \n           http://coala.io/languages, or run:: \n        \n    \n  \n\n\nwhen we click on link it redirect to https://coala.io/#/home\nBut It should have to redirect to https://coala.io/#/languages\ndifficulty/newcomer","comments":1,"createdAt":"2017-12-16T21:36:58Z","updatedAt":"2017-12-17T04:46:53Z","closedAt":"2017-12-17T04:46:53Z","state":"closed","user":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4"},"owner":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4"},"labels":[{"name":"status/invalid","color":"000000"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1513703873000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4982","number":4982,"title":"Create Indentation aspects under Formatting.Spacing","body":"Create an aspects named Indentation in files Formatting.py. The new aspects should have fullname of root.Formatting.Spacing.Indentation. It should have atleast the following taste:\n\nindent_type - what type of indentation used, could be tab or space\nindent_size - number of spaces per indentation level","comments":1,"createdAt":"2017-12-18T07:18:02Z","updatedAt":"2017-12-19T17:17:53Z","closedAt":"2017-12-19T17:17:53Z","state":"closed","user":{"login":"adhikasp","avatarUrl":"https://avatars2.githubusercontent.com/u/6151302?v=4"},"owner":{"login":"adhikasp","avatarUrl":"https://avatars2.githubusercontent.com/u/6151302?v=4"},"assignee":{"login":"biscuitsnake","avatarUrl":"https://avatars0.githubusercontent.com/u/11334474?v=4"},"labels":[{"name":"area/aspects","color":"000000"},{"name":"difficulty/medium","color":"0052cc"},{"name":"initiatives/gci","color":"e99695"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1523925747000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4985","number":4985,"title":"Git Basics: Incorporate http://ohshitgit.com/","body":"http://ohshitgit.com/ contains helpful git snippets when something has gone wrong.","comments":9,"createdAt":"2017-12-18T16:24:09Z","updatedAt":"2018-04-17T00:42:27Z","closedAt":"2018-04-17T00:42:27Z","state":"closed","user":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"owner":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"assignee":{"login":"yzgyyang","avatarUrl":"https://avatars0.githubusercontent.com/u/16748524?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1523110530000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4992","number":4992,"title":"Loosen pin on colorlog","body":"colorlog is pinned to 2.x. colorlog 3.0 has been released for a few months, and is now starting to cause conflicts in versions,  which causes coala to fail.\ne.g. https://travis-ci.org/jayvdb/corobo/builds/319016053#L742\nThe changes in colorlog 3.0 and 3.1 do not adversely effect coala.","comments":1,"createdAt":"2017-12-20T06:30:30Z","updatedAt":"2018-04-07T14:15:30Z","closedAt":"2018-04-07T14:15:30Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"area/CI","color":"eb6420"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1529171983000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4999","number":4999,"title":"Bears operating on directories","body":"Currently there's only ProjectBear, that works on all files at once. It's worth to have another bear base that only operates on directories, or maybe even both, files and directories! Maybe it can be even integrated into ProjectBear. In any way, a concept is needed to make it work properly, also with respect to caching it has to be developed carefully (once it's being implemented).","comments":17,"createdAt":"2017-12-23T01:44:45Z","updatedAt":"2018-06-16T17:59:43Z","closedAt":"2018-06-16T17:59:43Z","state":"closed","user":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"owner":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"milestone":{"title":"Nextgen-Core","createdAt":"2017-06-09T22:33:56Z","dueOn":null,"state":"open","htmlUrl":"https://github.com/coala/coala/milestone/18","description":""},"labels":[{"name":"area/core","color":"eb6420"},{"name":"difficulty/high","color":"B319e7"},{"name":"status/needs design","color":"5319e7"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1514930215000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5001","number":5001,"title":"Development Setup Notes: redirecting link not woking properly","body":"In Development Setup Notes, there is a link under 'Using venv' section the next part which should redirect to 'installing from git' section but it is redirecting to some other Permalink.","comments":3,"createdAt":"2017-12-25T19:52:11Z","updatedAt":"2018-01-02T21:56:55Z","closedAt":"2018-01-02T21:56:55Z","state":"closed","user":{"login":"Mohit17067","avatarUrl":"https://avatars3.githubusercontent.com/u/32643701?v=4"},"owner":{"login":"Mohit17067","avatarUrl":"https://avatars3.githubusercontent.com/u/32643701?v=4"},"assignee":{"login":"Mohit17067","avatarUrl":"https://avatars3.githubusercontent.com/u/32643701?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1515103719000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5002","number":5002,"title":"Development setup notes: 'installing from git ' link not working properly","body":"In Development Setup Notes, there is a link under 'Using virtualenv' section installing from git which should redirect to 'installing from git' section but it is redirecting at the top of the page.","comments":1,"createdAt":"2017-12-25T20:14:31Z","updatedAt":"2018-01-04T22:08:39Z","closedAt":"2018-01-04T22:08:39Z","state":"closed","user":{"login":"Mohit17067","avatarUrl":"https://avatars3.githubusercontent.com/u/32643701?v=4"},"owner":{"login":"Mohit17067","avatarUrl":"https://avatars3.githubusercontent.com/u/32643701?v=4"},"assignee":{"login":"sachincool","avatarUrl":"https://avatars2.githubusercontent.com/u/25671488?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1517091657000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5003","number":5003,"title":"Testing_Bears.rst: Add `files` parameter in `Result.from_values()`","body":"[Result.from_values('TooManyLinesBear',\n                      'Too many lines')]\n\nyou can see that https://github.com/coala/coala/blob/master/coalib/results/Result.py#L153\nfiles parameter is required by from_values() method which is non-optional.\narea/documentation","comments":3,"createdAt":"2017-12-26T04:04:57Z","updatedAt":"2018-01-27T22:20:57Z","closedAt":"2018-01-27T22:20:57Z","state":"closed","user":{"login":"khanchi97","avatarUrl":"https://avatars0.githubusercontent.com/u/22270415?v=4"},"owner":{"login":"khanchi97","avatarUrl":"https://avatars0.githubusercontent.com/u/22270415?v=4"},"assignee":{"login":"kriti21","avatarUrl":"https://avatars3.githubusercontent.com/u/19872082?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1520702764000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5009","number":5009,"title":"Helper function to compare version of installed packages.","body":"We need a helper function that returns a boolean value if the user has required version of a given package.\nSomething like:\n>version_check('libclang-py3', '3.4.0')\ntrue\n\n>version_check('libclang-py3', '3.2.1')\nfalse\n\nUse Case:\nIn #3847 we need to check the clang version of the user.\nWe can use pkg_resources to get the version of installed modules.","comments":6,"createdAt":"2017-12-28T17:45:11Z","updatedAt":"2018-03-10T17:26:04Z","closedAt":"2018-03-10T17:26:04Z","state":"closed","user":{"login":"nvzard","avatarUrl":"https://avatars0.githubusercontent.com/u/19310512?v=4"},"owner":{"login":"nvzard","avatarUrl":"https://avatars0.githubusercontent.com/u/19310512?v=4"},"assignee":{"login":"nvzard","avatarUrl":"https://avatars0.githubusercontent.com/u/19310512?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1511336715000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4527","number":4527,"title":"Add a @aspectized decorator","body":"Relates to https://gitlab.com/coala/GSoC-2017/issues/319\nIn many aspect handling functions we do:\ndef something(..., aspect, ...):\n    if not isaspect(aspect):\n        aspect = coalib.bearlib.aspects[aspect]\n    ...\nThis should be generalized with an @aspectized decorator like:\nfrom inspect import getfullargspec\n\nfrom decorator import decorator\n\n\ndef aspectized(func):\n    spec = getfullargspec(func)\n\n    if 'aspect' in spec.args:\n        argindex = spec.args.index('aspect')\n\n        def caller(func, *args, **kwargs):\n            aspect = args[argindex]\n            if not isaspect(aspect):\n                aspect = coala_aspects[aspect]\n            return func(*(args[:argindex] + (aspect, ) + args[argindex + 1:]),\n                        **kwargs)\n\n    elif 'aspect' in spec.kwonlyargs:\n\n        def caller(func, *args, **kwargs):\n            aspect = kwargs['aspect']\n            if not isaspect(aspect):\n                kwargs['aspect'] = coala_aspects[aspect]\n            return func(*args, **kwargs)\n\n    else:\n        raise TypeError(\"{}() has no 'aspect' argument\".format(func.__qualname__))\n\n    return decorator(caller, func)\n@aspectized\ndef something(..., aspect, ...):\n    ...\n@aspectized\ndef kwonlything(..., *varargs, aspect='aspectsYEAH', ...):\n    ...\n@jayvdb @Udayan12167 @sils @sims1253 @coala/aspects-developers","comments":0,"createdAt":"2017-07-22T15:08:43Z","updatedAt":"2017-11-22T07:45:15Z","closedAt":null,"state":"open","user":{"login":"userzimmermann","avatarUrl":"https://avatars3.githubusercontent.com/u/2088633?v=4"},"owner":{"login":"userzimmermann","avatarUrl":"https://avatars3.githubusercontent.com/u/2088633?v=4"},"assignee":{"login":"adhikasp","avatarUrl":"https://avatars2.githubusercontent.com/u/6151302?v=4"},"milestone":{"title":"#aspectsYEAH","createdAt":"2017-05-09T22:10:19Z","dueOn":null,"state":"open","htmlUrl":"https://github.com/coala/coala/milestone/17","description":"The mother of all futures of coala!\r\n\r\nhttps://github.com/orgs/coala/projects/3\r\n\r\nhttps://github.com/orgs/coala/projects/2\r\n"},"labels":[{"name":"area/aspects","color":"000000"},{"name":"cool and awesome","color":"0052cc"},{"name":"type/codestyle","color":"d4c5f9"},{"name":"type/feature","color":"0052cc"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1511336372000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4528","number":4528,"title":"AspectList: Override manipulation methods to check for aspect input","body":"Relates to https://gitlab.com/coala/GSoC-2017/issues/383\nAs originally stated in #4397 (comment) , AspectList.__init__ checks every item of the input sequence if it's an aspect class or instance and tries to create it from string otherwise, but every inherited list manipulation method doesn't. So they must be overridden: .append, .extend, .__setitem__, .__iadd__. In contrast to the others, .append could simply get @aspectized according to #4527\n@jayvdb @Udayan12167 @sils @sims1253 @coala/aspects-developers","comments":0,"createdAt":"2017-07-22T15:17:46Z","updatedAt":"2017-11-22T07:39:32Z","closedAt":null,"state":"open","user":{"login":"userzimmermann","avatarUrl":"https://avatars3.githubusercontent.com/u/2088633?v=4"},"owner":{"login":"userzimmermann","avatarUrl":"https://avatars3.githubusercontent.com/u/2088633?v=4"},"assignee":{"login":"userzimmermann","avatarUrl":"https://avatars3.githubusercontent.com/u/2088633?v=4"},"milestone":{"title":"#aspectsYEAH","createdAt":"2017-05-09T22:10:19Z","dueOn":null,"state":"open","htmlUrl":"https://github.com/coala/coala/milestone/17","description":"The mother of all futures of coala!\r\n\r\nhttps://github.com/orgs/coala/projects/3\r\n\r\nhttps://github.com/orgs/coala/projects/2\r\n"},"labels":[{"name":"area/aspects","color":"000000"},{"name":"type/feature","color":"0052cc"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1532094267000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4529","number":4529,"title":"Fail fast in Session._schedule_bears","body":"there's a warning about stuff that could go wrong if some other stuff isn't properly coded; those kinds of warnings are usually never used and result in unneeded complexity","comments":12,"createdAt":"2017-07-22T15:35:01Z","updatedAt":"2018-07-20T13:44:27Z","closedAt":null,"state":"open","user":{"login":"sils","avatarUrl":"https://avatars0.githubusercontent.com/u/5716520?v=4"},"owner":{"login":"sils","avatarUrl":"https://avatars0.githubusercontent.com/u/5716520?v=4"},"assignee":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"milestone":{"title":"Nextgen-Core","createdAt":"2017-06-09T22:33:56Z","dueOn":null,"state":"open","htmlUrl":"https://github.com/coala/coala/milestone/18","description":""},"labels":[{"name":"area/core","color":"eb6420"},{"name":"difficulty/high","color":"B319e7"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1500907586000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4531","number":4531,"title":"Implement basic bear collection by aspect strategy","body":"Enable coala to collect bears based on aspects configuration.\nPR #4397 pave the way for bear to use aspects and its taste. But there are still no way for coala to choose bear based on those aspects.\nThe goal is, given a coafile with aspects and language information, pick bear(s) that will fullfill those requirement.\narea/aspect","comments":0,"createdAt":"2017-07-22T19:37:32Z","updatedAt":"2017-07-24T14:46:26Z","closedAt":"2017-07-24T14:46:26Z","state":"closed","user":{"login":"adhikasp","avatarUrl":"https://avatars2.githubusercontent.com/u/6151302?v=4"},"owner":{"login":"adhikasp","avatarUrl":"https://avatars2.githubusercontent.com/u/6151302?v=4"},"assignee":{"login":"adhikasp","avatarUrl":"https://avatars2.githubusercontent.com/u/6151302?v=4"},"labels":[{"name":"area/aspects","color":"000000"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1501285586000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4533","number":4533,"title":"load_configuration docstring has two \"arg_list\"","body":"difficulty/newcomer\nOpened by @jayvdb at gitter/coala/coala","comments":6,"createdAt":"2017-07-23T00:18:24Z","updatedAt":"2017-07-28T23:46:26Z","closedAt":"2017-07-28T23:46:26Z","state":"closed","user":{"login":"co-robo","avatarUrl":"https://avatars2.githubusercontent.com/u/29058257?v=4"},"owner":{"login":"co-robo","avatarUrl":"https://avatars2.githubusercontent.com/u/29058257?v=4"},"assignee":{"login":"adeora7","avatarUrl":"https://avatars2.githubusercontent.com/u/9638595?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1501870996000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4534","number":4534,"title":"ConfigurationGathering.py: Add :return: for warn_config_absent","body":"https://github.com/coala/coala/blob/master/coalib/settings/ConfigurationGathering.py#L138\ndifficulty/newcomer","comments":0,"createdAt":"2017-07-23T00:25:44Z","updatedAt":"2017-08-04T18:23:16Z","closedAt":"2017-08-04T18:23:16Z","state":"closed","user":{"login":"supergr35","avatarUrl":"https://avatars2.githubusercontent.com/u/23623348?v=4"},"owner":{"login":"supergr35","avatarUrl":"https://avatars2.githubusercontent.com/u/23623348?v=4"},"assignee":{"login":"IamRaviTejaG","avatarUrl":"https://avatars3.githubusercontent.com/u/4240489?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1500799412000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4539","number":4539,"title":"SectionFilling.py: Allow passing of custom fill_section functions","body":"It should be possible to use custom fill_section method for the method fill_settings instead of existing fill_section method in the \"SectionFilling.py\" .","comments":1,"createdAt":"2017-07-23T07:04:45Z","updatedAt":"2017-07-23T08:43:32Z","closedAt":"2017-07-23T08:43:32Z","state":"closed","user":{"login":"satwikkansal","avatarUrl":"https://avatars1.githubusercontent.com/u/10217535?v=4"},"owner":{"login":"satwikkansal","avatarUrl":"https://avatars1.githubusercontent.com/u/10217535?v=4"},"assignee":{"login":"satwikkansal","avatarUrl":"https://avatars1.githubusercontent.com/u/10217535?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1501163339000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4541","number":4541,"title":"ConfigurationGatheringTest test_get_filtered_bears returns bears in different order","body":"In all my builds of the docker image, the bears returned from get_filtered_bears are ordered differently than the order occurring on the builds in this repository.\nhttps://travis-ci.org/jayvdb/docker-coala-base/builds/256537055#L8433\nThe openSUSE docker is using 3.6.1, and there is a Travis jobs on this repo also with 3.6.1.\nI am not sure why the order is different.\nAllowing the order to be flexible using jayvdb@a8d8f3a , and using that on the docker (jayvdb/docker-coala-base@8b1ff59) results in a green build.\nI suspect this means get_all_bears and other routines also have non-predictable ordering of results.","comments":4,"createdAt":"2017-07-23T09:12:20Z","updatedAt":"2017-07-27T13:48:59Z","closedAt":"2017-07-27T13:48:59Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"area/CI","color":"eb6420"},{"name":"area/tests","color":"bfd4f2"},{"name":"status/needs info","color":"006b75"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1500819496000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4542","number":4542,"title":"Implement Error reporting mechanism for DocumentationAPI","body":"we have to go around implementing a error reporting mechanism for the doc linting apis .\nOpened by @damngamerz at gitter//damngamerz","comments":0,"createdAt":"2017-07-23T14:17:52Z","updatedAt":"2017-07-23T14:18:16Z","closedAt":null,"state":"open","user":{"login":"co-robo","avatarUrl":"https://avatars2.githubusercontent.com/u/29058257?v=4"},"owner":{"login":"co-robo","avatarUrl":"https://avatars2.githubusercontent.com/u/29058257?v=4"},"assignee":{"login":"damngamerz","avatarUrl":"https://avatars2.githubusercontent.com/u/13048113?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1500869265000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4545","number":4545,"title":"Store \"tests/bear_tests\" bear count in a variable in tests.TestUtilities","body":"This number needs to be used in many locations. c.f. #4532\ndifficulty/low\nOpened by @jayvdb at gitter/coala/coala","comments":1,"createdAt":"2017-07-24T01:02:46Z","updatedAt":"2017-07-24T04:07:45Z","closedAt":"2017-07-24T04:07:45Z","state":"closed","user":{"login":"co-robo","avatarUrl":"https://avatars2.githubusercontent.com/u/29058257?v=4"},"owner":{"login":"co-robo","avatarUrl":"https://avatars2.githubusercontent.com/u/29058257?v=4"},"assignee":{"login":"adhikasp","avatarUrl":"https://avatars2.githubusercontent.com/u/6151302?v=4"},"labels":[{"name":"area/tests","color":"bfd4f2"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1502980154000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4548","number":4548,"title":"DocumentationAPI Bug with `C` test cases.","body":"We now use markers.split() to find docstrings. Amend the changes to assemble()\nhttps://github.com/coala/coala/pull/4530/files#r128902524\nOpened by @damngamerz at gitter//damngamerz","comments":7,"createdAt":"2017-07-24T06:21:16Z","updatedAt":"2017-08-17T14:29:14Z","closedAt":"2017-08-17T14:29:14Z","state":"closed","user":{"login":"co-robo","avatarUrl":"https://avatars2.githubusercontent.com/u/29058257?v=4"},"owner":{"login":"co-robo","avatarUrl":"https://avatars2.githubusercontent.com/u/29058257?v=4"},"assignee":{"login":"damngamerz","avatarUrl":"https://avatars2.githubusercontent.com/u/13048113?v=4"},"labels":[{"name":"area/tests","color":"bfd4f2"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1500907588000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4551","number":4551,"title":"coalaJSON: Change wrong variable usage","body":"Commit 07092f2 introduce variable TEST_BEARS_COUNT that used as global var for various test that check quantity of all tests bear.\nBut change in CoalaJSONTest::test_version_conflict_in_collecting_bears() is wrong because the number 13 there does NOT assert bear quantity but an exit code when coala is error'd out.\nChange it back.","comments":1,"createdAt":"2017-07-24T11:01:57Z","updatedAt":"2017-07-24T14:46:28Z","closedAt":"2017-07-24T14:46:28Z","state":"closed","user":{"login":"adhikasp","avatarUrl":"https://avatars2.githubusercontent.com/u/6151302?v=4"},"owner":{"login":"adhikasp","avatarUrl":"https://avatars2.githubusercontent.com/u/6151302?v=4"},"assignee":{"login":"adhikasp","avatarUrl":"https://avatars2.githubusercontent.com/u/6151302?v=4"},"labels":[{"name":"area/tests","color":"bfd4f2"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1526750455000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4552","number":4552,"title":"Remove all use of line continuation","body":"\\ in Python is an abomination.\nFrom a ast perspective it makes it very hard to separate logical lines from physical lines, requiring any ast reader to have lots of extra crazy code to handle this one piece of unnecessary syntax.\nAdd it to the banned word list in .coafile\n$ git grep '\\\\$' coalib\ncoalib/bearlib/aspects/Smell.py:            System.out.printf(\"Welcome %s %s, a %d-year-old %s \"\\\ncoalib/bearlib/aspects/Smell.py:\"from %s who works as a%s\\n\",firstName, lastName, age, gender, city, \\\ncoalib/bearlib/languages/Language.py:            assert isclass(arg), \\\ncoalib/bearlib/languages/Language.py:                'This decorator is made for classes. Did you mean to use ' \\\ncoalib/bearlib/languages/Language.py:    OrderedDict([(<Version('2.7')>, '#'), (<Version('3.3')>, '#'), \\\ncoalib/bearlib/languages/documentation/DocumentationComment.py:        >>> from coalib.bearlib.languages.documentation.DocumentationComment \\\ncoalib/bearlib/languages/documentation/DocumentationComment.py:        >>> from coalib.bearlib.languages.documentation.DocstyleDefinition \\\ncoalib/coala_main.py:from coalib.results.result_actions.PrintMoreInfoAction import  \\\ncoalib/coala_main.py:from coalib.results.result_actions.PrintDebugMessageAction import \\\ncoalib/misc/BuildManPage.py:        $ python setup.py build_manpage --output=coala.1 \\\ncoalib/results/Result.py:    >>> r = Result('origin','{arg1} and {arg2}', \\\ncoalib/settings/Annotations.py:    ValueError: Couldn't convert value 'str' to any specified type or find it \\\ncoalib/testing/LocalBearTestHelper.py:        assert bear_output_generator is not None, \\\ncoalib/testing/LocalBearTestHelper.py:                      tempfile_kwargs=tempfile_kwargs) as (file, fname), \\","comments":5,"createdAt":"2017-07-24T12:27:55Z","updatedAt":"2018-05-19T17:20:55Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"raduklb","avatarUrl":"https://avatars2.githubusercontent.com/u/36372694?v=4"},"labels":[{"name":"area/aspects","color":"000000"},{"name":"area/tests","color":"bfd4f2"},{"name":"difficulty/low","color":"207de5"},{"name":"importance/medium","color":"fbca04"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1500903832000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4553","number":4553,"title":"Add ShowAppliedActions","body":"An action that will show a history of actions in a run of coala","comments":0,"createdAt":"2017-07-24T12:31:28Z","updatedAt":"2017-07-24T13:43:52Z","closedAt":"2017-07-24T13:43:52Z","state":"closed","user":{"login":"Nosferatul","avatarUrl":"https://avatars2.githubusercontent.com/u/15227444?v=4"},"owner":{"login":"Nosferatul","avatarUrl":"https://avatars2.githubusercontent.com/u/15227444?v=4"},"assignee":{"login":"Nosferatul","avatarUrl":"https://avatars2.githubusercontent.com/u/15227444?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1510071574000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4556","number":4556,"title":"import Linguist to Languages","body":"Opened by @jayvdb at gitter/coala/coala","comments":7,"createdAt":"2017-07-25T05:06:18Z","updatedAt":"2017-11-07T16:19:34Z","closedAt":null,"state":"open","user":{"login":"co-robo","avatarUrl":"https://avatars2.githubusercontent.com/u/29058257?v=4"},"owner":{"login":"co-robo","avatarUrl":"https://avatars2.githubusercontent.com/u/29058257?v=4"},"labels":[{"name":"difficulty/medium","color":"0052cc"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1502120706000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4559","number":4559,"title":"Ability to add explanation of sections in coafile","body":"When I have the following section:\n[relative-imports]\nfiles = **.py\nlanguage = python\nbears = KeywordBear\nkeywords = from mypackage\nthe error message just tells people that The line contains the keyword 'from mypackage' which doesn't explain a lot. It would be cool if I could configure this as\n[relative-imports]\nfiles = **.py\nlanguage = python\nbears = KeywordBear\nkeywords = from mypackage\nexplanation = Use relative importing everywhere. Instead of `from mypackage import foo`, write `from . import foo` or the equivalent.\nand have that explanatory text pop up when there's an error. This can also be useful for other kinds of checks, for instance explaining the rationale for some section, or describing how to fix the errors, for instance\n[vulnerable-reqs]\nfiles = requirements.txt\nbears = PySafetyBear\nexplanation = Run `pip-compile --upgrade-package=<package>` to bump the version of the vulnerable package","comments":6,"createdAt":"2017-07-26T12:20:47Z","updatedAt":"2017-08-07T15:45:06Z","closedAt":null,"state":"open","user":{"login":"underyx","avatarUrl":"https://avatars0.githubusercontent.com/u/1060436?v=4"},"owner":{"login":"underyx","avatarUrl":"https://avatars0.githubusercontent.com/u/1060436?v=4"},"labels":[{"name":"type/feature","color":"0052cc"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1519677172000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4560","number":4560,"title":"Make `bear.BEAR_DEPS` instance bound","body":"Originated from #4436","comments":0,"createdAt":"2017-07-26T15:38:21Z","updatedAt":"2018-02-26T20:32:52Z","closedAt":"2018-02-26T20:32:52Z","state":"closed","user":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"owner":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"assignee":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"milestone":{"title":"Nextgen-Core","createdAt":"2017-06-09T22:33:56Z","dueOn":null,"state":"open","htmlUrl":"https://github.com/coala/coala/milestone/18","description":""},"labels":[{"name":"area/bears","color":"eb6420"},{"name":"area/core","color":"eb6420"},{"name":"difficulty/medium","color":"0052cc"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1501336986000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4561","number":4561,"title":"Make `bear.REQUIREMENTS` instance bound","body":"Originated from #4436","comments":1,"createdAt":"2017-07-26T15:38:23Z","updatedAt":"2017-07-29T14:03:06Z","closedAt":null,"state":"open","user":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"owner":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"assignee":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"milestone":{"title":"Nextgen-Core","createdAt":"2017-06-09T22:33:56Z","dueOn":null,"state":"open","htmlUrl":"https://github.com/coala/coala/milestone/18","description":""},"labels":[{"name":"area/bears","color":"eb6420"},{"name":"area/core","color":"eb6420"},{"name":"difficulty/medium","color":"0052cc"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1501148173000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4562","number":4562,"title":"Implement Root.Formatting aspect ","body":"","comments":0,"createdAt":"2017-07-27T06:48:17Z","updatedAt":"2017-07-27T09:36:13Z","closedAt":"2017-07-27T09:36:13Z","state":"closed","user":{"login":"AsnelChristian","avatarUrl":"https://avatars2.githubusercontent.com/u/10449314?v=4"},"owner":{"login":"AsnelChristian","avatarUrl":"https://avatars2.githubusercontent.com/u/10449314?v=4"},"assignee":{"login":"AsnelChristian","avatarUrl":"https://avatars2.githubusercontent.com/u/10449314?v=4"},"labels":[{"name":"area/aspects","color":"000000"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1503479542000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4563","number":4563,"title":"Coala didn't run with aspect only config","body":"In aspect only config, the mandatory setting is files, aspects, and language. But coala make files and bears a mandatory in ConfigurationGathering.py::warn_nonexistent_targets(). We need to modify it to check if bears OR aspects is present instead of only aspects.\nps. actually I already do this in my aspects PR but I think i mistakenly delete it when rebasing stuff :/","comments":0,"createdAt":"2017-07-27T09:48:20Z","updatedAt":"2017-08-23T09:12:22Z","closedAt":"2017-08-23T09:12:22Z","state":"closed","user":{"login":"adhikasp","avatarUrl":"https://avatars2.githubusercontent.com/u/6151302?v=4"},"owner":{"login":"adhikasp","avatarUrl":"https://avatars2.githubusercontent.com/u/6151302?v=4"},"assignee":{"login":"adhikasp","avatarUrl":"https://avatars2.githubusercontent.com/u/6151302?v=4"},"milestone":{"title":"#aspectsYEAH","createdAt":"2017-05-09T22:10:19Z","dueOn":null,"state":"open","htmlUrl":"https://github.com/coala/coala/milestone/17","description":"The mother of all futures of coala!\r\n\r\nhttps://github.com/orgs/coala/projects/3\r\n\r\nhttps://github.com/orgs/coala/projects/2\r\n"},"labels":[{"name":"area/aspects","color":"000000"},{"name":"area/config","color":"fbca04"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1530104617000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4566","number":4566,"title":"documentation_extraction_testdata default.py incorrectly labels strings as docstrings","body":"tests/bearlib/languages/documentation/documentation_extraction_testdata/default.py contains\n\"\"\"\nDocstring with layouted text.\n    layouts inside docs are preserved.\nthis is intended.\n\"\"\"\n\n\n\"\"\" Docstring inline with triple quotes.\n    Continues here. \"\"\"\n\nThat is incorrect based on the definition at https://www.python.org/dev/peps/pep-0257/#what-is-a-docstring\nPlease revise the text to call them an unassigned string literals, and remove mention of 'doc' anywhere in the enclosed text, or just remove them as they are not particularly useful.\nThey are noops.  Junk.  Not readily available in the python model (even accessing them using inspect is going to be painful).  i.e. Dead code. cc @RJ722 & @jendrikseipp . This might be a good stretch goal, if vulture doesnt already do this.  It is hard, as it requires a good understanding of docstrings.","comments":8,"createdAt":"2017-07-27T11:44:52Z","updatedAt":"2018-06-27T13:03:37Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"area/languages","color":"d4c5f9"},{"name":"area/tests","color":"bfd4f2"},{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"importance/medium","color":"fbca04"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1503733035000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4567","number":4567,"title":"Exit status not set when bear failed to run","body":"As seen with coala/coala-bears#1955 , GitCommitBear fails but the exit status is not set.\n[nltk_data] HTTP Error 403: Forbidden.\n[WARNING][11:21:39] Bear GitCommitBear failed to run. Take a look at debug messages (`-V`) for further information.\n\nhttps://travis-ci.org/jayvdb/coala/jobs/258099527#L1651","comments":8,"createdAt":"2017-07-27T12:05:23Z","updatedAt":"2017-08-26T07:37:15Z","closedAt":"2017-08-26T07:37:15Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4"},"labels":[{"name":"area/CI","color":"eb6420"},{"name":"difficulty/low","color":"207de5"},{"name":"importance/high","color":"eb6420"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1501323768000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4576","number":4576,"title":"Unexpected keyword argument in `new_process_output(...)`","body":"By @jayvdb:\nnew_process_output() got an unexpected keyword argument 'cc_threshold'\nhttps://travis-ci.org/coala/docker-coala-base/builds/256537062\nThis may have been a hidden error, exposed by recent improvement to coala core testing, or maybe something more sinister.","comments":1,"createdAt":"2017-07-28T16:11:10Z","updatedAt":"2017-07-29T10:22:48Z","closedAt":"2017-07-29T10:22:48Z","state":"closed","user":{"login":"yash-nisar","avatarUrl":"https://avatars1.githubusercontent.com/u/14862976?v=4"},"owner":{"login":"yash-nisar","avatarUrl":"https://avatars1.githubusercontent.com/u/14862976?v=4"},"assignee":{"login":"yash-nisar","avatarUrl":"https://avatars1.githubusercontent.com/u/14862976?v=4"},"labels":[{"name":"area/CI","color":"eb6420"},{"name":"area/tests","color":"bfd4f2"},{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1503836332000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4580","number":4580,"title":"Ask for ``language`` if running coala with aspect","body":"language is mandatory setting if section contain aspects. Ask input if doesn't exist.","comments":1,"createdAt":"2017-07-29T08:05:43Z","updatedAt":"2017-08-27T12:18:52Z","closedAt":"2017-08-27T12:18:52Z","state":"closed","user":{"login":"adhikasp","avatarUrl":"https://avatars2.githubusercontent.com/u/6151302?v=4"},"owner":{"login":"adhikasp","avatarUrl":"https://avatars2.githubusercontent.com/u/6151302?v=4"},"assignee":{"login":"adhikasp","avatarUrl":"https://avatars2.githubusercontent.com/u/6151302?v=4"},"milestone":{"title":"#aspectsYEAH","createdAt":"2017-05-09T22:10:19Z","dueOn":null,"state":"open","htmlUrl":"https://github.com/coala/coala/milestone/17","description":"The mother of all futures of coala!\r\n\r\nhttps://github.com/orgs/coala/projects/3\r\n\r\nhttps://github.com/orgs/coala/projects/2\r\n"},"labels":[{"name":"area/aspects","color":"000000"},{"name":"area/config","color":"fbca04"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1523952912000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4583","number":4583,"title":"FilterHelper.apply_filter: Add docstring","body":"FilterHelper.apply_filters has a docstring, but all the work is done in FilterHelper.apply_filter, which doesnt have a docstring yet.\nSee https://github.com/coala/coala/blob/master/coalib/parsing/FilterHelper.py#L9","comments":13,"createdAt":"2017-07-29T14:11:42Z","updatedAt":"2018-04-17T08:15:12Z","closedAt":"2018-04-17T08:15:12Z","state":"closed","user":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"owner":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"assignee":{"login":"Grox-Ni","avatarUrl":"https://avatars3.githubusercontent.com/u/14857092?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/low","color":"207de5"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1524687239000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4584","number":4584,"title":"NextGen-Core: Document new features","body":"GlobarBear now called ProjectBear, and LocalBear now called FileBear\nNew bear type: DependencyBear\nHow to work with dependency-bears\n\nDependency results can be accessed with self.dependency_results\nUsing DependencyBear\nWriting a dependency bear\n\nYou don't need to provide actual Result instances, other picklable types do work\n\n\n\n\nUsage of instance-bound Bear.BEAR_DEPS\nUsage of instance-bound Bear.REQUIREMENTS\nHow to override Bear and define task scheduling yourself\nFor external use: How to use Core.run\n\nHow to instantiate bears and how the core basically works (dependency-resolution, task scheduling, ...)\nThe result_callback and when it's called (not called on implicit dependency-results)\nUsing different executors\n\n\nCaching\n\nEDIT by @Makman2:\n\"Usage of instance-bound Bear.REQUIREMENTS\" is not ready yet and has conceptual problems.","comments":9,"createdAt":"2017-07-29T14:33:27Z","updatedAt":"2018-04-25T20:13:59Z","closedAt":"2018-04-25T20:13:59Z","state":"closed","user":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"owner":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"assignee":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4"},"milestone":{"title":"Nextgen-Core","createdAt":"2017-06-09T22:33:56Z","dueOn":null,"state":"open","htmlUrl":"https://github.com/coala/coala/milestone/18","description":""},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/medium","color":"0052cc"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1501366914000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4586","number":4586,"title":"Rename FilterHelper filter functions","body":"get_filtered_bears --> apply_filter\nfilter_bears --> apply_filters","comments":1,"createdAt":"2017-07-29T17:47:59Z","updatedAt":"2017-07-29T22:21:54Z","closedAt":"2017-07-29T22:21:54Z","state":"closed","user":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"owner":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"assignee":{"login":"shreyans800755","avatarUrl":"https://avatars2.githubusercontent.com/u/3727351?v=4"},"labels":[{"name":"area/CLI","color":"006b75"},{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"type/codestyle","color":"d4c5f9"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1501366915000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4590","number":4590,"title":"\"Reorder params in apply_filters function\"","body":"Opened by @shreyans800755 at gitter/coala/coala","comments":2,"createdAt":"2017-07-29T21:16:27Z","updatedAt":"2017-07-29T22:21:55Z","closedAt":"2017-07-29T22:21:55Z","state":"closed","user":{"login":"co-robo","avatarUrl":"https://avatars2.githubusercontent.com/u/29058257?v=4"},"owner":{"login":"co-robo","avatarUrl":"https://avatars2.githubusercontent.com/u/29058257?v=4"},"assignee":{"login":"shreyans800755","avatarUrl":"https://avatars2.githubusercontent.com/u/3727351?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1501366915000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4591","number":4591,"title":"\"Rename params & variables in apply_filters and apply_filter functions\" \"Rename it to make it more meaningful\"","body":"Opened by @shreyans800755 at gitter/coala/coala","comments":1,"createdAt":"2017-07-29T21:17:21Z","updatedAt":"2017-07-29T22:21:55Z","closedAt":"2017-07-29T22:21:55Z","state":"closed","user":{"login":"co-robo","avatarUrl":"https://avatars2.githubusercontent.com/u/29058257?v=4"},"owner":{"login":"co-robo","avatarUrl":"https://avatars2.githubusercontent.com/u/29058257?v=4"},"assignee":{"login":"shreyans800755","avatarUrl":"https://avatars2.githubusercontent.com/u/3727351?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1509975492000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4592","number":4592,"title":"Implement action allowing to ignore following results in CLI for rest of file","body":"","comments":16,"createdAt":"2017-07-29T23:06:00Z","updatedAt":"2017-11-06T13:38:12Z","closedAt":null,"state":"open","user":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"owner":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"labels":[{"name":"area/actions","color":"207de5"},{"name":"difficulty/high","color":"B319e7"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1501689202000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4594","number":4594,"title":"Introduce virtual base class for linters and use it to improve the check inside `LocalBearTestHelper`","body":"Instead of checking hasattr(cls, 'process_output') an isinstance(cls, Linter) is safer + easier to understand.\narea/tests\ntype/test\ndifficulty/low","comments":0,"createdAt":"2017-07-30T14:20:05Z","updatedAt":"2017-08-02T15:53:22Z","closedAt":"2017-08-02T15:53:22Z","state":"closed","user":{"login":"yash-nisar","avatarUrl":"https://avatars1.githubusercontent.com/u/14862976?v=4"},"owner":{"login":"yash-nisar","avatarUrl":"https://avatars1.githubusercontent.com/u/14862976?v=4"},"assignee":{"login":"yash-nisar","avatarUrl":"https://avatars1.githubusercontent.com/u/14862976?v=4"},"labels":[{"name":"area/lintbears","color":"ededed"},{"name":"area/tests","color":"bfd4f2"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1502465166000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4596","number":4596,"title":"Reorder API doc in Processing.instantiate_processes","body":"use_raw_files should be the last one in the API doc.","comments":0,"createdAt":"2017-07-30T16:46:55Z","updatedAt":"2017-08-11T15:26:06Z","closedAt":"2017-08-11T15:26:06Z","state":"closed","user":{"login":"Nosferatul","avatarUrl":"https://avatars2.githubusercontent.com/u/15227444?v=4"},"owner":{"login":"Nosferatul","avatarUrl":"https://avatars2.githubusercontent.com/u/15227444?v=4"},"assignee":{"login":"Asalle","avatarUrl":"https://avatars2.githubusercontent.com/u/4975074?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1502653499000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4597","number":4597,"title":"Improve usage string for --filter-by option in coala help","body":"Opened by @shreyans800755 at gitter/coala/coala","comments":37,"createdAt":"2017-07-30T19:29:09Z","updatedAt":"2017-08-13T19:44:59Z","closedAt":"2017-08-13T19:44:59Z","state":"closed","user":{"login":"co-robo","avatarUrl":"https://avatars2.githubusercontent.com/u/29058257?v=4"},"owner":{"login":"co-robo","avatarUrl":"https://avatars2.githubusercontent.com/u/29058257?v=4"},"assignee":{"login":"troublemagnet","avatarUrl":"https://avatars1.githubusercontent.com/u/28952053?v=4"},"labels":[{"name":"area/CLI","color":"006b75"},{"name":"difficulty/low","color":"207de5"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1501923152000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4598","number":4598,"title":"Add again `Execute <section>...","body":"","comments":0,"createdAt":"2017-07-31T16:12:35Z","updatedAt":"2017-08-05T08:52:32Z","closedAt":"2017-08-05T08:52:32Z","state":"closed","user":{"login":"Nosferatul","avatarUrl":"https://avatars2.githubusercontent.com/u/15227444?v=4"},"owner":{"login":"Nosferatul","avatarUrl":"https://avatars2.githubusercontent.com/u/15227444?v=4"},"assignee":{"login":"Nosferatul","avatarUrl":"https://avatars2.githubusercontent.com/u/15227444?v=4"},"labels":[{"name":"area/CLI","color":"006b75"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1503766954000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4599","number":4599,"title":"Add Generate Patches","body":"","comments":0,"createdAt":"2017-07-31T16:13:11Z","updatedAt":"2017-08-26T17:02:34Z","closedAt":"2017-08-26T17:02:34Z","state":"closed","user":{"login":"Nosferatul","avatarUrl":"https://avatars2.githubusercontent.com/u/15227444?v=4"},"owner":{"login":"Nosferatul","avatarUrl":"https://avatars2.githubusercontent.com/u/15227444?v=4"},"assignee":{"login":"Nosferatul","avatarUrl":"https://avatars2.githubusercontent.com/u/15227444?v=4"},"labels":[{"name":"area/CLI","color":"006b75"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1508171592000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4601","number":4601,"title":"In DocumentationExtraction, explain what the file is about in a docstring","body":"it should be a file level docstring explaining what the functions do, and how they integrate with the rest of the documentation parsing and extraction system","comments":2,"createdAt":"2017-07-31T22:30:51Z","updatedAt":"2017-10-16T16:33:12Z","closedAt":"2017-10-16T16:33:12Z","state":"closed","user":{"login":"SanketDG","avatarUrl":"https://avatars3.githubusercontent.com/u/8980971?v=4"},"owner":{"login":"SanketDG","avatarUrl":"https://avatars3.githubusercontent.com/u/8980971?v=4"},"assignee":{"login":"Asalle","avatarUrl":"https://avatars2.githubusercontent.com/u/4975074?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1503421696000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4602","number":4602,"title":"Make \"Chain Actions\" default","body":"","comments":0,"createdAt":"2017-08-01T10:24:05Z","updatedAt":"2017-08-22T17:08:16Z","closedAt":"2017-08-22T17:08:16Z","state":"closed","user":{"login":"Nosferatul","avatarUrl":"https://avatars2.githubusercontent.com/u/15227444?v=4"},"owner":{"login":"Nosferatul","avatarUrl":"https://avatars2.githubusercontent.com/u/15227444?v=4"},"assignee":{"login":"Nosferatul","avatarUrl":"https://avatars2.githubusercontent.com/u/15227444?v=4"},"labels":[{"name":"area/CLI","color":"006b75"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1535581277000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4604","number":4604,"title":"Write a Mesos scheduler for coala!","body":"Distributed code checking! Imagine running complex analysis on the Linux repo, but instead of taking 2 days, it takes 1h :)\nThis package may be the choice for the Mesos Framework API:\nhttps://github.com/daskos/mentor","comments":2,"createdAt":"2017-08-01T14:32:06Z","updatedAt":"2018-08-29T22:21:17Z","closedAt":null,"state":"open","user":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"owner":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"labels":[{"name":"area/core","color":"eb6420"},{"name":"cool and awesome","color":"0052cc"},{"name":"difficulty/very-high","color":"e11d21"},{"name":"status/blocked","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1524036895000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4605","number":4605,"title":"Add a Repology ID to linter bear metadata","body":"e.g. elm-format is https://repology.org/metapackage/elm-format/versions\nand https://repology.org/metapackage/go/versions which shows the different package names\nOpened by @jayvdb at gitter/coala/coala-bears","comments":12,"createdAt":"2017-08-01T14:37:18Z","updatedAt":"2018-04-18T07:34:55Z","closedAt":null,"state":"open","user":{"login":"co-robo","avatarUrl":"https://avatars2.githubusercontent.com/u/29058257?v=4"},"owner":{"login":"co-robo","avatarUrl":"https://avatars2.githubusercontent.com/u/29058257?v=4"},"labels":[{"name":"area/lintbears","color":"ededed"},{"name":"difficulty/medium","color":"0052cc"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1525679712000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4609","number":4609,"title":"Support another settings file format","body":"Could be yaml or toml or something else entirely.\ndifficulty/hard\nOpened by @jayvdb at gitter/coala/coala","comments":1,"createdAt":"2017-08-02T03:43:19Z","updatedAt":"2018-05-07T07:55:12Z","closedAt":"2018-05-07T07:55:12Z","state":"closed","user":{"login":"co-robo","avatarUrl":"https://avatars2.githubusercontent.com/u/29058257?v=4"},"owner":{"login":"co-robo","avatarUrl":"https://avatars2.githubusercontent.com/u/29058257?v=4"},"labels":[{"name":"status/needs discussion","color":"d93f0b"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1517954991000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4613","number":4613,"title":"Use RuntimeError for unexpected problems in Core","body":"#4192 used warnings for unexpected errors.\nThey should use RuntimeError so the problems are seen and reported.","comments":1,"createdAt":"2017-08-04T05:35:50Z","updatedAt":"2018-02-06T22:09:51Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"milestone":{"title":"Nextgen-Core","createdAt":"2017-06-09T22:33:56Z","dueOn":null,"state":"open","htmlUrl":"https://github.com/coala/coala/milestone/18","description":""},"labels":[{"name":"area/core","color":"eb6420"},{"name":"difficulty/high","color":"B319e7"},{"name":"status/blocked","color":"e11d21"},{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1523185773000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4617","number":4617,"title":"--debug mode doesn't affect --show-bears","body":"With #3338 I added a --debug mode to coala, disabling internal catching of unexpected exceptions and auto-launching of ipdb on their occurrence. Working on #4210 I realized that I forgot to make the coalib.collecting.Collectors.get_all_bears() process debuggable this way... Time to change that! :)","comments":4,"createdAt":"2017-08-05T10:35:23Z","updatedAt":"2018-04-08T11:09:33Z","closedAt":null,"state":"open","user":{"login":"userzimmermann","avatarUrl":"https://avatars3.githubusercontent.com/u/2088633?v=4"},"owner":{"login":"userzimmermann","avatarUrl":"https://avatars3.githubusercontent.com/u/2088633?v=4"},"labels":[{"name":"area/CLI","color":"006b75"},{"name":"area/bears","color":"eb6420"},{"name":"area/core","color":"eb6420"},{"name":"area/usability","color":"d4c5f9"},{"name":"difficulty/medium","color":"0052cc"},{"name":"importance/high","color":"eb6420"},{"name":"type/feature","color":"0052cc"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1502729550000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4618","number":4618,"title":"--no-color produces color in CLI","body":"Opened by @jayvdb at gitter/coala/coala","comments":3,"createdAt":"2017-08-05T14:28:03Z","updatedAt":"2017-08-14T16:52:30Z","closedAt":"2017-08-14T16:52:30Z","state":"closed","user":{"login":"co-robo","avatarUrl":"https://avatars2.githubusercontent.com/u/29058257?v=4"},"owner":{"login":"co-robo","avatarUrl":"https://avatars2.githubusercontent.com/u/29058257?v=4"},"assignee":{"login":"Nosferatul","avatarUrl":"https://avatars2.githubusercontent.com/u/15227444?v=4"},"labels":[{"name":"area/CLI","color":"006b75"},{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1502455033000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4619","number":4619,"title":"Diff display doesnt show tabs","body":"I am 99% sure that tabs were previously visuallised using a unicode arrow, in results with a diff. Now they are gone.\nResults without a diff do show the unicode arrow.","comments":4,"createdAt":"2017-08-05T15:15:41Z","updatedAt":"2017-08-11T12:37:13Z","closedAt":"2017-08-11T12:37:13Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"Nosferatul","avatarUrl":"https://avatars2.githubusercontent.com/u/15227444?v=4"},"labels":[{"name":"area/CLI","color":"006b75"},{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1502087317000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4621","number":4621,"title":"ConfigurationGathering: Add option to silent warnings for get_filtered_bears method","body":"Required for coala/coala-quickstart#163","comments":5,"createdAt":"2017-08-05T17:48:13Z","updatedAt":"2017-08-07T06:28:37Z","closedAt":"2017-08-07T06:28:37Z","state":"closed","user":{"login":"satwikkansal","avatarUrl":"https://avatars1.githubusercontent.com/u/10217535?v=4"},"owner":{"login":"satwikkansal","avatarUrl":"https://avatars1.githubusercontent.com/u/10217535?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1502730851000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4623","number":4623,"title":"Merge 'severity' line from the output","body":"","comments":0,"createdAt":"2017-08-05T19:41:58Z","updatedAt":"2017-08-14T17:14:11Z","closedAt":"2017-08-14T17:14:11Z","state":"closed","user":{"login":"Nosferatul","avatarUrl":"https://avatars2.githubusercontent.com/u/15227444?v=4"},"owner":{"login":"Nosferatul","avatarUrl":"https://avatars2.githubusercontent.com/u/15227444?v=4"},"assignee":{"login":"Nosferatul","avatarUrl":"https://avatars2.githubusercontent.com/u/15227444?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1503577049000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4625","number":4625,"title":"Colors doesn't support vte and non vte terminals.","body":"","comments":0,"createdAt":"2017-08-06T19:10:21Z","updatedAt":"2017-08-24T12:17:29Z","closedAt":"2017-08-24T12:17:29Z","state":"closed","user":{"login":"Nosferatul","avatarUrl":"https://avatars2.githubusercontent.com/u/15227444?v=4"},"owner":{"login":"Nosferatul","avatarUrl":"https://avatars2.githubusercontent.com/u/15227444?v=4"},"assignee":{"login":"Nosferatul","avatarUrl":"https://avatars2.githubusercontent.com/u/15227444?v=4"},"labels":[{"name":"area/CLI","color":"006b75"},{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1502732794000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4628","number":4628,"title":"Add Do (N)othing Action","body":"","comments":0,"createdAt":"2017-08-08T16:35:18Z","updatedAt":"2017-08-14T17:46:34Z","closedAt":"2017-08-14T17:46:34Z","state":"closed","user":{"login":"Nosferatul","avatarUrl":"https://avatars2.githubusercontent.com/u/15227444?v=4"},"owner":{"login":"Nosferatul","avatarUrl":"https://avatars2.githubusercontent.com/u/15227444?v=4"},"assignee":{"login":"Nosferatul","avatarUrl":"https://avatars2.githubusercontent.com/u/15227444?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1502615538000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4631","number":4631,"title":"Bug DocumentationAPI string literals.","body":"The end of string literal is taken as the start of new docstring.\nThe probable fix is to ignore whole DocComment.\nOpened by @damngamerz at gitter//damngamerz","comments":0,"createdAt":"2017-08-09T20:13:45Z","updatedAt":"2017-08-13T09:12:18Z","closedAt":"2017-08-13T09:12:18Z","state":"closed","user":{"login":"co-robo","avatarUrl":"https://avatars2.githubusercontent.com/u/29058257?v=4"},"owner":{"login":"co-robo","avatarUrl":"https://avatars2.githubusercontent.com/u/29058257?v=4"},"assignee":{"login":"damngamerz","avatarUrl":"https://avatars2.githubusercontent.com/u/13048113?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1503179889000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4635","number":4635,"title":"coala crashes when running it on Windows (TEST ISSUE, IGNORE IT)","body":"Something with permissions... it just crashes, man!\n(Information for others, we're staging this for a demo right now ;) this issue will be gone soon, we just needed high issue numbers)","comments":4,"createdAt":"2017-08-11T12:01:55Z","updatedAt":"2017-08-19T21:58:09Z","closedAt":"2017-08-19T21:58:09Z","state":"closed","user":{"login":"sils","avatarUrl":"https://avatars0.githubusercontent.com/u/5716520?v=4"},"owner":{"login":"sils","avatarUrl":"https://avatars0.githubusercontent.com/u/5716520?v=4"},"labels":[{"name":"platform/windows","color":"0052cc"},{"name":"status/needs info","color":"006b75"},{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1506174480000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4636","number":4636,"title":"coala crashes when running it on Windows","body":"Something with permissions... it just crashes, man!","comments":6,"createdAt":"2017-08-11T14:27:35Z","updatedAt":"2017-09-23T13:48:00Z","closedAt":"2017-09-23T13:47:40Z","state":"closed","user":{"login":"ConradManstein","avatarUrl":"https://avatars0.githubusercontent.com/u/30931373?v=4"},"owner":{"login":"ConradManstein","avatarUrl":"https://avatars0.githubusercontent.com/u/30931373?v=4"},"labels":[{"name":"platform/windows","color":"0052cc"},{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1503392265000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4642","number":4642,"title":"Missing language key causes AttributeError instead of KeyError","body":"A __getitem__ should always raise KeyError if the key is not found.  This doesnt happen for Language.\n>>> from coalib.bearlib.languages import Language\n>>> Language['Pyt']\nTraceback (most recent call last):\n  File \"/.../coala/coalib/bearlib/languages/Language.py\", line 123, in __getattr__\n    return next(lang for lang in type(cls).all if item in lang)\nStopIteration\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"/.../coalib/bearlib/languages/Language.py\", line 135, in __getitem__\n    language = getattr(cls, name)\n  File \"/.../coalib/bearlib/languages/Language.py\", line 125, in __getattr__\n    raise AttributeError\nAttributeError","comments":0,"createdAt":"2017-08-16T17:30:19Z","updatedAt":"2017-08-22T08:57:45Z","closedAt":"2017-08-22T08:57:45Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"},{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1508265639000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4644","number":4644,"title":"MalformedComment: line -> line number","body":"in the docstring of __init__","comments":15,"createdAt":"2017-08-17T02:24:16Z","updatedAt":"2017-10-17T18:40:39Z","closedAt":"2017-10-17T18:40:39Z","state":"closed","user":{"login":"SanketDG","avatarUrl":"https://avatars3.githubusercontent.com/u/8980971?v=4"},"owner":{"login":"SanketDG","avatarUrl":"https://avatars3.githubusercontent.com/u/8980971?v=4"},"assignee":{"login":"mansiagarwal451","avatarUrl":"https://avatars0.githubusercontent.com/u/29692419?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1509194301000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4645","number":4645,"title":"DocstyleDefinition.py: Align docstring","body":"Align __init__ docstring.\ndifficulty/newcomer\nOpened by @damngamerz at gitter//damngamerz","comments":4,"createdAt":"2017-08-18T15:34:12Z","updatedAt":"2017-10-28T12:38:21Z","closedAt":"2017-10-28T12:38:21Z","state":"closed","user":{"login":"co-robo","avatarUrl":"https://avatars2.githubusercontent.com/u/29058257?v=4"},"owner":{"login":"co-robo","avatarUrl":"https://avatars2.githubusercontent.com/u/29058257?v=4"},"assignee":{"login":"utkarshmttl","avatarUrl":"https://avatars2.githubusercontent.com/u/16596327?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1532987804000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4648","number":4648,"title":"Change hyperlink style in docs to appear more visible - Hyperlinks not visible for some browsers/OSes","body":"The hyperlinks of the notes boxes at \"http://api.coala.io/en/latest/Developers/Newcomers_Guide.html\" have very low visibility. It is hard to distinguish from regular text. Although this doesn't seem to be a browser related, still the screenshot was taken on \"Google Chrome Version 59.0.3071.115 (Official Build) (64-bit)\".","comments":18,"createdAt":"2017-08-19T20:13:44Z","updatedAt":"2018-07-30T21:56:44Z","closedAt":null,"state":"open","user":{"login":"stellargo","avatarUrl":"https://avatars0.githubusercontent.com/u/27735438?v=4"},"owner":{"login":"stellargo","avatarUrl":"https://avatars0.githubusercontent.com/u/27735438?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/low","color":"207de5"},{"name":"status/blocked","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1512405125000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4651","number":4651,"title":"Add CLI to print only selected bears given in args","body":"Opened by @shreyans800755 at gitter/coala/coala","comments":8,"createdAt":"2017-08-19T23:27:09Z","updatedAt":"2017-12-04T16:32:05Z","closedAt":"2017-12-04T16:32:05Z","state":"closed","user":{"login":"co-robo","avatarUrl":"https://avatars2.githubusercontent.com/u/29058257?v=4"},"owner":{"login":"co-robo","avatarUrl":"https://avatars2.githubusercontent.com/u/29058257?v=4"},"assignee":{"login":"shreyans800755","avatarUrl":"https://avatars2.githubusercontent.com/u/3727351?v=4"},"labels":[{"name":"area/CLI","color":"006b75"},{"name":"difficulty/medium","color":"0052cc"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1509028972000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4652","number":4652,"title":"Update coala help - Use `filter-by language` instead of `--filter-by-language` in examples","body":"--filter-by-language is deprecated in favor of the more universal --filter-by flag. The old flags needs to be changed in the code examples on all help pages.\nOpened by @shreyans800755 at gitter/coala/coala\nEDIT by @Makman2:\nAdded a little description.","comments":18,"createdAt":"2017-08-19T23:32:15Z","updatedAt":"2017-10-26T14:42:52Z","closedAt":"2017-10-26T14:42:52Z","state":"closed","user":{"login":"co-robo","avatarUrl":"https://avatars2.githubusercontent.com/u/29058257?v=4"},"owner":{"login":"co-robo","avatarUrl":"https://avatars2.githubusercontent.com/u/29058257?v=4"},"assignee":{"login":"atultherajput","avatarUrl":"https://avatars3.githubusercontent.com/u/11033984?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1503310539000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4653","number":4653,"title":"Rename DoNothinActionTest.py","body":"","comments":0,"createdAt":"2017-08-21T09:48:26Z","updatedAt":"2017-08-21T10:15:39Z","closedAt":"2017-08-21T10:15:39Z","state":"closed","user":{"login":"Nosferatul","avatarUrl":"https://avatars2.githubusercontent.com/u/15227444?v=4"},"owner":{"login":"Nosferatul","avatarUrl":"https://avatars2.githubusercontent.com/u/15227444?v=4"},"assignee":{"login":"Nosferatul","avatarUrl":"https://avatars2.githubusercontent.com/u/15227444?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1503499872000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4656","number":4656,"title":"Throw warning if coala doesn't found bear that could fullfill an aspect","body":"For example,  if coala only have bear that support aspectA, but users want to run aspectA and aspectB, we should warn user that coala doesn't run some of their requested aspect.\narea/aspects","comments":0,"createdAt":"2017-08-23T11:30:46Z","updatedAt":"2017-08-23T14:51:12Z","closedAt":"2017-08-23T14:51:12Z","state":"closed","user":{"login":"adhikasp","avatarUrl":"https://avatars2.githubusercontent.com/u/6151302?v=4"},"owner":{"login":"adhikasp","avatarUrl":"https://avatars2.githubusercontent.com/u/6151302?v=4"},"assignee":{"login":"adhikasp","avatarUrl":"https://avatars2.githubusercontent.com/u/6151302?v=4"},"labels":[{"name":"area/aspects","color":"000000"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1503753532000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4661","number":4661,"title":"Create decorator to map bear's setting with aspect/taste","body":"@map_setting_to_aspect(\n        remove_all_unused_imports=(get_aspect('UnusedImport')\n                                   .remove_non_standard_import),\n        remove_unused_variables=get_aspect('UnusedLocalVariable'))\ndef run(self, filename, file,\n        remove_all_unused_imports: bool=True,\n        remove_unused_variables: bool=True):\n    pass\nThe run argument will be overrided by aspect's setting (only if it present). This make bear's aspectization much more easy.","comments":0,"createdAt":"2017-08-24T05:18:00Z","updatedAt":"2017-08-26T13:18:52Z","closedAt":"2017-08-26T13:18:52Z","state":"closed","user":{"login":"adhikasp","avatarUrl":"https://avatars2.githubusercontent.com/u/6151302?v=4"},"owner":{"login":"adhikasp","avatarUrl":"https://avatars2.githubusercontent.com/u/6151302?v=4"},"assignee":{"login":"adhikasp","avatarUrl":"https://avatars2.githubusercontent.com/u/6151302?v=4"},"labels":[{"name":"area/aspects","color":"000000"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1508709592000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4663","number":4663,"title":"Bug: Trying to get a defined aspect return not found error","body":"See https://ci.appveyor.com/project/coala/coala/build/1.0.9684/job/j9nn5u6ruta52x0e#L246\nI was thinking something went wrong in my local machine, but apparently that is not the case.\nRoot.Formatting.Length.LineLength is a valid aspect and running get('Root.Formatting.Length.LineLength') is fine. Trying to run only those specific unit test is fine, but running pytest make it fail.","comments":3,"createdAt":"2017-08-24T05:35:16Z","updatedAt":"2017-10-22T21:59:52Z","closedAt":null,"state":"open","user":{"login":"adhikasp","avatarUrl":"https://avatars2.githubusercontent.com/u/6151302?v=4"},"owner":{"login":"adhikasp","avatarUrl":"https://avatars2.githubusercontent.com/u/6151302?v=4"},"labels":[{"name":"area/aspects","color":"000000"},{"name":"area/tests","color":"bfd4f2"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1503577154000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4665","number":4665,"title":"Write aspect documentation","body":"Writing aspect bear (developer docs)\n Writing .coafile in aspect mode (user docs)","comments":1,"createdAt":"2017-08-24T10:58:05Z","updatedAt":"2017-08-24T12:19:14Z","closedAt":null,"state":"open","user":{"login":"adhikasp","avatarUrl":"https://avatars2.githubusercontent.com/u/6151302?v=4"},"owner":{"login":"adhikasp","avatarUrl":"https://avatars2.githubusercontent.com/u/6151302?v=4"},"assignee":{"login":"adhikasp","avatarUrl":"https://avatars2.githubusercontent.com/u/6151302?v=4"},"labels":[{"name":"area/aspects","color":"000000"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1513043552000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4668","number":4668,"title":"Output message in json if args.json is true and no bears to show","body":"Following #4650 #4726.\nWith above PR, --filter-by option is enabled for json and format entrypoints of coala. But when there are no bears to show, following message is shown even if json flag given in the command:\nNo bears to show. Did you forget to install the `coala-bears` package? Try `pip3 install coala-bears`.\n\nUpdate the message to be in proper format according to args given in the command - json or format or plaintext\nCC @Makman2\nEDIT by @Makman2:\nPoint directly to blocking issue.","comments":14,"createdAt":"2017-08-24T22:01:57Z","updatedAt":"2017-12-12T01:52:32Z","closedAt":"2017-12-12T01:52:32Z","state":"closed","user":{"login":"shreyans800755","avatarUrl":"https://avatars2.githubusercontent.com/u/3727351?v=4"},"owner":{"login":"shreyans800755","avatarUrl":"https://avatars2.githubusercontent.com/u/3727351?v=4"},"assignee":{"login":"nvzard","avatarUrl":"https://avatars0.githubusercontent.com/u/19310512?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1518769221000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4669","number":4669,"title":"List of aspect needed to migrate (some) of coala-bear","body":"This is a non-complete list of missing aspect that is required to aspectized those bears. This could be resolved in multiple PR that ideally each one will be followed by aspectization of relevant bears.\nThe bears listed below is taken from coala's .coafile with the intention that coala repository will became test subject assumed to be widely used.\n\n coalaBear\n\nNeed modification of either adding OrgSpecificKeyword.only_coala or modify the bear itself to accept other keyword to modify.\n\n\n LineLengthBear\n\n(taste) ignore_line_length_regex under LineLength\n(aspect) Indentation under Spacing with at least taste indentation_size and indentation_type\n\n\n KeywordBear\n\nNot sure... A Keyword aspect under Root.Documentation?\n\n\n SpaceConsistencyBear\n\n(aspect) Indentation under Spacing with at least taste indentation_size and indentation_type\n\n\n QuotesBear\n\nneed to have language any or similiar\n\n\n PyUnusedCodeBear\n PEP8Bear\n\nneed indent size and max line length\npep_ignore is tricky, need further research to decide it exactly\n\n\n PycodestyleBear\n\npycodestyle_ignore... similiar with PEP8Bear above\n\n\n LanguageToolBear\n\nnatural_language -> Documentation.natural_language?\nlanguagetool_disable_rules -> Again.. tricky\n\n\n GitCommitBear\n\nallow_empty_commit_message -> CommitMessage.Emptiness\nshortlog_regex -> Shortlog.shortlog_regex\nshortlog_wip_check -> Shortlog.include_wip?\nignore_length_regex ->  Body.ignore_length_regex\nbody_regex -> Body.body_regex\nbody_close_issue -> `Body.Reference.body_close_issue\nbody_close_issue_full_url -> Body.Reference.body_close_issue_full_url\nbody_close_issue_on_last_line -> Body.Reference.body_close_issue_on_last_line\nbody_enforce_issue_reference -> Body.Reference.body_enforce_issue_reference\n\n\n PyLintBear\n InvalidLinkBear\n CSSLintBear\n reSTLintBear\n\ndifficulty/easy","comments":1,"createdAt":"2017-08-25T15:34:59Z","updatedAt":"2018-02-16T08:20:21Z","closedAt":null,"state":"open","user":{"login":"adhikasp","avatarUrl":"https://avatars2.githubusercontent.com/u/6151302?v=4"},"owner":{"login":"adhikasp","avatarUrl":"https://avatars2.githubusercontent.com/u/6151302?v=4"},"labels":[{"name":"area/aspects","color":"000000"},{"name":"area/tests","color":"bfd4f2"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1504303314000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4671","number":4671,"title":"Result docstring: Enclose code object in double backticks","body":"At https://github.com/coala/coala/blob/master/coalib/results/Result.py#L72-L73 :\n            A tuple of SourceRange objects pointing to related positions in the\n            source code.\n\nEnclose SourceRange in double-backticks:\nA tuple of ``SourceRange`` objects ...","comments":2,"createdAt":"2017-08-25T17:52:09Z","updatedAt":"2017-09-01T22:01:54Z","closedAt":"2017-09-01T22:01:54Z","state":"closed","user":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"owner":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"assignee":{"login":"namish800","avatarUrl":"https://avatars2.githubusercontent.com/u/25436663?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1508257527000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4672","number":4672,"title":"Result docstring: Improve help for `contents` parameter","body":"Currently it states:\n:param contents: Any object that is picklable since it will be\n                 transferred across processes.\n\nThe reason for the existence of this parameter should be actually described: It's about sending additional data (arbitrary python objects) to the dependent bear besides a message. This data has to be picklable.","comments":0,"createdAt":"2017-08-25T17:59:20Z","updatedAt":"2017-10-17T16:25:27Z","closedAt":"2017-10-17T16:25:27Z","state":"closed","user":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"owner":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"assignee":{"login":"nealkarpe","avatarUrl":"https://avatars3.githubusercontent.com/u/31779922?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/low","color":"207de5"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1524453056000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4673","number":4673,"title":"support ignoring whole directories","body":"Currently, ignore in .coafile takes in glob patterns as input, but it does not ignore whole directory.\nFor example:\n.coafile looks like this:\n[Default]\nignore = tests/foo/test_files/*\n\nand there is no need of test_files being a python package because it is not being loaded as a package, but PythonPackageInitBear would complain:\nProject wide:\n**** PythonPackageInitBear [Section: PythonPackageInit | Severity: NORMAL] ****\n!    ! Directory \"tests/foo/test_files\" does not contain __init__.py file\n\nEven passing ignore = ignore = tests/foo/test_files/ or ignore = ignore = tests/foo/test_files does not works.","comments":13,"createdAt":"2017-08-25T18:51:17Z","updatedAt":"2018-04-23T03:10:56Z","closedAt":"2018-04-23T03:10:56Z","state":"closed","user":{"login":"RJ722","avatarUrl":"https://avatars1.githubusercontent.com/u/15556382?v=4"},"owner":{"login":"RJ722","avatarUrl":"https://avatars1.githubusercontent.com/u/15556382?v=4"},"assignee":{"login":"mrtes","avatarUrl":"https://avatars3.githubusercontent.com/u/19871688?v=4"},"labels":[{"name":"area/config","color":"fbca04"},{"name":"difficulty/high","color":"B319e7"},{"name":"importance/high","color":"eb6420"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1504019008000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4674","number":4674,"title":"CachingUtilities.pickle_load: Use single quotes for strings in docstring examples","body":"","comments":0,"createdAt":"2017-08-26T00:38:22Z","updatedAt":"2017-08-29T15:03:28Z","closedAt":"2017-08-29T15:03:28Z","state":"closed","user":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"owner":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"assignee":{"login":"harryjas","avatarUrl":"https://avatars2.githubusercontent.com/u/22297760?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1503852515000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4680","number":4680,"title":"Improve constructing Result with aspect","body":"Attribute additional_info could be filled by aspect (if aspect passed into Result)","comments":0,"createdAt":"2017-08-27T06:01:08Z","updatedAt":"2017-08-27T16:48:35Z","closedAt":"2017-08-27T16:48:35Z","state":"closed","user":{"login":"adhikasp","avatarUrl":"https://avatars2.githubusercontent.com/u/6151302?v=4"},"owner":{"login":"adhikasp","avatarUrl":"https://avatars2.githubusercontent.com/u/6151302?v=4"},"assignee":{"login":"adhikasp","avatarUrl":"https://avatars2.githubusercontent.com/u/6151302?v=4"},"labels":[{"name":"area/aspects","color":"000000"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1503836335000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4681","number":4681,"title":"Decorator `map_setting_to_aspect` failing","body":"It fail when:\n\nBear is decorated with it\ncoala running those bear without aspect mode activated\n\nSee https://ci.appveyor.com/project/coala/coala-bears/build/1.0.7521/job/ugntfdp6cxb6rt17#L930\nThe decorator try to search section.aspects which doesn't get instanced because coala not running in aspect mode.","comments":0,"createdAt":"2017-08-27T07:10:55Z","updatedAt":"2017-08-27T12:18:55Z","closedAt":"2017-08-27T12:18:55Z","state":"closed","user":{"login":"adhikasp","avatarUrl":"https://avatars2.githubusercontent.com/u/6151302?v=4"},"owner":{"login":"adhikasp","avatarUrl":"https://avatars2.githubusercontent.com/u/6151302?v=4"},"labels":[{"name":"area/aspects","color":"000000"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1503852515000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4682","number":4682,"title":"`section.aspect` attribute should have been `aspects` ","body":"Add s.","comments":0,"createdAt":"2017-08-27T13:07:52Z","updatedAt":"2017-08-27T16:48:35Z","closedAt":"2017-08-27T16:48:35Z","state":"closed","user":{"login":"adhikasp","avatarUrl":"https://avatars2.githubusercontent.com/u/6151302?v=4"},"owner":{"login":"adhikasp","avatarUrl":"https://avatars2.githubusercontent.com/u/6151302?v=4"},"assignee":{"login":"adhikasp","avatarUrl":"https://avatars2.githubusercontent.com/u/6151302?v=4"},"labels":[{"name":"area/aspects","color":"000000"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1503852516000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4683","number":4683,"title":"Change setting aspect's taste syntax","body":"Currently setting an aspect's taste in coafile is using aspectname.tastename syntax. This is wrong because coala will parse it as tastename setting in aspectname section (see https://github.com/coala/coala/blob/master/coalib/parsing/LineParser.py#L32).\nChange this syntax to aspectname:tastename instead.","comments":0,"createdAt":"2017-08-27T16:01:05Z","updatedAt":"2017-08-27T16:48:36Z","closedAt":"2017-08-27T16:48:36Z","state":"closed","user":{"login":"adhikasp","avatarUrl":"https://avatars2.githubusercontent.com/u/6151302?v=4"},"owner":{"login":"adhikasp","avatarUrl":"https://avatars2.githubusercontent.com/u/6151302?v=4"},"assignee":{"login":"adhikasp","avatarUrl":"https://avatars2.githubusercontent.com/u/6151302?v=4"},"labels":[{"name":"area/aspects","color":"000000"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1503888159000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4686","number":4686,"title":"Bear that have `language` as `non_optional_params` failing","body":"See https://travis-ci.org/coala/coala-bears/jobs/268942128#L3901","comments":0,"createdAt":"2017-08-28T01:07:40Z","updatedAt":"2017-08-28T02:42:39Z","closedAt":"2017-08-28T02:42:39Z","state":"closed","user":{"login":"adhikasp","avatarUrl":"https://avatars2.githubusercontent.com/u/6151302?v=4"},"owner":{"login":"adhikasp","avatarUrl":"https://avatars2.githubusercontent.com/u/6151302?v=4"},"assignee":{"login":"adhikasp","avatarUrl":"https://avatars2.githubusercontent.com/u/6151302?v=4"},"labels":[{"name":"area/CI","color":"eb6420"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1503899735000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4688","number":4688,"title":"Many `Language` definitions missing default import","body":"See coalib.bearlib.languages.__init__","comments":0,"createdAt":"2017-08-28T05:02:22Z","updatedAt":"2017-08-28T05:55:35Z","closedAt":"2017-08-28T05:55:35Z","state":"closed","user":{"login":"adhikasp","avatarUrl":"https://avatars2.githubusercontent.com/u/6151302?v=4"},"owner":{"login":"adhikasp","avatarUrl":"https://avatars2.githubusercontent.com/u/6151302?v=4"},"assignee":{"login":"adhikasp","avatarUrl":"https://avatars2.githubusercontent.com/u/6151302?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1524102859000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4690","number":4690,"title":"`'python' in Language['python 3']` should return True","body":"Title say it all. It is surprising otherwise.","comments":3,"createdAt":"2017-08-28T08:44:19Z","updatedAt":"2018-04-19T01:54:19Z","closedAt":"2018-04-19T01:54:19Z","state":"closed","user":{"login":"adhikasp","avatarUrl":"https://avatars2.githubusercontent.com/u/6151302?v=4"},"owner":{"login":"adhikasp","avatarUrl":"https://avatars2.githubusercontent.com/u/6151302?v=4"},"assignee":{"login":"rohanrk","avatarUrl":"https://avatars2.githubusercontent.com/u/11154862?v=4"},"labels":[{"name":"difficulty/medium","color":"0052cc"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1509322319000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4694","number":4694,"title":"FilterHelper.apply_filters: Correct parameter reference in docstring","body":"Currently states:\nReturns bears after filtering based on ``args``. It returns\nintersection of bears if more than one element is present in ``args``\nlist.\n\nargs should be replaced with filters.","comments":3,"createdAt":"2017-08-28T21:41:06Z","updatedAt":"2017-10-30T00:11:59Z","closedAt":"2017-10-30T00:11:59Z","state":"closed","user":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"owner":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"assignee":{"login":"Raman1121","avatarUrl":"https://avatars0.githubusercontent.com/u/21155059?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1504199859000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4695","number":4695,"title":"Add docsearch for api docs","body":"Opened by @meetmangukiya at gitter/coala/coala/offtopic","comments":0,"createdAt":"2017-08-31T16:49:05Z","updatedAt":"2017-08-31T17:17:39Z","closedAt":"2017-08-31T17:17:39Z","state":"closed","user":{"login":"co-robo","avatarUrl":"https://avatars2.githubusercontent.com/u/29058257?v=4"},"owner":{"login":"co-robo","avatarUrl":"https://avatars2.githubusercontent.com/u/29058257?v=4"},"assignee":{"login":"meetmangukiya","avatarUrl":"https://avatars0.githubusercontent.com/u/7620533?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1504548223000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4700","number":4700,"title":"Three undefined names can raise NameError at runtime","body":"flake8 testing of https://github.com/coala/coala on Python 3.6.2\n$ flake8 . --count --select=E901,E999,F821,F822,F823 --show-source --statistics\n./tests/coalaTest.py:139:30: F821 undefined name 'cm'\n            self.assertEqual(cm.error_code, 4)\n                             ^\n\n./tests/coalaTest.py:145:30: F821 undefined name 'cm'\n            self.assertEqual(cm.error_code, 4)\n                             ^\n\n./tests/bearlib/aspects/DecoratorsTest.py:17:16: F821 undefined name 'BEAR_KIND'\n        return BEAR_KIND.LOCAL\n               ^","comments":2,"createdAt":"2017-09-04T17:37:36Z","updatedAt":"2017-09-04T18:03:43Z","closedAt":"2017-09-04T18:02:43Z","state":"closed","user":{"login":"cclauss","avatarUrl":"https://avatars3.githubusercontent.com/u/3709715?v=4"},"owner":{"login":"cclauss","avatarUrl":"https://avatars3.githubusercontent.com/u/3709715?v=4"},"labels":[{"name":"area/aspects","color":"000000"},{"name":"area/tests","color":"bfd4f2"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1504551454000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4701","number":4701,"title":"coalaTest: unsupported-python-version-tests do not test","body":"Affects test cases\n\ntest_python_version_27\ntest_python_version_33\n\n    def test_python_version_27(self):\n        with self.assertRaises(SystemExit):\n            assert_supported_version()\n            self.assertEqual(cm.error_code, 4)\nIt seems that assert_supported_version is throwing the exception as expected, and that exits the with-expression. The assertion is never executed.","comments":0,"createdAt":"2017-09-04T17:59:55Z","updatedAt":"2017-09-04T18:57:34Z","closedAt":"2017-09-04T18:57:34Z","state":"closed","user":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"owner":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"assignee":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"labels":[{"name":"area/tests","color":"bfd4f2"},{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1508279249000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4702","number":4702,"title":"DecoratorsTest: Undefined name `BEAR_KIND`","body":"Invoking RunDecoratedBear.kind() raises a NameError due to BEAR_KIND not being imported. However, RunDecoratedBear.kind() is unused in test.","comments":5,"createdAt":"2017-09-04T18:01:16Z","updatedAt":"2017-10-17T22:27:29Z","closedAt":"2017-10-17T22:27:29Z","state":"closed","user":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"owner":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"assignee":{"login":"alphadose","avatarUrl":"https://avatars1.githubusercontent.com/u/25170258?v=4"},"labels":[{"name":"area/tests","color":"bfd4f2"},{"name":"difficulty/low","color":"207de5"},{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1505195732000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4706","number":4706,"title":"Coala link redirects to the incorrect page.","body":"There is a link on the Coala website home page (https://coala.io/#/home) \"Need more powerful analysis? Check the available bears!\" where check should lead to \"https://coala.io/#/languages\" but instead redirects back to the home page again.\nChrome Version 60.0.3112.113 (Official Build) (64-bit)","comments":1,"createdAt":"2017-09-07T15:00:45Z","updatedAt":"2017-09-12T05:55:32Z","closedAt":"2017-09-12T05:55:32Z","state":"closed","user":{"login":"stellargo","avatarUrl":"https://avatars0.githubusercontent.com/u/27735438?v=4"},"owner":{"login":"stellargo","avatarUrl":"https://avatars0.githubusercontent.com/u/27735438?v=4"},"assignee":{"login":"stellargo","avatarUrl":"https://avatars0.githubusercontent.com/u/27735438?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1504869640000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4707","number":4707,"title":"coala --ci fails on Travis","body":"Here is the output from coala --ci command -\n$ coala -v && coala --ci\n0.11.0\n[WARNING][04:36:26] Implicit 'Default' section inheritance is deprecated. It will be removed soon. To silence this warning remove settings in the 'Default' section from your coafile. You can use dots to specify inheritance: the section 'all.python' will inherit all settings from 'all'.\n[ERROR][04:36:26] An unknown error occurred. This is a bug. We are sorry for the inconvenience. Please contact the developers for assistance. During execution of coala an exception was raised. This should never happen. When asked for, the following information may help investigating:\n[INFO][04:36:26] Exception was:\nTraceback (most recent call last):\n  File \"/usr/lib/python3/dist-packages/pkg_resources.py\", line 2482, in _dep_map\n    return self.__dep_map\n  File \"/usr/lib/python3/dist-packages/pkg_resources.py\", line 2344, in __getattr__\n    raise AttributeError(attr)\nAttributeError: _DistInfoDistribution__dep_map\nDuring handling of the above exception, another exception occurred:\nTraceback (most recent call last):\n  File \"/usr/local/lib/python3.4/dist-packages/coalib/coala_main.py\", line 81, in run_coala\n    arg_list=arg_list)\n  File \"/usr/local/lib/python3.4/dist-packages/coalib/settings/ConfigurationGathering.py\", line 387, in gather_configuration\n    log_printer)\n  File \"/usr/local/lib/python3.4/dist-packages/coalib/settings/SectionFilling.py\", line 31, in fill_settings\n    bear_dirs = section.bear_dirs()\n  File \"/usr/local/lib/python3.4/dist-packages/coalib/settings/Section.py\", line 116, in bear_dirs\n    for bear_dir in collect_registered_bears_dirs('coalabears')]\n  File \"/usr/local/lib/python3.4/dist-packages/coalib/collecting/Collectors.py\", line 307, in collect_registered_bears_dirs\n    registered_package = ep.load()\n  File \"/usr/lib/python3/dist-packages/pkg_resources.py\", line 2087, in load\n    if require: self.require(env, installer)\n  File \"/usr/lib/python3/dist-packages/pkg_resources.py\", line 2100, in require\n    working_set.resolve(self.dist.requires(self.extras),env,installer)))\n  File \"/usr/lib/python3/dist-packages/pkg_resources.py\", line 2291, in requires\n    dm = self._dep_map\n  File \"/usr/lib/python3/dist-packages/pkg_resources.py\", line 2484, in _dep_map\n    self.__dep_map = self._compute_dependencies()\n  File \"/usr/lib/python3/dist-packages/pkg_resources.py\", line 2508, in _compute_dependencies\n    parsed = next(parse_requirements(distvers))\n  File \"/usr/lib/python3/dist-packages/pkg_resources.py\", line 2605, in parse_requirements\n    line, p, specs = scan_list(VERSION,LINE_END,line,p,(1,2),\"version spec\")\n  File \"/usr/lib/python3/dist-packages/pkg_resources.py\", line 2573, in scan_list\n    raise ValueError(\"Expected \"+item_name+\" in\",line,\"at\",line[p:])\nValueError: ('Expected version spec in', 'coala ~=0.11.0', 'at', ' ~=0.11.0')\nThe command \"coala -v && coala --ci\" exited with 255.\n\n\nLinks:  \n\nCoalafile\nPull Request\nBuild log\nTravis Config","comments":1,"createdAt":"2017-09-08T04:40:44Z","updatedAt":"2017-09-08T11:20:40Z","closedAt":"2017-09-08T11:20:39Z","state":"closed","user":{"login":"singhpratyush","avatarUrl":"https://avatars1.githubusercontent.com/u/10860278?v=4"},"owner":{"login":"singhpratyush","avatarUrl":"https://avatars1.githubusercontent.com/u/10860278?v=4"},"labels":[{"name":"area/CI","color":"eb6420"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1506722899000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4708","number":4708,"title":"travis-ci installing incorrect version of setuptools","body":"The following error in travis-ci has been spotted in two recent pull requests #4650 and #4646 where even after specifying that setuptools 17 has to be installed, it goes on to install setuptools-35.0.2.\nI tried this on my local environment which did not give any issue.\n2.08s$ pip install pip==9 setuptools==17\nCollecting pip==9\n  Using cached pip-9.0.0-py2.py3-none-any.whl\nCollecting setuptools==17\n  Using cached setuptools-17.0-py2.py3-none-any.whl\nInstalling collected packages: pip, setuptools\n  Found existing installation: pip 9.0.1\n    Uninstalling pip-9.0.1:\n      Successfully uninstalled pip-9.0.1\n  Found existing installation: setuptools 36.3.0\n    Uninstalling setuptools-36.3.0:\n      Successfully uninstalled setuptools-36.3.0\nSuccessfully installed pip-9.0.0 setuptools-35.0.2\n0.45s$ python .misc/check_setuptools.py\nChecking setuptools==17.0\nFailed! pip list reports wrong setuptools:","comments":4,"createdAt":"2017-09-10T12:28:10Z","updatedAt":"2017-09-29T22:08:19Z","closedAt":"2017-09-29T22:08:19Z","state":"closed","user":{"login":"stellargo","avatarUrl":"https://avatars0.githubusercontent.com/u/27735438?v=4"},"owner":{"login":"stellargo","avatarUrl":"https://avatars0.githubusercontent.com/u/27735438?v=4"},"assignee":{"login":"shreyans800755","avatarUrl":"https://avatars2.githubusercontent.com/u/3727351?v=4"},"labels":[{"name":"area/CI","color":"eb6420"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1506804048000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4710","number":4710,"title":"Update correct URL of \"Get Involved\" page in README file.","body":"Currently \"Get Involved\" link is pointed to http://coala.io/#!/getinvolved in README.rst file and gets automatically redirected to https://coala.io/#/home . Therefore URL need to be updated and point to https://coala.io/#/getinvolved .","comments":3,"createdAt":"2017-09-11T12:14:48Z","updatedAt":"2017-09-30T20:40:48Z","closedAt":"2017-09-30T20:40:48Z","state":"closed","user":{"login":"atultherajput","avatarUrl":"https://avatars3.githubusercontent.com/u/11033984?v=4"},"owner":{"login":"atultherajput","avatarUrl":"https://avatars3.githubusercontent.com/u/11033984?v=4"},"assignee":{"login":"IamRaviTejaG","avatarUrl":"https://avatars3.githubusercontent.com/u/4240489?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1505706453000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4716","number":4716,"title":"cannot install on ubuntu14.04 ?","body":"my os verison is ubuntu 14.04 run on docker 17.05\nwhen i run: pip3 install coala-bears\nit will have error:\nException:\nTraceback (most recent call last):\nFile \"/usr/lib/python3/dist-packages/pkg_resources.py\", line 2482, in _dep_map\nreturn self.__dep_map\nFile \"/usr/lib/python3/dist-packages/pkg_resources.py\", line 2344, in getattr\nraise AttributeError(attr)\nAttributeError: _DistInfoDistribution__dep_map\nDuring handling of the above exception, another exception occurred:\nTraceback (most recent call last):\nFile \"/usr/lib/python3/dist-packages/pip/basecommand.py\", line 122, in main\nstatus = self.run(options, args)\nFile \"/usr/lib/python3/dist-packages/pip/commands/install.py\", line 278, in run\nrequirement_set.prepare_files(finder, force_root_egg_info=self.bundle, bundle=self.bundle)\nFile \"/usr/lib/python3/dist-packages/pip/req.py\", line 1266, in prepare_files\nreq_to_install.extras):\nFile \"/usr/lib/python3/dist-packages/pkg_resources.py\", line 2291, in requires\ndm = self._dep_map\nFile \"/usr/lib/python3/dist-packages/pkg_resources.py\", line 2484, in _dep_map\nself.__dep_map = self._compute_dependencies()\nFile \"/usr/lib/python3/dist-packages/pkg_resources.py\", line 2508, in _compute_dependencies\nparsed = next(parse_requirements(distvers))\nFile \"/usr/lib/python3/dist-packages/pkg_resources.py\", line 2605, in parse_requirements\nline, p, specs = scan_list(VERSION,LINE_END,line,p,(1,2),\"version spec\")\nFile \"/usr/lib/python3/dist-packages/pkg_resources.py\", line 2573, in scan_list\nraise ValueError(\"Expected \"+item_name+\" in\",line,\"at\",line[p:])\nValueError: ('Expected version spec in', 'coala ~=0.11.0', 'at', ' ~=0.11.0')\nStoring debug log for failure in /root/.pip/pip.log","comments":3,"createdAt":"2017-09-15T08:10:55Z","updatedAt":"2017-09-18T03:47:33Z","closedAt":"2017-09-18T03:47:33Z","state":"closed","user":{"login":"vTNT","avatarUrl":"https://avatars2.githubusercontent.com/u/4162460?v=4"},"owner":{"login":"vTNT","avatarUrl":"https://avatars2.githubusercontent.com/u/4162460?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1505941718000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4722","number":4722,"title":"test issue please ignore","body":"test issue please ignore","comments":1,"createdAt":"2017-09-20T20:56:06Z","updatedAt":"2017-09-20T21:08:38Z","closedAt":"2017-09-20T21:08:38Z","state":"closed","user":{"login":"fneu","avatarUrl":"https://avatars2.githubusercontent.com/u/7591685?v=4"},"owner":{"login":"fneu","avatarUrl":"https://avatars2.githubusercontent.com/u/7591685?v=4"},"labels":[{"name":"area/tests","color":"bfd4f2"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1505945060000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4723","number":4723,"title":"test issue please ignore","body":"test","comments":9,"createdAt":"2017-09-20T21:08:55Z","updatedAt":"2017-09-20T22:04:20Z","closedAt":"2017-09-20T22:04:20Z","state":"closed","user":{"login":"fneu","avatarUrl":"https://avatars2.githubusercontent.com/u/7591685?v=4"},"owner":{"login":"fneu","avatarUrl":"https://avatars2.githubusercontent.com/u/7591685?v=4"},"labels":[{"name":"area/tests","color":"bfd4f2"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1506005271000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4724","number":4724,"title":"Unable to collect Bear from X - coala-bear package names clash with bear's dependency module name","body":"Related to #2053\nhttps://travis-ci.org/coala/coala-bears/jobs/276993965#L3832\nThe command \"bash .ci/tests.sh\" exited with 0.\n1.95s$ .ci/generate_bear_requirements.py\nWARNING:root:Unable to collect bears from /home/travis/build/coala/coala-bears/bears/general/LinkBackupBear.py. Probably the file is malformed or the module code raises an exception.\nINFO:root:Exception was:\nTraceback (most recent call last):\n  File \"/home/travis/virtualenv/python3.5.3/lib/python3.5/site-packages/coalib/collecting/Collectors.py\", line 134, in icollect_bears\n    for bear in _import_bears(matching_file, kinds):\n  File \"/home/travis/virtualenv/python3.5.3/lib/python3.5/site-packages/coalib/collecting/Collectors.py\", line 26, in _import_bears\n    types=list):\n  File \"/home/travis/virtualenv/python3.5.3/lib/python3.5/site-packages/coalib/collecting/Importers.py\", line 160, in iimport_objects\n    attributes, local)\n  File \"/home/travis/virtualenv/python3.5.3/lib/python3.5/site-packages/coala_utils/decorators.py\", line 26, in yield_once_generator\n    for item in iterator(*args, **kwargs):\n  File \"/home/travis/virtualenv/python3.5.3/lib/python3.5/site-packages/coalib/collecting/Importers.py\", line 119, in _iimport_objects\n    module = _import_module(file_path)\n  File \"/home/travis/virtualenv/python3.5.3/lib/python3.5/site-packages/coalib/collecting/Importers.py\", line 31, in _import_module\n    return __import__(module_name)\n  File \"/home/travis/build/coala/coala-bears/bears/general/LinkBackupBear.py\", line 9, in <module>\n    import tubeup.__main__\n  File \"/home/travis/virtualenv/python3.5.3/lib/python3.5/site-packages/tubeup/__main__.py\", line 30, in <module>\n    import internetarchive.cli\n  File \"/home/travis/virtualenv/python3.5.3/lib/python3.5/site-packages/internetarchive/cli/__init__.py\", line 27, in <module>\n    from internetarchive.cli import ia, ia_configure, ia_delete, ia_download, ia_list, \\\n  File \"/home/travis/virtualenv/python3.5.3/lib/python3.5/site-packages/internetarchive/cli/ia_metadata.py\", line 50, in <module>\n    from backports import csv\n  File \"/home/travis/virtualenv/python3.5.3/lib/python3.5/site-packages/backports/csv.py\", line 22, in <module>\n    from csv import (\nImportError: cannot import name 'QUOTE_MINIMAL'\nDEBUG:pip.vcs:Registered VCS backend: git\nDEBUG:pip.vcs:Registered VCS backend: hg\nDEBUG:pip.vcs:Registered VCS backend: svn\nDEBUG:pip.vcs:Registered VCS backend: bzr\n\nThis is what sys.path contains when .ci/generate_bear_requirements.py runs:\n['./bears/general', './bears/elm', './bears/documentation', './bears/dart', './bears/csv', './bears/css', './bears/configfiles', './bears/coffee_script', './bears/cmake', './bears/c_languages/codeclone_detection', './bears/c_languages', './bears/apertium', './bears', '/home/rafid/GitHub/coala-bears', '/home/rafid/.venvs/coala-bears-py3/lib64/python36.zip', '/home/rafid/.venvs/coala-bears-py3/lib64/python3.6', '/home/rafid/.venvs/coala-bears-py3/lib64/python3.6/lib-dynload', '/usr/lib64/python3.6', '/usr/lib/python3.6', '/home/rafid/.venvs/coala-bears-py3/lib/python3.6/site-packages', '/home/rafid/GitHub/coala-bears']\nThis happens because sys.path contains path to coala-bears packages, therefore the name of bear's dependency clashes with package names in bears directory, such as ./bears/csv.\nWhen Collectors imports another bears, coalib/collecting/Importers.py:_import_module() appends bear's module path to sys.path, so when I run Travis-CI test for LinkBackupBear (coala/coala-bears#1899) that one of the dependencies depends on backports.csv. When backports.csv imports the csv module, it imports the wrong csv module, it imports ./bears/csv instead of the csv that backports.csv expects.","comments":0,"createdAt":"2017-09-21T09:56:50Z","updatedAt":"2017-09-21T14:47:51Z","closedAt":null,"state":"open","user":{"login":"refeed","avatarUrl":"https://avatars1.githubusercontent.com/u/20320125?v=4"},"owner":{"login":"refeed","avatarUrl":"https://avatars1.githubusercontent.com/u/20320125?v=4"},"assignee":{"login":"refeed","avatarUrl":"https://avatars1.githubusercontent.com/u/20320125?v=4"},"labels":[{"name":"area/CI","color":"eb6420"},{"name":"area/tests","color":"bfd4f2"},{"name":"needs backport","color":"b60205"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1506436724000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4727","number":4727,"title":"test aspect issue","body":"to test gitmate prod deployment, sorry","comments":0,"createdAt":"2017-09-26T14:38:35Z","updatedAt":"2017-09-26T14:38:44Z","closedAt":"2017-09-26T14:38:44Z","state":"closed","user":{"login":"sils","avatarUrl":"https://avatars0.githubusercontent.com/u/5716520?v=4"},"owner":{"login":"sils","avatarUrl":"https://avatars0.githubusercontent.com/u/5716520?v=4"},"labels":[{"name":"area/aspects","color":"000000"},{"name":"area/tests","color":"bfd4f2"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1506799550000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4731","number":4731,"title":"coala constantly crashes on windows","body":"getting a permission error\n(test issue to test gitmate issue triaging on coala)","comments":3,"createdAt":"2017-09-30T19:11:54Z","updatedAt":"2017-09-30T19:25:50Z","closedAt":"2017-09-30T19:25:50Z","state":"closed","user":{"login":"sils","avatarUrl":"https://avatars0.githubusercontent.com/u/5716520?v=4"},"owner":{"login":"sils","avatarUrl":"https://avatars0.githubusercontent.com/u/5716520?v=4"},"labels":[{"name":"area/tests","color":"bfd4f2"},{"name":"platform/windows","color":"0052cc"},{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1507474942000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4733","number":4733,"title":"Correct the link pointing to \"myfork\" to Step-3 instead of Step-4","body":"Clicking on is explained in step 4 of this guide in Step-7 should be edited so as to point to Step-3 (the original position of first introduction of \"myfork\")\nOpened by @prnvdixit at gitter/coala/coala","comments":2,"createdAt":"2017-10-04T15:38:26Z","updatedAt":"2017-10-08T15:02:22Z","closedAt":"2017-10-08T15:02:22Z","state":"closed","user":{"login":"co-robo","avatarUrl":"https://avatars2.githubusercontent.com/u/29058257?v=4"},"owner":{"login":"co-robo","avatarUrl":"https://avatars2.githubusercontent.com/u/29058257?v=4"},"assignee":{"login":"prnvdixit","avatarUrl":"https://avatars2.githubusercontent.com/u/24798215?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1507466534000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4735","number":4735,"title":"LocalBearTestHelper.execute_bear: Remove final return statement","body":"There is a yield in line 47 and a return in line 54. As long as the try block doesn't encounter an error, both are reached.\nSonarcube counts this as a breaking bug.","comments":6,"createdAt":"2017-10-05T08:49:36Z","updatedAt":"2017-10-08T12:42:14Z","closedAt":"2017-10-08T12:42:14Z","state":"closed","user":{"login":"sims1253","avatarUrl":"https://avatars2.githubusercontent.com/u/6530123?v=4"},"owner":{"login":"sims1253","avatarUrl":"https://avatars2.githubusercontent.com/u/6530123?v=4"},"assignee":{"login":"vVv-AA","avatarUrl":"https://avatars2.githubusercontent.com/u/12632507?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"type/codestyle","color":"d4c5f9"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1525667493000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4736","number":4736,"title":"Test compatibility on *BSDs","body":"coala currently mainly tested and known to run on Linux, macOS, and Windows. It would be a good idea to test it on *BSDs (OpenBSD, FreeBSD, NetBSD, DragonFlyBSD, etc) as well to make sure coala is compatible with them.\nList of known working BSDs:\n\n OpenBSD 6.2 release\n OpenBSD 6.2 current\n FreeBSD 12.0 current\n FreeBSD 11.1\n NetBSD\n DragonFlyBSD ( most likely will work if it works on FreeBSD )\n\nFor those who are unfamiliar with BSD, CURRENT is the \"latest bleeding edge\" development branch","comments":21,"createdAt":"2017-10-07T10:34:03Z","updatedAt":"2018-05-07T04:31:33Z","closedAt":null,"state":"open","user":{"login":"yukiisbored","avatarUrl":"https://avatars0.githubusercontent.com/u/18437312?v=4"},"owner":{"login":"yukiisbored","avatarUrl":"https://avatars0.githubusercontent.com/u/18437312?v=4"},"assignee":{"login":"yzgyyang","avatarUrl":"https://avatars0.githubusercontent.com/u/16748524?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1507561236000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4739","number":4739,"title":"Typo in Interactions.py docstring","body":"In coalib/output/Interactions.py, here is the function signature and the docstring:\ndef fail_acquire_settings(log_printer, settings_names_dict, section):\n\"\"\"\n    This method throws an exception if any setting needs to be acquired.\n\n    :param log_printer:     Printer responsible for logging the messages.\n    :param settings:        A dictionary with the settings name as key and\n                            a list containing a description in [0] and the\n                            name of the bears who need this setting in [1]\n                            and following.\n\"\"\"\n\nThe settings param should be settings_names_dict to match with the function definition.","comments":2,"createdAt":"2017-10-08T23:10:54Z","updatedAt":"2017-10-09T15:00:36Z","closedAt":"2017-10-09T15:00:36Z","state":"closed","user":{"login":"CCInCharge","avatarUrl":"https://avatars2.githubusercontent.com/u/7788704?v=4"},"owner":{"login":"CCInCharge","avatarUrl":"https://avatars2.githubusercontent.com/u/7788704?v=4"},"assignee":{"login":"CCInCharge","avatarUrl":"https://avatars2.githubusercontent.com/u/7788704?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1510529127000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4740","number":4740,"title":"Interactions.fail_acquire_settings: Deprecate parameter `section`","body":"section is unused and should be deprecated.","comments":4,"createdAt":"2017-10-08T23:54:41Z","updatedAt":"2017-11-12T23:25:27Z","closedAt":"2017-11-12T23:25:27Z","state":"closed","user":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"owner":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"assignee":{"login":"alphadose","avatarUrl":"https://avatars1.githubusercontent.com/u/25170258?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1507584999000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4742","number":4742,"title":"coala installation using miniconda in user's guide if nothing else works.","body":"I myself was troubled deeply in course of installing coala in Ubuntu 14.04.None of the mentioned methods did work, yielding errors that claimed no up-gradation of pip possible from basic pip 1.5.4 to higher ones.\nSome times it even demanded to uninstall present version of pip, which when met and the reinstallation being done with hopes to get the latest pip version with python3 dropped me back to the previous version only. I struggled for hours surfing back and forth through stackoverflow and googled every produced error, but it all ended up in vain. I also tried to to discuss about this in the coala gitter chat group.\nFinally a friend of mine suggested me miniconda. I followed the procedure and it helped me out.","comments":0,"createdAt":"2017-10-09T16:46:55Z","updatedAt":"2017-10-09T21:36:39Z","closedAt":null,"state":"open","user":{"login":"tosalonijain","avatarUrl":"https://avatars1.githubusercontent.com/u/31576507?v=4"},"owner":{"login":"tosalonijain","avatarUrl":"https://avatars1.githubusercontent.com/u/31576507?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1508287240000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4748","number":4748,"title":"Useful Links : Add link for short tutorial of regex","body":"","comments":8,"createdAt":"2017-10-15T00:21:10Z","updatedAt":"2017-10-18T00:40:40Z","closedAt":"2017-10-18T00:40:40Z","state":"closed","user":{"login":"khanchi97","avatarUrl":"https://avatars0.githubusercontent.com/u/22270415?v=4"},"owner":{"login":"khanchi97","avatarUrl":"https://avatars0.githubusercontent.com/u/22270415?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1508505355000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4753","number":4753,"title":"Writing-native-bears guide: Add link for short tutorial of regex","body":"","comments":8,"createdAt":"2017-10-16T04:57:43Z","updatedAt":"2017-10-20T13:15:55Z","closedAt":"2017-10-20T13:15:55Z","state":"closed","user":{"login":"khanchi97","avatarUrl":"https://avatars0.githubusercontent.com/u/22270415?v=4"},"owner":{"login":"khanchi97","avatarUrl":"https://avatars0.githubusercontent.com/u/22270415?v=4"},"assignee":{"login":"kartikeys98","avatarUrl":"https://avatars0.githubusercontent.com/u/16194994?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1508341190000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4755","number":4755,"title":"Remove Glossary from Writing_Tests and Add it to Testing_Bears","body":"As you can see that Glossary should be in Testing_bears page instead of Writing_Bears\npage.","comments":3,"createdAt":"2017-10-16T14:42:59Z","updatedAt":"2017-10-18T15:39:50Z","closedAt":"2017-10-18T15:39:50Z","state":"closed","user":{"login":"khanchi97","avatarUrl":"https://avatars0.githubusercontent.com/u/22270415?v=4"},"owner":{"login":"khanchi97","avatarUrl":"https://avatars0.githubusercontent.com/u/22270415?v=4"},"assignee":{"login":"sonali0901","avatarUrl":"https://avatars0.githubusercontent.com/u/12391824?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1508589345000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4766","number":4766,"title":"Modifying Newcomer's guide : Add a general command to label a PR as process/pending review","body":"Under the Picking up an Issue section of Newcomer's Guide add a general command to label a PR as process/pending review using corobo.","comments":3,"createdAt":"2017-10-19T14:19:39Z","updatedAt":"2017-10-21T12:35:45Z","closedAt":"2017-10-21T12:35:45Z","state":"closed","user":{"login":"soumya-ranjan7","avatarUrl":"https://avatars2.githubusercontent.com/u/25425232?v=4"},"owner":{"login":"soumya-ranjan7","avatarUrl":"https://avatars2.githubusercontent.com/u/25425232?v=4"},"assignee":{"login":"Kanav-7","avatarUrl":"https://avatars0.githubusercontent.com/u/23416069?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1497295699000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4336","number":4336,"title":"Set coverage environment variables automatically","body":"Currently .misc/tests.sh is needed to set envvar OS_NAME, which is used by coverage, which is automatically used by pytest due to setup.cfg.  If a developer manually runs pytest, they see errors due to missing coverage (among other problems: #4335).","comments":0,"createdAt":"2017-06-07T05:09:53Z","updatedAt":"2017-06-12T19:28:19Z","closedAt":"2017-06-12T19:28:19Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1496846227000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4340","number":4340,"title":"urllib3 TypeError: getresponse() got an unexpected keyword argument 'buffering'","body":"Occurred on Travis Python 3.6.1\nhttps://travis-ci.org/coala/coala/jobs/240375196\nIt appears to be due to socket.timeout: timed out\nduring\nvalue = ReadTimeoutError(\"HTTPConnectionPool(host='httpbin.org', port=80): Read timed out. (read timeout=20)\",)","comments":0,"createdAt":"2017-06-07T14:37:03Z","updatedAt":"2017-06-07T14:37:07Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"area/upstream","color":"5319e7"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1498856089000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4341","number":4341,"title":"typed_list/dict/ordered_dict(...) annotations look ugly in API docs","body":"Let's take PEP8Bear.run() as example. sphinx autodoc creates the following confusing signature:\n\nrun(filename, file, max_line_length: int = 79, indent_size: int = 4, pep_ignore: <function typed_list.<locals>.<lambda> at 0x000001CC99B73378> = (), pep_select: <function typed_list.<locals>.<lambda> at 0x000001CC99B73400> = (), local_pep8_config: bool = False)\n\ncoalib.settings.Setting.typed_list/dict/ordered_dict() should better return converters with useful __repr__ instead of lambda functions\n@sils @Makman2 @jayvdb","comments":3,"createdAt":"2017-06-07T18:43:21Z","updatedAt":"2017-06-30T20:54:49Z","closedAt":"2017-06-30T20:54:49Z","state":"closed","user":{"login":"userzimmermann","avatarUrl":"https://avatars3.githubusercontent.com/u/2088633?v=4"},"owner":{"login":"userzimmermann","avatarUrl":"https://avatars3.githubusercontent.com/u/2088633?v=4"},"assignee":{"login":"userzimmermann","avatarUrl":"https://avatars3.githubusercontent.com/u/2088633?v=4"},"labels":[{"name":"area/core","color":"eb6420"},{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/low","color":"207de5"},{"name":"importance/medium","color":"fbca04"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1499192708000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4344","number":4344,"title":"Clarify cib's prescence in the docs","body":"Currently, cib is only listed as experimental on the repo page at https://github.com/coala/coala-bears. It should be made clear in the docs that cib is highly experimental and will most likely not work.","comments":1,"createdAt":"2017-06-08T17:14:49Z","updatedAt":"2017-07-04T18:25:08Z","closedAt":"2017-07-04T18:25:08Z","state":"closed","user":{"login":"supergr35","avatarUrl":"https://avatars2.githubusercontent.com/u/23623348?v=4"},"owner":{"login":"supergr35","avatarUrl":"https://avatars2.githubusercontent.com/u/23623348?v=4"},"assignee":{"login":"supergr35","avatarUrl":"https://avatars2.githubusercontent.com/u/23623348?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1497025752000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4347","number":4347,"title":"A special parent section that is the parent of all sections","body":"Create a special section name, that'll be inherited by all the section, irrespective of the ones provided in the .\nSo, something should inherit from the special section name. Currently it has to be the special section name.something. Most of the coafile will always have something that is common for all the sections.\n/cc @Udayan12167","comments":0,"createdAt":"2017-06-09T16:29:08Z","updatedAt":"2017-06-09T16:29:12Z","closedAt":null,"state":"open","user":{"login":"meetmangukiya","avatarUrl":"https://avatars0.githubusercontent.com/u/7620533?v=4"},"owner":{"login":"meetmangukiya","avatarUrl":"https://avatars0.githubusercontent.com/u/7620533?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1520782417000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4348","number":4348,"title":"Nextgen-Core integration","body":"Integrate the nextgen-core into coala and the new bears. Deprecate the old bears.","comments":4,"createdAt":"2017-06-09T22:37:44Z","updatedAt":"2018-03-11T15:33:37Z","closedAt":null,"state":"open","user":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"owner":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"milestone":{"title":"Nextgen-Core","createdAt":"2017-06-09T22:33:56Z","dueOn":null,"state":"open","htmlUrl":"https://github.com/coala/coala/milestone/18","description":""},"labels":[{"name":"area/core","color":"eb6420"},{"name":"difficulty/high","color":"B319e7"},{"name":"status/blocked","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1500757354000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4349","number":4349,"title":"Nextgen Core: Allow to pass different executors","body":"This will be needed for the debugging mode of coala.\ncore.run shall take as a parameter the executor to run. By default (None) we create a ProcessPoolExecutor without arguments (so it picks up the number of CPU cores of the current machine automatically as the number of processes to launch).\nTests need to be written too.\nAlso I plan in the far future to run coala on distributed systems, currently I have Apache Mesos / DC/OS in mind.","comments":1,"createdAt":"2017-06-09T22:42:47Z","updatedAt":"2017-07-22T21:02:34Z","closedAt":"2017-07-22T21:02:34Z","state":"closed","user":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"owner":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"assignee":{"login":"shreyans800755","avatarUrl":"https://avatars2.githubusercontent.com/u/3727351?v=4"},"milestone":{"title":"Nextgen-Core","createdAt":"2017-06-09T22:33:56Z","dueOn":null,"state":"open","htmlUrl":"https://github.com/coala/coala/milestone/18","description":""},"labels":[{"name":"area/core","color":"eb6420"},{"name":"difficulty/low","color":"207de5"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1519674529000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4350","number":4350,"title":"Nextgen Core: Caching","body":"The new core has currently no support for caching. We need to think of some neat mechanism to provide caching.","comments":4,"createdAt":"2017-06-09T22:43:41Z","updatedAt":"2018-02-26T19:48:49Z","closedAt":"2018-02-26T19:48:49Z","state":"closed","user":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"owner":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"milestone":{"title":"Nextgen-Core","createdAt":"2017-06-09T22:33:56Z","dueOn":null,"state":"open","htmlUrl":"https://github.com/coala/coala/milestone/18","description":""},"labels":[{"name":"area/core","color":"eb6420"},{"name":"difficulty/high","color":"B319e7"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1500757354000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4351","number":4351,"title":"Nextgen Core: Port core functions to class methods","body":"This could be a performance gain as we don't have to pass always the same variables around. Instead we can access them from self.","comments":9,"createdAt":"2017-06-09T22:48:03Z","updatedAt":"2017-07-22T21:02:34Z","closedAt":"2017-07-22T21:02:34Z","state":"closed","user":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"owner":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"assignee":{"login":"shreyans800755","avatarUrl":"https://avatars2.githubusercontent.com/u/3727351?v=4"},"milestone":{"title":"Nextgen-Core","createdAt":"2017-06-09T22:33:56Z","dueOn":null,"state":"open","htmlUrl":"https://github.com/coala/coala/milestone/18","description":""},"labels":[{"name":"area/core","color":"eb6420"},{"name":"difficulty/medium","color":"0052cc"},{"name":"type/performance","color":"fef2c0"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1527767510000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4352","number":4352,"title":"Nextgen Core: Port linter decorator to use `ProjectBear` and `FileBear` instead of old bear classes","body":"","comments":2,"createdAt":"2017-06-09T22:50:00Z","updatedAt":"2018-05-31T11:51:50Z","closedAt":null,"state":"open","user":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"owner":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"milestone":{"title":"Nextgen-Core","createdAt":"2017-06-09T22:33:56Z","dueOn":null,"state":"open","htmlUrl":"https://github.com/coala/coala/milestone/18","description":""},"labels":[{"name":"area/core","color":"eb6420"},{"name":"difficulty/medium","color":"0052cc"},{"name":"status/blocked","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1529194350000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4353","number":4353,"title":"Add pdb documentation","body":"documentation\nOpened via gitter by @meetmangukiya","comments":17,"createdAt":"2017-06-10T09:36:27Z","updatedAt":"2018-06-17T00:12:30Z","closedAt":null,"state":"open","user":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"owner":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"assignee":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/low","color":"207de5"},{"name":"hacktoberfest","color":"e99695"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1497363359000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4354","number":4354,"title":"Define __eq__ for Result object","body":"Using equality (like assertEqual) for Result is problematic because it also matches the repr id.\nOpened via gitter by @yukiisbored","comments":2,"createdAt":"2017-06-12T13:28:53Z","updatedAt":"2017-06-13T14:15:59Z","closedAt":"2017-06-12T13:55:35Z","state":"closed","user":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"owner":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"labels":[{"name":"status/invalid","color":"000000"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1514484203000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4356","number":4356,"title":"coala --files does\\not\\support\\backslash\\paths\\on\\windows","body":"The backslashes are just discarded:\n> coala -I --bears PEP8Bear --files docs\\conf.py\nExecuting section cli...\n[WARNING][17:14:44] No files matching 'C:\\Users\\Zimmermann\\Projects\\coala\\lib\\docsconf.py' were found. If this rule is not required, you can remove it from section [cli] in your .coafile to deactivate this warning.\n\n@sils Funny that no one complained about that so far :D","comments":18,"createdAt":"2017-06-12T15:18:19Z","updatedAt":"2017-12-28T18:03:23Z","closedAt":"2017-12-28T18:03:23Z","state":"closed","user":{"login":"userzimmermann","avatarUrl":"https://avatars3.githubusercontent.com/u/2088633?v=4"},"owner":{"login":"userzimmermann","avatarUrl":"https://avatars3.githubusercontent.com/u/2088633?v=4"},"assignee":{"login":"userzimmermann","avatarUrl":"https://avatars3.githubusercontent.com/u/2088633?v=4"},"labels":[{"name":"area/CLI","color":"006b75"},{"name":"area/usability","color":"d4c5f9"},{"name":"importance/medium","color":"fbca04"},{"name":"platform/windows","color":"0052cc"},{"name":"type/feature","color":"0052cc"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1497642681000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4358","number":4358,"title":"Use pathlib for Setting paths","body":"The paths in Settings, and globs, need a rewrite using pathlib (with backports maybe for Python 3.4).\nIt looks like an attempt was made at #2296","comments":3,"createdAt":"2017-06-12T16:35:06Z","updatedAt":"2017-06-16T19:51:21Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"difficulty/medium","color":"0052cc"},{"name":"importance/high","color":"eb6420"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1497749508000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4359","number":4359,"title":"Explain caching on Adding CI doc page","body":"Opened via gitter by @jayvdb","comments":1,"createdAt":"2017-06-13T20:05:24Z","updatedAt":"2017-06-18T01:31:48Z","closedAt":"2017-06-18T01:31:41Z","state":"closed","user":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"owner":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"labels":[{"name":"status/duplicate","color":"000000"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1497518773000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4362","number":4362,"title":"Create man page for coala(1)","body":"It'll be nice to have a man page for coala(1) that distro package maintainers can use.\nRelated to #1037\nOpened via gitter by @yukiisbored","comments":1,"createdAt":"2017-06-15T09:07:57Z","updatedAt":"2017-06-15T09:26:13Z","closedAt":"2017-06-15T09:26:13Z","state":"closed","user":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"owner":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"labels":[{"name":"status/invalid","color":"000000"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1499874735000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4363","number":4363,"title":"[Bug] coala reanalzes files during a run","body":"When running coala with command line arguments, a file that i changed with the \"open file in editor\" was then reanalyzed during the same run and a result for the line I just added was given.\nI had a .coarc file like this:\n[editor]\neditor=vim\n\ntype/bug\nOpened via gitter by @sims1253","comments":1,"createdAt":"2017-06-16T10:07:45Z","updatedAt":"2017-07-12T15:52:15Z","closedAt":null,"state":"open","user":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"owner":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"labels":[{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1497705737000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4364","number":4364,"title":"Executing section cli even if no cli section exists","body":"This is on 0.11.0\ntype/bug\nOpened via gitter by @sims1253","comments":1,"createdAt":"2017-06-16T10:17:40Z","updatedAt":"2017-06-17T13:22:17Z","closedAt":null,"state":"open","user":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"owner":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"labels":[{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1498856089000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4365","number":4365,"title":"Change ``prarses``->``parses``","body":"here","comments":7,"createdAt":"2017-06-16T13:02:46Z","updatedAt":"2017-06-30T20:54:49Z","closedAt":"2017-06-30T20:54:49Z","state":"closed","user":{"login":"AsnelChristian","avatarUrl":"https://avatars2.githubusercontent.com/u/10449314?v=4"},"owner":{"login":"AsnelChristian","avatarUrl":"https://avatars2.githubusercontent.com/u/10449314?v=4"},"assignee":{"login":"S2606","avatarUrl":"https://avatars0.githubusercontent.com/u/18497513?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1509167821000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4372","number":4372,"title":"Check repository for .yml files using YAMLLintBear","body":"Add YAMLLintBear in .coafile and fix .yml file issues raised by coala. See coala/coala-bears#1799 for reference.\ndifficulty/newcomer\nOpened via gitter by @Monal5031","comments":3,"createdAt":"2017-06-18T00:17:18Z","updatedAt":"2017-10-28T05:17:01Z","closedAt":null,"state":"open","user":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"owner":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"assignee":{"login":"iamedgarmarkov","avatarUrl":"https://avatars2.githubusercontent.com/u/1784323?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1497889654000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4375","number":4375,"title":"coverage plugins broken on Python 2.7 & 3.3","body":"Opened via gitter by @jayvdb","comments":1,"createdAt":"2017-06-18T06:45:14Z","updatedAt":"2017-06-19T16:27:34Z","closedAt":"2017-06-19T16:27:34Z","state":"closed","user":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"owner":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"assignee":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"area/upstream","color":"5319e7"},{"name":"difficulty/low","color":"207de5"},{"name":"importance/medium","color":"fbca04"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1498237734000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4380","number":4380,"title":"Typo `max_paramters` -> `max_parameters`","body":"in MethodSmell aspect\ndifficulty/newcomer","comments":2,"createdAt":"2017-06-21T02:50:47Z","updatedAt":"2017-06-23T17:08:54Z","closedAt":"2017-06-23T17:08:54Z","state":"closed","user":{"login":"adhikasp","avatarUrl":"https://avatars2.githubusercontent.com/u/6151302?v=4"},"owner":{"login":"adhikasp","avatarUrl":"https://avatars2.githubusercontent.com/u/6151302?v=4"},"assignee":{"login":"zeeshan-amjad","avatarUrl":"https://avatars0.githubusercontent.com/u/15914565?v=4"},"milestone":{"title":"#aspectsYEAH","createdAt":"2017-05-09T22:10:19Z","dueOn":null,"state":"open","htmlUrl":"https://github.com/coala/coala/milestone/17","description":"The mother of all futures of coala!\r\n\r\nhttps://github.com/orgs/coala/projects/3\r\n\r\nhttps://github.com/orgs/coala/projects/2\r\n"},"labels":[{"name":"area/aspects","color":"000000"},{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1498406934000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4381","number":4381,"title":"Create LookupError-derived aspectError for use in aspectsModule.__getitem__","body":"Relates to https://gitlab.com/coala/GSoC-2017/issues/298","comments":0,"createdAt":"2017-06-21T09:21:49Z","updatedAt":"2017-06-25T16:08:54Z","closedAt":"2017-06-25T16:08:54Z","state":"closed","user":{"login":"userzimmermann","avatarUrl":"https://avatars3.githubusercontent.com/u/2088633?v=4"},"owner":{"login":"userzimmermann","avatarUrl":"https://avatars3.githubusercontent.com/u/2088633?v=4"},"assignee":{"login":"adhikasp","avatarUrl":"https://avatars2.githubusercontent.com/u/6151302?v=4"},"milestone":{"title":"#aspectsYEAH","createdAt":"2017-05-09T22:10:19Z","dueOn":null,"state":"open","htmlUrl":"https://github.com/coala/coala/milestone/17","description":"The mother of all futures of coala!\r\n\r\nhttps://github.com/orgs/coala/projects/3\r\n\r\nhttps://github.com/orgs/coala/projects/2\r\n"},"labels":[{"name":"area/aspects","color":"000000"},{"name":"importance/high","color":"eb6420"},{"name":"type/feature","color":"0052cc"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1498412985000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4382","number":4382,"title":"Make aspectlist also support aspect name strings","body":"On instantiation, where it is then used to lookup the actual aspectclass to store\nFor checking existence with .__contains__\n\nThis will also simplify #4379 a lot :)\nRelates to https://gitlab.com/coala/GSoC-2017/issues/299","comments":0,"createdAt":"2017-06-21T09:24:36Z","updatedAt":"2017-06-25T17:49:45Z","closedAt":"2017-06-25T17:49:45Z","state":"closed","user":{"login":"userzimmermann","avatarUrl":"https://avatars3.githubusercontent.com/u/2088633?v=4"},"owner":{"login":"userzimmermann","avatarUrl":"https://avatars3.githubusercontent.com/u/2088633?v=4"},"assignee":{"login":"adhikasp","avatarUrl":"https://avatars2.githubusercontent.com/u/6151302?v=4"},"milestone":{"title":"#aspectsYEAH","createdAt":"2017-05-09T22:10:19Z","dueOn":null,"state":"open","htmlUrl":"https://github.com/coala/coala/milestone/17","description":"The mother of all futures of coala!\r\n\r\nhttps://github.com/orgs/coala/projects/3\r\n\r\nhttps://github.com/orgs/coala/projects/2\r\n"},"labels":[{"name":"area/aspects","color":"000000"},{"name":"importance/high","color":"eb6420"},{"name":"type/feature","color":"0052cc"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1498480934000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4384","number":4384,"title":"Add aspectlist.get method","body":">>> aspects = aspectlist([Root.Smell.MethodSmell, Root.Smell.ClassSmell.DataClump()])\n>>> aspects.get('MethodSmell')\n<aspectclass 'Root.Smell.MethodSmell'>\n>>> aspects.get('ClassSmell.DataClump')\n<DataClump object(...) ...>\n>>> aspects.get('BadSmell')\nNone\nRelates to https://gitlab.com/coala/GSoC-2017/issues/301","comments":0,"createdAt":"2017-06-21T13:17:00Z","updatedAt":"2017-06-26T12:42:14Z","closedAt":"2017-06-26T12:42:14Z","state":"closed","user":{"login":"userzimmermann","avatarUrl":"https://avatars3.githubusercontent.com/u/2088633?v=4"},"owner":{"login":"userzimmermann","avatarUrl":"https://avatars3.githubusercontent.com/u/2088633?v=4"},"assignee":{"login":"adhikasp","avatarUrl":"https://avatars2.githubusercontent.com/u/6151302?v=4"},"milestone":{"title":"#aspectsYEAH","createdAt":"2017-05-09T22:10:19Z","dueOn":null,"state":"open","htmlUrl":"https://github.com/coala/coala/milestone/17","description":"The mother of all futures of coala!\r\n\r\nhttps://github.com/orgs/coala/projects/3\r\n\r\nhttps://github.com/orgs/coala/projects/2\r\n"},"labels":[{"name":"area/aspects","color":"000000"},{"name":"importance/high","color":"eb6420"},{"name":"type/feature","color":"0052cc"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1500454946000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4387","number":4387,"title":"Specify in the docs that newcomers shouldn't delete forks","body":"Opened via gitter by @meetmangukiya","comments":8,"createdAt":"2017-06-22T15:53:03Z","updatedAt":"2017-07-19T09:02:26Z","closedAt":"2017-07-19T09:02:26Z","state":"closed","user":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"owner":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"assignee":{"login":"gureks","avatarUrl":"https://avatars2.githubusercontent.com/u/13059420?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1519040733000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4388","number":4388,"title":"Instanced aspect doesn't instance its children","body":"Current behaviour\n>>> coalib.bearlib.aspects['Metadata']('Python 3.4')\n<coalib.bearlib.aspects.Metadata.Root.Metadata object at 0x...>\n>>> coalib.bearlib.aspects['Metadata']('Python 3.4').CommitMessage\n<aspectclass 'Root.Metadata.CommitMessage'>\nExpected behaviour\n>>> coalib.bearlib.aspects['Metadata']('Python 3.4')\n<coalib.bearlib.aspects.Metadata.Root.Metadata object at 0x...>\n>>> coalib.bearlib.aspects['Metadata']('Python 3.4').CommitMessage\n<coalib.bearlib.aspects.Metadata.Root.Metadata.CommitMessage object at 0x...>\narea/aspects difficulty/medium","comments":0,"createdAt":"2017-06-22T16:06:52Z","updatedAt":"2018-02-19T11:45:33Z","closedAt":"2017-07-13T02:15:18Z","state":"closed","user":{"login":"adhikasp","avatarUrl":"https://avatars2.githubusercontent.com/u/6151302?v=4"},"owner":{"login":"adhikasp","avatarUrl":"https://avatars2.githubusercontent.com/u/6151302?v=4"},"assignee":{"login":"adhikasp","avatarUrl":"https://avatars2.githubusercontent.com/u/6151302?v=4"},"labels":[{"name":"area/aspects","color":"000000"},{"name":"difficulty/medium","color":"0052cc"},{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1532315591000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4391","number":4391,"title":"Aspect __eq__ should check language","body":"https://github.com/coala/coala/blob/master/coalib/bearlib/aspects/base.py#L40\n>>> Root.Metadata('py') is not Root.Metadata('cs')\nTrue\narea/aspects difficulty/low","comments":7,"createdAt":"2017-06-23T06:35:22Z","updatedAt":"2018-07-23T03:13:11Z","closedAt":null,"state":"open","user":{"login":"adhikasp","avatarUrl":"https://avatars2.githubusercontent.com/u/6151302?v=4"},"owner":{"login":"adhikasp","avatarUrl":"https://avatars2.githubusercontent.com/u/6151302?v=4"},"assignee":{"login":"adhikasp","avatarUrl":"https://avatars2.githubusercontent.com/u/6151302?v=4"},"milestone":{"title":"#aspectsYEAH","createdAt":"2017-05-09T22:10:19Z","dueOn":null,"state":"open","htmlUrl":"https://github.com/coala/coala/milestone/17","description":"The mother of all futures of coala!\r\n\r\nhttps://github.com/orgs/coala/projects/3\r\n\r\nhttps://github.com/orgs/coala/projects/2\r\n"},"labels":[{"name":"area/aspects","color":"000000"},{"name":"difficulty/low","color":"207de5"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1498344981000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4393","number":4393,"title":".rultor.yml unnecessarily installs pip3","body":".rultor.yml install unnecessarily tries to install pip3.\nSee coala/coala-bears#1853 (comment) for more info.","comments":0,"createdAt":"2017-06-23T08:05:30Z","updatedAt":"2017-06-24T22:56:21Z","closedAt":"2017-06-24T22:56:21Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"},{"name":"importance/low","color":"70E870"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1510610178000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4396","number":4396,"title":"ContextManagersTest::test_subprocess_timeout keeps failing unconditionally","body":"ContextManagersTest::test_subprocess_timeout fails on random occasions and needs improvement to prevent this from happening again. Here's one of them: https://travis-ci.org/coala/coala/jobs/246138796","comments":3,"createdAt":"2017-06-23T14:48:57Z","updatedAt":"2017-11-13T21:56:18Z","closedAt":null,"state":"open","user":{"login":"yukiisbored","avatarUrl":"https://avatars0.githubusercontent.com/u/18437312?v=4"},"owner":{"login":"yukiisbored","avatarUrl":"https://avatars0.githubusercontent.com/u/18437312?v=4"},"labels":[{"name":"area/tests","color":"bfd4f2"},{"name":"difficulty/medium","color":"0052cc"},{"name":"importance/medium","color":"fbca04"},{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1521392227000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4400","number":4400,"title":"Result: Diffs are not compared!","body":"Results with same values except having different diffs are considered to be equal! This is totally bad and needs to be changed.\nWe have to update generate_ordering to also take diffs into account (as the last entry before debug_msg).\nThis issue might involve extending tests here and in coala-bears to test also against diffs.","comments":6,"createdAt":"2017-06-24T22:42:40Z","updatedAt":"2018-03-18T16:57:07Z","closedAt":"2018-03-18T16:57:07Z","state":"closed","user":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"owner":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"assignee":{"login":"nvzard","avatarUrl":"https://avatars0.githubusercontent.com/u/19310512?v=4"},"labels":[{"name":"area/tests","color":"bfd4f2"},{"name":"difficulty/medium","color":"0052cc"},{"name":"importance/high","color":"eb6420"},{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1498395333000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4401","number":4401,"title":"Rename aspectlist to AspectList","body":"aspectlist was added in #4057 for 0.11, but is not currently used.  It should follow PEP8 naming conventions , which means it should be called AspectList.  cc @adhikasp\nOpened via gitter by @jayvdb","comments":0,"createdAt":"2017-06-24T22:49:52Z","updatedAt":"2017-06-25T12:55:33Z","closedAt":"2017-06-25T12:55:33Z","state":"closed","user":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"owner":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"assignee":{"login":"adhikasp","avatarUrl":"https://avatars2.githubusercontent.com/u/6151302?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1498406936000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4402","number":4402,"title":"aspects: Exception messages should start with a capital letter","body":"$ git grep \"raise[^s][^(]*('[a-z]* \"\ncoalib/bearlib/aspects/__init__.py:            raise LookupError('no aspect named %s' % repr(aspectname))\ncoalib/bearlib/aspects/__init__.py:            raise LookupError('multiple aspects named %s. choose from %s' % (\ncoalib/results/LineDiff.py:            raise TypeError('change must be False or a tuple with an original '\ncoalib/results/LineDiff.py:            raise TypeError('delete can only be a boolean value.')\ncoalib/results/Result.py:            raise ValueError('severity is not a valid RESULT_SEVERITY')\ncoalib/settings/Section.py:            raise TypeError('defaults has to be a Section object or None.')\ncoalib/settings/Section.py:            raise ValueError('defaults may not be self for non-recursivity.')\n\nIt looks like only the first two (aspects) has this problem;  the other instances are a parameter names and thus cant be uppercased.","comments":2,"createdAt":"2017-06-25T00:20:32Z","updatedAt":"2017-06-25T16:08:56Z","closedAt":"2017-06-25T16:08:56Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1499589496000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4405","number":4405,"title":"coala --non-interactive repeated in CI","body":"Scenario:\nOn pushing changes to a PR, gitmate-bot gives errors if any (Mainly because the contributor forgot to run coala in local before pushing).\nIn such cases, travis and circle CI fails although build and tests are passing. Final status goes red because of the command coala --non-interactive. Since we have separated the job of checking linting/styling of the code to gitmate, job of travis/circle CI should only be limited to test the code.\nThis will also improve build time, and give clear status of the builds to the fellow coalains.","comments":7,"createdAt":"2017-06-25T17:14:45Z","updatedAt":"2017-07-09T08:38:16Z","closedAt":null,"state":"open","user":{"login":"shreyans800755","avatarUrl":"https://avatars2.githubusercontent.com/u/3727351?v=4"},"owner":{"login":"shreyans800755","avatarUrl":"https://avatars2.githubusercontent.com/u/3727351?v=4"},"labels":[{"name":"area/CI","color":"eb6420"},{"name":"status/needs info","color":"006b75"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1498961042000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4406","number":4406,"title":"Add outputs and their explanation in Writing Native Bears tutorial","body":"The guide to Writing Native Bears includes some commands, as examples, which the readers should try to reproduce on their machines but it does not show the expected outputs for these commands. Adding the outputs and a little explanation about them will be of great help to a new user who is trying to understand the process by reproducing the commands.","comments":0,"createdAt":"2017-06-25T17:19:30Z","updatedAt":"2017-07-02T02:04:02Z","closedAt":"2017-07-02T02:04:02Z","state":"closed","user":{"login":"nityeshaga","avatarUrl":"https://avatars1.githubusercontent.com/u/24698858?v=4"},"owner":{"login":"nityeshaga","avatarUrl":"https://avatars1.githubusercontent.com/u/24698858?v=4"},"assignee":{"login":"nityeshaga","avatarUrl":"https://avatars1.githubusercontent.com/u/24698858?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/low","color":"207de5"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1498423487000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4408","number":4408,"title":"Remove Aspect prefix from all Aspect... named classes and expose them in coalib.bearlib.aspects, which should always be imported as coala_aspects","body":"We have so many classes called Aspect... now that it feels like unnecessary redundancy. Furthermore, the coalib.bearlib.aspects package has already special features like a module level .__getitem__. So it should be generally used as prefix for the whole aspects API, making imports and usage of aspects features even simpler. Of course, always prefixing any usage with coalib.bearlib.aspects is a bit overhead, so it should always be imported as coala_aspects. Then, instead of:\nfrom coalib.bearlib.aspects import ..., ..., ... you can then simply do:\nimport coalib.bearlib.aspects as coala_aspects\nand access the whole aspects API via attributes from the coala_aspects module object. This will then get even more simpler when the aspects module moves out of bearlib or even becomes a separate top-level package in the future like proposed in #4038\n@coala/aspects-developers @jayvdb","comments":0,"createdAt":"2017-06-25T20:27:07Z","updatedAt":"2017-06-25T20:44:47Z","closedAt":null,"state":"open","user":{"login":"userzimmermann","avatarUrl":"https://avatars3.githubusercontent.com/u/2088633?v=4"},"owner":{"login":"userzimmermann","avatarUrl":"https://avatars3.githubusercontent.com/u/2088633?v=4"},"assignee":{"login":"userzimmermann","avatarUrl":"https://avatars3.githubusercontent.com/u/2088633?v=4"},"milestone":{"title":"#aspectsYEAH","createdAt":"2017-05-09T22:10:19Z","dueOn":null,"state":"open","htmlUrl":"https://github.com/coala/coala/milestone/17","description":"The mother of all futures of coala!\r\n\r\nhttps://github.com/orgs/coala/projects/3\r\n\r\nhttps://github.com/orgs/coala/projects/2\r\n"},"labels":[{"name":"area/aspects","color":"000000"},{"name":"type/codestyle","color":"d4c5f9"},{"name":"type/feature","color":"0052cc"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1510610168000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4409","number":4409,"title":"Remove all pytest-specific features from aspects tests","body":"Those repeating unittest vs pytest discussions just take up too much time ;)\n@coala/aspects-developers @jayvdb","comments":0,"createdAt":"2017-06-25T20:33:22Z","updatedAt":"2017-11-13T21:56:08Z","closedAt":null,"state":"open","user":{"login":"userzimmermann","avatarUrl":"https://avatars3.githubusercontent.com/u/2088633?v=4"},"owner":{"login":"userzimmermann","avatarUrl":"https://avatars3.githubusercontent.com/u/2088633?v=4"},"assignee":{"login":"userzimmermann","avatarUrl":"https://avatars3.githubusercontent.com/u/2088633?v=4"},"milestone":{"title":"#aspectsYEAH","createdAt":"2017-05-09T22:10:19Z","dueOn":null,"state":"open","htmlUrl":"https://github.com/coala/coala/milestone/17","description":"The mother of all futures of coala!\r\n\r\nhttps://github.com/orgs/coala/projects/3\r\n\r\nhttps://github.com/orgs/coala/projects/2\r\n"},"labels":[{"name":"area/aspects","color":"000000"},{"name":"area/tests","color":"bfd4f2"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1498480936000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4410","number":4410,"title":"Implement `.get()` to find subaspects from aspectclasses and instances","body":"The difficulty is that .get() must work like a bound method from an aspectclass and from an aspect instance, what can be achieved by a descriptor class like:\nclass subaspectGetter:                            \n                                                  \n    def __get__(self, obj, owner):                \n        if obj is None:                           \n            # ==> access from aspectclass         \n                                                  \n            def get_subaspect_of_class(subaspect):\n                # owner is your aspectclass       \n                ...                               \n                                                  \n            return get_subaspect_of_class         \n                                                  \n        # ==> access from aspect instance         \n\n        def get_subaspect_of_instance(subaspect): \n            # obj is your aspect instance         \n            ...                                   \n                                                  \n        return get_subaspect_of_instance          \nThen:\nclass aspectbase:\n\n    ...\n\n    get = subaspectGetter()\n\n    ...\nIf the subaspect can't be found, the return value should be None\nRelates to https://gitlab.com/coala/GSoC-2017/issues/313\ncc @jayvdb","comments":0,"createdAt":"2017-06-25T20:56:43Z","updatedAt":"2017-06-26T12:42:16Z","closedAt":"2017-06-26T12:42:16Z","state":"closed","user":{"login":"userzimmermann","avatarUrl":"https://avatars3.githubusercontent.com/u/2088633?v=4"},"owner":{"login":"userzimmermann","avatarUrl":"https://avatars3.githubusercontent.com/u/2088633?v=4"},"assignee":{"login":"adhikasp","avatarUrl":"https://avatars2.githubusercontent.com/u/6151302?v=4"},"milestone":{"title":"#aspectsYEAH","createdAt":"2017-05-09T22:10:19Z","dueOn":null,"state":"open","htmlUrl":"https://github.com/coala/coala/milestone/17","description":"The mother of all futures of coala!\r\n\r\nhttps://github.com/orgs/coala/projects/3\r\n\r\nhttps://github.com/orgs/coala/projects/2\r\n"},"labels":[{"name":"area/aspects","color":"000000"},{"name":"importance/high","color":"eb6420"},{"name":"type/feature","color":"0052cc"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1498483246000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4411","number":4411,"title":"Add aspectModule.get() for looking up aspects without raising","body":"Since we have #4384 and #4410 there should also be an according aspectsModule.get() method that just returns None if the given aspect was not found\nRelates to https://gitlab.com/coala/GSoC-2017/issues/314\ncc @coala/aspects-developers @jayvdb","comments":0,"createdAt":"2017-06-25T21:43:08Z","updatedAt":"2017-06-26T13:20:46Z","closedAt":"2017-06-26T13:20:46Z","state":"closed","user":{"login":"userzimmermann","avatarUrl":"https://avatars3.githubusercontent.com/u/2088633?v=4"},"owner":{"login":"userzimmermann","avatarUrl":"https://avatars3.githubusercontent.com/u/2088633?v=4"},"assignee":{"login":"adhikasp","avatarUrl":"https://avatars2.githubusercontent.com/u/6151302?v=4"},"milestone":{"title":"#aspectsYEAH","createdAt":"2017-05-09T22:10:19Z","dueOn":null,"state":"open","htmlUrl":"https://github.com/coala/coala/milestone/17","description":"The mother of all futures of coala!\r\n\r\nhttps://github.com/orgs/coala/projects/3\r\n\r\nhttps://github.com/orgs/coala/projects/2\r\n"},"labels":[{"name":"area/aspects","color":"000000"},{"name":"type/feature","color":"0052cc"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1500636291000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4413","number":4413,"title":"Replace all mentions of `pip` in the documentation with `pip3`","body":"Currently the documentation uses a mix of pip and pip3. Change all mentions of pip to pip3 wherever required.","comments":5,"createdAt":"2017-06-26T15:02:09Z","updatedAt":"2017-07-21T11:24:51Z","closedAt":"2017-07-21T11:24:51Z","state":"closed","user":{"login":"co-robo","avatarUrl":"https://avatars2.githubusercontent.com/u/29058257?v=4"},"owner":{"login":"co-robo","avatarUrl":"https://avatars2.githubusercontent.com/u/29058257?v=4"},"assignee":{"login":"S2606","avatarUrl":"https://avatars0.githubusercontent.com/u/18497513?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/low","color":"207de5"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1498844156000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4418","number":4418,"title":"execute_bear: Improve AssertionError message generation","body":"Instead of raise\nAssertionError(str(err) + ' \\n' + '\\n'.join(msg))\n\nuse\nraise AssertionError(str(err) + ''.join('\\n' + m for m in msg))\n\nso if msg is maybe really empty, we don't have a superfluous \\n\ntype/test\narea/tests","comments":0,"createdAt":"2017-06-27T14:18:31Z","updatedAt":"2017-06-30T17:35:56Z","closedAt":"2017-06-30T17:35:56Z","state":"closed","user":{"login":"yash-nisar","avatarUrl":"https://avatars1.githubusercontent.com/u/14862976?v=4"},"owner":{"login":"yash-nisar","avatarUrl":"https://avatars1.githubusercontent.com/u/14862976?v=4"},"assignee":{"login":"yash-nisar","avatarUrl":"https://avatars1.githubusercontent.com/u/14862976?v=4"},"labels":[{"name":"area/tests","color":"bfd4f2"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1498587333000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4421","number":4421,"title":"Add aspectsModule.__iter__","body":"To be able to iterate over all available aspects by directly using the coalib.bearlib.aspects module:\nimport coalib.bearlib.aspects as coala_aspects\n>>> list(coala_aspects):\n[<aspectclass 'Root'>,\n <aspectclass 'Root.Metadata'>,\n <aspectclass 'Root.Metadata.CommitMessage'>,\n ...]\n@coala/aspects-developers","comments":0,"createdAt":"2017-06-27T18:03:21Z","updatedAt":"2017-06-27T18:15:33Z","closedAt":null,"state":"open","user":{"login":"userzimmermann","avatarUrl":"https://avatars3.githubusercontent.com/u/2088633?v=4"},"owner":{"login":"userzimmermann","avatarUrl":"https://avatars3.githubusercontent.com/u/2088633?v=4"},"assignee":{"login":"userzimmermann","avatarUrl":"https://avatars3.githubusercontent.com/u/2088633?v=4"},"milestone":{"title":"#aspectsYEAH","createdAt":"2017-05-09T22:10:19Z","dueOn":null,"state":"open","htmlUrl":"https://github.com/coala/coala/milestone/17","description":"The mother of all futures of coala!\r\n\r\nhttps://github.com/orgs/coala/projects/3\r\n\r\nhttps://github.com/orgs/coala/projects/2\r\n"},"labels":[{"name":"area/aspects","color":"000000"},{"name":"type/codestyle","color":"d4c5f9"},{"name":"type/feature","color":"0052cc"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1498587541000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4422","number":4422,"title":"Add aspectsModule.filter()","body":"According to #4412 (review)\nTo iterate over available aspects filtered by name, tastes, kind (leaf, container, ...), or just has_subaspects instead of the latter, ...\n>>> import coalib.bearlib.aspects as coala_aspects\n>>> list(coala_aspects.filter(name='Length')\n[<aspectclass 'Root.Metadata.CommitMessage.Body.Length'>,\n <aspectclass 'Root.Metadata.CommitMessage.Shortlog.Length'>]\n@coala/aspects-developers","comments":0,"createdAt":"2017-06-27T18:11:16Z","updatedAt":"2017-06-27T18:19:01Z","closedAt":null,"state":"open","user":{"login":"userzimmermann","avatarUrl":"https://avatars3.githubusercontent.com/u/2088633?v=4"},"owner":{"login":"userzimmermann","avatarUrl":"https://avatars3.githubusercontent.com/u/2088633?v=4"},"assignee":{"login":"userzimmermann","avatarUrl":"https://avatars3.githubusercontent.com/u/2088633?v=4"},"milestone":{"title":"#aspectsYEAH","createdAt":"2017-05-09T22:10:19Z","dueOn":null,"state":"open","htmlUrl":"https://github.com/coala/coala/milestone/17","description":"The mother of all futures of coala!\r\n\r\nhttps://github.com/orgs/coala/projects/3\r\n\r\nhttps://github.com/orgs/coala/projects/2\r\n"},"labels":[{"name":"area/aspects","color":"000000"},{"name":"type/feature","color":"0052cc"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1498846679000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4423","number":4423,"title":"Newcomers_Guide.rst: Reason for not resolving issue on master of forked repository. ","body":"As of now there is a Note in newcomers guide http://api.coala.io/en/latest/Developers/Newcomers_Guide.html which explicitly states that before resolving a issue you need to create a new branch and then resolve the issue.\nBut mistakenly first timers resolve the issue on master branch of there forked repository itself. IMO, we can add a note why issues should not be resolved on master branch. There are couple of PR's where issue is being resolved on master.\ncc @jayvdb @meetmangukiya @userzimmermann","comments":4,"createdAt":"2017-06-28T15:22:36Z","updatedAt":"2017-06-30T18:17:59Z","closedAt":"2017-06-30T18:17:59Z","state":"closed","user":{"login":"mridubhatnagar","avatarUrl":"https://avatars3.githubusercontent.com/u/16894718?v=4"},"owner":{"login":"mridubhatnagar","avatarUrl":"https://avatars3.githubusercontent.com/u/16894718?v=4"},"assignee":{"login":"JohnMoutafis","avatarUrl":"https://avatars2.githubusercontent.com/u/2430971?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/low","color":"207de5"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1509976991000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4425","number":4425,"title":"Nextgen-Core: New bear type - DependencyBear","body":"Often it's useful to spawn tasks for each dependency result yielded. Got the idea from coala/coala-bears#1871:\n\nwe need a \"link status bear\" or \"link bear\" which extracts all links from a file and stores information about those links in a re-usable manner.\n\nWe could parallelize link-wise in this case with a bear dependency. But the general idea was born from that, that for each dependency we spawn a new task, instead of each file.\nI'm not sure how the task generation shall exactly look like, there are multiple possibilities (because self.dependency_results is a dict):\n\nPass every dependency-result to the analyze function: def analyze(self, bear, dependency_result)\nProvide every dependency result at once for each bear: def analyze(self, bear, dependency_results)\nConfigurable behaviour allowing all of these (either using new bear classes or allowing to pass some settings).\n...\n\nCurrently I'm favoring the 1st one.\nThe name of DependencyBear might change :)","comments":0,"createdAt":"2017-06-30T00:42:38Z","updatedAt":"2017-11-06T14:03:11Z","closedAt":"2017-11-06T14:03:11Z","state":"closed","user":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"owner":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"assignee":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"milestone":{"title":"Nextgen-Core","createdAt":"2017-06-09T22:33:56Z","dueOn":null,"state":"open","htmlUrl":"https://github.com/coala/coala/milestone/18","description":""},"labels":[{"name":"area/core","color":"eb6420"},{"name":"difficulty/medium","color":"0052cc"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1511317866000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4428","number":4428,"title":"Add `sudo` to the installation guides","body":"When installing things on Ubuntu/Debian sudo access is required. This is not mentioned in the guides. This might trip newcomers when getting started (tripped me 😅 ). So, we should add sudo when needed.","comments":11,"createdAt":"2017-06-30T18:02:05Z","updatedAt":"2017-11-22T02:31:06Z","closedAt":"2017-11-22T02:31:05Z","state":"closed","user":{"login":"nityeshaga","avatarUrl":"https://avatars1.githubusercontent.com/u/24698858?v=4"},"owner":{"login":"nityeshaga","avatarUrl":"https://avatars1.githubusercontent.com/u/24698858?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1512418666000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4432","number":4432,"title":"New argument `--show-settings` to explicitly show optional and non-optional settings of bears","body":"Currently, there is no way to see the optional and non-optional settings of a bear. It should be possible to see the settings in CLI, rather than having to visit the website.","comments":23,"createdAt":"2017-06-30T22:53:23Z","updatedAt":"2017-12-04T20:17:46Z","closedAt":"2017-12-04T20:17:46Z","state":"closed","user":{"login":"meetmangukiya","avatarUrl":"https://avatars0.githubusercontent.com/u/7620533?v=4"},"owner":{"login":"meetmangukiya","avatarUrl":"https://avatars0.githubusercontent.com/u/7620533?v=4"},"assignee":{"login":"shreyans800755","avatarUrl":"https://avatars2.githubusercontent.com/u/3727351?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"},{"name":"type/feature","color":"0052cc"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1499342156000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4433","number":4433,"title":"TypeError raised during debug logging","body":"Occurred at https://travis-ci.org/jayvdb/docker-coala-base/builds/248989641 , but also in coala/coala-bears#1747\nSomething is wrong with the linter, but more importantly a debug log should not raise a TypeError exception, as that hides the real problem / real exception.\n           Traceback information is provided below:\nE           \nE           Traceback (most recent call last):\nE             File \"/coala/coalib/bears/Bear.py\", line 292, in execute\nE               result = self.run_bear_from_section(args, kwargs)\nE             File \"/coala/coalib/bears/Bear.py\", line 285, in run_bear_from_section\nE               return self.run(*args, **kwargs)\nE             File \"/coala/coalib/bearlib/abstractions/Linter.py\", line 657, in run\nE               self.debug(\"Running '{}'\".format(' '.join(arguments)))\nE           TypeError: sequence item 1: expected str instance, NoneType found","comments":0,"createdAt":"2017-07-01T01:49:02Z","updatedAt":"2017-07-06T11:55:56Z","closedAt":"2017-07-06T11:55:56Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"JohnMoutafis","avatarUrl":"https://avatars2.githubusercontent.com/u/2430971?v=4"},"labels":[{"name":"area/bears","color":"eb6420"},{"name":"difficulty/low","color":"207de5"},{"name":"importance/high","color":"eb6420"},{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1499288983000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4435","number":4435,"title":"Review guide does not contain review queue link","body":"difficulty/newcomer\nOpened via gitter by @Arsfiqball","comments":1,"createdAt":"2017-07-01T14:42:11Z","updatedAt":"2017-07-05T21:09:43Z","closedAt":"2017-07-05T21:09:43Z","state":"closed","user":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"owner":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"assignee":{"login":"troublemagnet","avatarUrl":"https://avatars1.githubusercontent.com/u/28952053?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1501083575000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4436","number":4436,"title":"Nextgen-Gen Bears: Make bear dependencies and requirements instance-bound, not class-bound","body":"Then we have the flexibility to choose dependencies depending on section settings. This could be beneficial for e.g. TextLintBear (introduced in coala/coala-bears@d09c8f9). Depending on the settings, different plugins/rules are necessary.\nInspired by this comment on gitter:\n\n\nand maybe coala/coala#1079 should be re-opened; that would provide a fairly safe way to allow bears to add a optional 'language' setting which would default to whatever linguist detects\n\n\nwhat do you think about re-opening this? the problem is that bears usually start supporting only a single language, then a mandatory language parameter is added, which is a breaking change (we did this in 0.8 iirc for a few bears).\nI dont like the idea of running linguist in coala; the alternative would be to create a \"missing setting bear dependency\" so a setting can be pre-filled by a LinguistBear if not set in .coafile\n\nBut instead of adding a separate missing_setting_dependency field, we allow more flexibility by controlling the needed dependencies inside __init__ of a bear.","comments":9,"createdAt":"2017-07-01T17:44:05Z","updatedAt":"2017-07-26T15:39:35Z","closedAt":"2017-07-26T15:39:06Z","state":"closed","user":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"owner":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"milestone":{"title":"Nextgen-Core","createdAt":"2017-06-09T22:33:56Z","dueOn":null,"state":"open","htmlUrl":"https://github.com/coala/coala/milestone/18","description":""},"labels":[{"name":"area/core","color":"eb6420"},{"name":"difficulty/medium","color":"0052cc"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1499916613000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4438","number":4438,"title":"Add AspectList.exclude","body":"Extend AspectList class to have excludes attribute that hold list of aspect that marked as exception of the list. Trying to access aspect or subaspect of item in excludes will always give False/None.\n>>> Metadata not in AspectList([Root], excludes=[Metadata])\nTrue\n>>> AspectList([Root], excludes=[Metadata]).get('metadata')\nNone\n\nThis feature will be used to excluding an aspect (to \"deactivate\") that was defined in user's coala configuration.\narea/aspects","comments":1,"createdAt":"2017-07-02T16:29:34Z","updatedAt":"2017-07-13T03:30:13Z","closedAt":"2017-07-13T03:30:13Z","state":"closed","user":{"login":"adhikasp","avatarUrl":"https://avatars2.githubusercontent.com/u/6151302?v=4"},"owner":{"login":"adhikasp","avatarUrl":"https://avatars2.githubusercontent.com/u/6151302?v=4"},"assignee":{"login":"adhikasp","avatarUrl":"https://avatars2.githubusercontent.com/u/6151302?v=4"},"milestone":{"title":"#aspectsYEAH","createdAt":"2017-05-09T22:10:19Z","dueOn":null,"state":"open","htmlUrl":"https://github.com/coala/coala/milestone/17","description":"The mother of all futures of coala!\r\n\r\nhttps://github.com/orgs/coala/projects/3\r\n\r\nhttps://github.com/orgs/coala/projects/2\r\n"},"labels":[{"name":"area/aspects","color":"000000"},{"name":"type/feature","color":"0052cc"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1499681415000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4442","number":4442,"title":"Newcomers_Guide.rst: Step 6 out of place bold text","body":"Out of place bold text exist in Step 6 section of the Newcomers_Guide.rst documentation:\n\nand shows in the navigation menu as well:","comments":3,"createdAt":"2017-07-04T13:21:20Z","updatedAt":"2017-07-10T10:10:15Z","closedAt":"2017-07-10T10:10:15Z","state":"closed","user":{"login":"JohnMoutafis","avatarUrl":"https://avatars2.githubusercontent.com/u/2430971?v=4"},"owner":{"login":"JohnMoutafis","avatarUrl":"https://avatars2.githubusercontent.com/u/2430971?v=4"},"assignee":{"login":"sidharthskumar","avatarUrl":"https://avatars1.githubusercontent.com/u/23445638?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1499444886000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4443","number":4443,"title":"coala should recheck the issue it pointed while running locally","body":"coala should recheck the issue it raised after user has fixed it, it currently skips the line on which the issue was raised and also the newly added lines.\ntype/bug difficulty/hard\nOpened via gitter by @Monal5031","comments":4,"createdAt":"2017-07-04T14:34:30Z","updatedAt":"2017-07-07T16:28:06Z","closedAt":"2017-07-07T16:27:58Z","state":"closed","user":{"login":"co-robo","avatarUrl":"https://avatars2.githubusercontent.com/u/29058257?v=4"},"owner":{"login":"co-robo","avatarUrl":"https://avatars2.githubusercontent.com/u/29058257?v=4"},"labels":[{"name":"status/invalid","color":"000000"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1509398505000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4446","number":4446,"title":"Raise error/warning when a wrong setting is given in the cmdline args","body":"For example, while running the given command,\ncoala -b SpaceConsistencyBear -S random_value=True -f xyz.py --flush-cache\n\ncoala doesn't raise an error/warning for the wrong setting (random_value=True).","comments":8,"createdAt":"2017-07-05T05:49:55Z","updatedAt":"2017-10-30T21:21:45Z","closedAt":null,"state":"open","user":{"login":"yash-nisar","avatarUrl":"https://avatars1.githubusercontent.com/u/14862976?v=4"},"owner":{"login":"yash-nisar","avatarUrl":"https://avatars1.githubusercontent.com/u/14862976?v=4"},"assignee":{"login":"CCInCharge","avatarUrl":"https://avatars2.githubusercontent.com/u/7788704?v=4"},"labels":[{"name":"area/CLI","color":"006b75"},{"name":"difficulty/low","color":"207de5"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1499697017000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4451","number":4451,"title":"LocalBearTestHelper: Remove `check_order=False` from `check_line_result_count`","body":"The order doesn't matter when while comparing the length of the results.\ntype/test\narea/tests","comments":0,"createdAt":"2017-07-07T13:35:27Z","updatedAt":"2017-07-10T14:30:17Z","closedAt":"2017-07-10T14:30:17Z","state":"closed","user":{"login":"yash-nisar","avatarUrl":"https://avatars1.githubusercontent.com/u/14862976?v=4"},"owner":{"login":"yash-nisar","avatarUrl":"https://avatars1.githubusercontent.com/u/14862976?v=4"},"assignee":{"login":"yash-nisar","avatarUrl":"https://avatars1.githubusercontent.com/u/14862976?v=4"},"labels":[{"name":"area/tests","color":"bfd4f2"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1521665853000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4452","number":4452,"title":"Script that generates `check_results` tests","body":"Take your bear, run the script on some files, and generate a test file. Automation that is aimed to ease test development.\narea/tests\nstatus/needs design","comments":6,"createdAt":"2017-07-07T13:41:51Z","updatedAt":"2018-03-21T20:57:33Z","closedAt":null,"state":"open","user":{"login":"yash-nisar","avatarUrl":"https://avatars1.githubusercontent.com/u/14862976?v=4"},"owner":{"login":"yash-nisar","avatarUrl":"https://avatars1.githubusercontent.com/u/14862976?v=4"},"assignee":{"login":"sangamcse","avatarUrl":"https://avatars2.githubusercontent.com/u/26381717?v=4"},"labels":[{"name":"area/tests","color":"bfd4f2"},{"name":"cool and awesome","color":"0052cc"},{"name":"difficulty/medium","color":"0052cc"},{"name":"status/needs design","color":"5319e7"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1503940384000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4454","number":4454,"title":"HiddenResult constructor should allow all parameters of Result","body":"The HiddenResult objects should work more like real Result.  i.e. if the data in the HiddenResult has a line/col, it should have an affected_code.\nThe suitability of the other Result constructor parameters should be evaluated on a case-by-case basis, but they should all be made available at once, so the order of the parameters is similar.\nThe missing parameters should be added after contents to be backwards compatible.\ndifficulty/low\nOpened by @jayvdb","comments":1,"createdAt":"2017-07-08T08:34:26Z","updatedAt":"2017-08-28T17:13:04Z","closedAt":"2017-08-28T17:13:04Z","state":"closed","user":{"login":"co-robo","avatarUrl":"https://avatars2.githubusercontent.com/u/29058257?v=4"},"owner":{"login":"co-robo","avatarUrl":"https://avatars2.githubusercontent.com/u/29058257?v=4"},"assignee":{"login":"gurpreetsingh00885","avatarUrl":"https://avatars0.githubusercontent.com/u/24969884?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1529747335000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4455","number":4455,"title":"HiddenResult: Deprecate `contents`","body":"The HiddenResult contents field is an opaque value in coala, which is being used as a dict for AnnotationBear, used twice for ClangFunctionDifferenceBear to store different types of values, and as a list in URLBar.\nThe core's ability to manage Result objects (c.f. #2582) depends on the core being able to have some understanding of the information being passed around.\nBears should instead define HiddenResult subclasses which define the extra information they need to pass around, which allows type checking, attribute errors for incompatible dependent bears, and many other sorts of goodness.","comments":1,"createdAt":"2017-07-08T09:00:35Z","updatedAt":"2018-06-23T09:48:55Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"refeed","avatarUrl":"https://avatars1.githubusercontent.com/u/20320125?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"},{"name":"importance/low","color":"70E870"},{"name":"status/blocked","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1500464567000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4457","number":4457,"title":"HiddenResult needs the contents value included in generated methods","body":"HiddenResult inherits from Result, which means it inherits the methods that generate_ordering and generate_repr adds.  These will be wrong on the HiddenResult subclass, as the contents value is not included.\ndifficulty/low\ncc @yash-nisar and @refeed\nOpened by @jayvdb","comments":0,"createdAt":"2017-07-09T09:02:25Z","updatedAt":"2017-07-19T11:42:47Z","closedAt":"2017-07-19T11:42:47Z","state":"closed","user":{"login":"co-robo","avatarUrl":"https://avatars2.githubusercontent.com/u/29058257?v=4"},"owner":{"login":"co-robo","avatarUrl":"https://avatars2.githubusercontent.com/u/29058257?v=4"},"assignee":{"login":"refeed","avatarUrl":"https://avatars1.githubusercontent.com/u/20320125?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1521146658000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4458","number":4458,"title":"Bears shall not need to pass `HiddenResult`s any more, normal `Result`s shall also work for dependency results","body":"From https://gitter.im/coala/coala?at=595f827089aea4761d74e93a:\n\nclass A(LocalBear):\n    def run(...):\n        yield HiddenResult(...)  # I need this when this bear becomes a\n                                 # dependency to another bear.\n        yield Result.from_values(...)  # But I need this also, so when this\n                                       # bear executed in coala cli\n                                       # independently it prints a nice result.\n\nclass B(LocalBear):\n    BEAR_DEPS = {A}\n\n    def run(...):\n        ...  # Some codes to process dependency results from bear A.\n        yield Result.from_values(...)\nWhen I run bear B in coala cli, Result from bear A is also printed in the terminal.","comments":5,"createdAt":"2017-07-09T14:14:52Z","updatedAt":"2018-03-15T20:44:18Z","closedAt":"2018-03-15T20:44:18Z","state":"closed","user":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"owner":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"milestone":{"title":"Nextgen-Core","createdAt":"2017-06-09T22:33:56Z","dueOn":null,"state":"open","htmlUrl":"https://github.com/coala/coala/milestone/18","description":""},"labels":[{"name":"area/core","color":"eb6420"},{"name":"difficulty/medium","color":"0052cc"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1520784194000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4459","number":4459,"title":"documentation displaying modes: Automatically use `less`","body":"So documentation can be scrolled.","comments":5,"createdAt":"2017-07-10T15:09:46Z","updatedAt":"2018-03-11T16:03:14Z","closedAt":null,"state":"open","user":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"owner":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"labels":[{"name":"area/core","color":"eb6420"},{"name":"area/documentation","color":"bfe5bf"},{"name":"status/needs design","color":"5319e7"},{"name":"status/needs info","color":"006b75"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1503836335000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4463","number":4463,"title":"Validate language setting","body":"The language setting is used for accessing the Language definitions.\nCurrently two bears use this, AnnotationBear (and three dependent bears) and MypyBear.  They have their own tests for this value.\nThose bears currently define the setting as language: str.  They should be able to define a setting language: Language (or similar), and have automatic validation occur, with the tests for that validation being done in the coala repository.\nAlso as part of the aspects project, language will be used behind the scenes in coala even when bears do not explicitly use the language setting.  The validation of the setting needs to occur in a consistent location, with consistent error messages, whenever the language setting is used (but there should be no error if language has an invalid value but it isnt being used at all).\nnote there is more complicated work occurring elsewhere wrt aspects & languages (e.g. #4147).  This task is strictly about ensuring all language setting validation results in the same error message , and that validation only occurs once per Section.","comments":9,"createdAt":"2017-07-14T02:36:34Z","updatedAt":"2017-08-27T12:18:55Z","closedAt":"2017-08-27T12:18:55Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"adhikasp","avatarUrl":"https://avatars2.githubusercontent.com/u/6151302?v=4"},"labels":[{"name":"area/aspects","color":"000000"},{"name":"area/languages","color":"d4c5f9"},{"name":"difficulty/low","color":"207de5"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1507129291000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4464","number":4464,"title":"pip3 install coala-bears doesn't install coala binary","body":"No idea why.\nFound in testing with @clstaudt\nOpened by @sils","comments":3,"createdAt":"2017-07-14T13:15:29Z","updatedAt":"2017-10-04T15:01:31Z","closedAt":"2017-10-04T15:01:25Z","state":"closed","user":{"login":"co-robo","avatarUrl":"https://avatars2.githubusercontent.com/u/29058257?v=4"},"owner":{"login":"co-robo","avatarUrl":"https://avatars2.githubusercontent.com/u/29058257?v=4"},"labels":[{"name":"area/install","color":"bfdadc"},{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1500469525000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4466","number":4466,"title":"Newcomers_Guide.rst: Tell people to sign into Gitter with Github, not Twitter","body":"The Gitter section should tell people to log into Gitter with their Github account and not with Twitter, as we use the Github username for the automated stuff that corobo does.","comments":2,"createdAt":"2017-07-15T12:23:48Z","updatedAt":"2017-07-19T13:05:25Z","closedAt":"2017-07-19T13:05:25Z","state":"closed","user":{"login":"NiklasMM","avatarUrl":"https://avatars1.githubusercontent.com/u/1924002?v=4"},"owner":{"login":"NiklasMM","avatarUrl":"https://avatars1.githubusercontent.com/u/1924002?v=4"},"assignee":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1500132007000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4468","number":4468,"title":"ConfigWrite.py file is opened but not closed","body":"in line 28 self.__file = open(self.__file_name, 'w') a file is opened but never closed again.\n(taken from lgtm)\nOpened by @sims1253","comments":1,"createdAt":"2017-07-15T15:07:56Z","updatedAt":"2017-07-15T15:20:07Z","closedAt":"2017-07-15T15:20:07Z","state":"closed","user":{"login":"co-robo","avatarUrl":"https://avatars2.githubusercontent.com/u/29058257?v=4"},"owner":{"login":"co-robo","avatarUrl":"https://avatars2.githubusercontent.com/u/29058257?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1500143535000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4470","number":4470,"title":"DocstyleDefinition.get_available_definitions uses single ConfParser instance...","body":"... for parsing all *.coalang files, which leads to section overrides, which lead to logging.warnings, which make coala-bears CI FAIL on building docs with sphinx-build -W, like mentioned in coala/coala-bears#1819 (comment) :\nhttps://circleci.com/gh/coala/coala-bears/6570#tests/containers/1 :\nWarning, treated as error:\nparam_start setting has already been defined in section PYTHON. The previous setting will be overridden.\nmake: *** [html] Error 1\nmake: Leaving directory `/home/ubuntu/coala-bears/docs'\n\nPrerequisite for coala/coala-bears#1819\n@sils @Makman2","comments":0,"createdAt":"2017-07-15T15:53:04Z","updatedAt":"2017-07-15T18:32:15Z","closedAt":"2017-07-15T18:32:15Z","state":"closed","user":{"login":"userzimmermann","avatarUrl":"https://avatars3.githubusercontent.com/u/2088633?v=4"},"owner":{"login":"userzimmermann","avatarUrl":"https://avatars3.githubusercontent.com/u/2088633?v=4"},"assignee":{"login":"userzimmermann","avatarUrl":"https://avatars3.githubusercontent.com/u/2088633?v=4"},"labels":[{"name":"area/languages","color":"d4c5f9"},{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1515941746000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4474","number":4474,"title":"ConfigurationGathering.py: gather_configuration uses sys.argv directly","body":"gather_configuration uses sys.argv directly here. This creates problems, when using pytest with any kind of arguments.\nFor example when targeting the tests directly with pytest -k ConfigurationGatheringTest we get:\n/usr/lib/python3.5/argparse.py:2381: SystemExit\n---------------------------------------------------------------------------------------- Captured stderr call ----------------------------------------------------------------------------------------\nusage: coala [-h] [-v] [-C] [--ci] [--json] [--format [STR]] [-c FILE] [-F]\n             [-I] [-s [FILE]] [--disable-caching] [--flush-cache]\n             [--no-autoapply-warn] [-b NAME [NAME ...]] [-f FILE [FILE ...]]\n             [-i FILE [FILE ...]] [--limit-files FILE [FILE ...]]\n             [-d DIR [DIR ...]] [-V] [-L ENUM] [-m ENUM] [-N] [-B]\n             [-l LANG [LANG ...]] [-p LANG [LANG ...]] [-D] [--show-details]\n             [--log-json] [-o FILE] [-r [RELPATH]] [-S SETTING [SETTING ...]]\n             [-a] [-j JOBS] [-n] [--debug]\n             [TARGETS [TARGETS ...]]\ncoala: error: unrecognized arguments: -k\n\nThis makes it impossible to run the config gathering tests in a subset.\nI wonder if there is a way around using sys.argv directly here.","comments":3,"createdAt":"2017-07-16T09:06:20Z","updatedAt":"2018-01-14T14:55:46Z","closedAt":"2018-01-14T14:55:46Z","state":"closed","user":{"login":"NiklasMM","avatarUrl":"https://avatars1.githubusercontent.com/u/1924002?v=4"},"owner":{"login":"NiklasMM","avatarUrl":"https://avatars1.githubusercontent.com/u/1924002?v=4"},"labels":[{"name":"area/core","color":"eb6420"},{"name":"area/tests","color":"bfd4f2"},{"name":"difficulty/medium","color":"0052cc"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1516571598000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4478","number":4478,"title":"Remove LogPrinterMixin & LogPrinterThread","body":"As an improvement after #4573.","comments":3,"createdAt":"2017-07-18T22:45:42Z","updatedAt":"2018-01-21T21:53:18Z","closedAt":null,"state":"open","user":{"login":"shreyans800755","avatarUrl":"https://avatars2.githubusercontent.com/u/3727351?v=4"},"owner":{"login":"shreyans800755","avatarUrl":"https://avatars2.githubusercontent.com/u/3727351?v=4"},"assignee":{"login":"nvzard","avatarUrl":"https://avatars0.githubusercontent.com/u/19310512?v=4"},"labels":[{"name":"area/core","color":"eb6420"},{"name":"difficulty/medium","color":"0052cc"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1523117570000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4482","number":4482,"title":"Yield better results on unequal lengths of result object lists","body":"We need to take care of cases where the lengths of observed_result and expected_result differ. We would like inputs from fellow coalians because there are many many cases to keep in mind while framing this snippet.\nstatus/needs design\ndifficulty/high\narea/tests","comments":5,"createdAt":"2017-07-19T13:54:17Z","updatedAt":"2018-04-07T16:12:50Z","closedAt":null,"state":"open","user":{"login":"yash-nisar","avatarUrl":"https://avatars1.githubusercontent.com/u/14862976?v=4"},"owner":{"login":"yash-nisar","avatarUrl":"https://avatars1.githubusercontent.com/u/14862976?v=4"},"labels":[{"name":"area/tests","color":"bfd4f2"},{"name":"difficulty/medium","color":"0052cc"},{"name":"status/needs design","color":"5319e7"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1500929122000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4484","number":4484,"title":"Remove LogPrinter from all the projects under coala umbrella","body":"This is a tracking issue to get the status of all the issues related to LogPrinter removal.\nWhen all the issues are closed, this issue will require to remove LogPrinter class from coalib.output.printer.LogPrinter.\nList of issues related to LogPrinter removal in individual projects:\n\ncoala/coala: #3472\ncoala/coala-bears: coala/coala-bears#1948","comments":0,"createdAt":"2017-07-19T20:23:37Z","updatedAt":"2017-07-24T20:45:22Z","closedAt":null,"state":"open","user":{"login":"shreyans800755","avatarUrl":"https://avatars2.githubusercontent.com/u/3727351?v=4"},"owner":{"login":"shreyans800755","avatarUrl":"https://avatars2.githubusercontent.com/u/3727351?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1508282938000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4485","number":4485,"title":"Newcomer_Guide.rst: Clarify push command","body":"The newcomer guide asks people to push their stuff with git push myfork, which is not enough if they have never pushed before.\nIt needs to be git push -u myfork <branchname>","comments":3,"createdAt":"2017-07-20T05:54:04Z","updatedAt":"2017-10-17T23:28:58Z","closedAt":"2017-10-17T23:28:58Z","state":"closed","user":{"login":"NiklasMM","avatarUrl":"https://avatars1.githubusercontent.com/u/1924002?v=4"},"owner":{"login":"NiklasMM","avatarUrl":"https://avatars1.githubusercontent.com/u/1924002?v=4"},"assignee":{"login":"susg","avatarUrl":"https://avatars3.githubusercontent.com/u/9406524?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1500543872000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4488","number":4488,"title":"requests.exceptions.ReadTimeout: HTTPConnectionPool(host='httpbin.org', port=80): Read timed out","body":"BearTest.test_download_cached_file_status_code_error failed on Python 3.5 only\nhttps://travis-ci.org/jayvdb/coala/jobs/255587402#L703\nwith\nrequests.exceptions.ReadTimeout: HTTPConnectionPool(host='httpbin.org', port=80): Read timed out\nhttps://travis-ci.org/jayvdb/coala/jobs/255587402#L1795\nlikely transient, so closing immediately.","comments":0,"createdAt":"2017-07-20T09:30:46Z","updatedAt":"2017-07-20T09:44:32Z","closedAt":"2017-07-20T09:44:32Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"area/upstream","color":"5319e7"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1500545317000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4489","number":4489,"title":"This is a test issue about a typo","body":"","comments":0,"createdAt":"2017-07-20T10:08:17Z","updatedAt":"2017-07-20T10:08:37Z","closedAt":"2017-07-20T10:08:37Z","state":"closed","user":{"login":"sils","avatarUrl":"https://avatars0.githubusercontent.com/u/5716520?v=4"},"owner":{"login":"sils","avatarUrl":"https://avatars0.githubusercontent.com/u/5716520?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1509861146000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4491","number":4491,"title":"aspects: Add taste to force Formatting.Quotation.preferred_quotation when escaping is needed","body":"According to #4398 (comment)\nIn coala itself we allow for example \"'\" instead of '\\'' to avoid escaping\n@coala/aspects-developers @sils","comments":5,"createdAt":"2017-07-20T21:05:49Z","updatedAt":"2017-11-05T05:52:26Z","closedAt":null,"state":"open","user":{"login":"userzimmermann","avatarUrl":"https://avatars3.githubusercontent.com/u/2088633?v=4"},"owner":{"login":"userzimmermann","avatarUrl":"https://avatars3.githubusercontent.com/u/2088633?v=4"},"assignee":{"login":"parthboricha","avatarUrl":"https://avatars1.githubusercontent.com/u/28902285?v=4"},"milestone":{"title":"#aspectsYEAH","createdAt":"2017-05-09T22:10:19Z","dueOn":null,"state":"open","htmlUrl":"https://github.com/coala/coala/milestone/17","description":"The mother of all futures of coala!\r\n\r\nhttps://github.com/orgs/coala/projects/3\r\n\r\nhttps://github.com/orgs/coala/projects/2\r\n"},"labels":[{"name":"area/aspects","color":"000000"},{"name":"difficulty/low","color":"207de5"},{"name":"importance/medium","color":"fbca04"},{"name":"status/needs design","color":"5319e7"},{"name":"type/feature","color":"0052cc"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1500589442000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4492","number":4492,"title":"Command \"corobo\" not found.","body":"Coala bot replies : Command \"corobo\" not found\nIn the Newcomers_Guide, in several places we find the use of command \"corobo\" to take the help of coala-bot. But in gitter chat when used \"corobo\" , it replied : Command \"corobo\" not found.","comments":2,"createdAt":"2017-07-20T21:52:07Z","updatedAt":"2017-07-20T22:24:02Z","closedAt":"2017-07-20T22:24:02Z","state":"closed","user":{"login":"susg","avatarUrl":"https://avatars3.githubusercontent.com/u/9406524?v=4"},"owner":{"login":"susg","avatarUrl":"https://avatars3.githubusercontent.com/u/9406524?v=4"},"labels":[{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1500801322000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4493","number":4493,"title":"Replace simple generator statements in CoreTest","body":"Generator expressions like\n{i for i in range(100)}\ncan be replaced with\nset(range(100))","comments":1,"createdAt":"2017-07-20T22:29:20Z","updatedAt":"2017-07-23T09:15:22Z","closedAt":"2017-07-23T09:15:22Z","state":"closed","user":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"owner":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"assignee":{"login":"troublemagnet","avatarUrl":"https://avatars1.githubusercontent.com/u/28952053?v=4"},"milestone":{"title":"Nextgen-Core","createdAt":"2017-06-09T22:33:56Z","dueOn":null,"state":"open","htmlUrl":"https://github.com/coala/coala/milestone/18","description":""},"labels":[{"name":"area/core","color":"eb6420"},{"name":"area/tests","color":"bfd4f2"},{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"type/codestyle","color":"d4c5f9"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1519309754000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4494","number":4494,"title":"Move @filter code into FilterHelper","body":"This avoids annotating filter functions with @filter. One file less to maintain.","comments":21,"createdAt":"2017-07-20T22:43:27Z","updatedAt":"2018-02-22T14:29:14Z","closedAt":"2018-02-22T14:29:14Z","state":"closed","user":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"owner":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"assignee":{"login":"anctartica","avatarUrl":"https://avatars0.githubusercontent.com/u/7020962?v=4"},"labels":[{"name":"area/CLI","color":"006b75"},{"name":"difficulty/low","color":"207de5"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1511453530000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4495","number":4495,"title":"InvalidFilterException: Add convenience methods generating messages","body":"The __init__ method could take parameters that construct a message conveniently:\ndef __init__(self, filter_name=None, available_filters=None):\n    pass\n\nAnd use it accordingly where filters are present.","comments":13,"createdAt":"2017-07-20T22:45:12Z","updatedAt":"2017-11-23T16:12:10Z","closedAt":"2017-11-23T16:12:10Z","state":"closed","user":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"owner":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"assignee":{"login":"aashutoshrathi","avatarUrl":"https://avatars2.githubusercontent.com/u/21199234?v=4"},"labels":[{"name":"area/core","color":"eb6420"},{"name":"difficulty/low","color":"207de5"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1507564070000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4496","number":4496,"title":"FilterHelper.get_all_filters_str(): Shall it be kept or inlined?","body":"Imo this is application specific code displaying text to the user, that's why I vote for inlining it into the currently single occurrence in code.\n@shreyans800755 what do you think? I know we already discussed that, though I want some third party opinions on this^^","comments":3,"createdAt":"2017-07-20T22:47:39Z","updatedAt":"2017-10-09T15:47:50Z","closedAt":"2017-10-09T15:47:50Z","state":"closed","user":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"owner":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"assignee":{"login":"prnvdixit","avatarUrl":"https://avatars2.githubusercontent.com/u/24798215?v=4"},"labels":[{"name":"area/core","color":"eb6420"},{"name":"difficulty/low","color":"207de5"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1503957730000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4497","number":4497,"title":"Put FilterHelper functions into module scope","body":"All FilterHelper functions are classmethods, thus an instance is not necessary (and also never used), so a class is the wrong design approach. Another layer of indirection is not useful, so I would pledge to remove the class and put everything into the above module.","comments":4,"createdAt":"2017-07-20T22:49:11Z","updatedAt":"2017-08-28T22:02:10Z","closedAt":"2017-08-28T22:02:10Z","state":"closed","user":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"owner":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"assignee":{"login":"shreyans800755","avatarUrl":"https://avatars2.githubusercontent.com/u/3727351?v=4"},"labels":[{"name":"area/core","color":"eb6420"},{"name":"difficulty/low","color":"207de5"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1501350461000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4498","number":4498,"title":"Implement FilterHelper function to apply multiple filters at once","body":"This is currently handled in coala's CLI code itself. Imo this can and should be moved into FilterHelper as much as possible.\nDoing so would also remove some redundancy that has to be implemented for other coala entrypoints (like coala-json) to support filtering with --filter-by.","comments":2,"createdAt":"2017-07-20T22:51:51Z","updatedAt":"2017-07-29T17:47:41Z","closedAt":"2017-07-29T17:47:41Z","state":"closed","user":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"owner":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"assignee":{"login":"shreyans800755","avatarUrl":"https://avatars2.githubusercontent.com/u/3727351?v=4"},"labels":[{"name":"area/core","color":"eb6420"},{"name":"difficulty/low","color":"207de5"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1509306362000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4499","number":4499,"title":"Implement `--filter-by` in other coala entrypoints","body":"... like coala --json.","comments":7,"createdAt":"2017-07-20T22:52:51Z","updatedAt":"2017-10-29T19:46:02Z","closedAt":"2017-10-29T19:46:02Z","state":"closed","user":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"owner":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"assignee":{"login":"shreyans800755","avatarUrl":"https://avatars2.githubusercontent.com/u/3727351?v=4"},"labels":[{"name":"area/core","color":"eb6420"},{"name":"difficulty/low","color":"207de5"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1501148173000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4500","number":4500,"title":"Root.Smell clean up","body":"Add ClassSize.ClassLength, ClassSize.ClassConstants, ClassSize.ClassInstanceVariables, ClassSize.ClassMethods, MethodSmell.MethodLength, MethodSmell.ParameterListLength, Complexity.CyclomaticComplexity, Complexity.MaintainabilityIndex aspects.\nRefactor Root.Smell.complexity, and fix all docs issues","comments":0,"createdAt":"2017-07-21T08:50:54Z","updatedAt":"2017-07-27T09:36:13Z","closedAt":"2017-07-27T09:36:13Z","state":"closed","user":{"login":"AsnelChristian","avatarUrl":"https://avatars2.githubusercontent.com/u/10449314?v=4"},"owner":{"login":"AsnelChristian","avatarUrl":"https://avatars2.githubusercontent.com/u/10449314?v=4"},"assignee":{"login":"AsnelChristian","avatarUrl":"https://avatars2.githubusercontent.com/u/10449314?v=4"},"labels":[{"name":"area/aspects","color":"000000"},{"name":"process/approved","color":"009800"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1501148173000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4501","number":4501,"title":"Fix DataClump aspect docs ","body":"Fix dataclump.docs.example indentation, and explain dataclump.docs.importance_reason better.","comments":0,"createdAt":"2017-07-21T08:55:46Z","updatedAt":"2017-07-27T09:36:13Z","closedAt":"2017-07-27T09:36:13Z","state":"closed","user":{"login":"AsnelChristian","avatarUrl":"https://avatars2.githubusercontent.com/u/10449314?v=4"},"owner":{"login":"AsnelChristian","avatarUrl":"https://avatars2.githubusercontent.com/u/10449314?v=4"},"assignee":{"login":"AsnelChristian","avatarUrl":"https://avatars2.githubusercontent.com/u/10449314?v=4"},"labels":[{"name":"area/aspects","color":"000000"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1501148173000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4502","number":4502,"title":"Root.Spelling aspect clean up","body":"Add Spelling.GeneralWordSpelling, Spelling.CompanySpecificWordSpelling. refactor Root.Spelling aspect and remove coalaCorrect and aspectsYEAH; CompanySpecificWordSpelling is a more generic aspect,\nthat can do what coalaCorrect and aspectsYEAH do and\neven more given specific_word.","comments":4,"createdAt":"2017-07-21T09:02:04Z","updatedAt":"2017-07-27T09:36:13Z","closedAt":"2017-07-27T09:36:13Z","state":"closed","user":{"login":"AsnelChristian","avatarUrl":"https://avatars2.githubusercontent.com/u/10449314?v=4"},"owner":{"login":"AsnelChristian","avatarUrl":"https://avatars2.githubusercontent.com/u/10449314?v=4"},"assignee":{"login":"AsnelChristian","avatarUrl":"https://avatars2.githubusercontent.com/u/10449314?v=4"},"labels":[{"name":"area/aspects","color":"000000"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1500641957000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4503","number":4503,"title":"json option for linter output parameter","body":"currently there is regex, corrected, unified-diff. Having the option to receive json would be nice as some tools support formatting their output with json and it makes working with it much easier than regexes.","comments":1,"createdAt":"2017-07-21T11:55:21Z","updatedAt":"2017-07-21T12:59:17Z","closedAt":"2017-07-21T12:59:08Z","state":"closed","user":{"login":"sims1253","avatarUrl":"https://avatars2.githubusercontent.com/u/6530123?v=4"},"owner":{"login":"sims1253","avatarUrl":"https://avatars2.githubusercontent.com/u/6530123?v=4"},"labels":[{"name":"status/duplicate","color":"000000"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1509975900000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4505","number":4505,"title":"NextGen-Core: Do not close event loop if not all bears were scheduled","body":"There is a corner case when multiple bear dependencies are passed and one of them schedules no tasks.\nIf the bear scheduling no tasks is processed first, cleanup_bear is called that will close the event loop as no other running tasks are registered (yet), although the other bear has still to be scheduled.\nThis needs to be handled correctly and tests need to be written for this case.","comments":0,"createdAt":"2017-07-21T17:24:43Z","updatedAt":"2017-11-06T13:45:00Z","closedAt":"2017-11-06T13:45:00Z","state":"closed","user":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"owner":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"assignee":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"milestone":{"title":"Nextgen-Core","createdAt":"2017-06-09T22:33:56Z","dueOn":null,"state":"open","htmlUrl":"https://github.com/coala/coala/milestone/18","description":""},"labels":[{"name":"area/core","color":"eb6420"},{"name":"area/tests","color":"bfd4f2"},{"name":"difficulty/medium","color":"0052cc"},{"name":"importance/high","color":"eb6420"},{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1501538245000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4507","number":4507,"title":"DocBaseClass: Move the class to a different file","body":"","comments":3,"createdAt":"2017-07-21T18:29:32Z","updatedAt":"2017-07-31T21:57:25Z","closedAt":"2017-07-31T21:57:25Z","state":"closed","user":{"login":"SanketDG","avatarUrl":"https://avatars3.githubusercontent.com/u/8980971?v=4"},"owner":{"login":"SanketDG","avatarUrl":"https://avatars3.githubusercontent.com/u/8980971?v=4"},"assignee":{"login":"troublemagnet","avatarUrl":"https://avatars1.githubusercontent.com/u/28952053?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1500661849000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4508","number":4508,"title":"DocBearClass: Make it a bear that others can implement.","body":"","comments":0,"createdAt":"2017-07-21T18:30:47Z","updatedAt":"2017-07-21T18:30:49Z","closedAt":null,"state":"open","user":{"login":"SanketDG","avatarUrl":"https://avatars3.githubusercontent.com/u/8980971?v=4"},"owner":{"login":"SanketDG","avatarUrl":"https://avatars3.githubusercontent.com/u/8980971?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1514399143000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4509","number":4509,"title":"Newcomer_Guide.rst: some changes in step 4","body":"Step 4 of Newcomer_Guide.rst says :\n\nBefore committing your changes, please check that you are indeed in a development branch created in  step 4.\n\nIt should be step 3 because in that step we are creating our development branch.","comments":5,"createdAt":"2017-07-21T19:16:11Z","updatedAt":"2017-12-27T18:25:43Z","closedAt":"2017-12-27T18:25:43Z","state":"closed","user":{"login":"susg","avatarUrl":"https://avatars3.githubusercontent.com/u/9406524?v=4"},"owner":{"login":"susg","avatarUrl":"https://avatars3.githubusercontent.com/u/9406524?v=4"},"assignee":{"login":"rattandeep1998","avatarUrl":"https://avatars1.githubusercontent.com/u/25167166?v=4"},"labels":[{"name":"area/tests","color":"bfd4f2"},{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1517955051000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4510","number":4510,"title":"NextGen-Core: Unpicklable bears do not cause the loop to close on pickling error","body":"Probably the core needs to be generally more careful about when to clean up bears.\nDiscovered during testing while defining local bear classes.","comments":4,"createdAt":"2017-07-21T20:09:40Z","updatedAt":"2018-02-06T22:10:51Z","closedAt":null,"state":"open","user":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"owner":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"milestone":{"title":"Nextgen-Core","createdAt":"2017-06-09T22:33:56Z","dueOn":null,"state":"open","htmlUrl":"https://github.com/coala/coala/milestone/18","description":""},"labels":[{"name":"area/core","color":"eb6420"},{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1511336528000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4511","number":4511,"title":"config: Define tastes in [...:taste] sections","body":"Continuation of #4397 , according to #4397 (review)\nRelates to https://gitlab.com/coala/GSoC-2017/issues/378\n[all]\nfiles = **.py\naspects = coalaCorrect, shortlog.colonexistence\nlanguage = Python 3.6\n\n[all:taste]\nshortlog_colon = false\n\n@sils @sims1253 @jayvdb @Udayan12167 @coala/aspects-developers","comments":29,"createdAt":"2017-07-21T23:14:06Z","updatedAt":"2017-11-22T07:42:08Z","closedAt":"2017-11-22T07:42:08Z","state":"closed","user":{"login":"userzimmermann","avatarUrl":"https://avatars3.githubusercontent.com/u/2088633?v=4"},"owner":{"login":"userzimmermann","avatarUrl":"https://avatars3.githubusercontent.com/u/2088633?v=4"},"assignee":{"login":"adhikasp","avatarUrl":"https://avatars2.githubusercontent.com/u/6151302?v=4"},"milestone":{"title":"#aspectsYEAH","createdAt":"2017-05-09T22:10:19Z","dueOn":null,"state":"open","htmlUrl":"https://github.com/coala/coala/milestone/17","description":"The mother of all futures of coala!\r\n\r\nhttps://github.com/orgs/coala/projects/3\r\n\r\nhttps://github.com/orgs/coala/projects/2\r\n"},"labels":[{"name":"area/aspects","color":"000000"},{"name":"area/config","color":"fbca04"},{"name":"status/needs design","color":"5319e7"},{"name":"status/needs discussion","color":"d93f0b"},{"name":"type/feature","color":"0052cc"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1500721858000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4512","number":4512,"title":"remove test requirement on urllib3 which is controlled by requests requirements","body":"Opened by @jayvdb at gitter/coala/coala","comments":4,"createdAt":"2017-07-22T02:07:09Z","updatedAt":"2017-07-22T11:10:58Z","closedAt":"2017-07-22T11:10:58Z","state":"closed","user":{"login":"co-robo","avatarUrl":"https://avatars2.githubusercontent.com/u/29058257?v=4"},"owner":{"login":"co-robo","avatarUrl":"https://avatars2.githubusercontent.com/u/29058257?v=4"},"labels":[{"name":"area/tests","color":"bfd4f2"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1500718674000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4513","number":4513,"title":"Travis CI: coala --ci not finding csslint","body":"Possibly related to the switch from precise to trusty, builds of master on my fork are all failing with:\n$ npm install\ncoala@ /home/travis/build/jayvdb/coala\n└─┬ csslint@1.0.5 \n  ├── clone@2.1.1 \n  └── parserlib@1.1.1 \nnpm WARN coala@ No repository field.\nnpm WARN coala@ No license field.\n\n...\n$ coala --non-interactive\n[WARNING][05:32:47] Implicit 'Default' section inheritance is deprecated. It will be removed soon. To silence this warning remove settings in the 'Default' section from your coafile. You can use dots to specify inheritance: the section 'all.python' will inherit all settings from 'all'.\n[nltk_data] Downloading package punkt to /home/travis/nltk_data...\n[nltk_data]   Unzipping tokenizers/punkt.zip.\n[nltk_data] Downloading package maxent_treebank_pos_tagger to\n[nltk_data]     /home/travis/nltk_data...\n[nltk_data]   Unzipping taggers/maxent_treebank_pos_tagger.zip.\n[nltk_data] Downloading package averaged_perceptron_tagger to\n[nltk_data]     /home/travis/nltk_data...\n[nltk_data]   Unzipping taggers/averaged_perceptron_tagger.zip.\n[ERROR][05:33:01] The bear CSSLintBear does not fulfill all requirements. 'csslint' is not installed.","comments":2,"createdAt":"2017-07-22T07:35:40Z","updatedAt":"2017-07-22T10:17:54Z","closedAt":"2017-07-22T10:17:54Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"area/CI","color":"eb6420"},{"name":"importance/critical","color":"e11d21"},{"name":"importance/high","color":"eb6420"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1518123726000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4514","number":4514,"title":"Create csslint package for debian","body":"We use csslint in the coala repo CI to check the one css file.  To do this, currently .travis.yml needs to install csslint using npm.\nIdeally .travis.yml could load it as a apt package, but a package doesnt exist for debian.","comments":0,"createdAt":"2017-07-22T07:56:39Z","updatedAt":"2018-02-08T21:02:06Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"area/CI","color":"eb6420"},{"name":"difficulty/medium","color":"0052cc"},{"name":"importance/low","color":"70E870"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1500894414000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4516","number":4516,"title":"Documentation for apply_single doesn't exists","body":"","comments":1,"createdAt":"2017-07-22T09:51:57Z","updatedAt":"2017-07-24T11:06:54Z","closedAt":"2017-07-24T11:06:54Z","state":"closed","user":{"login":"Nosferatul","avatarUrl":"https://avatars2.githubusercontent.com/u/15227444?v=4"},"owner":{"login":"Nosferatul","avatarUrl":"https://avatars2.githubusercontent.com/u/15227444?v=4"},"assignee":{"login":"Nosferatul","avatarUrl":"https://avatars2.githubusercontent.com/u/15227444?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1503404658000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4518","number":4518,"title":"Spelling mistake Alernative in gather_configuration docstring","body":"Opened by @jayvdb at gitter/coala/coala","comments":3,"createdAt":"2017-07-22T10:41:29Z","updatedAt":"2017-08-22T12:24:18Z","closedAt":"2017-08-22T12:24:18Z","state":"closed","user":{"login":"co-robo","avatarUrl":"https://avatars2.githubusercontent.com/u/29058257?v=4"},"owner":{"login":"co-robo","avatarUrl":"https://avatars2.githubusercontent.com/u/29058257?v=4"},"assignee":{"login":"snakevenom04","avatarUrl":"https://avatars1.githubusercontent.com/u/16559305?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1500788864000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4519","number":4519,"title":"Public API broken by PR 4240","body":"coala/coala#4240 broke coala-quickstart.\nIt removed public API functions\n\ncoalib.settings.ConfigurationGathering.get_filtered_bears (replacing it with get_all_bears) and\ncoalib.collecting.Collectors.filter_section_bears_by_languages\n\nThis needs to be fixed, or reverted.\ncc @satwikkansal","comments":6,"createdAt":"2017-07-22T12:07:48Z","updatedAt":"2017-07-23T05:47:44Z","closedAt":"2017-07-23T04:29:21Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"shreyans800755","avatarUrl":"https://avatars2.githubusercontent.com/u/3727351?v=4"},"labels":[{"name":"importance/critical","color":"e11d21"},{"name":"regression","color":"b60205"},{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1503959842000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4520","number":4520,"title":"Bear.py: Replace an by a in docstring","body":"In the docstring of the Bear.py file - Line 31 (https://github.com/coala/coala/blob/master/coalib/bears/Bear.py#L31):\nThe indefinite article a should be used instead of an such that:\nThis is the base class for every bear. If you want to write an bear, you\nis replaced by\nThis is the base class for every bear. If you want to write a bear, you","comments":4,"createdAt":"2017-07-22T12:21:18Z","updatedAt":"2017-08-28T22:37:22Z","closedAt":"2017-08-28T22:37:22Z","state":"closed","user":{"login":"AMR-KELEG","avatarUrl":"https://avatars3.githubusercontent.com/u/8365743?v=4"},"owner":{"login":"AMR-KELEG","avatarUrl":"https://avatars3.githubusercontent.com/u/8365743?v=4"},"assignee":{"login":"Stropek","avatarUrl":"https://avatars0.githubusercontent.com/u/2047989?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1501750245000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4523","number":4523,"title":"Inline ConsoleInteraction.nothing_done()","body":"It's only used once, has a bad name and then we also don't need a specific test for it.","comments":11,"createdAt":"2017-07-22T13:12:19Z","updatedAt":"2017-08-03T08:50:45Z","closedAt":null,"state":"open","user":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"owner":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"assignee":{"login":"chitranshi21","avatarUrl":"https://avatars0.githubusercontent.com/u/8499731?v=4"},"labels":[{"name":"area/tests","color":"bfd4f2"},{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"type/codestyle","color":"d4c5f9"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1513867771000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4156","number":4156,"title":"Compatibility.py: Add comment explaining JSONDecodeError is missing in Python 3.4","body":"difficulty/newcomer\nOpened via gitter by @jayvdb","comments":5,"createdAt":"2017-05-03T07:58:30Z","updatedAt":"2017-12-21T14:49:31Z","closedAt":"2017-12-21T14:49:31Z","state":"closed","user":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"owner":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"assignee":{"login":"shreyateeza","avatarUrl":"https://avatars0.githubusercontent.com/u/30488330?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1497830618000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4157","number":4157,"title":"Compatibility.py: Add Python version based coverage pragma","body":"We should have pragma which self-documents that the exception is required on Python 3.4, and other versions will not enter that branch.\nSee 8e438b3 for platform based coverage pragma.\nstatus/blocked on coala/coala#4156\ndifficulty/low\nOpened via gitter by @jayvdb","comments":0,"createdAt":"2017-05-03T08:03:06Z","updatedAt":"2017-06-19T00:03:38Z","closedAt":"2017-06-19T00:03:38Z","state":"closed","user":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"owner":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"assignee":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"},{"name":"status/blocked","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1493872250000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4158","number":4158,"title":"Add test coverage for LocalBearTestHelper.check_results","body":"This method is untested due to incorrect use of #pragma: no cover.\nThe rest of the class LocalBearTestHelper is covered by tests.\ndifficulty/low\nOpened via gitter by @jayvdb","comments":1,"createdAt":"2017-05-03T08:18:47Z","updatedAt":"2017-05-04T04:30:50Z","closedAt":"2017-05-04T04:30:50Z","state":"closed","user":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"owner":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"assignee":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1518980177000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4159","number":4159,"title":"ProcessPoolExecutor instantiation with explicit max_workers copies default value","body":"Core.run from ada14dc instantiates a ProcessPoolExecutor with an explicit max_workers set to be the number of cpus.\nThis is unnecessary, as that explicit value is also the default if max_workers is left set to None.\nhttps://docs.python.org/3/library/concurrent.futures.html#concurrent.futures.ProcessPoolExecutor\nSee https://github.com/python/cpython/blob/15f44ab/Lib/concurrent/futures/process.py#L378 and python/cpython@37cfb0a","comments":0,"createdAt":"2017-05-03T09:25:36Z","updatedAt":"2018-02-18T18:56:17Z","closedAt":"2017-05-03T10:15:35Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"milestone":{"title":"Nextgen-Core","createdAt":"2017-06-09T22:33:56Z","dueOn":null,"state":"open","htmlUrl":"https://github.com/coala/coala/milestone/18","description":""},"labels":[{"name":"area/core","color":"eb6420"},{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1494323857000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4163","number":4163,"title":"Add argcomplete to test-requirements","body":"Currently we do not have any testing to ensure that our argcomplete support continues to work, with any specific version of argcomplete.","comments":0,"createdAt":"2017-05-03T12:26:32Z","updatedAt":"2017-05-09T09:57:37Z","closedAt":"2017-05-09T09:57:37Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1510610122000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4165","number":4165,"title":"Add test coverage of CLI --bears completer","body":"There is a # pragma: no cover in DefaultArgParser for\n.completer = lambda *args, **kwargs: get_all_bears_names(), because it can not be reached using a normal test.\nA crazy way to reach this code is to run complete in debug mode, probably easiest by using subprocess. See http://argcomplete.readthedocs.io/en/latest/#debugging","comments":2,"createdAt":"2017-05-03T14:03:16Z","updatedAt":"2017-11-13T21:55:22Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"area/tests","color":"bfd4f2"},{"name":"difficulty/medium","color":"0052cc"},{"name":"importance/low","color":"70E870"},{"name":"status/blocked","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1510610132000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4166","number":4166,"title":"Remove pragma: no cover","body":"pragma: no cover is being over used to avoid writing test cases, and slipping through review.\nIt should be prevented, requiring more specific pragma's that are less likely to skip through review without being questioned.","comments":4,"createdAt":"2017-05-03T14:50:40Z","updatedAt":"2017-11-13T21:55:32Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"area/tests","color":"bfd4f2"},{"name":"difficulty/medium","color":"0052cc"},{"name":"importance/medium","color":"fbca04"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1493877023000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4170","number":4170,"title":"Tests should have a BIG BOLD NOTE if they are being run with stuff from cache","body":"Opened via gitter by @Shade5","comments":1,"createdAt":"2017-05-04T05:49:08Z","updatedAt":"2017-05-04T05:50:23Z","closedAt":null,"state":"open","user":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"owner":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1493921949000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4173","number":4173,"title":"Shell.py: Change pragma to pragma posix for Windows specific code","body":"According to @jayvdb's #3679 (comment)","comments":2,"createdAt":"2017-05-04T13:20:15Z","updatedAt":"2017-05-04T18:19:09Z","closedAt":"2017-05-04T18:19:09Z","state":"closed","user":{"login":"userzimmermann","avatarUrl":"https://avatars3.githubusercontent.com/u/2088633?v=4"},"owner":{"login":"userzimmermann","avatarUrl":"https://avatars3.githubusercontent.com/u/2088633?v=4"},"assignee":{"login":"userzimmermann","avatarUrl":"https://avatars3.githubusercontent.com/u/2088633?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1493994323000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4175","number":4175,"title":"Make PKGBUILD","body":"","comments":0,"createdAt":"2017-05-05T14:25:21Z","updatedAt":"2017-05-05T14:25:23Z","closedAt":null,"state":"open","user":{"login":"adtac","avatarUrl":"https://avatars2.githubusercontent.com/u/7521600?v=4"},"owner":{"login":"adtac","avatarUrl":"https://avatars2.githubusercontent.com/u/7521600?v=4"},"assignee":{"login":"adtac","avatarUrl":"https://avatars2.githubusercontent.com/u/7521600?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1494256734000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4177","number":4177,"title":"coala on MacOS","body":"Overview Description\nNot able to execute coala from terminal after installation in MacOS\nSteps to Reproduce\n\nUse MacOS\npip3 install coala-bears\ntry executing coala/ coala-bears\n\nActual Results\nzsh: command not found: coala\nExpected Results\nanalysis of code/ usage instructions","comments":14,"createdAt":"2017-05-05T18:05:01Z","updatedAt":"2017-05-08T15:18:54Z","closedAt":"2017-05-08T15:18:54Z","state":"closed","user":{"login":"anubhabsen","avatarUrl":"https://avatars1.githubusercontent.com/u/13979969?v=4"},"owner":{"login":"anubhabsen","avatarUrl":"https://avatars1.githubusercontent.com/u/13979969?v=4"},"labels":[{"name":"area/install","color":"bfdadc"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1494883619000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4178","number":4178,"title":"Diff: Remove has_changes field","body":"The better alternative to has_changes is using __bool__.\nTask is to remove has_changes again by reverting commit 671e6a2.\nSorry @lshobith, but your work is not in vain, now we know also thanks to you how to do it better ;)\nSee also #3790","comments":7,"createdAt":"2017-05-05T22:24:35Z","updatedAt":"2017-05-15T21:26:59Z","closedAt":"2017-05-15T21:26:59Z","state":"closed","user":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"owner":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"assignee":{"login":"mrtes","avatarUrl":"https://avatars3.githubusercontent.com/u/19871688?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1494195968000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4180","number":4180,"title":"can't build docs due to multiple targets for cross-reference","body":"I can't successfully build the docs using python setup.py docs with Sphinx 1.5.5 due to the following error\nWarning, treated as error:\n/home/thomas/gitrepos/coala/coalib/core/DependencyTracker.py:docstring of coalib.core.DependencyTracker.DependencyTracker.check_circular_dependencies:None: WARNING: more than one target found for cross-reference 'CircularDependencyError': coalib.collecting.Dependencies.CircularDependencyError, coalib.core.CircularDependencyError.CircularDependencyError\n\nI had a look at the implementation of the two CircularDependenyError classes and they are quite similar, can't they be merged?","comments":6,"createdAt":"2017-05-07T01:00:42Z","updatedAt":"2017-05-07T22:26:08Z","closedAt":"2017-05-07T21:20:13Z","state":"closed","user":{"login":"thisch","avatarUrl":"https://avatars3.githubusercontent.com/u/206581?v=4"},"owner":{"login":"thisch","avatarUrl":"https://avatars3.githubusercontent.com/u/206581?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1494335155000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4182","number":4182,"title":"Section inheritance doesn't work with upercased section names","body":"While this version of a coafile ignores the file\n[Default]\nfiles = **/*.py\nignore = linespots/old_linespots.py\n\n[linelength]\nbears = LineLengthBear\n\nThis version doesn't ignore the file and runs LineLengthBear on it\n[python]\nfiles = **/*.py\nignore = linespots/old_linespots.py\n\n[python.linelength]\nbears = LineLengthBear\n\nOpened via gitter by @sims1253\nVersion is 0.12.0.dev20170504203353","comments":7,"createdAt":"2017-05-07T09:21:46Z","updatedAt":"2017-05-09T13:05:55Z","closedAt":"2017-05-09T13:02:56Z","state":"closed","user":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"owner":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"assignee":{"login":"sils","avatarUrl":"https://avatars0.githubusercontent.com/u/5716520?v=4"},"milestone":{"title":"0.11","createdAt":"2017-01-16T17:55:22Z","dueOn":"2017-05-01T00:00:00Z","state":"open","htmlUrl":"https://github.com/coala/coala/milestone/14","description":"All big pulls that will need to be merged during the merge freeze from 29 Jan-12 Feb\r\n"},"labels":[{"name":"area/core","color":"eb6420"},{"name":"importance/critical","color":"e11d21"},{"name":"regression","color":"b60205"},{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1494719821000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4184","number":4184,"title":"ConsoleInteractionTest starts editor if run with .misc/test.py","body":"If I run pytest using bash .misc/test.sh, my editor (gui version of emacs) is started in the ConsoleInterationTest. This should not happen.\n++ python -c 'import platform; print(platform.system())'\n+ export PLATFORM_SYSTEM=Linux\n+ PLATFORM_SYSTEM=Linux\n++ python -c 'import os; print(os.name)'\n+ export OS_NAME=posix\n+ OS_NAME=posix\n+ python -m pytest\n====================================================================================================== test session starts =======================================================================================================\nplatform linux -- Python 3.6.1, pytest-3.0.7, py-1.4.33, pluggy-0.4.0\nrootdir: /home/thomas/gitrepos/coala, inifile: setup.cfg\nplugins: xdist-1.16.0, timeout-1.2.0, mock-1.6.0, env-0.6.0, cov-2.4.0\ntimeout: 35.0s method: signal\ncollected 707 items \n\ncoalib/bearlib/__init__.py ..\n....\ntests/output/ConsoleInteractionTest.py","comments":5,"createdAt":"2017-05-07T12:19:33Z","updatedAt":"2017-05-13T23:57:01Z","closedAt":"2017-05-13T23:57:01Z","state":"closed","user":{"login":"thisch","avatarUrl":"https://avatars3.githubusercontent.com/u/206581?v=4"},"owner":{"login":"thisch","avatarUrl":"https://avatars3.githubusercontent.com/u/206581?v=4"},"labels":[{"name":"area/tests","color":"bfd4f2"},{"name":"platform/linux","color":"c2e0c6"},{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1495799034000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4185","number":4185,"title":"--no-color is ignored for loglines","body":"Migrated from coala/coala-bears#1714.\nFrom @thisch:\n\nThe string '[WARNING]' is colored even if the --no-color (-N) flag is used.\n> coala -N --bears=VultureBear --files \\*\\*/\\*.py --save\n[WARNING][11:57:36] 'cli' is an internally reserved section name. It may have been generated into your coafile while running coala with `--save`. The settings in that section will inherit implicitly to all sections as defaults just like CLI args do.Please change the name of that section in your coafile to avoid any unexpected behavior.\nExecuting section cli...","comments":6,"createdAt":"2017-05-07T14:25:43Z","updatedAt":"2017-05-26T11:43:54Z","closedAt":"2017-05-26T11:43:54Z","state":"closed","user":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"owner":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"assignee":{"login":"shreyans800755","avatarUrl":"https://avatars2.githubusercontent.com/u/3727351?v=4"},"labels":[{"name":"area/CLI","color":"006b75"},{"name":"importance/high","color":"eb6420"},{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1495817997000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4187","number":4187,"title":"DocumentationAPI: diff gets cutoff bug.","body":"Documentation extraction currently works perfectly on.\n        “””\n        This is example documentation string.\n        “””\n\nIf the description is written like this, for example\n        “””\n   This is example documentation string.\n        “””\n\nThe diff generated cuts-off the description to.\n        “””\n        is example documentation string.\n        “””\n\nThis is important and it needs to be fixed.","comments":0,"createdAt":"2017-05-07T17:03:18Z","updatedAt":"2017-05-26T16:59:57Z","closedAt":"2017-05-26T16:59:57Z","state":"closed","user":{"login":"damngamerz","avatarUrl":"https://avatars2.githubusercontent.com/u/13048113?v=4"},"owner":{"login":"damngamerz","avatarUrl":"https://avatars2.githubusercontent.com/u/13048113?v=4"},"assignee":{"login":"damngamerz","avatarUrl":"https://avatars2.githubusercontent.com/u/13048113?v=4"},"labels":[{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1534985203000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4188","number":4188,"title":"argparse.ArgumentParser is wrongly named ArgParser several times","body":"(In doc strings)\nRealized while reviewing: #4161 (comment)\n> grep -R ArgParser coalib\ncoalib/coala.py:from coalib.parsing.DefaultArgParser import default_arg_parser\ncoalib/coala_main.py:    :param arg_parser:              Instance of ArgParser that is used to parse\ncoalib/coala_main.py.orig:    :param arg_parser:              Instance of ArgParser that is used to parse\ncoalib/misc/BuildManPage.py:            --parser=coalib.parsing.DefaultArgParser:default_arg_parser\ncoalib/parsing/CliParsing.py:from coalib.parsing.DefaultArgParser import default_arg_parser\ncoalib/parsing/CliParsing.py:    :param arg_parser:                  Instance of ArgParser that is used to\ncoalib/parsing/DefaultArgParser.py:    This function creates an ArgParser to parse command line arguments.\ncoalib/parsing/DefaultArgParser.py.orig:    This function creates an ArgParser to parse command line arguments.\ncoalib/settings/ConfigurationGathering.py:    :param arg_parser:  An ``ArgParser`` object.\ncoalib/settings/ConfigurationGathering.py:    :param arg_parser:       Instance of ArgParser that is used to parse\n\nBut actually argparse.ArgumentParser is meant there. So those occurrences should be changed accordingly to clearly know what is meant. Otherwise it looks like some coala-internal ArgParser class\n@Udayan12167 @supergr35 @JohnS-01","comments":14,"createdAt":"2017-05-07T19:55:11Z","updatedAt":"2018-08-23T00:46:43Z","closedAt":null,"state":"open","user":{"login":"userzimmermann","avatarUrl":"https://avatars3.githubusercontent.com/u/2088633?v=4"},"owner":{"login":"userzimmermann","avatarUrl":"https://avatars3.githubusercontent.com/u/2088633?v=4"},"labels":[{"name":"area/CLI","color":"006b75"},{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"importance/low","color":"70E870"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1494283059000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4189","number":4189,"title":"pytest executable is called pytest instead of py.test now -> update this in the docs","body":"In the docs we currently mention to use py.test to run the tests. Since pytest-3.0 the executable is called pytest (There is still a py.test legacy wrapper). We should update our docs and use the new executable to run pytest.\nsee http://stackoverflow.com/a/41893170","comments":3,"createdAt":"2017-05-07T20:19:36Z","updatedAt":"2017-05-08T22:37:39Z","closedAt":"2017-05-08T22:37:39Z","state":"closed","user":{"login":"thisch","avatarUrl":"https://avatars3.githubusercontent.com/u/206581?v=4"},"owner":{"login":"thisch","avatarUrl":"https://avatars3.githubusercontent.com/u/206581?v=4"},"assignee":{"login":"shreyans800755","avatarUrl":"https://avatars2.githubusercontent.com/u/3727351?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1510336735000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4190","number":4190,"title":"Rewrite coalib.collecting.Importers._import_module","body":"Realized in #4169 (review)\n_import_module should do its job following https://docs.python.org/3/library/importlib.html#importing-a-source-file-directly\nThat avoids manipulating sys.modules and implicitly solves that Windows case insensitivity issue for which the current function implementation has an explicit workaround\n@jayvdb","comments":3,"createdAt":"2017-05-07T20:40:56Z","updatedAt":"2017-11-10T17:58:55Z","closedAt":null,"state":"open","user":{"login":"userzimmermann","avatarUrl":"https://avatars3.githubusercontent.com/u/2088633?v=4"},"owner":{"login":"userzimmermann","avatarUrl":"https://avatars3.githubusercontent.com/u/2088633?v=4"},"assignee":{"login":"userzimmermann","avatarUrl":"https://avatars3.githubusercontent.com/u/2088633?v=4"},"labels":[{"name":"area/core","color":"eb6420"},{"name":"difficulty/medium","color":"0052cc"},{"name":"importance/high","color":"eb6420"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1494679290000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4191","number":4191,"title":"Merge `coalib.collecting.Dependencies.CircularDependencyError` and `coalib.core.CircularDependencyError`","body":"Those error classes are very similar and do serve the same purpose.\nSee thisch@e492cfd for a possible implementation.","comments":2,"createdAt":"2017-05-07T22:25:14Z","updatedAt":"2017-05-13T12:41:30Z","closedAt":"2017-05-13T12:41:30Z","state":"closed","user":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"owner":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"assignee":{"login":"thisch","avatarUrl":"https://avatars3.githubusercontent.com/u/206581?v=4"},"labels":[{"name":"area/core","color":"eb6420"},{"name":"difficulty/low","color":"207de5"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1494347237000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4193","number":4193,"title":"Unknown error exception with CSecurityBear","body":"Overview Description\nRunning CSecurityBear on large source repo via Docker yields unknown error exception.\nSteps to Reproduce\n\ngit clone --depth 1 https://github.com/torvalds/linux.git\ndocker run -it -v $(pwd):/app --workdir=/app coala/base coala --json --files=**/*.c -o csecurity-linux.json --bears=CSecurityBear --save\n\nActual Results\n[ERROR][02:12:03] An unknown error occurred. This is a bug. We are sorry for the inconvenience. Please contact the developers for assistance. During execution of coala an exception was raised. This should never happen. When asked for, the following information may help investigating:\n[INFO][02:12:03] Exception was:\nTraceback (most recent call last):\n\n  File \"/usr/lib64/python3.6/multiprocessing/managers.py\", line 749, in _callmethod\n    conn = self._tls.connection\n\nAttributeError: 'ForkAwareLocal' object has no attribute 'connection'\n\n\nDuring handling of the above exception, another exception occurred:\n\n\nTraceback (most recent call last):\n\n  File \"/coala/coalib/coala_main.py\", line 113, in run_coala\n    console_printer=console_printer)\n\n  File \"/coala/coalib/processes/Processing.py\", line 730, in execute_section\n    console_printer=console_printer),\n\n  File \"/coala/coalib/processes/Processing.py\", line 566, in process_queues\n    result_files.update(get_file_list(local_result_dict[index]))\n\n  File \"<string>\", line 2, in __getitem__\n\n  File \"/usr/lib64/python3.6/multiprocessing/managers.py\", line 753, in _callmethod\n    self._connect()\n\n  File \"/usr/lib64/python3.6/multiprocessing/managers.py\", line 740, in _connect\n    conn = self._Client(self._token.address, authkey=self._authkey)\n\n  File \"/usr/lib64/python3.6/multiprocessing/connection.py\", line 487, in Client\n    c = SocketClient(address)\n\n  File \"/usr/lib64/python3.6/multiprocessing/connection.py\", line 614, in SocketClient\n    s.connect(address)\n\nConnectionRefusedError: [Errno 111] Connection refused\nTraceback (most recent call last):\n  File \"/usr/lib64/python3.6/multiprocessing/queues.py\", line 247, in _feed\n    send_bytes(obj)\n  File \"/usr/lib64/python3.6/multiprocessing/connection.py\", line 200, in send_bytes\n    self._send_bytes(m[offset:offset + size])\n  File \"/usr/lib64/python3.6/multiprocessing/connection.py\", line 404, in _send_bytes\n    self._send(header + buf)\n  File \"/usr/lib64/python3.6/multiprocessing/connection.py\", line 368, in _send\n    n = write(self._handle, buf)\nBrokenPipeError: [Errno 32] Broken pipe\n\nExpected Results\nCompleted run with results written to JSON file.\nReproducibility\nConsistent.\nAdditional Information:\nmacOS Sierra with full Coala Docker installation","comments":7,"createdAt":"2017-05-08T02:28:07Z","updatedAt":"2017-05-09T16:27:17Z","closedAt":null,"state":"open","user":{"login":"mrbkt","avatarUrl":"https://avatars2.githubusercontent.com/u/1465947?v=4"},"owner":{"login":"mrbkt","avatarUrl":"https://avatars2.githubusercontent.com/u/1465947?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1494248107000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4194","number":4194,"title":"Some ellipsis have preceeding whitespace","body":"Opened via gitter by @jayvdb","comments":2,"createdAt":"2017-05-08T02:58:12Z","updatedAt":"2017-05-08T12:55:07Z","closedAt":null,"state":"open","user":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"owner":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"labels":[{"name":"importance/low","color":"70E870"},{"name":"status/needs info","color":"006b75"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1494239299000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4195","number":4195,"title":"Create examples folder containing example coafiles that can be used for various languages","body":"just for demonstration, coala-quickstart can be used to produce this examples I believe","comments":0,"createdAt":"2017-05-08T10:28:15Z","updatedAt":"2017-05-08T10:28:19Z","closedAt":null,"state":"open","user":{"login":"meetmangukiya","avatarUrl":"https://avatars0.githubusercontent.com/u/7620533?v=4"},"owner":{"login":"meetmangukiya","avatarUrl":"https://avatars0.githubusercontent.com/u/7620533?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1524053424000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4196","number":4196,"title":"Create a coala brew / tap","body":"#2678 (comment) was about a different problem than the original issue.\nHomebrew/homebrew-core#6651 was created and closed due to inactivity.","comments":1,"createdAt":"2017-05-08T13:19:04Z","updatedAt":"2018-04-18T12:10:24Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"difficulty/medium","color":"0052cc"},{"name":"importance/medium","color":"fbca04"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1500898838000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4200","number":4200,"title":"DocStyleBear should also check for <blank line> before and after the DocString.","body":"The current implementation DocStyleBear violates PEP-257. There’s no function to check a blank line either or before the docstrings. Implement a functionality which basically checks for a blank line before and after a docstring, and if it doesn’t comply to it, generate a proper fix.","comments":0,"createdAt":"2017-05-08T19:28:28Z","updatedAt":"2017-07-24T12:20:38Z","closedAt":"2017-07-24T12:20:38Z","state":"closed","user":{"login":"damngamerz","avatarUrl":"https://avatars2.githubusercontent.com/u/13048113?v=4"},"owner":{"login":"damngamerz","avatarUrl":"https://avatars2.githubusercontent.com/u/13048113?v=4"},"assignee":{"login":"damngamerz","avatarUrl":"https://avatars2.githubusercontent.com/u/13048113?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1500119943000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4201","number":4201,"title":"Setting.__path__ allows use with strings","body":"In #4171 , we found that Setting.__path__ is being used with self being an instance of str rather than instance of Setting.\nSetting.__path__ docstring even says it is OK to use the method with strings.\nCute idea, but no. (c.f. PEP 20 / import this)\nhttps://travis-ci.org/jayvdb/coala/jobs/230175885 is a test run with the following added in Setting.__path__:\nassert isinstance(self, Setting), \"self is %s\" % self.__class__.__name__\nA typical failure is:\n___________________ ProcessingTest.test_create_process_group ___________________\n\nself = <tests.processes.ProcessingTest.ProcessingTest testMethod=test_create_process_group>\n\n    def setUp(self):\n        config_path = os.path.abspath(os.path.join(\n            os.path.dirname(__file__),\n            'section_executor_test_files',\n            '.coafile'))\n        self.testcode_c_path = os.path.join(os.path.dirname(config_path),\n                                            'testcode.c')\n\n        self.result_queue = queue.Queue()\n        self.queue = queue.Queue()\n        self.log_queue = queue.Queue()\n        self.console_printer = ConsolePrinter()\n        log_printer = LogPrinter(ConsolePrinter())\n        self.log_printer = ProcessingTestLogPrinter(self.log_queue)\n\n        (self.sections,\n         self.local_bears,\n         self.global_bears,\n         targets) = gather_configuration(lambda *args: True,\n                                         log_printer,\n                                         arg_list=['--config',\n>                                                  re.escape(config_path)])\n\ntests/processes/ProcessingTest.py:90: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\ncoalib/settings/ConfigurationGathering.py:387: in gather_configuration\n    log_printer)\ncoalib/settings/SectionFilling.py:31: in fill_settings\n    bear_dirs = section.bear_dirs()\ncoalib/settings/Section.py:108: in bear_dirs\n    bear_dirs = path_list(self.get('bear_dirs', ''))\ncoalib/settings/Setting.py:14: in path_list\n    return obj.__path_list__(*args, **kwargs)\ncoalib/settings/Setting.py:209: in __path_list__\n    return [Setting.__path__(elem, self.origin) for elem in self]\ncoalib/settings/Setting.py:209: in <listcomp>\n    return [Setting.__path__(elem, self.origin) for elem in self]\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = '.'\norigin = '/home/travis/build/jayvdb/coala/tests/processes/section_executor_test_files/.coafile'\nglob_escape_origin = False\n\n    def __path__(self, origin=None, glob_escape_origin=False):\n        \"\"\"\n            Determines the path of this setting.\n\n            Note: You can also use this function on strings, in that case the\n            origin argument will be taken in every case.\n\n            :param origin:             The origin file to take if no origin is\n                                       specified for the given setting. If you\n                                       want to provide a directory, make sure it\n                                       ends with a directory separator.\n\n            :param glob_escape_origin: When this is set to true, the origin of\n                                       this setting will be escaped with\n                                       ``glob_escape``.\n            :return:                   An absolute path.\n\n            :raises ValueError:        If no origin is specified in the setting\n                                       nor the given origin parameter.\n            \"\"\"\n>       assert isinstance(self, Setting), \"self is %s\" % self.__class__.__name__\nE       AssertionError: self is str\n\ncoalib/settings/Setting.py:166: AssertionError\nAnother common code-paths into this mess are:\nFile \"/home/travis/build/jayvdb/coala/coalib/processes/Processing.py\", line 356, in instantiate_processes\n\nglob_list(section.get('files', '')),\n\nThen there are three test failures in tests.settings.SectionTest.SectionTest, methods\n\ntest_bear_dirs,\ntest_glob_list, &\ntest_path_list","comments":5,"createdAt":"2017-05-09T01:34:43Z","updatedAt":"2017-07-15T11:59:03Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"area/tests","color":"bfd4f2"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1494309863000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4202","number":4202,"title":"Enforce signature of Setting constructor","body":"While playing around with #4201 , I found tests that feed the Setting constructor with incorrect types, apparently unnecessarily.","comments":0,"createdAt":"2017-05-09T04:13:16Z","updatedAt":"2017-05-09T06:04:23Z","closedAt":"2017-05-09T06:04:23Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"},{"name":"importance/medium","color":"fbca04"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1494328964000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4205","number":4205,"title":"testing","body":"this is difficulty/newcomer indeed","comments":0,"createdAt":"2017-05-09T11:17:22Z","updatedAt":"2017-05-09T11:22:44Z","closedAt":"2017-05-09T11:22:44Z","state":"closed","user":{"login":"sils","avatarUrl":"https://avatars0.githubusercontent.com/u/5716520?v=4"},"owner":{"login":"sils","avatarUrl":"https://avatars0.githubusercontent.com/u/5716520?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1494329268000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4206","number":4206,"title":"test issue","body":"difficulty/newcomer is a label and it should be autoapplied.","comments":0,"createdAt":"2017-05-09T11:27:38Z","updatedAt":"2017-05-09T11:27:48Z","closedAt":"2017-05-09T11:27:48Z","state":"closed","user":{"login":"sils","avatarUrl":"https://avatars0.githubusercontent.com/u/5716520?v=4"},"owner":{"login":"sils","avatarUrl":"https://avatars0.githubusercontent.com/u/5716520?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1532925652000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4207","number":4207,"title":"coala --json returns `\"aspect\": \"NoneType\"` instead of null","body":"json has a null type, just run coala on anything that has results and you'll get \"aspect\": \"NoneType\" instead of \"aspect\": null\nCC @coala/aspects-developers","comments":1,"createdAt":"2017-05-09T12:42:03Z","updatedAt":"2018-07-30T04:40:52Z","closedAt":null,"state":"open","user":{"login":"sils","avatarUrl":"https://avatars0.githubusercontent.com/u/5716520?v=4"},"owner":{"login":"sils","avatarUrl":"https://avatars0.githubusercontent.com/u/5716520?v=4"},"assignee":{"login":"userzimmermann","avatarUrl":"https://avatars3.githubusercontent.com/u/2088633?v=4"},"milestone":{"title":"0.12","createdAt":"2017-04-08T16:02:24Z","dueOn":null,"state":"open","htmlUrl":"https://github.com/coala/coala/milestone/16","description":""},"labels":[{"name":"area/CLI","color":"006b75"},{"name":"area/aspects","color":"000000"},{"name":"importance/critical","color":"e11d21"},{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1509057281000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4208","number":4208,"title":"Unknown exception","body":"Hey Coalas,\nBrand new bug here:\nhttps://travis-ci.org/travis-ci/docs-travis-ci-com/jobs/230418873\n$ coala --non-interactive Language\n[ERROR][16:38:59] An unknown error occurred. This is a bug. We are sorry for the inconvenience. Please contact the developers for assistance. During execution of coala an exception was raised. This should never happen. When asked for, the following information may help investigating:\n[INFO][16:38:59] Exception was:\nTraceback (most recent call last):\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/pkg_resources/__init__.py\", line 2801, in _dep_map\n    return self.__dep_map\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/pkg_resources/__init__.py\", line 2658, in __getattr__\n    raise AttributeError(attr)\nAttributeError: _DistInfoDistribution__dep_map\nDuring handling of the above exception, another exception occurred:\nTraceback (most recent call last):\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/coalib/coala_main.py\", line 80, in run_coala\n    arg_list=arg_list)\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/coalib/settings/ConfigurationGathering.py\", line 363, in gather_configuration\n    log_printer)\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/coalib/settings/SectionFilling.py\", line 31, in fill_settings\n    bear_dirs = section.bear_dirs()\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/coalib/settings/Section.py\", line 74, in bear_dirs\n    for bear_dir in collect_registered_bears_dirs('coalabears')]\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/coalib/collecting/Collectors.py\", line 303, in collect_registered_bears_dirs\n    registered_package = ep.load()\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/pkg_resources/__init__.py\", line 2354, in load\n    self.require(*args, **kwargs)\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/pkg_resources/__init__.py\", line 2371, in require\n    items = working_set.resolve(reqs, env, installer)\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/pkg_resources/__init__.py\", line 847, in resolve\n    new_requirements = dist.requires(req.extras)[::-1]\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/pkg_resources/__init__.py\", line 2602, in requires\n    dm = self._dep_map\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/pkg_resources/__init__.py\", line 2803, in _dep_map\n    self.__dep_map = self._compute_dependencies()\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/pkg_resources/__init__.py\", line 2836, in _compute_dependencies\n    common = frozenset(reqs_for_extra(None))\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/pkg_resources/__init__.py\", line 2833, in reqs_for_extra\n    if req.marker_fn(override={'extra':extra}):\n  File \"/home/travis/virtualenv/python3.5.2/lib/python3.5/site-packages/_markerlib/markers.py\", line 113, in marker_fn\n    return eval(compiled_marker, environment)\n  File \"<environment marker>\", line 1, in <module>\nNameError: name 'platform_system' is not defined","comments":8,"createdAt":"2017-05-09T16:43:07Z","updatedAt":"2017-10-26T22:34:41Z","closedAt":null,"state":"open","user":{"login":"plaindocs","avatarUrl":"https://avatars2.githubusercontent.com/u/95874?v=4"},"owner":{"login":"plaindocs","avatarUrl":"https://avatars2.githubusercontent.com/u/95874?v=4"},"labels":[{"name":"area/upstream","color":"5319e7"},{"name":"importance/critical","color":"e11d21"},{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1524099225000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4209","number":4209,"title":"Use RSTcheckBear and update .coafile","body":"Use RSTcheckBear, update rst and other relevant sections of .coafile for checking all rst files present in the repo. If there are any errors in rst files by adding rst bears, fix them in another sub-issue and work on this.\nOpened via gitter by @Vamshi99","comments":3,"createdAt":"2017-05-09T18:21:33Z","updatedAt":"2018-04-19T00:53:45Z","closedAt":"2018-04-19T00:53:45Z","state":"closed","user":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"owner":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"assignee":{"login":"mridubhatnagar","avatarUrl":"https://avatars3.githubusercontent.com/u/16894718?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/low","color":"207de5"},{"name":"importance/high","color":"eb6420"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1494530361000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4218","number":4218,"title":"Travis CI is failing","body":"https://travis-ci.org/coala/coala/jobs/231250070#L1052\nSome BadZipFile error.","comments":2,"createdAt":"2017-05-11T17:42:27Z","updatedAt":"2017-05-11T19:19:21Z","closedAt":"2017-05-11T19:19:21Z","state":"closed","user":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"owner":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"labels":[{"name":"area/CI","color":"eb6420"},{"name":"importance/critical","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1501256704000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4221","number":4221,"title":"Git_Basics: Incorrect RST syntax","body":"Change 38206d0 introduced a number of RST syntax errors into Git_Basics.rst, which rstcheck bear reports as\ndocs/Developers/Git_Basics.rst\n\n| 346| ::\n|    | [INFO] RSTcheckBear:\n|    | (INFO/1) Possible title underline, too short for the title.\n[WARNING][05:49:58] RSTcheckBear: This result has no patch attached.\n\ncc @SarthakNijhawan","comments":3,"createdAt":"2017-05-12T10:16:52Z","updatedAt":"2017-07-28T15:45:04Z","closedAt":"2017-07-28T15:45:04Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"adtac","avatarUrl":"https://avatars2.githubusercontent.com/u/7521600?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1501948538000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4222","number":4222,"title":"Development_Setup.rst: Unused target \"dev-notes\"","body":"Development_Setup.rst starts with\n.. _dev-notes:\n\nThis is unused and should be removed.","comments":5,"createdAt":"2017-05-12T10:20:30Z","updatedAt":"2017-08-05T15:55:38Z","closedAt":"2017-08-05T15:55:38Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"IamRaviTejaG","avatarUrl":"https://avatars3.githubusercontent.com/u/4240489?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1494730177000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4227","number":4227,"title":"Create LocalBearTestHelper.check_line_result_count","body":"InvalidLinkBearTest has a funky assertResultCount method, which counts how many results occured on each line, which is much more precise than check_validity / check_invalidity , but not quite as much work as using the very precise check_results.\nTo build this properly, split check_results into get_results and check_results, so that get_results is able to be used by the new check_line_result_count.","comments":0,"createdAt":"2017-05-13T13:33:58Z","updatedAt":"2017-05-14T02:49:37Z","closedAt":"2017-05-14T02:49:37Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"refeed","avatarUrl":"https://avatars1.githubusercontent.com/u/20320125?v=4"},"labels":[{"name":"area/tests","color":"bfd4f2"},{"name":"difficulty/low","color":"207de5"},{"name":"importance/low","color":"70E870"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1494874671000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4228","number":4228,"title":"return[] in  coalib/parsing/Globbing.py","body":"coalib/parsing/Globbing.py contains return[], which may not be explicitly rejected by PEP 8 style guide (PyCQA/pycodestyle#650), but it is ugly anyway.\nPlease change it to return []","comments":1,"createdAt":"2017-05-14T01:09:20Z","updatedAt":"2017-05-15T18:57:51Z","closedAt":"2017-05-15T18:57:51Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"zachsnyder1","avatarUrl":"https://avatars2.githubusercontent.com/u/5448068?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"importance/trivial","color":"d4c5f9"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1494724692000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4229","number":4229,"title":"Support flake8 plugin API","body":"Rather than add a flake8 bear (c.f. coala/coala-bears#169), which would mean coala is wrapping a wrapper, coala should have a helper class that wraps a flake8 plugin.\nThis is roughly what the Integrate pyflakes-enhanced AST into coala project was aiming to achieve.","comments":0,"createdAt":"2017-05-14T01:18:07Z","updatedAt":"2017-05-14T01:18:12Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1494883158000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4232","number":4232,"title":"cli refuses to run global bears without files","body":"$ coala -I --bears GitCommitBear\n[WARNING][07:53:34] coala will not run any analysis. Did you forget to give the `--files` argument?\n\ndifficultly/low\nOpened via gitter by @jayvdb","comments":2,"createdAt":"2017-05-15T17:46:11Z","updatedAt":"2017-05-15T21:19:18Z","closedAt":null,"state":"open","user":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"owner":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"assignee":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"labels":[{"name":"area/core","color":"eb6420"},{"name":"difficulty/medium","color":"0052cc"},{"name":"importance/low","color":"70E870"},{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1498856089000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4233","number":4233,"title":"Add Statistics in bear aspects","body":"As per discussion on thread coala/coala-bears#1691 (comment),\nand comment by @sils\nAdd Statistics in bear aspects CAN_DETECT.","comments":4,"createdAt":"2017-05-15T19:22:40Z","updatedAt":"2017-06-30T20:54:49Z","closedAt":"2017-06-30T20:54:49Z","state":"closed","user":{"login":"shreyans800755","avatarUrl":"https://avatars2.githubusercontent.com/u/3727351?v=4"},"owner":{"login":"shreyans800755","avatarUrl":"https://avatars2.githubusercontent.com/u/3727351?v=4"},"assignee":{"login":"shreyans800755","avatarUrl":"https://avatars2.githubusercontent.com/u/3727351?v=4"},"labels":[{"name":"area/aspects","color":"000000"},{"name":"status/needs design","color":"5319e7"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1496709780000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4236","number":4236,"title":"Bear.py: Add aspect ``License``","body":"See https://github.com/coala/coala-bears/blob/master/bears/general/LicenseCheckBear.py#L30, which contains the aspect License which should be added to our list here\ndifficulty/newcomer\narea/aspects\nOpened via gitter by @yash-nisar","comments":3,"createdAt":"2017-05-16T08:06:53Z","updatedAt":"2017-06-06T00:43:00Z","closedAt":null,"state":"open","user":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"owner":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"assignee":{"login":"terrazoon","avatarUrl":"https://avatars1.githubusercontent.com/u/26859290?v=4"},"labels":[{"name":"area/aspects","color":"000000"},{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1500653868000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4237","number":4237,"title":"Nextgen-Core: Don't use an asyncio event loop","body":"It seems that the ProcessPoolExecutor (and also all other executors) do provide the functionality we need by themselves: submit() and shutdown(wait=True). As far as I understand an event loop provides only extra functionality on top of executors, like coroutine support and delayed execution (which we don't need).\nAny reasons against using the executor only?\nCC @Udayan12167","comments":4,"createdAt":"2017-05-16T17:22:21Z","updatedAt":"2017-07-21T16:17:48Z","closedAt":"2017-07-21T16:13:59Z","state":"closed","user":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"owner":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"assignee":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"milestone":{"title":"Nextgen-Core","createdAt":"2017-06-09T22:33:56Z","dueOn":null,"state":"open","htmlUrl":"https://github.com/coala/coala/milestone/18","description":""},"labels":[{"name":"status/invalid","color":"000000"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1496811412000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4239","number":4239,"title":"py.test: error ","body":"When i am executing py.test on my local machine it says following error\nusage: py.test [options] [file_or_dir] [file_or_dir] [...]\npy.test: error: unrecognized arguments: --cov\n  inifile: /run/media/yashladha/Data/coala/setup.cfg\n  rootdir: /run/media/yashladha/Data/coala\n\nI am running\nFedora 25","comments":12,"createdAt":"2017-05-17T10:46:40Z","updatedAt":"2017-06-07T04:56:52Z","closedAt":null,"state":"open","user":{"login":"yashLadha","avatarUrl":"https://avatars3.githubusercontent.com/u/18033231?v=4"},"owner":{"login":"yashLadha","avatarUrl":"https://avatars3.githubusercontent.com/u/18033231?v=4"},"labels":[{"name":"status/needs info","color":"006b75"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1495207582000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4242","number":4242,"title":"Result: Why is there a json magic method?","body":"Magic methods are something that python can use to do some magic, so conventionally it should be _json or something like that and not __json__, no?\nneeds info\nOpened via gitter by @meetmangukiya","comments":9,"createdAt":"2017-05-18T13:00:46Z","updatedAt":"2017-05-19T15:26:22Z","closedAt":null,"state":"open","user":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"owner":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"labels":[{"name":"status/needs info","color":"006b75"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1498927423000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4245","number":4245,"title":"Multiple bear ignore comments on a single line are not considered correctly","body":"|   6| #·https://raw.githubusercontent.com/errbotio/errbot/master/errbot/config-template.py··#·Ignore·PycodestyleBear·(E501)··#·Ignore·LineLengthBear\n|    | [NORMAL] PycodestyleBear (E501):\n|    | E501 line too long (142 > 80 characters)\n|    | *0: Do nothing\n|    |  1: Open file(s)\n|    |  2: Add ignore comment\n|    | Enter number (Ctrl-D to exit):","comments":16,"createdAt":"2017-05-20T13:35:30Z","updatedAt":"2017-07-01T16:43:43Z","closedAt":null,"state":"open","user":{"login":"meetmangukiya","avatarUrl":"https://avatars0.githubusercontent.com/u/7620533?v=4"},"owner":{"login":"meetmangukiya","avatarUrl":"https://avatars0.githubusercontent.com/u/7620533?v=4"},"assignee":{"login":"mrtes","avatarUrl":"https://avatars3.githubusercontent.com/u/19871688?v=4"},"labels":[{"name":"area/actions","color":"207de5"},{"name":"importance/high","color":"eb6420"},{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1495319999000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4246","number":4246,"title":"Appveyor fails: LLVM download timeout","body":"See build:\nhttps://ci.appveyor.com/project/coala/coala/build/1.0.7838/job/ejeko4nuwlxt3dh6#L84\ncurl -fsSL http://llvm.org/releases/%LLVM_VERSION%/LLVM-%LLVM_VERSION%-win32.exe -o LLVM.exe\n\nWith LLVM_VERSION=3.4.1, the link becomes\nhttp://llvm.org/releases/3.4.1/LLVM-3.4.1-win32.exe\n\nIt's also not working in my local browser.\nCC @jayvdb","comments":3,"createdAt":"2017-05-20T18:13:26Z","updatedAt":"2017-05-20T22:39:59Z","closedAt":"2017-05-20T22:39:59Z","state":"closed","user":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"owner":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"labels":[{"name":"area/CI","color":"eb6420"},{"name":"importance/critical","color":"e11d21"},{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1495972308000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4247","number":4247,"title":"Add settings argument to LocalBearTestHelper.check_validity and check_invalidity","body":"Currently check_invalidity and check_validity in LocalBearTestHelper doesn't have settings argument, so it's difficult when we want to test a bear with some custom settings.\nAdd settings argument to LocalBearTestHelper.check_validity and LocalBearTestHelper.check_invalidity would be a good idea..","comments":0,"createdAt":"2017-05-21T01:40:23Z","updatedAt":"2017-05-28T11:51:48Z","closedAt":"2017-05-28T11:51:48Z","state":"closed","user":{"login":"refeed","avatarUrl":"https://avatars1.githubusercontent.com/u/20320125?v=4"},"owner":{"login":"refeed","avatarUrl":"https://avatars1.githubusercontent.com/u/20320125?v=4"},"assignee":{"login":"refeed","avatarUrl":"https://avatars1.githubusercontent.com/u/20320125?v=4"},"labels":[{"name":"area/tests","color":"bfd4f2"},{"name":"difficulty/low","color":"207de5"},{"name":"importance/high","color":"eb6420"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1496730520000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4249","number":4249,"title":"coalaTest: Unexpected assert for an actual error","body":"See https://github.com/coala/coala/blob/master/tests/coalaTest.py#L37\nWe assert that there's some error output which seem to be some kind of traceback which is bad.\nTask:\n\nCheck what's actually going wrong\n-> If it's reasonable, place a comment above to reason why this is done so nobody is going to be confused and raises an issue again (like me ;D)\n-> If it can/should be fixed, fix it and remove assertion for stderr.","comments":2,"createdAt":"2017-05-21T12:18:47Z","updatedAt":"2017-06-06T06:28:40Z","closedAt":"2017-06-06T06:28:40Z","state":"closed","user":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"owner":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"labels":[{"name":"area/tests","color":"bfd4f2"},{"name":"difficulty/medium","color":"0052cc"},{"name":"importance/low","color":"70E870"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1499363859000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4251","number":4251,"title":"Newcomers_Guide: Merge first two steps by mentioning how hello world already invites you to the org","body":"The first two steps seem pretty outdated: http://api.coala.io/en/latest/Developers/Newcomers_Guide.html#step-1-meet-the-community\ndifficulty/newcomer\narea/docs","comments":3,"createdAt":"2017-05-22T16:36:47Z","updatedAt":"2017-07-06T17:57:39Z","closedAt":"2017-07-06T17:57:39Z","state":"closed","user":{"login":"underyx","avatarUrl":"https://avatars0.githubusercontent.com/u/1060436?v=4"},"owner":{"login":"underyx","avatarUrl":"https://avatars0.githubusercontent.com/u/1060436?v=4"},"assignee":{"login":"burrowdown","avatarUrl":"https://avatars0.githubusercontent.com/u/24573020?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1495500137000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4253","number":4253,"title":"Consider allowing file patterns as command line arguments","body":"As a newcomer to coala it wasn't immediately obvious to me that the --files option was actually not optional.  My assumption, based on other Linux command line tools, was that the set of files to check was to be provided as the primary argument (i.e. coala somedir/*.py), which of course resulted in an error message.  @Makman2 explained that the primary arguments are sections from the .coafile instead, but suggested perhaps this could be discussed.","comments":1,"createdAt":"2017-05-22T19:32:59Z","updatedAt":"2017-05-23T00:42:17Z","closedAt":null,"state":"open","user":{"login":"jrrickerson","avatarUrl":"https://avatars0.githubusercontent.com/u/184687?v=4"},"owner":{"login":"jrrickerson","avatarUrl":"https://avatars0.githubusercontent.com/u/184687?v=4"},"labels":[{"name":"area/CLI","color":"006b75"},{"name":"area/usability","color":"d4c5f9"},{"name":"status/needs info","color":"006b75"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1501332858000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4254","number":4254,"title":"Add output examples to Tutorial","body":"The tutorial mentions how to grab tutorial code and run coala against it for the first time, and includes command line snippets to clarify, but does not include any snippets or screenshots to clarify what the output of the tool should look like.  Consider adding output examples to set user expectations and clarify references (for example, the reference to \"option 2\").","comments":6,"createdAt":"2017-05-22T19:41:36Z","updatedAt":"2017-07-29T12:54:18Z","closedAt":"2017-07-29T12:35:59Z","state":"closed","user":{"login":"jrrickerson","avatarUrl":"https://avatars0.githubusercontent.com/u/184687?v=4"},"owner":{"login":"jrrickerson","avatarUrl":"https://avatars0.githubusercontent.com/u/184687?v=4"},"assignee":{"login":"adeora7","avatarUrl":"https://avatars2.githubusercontent.com/u/9638595?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/low","color":"207de5"},{"name":"importance/high","color":"eb6420"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1497795495000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4255","number":4255,"title":"Newcomers Guide does not link to any style guidelines","body":"For new contributors, the Newcomer's guide to fixing your first issues and submitting back to the project does not include a style guide.  The Newcomer's guide should link to the Writing_Good_Commits.rst at least.  Consider also including links to PEP8 and Writing_Documentation.rst since newcomer issues are often documentation fixes.","comments":2,"createdAt":"2017-05-22T19:50:37Z","updatedAt":"2017-06-18T14:18:15Z","closedAt":"2017-06-18T14:18:15Z","state":"closed","user":{"login":"jrrickerson","avatarUrl":"https://avatars0.githubusercontent.com/u/184687?v=4"},"owner":{"login":"jrrickerson","avatarUrl":"https://avatars0.githubusercontent.com/u/184687?v=4"},"assignee":{"login":"IpshitaC","avatarUrl":"https://avatars0.githubusercontent.com/u/18362353?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/low","color":"207de5"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1495491584000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4257","number":4257,"title":"When displaying an error add an option ignore all future errors including showing the command/config option to disable this check.","body":"When running the HTMLLintBear I get an error that I want to mute entirely, but I don't have a way to find out what it is:\n\n|   1| \n|    | [INFO] HTMLLintBear:\n|    | Optional Tags: Omit optional tags (optional): You may remove the opening \"html\" tag.\n|    | *0: Do nothing\n|    |  1: Open file(s)\n|    |  2: Add ignore comment\n|    | Enter number (Ctrl-D to exit):","comments":0,"createdAt":"2017-05-22T22:19:39Z","updatedAt":"2017-05-22T22:19:44Z","closedAt":null,"state":"open","user":{"login":"Ciemaar","avatarUrl":"https://avatars2.githubusercontent.com/u/1388496?v=4"},"owner":{"login":"Ciemaar","avatarUrl":"https://avatars2.githubusercontent.com/u/1388496?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1495500848000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4258","number":4258,"title":"Edit  message about CLI mode to suggest new inheritance feature.","body":"[WARNING][18:36:28] 'cli' is an internally reserved section name. It may have been generated into your coafile while running coala with--save. The settings in that section will inherit implicitly to all sections as defaults just like CLI args do.Please change the name of that section in your coafile to avoid any unexpected behavior.","comments":1,"createdAt":"2017-05-22T22:39:19Z","updatedAt":"2017-05-23T00:54:08Z","closedAt":null,"state":"open","user":{"login":"Ciemaar","avatarUrl":"https://avatars2.githubusercontent.com/u/1388496?v=4"},"owner":{"login":"Ciemaar","avatarUrl":"https://avatars2.githubusercontent.com/u/1388496?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1495561998000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4259","number":4259,"title":"Allow substring matching of sections selected in CLI invocation","body":"coala python should run the sections named all.python.PEP8 and all.python.pycodestyle. coala PEP8 should run all.python.PEP8. It's probably enough to break section names down at the dots and match the parts we get like that.\nOpened via gitter by @underyx","comments":1,"createdAt":"2017-05-22T22:52:54Z","updatedAt":"2017-05-23T17:53:18Z","closedAt":null,"state":"open","user":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"owner":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"assignee":{"login":"netman92","avatarUrl":"https://avatars0.githubusercontent.com/u/2451443?v=4"},"labels":[{"name":"area/CLI","color":"006b75"},{"name":"difficulty/medium","color":"0052cc"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1495560741000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4260","number":4260,"title":"Write language specification for HTML","body":"Like this one: https://github.com/coala/coala/blob/62bc3872b7ec0ba2189e22dc09f544b5339d8bb6/coalib/bearlib/languages/definitions/Golang.py\nSee docs here: http://api.coala.io/en/latest/coalib.bearlib.languages.html#module-coalib.bearlib.languages.Language","comments":0,"createdAt":"2017-05-22T23:18:12Z","updatedAt":"2017-05-23T17:32:21Z","closedAt":"2017-05-23T17:32:21Z","state":"closed","user":{"login":"underyx","avatarUrl":"https://avatars0.githubusercontent.com/u/1060436?v=4"},"owner":{"login":"underyx","avatarUrl":"https://avatars0.githubusercontent.com/u/1060436?v=4"},"assignee":{"login":"Ciemaar","avatarUrl":"https://avatars2.githubusercontent.com/u/1388496?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1510610151000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4261","number":4261,"title":"Set up a way to test Language definitions","body":"We should test these things by running them\nagainst real pieces of code and checking the result after parsing: https://github.com/coala/coala/tree/62bc3872b7ec0ba2189e22dc09f544b5339d8bb6/coalib/bearlib/languages/definitions","comments":6,"createdAt":"2017-05-22T23:26:56Z","updatedAt":"2017-11-13T21:55:51Z","closedAt":null,"state":"open","user":{"login":"underyx","avatarUrl":"https://avatars0.githubusercontent.com/u/1060436?v=4"},"owner":{"login":"underyx","avatarUrl":"https://avatars0.githubusercontent.com/u/1060436?v=4"},"assignee":{"login":"ayush1999","avatarUrl":"https://avatars2.githubusercontent.com/u/24913958?v=4"},"labels":[{"name":"area/tests","color":"bfd4f2"},{"name":"difficulty/medium","color":"0052cc"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1495665555000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4262","number":4262,"title":"Get rid of all the time.sleeps in tests, use freezegun instead","body":"We can mock the clock with https://github.com/spulec/freezegun","comments":1,"createdAt":"2017-05-22T23:40:05Z","updatedAt":"2017-05-24T22:39:15Z","closedAt":"2017-05-24T22:39:15Z","state":"closed","user":{"login":"underyx","avatarUrl":"https://avatars0.githubusercontent.com/u/1060436?v=4"},"owner":{"login":"underyx","avatarUrl":"https://avatars0.githubusercontent.com/u/1060436?v=4"},"assignee":{"login":"netman92","avatarUrl":"https://avatars0.githubusercontent.com/u/2451443?v=4"},"labels":[{"name":"area/tests","color":"bfd4f2"},{"name":"difficulty/medium","color":"0052cc"},{"name":"importance/low","color":"70E870"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1496160065000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4265","number":4265,"title":"Development_Setup.rst: Recommends pip install -e twice in a row, pretty confusing","body":"A commit added the editable installation guide right next to another paragraph about the same exact thing. We should just merge them into one.","comments":0,"createdAt":"2017-05-23T16:49:05Z","updatedAt":"2017-05-30T16:01:05Z","closedAt":"2017-05-30T16:01:05Z","state":"closed","user":{"login":"underyx","avatarUrl":"https://avatars0.githubusercontent.com/u/1060436?v=4"},"owner":{"login":"underyx","avatarUrl":"https://avatars0.githubusercontent.com/u/1060436?v=4"},"assignee":{"login":"MikeTheReader","avatarUrl":"https://avatars1.githubusercontent.com/u/5480771?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1499363859000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4269","number":4269,"title":"Improve English in Newcomers Guide","body":"Parts of the intro and section 0 of the Newcomers Guide have awkward and/or incorrect English. Rewrite these sections for readability and grammar.","comments":4,"createdAt":"2017-05-23T21:05:11Z","updatedAt":"2017-07-06T17:57:39Z","closedAt":"2017-07-06T17:57:39Z","state":"closed","user":{"login":"burrowdown","avatarUrl":"https://avatars0.githubusercontent.com/u/24573020?v=4"},"owner":{"login":"burrowdown","avatarUrl":"https://avatars0.githubusercontent.com/u/24573020?v=4"},"assignee":{"login":"li3n3","avatarUrl":"https://avatars0.githubusercontent.com/u/1455963?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1497256105000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4272","number":4272,"title":"Installing docs say OS X is not officially supported but it is","body":"It's supported since this commit in January. We should update the docs to reflect this.\ndifficulty/newcomer","comments":0,"createdAt":"2017-05-23T22:46:22Z","updatedAt":"2017-06-12T08:28:25Z","closedAt":"2017-06-12T08:28:25Z","state":"closed","user":{"login":"underyx","avatarUrl":"https://avatars0.githubusercontent.com/u/1060436?v=4"},"owner":{"login":"underyx","avatarUrl":"https://avatars0.githubusercontent.com/u/1060436?v=4"},"assignee":{"login":"cRAN-cg","avatarUrl":"https://avatars1.githubusercontent.com/u/8614844?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"importance/high","color":"eb6420"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1496160065000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4273","number":4273,"title":"Readme points to travis-ci instead of travis-ci.org","body":"In the Readme, the shield for the macOS Build (Travis CI) currently points to\nhttps://travis-ci/coala/coala instead of travis-ci.org/coala/coala.","comments":0,"createdAt":"2017-05-24T02:13:29Z","updatedAt":"2017-05-30T16:01:05Z","closedAt":"2017-05-30T16:01:05Z","state":"closed","user":{"login":"SConaway","avatarUrl":"https://avatars1.githubusercontent.com/u/20807660?v=4"},"owner":{"login":"SConaway","avatarUrl":"https://avatars1.githubusercontent.com/u/20807660?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1495950668000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4277","number":4277,"title":"requests is broken","body":"RuntimeError: Requests dependency 'chardet' must be version >= 3.0.2, < 3.1.0!\nOpened via gitter by @damngamerz","comments":19,"createdAt":"2017-05-27T06:57:51Z","updatedAt":"2017-05-28T05:51:08Z","closedAt":null,"state":"open","user":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"owner":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"labels":[{"name":"area/upstream","color":"5319e7"},{"name":"importance/critical","color":"e11d21"},{"name":"needs backport","color":"b60205"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1495885758000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4278","number":4278,"title":"Add build caching info to docs","body":"Opened via gitter by @jayvdb","comments":1,"createdAt":"2017-05-27T11:42:11Z","updatedAt":"2017-05-27T11:49:18Z","closedAt":null,"state":"open","user":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"owner":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1497030867000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4279","number":4279,"title":"DocumentationAPI: Add Support for `:raises xyz:`","body":"Add support for :raises xyz: in DocumentationAPI. It should be like how params currently work for it.\nOpened via gitter by @damngamerz","comments":0,"createdAt":"2017-05-27T18:11:26Z","updatedAt":"2017-06-09T17:54:27Z","closedAt":"2017-06-09T17:54:27Z","state":"closed","user":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"owner":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"assignee":{"login":"damngamerz","avatarUrl":"https://avatars2.githubusercontent.com/u/13048113?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1531105542000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4280","number":4280,"title":"sphinx-build fails on docutils 0.14rc1","body":"docutils released a version 0.14rc1 resulting in\nsphinx-build -b html -d _build/doctrees  -W . _build/html\nTraceback (most recent call last):\n  File \"/home/travis/virtualenv/python3.6.1/bin/sphinx-build\", line 11, in <module>\n    sys.exit(main())\n  File \"/home/travis/virtualenv/python3.6.1/lib/python3.6/site-packages/sphinx/__init__.py\", line 51, in main\n    sys.exit(build_main(argv))\n  File \"/home/travis/virtualenv/python3.6.1/lib/python3.6/site-packages/sphinx/__init__.py\", line 61, in build_main\n    from sphinx import cmdline\n  File \"/home/travis/virtualenv/python3.6.1/lib/python3.6/site-packages/sphinx/cmdline.py\", line 23, in <module>\n    from sphinx.application import Sphinx\n  File \"/home/travis/virtualenv/python3.6.1/lib/python3.6/site-packages/sphinx/application.py\", line 35, in <module>\n    from sphinx.domains import ObjType, BUILTIN_DOMAINS\n  File \"/home/travis/virtualenv/python3.6.1/lib/python3.6/site-packages/sphinx/domains/__init__.py\", line 281, in <module>\n    from sphinx.domains.cpp import CPPDomain                 # noqa\n  File \"/home/travis/virtualenv/python3.6.1/lib/python3.6/site-packages/sphinx/domains/cpp.py\", line 24, in <module>\n    from sphinx.util.compat import Directive\n  File \"/home/travis/virtualenv/python3.6.1/lib/python3.6/site-packages/sphinx/util/compat.py\", line 17, in <module>\n    docutils_version = tuple(int(x) for x in _du_version.split('.')[:2])\n  File \"/home/travis/virtualenv/python3.6.1/lib/python3.6/site-packages/sphinx/util/compat.py\", line 17, in <genexpr>\n    docutils_version = tuple(int(x) for x in _du_version.split('.')[:2])\nValueError: invalid literal for int() with base 10: '14rc1'\nmake: *** [html] Error 1","comments":2,"createdAt":"2017-05-27T18:26:36Z","updatedAt":"2018-07-09T03:05:42Z","closedAt":"2018-07-09T03:05:41Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"area/upstream","color":"5319e7"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1495945388000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4282","number":4282,"title":"BearTest broken by requests 1.16.x","body":"The test test_read_broken has a helper that raises ReadTimeout <- Timeout <- RequestException <- IOError\nThe test then tries to catch RequestException.\nHowever, somewhere the raised exception is being wrapped in a ProtocolError , because it is either HTTPException, SocketError.\nThe exception message confirms it is the desired exception that occurred.\nSee https://travis-ci.org/jayvdb/coala/jobs/236715337 for the full trace.","comments":0,"createdAt":"2017-05-27T18:48:45Z","updatedAt":"2017-05-28T04:23:08Z","closedAt":"2017-05-28T04:23:08Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1496014922000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4284","number":4284,"title":"Replace requests with a library that adheres to semver","body":"C.f. requests/requests#4069\nOpened via gitter by @jayvdb","comments":1,"createdAt":"2017-05-28T00:59:38Z","updatedAt":"2017-05-28T23:42:02Z","closedAt":null,"state":"open","user":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"owner":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1496005253000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4285","number":4285,"title":"Add ignore comment action: If there's already an existing comment, use it accordingly and add another bear by listing them all in a row comma-separated","body":"|   6| #·https://raw.githubusercontent.com/errbotio/errbot/master/errbot/config-template.py··#·Ignore·PycodestyleBear·(E501)··#·Ignore·LineLengthBear\n|    | [NORMAL] PycodestyleBear (E501):\n|    | E501 line too long (142 > 80 characters)\n|    | *0: Do nothing\n|    |  1: Open file(s)\n|    |  2: Add ignore comment\n|    | Enter number (Ctrl-D to exit): \n\nThose ignore comments are both added by coala. The source code line shall look like this when applying multiple ignore comments from coala:\n#·https://raw.githubusercontent.com/errbotio/errbot/master/errbot/config-template.py··#·Ignore·PycodestyleBear·(E501), LineLengthBear\n\nOriginated from #4245","comments":0,"createdAt":"2017-05-28T21:00:46Z","updatedAt":"2017-05-28T21:00:53Z","closedAt":null,"state":"open","user":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"owner":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"labels":[{"name":"area/core","color":"eb6420"},{"name":"difficulty/medium","color":"0052cc"},{"name":"importance/medium","color":"fbca04"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1529398667000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4286","number":4286,"title":"Replace 'binary' with 'executable'","body":"e.g. Use ofcoala-cibinary is deprecated.\ncoala is python scripts, not a binary, so 'binary' is wrong.  'executable' is more generic, and should be used instead.\ndifficulty/newcomer\nOpened via gitter by @jayvdb","comments":3,"createdAt":"2017-05-29T05:39:34Z","updatedAt":"2018-06-19T08:57:47Z","closedAt":"2017-06-11T11:18:12Z","state":"closed","user":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"owner":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1496154198000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4287","number":4287,"title":"Documentation needs more real-world examples","body":"Hi,\nI tried to set-up coala today and ran into the issue of how to set this thing up for the first time without knowing anything. I know my way around python so the creation and usage of a virtualenv for coala was not an issue to me, but because of the nature and complexity of the analysis tools you can use with the Bears the dependencies are a bit overwhelming for a first time user.\nSo my first suggestion: If the dependency of a bear can not be started or errors out with a known error code dump a short snippet of documentation on how to install the dep correctly. Currently it just fails with xy is not installed or something like dlsym(RTLD_DEFAULT, clang_annotateTokens): symbol not found. Please ensure that your python bindings are compatible with your libclang.so version. But you already have some pointers to how to fix that in http://docs.coala.io/en/latest/Users/Install.html so why not dump information conveniently (probably hidden behind the verbose switch?)\nSecondly some examples of .coafile would be much appreciated. In the getting started guide there's a relatively simple example of the generic checkers (LineLength, Spacing) which are useful but will probably only used in addition to other Bears in real world use. Some best practice examples for some common technology stacks would be incredibly useful. For example a web-app stack would need probably Python, Javascript, CSS and HTML linters and exclude the obvious folders like node_modules from the checks.\nThe documentation is perfectly valid for a seasoned developer but could probably be improved for people who are just starting out with development as the rest of the stack is probably confusing enough already.\nIs there a documentation team to contact?","comments":4,"createdAt":"2017-05-29T13:51:39Z","updatedAt":"2017-05-30T14:23:18Z","closedAt":null,"state":"open","user":{"login":"dunkelstern","avatarUrl":"https://avatars1.githubusercontent.com/u/456385?v=4"},"owner":{"login":"dunkelstern","avatarUrl":"https://avatars1.githubusercontent.com/u/456385?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/medium","color":"0052cc"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1525560866000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4289","number":4289,"title":"Using user wide .coarc with a `files= **/*.x` glob leads to scanning complete home directory","body":"Steps to Reproduce\n\nCreate a .coarc file in your home directory like this:\n\n[javascript]\nbears = ESLintBear\nfiles = **/*.js\nignore = node_modules/, .eslintrc.js\n\n\nChange to your project directory cd ~/Projects/js-project\nRun coala without any command line arguments\n\nActual Results\n[WARNING][18:00:22] The default coafile '.coafile' was not found. You can generate a configuration file with your current options by adding the `--save` flag or suppress any use of config files with `-I`.\nExecuting section javascript...\n\nAnd then it hangs. Now I loaded it in the python debugger:\n$ python -m pdb ~/.virtualenvs/coala/bin/coala\n> /Users/johannes/.virtualenvs/coala/bin/coala(4)<module>()\n-> import re\n(Pdb) c\n[WARNING][18:01:41] The default coafile '.coafile' was not found. You can generate a configuration file with your current options by adding the `--save` flag or suppress any use of config files with `-I`.\nExecuting section javascript...\n^C\nProgram interrupted. (Use 'cont' to resume).\n> /Users/johannes/Python/coala/lib/python3.6/site-packages/coala_utils/decorators.py(26)yield_once_generator()\n-> yielded.append(item)\n(Pdb) p yielded\n...\n\nThe last print statement then lists all files contained in my home directory.\nExpected Results\nIt checks all files contained in the current directory and below instead of using the glob relatively to the global .coarc file.\nReproducibility\nEverytime there is no .coafile but only a .coarc with defined file globs\nAdditional Information:\nUsing OSX 10.12.x, Python 3.6.1 from Homebrew.\nPip listing of virtualenv:\nalabaster (0.7.10)\nansicolor (0.2.4)\nappdirs (1.4.3)\nastroid (1.5.2)\nautoflake (0.6.6)\nautopep8 (1.3.2)\nBabel (2.4.0)\nbandit (1.4.0)\ncertifi (2017.4.17)\nchardet (2.3.0)\nclick (6.6)\ncmakelint (1.3.4.1)\ncoala (0.11.0)\ncoala-bears (0.11.0)\ncoala-utils (0.6.2)\ncolorama (0.3.9)\ncolorlog (2.10.0)\ncppclean (0.12)\ncpplint (1.3.0)\ndecorator (4.0.11)\ndennis (0.9)\ndependency-management (0.4.0)\ndocopt (0.6.2)\ndocutils (0.13.1)\neradicate (0.1.6)\nfuture (0.16.0)\ngitdb2 (2.0.2)\nGitPython (2.1.3)\nguess-language-spirit (0.5.3)\nhtml-linter (0.3.0)\nidna (2.5)\nimagesize (0.7.1)\nipython-genutils (0.2.0)\nisort (4.2.5)\nJinja2 (2.9.6)\njsonschema (2.6.0)\njupyter-core (4.3.0)\nlazy-object-proxy (1.3.1)\nlibclang-py3 (3.4.0)\nmando (0.3.3)\nMarkupSafe (1.0)\nmccabe (0.6.1)\nmunkres3 (1.0.5.5)\nmypy-lang (0.4.6)\nnbformat (4.3.0)\nnltk (3.2.4)\npackaging (16.8)\npbr (3.0.1)\npip (9.0.1)\npolib (1.0.8)\nproselint (0.7.0)\npycodestyle (2.3.1)\npydocstyle (1.1.1)\npyflakes (1.4.0)\nPygments (2.2.0)\npylint (1.7.1)\npyparsing (2.2.0)\nPyPrint (0.2.6)\npyroma (2.2)\npython-gnupg (0.4.0)\npytz (2017.2)\nPyYAML (3.12)\nradon (1.4.0)\nrequests (2.14.2)\nrestructuredtext-lint (1.0.1)\nrstcheck (2.2)\nsafety (0.5.1)\nsarge (0.1.4)\nscspell3k (2.1)\nsetuptools (28.8.0)\nsix (1.10.0)\nsmmap2 (2.0.2)\nsnowballstemmer (1.2.1)\nSphinx (1.4.9)\nstevedore (1.21.0)\ntemplate-remover (0.1.9)\ntermcolor (1.1.0)\ntraitlets (4.3.2)\ntyping (3.6.1)\nunidiff (0.5.4)\nurllib3 (1.21.1)\nvim-vint (0.3.11)\nvulture (0.10)\nwrapt (1.10.10)\nyamllint (1.6.1)\nyapf (0.14.0)","comments":0,"createdAt":"2017-05-29T16:07:23Z","updatedAt":"2018-05-05T22:54:26Z","closedAt":null,"state":"open","user":{"login":"dunkelstern","avatarUrl":"https://avatars1.githubusercontent.com/u/456385?v=4"},"owner":{"login":"dunkelstern","avatarUrl":"https://avatars1.githubusercontent.com/u/456385?v=4"},"assignee":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4"},"labels":[{"name":"importance/high","color":"eb6420"},{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1496074789000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4290","number":4290,"title":"More precise message for missing dependencies","body":"Split up from #4287:\nFrom @dunkelstern:\n\nSo my first suggestion: If the dependency of a bear can not be started or errors out with a known error code dump a short snippet of documentation on how to install the dep correctly. Currently it just fails with xy is not installed or something like dlsym(RTLD_DEFAULT, clang_annotateTokens): symbol not found. Please ensure that your python bindings are compatible with your libclang.so version. But you already have some pointers to how to fix that in http://docs.coala.io/en/latest/Users/Install.html so why not dump information conveniently (probably hidden behind the verbose switch?)\n\nCC @jayvdb , do we have maybe an issue somewhere already in https://gitlab.com/coala/package_manager/ for this, for enhanced error messages for specific packages?","comments":0,"createdAt":"2017-05-29T16:18:22Z","updatedAt":"2017-05-29T16:19:49Z","closedAt":null,"state":"open","user":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"owner":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"labels":[{"name":"area/usability","color":"d4c5f9"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1498379378000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4291","number":4291,"title":"DocumentationAPI: Ignore fancy strings","body":"There are some fancy strings in coala/coala-bears repo which should be ignored by DocStyleBear.\nEg. https://github.com/coala/coala/blob/master/coalib/bearlib/aspects/Redundancy.py#L45-L54\nOpened via gitter by @damngamerz","comments":14,"createdAt":"2017-05-29T17:29:06Z","updatedAt":"2017-06-25T08:29:38Z","closedAt":"2017-06-25T08:29:38Z","state":"closed","user":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"owner":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"assignee":{"login":"damngamerz","avatarUrl":"https://avatars2.githubusercontent.com/u/13048113?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1518698735000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4292","number":4292,"title":"Newcomers_Guide.rst: Include this blog post","body":"This blog post will be helpful to all the newcomer's starting to contribute for coala. Add this somewhere in the Newcomers Guide with a good description.\nhttps://damngamerz.github.io/gsoc/An-Insight-Into-coala's-Structure.html\ndifficulty/newcomer\nOpened via gitter by @damngamerz","comments":15,"createdAt":"2017-05-29T18:30:56Z","updatedAt":"2018-02-15T12:45:35Z","closedAt":null,"state":"open","user":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"owner":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/medium","color":"0052cc"},{"name":"status/blocked","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1496104890000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4293","number":4293,"title":"requests.packages.urllib3 has gone","body":"And we use that in one test in tests/bears/BearTest.py\n================================== FAILURES ===================================\n______________________ BearDownloadTest.test_read_broken ______________________\nself = <tests.bears.BearTest.BearDownloadTest testMethod=test_read_broken>\n    def test_read_broken(self):\n        exc = (\n            requests.exceptions.RequestException,\n>           requests.packages.urllib3.exceptions.ProtocolError,\n        )\nE       AttributeError: 'module' object has no attribute 'urllib3'\n\nWe must directly import urllib3 there now\n@sils","comments":5,"createdAt":"2017-05-29T21:15:24Z","updatedAt":"2017-05-30T00:41:30Z","closedAt":"2017-05-29T21:51:59Z","state":"closed","user":{"login":"userzimmermann","avatarUrl":"https://avatars3.githubusercontent.com/u/2088633?v=4"},"owner":{"login":"userzimmermann","avatarUrl":"https://avatars3.githubusercontent.com/u/2088633?v=4"},"assignee":{"login":"userzimmermann","avatarUrl":"https://avatars3.githubusercontent.com/u/2088633?v=4"},"labels":[{"name":"area/tests","color":"bfd4f2"},{"name":"difficulty/low","color":"207de5"},{"name":"importance/critical","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1496105063000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4295","number":4295,"title":"upgrade chardet","body":"apparently requests needs chardet 3, we should allow that wherever we use it\nOpened via gitter by @sils","comments":1,"createdAt":"2017-05-29T22:02:15Z","updatedAt":"2017-05-30T00:44:23Z","closedAt":"2017-05-30T00:44:23Z","state":"closed","user":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"owner":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1496180489000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4296","number":4296,"title":"pytest: Support plain test(not colored) output","body":"pytest prints colored output by default. There should be an option to disable it.\nOpened via gitter by @shreyans800755","comments":3,"createdAt":"2017-05-29T22:21:01Z","updatedAt":"2017-05-30T21:41:29Z","closedAt":"2017-05-30T21:41:20Z","state":"closed","user":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"owner":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"labels":[{"name":"status/invalid","color":"000000"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1496108864000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4297","number":4297,"title":"bears seem to be not present in circleci build","body":"we're getting \"[WARNING][21:56:51] No bears matching 'QuotesBear' were found. Make sure you have coala-bears installed or you have typed the name correctly.\" on master builds so apparently bears are missing?\nOpened via gitter by @sils","comments":3,"createdAt":"2017-05-29T22:50:20Z","updatedAt":"2017-05-30T01:47:44Z","closedAt":"2017-05-30T01:47:19Z","state":"closed","user":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"owner":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1496135376000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4298","number":4298,"title":"Add VintBear again","body":"as soon as the vint issue is fixed\nOpened via gitter by @sils","comments":1,"createdAt":"2017-05-30T09:08:02Z","updatedAt":"2017-05-30T09:09:36Z","closedAt":"2017-05-30T09:09:36Z","state":"closed","user":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"owner":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1496593254000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4299","number":4299,"title":"coalib: Implement Info and InfoExtractor classes","body":"https://github.com/coala/cEPs/blob/master/cEP-0009.md\ncc @adtac @Adrianzatreanu","comments":1,"createdAt":"2017-05-30T10:17:22Z","updatedAt":"2017-06-04T16:20:54Z","closedAt":"2017-06-04T16:20:54Z","state":"closed","user":{"login":"satwikkansal","avatarUrl":"https://avatars1.githubusercontent.com/u/10217535?v=4"},"owner":{"login":"satwikkansal","avatarUrl":"https://avatars1.githubusercontent.com/u/10217535?v=4"},"assignee":{"login":"satwikkansal","avatarUrl":"https://avatars1.githubusercontent.com/u/10217535?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1519249528000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4302","number":4302,"title":"Testing API doesn't yield useful results","body":"The current testing API doesn’t provide useful results as a traceback if a given test fails. It becomes a strenuous and time consuming job to follow the traceback searching for errors.\nEg. For the check_results(...) method, http://paste.ubuntu.com/24269550/ is the output that I received when I had a minor difference of line=5 instead of line=6 in the given code snippet :\n[Result.from_values('ElmLintBear',\n                     message=result_message_bad_function,\n                     file=fname,\n                     line=5,\n                     severity=RESULT_SEVERITY.NORMAL)]\n\nThe given output below appear to be strange as both the Result objects contain the same number of characters (632) due to which testing transforms to a challenging task. Hit and trial methods or the usage of a debugger are the only possible ways to overcome these errors.\nE           AssertionError: Lists differ: [<Result object(id=0xce0383d576a84f34848d66d0ddc87479, origin=[632 chars]710>] != [<Result object(id=0x7e58527926a345f8a2bb36305c58f9f6, origin=[632 chars]400>]\nE           \nE           First differing element 0:\nE           <Result object(id=0xce0383d576a84f34848d66d0ddc87479, origin=[631 chars]0710>\nE           <Result object(id=0x7e58527926a345f8a2bb36305c58f9f6, origin=[631 chars]0400>\nE           \nE           Diff is 2804 characters long. Set self.maxDiff to None to see it. : The local bear 'ElmLintBear' doesn't yield the right results. Or the order may be wrong.\nE           Running bear ElmLintBear...\nE           Running 'elm-format /tmp/tmpzu0n4474 --yes'\n\ndifficulty/medium\narea/tests\ntype/test","comments":6,"createdAt":"2017-06-01T09:18:25Z","updatedAt":"2018-02-21T21:45:28Z","closedAt":"2018-02-21T21:45:28Z","state":"closed","user":{"login":"yash-nisar","avatarUrl":"https://avatars1.githubusercontent.com/u/14862976?v=4"},"owner":{"login":"yash-nisar","avatarUrl":"https://avatars1.githubusercontent.com/u/14862976?v=4"},"assignee":{"login":"yash-nisar","avatarUrl":"https://avatars1.githubusercontent.com/u/14862976?v=4"},"labels":[{"name":"area/tests","color":"bfd4f2"},{"name":"difficulty/medium","color":"0052cc"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1497293777000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4303","number":4303,"title":"pytest-3.1 raises lots of warnings running our tests","body":"Latest pytest-3.1.x versions raise several warnings when running our tests, mostly telling that unittest functions assertEquals and assertRaisesRegexp should not be used anymore. We should get rid of those warnings...","comments":1,"createdAt":"2017-06-01T10:05:53Z","updatedAt":"2017-06-12T18:56:17Z","closedAt":"2017-06-12T18:56:17Z","state":"closed","user":{"login":"userzimmermann","avatarUrl":"https://avatars3.githubusercontent.com/u/2088633?v=4"},"owner":{"login":"userzimmermann","avatarUrl":"https://avatars3.githubusercontent.com/u/2088633?v=4"},"assignee":{"login":"thisch","avatarUrl":"https://avatars3.githubusercontent.com/u/206581?v=4"},"labels":[{"name":"area/tests","color":"bfd4f2"},{"name":"difficulty/medium","color":"0052cc"},{"name":"importance/medium","color":"fbca04"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1524051013000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4304","number":4304,"title":"Implement Formatting aspect with all of its subaspects","body":"","comments":1,"createdAt":"2017-06-01T11:38:59Z","updatedAt":"2018-04-18T11:30:13Z","closedAt":null,"state":"open","user":{"login":"AsnelChristian","avatarUrl":"https://avatars2.githubusercontent.com/u/10449314?v=4"},"owner":{"login":"AsnelChristian","avatarUrl":"https://avatars2.githubusercontent.com/u/10449314?v=4"},"labels":[{"name":"area/aspects","color":"000000"},{"name":"difficulty/medium","color":"0052cc"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1497260863000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4305","number":4305,"title":"Implement Smell aspect and all of its subaspects ","body":"","comments":0,"createdAt":"2017-06-01T11:41:11Z","updatedAt":"2017-06-12T09:47:43Z","closedAt":"2017-06-12T09:47:43Z","state":"closed","user":{"login":"AsnelChristian","avatarUrl":"https://avatars2.githubusercontent.com/u/10449314?v=4"},"owner":{"login":"AsnelChristian","avatarUrl":"https://avatars2.githubusercontent.com/u/10449314?v=4"},"assignee":{"login":"AsnelChristian","avatarUrl":"https://avatars2.githubusercontent.com/u/10449314?v=4"},"milestone":{"title":"#aspectsYEAH","createdAt":"2017-05-09T22:10:19Z","dueOn":null,"state":"open","htmlUrl":"https://github.com/coala/coala/milestone/17","description":"The mother of all futures of coala!\r\n\r\nhttps://github.com/orgs/coala/projects/3\r\n\r\nhttps://github.com/orgs/coala/projects/2\r\n"},"labels":[{"name":"area/aspects","color":"000000"},{"name":"difficulty/high","color":"B319e7"},{"name":"importance/medium","color":"fbca04"},{"name":"size/XXL","color":"AA0000"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1498249622000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4306","number":4306,"title":"Implement Security aspect","body":"","comments":0,"createdAt":"2017-06-01T11:42:38Z","updatedAt":"2017-06-23T20:27:02Z","closedAt":"2017-06-23T20:27:02Z","state":"closed","user":{"login":"AsnelChristian","avatarUrl":"https://avatars2.githubusercontent.com/u/10449314?v=4"},"owner":{"login":"AsnelChristian","avatarUrl":"https://avatars2.githubusercontent.com/u/10449314?v=4"},"assignee":{"login":"AsnelChristian","avatarUrl":"https://avatars2.githubusercontent.com/u/10449314?v=4"},"labels":[{"name":"area/aspects","color":"000000"},{"name":"difficulty/low","color":"207de5"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1496357717000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4307","number":4307,"title":"Implement Security aspect ","body":"","comments":1,"createdAt":"2017-06-01T11:43:56Z","updatedAt":"2017-06-01T22:55:17Z","closedAt":"2017-06-01T22:55:10Z","state":"closed","user":{"login":"AsnelChristian","avatarUrl":"https://avatars2.githubusercontent.com/u/10449314?v=4"},"owner":{"login":"AsnelChristian","avatarUrl":"https://avatars2.githubusercontent.com/u/10449314?v=4"},"assignee":{"login":"AsnelChristian","avatarUrl":"https://avatars2.githubusercontent.com/u/10449314?v=4"},"labels":[{"name":"status/duplicate","color":"000000"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1496757157000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4311","number":4311,"title":"CI: Don't use pip install coala-bears[alldeps] --pre -U","body":"Because we also get pre-releases of all dependencies that way, which can cause issues like #4276 (comment)\nsphinx-build -b html -d _build/doctrees  -W . _build/html\nTraceback (most recent call last):\n  File \"/home/ubuntu/.pyenv/versions/3.5.1/bin/sphinx-build\", line 11, in <module>\n    sys.exit(main())\n  File \"/home/ubuntu/.pyenv/versions/3.5.1/lib/python3.5/site-packages/sphinx/__init__.py\", line 66, in main\n    sys.exit(build_main(argv))\n  File \"/home/ubuntu/.pyenv/versions/3.5.1/lib/python3.5/site-packages/sphinx/__init__.py\", line 76, in build_main\n    from sphinx import cmdline\n  File \"/home/ubuntu/.pyenv/versions/3.5.1/lib/python3.5/site-packages/sphinx/cmdline.py\", line 23, in <module>\n    from sphinx.application import Sphinx\n  File \"/home/ubuntu/.pyenv/versions/3.5.1/lib/python3.5/site-packages/sphinx/application.py\", line 36, in <module>\n    from sphinx.domains.std import GenericObject, Target, StandardDomain\n  File \"/home/ubuntu/.pyenv/versions/3.5.1/lib/python3.5/site-packages/sphinx/domains/std.py\", line 27, in <module>\n    from sphinx.util.compat import Directive\n  File \"/home/ubuntu/.pyenv/versions/3.5.1/lib/python3.5/site-packages/sphinx/util/compat.py\", line 19, in <module>\n    docutils_version = tuple(int(x) for x in _du_version.split('.')[:2])\n  File \"/home/ubuntu/.pyenv/versions/3.5.1/lib/python3.5/site-packages/sphinx/util/compat.py\", line 19, in <genexpr>\n    docutils_version = tuple(int(x) for x in _du_version.split('.')[:2])\nValueError: invalid literal for int() with base 10: '14rc1'\n\nLet's better use two steps:\n- pip install coala-bears[alldeps] -U\n- pip install coala-bears --pre -U --no-deps\n\n@sils @jayvdb @meetmangukiya @thisch","comments":1,"createdAt":"2017-06-02T15:27:57Z","updatedAt":"2017-06-06T13:52:37Z","closedAt":null,"state":"open","user":{"login":"userzimmermann","avatarUrl":"https://avatars3.githubusercontent.com/u/2088633?v=4"},"owner":{"login":"userzimmermann","avatarUrl":"https://avatars3.githubusercontent.com/u/2088633?v=4"},"assignee":{"login":"userzimmermann","avatarUrl":"https://avatars3.githubusercontent.com/u/2088633?v=4"},"labels":[{"name":"area/CI","color":"eb6420"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1524251438000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4314","number":4314,"title":"Diff.from_unified_diff is incompatible with output from Diff.unified_diff","body":"li = ['1','2','3']\ndiff = Diff(li)\ndiff.modify_line(1,'5')\nunified = diff.unified_diff\ndiff2 = Diff.from_unified_diff(unified, li)\n=> unidiff.errors.UnidiffParseError: Unexpected hunk found: @@ -1,3 +1,3 @@\nI believe this is due to us not using a parameter for fromfile= in the call to difflib.unified_diff.\nThe bug is fixed if a placeholder is used for both the tofile= and fromfile= keyword parameters.\nA placeholder is an easy fix, but probably not a particularly good choice.\nInstead, the real filename should be handed into the Diff object and used in that method.\nAdditionally, using files or changes that do not include terminating \\n will also break the diff, even if placeholder names are used: RuntimeError: Context lines do not match...\nHowever, this problem will be fixed by the changes in #4244.","comments":11,"createdAt":"2017-06-02T19:14:47Z","updatedAt":"2018-04-20T19:10:38Z","closedAt":null,"state":"open","user":{"login":"mrtes","avatarUrl":"https://avatars3.githubusercontent.com/u/19871688?v=4"},"owner":{"login":"mrtes","avatarUrl":"https://avatars3.githubusercontent.com/u/19871688?v=4"},"assignee":{"login":"Vedarth","avatarUrl":"https://avatars2.githubusercontent.com/u/22793275?v=4"},"labels":[{"name":"area/core","color":"eb6420"},{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1498589067000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4315","number":4315,"title":"Git_Basics.rst: Add link to merge conflict guide","body":"Merge conflicts can cause difficulties for people learning git, or even people who already have been using it for a while but haven't had any problems yet. Thus, in Git_Basics.rst there should be a link to a guide on how to resolve merge conflicts.","comments":0,"createdAt":"2017-06-02T19:23:16Z","updatedAt":"2017-06-27T18:44:27Z","closedAt":"2017-06-27T18:44:27Z","state":"closed","user":{"login":"supergr35","avatarUrl":"https://avatars2.githubusercontent.com/u/23623348?v=4"},"owner":{"login":"supergr35","avatarUrl":"https://avatars2.githubusercontent.com/u/23623348?v=4"},"assignee":{"login":"mridubhatnagar","avatarUrl":"https://avatars3.githubusercontent.com/u/16894718?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1496498884000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4316","number":4316,"title":"Update testing bears doc to include check_invalidity and updated check_results","body":"https://api.coala.io/en/latest/Developers/Testing_Bears.html\nOpened via gitter by @jayvdb","comments":1,"createdAt":"2017-06-03T06:53:44Z","updatedAt":"2017-06-03T14:08:04Z","closedAt":null,"state":"open","user":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"owner":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1498856089000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4317","number":4317,"title":"Add openhub badge to README","body":"c.f. https://github.com/newca12/dictionary-builder/blob/master/README.md\ndifficulty/newcomer\nOpened via gitter by @jayvdb","comments":3,"createdAt":"2017-06-03T13:56:53Z","updatedAt":"2017-06-30T20:54:49Z","closedAt":"2017-06-30T20:54:49Z","state":"closed","user":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"owner":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"assignee":{"login":"yuxiangdai","avatarUrl":"https://avatars0.githubusercontent.com/u/15934192?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1523085635000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4323","number":4323,"title":"Python 2 and 3.3 tests should only run on master Travis builds","body":"difficulty/low\nOpened via gitter by @jayvdb","comments":5,"createdAt":"2017-06-05T15:00:38Z","updatedAt":"2018-04-07T07:20:35Z","closedAt":"2018-04-07T07:20:35Z","state":"closed","user":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"owner":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"assignee":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1500743027000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4324","number":4324,"title":"Add `aspects` key in configuration","body":"If we have .coafile like this\n[all]\naspects = Clone, UnusedImport\n\nThen we expect to access those setting as an aspectlist instance\n>>> type(sections['all']['aspects'])\n<class 'aspectlist'>\n>>> sections['all']['aspects']\n[Root.Redundancy.Clone, Root.Redundancy.UnusedImport]\nCurrently, coala Setting and Section doesn't support this and read that as basic list of string instead.\narea/aspect","comments":0,"createdAt":"2017-06-05T16:43:52Z","updatedAt":"2017-07-22T17:03:47Z","closedAt":"2017-07-22T17:03:47Z","state":"closed","user":{"login":"adhikasp","avatarUrl":"https://avatars2.githubusercontent.com/u/6151302?v=4"},"owner":{"login":"adhikasp","avatarUrl":"https://avatars2.githubusercontent.com/u/6151302?v=4"},"assignee":{"login":"adhikasp","avatarUrl":"https://avatars2.githubusercontent.com/u/6151302?v=4"},"milestone":{"title":"#aspectsYEAH","createdAt":"2017-05-09T22:10:19Z","dueOn":null,"state":"open","htmlUrl":"https://github.com/coala/coala/milestone/17","description":"The mother of all futures of coala!\r\n\r\nhttps://github.com/orgs/coala/projects/3\r\n\r\nhttps://github.com/orgs/coala/projects/2\r\n"},"labels":[{"name":"area/aspects","color":"000000"},{"name":"area/config","color":"fbca04"},{"name":"type/feature","color":"0052cc"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1496696571000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4325","number":4325,"title":"Store Language.versions as packaging.version.Version instances","body":"Currently coalib.bearlib.language.Language.versions are stored as tuple of float items. float versions can't include micro versions. Turning them into str items destroys proper version comparison. Best solution would be to use packaging.version.Version instances instead\n@MariosPanag","comments":0,"createdAt":"2017-06-05T18:15:06Z","updatedAt":"2017-06-05T21:02:51Z","closedAt":"2017-06-05T21:02:51Z","state":"closed","user":{"login":"userzimmermann","avatarUrl":"https://avatars3.githubusercontent.com/u/2088633?v=4"},"owner":{"login":"userzimmermann","avatarUrl":"https://avatars3.githubusercontent.com/u/2088633?v=4"},"assignee":{"login":"userzimmermann","avatarUrl":"https://avatars3.githubusercontent.com/u/2088633?v=4"},"labels":[{"name":"area/languages","color":"d4c5f9"},{"name":"importance/critical","color":"e11d21"},{"name":"type/codestyle","color":"d4c5f9"},{"name":"type/feature","color":"0052cc"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1498856089000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4329","number":4329,"title":"Update sphinx versions in docs-requirements","body":"Currently they are set to sphinx~=1.5.5 and sphinx-argparse~=1.1.15\nThe latest sphinx-1.6.2 and sphinx-argparse-0.2.0 contain many improvements and fixes, especially for that issue with rc releases of docutlis as mentioned in #4311 (comment)\nThat way we can also remove those pip install docutils==0.13.1 workarounds from CI scripts later, as discussed in sphinx-doc/sphinx#3846\nWe should update our docs-requirements accordingly\n@sils @jayvdb @Makman2 @sims1253 @thisch","comments":0,"createdAt":"2017-06-06T13:59:14Z","updatedAt":"2017-06-30T20:54:49Z","closedAt":"2017-06-30T20:54:49Z","state":"closed","user":{"login":"userzimmermann","avatarUrl":"https://avatars3.githubusercontent.com/u/2088633?v=4"},"owner":{"login":"userzimmermann","avatarUrl":"https://avatars3.githubusercontent.com/u/2088633?v=4"},"assignee":{"login":"userzimmermann","avatarUrl":"https://avatars3.githubusercontent.com/u/2088633?v=4"},"labels":[{"name":"area/CI","color":"eb6420"},{"name":"area/documentation","color":"bfe5bf"},{"name":"importance/high","color":"eb6420"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1498856089000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4331","number":4331,"title":"CI: Remove workaround pip install docutils==0.13.1","body":"After #4330 and #4333 are merged\n@sils @jayvdb @Makman2 @sims1253 @thisch","comments":0,"createdAt":"2017-06-06T14:13:28Z","updatedAt":"2017-06-30T20:54:49Z","closedAt":"2017-06-30T20:54:49Z","state":"closed","user":{"login":"userzimmermann","avatarUrl":"https://avatars3.githubusercontent.com/u/2088633?v=4"},"owner":{"login":"userzimmermann","avatarUrl":"https://avatars3.githubusercontent.com/u/2088633?v=4"},"assignee":{"login":"userzimmermann","avatarUrl":"https://avatars3.githubusercontent.com/u/2088633?v=4"},"labels":[{"name":"area/CI","color":"eb6420"},{"name":"area/documentation","color":"bfe5bf"},{"name":"importance/high","color":"eb6420"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1496881545000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4332","number":4332,"title":"circle.yml: Install docs-requirements","body":"According to our circle.yml, our CircleCI processes don't install our docs-requirements.txt before make -C docs clean, resulting in the use of some outdated sphinx from coala-bears dependencies\n@sils @jayvdb @Makman2 @sims1253 @thisch","comments":0,"createdAt":"2017-06-06T14:18:28Z","updatedAt":"2017-06-08T00:25:45Z","closedAt":"2017-06-08T00:25:45Z","state":"closed","user":{"login":"userzimmermann","avatarUrl":"https://avatars3.githubusercontent.com/u/2088633?v=4"},"owner":{"login":"userzimmermann","avatarUrl":"https://avatars3.githubusercontent.com/u/2088633?v=4"},"assignee":{"login":"userzimmermann","avatarUrl":"https://avatars3.githubusercontent.com/u/2088633?v=4"},"labels":[{"name":"area/CI","color":"eb6420"},{"name":"area/documentation","color":"bfe5bf"},{"name":"importance/high","color":"eb6420"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1497626392000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4335","number":4335,"title":"Running pytest directly fails on local machines","body":"The problems include:\n\n missing coverage (#4336)\n tests skipped on Windows due to missing pwd (#4093)\n tests which can not be re-run (so they pass on CI, but not on local machines the second time)\n incompatibility with some pytest extensions (#3816)\n missing requirements , or test requirements, or incorrect versions (#3511)","comments":0,"createdAt":"2017-06-07T05:09:23Z","updatedAt":"2017-06-16T15:19:52Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1490439231000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3988","number":3988,"title":"Mistakes in Develepment_Setup.rst","body":"Newcomers is wrongly written replace by newcomer's.\nGit is mentioned as Git instead of git.","comments":5,"createdAt":"2017-03-25T09:18:09Z","updatedAt":"2017-03-25T10:53:51Z","closedAt":"2017-03-25T10:53:40Z","state":"closed","user":{"login":"jack17529","avatarUrl":"https://avatars2.githubusercontent.com/u/15366183?v=4"},"owner":{"login":"jack17529","avatarUrl":"https://avatars2.githubusercontent.com/u/15366183?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"status/invalid","color":"000000"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1490439246000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3989","number":3989,"title":"Use .  in  the end of line in Development_Setup.rst","body":"Missing \".\" in the end of using.","comments":2,"createdAt":"2017-03-25T09:42:08Z","updatedAt":"2017-03-25T10:54:06Z","closedAt":"2017-03-25T10:49:18Z","state":"closed","user":{"login":"jack17529","avatarUrl":"https://avatars2.githubusercontent.com/u/15366183?v=4"},"owner":{"login":"jack17529","avatarUrl":"https://avatars2.githubusercontent.com/u/15366183?v=4"},"labels":[{"name":"status/invalid","color":"000000"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1491551744000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3998","number":3998,"title":"DocumentationComment: Remove parameter documentation of language and docstyle parameter","body":"From @SanketDG\n\ninstead of language and docstyle there is now a docstyle_definition\n\n/cc @SanketDG","comments":3,"createdAt":"2017-03-26T09:21:15Z","updatedAt":"2017-04-07T07:55:44Z","closedAt":"2017-04-07T07:55:44Z","state":"closed","user":{"login":"meetmangukiya","avatarUrl":"https://avatars0.githubusercontent.com/u/7620533?v=4"},"owner":{"login":"meetmangukiya","avatarUrl":"https://avatars0.githubusercontent.com/u/7620533?v=4"},"assignee":{"login":"adamgrieger","avatarUrl":"https://avatars3.githubusercontent.com/u/9660282?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1491557222000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3999","number":3999,"title":"Format the output of CI mode when is used both --format and --ci","body":"#3750","comments":5,"createdAt":"2017-03-26T09:35:48Z","updatedAt":"2017-04-07T09:27:02Z","closedAt":"2017-04-07T09:27:02Z","state":"closed","user":{"login":"Nosferatul","avatarUrl":"https://avatars2.githubusercontent.com/u/15227444?v=4"},"owner":{"login":"Nosferatul","avatarUrl":"https://avatars2.githubusercontent.com/u/15227444?v=4"},"assignee":{"login":"MariosPanag","avatarUrl":"https://avatars0.githubusercontent.com/u/15462523?v=4"},"labels":[{"name":"area/CI","color":"eb6420"},{"name":"difficulty/low","color":"207de5"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1490550912000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4001","number":4001,"title":"ConfigurationGathering: Exploration of `.coafile` should be stored. ","body":"We should keep track of .coafile whenever they are discovered in a list.\nIn find_user_config,\nIf there's no coafile in the immediate directory , we can load the stored list of known coafile directories and see which one is a substring of the current directory.\nCC @adtac","comments":1,"createdAt":"2017-03-26T16:20:19Z","updatedAt":"2017-03-26T17:55:12Z","closedAt":null,"state":"open","user":{"login":"Siddhartha1234","avatarUrl":"https://avatars3.githubusercontent.com/u/18551427?v=4"},"owner":{"login":"Siddhartha1234","avatarUrl":"https://avatars3.githubusercontent.com/u/18551427?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1490596315000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4003","number":4003,"title":"Add PLATFORM metadata attribute to Bear class","body":"Note that there are two bear classes, @Makman2 how should we handle this? Seriously we cannot have two bear classes around this is highly dangerous and will result in bugs.\nProbably difficulty/low with @Makman2 elaborating on the bear class\nOpened via gitter by @sils","comments":7,"createdAt":"2017-03-26T18:36:15Z","updatedAt":"2017-03-27T06:31:55Z","closedAt":"2017-03-27T06:31:55Z","state":"closed","user":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"owner":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"assignee":{"login":"Siddhartha1234","avatarUrl":"https://avatars3.githubusercontent.com/u/18551427?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"},{"name":"status/needs design","color":"5319e7"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1520782436000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4004","number":4004,"title":"Mark old Bear class as deprecated","body":"Opened via gitter by @sils","comments":4,"createdAt":"2017-03-26T18:36:26Z","updatedAt":"2018-03-11T15:33:56Z","closedAt":"2018-03-11T15:33:56Z","state":"closed","user":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"owner":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"milestone":{"title":"Nextgen-Core","createdAt":"2017-06-09T22:33:56Z","dueOn":null,"state":"open","htmlUrl":"https://github.com/coala/coala/milestone/18","description":""},"labels":[{"name":"importance/critical","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1492190633000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4005","number":4005,"title":"--format: Use default placeholder string or error out when providing no format-string","body":"Opened via gitter by @Makman2","comments":6,"createdAt":"2017-03-27T16:25:43Z","updatedAt":"2017-04-14T17:23:53Z","closedAt":"2017-04-14T17:23:53Z","state":"closed","user":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"owner":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"assignee":{"login":"Nosferatul","avatarUrl":"https://avatars2.githubusercontent.com/u/15227444?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1509016018000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4006","number":4006,"title":"docs/Developers/Adding_CI.rst: remove circleCI recommendation","body":"Having devs enabling CircleCI causes the depletions of our org's containers leaving less for actual builds. This is because circle uses a shared build pool for all forks of opensource project. We should dissuade people from using CircleCI privately as Travis is intended for this. I recommend we remove the entire CircleCI section and replace with a message explaining why we don't want private circleCI on forks. Implementer, please make sure a maintainer does a thorough review before merge.\nimportance/medium difficulty/low\nOpened via gitter by @Mixih","comments":6,"createdAt":"2017-03-27T16:38:44Z","updatedAt":"2017-10-26T11:06:58Z","closedAt":"2017-10-26T11:06:58Z","state":"closed","user":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"owner":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"assignee":{"login":"acashmkj","avatarUrl":"https://avatars1.githubusercontent.com/u/31628272?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"},{"name":"importance/medium","color":"fbca04"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1491918502000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4007","number":4007,"title":"Check for `:` after closes/fixes in commit messages","body":"When writing commit messages, the proper format would be to include closes/fixes , but if something like closes/fixes :  is written, it should be automatically detected.\nAn example is #3997","comments":6,"createdAt":"2017-03-27T18:02:06Z","updatedAt":"2017-04-11T13:48:22Z","closedAt":"2017-04-11T13:48:22Z","state":"closed","user":{"login":"RJ722","avatarUrl":"https://avatars1.githubusercontent.com/u/15556382?v=4"},"owner":{"login":"RJ722","avatarUrl":"https://avatars1.githubusercontent.com/u/15556382?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1500116773000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4010","number":4010,"title":"Add `next_action` behaviour in Result Action","body":"It should be possible for a ResultAction instance to determine the next action(s) for the user to choose at the runtime.\nSee #3650 (comment)","comments":16,"createdAt":"2017-03-28T11:20:57Z","updatedAt":"2017-07-15T11:06:13Z","closedAt":null,"state":"open","user":{"login":"satwikkansal","avatarUrl":"https://avatars1.githubusercontent.com/u/10217535?v=4"},"owner":{"login":"satwikkansal","avatarUrl":"https://avatars1.githubusercontent.com/u/10217535?v=4"},"assignee":{"login":"satwikkansal","avatarUrl":"https://avatars1.githubusercontent.com/u/10217535?v=4"},"labels":[{"name":"area/actions","color":"207de5"},{"name":"difficulty/medium","color":"0052cc"},{"name":"status/blocked","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1491497240000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4012","number":4012,"title":"Remove triple backticks from RST","body":"Opened via gitter by @jayvdb","comments":3,"createdAt":"2017-03-28T18:53:20Z","updatedAt":"2017-04-06T16:47:20Z","closedAt":"2017-04-06T16:47:20Z","state":"closed","user":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"owner":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"assignee":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1490804218000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4014","number":4014,"title":"Git_Basics.rst: Remind newcomers that they can't merge PRs","body":"Opened via gitter by @supergr35","comments":0,"createdAt":"2017-03-28T20:04:13Z","updatedAt":"2017-03-29T16:16:58Z","closedAt":null,"state":"open","user":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"owner":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"assignee":{"login":"yashtrivedi96","avatarUrl":"https://avatars1.githubusercontent.com/u/25592697?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1520178336000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4016","number":4016,"title":"ApplyPatchAction / patch conflict: Ask user whether to place patch with git-like conflict marker into the affected file","body":"Then he can fix it up in the IDE still, effective and convenient.","comments":7,"createdAt":"2017-03-28T22:07:54Z","updatedAt":"2018-03-04T15:45:36Z","closedAt":null,"state":"open","user":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"owner":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"assignee":{"login":"Vedarth","avatarUrl":"https://avatars2.githubusercontent.com/u/22793275?v=4"},"labels":[{"name":"area/actions","color":"207de5"},{"name":"difficulty/medium","color":"0052cc"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1518123817000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4017","number":4017,"title":"Development_Setup.html: Tell Unix users that they probably need to install virtualenv with --user","body":"When users install virtualenv for the first time through pip like so:\n\nInstall virtualenv using pip :\n$ pip3 install virtualenv\n\nthey most likely need to do that with sudo rights. We should add a note about that.","comments":12,"createdAt":"2017-03-29T08:01:20Z","updatedAt":"2018-02-08T21:03:37Z","closedAt":null,"state":"open","user":{"login":"NiklasMM","avatarUrl":"https://avatars1.githubusercontent.com/u/1924002?v=4"},"owner":{"login":"NiklasMM","avatarUrl":"https://avatars1.githubusercontent.com/u/1924002?v=4"},"assignee":{"login":"lilithxxx","avatarUrl":"https://avatars1.githubusercontent.com/u/32506039?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1490993059000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4018","number":4018,"title":"ConsoleInteraction.py: Typo in docstring ","body":"line 234: wether\nOpened via gitter by @RohanVB","comments":1,"createdAt":"2017-03-29T10:15:49Z","updatedAt":"2017-03-31T20:44:19Z","closedAt":"2017-03-31T20:44:19Z","state":"closed","user":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"owner":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"assignee":{"login":"HyungKun","avatarUrl":"https://avatars1.githubusercontent.com/u/19852277?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1532680907000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4019","number":4019,"title":"Add `exclude-sections` argument for the cli","body":"This will allow users to avoid execution of some sections when desired\nOpened via gitter by @satwikkansal","comments":15,"createdAt":"2017-03-29T11:26:21Z","updatedAt":"2018-07-27T08:41:47Z","closedAt":null,"state":"open","user":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"owner":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"assignee":{"login":"aashraybhandar1","avatarUrl":"https://avatars0.githubusercontent.com/u/12982393?v=4"},"labels":[{"name":"area/CLI","color":"006b75"},{"name":"difficulty/low","color":"207de5"},{"name":"hacktoberfest","color":"e99695"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1492424753000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4021","number":4021,"title":"collectors: get_all_bears raises AttributeError ","body":"get_all_bears function doesn't take any argument. So, it should work this way IMO\nCode:\nIn [1]: from coalib.collecting.Collectors import get_all_bears, get_all_bears_names\n \nIn [2]: get_all_bears()\n---------------------------------------------------------------------------\nIndexError                                Traceback (most recent call last)\n/home/phoenista/Desktop/ghubby/coala/coala-main/coalib/settings/Section.py in get(self, key, default, ignore_defaults)\n    234         try:\n--> 235             return self.__getitem__(key, ignore_defaults)\n    236         except IndexError:\n \n/home/phoenista/Desktop/ghubby/coala/coala-main/coalib/settings/Section.py in __getitem__(self, item, ignore_defaults)\n    213         if self.defaults is None or ignore_defaults:\n--> 214             raise IndexError('Required index is unavailable.')\n    215\n \nIndexError: Required index is unavailable.\n \nDuring handling of the above exception, another exception occurred:\n \nAttributeError                            Traceback (most recent call last)\n<ipython-input-2-ee36147e61f7> in <module>()\n----> 1 get_all_bears()\n \n/home/phoenista/Desktop/ghubby/coala/coala-main/coalib/collecting/Collectors.py in get_all_bears()\n    239     printer = LogPrinter(NullPrinter())\n    240     local_bears, global_bears = collect_bears(\n--> 241         Section('').bear_dirs(),\n    242         ['**'],\n    243         [BEAR_KIND.LOCAL, BEAR_KIND.GLOBAL],\n \n/home/phoenista/Desktop/ghubby/coala/coala-main/coalib/settings/Section.py in bear_dirs(self)\n    107\n    108     def bear_dirs(self):\n--> 109         bear_dirs = path_list(self.get('bear_dirs', ''))\n    110         for bear_dir in bear_dirs:\n    111             sys.path.append(bear_dir)\n \n/home/phoenista/Desktop/ghubby/coala/coala-main/coalib/settings/Section.py in get(self, key, default, ignore_defaults)\n    235             return self.__getitem__(key, ignore_defaults)\n    236         except IndexError:\n--> 237             return Setting(key, str(default))\n    238\n    239     def copy(self):\n \n/home/phoenista/Desktop/ghubby/coala/coala-main/coalib/settings/Setting.py in __init__(self, key, value, origin, strip_whitespaces, list_delimiters, from_cli, remove_empty_iter_elements, to_append)\n    140             strip_whitespaces=strip_whitespaces,\n    141             list_delimiters=list_delimiters,\n--> 142             remove_empty_iter_elements=remove_empty_iter_elements)\n    143\n    144         self.from_cli = from_cli\n \n/usr/lib/python3.5/site-packages/coala_utils/string_processing/StringConverter.py in __init__(self, value, strip_whitespaces, list_delimiters, dict_delimiter, remove_empty_iter_elements)\n     34         self.__unescaped_list = None\n     35         self.__dict = None\n---> 36         self.value = value\n     37\n     38     def __str__(self):\n \n/usr/lib/python3.5/site-packages/coala_utils/string_processing/StringConverter.py in value(self, newval)\n    148             self.__value = unescaped_strip(self.__value)\n    149\n--> 150         self.__prepare_list()\n    151         self.__prepare_dict()\n    152\n \n/usr/lib/python3.5/site-packages/coala_utils/string_processing/StringConverter.py in __prepare_list(self)\n    102\n    103     def __prepare_list(self):\n--> 104         self.__escaped_list = self.__get_raw_list()\n    105\n    106         if self.__strip_whitespaces:\n \n/usr/lib/python3.5/site-packages/coala_utils/string_processing/StringConverter.py in __get_raw_list(self)\n     98\n     99         return list(unescaped_split(pattern,\n--> 100                                     self.value,\n    101                                     use_regex=True))\n    102\n \n/home/phoenista/Desktop/ghubby/coala/coala-main/coalib/settings/Setting.py in value(self)\n    243                              'incomplete. Please access the value of the '\n    244                              'setting in a section to get the complete value.')\n--> 245         return self._value\n \nAttributeError: 'Setting' object has no attribute '_value'","comments":4,"createdAt":"2017-03-29T14:19:37Z","updatedAt":"2017-04-17T10:25:53Z","closedAt":null,"state":"open","user":{"login":"meetmangukiya","avatarUrl":"https://avatars0.githubusercontent.com/u/7620533?v=4"},"owner":{"login":"meetmangukiya","avatarUrl":"https://avatars0.githubusercontent.com/u/7620533?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1494361413000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4025","number":4025,"title":"coala should not run *.orig when ran on all files","body":"Running a command like :\ncoala --bears=SpaceConsistencyBear --files=\\* --save\nmore than once, the bear also runs on *.orig files as well. coala should never run on *.orig files since this could create a lot of .orig.orig files.\nResult on running coala twice when --files-\\* is set runs on .orig files :\n- |----|    | part1_script.py.orig\n+ |    |++++| part1_script.py.orig\n  |  20|  20|         pyautogui.typewrite(\"h1 sudo tcpdump -n -t > h1_tcp &\\n\")\n  |  21|  21|         time.sleep(2)\n  |  22|  22|         pyautogui.typewrite(\"h2 sudo tcpdump -n -t > h2_tcp &\\n\")\n- |  23|    |-\t\t    time.sleep(2)\n+ |    |  23|+        time.sleep(2)\n.orig files must be completely ignored else the exact same warnings could keep on reporting.","comments":8,"createdAt":"2017-03-30T06:11:29Z","updatedAt":"2017-05-09T20:23:33Z","closedAt":null,"state":"open","user":{"login":"kaustubhhiware","avatarUrl":"https://avatars2.githubusercontent.com/u/11318551?v=4"},"owner":{"login":"kaustubhhiware","avatarUrl":"https://avatars2.githubusercontent.com/u/11318551?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1497643054000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4026","number":4026,"title":"--files not following globbing patterns","body":"coala --bears=SpaceConsistencyBear --files=\\*[^orig] --save command should ideally not analyze orig files but it does nonetheless.","comments":9,"createdAt":"2017-03-30T09:26:13Z","updatedAt":"2017-06-16T19:57:34Z","closedAt":"2017-06-13T13:55:48Z","state":"closed","user":{"login":"vasramc","avatarUrl":"https://avatars3.githubusercontent.com/u/26617672?v=4"},"owner":{"login":"vasramc","avatarUrl":"https://avatars3.githubusercontent.com/u/26617672?v=4"},"labels":[{"name":"status/invalid","color":"000000"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1490961338000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4027","number":4027,"title":"Add SEE_MORE attribute to the \"Writing Native Bears\" page","body":"A new attribute \"SEE_MORE\" has been recently added to the metadata of bears in coala. That should be mentioned in this page under the \"Other Metadata\" section.","comments":14,"createdAt":"2017-03-30T14:05:47Z","updatedAt":"2017-03-31T11:55:38Z","closedAt":"2017-03-31T11:55:38Z","state":"closed","user":{"login":"rohanraju97","avatarUrl":"https://avatars2.githubusercontent.com/u/16348426?v=4"},"owner":{"login":"rohanraju97","avatarUrl":"https://avatars2.githubusercontent.com/u/16348426?v=4"},"assignee":{"login":"akwatz","avatarUrl":"https://avatars2.githubusercontent.com/u/19783792?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1500882729000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4029","number":4029,"title":"DocumentationExtraction bug for java docstyle.","body":"DocumentationExtraction works good when java docstyle as given below is used.\n/**\n * Returns an String that says Hello with the name argument.\n *\n * @param  name the name to which to say hello\n * @return      the concatenated string\n */\n\nBut if we remove that one space from that mid marker and end marker as follows\n/**\n* Returns an String that says Hello with the name argument.\n*\n* @param  name the name to which to say hello\n* @return      the concatenated string\n*/\n\nDocumentationExtraction doesn't return anything. We need to throw a nice warning message for the above case.","comments":2,"createdAt":"2017-03-30T20:59:35Z","updatedAt":"2017-07-24T07:52:09Z","closedAt":"2017-07-24T07:52:09Z","state":"closed","user":{"login":"damngamerz","avatarUrl":"https://avatars2.githubusercontent.com/u/13048113?v=4"},"owner":{"login":"damngamerz","avatarUrl":"https://avatars2.githubusercontent.com/u/13048113?v=4"},"assignee":{"login":"damngamerz","avatarUrl":"https://avatars2.githubusercontent.com/u/13048113?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1491058261000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4030","number":4030,"title":"Update the parameter docstring","body":"Change :param markers: -> :param docstyle_definition: and provide valid description. https://github.com/coala/coala/blob/master/coalib/bearlib/languages/documentation/DocumentationExtraction.py#L217\ndifficulty/newcomer","comments":1,"createdAt":"2017-03-31T05:17:10Z","updatedAt":"2017-04-01T14:51:01Z","closedAt":"2017-04-01T14:51:00Z","state":"closed","user":{"login":"Flap-Py","avatarUrl":"https://avatars2.githubusercontent.com/u/11754275?v=4"},"owner":{"login":"Flap-Py","avatarUrl":"https://avatars2.githubusercontent.com/u/11754275?v=4"},"assignee":{"login":"HyungKun","avatarUrl":"https://avatars1.githubusercontent.com/u/19852277?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1490965347000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4032","number":4032,"title":"...","body":"","comments":2,"createdAt":"2017-03-31T10:56:35Z","updatedAt":"2017-03-31T13:02:27Z","closedAt":"2017-03-31T13:02:27Z","state":"closed","user":{"login":"guptaRk","avatarUrl":"https://avatars1.githubusercontent.com/u/26774597?v=4"},"owner":{"login":"guptaRk","avatarUrl":"https://avatars1.githubusercontent.com/u/26774597?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1513091820000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4034","number":4034,"title":"Writing_Good_Commits: Add example for typo fix","body":"According to #4024 (comment) , we should add another example to https://github.com/coala/coala/blob/master/docs/Developers/Writing_Good_Commits.rst , showing a good commit message for fixing a typo in a doc string or comment or similar areas, like in case of #4024 :\nConsoleInteraction.print_result: Fix docstring typo\n\nwether --> whether\n\nFixes https://github.com/coala/coala/issues/4018\n\n@sils @meetmangukiya @arjunsinghy96 @HyungKen","comments":5,"createdAt":"2017-03-31T12:25:15Z","updatedAt":"2017-12-12T15:17:00Z","closedAt":"2017-12-12T15:17:00Z","state":"closed","user":{"login":"userzimmermann","avatarUrl":"https://avatars3.githubusercontent.com/u/2088633?v=4"},"owner":{"login":"userzimmermann","avatarUrl":"https://avatars3.githubusercontent.com/u/2088633?v=4"},"assignee":{"login":"karansingh1559","avatarUrl":"https://avatars0.githubusercontent.com/u/24516531?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1511087561000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4037","number":4037,"title":"Add tests for tuple-derived coalib.bearlib.languages.Languages class","body":"While writing #3936 (comment) I realized that they are just missing :)","comments":1,"createdAt":"2017-03-31T21:22:41Z","updatedAt":"2017-11-19T10:32:41Z","closedAt":null,"state":"open","user":{"login":"userzimmermann","avatarUrl":"https://avatars3.githubusercontent.com/u/2088633?v=4"},"owner":{"login":"userzimmermann","avatarUrl":"https://avatars3.githubusercontent.com/u/2088633?v=4"},"assignee":{"login":"MariosPanag","avatarUrl":"https://avatars0.githubusercontent.com/u/15462523?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"},{"name":"importance/high","color":"eb6420"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1494368161000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4038","number":4038,"title":"Separate coala-aspects project","body":"aspects are just so fundamental that they should also get their separate repository and python package/distribution ;) And now seriously:\nI think we could really speed up the aspects development in a separate project. And when the number of aspects grow and people get interested in contributing new aspect definitions, it gets messy to keep them nested in coalib.bearlib.aspects and together with so many other non-aspects related issues and pull requests in the main coala project. I should feel more like bear development in the separate coala-bears project.\nSo I propose creating a coala/coala-aspects project with its own distribution and a coala_aspects top-level package, in which we move the current content of coalib/bearlib/aspects, and making the coala distribution depend on it.\n@sils @jayvdb @coala/aspects-developers","comments":24,"createdAt":"2017-03-31T22:24:46Z","updatedAt":"2017-05-09T22:16:01Z","closedAt":null,"state":"open","user":{"login":"userzimmermann","avatarUrl":"https://avatars3.githubusercontent.com/u/2088633?v=4"},"owner":{"login":"userzimmermann","avatarUrl":"https://avatars3.githubusercontent.com/u/2088633?v=4"},"assignee":{"login":"userzimmermann","avatarUrl":"https://avatars3.githubusercontent.com/u/2088633?v=4"},"milestone":{"title":"#aspectsYEAH","createdAt":"2017-05-09T22:10:19Z","dueOn":null,"state":"open","htmlUrl":"https://github.com/coala/coala/milestone/17","description":"The mother of all futures of coala!\r\n\r\nhttps://github.com/orgs/coala/projects/3\r\n\r\nhttps://github.com/orgs/coala/projects/2\r\n"},"labels":[{"name":"area/aspects","color":"000000"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1491077727000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4039","number":4039,"title":"Change any occurrences of 'Aspect' or 'Aspects' in doc strings and comments to lowercase","body":"According to coala/cEPs#69\n@coala/aspects-developers Know any so-called newcomer to do this? :)","comments":6,"createdAt":"2017-03-31T22:48:10Z","updatedAt":"2017-04-01T20:15:27Z","closedAt":null,"state":"open","user":{"login":"userzimmermann","avatarUrl":"https://avatars3.githubusercontent.com/u/2088633?v=4"},"owner":{"login":"userzimmermann","avatarUrl":"https://avatars3.githubusercontent.com/u/2088633?v=4"},"assignee":{"login":"karansingh1559","avatarUrl":"https://avatars0.githubusercontent.com/u/24516531?v=4"},"labels":[{"name":"area/aspects","color":"000000"},{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1491307582000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4040","number":4040,"title":"aspect for the aspectsYEAHBear","body":"The new aspectsYEAHBear as proposed in coala/coala-bears#1573 based on @Techievena's idea from #4039 (comment) needs a new aspect for performing the task of checking that the terms aspect and aspects are always written lowercase according to coala/cEPs#69\n@coala/aspects-developers","comments":5,"createdAt":"2017-04-01T15:14:24Z","updatedAt":"2017-04-04T12:06:22Z","closedAt":"2017-04-04T12:06:22Z","state":"closed","user":{"login":"userzimmermann","avatarUrl":"https://avatars3.githubusercontent.com/u/2088633?v=4"},"owner":{"login":"userzimmermann","avatarUrl":"https://avatars3.githubusercontent.com/u/2088633?v=4"},"assignee":{"login":"Techievena","avatarUrl":"https://avatars2.githubusercontent.com/u/17270966?v=4"},"labels":[{"name":"area/aspects","color":"000000"},{"name":"difficulty/low","color":"207de5"},{"name":"importance/high","color":"eb6420"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1491061052000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4041","number":4041,"title":"aspect for the aspectsYEAHBear","body":"The new aspectsYEAHBear as proposed in coala/coala-bears#1573 based on @Techievena's idea from #4039 (comment) needs a new aspect for performing the task of checking that the terms aspect and aspects are always written lowercase.\n@coala/aspects-developers","comments":1,"createdAt":"2017-04-01T15:35:46Z","updatedAt":"2017-04-01T15:37:32Z","closedAt":"2017-04-01T15:37:32Z","state":"closed","user":{"login":"userzimmermann","avatarUrl":"https://avatars3.githubusercontent.com/u/2088633?v=4"},"owner":{"login":"userzimmermann","avatarUrl":"https://avatars3.githubusercontent.com/u/2088633?v=4"},"labels":[{"name":"area/aspects","color":"000000"},{"name":"difficulty/low","color":"207de5"},{"name":"importance/high","color":"eb6420"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1514655111000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4045","number":4045,"title":"Add return to `require_settings` docstring in ConsoleInteraction","body":"The return should be mentioned in the docstring.\ndef require_setting(setting_name, arr, section):\n    \"\"\"\n    This method is responsible for prompting a user about a missing setting and\n    taking its value as input from the user.\n\n    :param setting_name: Name of the setting missing\n    :param arr:          A list containing a description in [0] and the name\n                         of the bears who need this setting in [1] and\n                         following.\n    :param section:      The section the action corresponds to.\n    \"\"\"\n    needed = join_names(arr[1:])\n\n    # Don't use input, it can't deal with escapes!\n\n    print(colored(STR_GET_VAL_FOR_SETTING.format(setting_name, arr[0], needed,\n                                                 section.name),\n                  REQUIRED_SETTINGS_COLOR))\n    return input()\n\nDifficulty/newcomer","comments":5,"createdAt":"2017-04-02T20:45:31Z","updatedAt":"2017-12-30T17:31:51Z","closedAt":"2017-12-30T17:31:51Z","state":"closed","user":{"login":"nemaniarjun","avatarUrl":"https://avatars0.githubusercontent.com/u/15715894?v=4"},"owner":{"login":"nemaniarjun","avatarUrl":"https://avatars0.githubusercontent.com/u/15715894?v=4"},"assignee":{"login":"Vedarth","avatarUrl":"https://avatars2.githubusercontent.com/u/22793275?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1491558206000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4048","number":4048,"title":"Semantics in Language.py","body":"Overview Description\nI was working on this issue #4037 about writing a test suite for Languages class of Language.py file and I noticed that the eq behavior is changed and calls limit_versions but this causes a problem because there are Languages (CSharp,Java etc) in definitions folder that dont have the attribute versions so if you go and compare for example Language['C#'] == Language[\"C#\"] this will fail because C# hasnt any versions so it will raise an error.\nSteps to Reproduce\nfrom coalib.bearlib.languages.Language import Language, LanguageMeta, Languages\nLanguage['C#'] == Language[\"C#\"]\nTraceback (most recent call last):\n  File \"<pyshell#4>\", line 1, in <module>\n    Language['C#'] == Language[\"C#\"]\n  File \"C:\\Users\\Gr33nPeArL\\Desktop\\Project-COALA\\Coala_Environment\\coala\\coalib\\bearlib\\languages\\Language.py\", line 381, in __eq__\n    return limit_versions(self, other, operator.eq)\n  File \"C:\\Users\\Gr33nPeArL\\Desktop\\Project-COALA\\Coala_Environment\\coala\\coalib\\bearlib\\languages\\Language.py\", line 436, in limit_versions\n    raise ValueError('No versions left')\nValueError: No versions left\n\nFor example if  you add versions = 2.7, 3.3, 3.4, 3.5, 3.6 in CSharp you won't get that error.\nSuggestions\nSo I believe that we shouldn't overload the == operator but  1) instead we should add a new method to limit versions or 2) keep it this way but add versions to other Languages or 3)change the behavior of limit_versions to work without versions as well.","comments":0,"createdAt":"2017-04-02T23:05:28Z","updatedAt":"2017-04-07T09:43:26Z","closedAt":null,"state":"open","user":{"login":"MariosPanag","avatarUrl":"https://avatars0.githubusercontent.com/u/15462523?v=4"},"owner":{"login":"MariosPanag","avatarUrl":"https://avatars0.githubusercontent.com/u/15462523?v=4"},"assignee":{"login":"MariosPanag","avatarUrl":"https://avatars0.githubusercontent.com/u/15462523?v=4"},"labels":[{"name":"area/languages","color":"d4c5f9"},{"name":"importance/critical","color":"e11d21"},{"name":"status/needs design","color":"5319e7"},{"name":"type/codestyle","color":"d4c5f9"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1491512372000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4050","number":4050,"title":"Git_Basics.rst: Reinforce that PRs should not be closed","body":"Many people ask to close their pull requests or close them without asking. Make it more clear in the documentation NOT to do this. (perhaps this should also go in the newcomer's guide) difficulty/newcomer\nOpened via gitter by @supergr35","comments":4,"createdAt":"2017-04-04T17:14:53Z","updatedAt":"2017-04-06T20:59:32Z","closedAt":"2017-04-06T20:59:32Z","state":"closed","user":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"owner":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"assignee":{"login":"Monal5031","avatarUrl":"https://avatars0.githubusercontent.com/u/21009189?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"},{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1491418066000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4051","number":4051,"title":"Newcomers_Guide.rst: fix markup in step 4","body":"Add a newline after ::to make the git checkout -b <branchname> render properly\ndifficulty/newcomer\nOpened via gitter by @RohanVB","comments":1,"createdAt":"2017-04-05T11:25:10Z","updatedAt":"2017-04-05T18:47:46Z","closedAt":"2017-04-05T18:47:46Z","state":"closed","user":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"owner":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"},{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1491485920000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4053","number":4053,"title":"PyUnusedCodeBear: Implement remove_unused_variables","body":"The remove_unused_variables is implicitly passed on:\nhttps://github.com/coala/coala-bears/blob/master/bears/python/PyUnusedCodeBear.py#L33\nshould be implemented as a setting","comments":2,"createdAt":"2017-04-06T13:36:15Z","updatedAt":"2017-04-06T13:38:40Z","closedAt":"2017-04-06T13:37:59Z","state":"closed","user":{"login":"SanketDG","avatarUrl":"https://avatars3.githubusercontent.com/u/8980971?v=4"},"owner":{"login":"SanketDG","avatarUrl":"https://avatars3.githubusercontent.com/u/8980971?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1491815153000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4054","number":4054,"title":"aspectslist","body":"For better tying together #3966 with #3996 , we could need a list-derived aspectslist class to be used as value type for the Bear.aspects dictionary, which uses issubaspect function in its .__contains__ method, enabling us to:\nclass aspectsCommitBear(Bear, aspects={\n        'detect': [CommitMessage],\n}):\n    ...\n>>> CommitMessage.ColonExistence in aspectsCommitBear.aspects['detect']\nTrue\n@coala/aspects-developers","comments":0,"createdAt":"2017-04-06T13:52:34Z","updatedAt":"2017-04-10T09:05:53Z","closedAt":"2017-04-10T09:05:53Z","state":"closed","user":{"login":"userzimmermann","avatarUrl":"https://avatars3.githubusercontent.com/u/2088633?v=4"},"owner":{"login":"userzimmermann","avatarUrl":"https://avatars3.githubusercontent.com/u/2088633?v=4"},"assignee":{"login":"adhikasp","avatarUrl":"https://avatars2.githubusercontent.com/u/6151302?v=4"},"labels":[{"name":"area/aspects","color":"000000"},{"name":"difficulty/medium","color":"0052cc"},{"name":"importance/high","color":"eb6420"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1492183594000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4055","number":4055,"title":"Check invalid combinations of --ci, --format, and --json","body":"While reviewing #4036 , I realized that any combinations of --ci, --format, and --json are allowed for coala without any error. That's confusing. There is just a precedence for applying one of those flags and just ignoring the others:\n--json\n--format\n--ci\n\ncoala --ci --format and coala --ci --json might be ok, but coala --format --json - which just ignores --format - definitely not.\n@MariosPanag Interested? :)\nCC @sils","comments":5,"createdAt":"2017-04-06T20:14:11Z","updatedAt":"2017-04-14T15:26:34Z","closedAt":null,"state":"open","user":{"login":"userzimmermann","avatarUrl":"https://avatars3.githubusercontent.com/u/2088633?v=4"},"owner":{"login":"userzimmermann","avatarUrl":"https://avatars3.githubusercontent.com/u/2088633?v=4"},"assignee":{"login":"Nosferatul","avatarUrl":"https://avatars2.githubusercontent.com/u/15227444?v=4"},"labels":[{"name":"area/CLI","color":"006b75"},{"name":"area/usability","color":"d4c5f9"},{"name":"difficulty/medium","color":"0052cc"},{"name":"importance/high","color":"eb6420"},{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1519302914000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4056","number":4056,"title":"Fix package.json closing bracket indentation","body":"difficulty/newcomer\nOpened via gitter by @jayvdb","comments":6,"createdAt":"2017-04-07T11:19:24Z","updatedAt":"2018-02-22T12:35:14Z","closedAt":"2018-02-22T12:35:14Z","state":"closed","user":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"owner":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"assignee":{"login":"Nickatak","avatarUrl":"https://avatars0.githubusercontent.com/u/9625968?v=4"},"milestone":{"title":"0.12","createdAt":"2017-04-08T16:02:24Z","dueOn":null,"state":"open","htmlUrl":"https://github.com/coala/coala/milestone/16","description":""},"labels":[{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1491822926000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4058","number":4058,"title":"aspect: Convert string to aspect","body":"In the future, aspect will be defined by user in coafile. But, currently there are no way to change a string (like from coafile) into an aspect object. Something like this:\n>>> str_to_aspect('CommitMessage')\n<aspectclass 'Root.Metadata.CommitMessage'>\nThere are some design need to be fixed though:\n\nDo we need the string to be an exact match to the aspect? ('CommitMessage' or 'Root.Metadata.CommitMessage')\n\nIf we choose the short style string to be enough, what happen if there are 2 or more aspect that have common name? (Root.Something.CommitMessage and Root.Metadata.CommitMessage).\n\n\nShould it be case sensitive?\n\n@coala/aspects-developers\narea/aspect status/needs design","comments":1,"createdAt":"2017-04-08T04:13:39Z","updatedAt":"2017-04-10T11:15:26Z","closedAt":"2017-04-10T11:15:26Z","state":"closed","user":{"login":"adhikasp","avatarUrl":"https://avatars2.githubusercontent.com/u/6151302?v=4"},"owner":{"login":"adhikasp","avatarUrl":"https://avatars2.githubusercontent.com/u/6151302?v=4"},"assignee":{"login":"userzimmermann","avatarUrl":"https://avatars3.githubusercontent.com/u/2088633?v=4"},"labels":[{"name":"area/aspects","color":"000000"},{"name":"status/needs design","color":"5319e7"},{"name":"status/needs info","color":"006b75"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1524355738000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4059","number":4059,"title":"Default action should be the last action taken by the user","body":"Currently the default action is 0: Do nothing. I think it'll be better to make default action as the last action taken by the user, if none taken, then it'll be default action anyway i.e. do nothing","comments":7,"createdAt":"2017-04-08T06:15:41Z","updatedAt":"2018-04-22T00:08:58Z","closedAt":"2018-04-22T00:07:08Z","state":"closed","user":{"login":"meetmangukiya","avatarUrl":"https://avatars0.githubusercontent.com/u/7620533?v=4"},"owner":{"login":"meetmangukiya","avatarUrl":"https://avatars0.githubusercontent.com/u/7620533?v=4"},"labels":[{"name":"area/actions","color":"207de5"},{"name":"status/needs design","color":"5319e7"},{"name":"status/needs info","color":"006b75"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1493318651000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4060","number":4060,"title":"green test runner","body":"Very likely due to #3808 and other issues, on c929a8b, this is the output of https://github.com/CleanCut/green\ngreen -vv\n3\nRan 0 tests in 0.160s\n\nNo Tests Found","comments":10,"createdAt":"2017-04-08T10:12:56Z","updatedAt":"2017-04-27T18:44:11Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"area/upstream","color":"5319e7"},{"name":"difficulty/medium","color":"0052cc"},{"name":"status/blocked","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1497790133000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4061","number":4061,"title":"Running pytest on multiple cores fails","body":"Multiple cores test support was supposedly added in #1407 .\nI say supposedly, as I do not see pytest argument -n x added to the CI tests, which is currently needed to activate pytest-xdist.  But maybe the defaults were different back then.\nThe tests are not currently being run on multiple cores, and when -n 3 is added, failures abound, with the output exceeding my x-term console buffer.\nFAIL coalib/bearlib/__init__.py::coalib.bearlib.deprecate_settings\nFAIL coalib/bearlib/__init__.py::coalib.bearlib.deprecate_bear\nFAIL tests/coalaJSONTest.py::coalaJSONTest::test_output_file\nFAIL tests/coalaFormatTest.py::coalaFormatTest::test_deprecation_log\nFAIL tests/coalaTest.py::coalaTest::test_did_nothing\nFAIL tests/settings/ConfigurationGatheringTest.py::ConfigurationGatheringTest::test_back_saving\nFAIL tests/processes/ProcessingTest.py::ProcessingTest::test_create_process_group\nFAIL tests/settings/ConfigurationGatheringTest.py::ConfigurationGatheringTest::test_default_coafile_parsing\nFAIL tests/processes/ProcessingTest.py::ProcessingTest::test_dead_processes\nFAIL tests/settings/ConfigurationGatheringTest.py::ConfigurationGatheringTest::test_default_section_deprecation_warning\nFAIL tests/processes/ProcessingTest.py::ProcessingTest::test_empty_run\nFAIL tests/settings/ConfigurationGatheringTest.py::ConfigurationGatheringTest::test_find_user_config\nFAIL tests/processes/ProcessingTest.py::ProcessingTest::test_filter_raising_callables\nFAIL tests/settings/ConfigurationGatheringTest.py::ConfigurationGatheringTest::test_gather_configuration\nFAIL tests/processes/ProcessingTest.py::ProcessingTest::test_get_file_dict\nFAIL tests/settings/ConfigurationGatheringTest.py::ConfigurationGatheringTest::test_merge\nFAIL tests/settings/ConfigurationGatheringTest.py::ConfigurationGatheringTest::test_merge_defaults\nFAIL tests/processes/ProcessingTest.py::ProcessingTest::test_get_file_dict_non_existent_file\nFAIL tests/settings/ConfigurationGatheringTest.py::ConfigurationGatheringTest::test_no_config\nFAIL tests/settings/ConfigurationGatheringTest.py::ConfigurationGatheringTest::test_section_inheritance\nFAIL tests/processes/ProcessingTest.py::ProcessingTest::test_ignore_glob\nFAIL tests/settings/ConfigurationGatheringTest.py::ConfigurationGatheringTest::test_targets\nFAIL tests/processes/ProcessingTest.py::ProcessingTest::test_ignore_results\nFAIL tests/misc/ContextManagersTest.py::ContextManagersTest::test_subprocess_timeout\nFAIL tests/settings/ConfigurationGatheringTest.py::ConfigurationGatheringTest::test_user_coafile_parsing\nFAIL tests/processes/ProcessingTest.py::ProcessingTest::test_loaded_bears_with_error_result\nFAIL tests/settings/SectionFillingTest.py::SectionFillingTest::test_fill_settings\nFAIL tests/processes/ProcessingTest.py::ProcessingTest::test_process_queues\nFAIL tests/settings/SectionTest.py::SectionTest::test_bear_dirs\nFAIL tests/processes/ProcessingTest.py::ProcessingTest::test_run\nFAIL tests/processes/ProcessingTest.py::ProcessingTest::test_simplify_section_result\nFAIL tests/processes/ProcessingTest.py::ProcessingTest::test_yield_ignore_ranges","comments":2,"createdAt":"2017-04-08T10:32:57Z","updatedAt":"2017-06-18T12:48:53Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"area/core","color":"eb6420"},{"name":"area/logging","color":"0052cc"},{"name":"area/tests","color":"bfd4f2"},{"name":"difficulty/medium","color":"0052cc"},{"name":"importance/medium","color":"fbca04"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1496160065000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4062","number":4062,"title":"Add waffle.io chart to readme","body":"It shows the PRs and Issues graph in the README, I have seen those in quite a few repos, would we like to add it to our readme as well ?","comments":1,"createdAt":"2017-04-08T10:39:19Z","updatedAt":"2017-05-30T16:01:05Z","closedAt":"2017-05-30T16:01:05Z","state":"closed","user":{"login":"meetmangukiya","avatarUrl":"https://avatars0.githubusercontent.com/u/7620533?v=4"},"owner":{"login":"meetmangukiya","avatarUrl":"https://avatars0.githubusercontent.com/u/7620533?v=4"},"assignee":{"login":"andreidinu","avatarUrl":"https://avatars1.githubusercontent.com/u/23266228?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1493079242000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4064","number":4064,"title":"Upgrade dependency_management","body":"We need all the bugs fixed in dependency_management , as they are blocking other work.\nRelease blocked on:\n\nhttps://gitlab.com/coala/package_manager/merge_requests/31 - Maven\nhttps://gitlab.com/coala/package_manager/merge_requests/34 - Julia\n\nAfter that, Appveyor should be easy to merge and then release.","comments":3,"createdAt":"2017-04-08T16:03:34Z","updatedAt":"2017-04-25T00:14:02Z","closedAt":"2017-04-25T00:14:02Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"milestone":{"title":"0.11","createdAt":"2017-01-16T17:55:22Z","dueOn":"2017-05-01T00:00:00Z","state":"open","htmlUrl":"https://github.com/coala/coala/milestone/14","description":"All big pulls that will need to be merged during the merge freeze from 29 Jan-12 Feb\r\n"},"labels":[{"name":"area/upstream","color":"5319e7"},{"name":"status/blocked","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1491749171000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4065","number":4065,"title":"Readme: Update twitter handle","body":"currently it is set to coala_analyzer change it to coala_io","comments":4,"createdAt":"2017-04-08T17:10:13Z","updatedAt":"2017-04-09T14:46:11Z","closedAt":"2017-04-09T14:46:11Z","state":"closed","user":{"login":"meetmangukiya","avatarUrl":"https://avatars0.githubusercontent.com/u/7620533?v=4"},"owner":{"login":"meetmangukiya","avatarUrl":"https://avatars0.githubusercontent.com/u/7620533?v=4"},"assignee":{"login":"sils","avatarUrl":"https://avatars0.githubusercontent.com/u/5716520?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"importance/medium","color":"fbca04"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1524374128000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4066","number":4066,"title":"Replace documentation default.coalang with sphinx.coalang and javadoc.coalang","body":"Sphinx is not a 'default' for python; pep257 and pep287(rst) are the only spec which could be called default, and they dictate different style elements than are defined in default.coalang , and pep287 is very clear that rst is not the only accepted format.\nThe default style for each language should be a mapping to correctly named coalang definition files.\nNote that docutils could be also considered a default, but it supports multiple parsers, only shipping rst, but other parsers exist out of the main tree (e.g. remarkdown).\nAnd :param: defined in default.coalang is sphinx, not rst or pep287.\ndifficulty/low\nOpened via gitter by @jayvdb","comments":4,"createdAt":"2017-04-08T18:16:57Z","updatedAt":"2018-04-22T05:15:28Z","closedAt":null,"state":"open","user":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"owner":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"assignee":{"login":"alphadose","avatarUrl":"https://avatars1.githubusercontent.com/u/25170258?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/low","color":"207de5"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1493977362000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4067","number":4067,"title":"Use pytest-spec for nicer output","body":"Thanks to @jayvdb and his #4060 , I searched a bit and found https://github.com/pchomik/pytest-spec . And I love it :)\nOur current py.test -vv looks like:\n...\ntests/bears/BearTest.py::BearTest::test_bad_bear PASSED\ntests/bears/BearTest.py::BearTest::test_check_prerequisites PASSED\ntests/bears/BearTest.py::BearTest::test_default_aspects PASSED\ntests/bears/BearTest.py::BearTest::test_dependencies PASSED\ntests/bears/BearTest.py::BearTest::test_detect_and_fix_aspects PASSED\ntests/bears/BearTest.py::BearTest::test_get_config_dir PASSED\ntests/bears/BearTest.py::BearTest::test_get_non_optional_settings PASSED\ntests/bears/BearTest.py::BearTest::test_inconvertible PASSED\ntests/bears/BearTest.py::BearTest::test_message_queue PASSED\ntests/bears/BearTest.py::BearTest::test_new_result PASSED\ntests/bears/BearTest.py::BearTest::test_no_detect_aspects PASSED\ntests/bears/BearTest.py::BearTest::test_no_fix_aspects PASSED\ntests/bears/BearTest.py::BearTest::test_no_queue PASSED\ntests/bears/BearTest.py::BearTest::test_print_filename_LocalBear PASSED\ntests/bears/BearTest.py::BearTest::test_print_no_filename_GlobalBear PASSED\ntests/bears/BearTest.py::BearTest::test_simple_api PASSED\n...\n\nWith py.test -vv --spec it looks like:\n...\ntests/bears/BearTest.py::BearTest\n    [PASS]  Bad bear\n    [PASS]  Check prerequisites\n    [PASS]  Default aspects\n    [PASS]  Dependencies\n    [PASS]  Detect and fix aspects\n    [PASS]  Get config dir\n    [PASS]  Get non optional settings\n    [PASS]  Inconvertible\n    [PASS]  Message queue\n    [PASS]  New result\n    [PASS]  No detect aspects\n    [PASS]  No fix aspects\n    [PASS]  No queue\n    [PASS]  Print filename LocalBear\n    [PASS]  Print no filename GlobalBear\n    [PASS]  Simple api\n...\n\nAnd the whole lines are colored :D\nOf course it's up to the individual developer to use it or not, and it's inconvenient for IDEs that parse pytest output, but IMO we should use it for CI.","comments":4,"createdAt":"2017-04-08T18:19:59Z","updatedAt":"2017-05-05T09:42:42Z","closedAt":null,"state":"open","user":{"login":"userzimmermann","avatarUrl":"https://avatars3.githubusercontent.com/u/2088633?v=4"},"owner":{"login":"userzimmermann","avatarUrl":"https://avatars3.githubusercontent.com/u/2088633?v=4"},"labels":[{"name":"area/CI","color":"eb6420"},{"name":"area/CLI","color":"006b75"},{"name":"area/tests","color":"bfd4f2"},{"name":"area/usability","color":"d4c5f9"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1493172627000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4068","number":4068,"title":"Create docstyle definition for Go","body":"All comments are considered documentation\nhttps://blog.golang.org/godoc-documenting-go-code\nA [Go] section is needed in default.coalang\nOr if #4066 is completed, this needs a go.coalang style added to that directory.\nI consider this to be quite important, as it will push the limit of the design of docstyle definitions.\ncc: @yukiisbored @adtac","comments":1,"createdAt":"2017-04-08T19:08:31Z","updatedAt":"2017-04-26T02:10:27Z","closedAt":"2017-04-26T02:10:27Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"adtac","avatarUrl":"https://avatars2.githubusercontent.com/u/7521600?v=4"},"milestone":{"title":"0.11","createdAt":"2017-01-16T17:55:22Z","dueOn":"2017-05-01T00:00:00Z","state":"open","htmlUrl":"https://github.com/coala/coala/milestone/14","description":"All big pulls that will need to be merged during the merge freeze from 29 Jan-12 Feb\r\n"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"area/languages","color":"d4c5f9"},{"name":"difficulty/medium","color":"0052cc"},{"name":"importance/medium","color":"fbca04"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1491679180000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4069","number":4069,"title":"Create docstyle definition for paragraphs","body":"Python PEP257 requires that the first paragraph is a one line comment sentence, and paragraphs are separated by a blank line which works for styles rst/sphinx/epytext/markdown/etc.\nJavadoc requires that the first paragraph is a one line command sentence, and paragraphs are separated by <p>.\nGodoc requires that the first paragraph is a sentence, and paragraphs are separated by a blank line.\n\nTo account for those differences, we need a paragraph marker, and a setting for the number of lines allowed in the first paragraph.\nAll docstyles require that the first effective line should start with a capital letter (they are a \"Command\", c.f. PyCQA/pydocstyle#167 (comment)), and that line must end with a period (.); anything else is invalid and is not a 'correct' sentence. :/\nsee https://www.python.org/dev/peps/pep-0257/#one-line-docstrings .\nHowever, there are other language docstyles (and a large enough set of Python writers) that allow the first sentence to be a multiple line paragraph, that our default should also allow multiple line paragraph that ends with a . .\nLinguistic analysis is needed to confirm that the first word is a Command, but a lower case alpha at the beginning of the first word should always be upper cased.  fwiw, at PyCQA/pydocstyle#167, I have done a lot of analysis of this problem using on a large sample Python packages.  That is why I caution against analysis and fixing of any non-whitespace characters except the first and last character.  Even extending it to cover the first word introduces many false positives.","comments":0,"createdAt":"2017-04-08T19:19:24Z","updatedAt":"2017-04-08T19:19:40Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1514846223000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4071","number":4071,"title":"test_caching_multi_results/test.py includes print at global level","body":"Very similar to coala/coala-bears#1594\nThe sample package in coala/tests/misc/test_caching_multi_results/test.py uses print(...).\nAs shown by #4060 (comment), this causes problems with the default test collection of test*.py.\nThis could be solved by removing the print(..), or by renaming the file so it doesnt match test*.py.","comments":7,"createdAt":"2017-04-09T04:00:40Z","updatedAt":"2018-01-01T22:37:03Z","closedAt":"2018-01-01T22:37:03Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"vddesai1998","avatarUrl":"https://avatars3.githubusercontent.com/u/24962153?v=4"},"labels":[{"name":"area/tests","color":"bfd4f2"},{"name":"difficulty/low","color":"207de5"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1492486301000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4072","number":4072,"title":"Automatic http support for `foo_config` settings ","body":"There are a lot of bears which have a x_config setting, such as cmakelint_config, eslint_config, jshint_config, rubocop_config, scalalint_config, tailor_config, tslint_config.\ncheckstyle_configs is the only similar one which has other strange rules to it.\nThat should become a reserved suffix, and coala core should provide automatic checking that the file exists, and allow http with local caching.  Note a basic local caching algorithm can be simply to pin everything in the cache until the cache is cleared with the existing command line options, and then the server and .coafile can always override this by adding version numbers to the filenames of the config files.\nWe could go one step further in coala core, and have a global setting for base location where those config files can be found, which could be a local directory, git repo, or http prefix, and they are auto fetched & used if present.  At least for git, this would reduce the number of pings needed to check that the local cache is up to date.","comments":2,"createdAt":"2017-04-09T06:25:43Z","updatedAt":"2017-04-18T03:31:41Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1494492162000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4075","number":4075,"title":"Add aspects for dependencies","body":"Dependencies are similar to Imports in many ways, and in some languages they are identical.\nBut Dependencies are usually defined outside of the source code.  e.g. in Python, usually we have them in setup.py and/or requirements.txt, and there are quite a few bears that detect problems in these already.\nOpened via gitter by @jayvdb","comments":0,"createdAt":"2017-04-09T09:28:16Z","updatedAt":"2017-05-11T08:42:42Z","closedAt":null,"state":"open","user":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"owner":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1491750380000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4077","number":4077,"title":"Improve add_lines of Diff","body":"add_lines raises ConflictError when adding lines after a line where line_diff.add_after is not False even if the lines to be added are same.\nIMO ConflictError should be raised only when lines are different.\nThis issue needs discussion.","comments":1,"createdAt":"2017-04-09T11:32:38Z","updatedAt":"2017-04-09T15:06:20Z","closedAt":null,"state":"open","user":{"login":"arjunsinghy96","avatarUrl":"https://avatars2.githubusercontent.com/u/18226212?v=4"},"owner":{"login":"arjunsinghy96","avatarUrl":"https://avatars2.githubusercontent.com/u/18226212?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1491776604000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4079","number":4079,"title":"Simplify README","body":"usability testing has discovered the readme is just confusing and the website is just awesome. Also I propose a new header image:","comments":1,"createdAt":"2017-04-09T13:45:52Z","updatedAt":"2017-04-09T22:23:24Z","closedAt":"2017-04-09T22:23:24Z","state":"closed","user":{"login":"sils","avatarUrl":"https://avatars0.githubusercontent.com/u/5716520?v=4"},"owner":{"login":"sils","avatarUrl":"https://avatars0.githubusercontent.com/u/5716520?v=4"},"assignee":{"login":"sils","avatarUrl":"https://avatars0.githubusercontent.com/u/5716520?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1524507790000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4080","number":4080,"title":"Shorter Review Iterations","body":"Hey people. I feel like we're spending a lot of time on review and not too much time on getting actual stuff done. (Also due to lots of newcomer issues.) Working on improving that is an ongoing process.\nI do think though that we are a bit strict in the reviews in some places, e.g. commit messages, which shifts the focus from good code to good metadata and much frustration.\n@coala/coala-developers @coala/coala-maintainers what do you think about this? Can we afford to be less strict in some areas and keep up our quality?","comments":17,"createdAt":"2017-04-09T14:35:13Z","updatedAt":"2018-04-23T18:23:10Z","closedAt":"2018-04-23T18:23:09Z","state":"closed","user":{"login":"sils","avatarUrl":"https://avatars0.githubusercontent.com/u/5716520?v=4"},"owner":{"login":"sils","avatarUrl":"https://avatars0.githubusercontent.com/u/5716520?v=4"},"labels":[{"name":"status/needs design","color":"5319e7"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1491776604000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4082","number":4082,"title":"README: Scale down award image","body":"I'm on it already\nOpened via gitter by @sils","comments":1,"createdAt":"2017-04-09T15:21:55Z","updatedAt":"2017-04-09T22:23:24Z","closedAt":"2017-04-09T22:23:24Z","state":"closed","user":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"owner":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"assignee":{"login":"sils","avatarUrl":"https://avatars0.githubusercontent.com/u/5716520?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1494530493000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4084","number":4084,"title":"Support neovim (`nvim`) as an editor","body":"[WARNING][14:15:54] The editor \"nvim\" is unknown to coala. Files won't be opened at the correct positions and other quirks might occur. Consider opening an issue at https://github.com/coala/coala/issues so we can add support for this editor. Supported editors are: atom, emacs, emacsclient, geany, gedit, gvim, kate, nano, subl, vim, xed\n\nIt's basically the same as vim so it could be just added to the allowed editors list and given the same behavior as vim.","comments":2,"createdAt":"2017-04-10T12:16:56Z","updatedAt":"2017-05-11T19:21:33Z","closedAt":"2017-05-11T19:21:33Z","state":"closed","user":{"login":"underyx","avatarUrl":"https://avatars0.githubusercontent.com/u/1060436?v=4"},"owner":{"login":"underyx","avatarUrl":"https://avatars0.githubusercontent.com/u/1060436?v=4"},"assignee":{"login":"mubaris","avatarUrl":"https://avatars0.githubusercontent.com/u/13871723?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1496108743000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4085","number":4085,"title":"ContextualVersionConflict causes failure even for bear that is not needed","body":"If there is a ContextualVersionConflict when loading a bears, the bear should be marked broken, and this should be a fatal error only if the bear is required to run.\nOther exceptions or problems loading the bears should also not result in catastrophe errors immediately.  The decision on whether to stop should be dependent on if the broken bear is actually needed or not.\nIdeally the fatal error message will indicate exactly which needed bears are broken; i.e. in a single message, which provides the minimum necessary to get coala-ci working.","comments":3,"createdAt":"2017-04-10T13:14:05Z","updatedAt":"2017-05-30T01:45:43Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"difficulty/medium","color":"0052cc"},{"name":"importance/medium","color":"fbca04"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1491909357000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4086","number":4086,"title":"Update readme","body":"We worked out a new readme at https://hackmd.io/GbCsGMGYDYE4A4C0AmcAjAjIgLAdgCayJoAMukxApvrrBvgIbKrZA===?both# which still needs to be converted to RST and then replaces the current one\nOpened via gitter by @sils","comments":1,"createdAt":"2017-04-10T14:26:35Z","updatedAt":"2017-04-11T11:15:57Z","closedAt":"2017-04-11T11:15:57Z","state":"closed","user":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"owner":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"assignee":{"login":"arjunsinghy96","avatarUrl":"https://avatars2.githubusercontent.com/u/18226212?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1491834968000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4087","number":4087,"title":"Review guide should explain where to place comments","body":"Currently the review guide only says\n\nAs you perform your review of each commit, please make comments on the relevant lines of code in the GitHub pull request.\n\nComments placed on 'good' lines will remain visible on the PR page throughout the PR, making page load times longer and more confusing.  This should be discouraged.\nThe review comments should appear on the line that needs to be modified, as modified lines, and those review comments, will be hidden from the PR page.\nComments about the commit message should be placed in the final \"Review summary\" textbox when submitting the review.\ndifficulty/low\nOpened via gitter by @jayvdb","comments":0,"createdAt":"2017-04-10T14:36:08Z","updatedAt":"2017-04-10T14:36:08Z","closedAt":null,"state":"open","user":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"owner":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1534589257000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4090","number":4090,"title":"Replace pytest-timeout with pytest-faulthandler","body":"https://pypi.python.org/pypi/pytest-faulthandler activates on a timeout, but dumps out much more useful info.\nNot sure we want this, as mostly our timeouts are network timeouts, and the cause is fairly self-evident.\nSee docker timeout issues.\nKeeping this issue open as a place to record any new timeouts we encounter, to see if there is occasions we need more info than pytest-timeout provides.","comments":1,"createdAt":"2017-04-11T03:11:53Z","updatedAt":"2018-08-18T10:47:37Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"status/needs info","color":"006b75"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1491942221000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4091","number":4091,"title":"Award logo in readme looks blurred. ","body":"","comments":1,"createdAt":"2017-04-11T10:10:06Z","updatedAt":"2017-04-11T20:23:41Z","closedAt":"2017-04-11T20:23:41Z","state":"closed","user":{"login":"ashwini0529","avatarUrl":"https://avatars3.githubusercontent.com/u/8419333?v=4"},"owner":{"login":"ashwini0529","avatarUrl":"https://avatars3.githubusercontent.com/u/8419333?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1500871758000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4094","number":4094,"title":"Connect aspectlist with holder bear to match supported languages","body":"To be able to also check in coalib.bearlib.aspects.collections.aspectlist.__contains__ if languages of aspectclass instances match with languages supported by the bear holding the aspectlist\n@coala/aspects-developers","comments":3,"createdAt":"2017-04-12T09:20:24Z","updatedAt":"2017-07-24T04:49:18Z","closedAt":"2017-07-24T04:49:18Z","state":"closed","user":{"login":"userzimmermann","avatarUrl":"https://avatars3.githubusercontent.com/u/2088633?v=4"},"owner":{"login":"userzimmermann","avatarUrl":"https://avatars3.githubusercontent.com/u/2088633?v=4"},"assignee":{"login":"adhikasp","avatarUrl":"https://avatars2.githubusercontent.com/u/6151302?v=4"},"milestone":{"title":"#aspectsYEAH","createdAt":"2017-05-09T22:10:19Z","dueOn":null,"state":"open","htmlUrl":"https://github.com/coala/coala/milestone/17","description":"The mother of all futures of coala!\r\n\r\nhttps://github.com/orgs/coala/projects/3\r\n\r\nhttps://github.com/orgs/coala/projects/2\r\n"},"labels":[{"name":"area/aspects","color":"000000"},{"name":"area/bears","color":"eb6420"},{"name":"difficulty/medium","color":"0052cc"},{"name":"importance/high","color":"eb6420"},{"name":"status/needs design","color":"5319e7"},{"name":"type/codestyle","color":"d4c5f9"},{"name":"type/feature","color":"0052cc"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1508283878000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4095","number":4095,"title":"Git_Basics.rst: Rename \"coala/coala-bears\"","body":"coala/coala-bears could be mistakenly thought to refer to https://github.com/coala/coala-bears.\nChange references to the official coala or coala-bears repositories from coala/coala-bears to coala or coala bears.\ndifficulty/newcomer\nOpened via gitter by @PierceAndy","comments":3,"createdAt":"2017-04-12T13:39:26Z","updatedAt":"2017-10-17T23:44:38Z","closedAt":"2017-10-17T23:44:38Z","state":"closed","user":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"owner":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"assignee":{"login":"acashmkj","avatarUrl":"https://avatars1.githubusercontent.com/u/31628272?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1510574375000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4097","number":4097,"title":"Add .editorconfig file","body":"Our style follows the example given on http://editorconfig.org/ for Python and YAML\ndifficulty/newcomer","comments":7,"createdAt":"2017-04-13T05:44:12Z","updatedAt":"2017-11-13T11:59:35Z","closedAt":"2017-11-09T23:47:39Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"newbazz","avatarUrl":"https://avatars1.githubusercontent.com/u/25884863?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1509977586000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4098","number":4098,"title":".editorconfig generator","body":"Following on from #4097 , and closely related to coala/coala-quickstart#79, and part of #204 , coala should be able to generate a .editorconfig.\nThis will go a long way to closely integrating with editors which support .editorconfig, as the editor plugins could generate the .editorconfig from the .coafile, or generate .coafile from .editorconfig using coala-quickstart, if present, and raise a warning whenever they are out of sync.","comments":4,"createdAt":"2017-04-13T07:02:07Z","updatedAt":"2017-11-06T14:13:06Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"difficulty/medium","color":"0052cc"},{"name":"importance/medium","color":"fbca04"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1492470208000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4099","number":4099,"title":"Checking, asserting, and raising aspect","body":"As @userzimmermann says in #4057 (comment)\n\nInstead of checking isinstance(obj, (aspectclass, aspectbase)) at several places, why not creating an isaspect function instead? And instead of explicitly raising the same TypeError with the same message again and again, why not creating a derived aspectTypeError, which only takes the wrong-typed object for instantiation. And finally, what about an assert_aspect function, which ties all of that together? :)\n\nIdeally also update existing code with this new functions.\ncc @Techievena ?\nPS sorry @userzimmermann for stealing your issue.\n@coala/aspects-developers\narea/aspect difficulty/low","comments":2,"createdAt":"2017-04-13T08:00:22Z","updatedAt":"2017-04-17T23:03:28Z","closedAt":"2017-04-17T23:03:28Z","state":"closed","user":{"login":"adhikasp","avatarUrl":"https://avatars2.githubusercontent.com/u/6151302?v=4"},"owner":{"login":"adhikasp","avatarUrl":"https://avatars2.githubusercontent.com/u/6151302?v=4"},"assignee":{"login":"Techievena","avatarUrl":"https://avatars2.githubusercontent.com/u/17270966?v=4"},"labels":[{"name":"area/aspects","color":"000000"},{"name":"difficulty/low","color":"207de5"},{"name":"type/feature","color":"0052cc"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1492093320000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4100","number":4100,"title":"Coala exit with code 1 even when ignoring error","body":"Hello,\nwe plan to use Coala for our Python projects with the Pylint bear.\nBut even when ignoring Pylint error with comment, the Coala exit code is still 1 so our build is failed in CircleCI.\n\nIs there any workaround ?\nThanks and regards","comments":2,"createdAt":"2017-04-13T12:05:25Z","updatedAt":"2017-04-13T14:22:00Z","closedAt":"2017-04-13T14:22:00Z","state":"closed","user":{"login":"MartyHub","avatarUrl":"https://avatars2.githubusercontent.com/u/1159991?v=4"},"owner":{"login":"MartyHub","avatarUrl":"https://avatars2.githubusercontent.com/u/1159991?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1508276794000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4101","number":4101,"title":"Document arg_parser in ConfigurationGathering.py, load_configuration function","body":"","comments":9,"createdAt":"2017-04-13T12:37:23Z","updatedAt":"2017-10-17T21:46:34Z","closedAt":"2017-10-17T21:46:34Z","state":"closed","user":{"login":"Nosferatul","avatarUrl":"https://avatars2.githubusercontent.com/u/15227444?v=4"},"owner":{"login":"Nosferatul","avatarUrl":"https://avatars2.githubusercontent.com/u/15227444?v=4"},"assignee":{"login":"JohnS-01","avatarUrl":"https://avatars0.githubusercontent.com/u/27247853?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1518518881000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4102","number":4102,"title":"Allow to set minimum-severity per section","body":"Not sure coala currently supports to set a minimum-severity for each section.\nWorkaround: Invoke coala multiple times with different coafiles and different -m flags.","comments":9,"createdAt":"2017-04-13T14:44:03Z","updatedAt":"2018-02-13T10:48:01Z","closedAt":"2018-02-13T10:44:13Z","state":"closed","user":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"owner":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"assignee":{"login":"anctartica","avatarUrl":"https://avatars0.githubusercontent.com/u/7020962?v=4"},"labels":[{"name":"status/invalid","color":"000000"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1492195753000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4105","number":4105,"title":"ContextManagers.py: Use arguments other than \"0,1,2\" in the inline documentation of simulate_console_inputs method","body":"Related snippet\nwith simulate_console_inputs(0, 1, 2) as generator:\n            assert(input() == 0)\n            assert(generator.last_input == 0)\n            generator.inputs.append(3)\n            assert(input() == 1)\n            assert(input() == 2)\n            assert(input() == 3)\n            assert(generator.last_input == 3)\n\nArgument should be changed to prevent confusion of mistaking generator.last_input as actual input value instead of the index value.\ndifficulty/newcomer","comments":9,"createdAt":"2017-04-13T16:59:12Z","updatedAt":"2017-04-14T18:49:13Z","closedAt":"2017-04-14T16:49:57Z","state":"closed","user":{"login":"satwikkansal","avatarUrl":"https://avatars1.githubusercontent.com/u/10217535?v=4"},"owner":{"login":"satwikkansal","avatarUrl":"https://avatars1.githubusercontent.com/u/10217535?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"},{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1524375598000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4107","number":4107,"title":"Linter.py: Make it possible to override `executable` for all linter bears","body":"Say, we have a linter bear called FooLinterBear:\n@linter(executable='foo', output=[...])\nclass FooLinterBear:\n   [...]\nIf a user is in an environment, where they can't make the wrapped tool available as foo in the $PATH or want to use a different version than is regularly installed, they currently have no way to use the bear, since the executable is hard-coded. I discovered this, when I wanted to use PyflakesBear for a Python 2 project: Pyflakes has the same output in both versions, so the linter would work fine, if I could override the executable with the Python 2 version.\nI'm imagining something like this:\n[python]\nbears=Pyflakesbear\noverride_executable=/path/to/python2/pyflakes\nObviously, this would have to be used with great care and should probably always emit a warning, since it's easy to destroy the functionality of the bear.\nI'm not sure if that's something we want to add, so please add your opinions :)","comments":8,"createdAt":"2017-04-15T07:33:28Z","updatedAt":"2018-04-22T05:39:58Z","closedAt":null,"state":"open","user":{"login":"NiklasMM","avatarUrl":"https://avatars1.githubusercontent.com/u/1924002?v=4"},"owner":{"login":"NiklasMM","avatarUrl":"https://avatars1.githubusercontent.com/u/1924002?v=4"},"assignee":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4"},"labels":[{"name":"area/bears","color":"eb6420"},{"name":"difficulty/medium","color":"0052cc"},{"name":"status/needs design","color":"5319e7"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1530697178000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4110","number":4110,"title":"Unhandled exception PermissionDenied reading .coarc","body":"If the user does not have permission to read .coarc, an ugly unhandled exception occurs.\n[ERROR][09:49:41] An unknown error occurred. This is a bug. We are sorry for the inconvenience. Please contact the developers for assistance. During execution of coala an exception was raised. This should never happen. When asked for, the following information may help investigating:\n\n[INFO][09:49:41] Exception was:\nTraceback (most recent call last):\n  File \"/coala/coalib/coala_main.py\", line 81, in run_coala\n    arg_list=arg_list)\n  File \"/coala/coalib/settings/ConfigurationGathering.py\", line 384, in gather_configuration\n    sections, targets = load_configuration(arg_list, log_printer, arg_parser)\n  File \"/coala/coalib/settings/ConfigurationGathering.py\", line 171, in load_configuration\n    silent=True)\n  File \"/coala/coalib/settings/ConfigurationGathering.py\", line 58, in load_config_file\n    return ConfParser().parse(filename)\n  File \"/coala/coalib/parsing/ConfParser.py\", line 51, in parse\n    with open(input_data, 'r', encoding='utf-8') as _file:\nPermissionError: [Errno 13] Permission denied: '/root/.coarc'\n\nThe exception should be caught (in ConfigurationGathering) and an ordinary error message logged in the system.","comments":9,"createdAt":"2017-04-16T10:08:14Z","updatedAt":"2018-07-04T09:39:38Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"shreyateeza","avatarUrl":"https://avatars0.githubusercontent.com/u/30488330?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"},{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1494424185000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4114","number":4114,"title":"CLI: Refactor using context-object approach","body":"From this discussion on gitter:\nCurrently everything is quite cluttered, and we have many many unintuitive cross-references to functions or objects. Together with passing around log-printers this makes the current CLI a mess from code-perspective, that's why I think that we should implement a \"context-object\"-based approach.\ni.e.\ninstead of passing thousands of parameters around to each function that might need something (because one of the subfunctions needs something), we use a coalaRunContext. When coala gets started, we instantiate a new coalaRunContext, where we feed in stuff like passed arguments to coala, maybe sections, etc (what is taken over by the context and what not needs consideration). The context (or maybe we should call it a session object) is started by my_context.run()/my_session.run() and all methods of the CLI are going to be methods. That way there's access to all relevant information inside the context by using self.\nActually it is from designer perspective not the perfect approach in fact, I'm generally not a fan of context objects (as in our case it's in fact a singleton, singletons shouldn't be objects, and in python you can avoid them because functions are objects. That's why we ended up with our current design ;D).\nBut in this case it will help I believe. We do cross-reference so many data, so it would also speed up things and maintain readability.\nCC @satwikkansal","comments":3,"createdAt":"2017-04-16T16:35:41Z","updatedAt":"2017-05-10T13:49:45Z","closedAt":null,"state":"open","user":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"owner":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"labels":[{"name":"area/CLI","color":"006b75"},{"name":"difficulty/very-high","color":"e11d21"},{"name":"status/needs design","color":"5319e7"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1500598338000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4115","number":4115,"title":"CI: Allow testing all bears","body":"Some changes are quite complex and need to be tested against all bears.\nIdeally we have a CI mode that allows this.  As the bears quite a lot of setup, and the main coala repo CI needs to be fast, I suggest we do this by allowing an environment variable to be set, that invokes the bear tests in a docker.\nI have a prototype at be72730.","comments":3,"createdAt":"2017-04-18T03:29:21Z","updatedAt":"2017-07-21T00:52:18Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1493786697000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4116","number":4116,"title":"unset setting","body":"@NiklasMM confirmed at coala/coala-bears#1581 (comment) that the only way to unset a setting with a default is to put \\0 (NUL) into the file.\nThat is not user-friendly.\nIf there is some voodoo to do this, it needs to be clearly documented.\nOr, we need some new voodoo added.","comments":4,"createdAt":"2017-04-18T05:17:07Z","updatedAt":"2017-05-03T04:44:57Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"meetmangukiya","avatarUrl":"https://avatars0.githubusercontent.com/u/7620533?v=4"},"labels":[{"name":"area/core","color":"eb6420"},{"name":"area/usability","color":"d4c5f9"},{"name":"difficulty/medium","color":"0052cc"},{"name":"importance/medium","color":"fbca04"},{"name":"status/needs design","color":"5319e7"},{"name":"type/feature","color":"0052cc"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1496296191000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4117","number":4117,"title":"Getting more done in GitHub with ZenHub","body":"Hola! @Techievena has created a ZenHub account for the coala organization. ZenHub is the only project management tool integrated natively in GitHub – created specifically for fast-moving, software-driven teams.\n\nHow do I use ZenHub?\nTo get set up with ZenHub, all you have to do is download the browser extension and log in with your GitHub account. Once you do, you’ll get access to ZenHub’s complete feature-set immediately.\nWhat can ZenHub do?\nZenHub adds a series of enhancements directly inside the GitHub UI:\n\nReal-time, customizable task boards for GitHub issues;\nMulti-Repository burndown charts, estimates, and velocity tracking based on GitHub Milestones;\nPersonal to-do lists and task prioritization;\nTime-saving shortcuts – like a quick repo switcher, a “Move issue” button, and much more.\n\nAdd ZenHub to GitHub\nStill curious? See more ZenHub features or read user reviews. This issue was written by your friendly ZenHub bot, posted by request from @Techievena.","comments":9,"createdAt":"2017-04-18T08:03:03Z","updatedAt":"2017-06-01T05:49:51Z","closedAt":null,"state":"open","user":{"login":"Techievena","avatarUrl":"https://avatars2.githubusercontent.com/u/17270966?v=4"},"owner":{"login":"Techievena","avatarUrl":"https://avatars2.githubusercontent.com/u/17270966?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1500660020000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4118","number":4118,"title":"Analyse code through url's git","body":"Hello,\nI want to analyse a project that does not exist on my desktop but it exists on cloud (bitbucket).\nActual Results\n--files=https://name@bitbucket.org/name/project.git**/*.php\nThe requested section 'https://name@bitbucket.org/name/project.git**/*.php' is not existent. Thus it cannot be executed.\nExpected Results\n--files=https://name@bitbucket.org/name/project.git**/*.php\nthe analyse was made succefuly\nReproducibility\nAdd the possibility to analyse project existing on git\nThanks","comments":10,"createdAt":"2017-04-18T08:58:26Z","updatedAt":"2017-07-21T18:00:20Z","closedAt":"2017-04-20T03:10:14Z","state":"closed","user":{"login":"jihenee","avatarUrl":"https://avatars1.githubusercontent.com/u/25524170?v=4"},"owner":{"login":"jihenee","avatarUrl":"https://avatars1.githubusercontent.com/u/25524170?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1519251745000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4119","number":4119,"title":"Linter_Bears_Advanced.rst: Mention how returning `None` inside `generate_config` works","body":"Depending on user settings, sometimes you want to avoid creating a config-file, sometimes not. This can yield huge performance improvements.\nThis \"feature\" shall be described in the guide with an example.\nOriginated from coala/coala-bears#1615","comments":10,"createdAt":"2017-04-18T15:16:46Z","updatedAt":"2018-02-21T22:22:25Z","closedAt":"2018-02-21T22:22:25Z","state":"closed","user":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"owner":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"assignee":{"login":"Vedarth","avatarUrl":"https://avatars2.githubusercontent.com/u/22793275?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/low","color":"207de5"},{"name":"importance/high","color":"eb6420"},{"name":"type/performance","color":"fef2c0"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1524320191000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4120","number":4120,"title":"Linter tutorials brush-up","body":"The current guides (Writing_Linter_Bears.rst and Linter_Bears_Advanced.rst) are a bit out-of-date. New features need to be added, any we should maybe provide a few more examples.\nThings that are currently in my mind:\n\nBetter global-bear documentation\nNew features not mentioned inside the guide (new unified-diff output format, global-bear, process_diff function)\n\nThis issue requires knowledge about @linter and many of its functionalities. So take this as a chance to learn more about @linter if you haven't yet ;)\nFor questions regarding specific @linter topics, ping me 👍","comments":11,"createdAt":"2017-04-18T21:38:48Z","updatedAt":"2018-04-21T14:16:31Z","closedAt":"2018-04-21T14:16:31Z","state":"closed","user":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"owner":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"assignee":{"login":"manankalra","avatarUrl":"https://avatars3.githubusercontent.com/u/12759088?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/low","color":"207de5"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1492773855000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4121","number":4121,"title":"cib failing on every command","body":"Overview Description\nI'm trying to use cib to automatically configure some bears, but it fails with the same traceback for all the commands I try,\nSteps to Reproduce\n\npip install cib\ncib -help\n\nActual Results\n\nExpected Results\nSeeing help of the command.\nReproducibility\nFails on all switches and commands of CIB\nAdditional Information:\nRunning on Windows10 with Python 3.5.2","comments":1,"createdAt":"2017-04-19T03:36:53Z","updatedAt":"2017-04-21T11:24:15Z","closedAt":null,"state":"open","user":{"login":"tupaschoal","avatarUrl":"https://avatars1.githubusercontent.com/u/6443427?v=4"},"owner":{"login":"tupaschoal","avatarUrl":"https://avatars1.githubusercontent.com/u/6443427?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1498592655000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4122","number":4122,"title":"Write a review training guide","body":"As we are permanently reviewing PRs, it might be worthy to write a guide to train someone a bit for reviewing. I imagine the guide to consist of challenges, starting with low difficulty and ending with insane review examples.\nFor example the guide could start with typos.\ndef hello_world(self):\n    print('hello wrld!')\nthen go over to codestyle issues, like\ndef x():\n    d = {'this',\n 'is', 'a',     'set'}\nto simple logic problems\ndef looper():\n    i = 0\n    while i < 10:  # <-- ALWAYS MISTRUST LOOPS USING INDEXES!!!\n        print(i)\nand so on and so on.\nThe finale would be to train someone to think in complete \"designs\". I.e. how would I do it? Why did the PR-writer do something different?\nSo the guide would challenge the reader to find everything he can see that does misfit, and in the end he can compare what we think the example should have made better.\nAs there may be sometimes disagreements, we could also write explicitly things we don't think they should be changed, because of XYZ.","comments":6,"createdAt":"2017-04-19T23:32:17Z","updatedAt":"2017-06-27T19:44:15Z","closedAt":null,"state":"open","user":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"owner":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"assignee":{"login":"prachi1210","avatarUrl":"https://avatars3.githubusercontent.com/u/14016564?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/medium","color":"0052cc"},{"name":"status/needs design","color":"5319e7"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1492650436000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4123","number":4123,"title":"Create a middleware application for having customized feed in Gitter","body":"Currently it is not possible to have a customized Github activity feed based on the labels in issues or PRs. This filtering can be very useful for having customized Github integration in chatrooms, especially when we have different chatrooms for teams working on a specific aspect of coala.","comments":0,"createdAt":"2017-04-20T01:07:12Z","updatedAt":"2017-04-20T01:07:16Z","closedAt":null,"state":"open","user":{"login":"Techievena","avatarUrl":"https://avatars2.githubusercontent.com/u/17270966?v=4"},"owner":{"login":"Techievena","avatarUrl":"https://avatars2.githubusercontent.com/u/17270966?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1492856898000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4126","number":4126,"title":"Appveyor curl failing","body":"curl throws the following error in appveyor ci:\ncurl: (7) Failed to connect to releases.llvm.org port 80: Timed out\nLink to log: https://ci.appveyor.com/project/coala/coala/build/1.0.7427/job/dteq9w39v434i723\nimportance/high type/bug","comments":2,"createdAt":"2017-04-20T18:38:40Z","updatedAt":"2017-04-22T10:28:18Z","closedAt":"2017-04-22T10:28:18Z","state":"closed","user":{"login":"supergr35","avatarUrl":"https://avatars2.githubusercontent.com/u/23623348?v=4"},"owner":{"login":"supergr35","avatarUrl":"https://avatars2.githubusercontent.com/u/23623348?v=4"},"labels":[{"name":"importance/high","color":"eb6420"},{"name":"status/opaque-fix","color":"006b75"},{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1521487341000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4127","number":4127,"title":"Use `[all]` instead of `[default]` in all coafiles","body":"","comments":6,"createdAt":"2017-04-21T12:16:45Z","updatedAt":"2018-03-19T19:22:21Z","closedAt":null,"state":"open","user":{"login":"adtac","avatarUrl":"https://avatars2.githubusercontent.com/u/7521600?v=4"},"owner":{"login":"adtac","avatarUrl":"https://avatars2.githubusercontent.com/u/7521600?v=4"},"assignee":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1492780324000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4129","number":4129,"title":"Add nginxBear","body":"nginx can check if the configuration file syntax is correct by running nginx -t -c <configuration file>\nOpened via gitter by @yukiisbored","comments":1,"createdAt":"2017-04-21T13:05:01Z","updatedAt":"2017-04-21T13:12:04Z","closedAt":"2017-04-21T13:12:04Z","state":"closed","user":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"owner":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1512385289000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4131","number":4131,"title":"Usability: Ignore or delete .orig-Files","body":"Overview Description\nThink of a Coala-Beginner. He or she will try:\ncoala --bears SpaceConsistencyBear --files ./*\nThis works out nicely and patches all the Space-Inconsistencies (if the user wants to). The Beginner then wants to do this again and create a .coafile, so he or she types:\ncoala --bears SpaceConsistencyBear --files ./* --save\nSteps to Reproduce\n\nprintf \"<?php\\nif(true){\\n\\t//Do something\\n //Do some other things\\n}\\n\" > test.php\ncoala --bears SpaceConsistencyBear --files ./*\ncoala --bears SpaceConsistencyBear --files ./* --save\n\nActual Results\nhauke@NUE1:/tmp/coatest$ ll\ninsgesamt 60\ndrwxrwxr-x  2 hauke hauke  4096 Apr 22 12:05 ./\ndrwxrwxrwt 20 root  root  36864 Apr 22 12:05 ../\n-rw-rw-r--  1 hauke hauke    92 Apr 22 12:05 .coafile\n-rw-rw-r--  1 hauke hauke    64 Apr 22 12:04 test.php\n-rw-rw-r--  1 hauke hauke    64 Apr 22 12:05 test.php.orig\n-rw-rw-r--  1 hauke hauke    61 Apr 22 12:04 test.php.orig.orig\nhauke@NUE1:/tmp/coatest$ cat .coafile \n[Default]\nbears = SpaceConsistencyBear\nfiles = ./test.php,./test.php.orig\nuse_spaces = true\nhauke@NUE1:/tmp/coatest$ \n\nExpected Results\nhauke@NUE1:/tmp/coatest$ ll\ninsgesamt 60\ndrwxrwxr-x  2 hauke hauke  4096 Apr 22 12:05 ./\ndrwxrwxrwt 20 root  root  36864 Apr 22 12:05 ../\n-rw-rw-r--  1 hauke hauke    92 Apr 22 12:05 .coafile\n-rw-rw-r--  1 hauke hauke    64 Apr 22 12:04 test.php\nhauke@NUE1:/tmp/coatest$ cat .coafile \n[Default]\nbears = SpaceConsistencyBear\nfiles = ./test.php\nuse_spaces = true\nhauke@NUE1:/tmp/coatest$ \n\nReproducibility\nFully reproducable.\nAdditional Information:\nFull log:\nlog.txt","comments":4,"createdAt":"2017-04-22T10:08:52Z","updatedAt":"2017-12-04T11:01:29Z","closedAt":null,"state":"open","user":{"login":"hnuestedt","avatarUrl":"https://avatars2.githubusercontent.com/u/11439016?v=4"},"owner":{"login":"hnuestedt","avatarUrl":"https://avatars2.githubusercontent.com/u/11439016?v=4"},"labels":[{"name":"area/usability","color":"d4c5f9"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1493079224000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4135","number":4135,"title":"REQUIREMENTS are now really important","body":"dependency_management has lots of lovely new features, and we must use them.\nThere is a coala core change planning to use REQUIREMENTS or the bear wont run.  That will be a huge breaking change, unless we have high quality REQUIREMENTS that cater for all users (Win, macOS, Linux - all distros).\nMost important is using AnyOneOfRequirements to have multiple different ways to find an executable, including ... ExecutableRequirement","comments":1,"createdAt":"2017-04-25T00:11:40Z","updatedAt":"2017-04-25T00:13:44Z","closedAt":"2017-04-25T00:13:44Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1504951390000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4137","number":4137,"title":"Error if circle containers is >2","body":"#3352 prevented less than 2 containers, but allows more, which waste resources\nOpened via gitter by @jayvdb","comments":5,"createdAt":"2017-04-26T04:23:23Z","updatedAt":"2017-09-09T10:03:10Z","closedAt":"2017-09-09T10:03:10Z","state":"closed","user":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"owner":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"assignee":{"login":"aryanshar","avatarUrl":"https://avatars0.githubusercontent.com/u/28498326?v=4"},"labels":[{"name":"area/CI","color":"eb6420"},{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1493768576000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4138","number":4138,"title":"Add `SEE_MORE` attribute to the Writing_Linter_Bear section in the docs","body":"Add SEE_MORE attribute to the bear metadata in https://github.com/coala/coala/blob/master/docs/Developers/Writing_Linter_Bears.rst\ndifficulty/newcomer\narea/documentation","comments":0,"createdAt":"2017-04-26T05:20:09Z","updatedAt":"2017-05-02T23:42:56Z","closedAt":"2017-05-02T23:42:56Z","state":"closed","user":{"login":"yash-nisar","avatarUrl":"https://avatars1.githubusercontent.com/u/14862976?v=4"},"owner":{"login":"yash-nisar","avatarUrl":"https://avatars1.githubusercontent.com/u/14862976?v=4"},"assignee":{"login":"Skogsfrae","avatarUrl":"https://avatars0.githubusercontent.com/u/6703604?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1510522160000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4139","number":4139,"title":"Writing_Native_Bears should be updated","body":"Since the dependency_management 0.5.0 has been released, we should update the documentation will all the new features added.\ndifficulty/low\narea/documentation\nstatus/needs info\nEDIT by @Makman2:\nReplaced 0.4.0 with 0.5.0 as meanwhile there was another release of dependency_management.","comments":11,"createdAt":"2017-04-26T05:26:04Z","updatedAt":"2017-11-12T21:29:20Z","closedAt":null,"state":"open","user":{"login":"yash-nisar","avatarUrl":"https://avatars1.githubusercontent.com/u/14862976?v=4"},"owner":{"login":"yash-nisar","avatarUrl":"https://avatars1.githubusercontent.com/u/14862976?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/low","color":"207de5"},{"name":"hacktoberfest","color":"e99695"},{"name":"status/needs info","color":"006b75"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1493818383000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4140","number":4140,"title":"Add a hook for validating settings","body":"I don't think we have this in place, if we do, please specify it and close the issue.\nI stumbled across this while reviewing coala/coala-bears#1505\nHere, there are two settings max and min files. Now, this two settings do not really depend upon each other. But there is a need to perform a check that max is always more than min.\nHow does a bear report problems in config settings?\n\nRaising an error is not an option, since it will stop the complete execution of coala.\nI don't think logging the error is also the right way to do this.\nEmitting an error in Result is also definitely not the way to do this.\n\n/cc @Makman2","comments":10,"createdAt":"2017-04-26T05:53:12Z","updatedAt":"2017-05-03T13:33:03Z","closedAt":null,"state":"open","user":{"login":"meetmangukiya","avatarUrl":"https://avatars0.githubusercontent.com/u/7620533?v=4"},"owner":{"login":"meetmangukiya","avatarUrl":"https://avatars0.githubusercontent.com/u/7620533?v=4"},"assignee":{"login":"meetmangukiya","avatarUrl":"https://avatars0.githubusercontent.com/u/7620533?v=4"},"labels":[{"name":"difficulty/medium","color":"0052cc"},{"name":"importance/high","color":"eb6420"},{"name":"status/needs design","color":"5319e7"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1493902060000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4141","number":4141,"title":"pip warning in .misc/check_setuptools.py","body":"DEPRECATION: The default format will switch to columns in the future. You can use --format=legacy (or define a list_format in your pip.conf) to disable this warning.\nhttps://travis-ci.org/jayvdb/coala/builds/226033302\nThat script needs to add --format=legacy to the pip invocations\ndifficulty/newcomer\nOpened via gitter by @jayvdb","comments":1,"createdAt":"2017-04-26T14:38:20Z","updatedAt":"2017-05-04T12:47:40Z","closedAt":"2017-05-04T12:47:40Z","state":"closed","user":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"owner":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"assignee":{"login":"danlls","avatarUrl":"https://avatars2.githubusercontent.com/u/28383090?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"},{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1495324943000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4144","number":4144,"title":"Release 0.11 checklist","body":"Stage 0:\n\n split the release branch [completed 4/26]\n bump master version to 0.12 dev [completed 4/26]\n update bears to use new dev version [completed 4/27]\n\nStage 1:\n\n ship release candidate to pypi [completed 4/27]\n test release candidate [in progress] [2 unconfirmed regressions]\n prepare release notes [PR submitted and ready, blocked because of docs]\n get ascii art and name [Thanks adtac!][name: BrewBear][completed 4/29]\n\nStage 2:\n\n ship release 0.11 (manually verify everything is in order before shipping)\n\nStage 3 (post release):\n\n twitter\n blog?\n\nPlease append critical backports to this issue before release","comments":1,"createdAt":"2017-04-27T03:39:32Z","updatedAt":"2017-05-21T00:02:23Z","closedAt":null,"state":"open","user":{"login":"Mixih","avatarUrl":"https://avatars2.githubusercontent.com/u/5818750?v=4"},"owner":{"login":"Mixih","avatarUrl":"https://avatars2.githubusercontent.com/u/5818750?v=4"},"assignee":{"login":"Mixih","avatarUrl":"https://avatars2.githubusercontent.com/u/5818750?v=4"},"milestone":{"title":"0.11","createdAt":"2017-01-16T17:55:22Z","dueOn":"2017-05-01T00:00:00Z","state":"open","htmlUrl":"https://github.com/coala/coala/milestone/14","description":"All big pulls that will need to be merged during the merge freeze from 29 Jan-12 Feb\r\n"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1493999519000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4145","number":4145,"title":"Do not offer to add an ignore comment after the user chooses \"Add ignore comment\"","body":"That doesn't make much sense. It shouldn't be there in the second time the options are presented (if the user chose \"Add ignore comment\" the first time).","comments":4,"createdAt":"2017-04-27T07:24:00Z","updatedAt":"2017-05-05T15:51:59Z","closedAt":"2017-05-05T15:51:59Z","state":"closed","user":{"login":"adtac","avatarUrl":"https://avatars2.githubusercontent.com/u/7521600?v=4"},"owner":{"login":"adtac","avatarUrl":"https://avatars2.githubusercontent.com/u/7521600?v=4"},"labels":[{"name":"area/CLI","color":"006b75"},{"name":"difficulty/low","color":"207de5"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1494239650000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4146","number":4146,"title":"Warning about glob not matching any files should suggest removing it","body":"maybe the glob is unneeded and users wonder how to just get rid of the warning. Either they have to remove it or they did something wrong so we could be a bit more explicit.\nOpened via gitter by @sils","comments":1,"createdAt":"2017-04-27T16:49:11Z","updatedAt":"2017-05-08T10:34:10Z","closedAt":"2017-05-08T10:34:10Z","state":"closed","user":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"owner":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"assignee":{"login":"mrtes","avatarUrl":"https://avatars3.githubusercontent.com/u/19871688?v=4"},"labels":[{"name":"area/usability","color":"d4c5f9"},{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1500871759000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4147","number":4147,"title":"Add keyword-only languages= argument to meta bearclass","body":"According to #3966 the meta bearclass should also provide a keyword-only languages= argument, allowing:\nfrom coalib.bearlib.aspects import Redundancy\nclass aspectsBear(Bear, aspects={\n        'fix': [Redundancy.UnusedImport],\n }, languages=['Python']):\n    ...\nThis is already getting implemented by #4111\n@coala/aspects-developers","comments":2,"createdAt":"2017-04-27T20:40:26Z","updatedAt":"2017-07-24T04:49:19Z","closedAt":"2017-07-24T04:49:19Z","state":"closed","user":{"login":"userzimmermann","avatarUrl":"https://avatars3.githubusercontent.com/u/2088633?v=4"},"owner":{"login":"userzimmermann","avatarUrl":"https://avatars3.githubusercontent.com/u/2088633?v=4"},"assignee":{"login":"adhikasp","avatarUrl":"https://avatars2.githubusercontent.com/u/6151302?v=4"},"milestone":{"title":"#aspectsYEAH","createdAt":"2017-05-09T22:10:19Z","dueOn":null,"state":"open","htmlUrl":"https://github.com/coala/coala/milestone/17","description":"The mother of all futures of coala!\r\n\r\nhttps://github.com/orgs/coala/projects/3\r\n\r\nhttps://github.com/orgs/coala/projects/2\r\n"},"labels":[{"name":"area/bears","color":"eb6420"},{"name":"area/languages","color":"d4c5f9"},{"name":"cool and awesome","color":"0052cc"},{"name":"difficulty/medium","color":"0052cc"},{"name":"importance/high","color":"eb6420"},{"name":"type/codestyle","color":"d4c5f9"},{"name":"type/feature","color":"0052cc"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1511835419000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4149","number":4149,"title":"Grow aspectsYEAH bear under coalib.bearlib.aspects","body":"As mentioned in coala/coala-bears#1604 (comment) the new aspectsYEAHBear should be moved from the coala-bears PR to a new coala PR and moved to coalib.bearlib.aspects for experimenting\n@coala/aspects-developers","comments":3,"createdAt":"2017-04-27T20:55:34Z","updatedAt":"2017-11-28T02:16:59Z","closedAt":null,"state":"open","user":{"login":"userzimmermann","avatarUrl":"https://avatars3.githubusercontent.com/u/2088633?v=4"},"owner":{"login":"userzimmermann","avatarUrl":"https://avatars3.githubusercontent.com/u/2088633?v=4"},"assignee":{"login":"pratyushprakash","avatarUrl":"https://avatars1.githubusercontent.com/u/18013053?v=4"},"labels":[{"name":"area/aspects","color":"000000"},{"name":"area/bears","color":"eb6420"},{"name":"difficulty/low","color":"207de5"},{"name":"importance/high","color":"eb6420"},{"name":"type/feature","color":"0052cc"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1494603313000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4150","number":4150,"title":"BUG: Diffs are shown in two steps","body":"This is on 0.12.0.dev20170427043713\nWhen you run coala on https://github.com/sims1253/coala_showcase the first result's diff is split into two results. The following results show additions and deletions in the same diff.\nm0hawk@antergos-book ..ents/dev/coala-analyzer/coala_showcase (git)-[master] % coala\n[WARNING][00:50:54] This comment does not have whitespace before or after # in: '#deault_actions ='. If you didn't mean to make a comment, use a backslash for escaping.\n[WARNING][00:50:54] Implicit 'Default' section inheritance is deprecated. It will be removed soon. To silence this warning remove settings in the 'Default' section from your coafile. You can use dots to specify inheritance: the section 'all.python' will inherit all settings from 'all'.\nPlease enter a value for the setting \"use_spaces\" (True if spaces are to be used instead of tabs.) needed by SpaceConsistencyBear for section \"cli\": \nfalse\nExecuting section python...\n\npy.py\n|   2| \n|    | [NORMAL] PEP8Bear:\n|    | The code does not comply to PEP8.\n|----|    | /home/m0hawk/Documents/dev/coala-analyzer/coala_showcase/py.py\n|    |++++| /home/m0hawk/Documents/dev/coala-analyzer/coala_showcase/py.py\n|   1|   1| def helloWorld():\n|   2|   2| \n|    |   3|+    return(print(\"hello World\"))\n|   3|   4| \n|   4|   5| \n|   5|   6| \n|    | *0: Do nothing\n|    |  1: Open file(s)\n|    |  2: Apply patch\n|    |  3: Add ignore comment\n|    | Enter number (Ctrl-D to exit): 0\n\npy.py\n|   5| \n|   6| »   return(print(\"hello·World\"))\n|   7| \n|    | [NORMAL] PEP8Bear:\n|    | The code does not comply to PEP8.\n|----|    | /home/m0hawk/Documents/dev/coala-analyzer/coala_showcase/py.py\n|    |++++| /home/m0hawk/Documents/dev/coala-analyzer/coala_showcase/py.py\n|   2|   2| \n|   3|   3| \n|   4|   4| \n|   5|    |-\n|   6|    |-\treturn(print(\"hello World\"))\n|   7|    |-\n|   8|   5| helloWorld()\n|    | *0: Do nothing\n|    |  1: Open file(s)\n|    |  2: Apply patch\n|    |  3: Add ignore comment\n|    | Enter number (Ctrl-D to exit): Program terminated by user.","comments":10,"createdAt":"2017-04-27T22:52:50Z","updatedAt":"2017-05-12T15:35:13Z","closedAt":null,"state":"open","user":{"login":"sims1253","avatarUrl":"https://avatars2.githubusercontent.com/u/6530123?v=4"},"owner":{"login":"sims1253","avatarUrl":"https://avatars2.githubusercontent.com/u/6530123?v=4"},"milestone":{"title":"0.12","createdAt":"2017-04-08T16:02:24Z","dueOn":null,"state":"open","htmlUrl":"https://github.com/coala/coala/milestone/16","description":""},"labels":[{"name":"importance/high","color":"eb6420"},{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1494399541000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4151","number":4151,"title":"coafile check implementation in coala","body":"like nginx can check the config files for syntax errors, coala should be able to do that as well and point out the lines of errors and even cols if possible\nIt'd be a good featuer IMO\nOpened via gitter by @meetmangukiya","comments":1,"createdAt":"2017-04-29T19:37:37Z","updatedAt":"2017-05-10T06:59:01Z","closedAt":null,"state":"open","user":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"owner":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1491745786000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3800","number":3800,"title":"Add missing Vs Code Integration in the Readme","body":"","comments":1,"createdAt":"2017-02-27T19:03:22Z","updatedAt":"2017-04-09T13:49:46Z","closedAt":"2017-04-09T13:49:46Z","state":"closed","user":{"login":"nikitavoloboev","avatarUrl":"https://avatars0.githubusercontent.com/u/6391776?v=4"},"owner":{"login":"nikitavoloboev","avatarUrl":"https://avatars0.githubusercontent.com/u/6391776?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1523959066000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3802","number":3802,"title":"Dictionary of languages along with the max_line_length value","body":"#3730","comments":1,"createdAt":"2017-02-27T22:20:15Z","updatedAt":"2018-04-17T09:57:46Z","closedAt":"2018-04-17T09:57:46Z","state":"closed","user":{"login":"ashwini0529","avatarUrl":"https://avatars3.githubusercontent.com/u/8419333?v=4"},"owner":{"login":"ashwini0529","avatarUrl":"https://avatars3.githubusercontent.com/u/8419333?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1488390962000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3803","number":3803,"title":"download_cached_file should check returned http status code","body":"Opened via gitter by @jayvdb","comments":2,"createdAt":"2017-02-28T01:15:08Z","updatedAt":"2017-03-01T17:56:02Z","closedAt":"2017-03-01T17:56:02Z","state":"closed","user":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"owner":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"assignee":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"milestone":{"title":"0.10.1","createdAt":"2017-02-06T20:01:09Z","dueOn":null,"state":"closed","htmlUrl":"https://github.com/coala/coala/milestone/15","description":""},"labels":[{"name":"difficulty/low","color":"207de5"},{"name":"importance/critical","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1524071275000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3804","number":3804,"title":"download_cached_file should retry if there is a http error code","body":"Follows on from #3803\nThe interface of Bear.download_cached_file isnt suited to failure.  It needs to retry if possible.","comments":5,"createdAt":"2017-02-28T01:40:19Z","updatedAt":"2018-04-18T17:07:55Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"},{"name":"importance/low","color":"70E870"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1534324248000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3807","number":3807,"title":"An automated way to measure speed-up over time","body":"I was learning about Amdahl's law today and I thought it'd be neat to have a graphical representation of how fast coala has been over time. A good measure would be running coala on the coalib codebase and logging the completion time for each commit progressively.","comments":7,"createdAt":"2017-02-28T11:56:27Z","updatedAt":"2018-08-15T09:10:48Z","closedAt":null,"state":"open","user":{"login":"adtac","avatarUrl":"https://avatars2.githubusercontent.com/u/7521600?v=4"},"owner":{"login":"adtac","avatarUrl":"https://avatars2.githubusercontent.com/u/7521600?v=4"},"assignee":{"login":"adtac","avatarUrl":"https://avatars2.githubusercontent.com/u/7521600?v=4"},"labels":[{"name":"difficulty/medium","color":"0052cc"},{"name":"type/performance","color":"fef2c0"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1496519670000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3808","number":3808,"title":"Replace pytest.raises with self.assertRaisesRegex","body":"There are currently six(6) cases of pytest.raises in the coala repo, and none in the coala-bears repo, but there are many, many more uses of the unittest self.assertRaises (and friends).  These six are odd, and we should either replace them with assertRaises , or use the pytest functionality.\npytest.raises has one use that unittest's self.assertRaises cant do, which is that they work in pytest tests functions that are not in a class, which have no self.\nAll six uses of pytest.raises are in class methods.\nunittest has self.assertRaisesRegexp which is better than assertRaises (see #3374) .  There is https://github.com/kissgyorgy/pytest-raisesregexp to fill that void originally , but then pytest added a different pattern of doing the re match on the exception. (see pytest-dev/pytest#1502)\nIf we are looking broadly, there is also a pytest decorator https://github.com/Authentise/pytest-raises , and a similar one could be built for raises-with-regexp-support.","comments":14,"createdAt":"2017-02-28T12:18:24Z","updatedAt":"2017-06-03T19:54:30Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"RJ722","avatarUrl":"https://avatars1.githubusercontent.com/u/15556382?v=4"},"labels":[{"name":"area/tests","color":"bfd4f2"},{"name":"difficulty/low","color":"207de5"},{"name":"importance/medium","color":"fbca04"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1488387624000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3809","number":3809,"title":"TextPosition.py: Implement `__lt__` and `__gt__` operators.","body":"","comments":1,"createdAt":"2017-02-28T12:31:27Z","updatedAt":"2017-03-01T17:00:24Z","closedAt":null,"state":"open","user":{"login":"aptrishu","avatarUrl":"https://avatars1.githubusercontent.com/u/22702242?v=4"},"owner":{"login":"aptrishu","avatarUrl":"https://avatars1.githubusercontent.com/u/22702242?v=4"},"assignee":{"login":"aptrishu","avatarUrl":"https://avatars1.githubusercontent.com/u/22702242?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1488464534000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3810","number":3810,"title":"Installation Issue","body":"Whenever i try to launch the CLI it says like this.\n\ncoala --show-bears --filter-by-language Python ?[33m[WARNING]?[0m[18:18:24] 'cli' is an internally reserved section name. It may have been generated into your coafile while running coala with--save. The settings in that section will inherit implicitly to all sections as defaults just like CLI args do.Please cha nge the name of that section in your coafile to avoid any unexpected behavior.?[0m ?[33m[WARNING]?[0m[18:18:24] Implicit 'Default' section inheritance is deprecated. It will be removed soon. To silence this warning remove settings in the 'Default' section from your coafile. You can use dots to specify inheritance: the section 'all.python' will inher it all settings from 'all'.?[0m ?[31m[ERROR]?[0m[18:18:24] There is a conflict in the version of a dependency you have installed and the requirements of coala. This may be resolved by creating a separate virtual environment for coala or runningpip install \"coala~=0.10.0\"`. Be aware that the latter\nsolution might break other python packages that depend on the currently installed version.?[0m\n?[34m[INFO]?[0m[18:18:24] Exception was:\nTraceback (most recent call last): File \"c:\\users\\yash ladha\\appdata\\local\\programs\\python\\python35\\lib\\site-packages\\coala-0.10.0.dev99999999999999-py3.5.egg\\coalib\\coala.py\", line 48, in main\nargs.filter_by_language, log_printer)\nFile \"c:\\users\\yash ladha\\appdata\\local\\programs\\python\\python35\\lib\\site-packages\\coala-0.10.0.dev99999999999999-py3.5.egg\\coalib\\settings\\ConfigurationGathering.py\", line 331, in get_filtered_bears\nsections, log_printer)\nFile \"c:\\users\\yash ladha\\appdata\\local\\programs\\python\\python35\\lib\\site-packages\\coala-0.10.0.dev99999999999999-py3.5.egg\\coalib\\collecting\\Collectors.py\", line 269, in collect_all_bears_from_sections\nbear_dirs = sections[section].bear_dirs()\nFile \"c:\\users\\yash ladha\\appdata\\local\\programs\\python\\python35\\lib\\site-packages\\coala-0.10.0.dev99999999999999-py3.5.egg\\coalib\\settings\\Section.py\", line 117, in bear_dirs\nfor bear_dir in collect_registered_bears_dirs('coalabears')]\nFile \"c:\\users\\yash ladha\\appdata\\local\\programs\\python\\python35\\lib\\site-packages\\coala-0.10.0.dev99999999999999-py3.5.egg\\coalib\\collecting\\Collectors.py\", line 307, in collect_registered_bears_dirs\nregistered_package = ep.load()\nFile \"C:\\Users\\Yash Ladha\\AppData\\Local\\Programs\\Python\\Python35\\lib\\site-packages\\pkg_resources_init_.py\", line 2301, in load\nself.require(*args, **kwargs)\nFile \"C:\\Users\\Yash Ladha\\AppData\\Local\\Programs\\Python\\Python35\\lib\\site-packages\\pkg_resources_init_.py\", line 2324, in require\nitems = working_set.resolve(reqs, env, installer, extras=self.extras)\nFile \"C:\\Users\\Yash Ladha\\AppData\\Local\\Programs\\Python\\Python35\\lib\\site-packages\\pkg_resources_init_.py\", line 859, in resolve\nraise VersionConflict(dist, req).with_context(dependent_req)\npkg_resources.VersionConflict: (coala 0.10.0.dev99999999999999 (c:\\users\\yash ladha\\appdata\\local\\programs\\python\\python35\\lib\\site-packages\\coala-0.10.0.dev99999999999999-py3.5.egg), Requirement.parse('coala~=0.10.0'))?[0m","comments":4,"createdAt":"2017-02-28T14:21:40Z","updatedAt":"2017-03-02T14:22:14Z","closedAt":"2017-03-02T04:32:45Z","state":"closed","user":{"login":"yashLadha","avatarUrl":"https://avatars3.githubusercontent.com/u/18033231?v=4"},"owner":{"login":"yashLadha","avatarUrl":"https://avatars3.githubusercontent.com/u/18033231?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1488938199000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3811","number":3811,"title":"download_cached_file iterating in chunks of 125 bytes","body":"#3612 uses Response.iter_content(chunk_size=125).  125 seems arbitrary.\nThe docs suggest chunk_size is bytes, but the default value is 1.\nResponse.iter uses a chunk_size=128, which seems much saner.\nIf the chunk_size=None, while stream=True, it seems it \"will read data as it arrives in whatever size the chunks are received.\" which isnt very technical, but it might mean the size is limited by the TCP packet, which has a maximum of 64K and is in practise much lower.","comments":4,"createdAt":"2017-02-28T16:01:08Z","updatedAt":"2017-03-08T01:56:39Z","closedAt":"2017-03-08T01:56:39Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"milestone":{"title":"0.10.1","createdAt":"2017-02-06T20:01:09Z","dueOn":null,"state":"closed","htmlUrl":"https://github.com/coala/coala/milestone/15","description":""},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1489083795000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3815","number":3815,"title":"Mention \"acking\" a commit is not as important in newcomer docs ","body":"Since some newcomers ack the same commit over and over again, it might be a good idea to mention that it's not as important in the newcomer's guide.","comments":3,"createdAt":"2017-02-28T20:42:27Z","updatedAt":"2017-03-09T18:23:15Z","closedAt":"2017-03-09T18:23:15Z","state":"closed","user":{"login":"AGZ98","avatarUrl":"https://avatars3.githubusercontent.com/u/7506107?v=4"},"owner":{"login":"AGZ98","avatarUrl":"https://avatars3.githubusercontent.com/u/7506107?v=4"},"assignee":{"login":"gaurav1911","avatarUrl":"https://avatars3.githubusercontent.com/u/15519864?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1510610104000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3816","number":3816,"title":"doctest deprecation failures with pytest catchlog","body":"These doctest have always failed on my machine due to my use of catchlog-1.2.2 plugin.  This may be able to be fixed upstream, or maybe this needs to be converted to a real test where the test can be skipped if catchlog is active.\nplatform linux -- Python 3.6.0, pytest-3.0.6, py-1.4.32, pluggy-0.4.0\nrootdir: /.../coala, inifile: setup.cfg\nplugins: xdist-1.15.0, timeout-1.2.0, mock-1.5.0, env-0.6.0, cov-2.4.0, catchlog-1.2.2\ntimeout: 35.0s method: signal\n\n====================================================================== FAILURES ======================================================================\n______________________________________________________ [doctest] coalib.bearlib.deprecate_bear _______________________________________________________\n129     ``SomeOldBear.py`` around with those contents:\n130 \n131     >>> @deprecate_bear\n132     ... class SomeOldBear(SomeBear): pass\n133 \n134     Now let's run the bear:\n135 \n136     >>> import sys\n137     >>> logging.basicConfig(stream=sys.stdout, level=logging.DEBUG)\n138     >>> SomeOldBear().run()\nExpected:\n    WARNING:root:The bear SomeOldBear is deprecated. Use SomeBear instead!\n    I'm running!\nGot:\n    I'm running!\n\n/home/jayvdb/projects/coala/coala/coalib/bearlib/__init__.py:138: DocTestFailure\n----------------------------------------------------------------- Captured log call ------------------------------------------------------------------\n__init__.py                150 WARNING  The bear SomeOldBear is deprecated. Use SomeBear instead!\n____________________________________________________ [doctest] coalib.bearlib.deprecate_settings _____________________________________________________\n017     >>> @deprecate_settings(new='old')\n018     ... def run(new):\n019     ...     print(new)\n020 \n021     Now we can simply call the bear with the deprecated setting, we'll get a\n022     warning - but it still works!\n023 \n024     >>> import sys\n025     >>> logging.basicConfig(stream=sys.stdout, level=logging.DEBUG)\n026     >>> run(old=\"Hello world!\")\nExpected:\n    WARNING:root:The setting `old` is deprecated. Please use `new` instead.\n    Hello world!\nGot:\n    Hello world!","comments":3,"createdAt":"2017-03-01T02:07:29Z","updatedAt":"2017-11-13T21:55:04Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"area/tests","color":"bfd4f2"},{"name":"area/upstream","color":"5319e7"},{"name":"difficulty/medium","color":"0052cc"},{"name":"importance/low","color":"70E870"},{"name":"platform/linux","color":"c2e0c6"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1488387366000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3818","number":3818,"title":"Running Coala first time","body":"After succesfully installing coala, I am running it on the coala-tutorial directory. But, I am getting this error. I tried to run on other codes but got the same error.\nError:\npkg_resources.ContextualVersionConflict: (requests 2.2.1 (/usr/lib/python3/dist-packages), Requirement.parse('requests~=2.12'), {'coala'})","comments":1,"createdAt":"2017-03-01T13:26:55Z","updatedAt":"2017-03-01T16:56:06Z","closedAt":"2017-03-01T16:55:49Z","state":"closed","user":{"login":"shivam207","avatarUrl":"https://avatars2.githubusercontent.com/u/20854926?v=4"},"owner":{"login":"shivam207","avatarUrl":"https://avatars2.githubusercontent.com/u/20854926?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1494148686000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3819","number":3819,"title":"Writing_Linter_Bears.rst: Add link to the @linter decorator","body":"While writing a bear, I wanted to look at the @linter decorator. I had to type it in the search box. It would be nice if we add http://api.coala.io/en/latest/coalib.bearlib.abstractions.html#module-coalib.bearlib.abstractions.Linter to the word @linter in the first paragraph of the file.\ndifficulty/newcomer\narea/documentation","comments":1,"createdAt":"2017-03-01T17:22:53Z","updatedAt":"2017-05-07T09:18:06Z","closedAt":"2017-05-07T09:18:06Z","state":"closed","user":{"login":"yash-nisar","avatarUrl":"https://avatars1.githubusercontent.com/u/14862976?v=4"},"owner":{"login":"yash-nisar","avatarUrl":"https://avatars1.githubusercontent.com/u/14862976?v=4"},"assignee":{"login":"thisch","avatarUrl":"https://avatars3.githubusercontent.com/u/206581?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1488729634000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3820","number":3820,"title":"Add download read timeout failure tests","body":"An extra test has been pulled out of #3805 , as it was not part of the fix.\n    def test_read_timeout(self):\n        exc = requests.exceptions.ReadTimeout\n        with self.assertRaisesRegexp(exc, 'Read timed out.'):\n            self.uut.download_cached_file(\n                'http://httpbin.org/delay/10',\n                self.filename,\n                timeout=(5, 2))\n\nThere should be tests like this, but it is best to consider them separately, as http://httpbin.org/delay/10 has a maximum 10 second delay, and the coala function has a 20 second timeout, so that httpbin feature can never be used without improving coala.","comments":0,"createdAt":"2017-03-01T17:29:20Z","updatedAt":"2017-03-05T16:00:34Z","closedAt":"2017-03-05T16:00:34Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1488410242000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3821","number":3821,"title":"Codestyle.rst: Add guidelines related to import style to follow in coala","body":"Please see the following discussions\n#3805 (comment)\njayvdb@016125c#commitcomment-21107700\ndifficulty/low","comments":6,"createdAt":"2017-03-01T17:30:55Z","updatedAt":"2017-03-01T23:17:22Z","closedAt":null,"state":"open","user":{"login":"satwikkansal","avatarUrl":"https://avatars1.githubusercontent.com/u/10217535?v=4"},"owner":{"login":"satwikkansal","avatarUrl":"https://avatars1.githubusercontent.com/u/10217535?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1489079590000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3822","number":3822,"title":"Section.py: Remove redundant lines","body":"https://github.com/coala/coala/blob/master/coalib/settings/Section.py#L210-L213\nThe given lines need to be removed from the nested if block.\nres.to_append = False\nreturn res\n\ndifficulty/newcomer","comments":7,"createdAt":"2017-03-01T17:38:30Z","updatedAt":"2017-03-09T17:13:10Z","closedAt":"2017-03-09T17:13:10Z","state":"closed","user":{"login":"yash-nisar","avatarUrl":"https://avatars1.githubusercontent.com/u/14862976?v=4"},"owner":{"login":"yash-nisar","avatarUrl":"https://avatars1.githubusercontent.com/u/14862976?v=4"},"assignee":{"login":"yashLadha","avatarUrl":"https://avatars3.githubusercontent.com/u/18033231?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1490443676000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3823","number":3823,"title":"BearTest.py: replace hrml with html","body":"difficulty/newcomer\nOpened via gitter by @jayvdb","comments":3,"createdAt":"2017-03-01T17:43:52Z","updatedAt":"2017-03-25T12:07:56Z","closedAt":"2017-03-25T12:07:56Z","state":"closed","user":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"owner":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"assignee":{"login":"mariaandreicosmin","avatarUrl":"https://avatars0.githubusercontent.com/u/26469678?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1524100849000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3824","number":3824,"title":"Code blocks in RST not being checked","body":"Problems like #3770 should be automatically detected, so that the developer docs stay in sync with the code.","comments":8,"createdAt":"2017-03-01T18:35:26Z","updatedAt":"2018-04-19T01:20:49Z","closedAt":"2018-04-19T01:20:49Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"Siddhartha1234","avatarUrl":"https://avatars3.githubusercontent.com/u/18551427?v=4"},"labels":[{"name":"difficulty/medium","color":"0052cc"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1488397138000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3826","number":3826,"title":"readthedocs is out of date","body":"http://coala.readthedocs.io/ says it is 0.8.0","comments":1,"createdAt":"2017-03-01T19:31:36Z","updatedAt":"2017-03-01T19:38:58Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1490519450000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3827","number":3827,"title":"aspects: Typo error for classnames in pydoc","body":":class:coalib.bearlib.aspectclasses.Taste. This should be something like :class:coalib.bearlib.aspects.Taste. . Also replace similar instances of aspectclasses with aspects in the pydoc.","comments":4,"createdAt":"2017-03-02T01:01:26Z","updatedAt":"2017-03-26T09:10:50Z","closedAt":"2017-03-26T09:10:50Z","state":"closed","user":{"login":"Techievena","avatarUrl":"https://avatars2.githubusercontent.com/u/17270966?v=4"},"owner":{"login":"Techievena","avatarUrl":"https://avatars2.githubusercontent.com/u/17270966?v=4"},"assignee":{"login":"dushyantRathore","avatarUrl":"https://avatars1.githubusercontent.com/u/17358196?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1524071520000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3831","number":3831,"title":"Delete file when exception in read occurs","body":"In the same vein as #3803 was for status codes, if the read fails for some reason, a corrupt file will still exist. (identified by @Mixih )\nThis isnt a regression; the same occurred before the rewrite #3612 .","comments":6,"createdAt":"2017-03-02T10:43:26Z","updatedAt":"2018-04-18T17:12:00Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"status/blocked","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1520669538000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3832","number":3832,"title":"Writing_Linter_Bears.rst: Replace double quotes with single quotes","body":"File: https://github.com/coala/coala/blob/master/docs/Developers/Writing_Linter_Bears.rst\nLine: LANGUAGES = {\"Python\", \"Python 2\", \"Python 3\"}\n\" should be replaced by '\ndifficulty/newcomer\narea/documentation","comments":8,"createdAt":"2017-03-02T13:38:39Z","updatedAt":"2018-03-10T08:12:18Z","closedAt":"2018-03-10T08:12:18Z","state":"closed","user":{"login":"yash-nisar","avatarUrl":"https://avatars1.githubusercontent.com/u/14862976?v=4"},"owner":{"login":"yash-nisar","avatarUrl":"https://avatars1.githubusercontent.com/u/14862976?v=4"},"assignee":{"login":"L-KID","avatarUrl":"https://avatars0.githubusercontent.com/u/22115345?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1496613306000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3834","number":3834,"title":"diff: diff.add_lines doesn't append newline to the lines passed as a list","body":"example:\ndiff = Diff([])\ndiff.add_lines(0, [\"1\", \"2\", \"3\"])\nprint(diff.unified_diff)\n  --- \n  +++ \n  @@ -0,0 +1,3 @@\n  +1+2+3\n\n\nwhile, for add_lines(line_br, list) current implementation requires user to append new lines, we should check if the lines in the list endswith a \\n if not append one implicitly\nOpened via gitter by @meetmangukiya","comments":20,"createdAt":"2017-03-02T15:00:33Z","updatedAt":"2017-06-04T21:55:06Z","closedAt":"2017-06-04T21:55:06Z","state":"closed","user":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"owner":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"assignee":{"login":"mrtes","avatarUrl":"https://avatars3.githubusercontent.com/u/19871688?v=4"},"labels":[{"name":"area/core","color":"eb6420"},{"name":"difficulty/medium","color":"0052cc"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1524047163000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3835","number":3835,"title":"Unnecessary directory creation","body":"~/.local/share/coala-bears/ has one directory per bear, almost all empty, almost certainly created during initialisation \"just in case\", slowing down startup.\nFor those not needed, they shouldnt be created.\ndifficulty/low\nOpened via gitter by @jayvdb","comments":13,"createdAt":"2017-03-02T15:21:46Z","updatedAt":"2018-04-18T10:26:03Z","closedAt":null,"state":"open","user":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"owner":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"},{"name":"importance/medium","color":"fbca04"},{"name":"type/performance","color":"fef2c0"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1534350610000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3843","number":3843,"title":"Git Basics: Mention Xcode for MacOS","body":"Following on from #3256 , the macos note should mention that git may be installed via Xcode.\nhttps://www.atlassian.com/git/tutorials/install-git#mac-os-x\nXcode has other useful tools for developers, so it should be a preferred and recommended way to get these tools.","comments":1,"createdAt":"2017-03-03T15:28:47Z","updatedAt":"2018-08-15T16:30:10Z","closedAt":"2018-08-15T14:19:35Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"Rddhima-R","avatarUrl":"https://avatars0.githubusercontent.com/u/22348449?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1525005334000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3845","number":3845,"title":"Newcomers_Guide.rst: Add example of assigning an issue","body":"Many times, people make a mistake and do not use the full issue url while assigning an issue via cobot corobo. Perhaps adding an example could help.\ndifficulty/newcomer\narea/documentation","comments":10,"createdAt":"2017-03-03T16:30:59Z","updatedAt":"2018-04-29T12:35:34Z","closedAt":null,"state":"open","user":{"login":"yash-nisar","avatarUrl":"https://avatars1.githubusercontent.com/u/14862976?v=4"},"owner":{"login":"yash-nisar","avatarUrl":"https://avatars1.githubusercontent.com/u/14862976?v=4"},"assignee":{"login":"nvzard","avatarUrl":"https://avatars0.githubusercontent.com/u/19310512?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"status/blocked","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1519253365000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3847","number":3847,"title":"Detect unsupported clang and report a useful error message","body":"If the wrong clang version is installed, the error message is like \"Please ensure that your python bindings are compatible with your libclang.so version\" , which doesnt help the average user.\nIn addition to the exception message provided by the libclang python wrapper, we need a message which says something like \"coala requires clang 3.4\"","comments":7,"createdAt":"2017-03-04T05:55:19Z","updatedAt":"2018-02-21T22:49:25Z","closedAt":"2018-02-21T22:49:25Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"nvzard","avatarUrl":"https://avatars0.githubusercontent.com/u/19310512?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1489148289000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3850","number":3850,"title":"Linter.py - typo","body":"https://github.com/coala/coala/blob/master/coalib/bearlib/abstractions/Linter.py#L596\nparsed -> passed","comments":1,"createdAt":"2017-03-04T15:45:48Z","updatedAt":"2017-03-10T12:18:09Z","closedAt":"2017-03-10T12:18:09Z","state":"closed","user":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"owner":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"assignee":{"login":"Harshish","avatarUrl":"https://avatars3.githubusercontent.com/u/14778970?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1488813909000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3854","number":3854,"title":"Use clang 3.8","body":"coala should support the most recent llvm/clang, at least 3.8","comments":2,"createdAt":"2017-03-06T03:28:46Z","updatedAt":"2017-03-06T15:25:09Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"gaurav1911","avatarUrl":"https://avatars3.githubusercontent.com/u/15519864?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1532427132000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3855","number":3855,"title":"Developers/Writing_Tests.rst: unwanted quotes appear in text","body":"Unwanted back-quotes appear in the file due to the ** and the `` tags being used together. Link https://github.com/coala/coala/blob/master/docs/Developers/Writing_Tests.rst#actually-writing-a-test\nHave a look at the emboldened setUp() and tearDown(). I don't think that was meant to appear that way.","comments":6,"createdAt":"2017-03-06T08:12:34Z","updatedAt":"2018-07-24T10:12:12Z","closedAt":"2018-07-24T10:12:12Z","state":"closed","user":{"login":"blooops","avatarUrl":"https://avatars2.githubusercontent.com/u/19331172?v=4"},"owner":{"login":"blooops","avatarUrl":"https://avatars2.githubusercontent.com/u/19331172?v=4"},"assignee":{"login":"JoeSiew","avatarUrl":"https://avatars3.githubusercontent.com/u/40135419?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1489538692000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3856","number":3856,"title":"mention package git-extras in dev docs","body":"Opened via gitter by @jayvdb","comments":1,"createdAt":"2017-03-06T09:33:56Z","updatedAt":"2017-03-15T00:44:52Z","closedAt":null,"state":"open","user":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"owner":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1488822458000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3858","number":3858,"title":"Newcomers_Guide: Fix spelling/tense mistakes [difficulty/newcomer]","body":"Fix the spelling mistakes in the newcomers guide at https://github.com/coala/coala/blob/master/docs/Developers/Newcomers_Guide.rst","comments":0,"createdAt":"2017-03-06T17:35:13Z","updatedAt":"2017-03-06T17:47:38Z","closedAt":null,"state":"open","user":{"login":"TalkingAvocado","avatarUrl":"https://avatars2.githubusercontent.com/u/15051696?v=4"},"owner":{"login":"TalkingAvocado","avatarUrl":"https://avatars2.githubusercontent.com/u/15051696?v=4"},"assignee":{"login":"TalkingAvocado","avatarUrl":"https://avatars2.githubusercontent.com/u/15051696?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1489311734000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3859","number":3859,"title":"Testing_Bears.rst: Move settings out of the result list","body":"In example 3, http://api.coala.io/en/latest/Developers/Testing_Bears.html, the settings param is inside the result list. It is passed as a separate param to check_results and therefore should be moved out of the list.\ndifficulty/newcomer\narea/documentation","comments":2,"createdAt":"2017-03-06T18:13:15Z","updatedAt":"2017-03-12T09:42:14Z","closedAt":"2017-03-12T09:42:14Z","state":"closed","user":{"login":"yash-nisar","avatarUrl":"https://avatars1.githubusercontent.com/u/14862976?v=4"},"owner":{"login":"yash-nisar","avatarUrl":"https://avatars1.githubusercontent.com/u/14862976?v=4"},"assignee":{"login":"giritheja","avatarUrl":"https://avatars1.githubusercontent.com/u/8845039?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1518471824000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3862","number":3862,"title":"Add setting charset","body":"#3529 show the problem with non -utf8 content.\nWe need a setting so users can control the charset used, which will reduce the severity of above bug.","comments":10,"createdAt":"2017-03-07T07:50:22Z","updatedAt":"2018-02-12T21:43:44Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"jackthepirate6","avatarUrl":"https://avatars2.githubusercontent.com/u/25016228?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"},{"name":"importance/medium","color":"fbca04"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1488880150000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3863","number":3863,"title":"New Bear Documentation.","body":"so this documentation comment is helpful to me. But not to somebody wanting to know what a bear is and what he has to look out for when implementing one - this should rather be a sort of tutorial for bears or at first link to one.\n\n#3711","comments":0,"createdAt":"2017-03-07T09:48:39Z","updatedAt":"2017-03-07T09:49:10Z","closedAt":null,"state":"open","user":{"login":"Udayan12167","avatarUrl":"https://avatars1.githubusercontent.com/u/6421568?v=4"},"owner":{"login":"Udayan12167","avatarUrl":"https://avatars1.githubusercontent.com/u/6421568?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1527334290000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3864","number":3864,"title":"Attrs in Bear v2.","body":"we're starting to use the attrs library a bit and I think this would be a good fit, remove those three functions which are just proxies for the dependency dict and make it an _dependency_results = attr.ib(init=collections.defaultdict(list))\n\n#3711","comments":7,"createdAt":"2017-03-07T09:50:17Z","updatedAt":"2018-05-26T11:31:30Z","closedAt":null,"state":"open","user":{"login":"Udayan12167","avatarUrl":"https://avatars1.githubusercontent.com/u/6421568?v=4"},"owner":{"login":"Udayan12167","avatarUrl":"https://avatars1.githubusercontent.com/u/6421568?v=4"},"labels":[{"name":"area/core","color":"eb6420"},{"name":"difficulty/low","color":"207de5"},{"name":"importance/low","color":"70E870"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1489742468000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3865","number":3865,"title":"aspects/meta.py: Typo error","body":"Replace int -> in in search for tastes int the sub-aspectclass\ndifficulty/newcomer","comments":0,"createdAt":"2017-03-07T10:10:00Z","updatedAt":"2017-03-17T09:21:08Z","closedAt":"2017-03-17T09:21:08Z","state":"closed","user":{"login":"Techievena","avatarUrl":"https://avatars2.githubusercontent.com/u/17270966?v=4"},"owner":{"login":"Techievena","avatarUrl":"https://avatars2.githubusercontent.com/u/17270966?v=4"},"assignee":{"login":"d3db0t","avatarUrl":"https://avatars3.githubusercontent.com/u/23397384?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1491342408000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3867","number":3867,"title":"Bear.get_config_dir() has different behaviour on Windows versus Linux","body":"Overview Description\nWhile debugging my Rust Clippy bear, I used (Global)Bear.get_config_dir() to find the path to the project root, as Clippy uses the Cargo.toml project file there to setup the project.\nActual Results\nIt seemed that in the unit tests, on Linux, it returns the cwd, while on Windows, it returns the root of the coala-bears project.\nExpected Results\nI actually have no clue what the expected behaviour is here. Perhaps to be defined? In any case, it should be the same across all supported platforms.\nReproducibility\nI found out the Windows behaviour on AppVeyor. I don't have a Windows machine to debug this stuff on, and I honestly don't feel like debugging that at all :P","comments":1,"createdAt":"2017-03-07T11:36:59Z","updatedAt":"2017-04-04T21:46:48Z","closedAt":null,"state":"open","user":{"login":"rubdos","avatarUrl":"https://avatars2.githubusercontent.com/u/1263440?v=4"},"owner":{"login":"rubdos","avatarUrl":"https://avatars2.githubusercontent.com/u/1263440?v=4"},"labels":[{"name":"difficulty/medium","color":"0052cc"},{"name":"platform/windows","color":"0052cc"},{"name":"status/needs design","color":"5319e7"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1489576630000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3868","number":3868,"title":"aspects/taste.py: Improve the error message","body":"taste value is allowed to be set only once. Error is raised if taste value is tried to set more than once. But this fact is quite unclear from the error message --> can't set taste values of aspectclass instances. Improve the error message.","comments":0,"createdAt":"2017-03-07T14:49:49Z","updatedAt":"2017-03-15T11:17:10Z","closedAt":"2017-03-15T11:17:10Z","state":"closed","user":{"login":"Techievena","avatarUrl":"https://avatars2.githubusercontent.com/u/17270966?v=4"},"owner":{"login":"Techievena","avatarUrl":"https://avatars2.githubusercontent.com/u/17270966?v=4"},"assignee":{"login":"corona10","avatarUrl":"https://avatars2.githubusercontent.com/u/5110323?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1489490957000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3869","number":3869,"title":"aspects/taste.py: Typo Error","body":"Change name an to the in  name an cast type\ndifficulty/newcomer","comments":0,"createdAt":"2017-03-07T15:12:55Z","updatedAt":"2017-03-14T11:29:17Z","closedAt":"2017-03-14T11:29:17Z","state":"closed","user":{"login":"Techievena","avatarUrl":"https://avatars2.githubusercontent.com/u/17270966?v=4"},"owner":{"login":"Techievena","avatarUrl":"https://avatars2.githubusercontent.com/u/17270966?v=4"},"assignee":{"login":"nikita1412","avatarUrl":"https://avatars2.githubusercontent.com/u/16724419?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"},{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1489708598000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3872","number":3872,"title":"PR Process: require date of commit is updated when commit amended except for rebase","body":"Opened via gitter by @jayvdb","comments":1,"createdAt":"2017-03-07T18:01:34Z","updatedAt":"2017-03-16T23:56:38Z","closedAt":null,"state":"open","user":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"owner":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1509157338000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3873","number":3873,"title":"Testing_Bears.rst: Change settings snippet","body":"Change settings={'max_number_of_lines': int=20} to settings={'max_number_of_lines': 20}\nCan be done after #3859 is merged.\ndifficulty/newcomer\narea/documentation\nimportance/medium","comments":5,"createdAt":"2017-03-07T18:23:29Z","updatedAt":"2017-10-28T02:22:18Z","closedAt":"2017-10-28T02:22:18Z","state":"closed","user":{"login":"yash-nisar","avatarUrl":"https://avatars1.githubusercontent.com/u/14862976?v=4"},"owner":{"login":"yash-nisar","avatarUrl":"https://avatars1.githubusercontent.com/u/14862976?v=4"},"assignee":{"login":"mohitkyadav","avatarUrl":"https://avatars3.githubusercontent.com/u/25580776?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"importance/high","color":"eb6420"},{"name":"importance/medium","color":"fbca04"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1490012761000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3874","number":3874,"title":"Git_Basics.rst: Tell people to run coala over their code before they push to their fork","body":"Opened via gitter by @supergr35","comments":0,"createdAt":"2017-03-07T19:26:00Z","updatedAt":"2017-03-20T12:26:01Z","closedAt":"2017-03-20T12:26:01Z","state":"closed","user":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"owner":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"assignee":{"login":"corona10","avatarUrl":"https://avatars2.githubusercontent.com/u/5110323?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1509202536000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3877","number":3877,"title":"Investigate Response.iter_content(chunk_size=None)","body":"See #3811 (comment)","comments":3,"createdAt":"2017-03-08T02:11:17Z","updatedAt":"2017-10-28T14:55:36Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"ayush1999","avatarUrl":"https://avatars2.githubusercontent.com/u/24913958?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"},{"name":"hacktoberfest","color":"e99695"},{"name":"importance/low","color":"70E870"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1512846853000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3878","number":3878,"title":"install_requires must be a string or list of strings ","body":"vim-vint setup command: 'install_requires' must be a string or list of strings containing valid project/version requirement specifiers\nAnswer is here :- https://www.bountysource.com/issues/38134858-177-breaks-pip-install-for-python2\nhttps://gitter.im/coala/coala?at=58bf8aed1465c46a56ffb9c7","comments":8,"createdAt":"2017-03-08T05:02:35Z","updatedAt":"2017-12-09T19:14:13Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"madhukar01","avatarUrl":"https://avatars0.githubusercontent.com/u/15910378?v=4"},"labels":[{"name":"area/upstream","color":"5319e7"},{"name":"difficulty/low","color":"207de5"},{"name":"status/needs info","color":"006b75"},{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1490464329000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3879","number":3879,"title":"aspects/taste.py: Describe the parameters of Taste","body":"Description of the parameters using param: definition is missing in pydoc of Taste class.","comments":0,"createdAt":"2017-03-08T07:07:54Z","updatedAt":"2017-03-25T17:52:09Z","closedAt":"2017-03-25T17:52:09Z","state":"closed","user":{"login":"Techievena","avatarUrl":"https://avatars2.githubusercontent.com/u/17270966?v=4"},"owner":{"login":"Techievena","avatarUrl":"https://avatars2.githubusercontent.com/u/17270966?v=4"},"assignee":{"login":"proishan11","avatarUrl":"https://avatars1.githubusercontent.com/u/22674230?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1489318987000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3881","number":3881,"title":"Move towards CIA style guide ","body":"It's pretty close to PEP8 and Google, kind of a boring read actually.\nhttps://wikileaks.org/ciav7p1/cms/page_26607631.html\n100 chars/line fwiw with some exceptions allowed.","comments":3,"createdAt":"2017-03-08T09:47:02Z","updatedAt":"2017-03-12T11:43:07Z","closedAt":"2017-03-12T11:43:07Z","state":"closed","user":{"login":"fneu","avatarUrl":"https://avatars2.githubusercontent.com/u/7591685?v=4"},"owner":{"login":"fneu","avatarUrl":"https://avatars2.githubusercontent.com/u/7591685?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1491199550000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3882","number":3882,"title":"Regex composition library","body":"For example linters often need to match paths, so a library that allows to compose more complex regexes could be beneficial:\nregex_composition.path + r': error found'\n\n(for example path could also change depending on the OS, like Windows vs Linux for more consistent behaviour)\nThis should probably go into a separate repository^^","comments":15,"createdAt":"2017-03-08T16:07:25Z","updatedAt":"2017-04-03T06:05:50Z","closedAt":null,"state":"open","user":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"owner":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"assignee":{"login":"bhavishyagopesh","avatarUrl":"https://avatars0.githubusercontent.com/u/22556226?v=4"},"labels":[{"name":"importance/low","color":"70E870"},{"name":"status/needs design","color":"5319e7"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1489490867000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3883","number":3883,"title":"Aspects/taste.py : typo in inline documentation","body":"Typo in the line\nNo need to specify name an cast type:\ndifficulty/newcomer","comments":6,"createdAt":"2017-03-09T12:49:39Z","updatedAt":"2017-03-14T11:27:47Z","closedAt":"2017-03-14T11:27:47Z","state":"closed","user":{"login":"satwikkansal","avatarUrl":"https://avatars1.githubusercontent.com/u/10217535?v=4"},"owner":{"login":"satwikkansal","avatarUrl":"https://avatars1.githubusercontent.com/u/10217535?v=4"},"assignee":{"login":"Thanos983","avatarUrl":"https://avatars2.githubusercontent.com/u/15125230?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"},{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1521041081000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3885","number":3885,"title":"Our Diff class sucks --> Switch to \"modified-file coordinate system\"","body":"When changing lines inside a Diff object, it uses the old lines as reference. It also doesn't allow a modification to a line that was once modified. This behaviour highly sucks and should be changed to pick up the \"new\" lines and their respective line numbers, and modifications would work on these.\nI already had problems with that, and currently @satwikkansal is implementing a from_unified_diff method that generates a Diff object out of a unified diff patch. I already wondered why his code is so damn complicated and tried to implement a shorter prototype, and though I think his code is even too complicated for our current Diff, complexity could be way more reduced by using the \"modified-file coordinate system\".\n+ imo this behaviour would be way more intuitive and also allows easily multiple additions and deletions to the same line.\nPlease let's make our diff not sucking any more...","comments":45,"createdAt":"2017-03-09T20:14:22Z","updatedAt":"2018-03-14T15:24:41Z","closedAt":null,"state":"open","user":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"owner":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"assignee":{"login":"Vedarth","avatarUrl":"https://avatars2.githubusercontent.com/u/22793275?v=4"},"labels":[{"name":"area/core","color":"eb6420"},{"name":"difficulty/medium","color":"0052cc"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1493817571000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3887","number":3887,"title":"Use PYTHON_ARGCOMPLETE_OK","body":"coala documentation says argcomplete can be used, but it was recently broken: coala/documentation#424\nCurrently coalib/parsing/DefaultArgParser.py has the following\n    try:  # pragma: no cover\n        # Auto completion should be optional, because of somewhat complicated\n        # setup.\n        import argcomplete\n        argcomplete.autocomplete(arg_parser)\n    except ImportError:\n        pass\n\nnote that argcomplete is not mentioned in setup.py or requirements.txt, or test-requirements.txt\nIf we are going to keep that chunk of code above, the dependency should be mentioned in at least setup.py, and in test-requirements, and a real test written.\nOne way to avoid that is to use argcomplete's automatic mode PYTHON_ARGCOMPLETE_OK.","comments":4,"createdAt":"2017-03-10T09:49:05Z","updatedAt":"2017-05-03T13:19:31Z","closedAt":"2017-05-03T12:22:06Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"alisianoi","avatarUrl":"https://avatars2.githubusercontent.com/u/962850?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1489375610000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3898","number":3898,"title":"misc/DictUtilities.py: Switch into defaultdict","body":"inverse is now dict.\nIf we switch into defaultdict, we don't have to check whether it is None or not.","comments":0,"createdAt":"2017-03-12T01:39:04Z","updatedAt":"2017-03-13T03:26:50Z","closedAt":"2017-03-13T03:26:50Z","state":"closed","user":{"login":"corona10","avatarUrl":"https://avatars2.githubusercontent.com/u/5110323?v=4"},"owner":{"login":"corona10","avatarUrl":"https://avatars2.githubusercontent.com/u/5110323?v=4"},"assignee":{"login":"corona10","avatarUrl":"https://avatars2.githubusercontent.com/u/5110323?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1524091775000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3901","number":3901,"title":"Mention GitLab coala in newcomers guide","body":"difficulty/newcomer\nOpened via gitter by @jayvdb","comments":5,"createdAt":"2017-03-12T04:26:02Z","updatedAt":"2018-04-18T22:49:35Z","closedAt":"2018-04-18T22:49:35Z","state":"closed","user":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"owner":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"assignee":{"login":"amisha2016","avatarUrl":"https://avatars0.githubusercontent.com/u/17342222?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1513849494000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3902","number":3902,"title":"Mention GitLab coala-utils in Development Setup","body":"https://gitlab.com/coala/package_manager/ and https://gitlab.com/coala/coala-utils/ are fundamental parts of coala, and should be obtained from Git while setting up a development environment.  This also helps familiarise the developer with the fact that GitLab is part of the coala ecosystem.\ndifficulty/newcomer\nOpened via gitter by @jayvdb","comments":9,"createdAt":"2017-03-12T04:32:29Z","updatedAt":"2017-12-21T09:44:54Z","closedAt":"2017-12-21T09:44:54Z","state":"closed","user":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"owner":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"assignee":{"login":"wisn","avatarUrl":"https://avatars1.githubusercontent.com/u/8147926?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1523701854000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3903","number":3903,"title":"Rewrite \"Installing from Git\" in Development Setup","body":"The first sentence of \"Installing from Git\" in Development Setup is almost unintelligible, bordering on gobble-de-gook.\nAnd the second code sample (venv)$ pip3 install -e <path/to/clone> is identical to the previous code sample in what it achieves, but it is described as if it is different. Remove it, and properly describe the first code sample.\ndifficulty/newcomer\nOpened via gitter by @jayvdb","comments":9,"createdAt":"2017-03-12T04:36:16Z","updatedAt":"2018-04-14T10:30:54Z","closedAt":"2018-04-14T10:30:54Z","state":"closed","user":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"owner":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"assignee":{"login":"EverWinter23","avatarUrl":"https://avatars0.githubusercontent.com/u/21227016?v=4"},"labels":[{"name":"difficulty/medium","color":"0052cc"},{"name":"importance/medium","color":"fbca04"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1490400284000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3904","number":3904,"title":"Centralise the error strings to prevent conflicts","body":"In Issues: #3808 , #3374, some tests are told to be changed and it is emphasized that they should check for the correct error string.\nThere is #3894 which changes  pytest.raises  to assertRaisesRegex, so that it would assert that the error string matches a given regular expression, but the problem is: the same error string is altered in #3900 . Now, if any one of the PR is merged, then it might cause problems for the other.\nIMHO, we should consider centralizing the error strings.","comments":8,"createdAt":"2017-03-12T10:49:49Z","updatedAt":"2017-03-25T00:04:44Z","closedAt":null,"state":"open","user":{"login":"RJ722","avatarUrl":"https://avatars1.githubusercontent.com/u/15556382?v=4"},"owner":{"login":"RJ722","avatarUrl":"https://avatars1.githubusercontent.com/u/15556382?v=4"},"labels":[{"name":"area/tests","color":"bfd4f2"},{"name":"status/needs design","color":"5319e7"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1493174715000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3906","number":3906,"title":"Fail to install and py.test on docker environment.","body":"When I try to install by python setup.py install, it is failed with this message.\nUnicodeEncodeError: 'ascii' codec can't encode character '\\xfc' in position 15224: ordinal not in range(128)\nAlso, the same happening when I try to run unit test on local.\nIt needs to be fixed.","comments":5,"createdAt":"2017-03-12T13:47:36Z","updatedAt":"2017-04-26T02:45:15Z","closedAt":"2017-04-26T02:45:15Z","state":"closed","user":{"login":"corona10","avatarUrl":"https://avatars2.githubusercontent.com/u/5110323?v=4"},"owner":{"login":"corona10","avatarUrl":"https://avatars2.githubusercontent.com/u/5110323?v=4"},"assignee":{"login":"corona10","avatarUrl":"https://avatars2.githubusercontent.com/u/5110323?v=4"},"labels":[{"name":"area/install","color":"bfdadc"},{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1489766853000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3909","number":3909,"title":"Follow PEP8 guidelines for module filenames","body":"https://www.python.org/dev/peps/pep-0008/#package-and-module-names\nOpened via gitter by @adtac","comments":6,"createdAt":"2017-03-12T14:48:35Z","updatedAt":"2017-03-17T16:07:33Z","closedAt":null,"state":"open","user":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"owner":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"labels":[{"name":"status/needs design","color":"5319e7"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1489341579000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3910","number":3910,"title":"Making coala Self Aware of the language of file.","body":"When adding ignore comment to a file the program asks of what language it should be of.\nWe could automate that by making coala self aware of what language it really is.","comments":1,"createdAt":"2017-03-12T17:26:21Z","updatedAt":"2017-03-12T17:59:39Z","closedAt":null,"state":"open","user":{"login":"parvmor","avatarUrl":"https://avatars3.githubusercontent.com/u/20877360?v=4"},"owner":{"login":"parvmor","avatarUrl":"https://avatars3.githubusercontent.com/u/20877360?v=4"},"assignee":{"login":"pratyushprakash","avatarUrl":"https://avatars1.githubusercontent.com/u/18013053?v=4"},"labels":[{"name":"status/needs design","color":"5319e7"},{"name":"status/needs info","color":"006b75"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1489575063000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3911","number":3911,"title":"Writing_Linter_Bears.rst: Change rcfile to pylint_rcfile","body":"Change rcfile to pylint_rcfile in the following code snippet:\n$ coala --bear-dirs=. --bears=PythonTutorialBear \\\n> -S rcfile=my_rcfile --files=sample.py\n\ndifficulty/newcomer\narea/documentation","comments":0,"createdAt":"2017-03-12T18:17:04Z","updatedAt":"2017-03-15T10:51:03Z","closedAt":"2017-03-15T10:51:03Z","state":"closed","user":{"login":"yash-nisar","avatarUrl":"https://avatars1.githubusercontent.com/u/14862976?v=4"},"owner":{"login":"yash-nisar","avatarUrl":"https://avatars1.githubusercontent.com/u/14862976?v=4"},"assignee":{"login":"kimichael","avatarUrl":"https://avatars2.githubusercontent.com/u/11247755?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/low","color":"207de5"},{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1495677888000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3912","number":3912,"title":"core: Write to files only after checking that Diff._file == Current state of file","body":"What coala does:\n\nLoads all the files needed(passed from -f) into memory.\nBears propose results and hence create the diffs.\nIf there are no merge conflicts, by the end of the execution, the file is overwritten.\n\nThe problem arises when user changes file between calling coala i.e. loading and writing.\nFor example:\n\nSuppose I had some error reported by PEP8Bear on a python file. It even proposed a patch. But since it was taking some time for execution, I switch windows and edited that file in my text editor. Now the file loaded in memory by coala and the file currently on harddrive are different.\nI switch back to coala console, and applied the patch.\nWhat happens is: All the changes that I done, are lost! That is so not what I expect from coala.!\n\nWhat I propose as a solution is:\n\nJust before writing of the file, we read the file again and then check it against Diff._file. This is a performance drop, but the user data is safe!\n\nEdit: This has been confirmed locally","comments":13,"createdAt":"2017-03-12T21:09:49Z","updatedAt":"2017-05-25T02:04:48Z","closedAt":null,"state":"open","user":{"login":"meetmangukiya","avatarUrl":"https://avatars0.githubusercontent.com/u/7620533?v=4"},"owner":{"login":"meetmangukiya","avatarUrl":"https://avatars0.githubusercontent.com/u/7620533?v=4"},"assignee":{"login":"meetmangukiya","avatarUrl":"https://avatars0.githubusercontent.com/u/7620533?v=4"},"labels":[{"name":"area/actions","color":"207de5"},{"name":"area/core","color":"eb6420"},{"name":"difficulty/medium","color":"0052cc"},{"name":"status/blocked","color":"e11d21"},{"name":"status/needs design","color":"5319e7"},{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1489699933000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3914","number":3914,"title":"core/performance : Add command 'coala-perf-test' to collect runtime info of users to analyze","body":"I propose to add a new class \"PerformanceTest.py\" , which takes  various situations into consideration and analyzes loading time on a function level , at 'execution of Section' Level and also for individual Bears in coala and plots appropriate graphs/heatmaps and dumps a file. This has two advantages :\n\n\nWe get a vivid idea  of where exactly we are lacking more in terms of performance because of the visualization.\n\n\nWe can use this command to dump a file which can be uploaded by user for average time analysis to improve end user's performance.","comments":6,"createdAt":"2017-03-13T11:31:43Z","updatedAt":"2017-03-16T21:32:13Z","closedAt":null,"state":"open","user":{"login":"Siddhartha1234","avatarUrl":"https://avatars3.githubusercontent.com/u/18551427?v=4"},"owner":{"login":"Siddhartha1234","avatarUrl":"https://avatars3.githubusercontent.com/u/18551427?v=4"},"assignee":{"login":"Siddhartha1234","avatarUrl":"https://avatars3.githubusercontent.com/u/18551427?v=4"},"labels":[{"name":"type/performance","color":"fef2c0"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1489411725000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3915","number":3915,"title":"performance: Use cib to load all bears","body":"Use cib to load all bears.","comments":1,"createdAt":"2017-03-13T13:28:36Z","updatedAt":"2017-03-13T13:28:45Z","closedAt":null,"state":"open","user":{"login":"Nosferatul","avatarUrl":"https://avatars2.githubusercontent.com/u/15227444?v=4"},"owner":{"login":"Nosferatul","avatarUrl":"https://avatars2.githubusercontent.com/u/15227444?v=4"},"labels":[{"name":"type/performance","color":"fef2c0"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1489700460000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3916","number":3916,"title":"Do not use join so often","body":"I used vmprof on several files from the repo and I realize that a join is expensive in most of the cases. Could we come with a better alternative?","comments":4,"createdAt":"2017-03-13T14:41:46Z","updatedAt":"2017-03-16T21:41:00Z","closedAt":null,"state":"open","user":{"login":"Nosferatul","avatarUrl":"https://avatars2.githubusercontent.com/u/15227444?v=4"},"owner":{"login":"Nosferatul","avatarUrl":"https://avatars2.githubusercontent.com/u/15227444?v=4"},"labels":[{"name":"type/performance","color":"fef2c0"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1521067305000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3917","number":3917,"title":"Ensure we don't use `yield_once` unnecessarily","body":"#2912","comments":5,"createdAt":"2017-03-13T15:02:31Z","updatedAt":"2018-03-14T22:41:45Z","closedAt":null,"state":"open","user":{"login":"Nosferatul","avatarUrl":"https://avatars2.githubusercontent.com/u/15227444?v=4"},"owner":{"login":"Nosferatul","avatarUrl":"https://avatars2.githubusercontent.com/u/15227444?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"},{"name":"status/needs info","color":"006b75"},{"name":"type/performance","color":"fef2c0"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1489538777000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3919","number":3919,"title":"mention git-repo in dev docs","body":"Following on from #3856, I am also liking git-repo, which has a smaller list of commands, but supports gitlab also.  It uses two remotes (gitlab/github and upstream), but git-repo is not in Fedora or Ubuntu.  It is however in pypi, so it is easy to get with pip.","comments":0,"createdAt":"2017-03-15T00:46:13Z","updatedAt":"2017-03-15T00:46:17Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1510167543000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3920","number":3920,"title":"Docs generator should detect invalid class names in :class:","body":"e.g. the error fixed in #3842 should have been detected when the code was uploaded.\ndifficulty/low\nOpened via gitter by @jayvdb","comments":6,"createdAt":"2017-03-15T04:59:21Z","updatedAt":"2017-11-08T18:59:03Z","closedAt":null,"state":"open","user":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"owner":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"assignee":{"login":"RJ722","avatarUrl":"https://avatars1.githubusercontent.com/u/15556382?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1490647946000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3921","number":3921,"title":"docs: Use python3 and pip3 everywhere","body":"It should be mentioned how to deal if user has both python 2 and python 3 installed in system (ubuntu)","comments":6,"createdAt":"2017-03-15T10:19:09Z","updatedAt":"2017-03-27T20:52:26Z","closedAt":"2017-03-27T20:52:26Z","state":"closed","user":{"login":"jack17529","avatarUrl":"https://avatars2.githubusercontent.com/u/15366183?v=4"},"owner":{"login":"jack17529","avatarUrl":"https://avatars2.githubusercontent.com/u/15366183?v=4"},"assignee":{"login":"jack17529","avatarUrl":"https://avatars2.githubusercontent.com/u/15366183?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1489670528000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3926","number":3926,"title":"docs: Mention that the only way to familiarise yourself with the codebase is to practice and take up new issues","body":"Opened via gitter by @adtac","comments":0,"createdAt":"2017-03-15T15:05:04Z","updatedAt":"2017-03-16T13:22:08Z","closedAt":"2017-03-16T13:22:08Z","state":"closed","user":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"owner":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"assignee":{"login":"sinwar","avatarUrl":"https://avatars3.githubusercontent.com/u/9110208?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1489665471000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3928","number":3928,"title":"tests/aspects: Replace \\ with () for line continuation","body":"tests/bearlib/aspects/InstanceTest.py:            assert str(exc.value) \\\ntests/bearlib/aspects/InstanceTest.py:            assert str(exc.value) \\\ntests/bearlib/aspects/SubTest.py:                    assert getattr(aspect, name) == taste_values[name] \\\ntests/bearlib/aspects/SubTest.py:        assert SubAspect('py', **SubAspect_taste_values) \\\ntests/bearlib/aspects/SubTest.py:        assert not SubAspect('py') \\\ntests/bearlib/aspects/SubTest.py:        assert not SubAspect('py', **SubAspect_taste_values) \\\ntests/bearlib/aspects/SubTest.py:        assert not SubAspect('py', **SubAspect_taste_values) \\\ntests/bearlib/aspects/TasteTest.py:            assert getattr(using_custom_values, name) \\\n\nUse of \\ for line continuation is not appreciated in coala. These are the instances where \\ is used instead of enclosing braces for line continuation.","comments":0,"createdAt":"2017-03-15T18:30:11Z","updatedAt":"2017-03-16T11:57:51Z","closedAt":null,"state":"open","user":{"login":"Techievena","avatarUrl":"https://avatars2.githubusercontent.com/u/17270966?v=4"},"owner":{"login":"Techievena","avatarUrl":"https://avatars2.githubusercontent.com/u/17270966?v=4"},"assignee":{"login":"sinwar","avatarUrl":"https://avatars3.githubusercontent.com/u/9110208?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1491250786000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3929","number":3929,"title":"TasteTest: Add missing field","body":">>> taste.__dict__\n{'suggested_values': (), 'languages': (), 'default': None, 'description': ''}\n\ntaste.languages field missing in test__init__defaults function","comments":0,"createdAt":"2017-03-15T18:42:06Z","updatedAt":"2017-04-03T20:19:46Z","closedAt":"2017-04-03T20:19:46Z","state":"closed","user":{"login":"Techievena","avatarUrl":"https://avatars2.githubusercontent.com/u/17270966?v=4"},"owner":{"login":"Techievena","avatarUrl":"https://avatars2.githubusercontent.com/u/17270966?v=4"},"assignee":{"login":"madhukar01","avatarUrl":"https://avatars0.githubusercontent.com/u/15910378?v=4"},"labels":[{"name":"area/aspects","color":"000000"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1490594332000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3930","number":3930,"title":"Newcomer's Guide.rst: Add documentation for deleting a commit from a branch","body":"Opened via gitter by @supergr35","comments":1,"createdAt":"2017-03-15T22:07:52Z","updatedAt":"2017-03-27T05:58:52Z","closedAt":null,"state":"open","user":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"owner":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1490683797000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3931","number":3931,"title":"tests/aspects: Closing braces must be in same line as the last line of block/condition","body":"There are instances of\nif (\n    condition\n   ):\n\nwhereas coala always follows this codestyle\nif (\n    condition):","comments":5,"createdAt":"2017-03-16T01:29:25Z","updatedAt":"2017-03-28T06:49:57Z","closedAt":"2017-03-28T06:49:57Z","state":"closed","user":{"login":"Techievena","avatarUrl":"https://avatars2.githubusercontent.com/u/17270966?v=4"},"owner":{"login":"Techievena","avatarUrl":"https://avatars2.githubusercontent.com/u/17270966?v=4"},"assignee":{"login":"RJ722","avatarUrl":"https://avatars1.githubusercontent.com/u/15556382?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1527670425000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3938","number":3938,"title":"cib install fails","body":"Installed with (also tried with python3.5, just in case, same thing):\n ~/ mkvirtualenv -p python3 coala\nRunning virtualenv with interpreter /usr/local/bin/python3\nUsing base prefix '/usr/local/Cellar/python3/3.6.0_1/Frameworks/Python.framework/Versions/3.6'\nNew python executable in /Users/kenji/.virtualenvs/coala/bin/python3.6\nAlso creating executable in /Users/kenji/.virtualenvs/coala/bin/python\nInstalling setuptools, pip, wheel...done.\nvirtualenvwrapper.user_scripts creating /Users/kenji/.virtualenvs/coala/bin/predeactivate\nvirtualenvwrapper.user_scripts creating /Users/kenji/.virtualenvs/coala/bin/postdeactivate\nvirtualenvwrapper.user_scripts creating /Users/kenji/.virtualenvs/coala/bin/preactivate\nvirtualenvwrapper.user_scripts creating /Users/kenji/.virtualenvs/coala/bin/postactivate\nvirtualenvwrapper.user_scripts creating /Users/kenji/.virtualenvs/coala/bin/get_env_details\n(coala)  ~/ pip --version\npip 9.0.1 from /Users/kenji/.virtualenvs/coala/lib/python3.6/site-packages (python 3.6)\n(coala)  ~/ pip install coala cib\nCollecting coala\n  Using cached coala-0.10.0-py34.py35.py36-none-any.whl\nCollecting cib\nCollecting dependency-management~=0.3.1 (from coala)\n  Using cached dependency_management-0.3.1-py3-none-any.whl\nCollecting libclang-py3~=3.4.0 (from coala)\nCollecting colorlog~=2.7 (from coala)\n  Using cached colorlog-2.10.0-py2.py3-none-any.whl\nRequirement already satisfied: appdirs~=1.4 in ./.virtualenvs/coala/lib/python3.6/site-packages (from coala)\nCollecting Pygments~=2.1 (from coala)\n  Using cached Pygments-2.2.0-py2.py3-none-any.whl\nCollecting requests~=2.12 (from coala)\n  Using cached requests-2.13.0-py2.py3-none-any.whl\nCollecting PyPrint~=0.2.6 (from coala)\n  Using cached PyPrint-0.2.6-py3-none-any.whl\nCollecting coala-utils~=0.6.0 (from coala)\n  Using cached coala_utils-0.6.2-py3-none-any.whl\nCollecting termcolor==1.1.0 (from cib)\nCollecting docopt==0.6.2 (from cib)\nCollecting sarge~=0.1.4 (from dependency-management~=0.3.1->coala)\nCollecting colorama~=0.3.7 (from PyPrint~=0.2.6->coala)\n  Using cached colorama-0.3.7-py2.py3-none-any.whl\nInstalling collected packages: coala-utils, sarge, dependency-management, libclang-py3, colorlog, Pygments, requests, termcolor, colorama, PyPrint, coala, docopt, cib\nSuccessfully installed PyPrint-0.2.6 Pygments-2.2.0 cib-0.5.7 coala-0.10.0 coala-utils-0.6.2 colorama-0.3.7 colorlog-2.10.0 dependency-management-0.3.1 docopt-0.6.2 libclang-py3-3.4.0 requests-2.13.0 sarge-0.1.4 termcolor-1.1.0\nTrying to use cib:\n(coala)  ~/ cib install PEP8Bear\nPEP8Bear is installing...  Traceback (most recent call last):\n  File \"/Users/kenji/.virtualenvs/coala/bin/cib\", line 11, in <module>\n    sys.exit(main())\n  File \"/Users/kenji/.virtualenvs/coala/lib/python3.6/site-packages/coala_package_manager/installation_tool.py\", line 216, in main\n    args['--ignore-deps'])\n  File \"/Users/kenji/.virtualenvs/coala/lib/python3.6/site-packages/coala_package_manager/installation_tool.py\", line 144, in install_bears\n    if not PipRequirement(bear_name).install_package():\nAttributeError: 'PipRequirement' object has no attribute 'install_package'\nTried several different bears, same result.","comments":6,"createdAt":"2017-03-16T20:31:50Z","updatedAt":"2018-05-30T08:53:45Z","closedAt":null,"state":"open","user":{"login":"KenjiTakahashi","avatarUrl":"https://avatars1.githubusercontent.com/u/431488?v=4"},"owner":{"login":"KenjiTakahashi","avatarUrl":"https://avatars1.githubusercontent.com/u/431488?v=4"},"assignee":{"login":"anctartica","avatarUrl":"https://avatars0.githubusercontent.com/u/7020962?v=4"},"labels":[{"name":"area/install","color":"bfdadc"},{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1491838132000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3940","number":3940,"title":"Missing function in coalib/misc/Shell.py","body":"Fucntion call_without_output missing in shell.py\nWhich is needed fot installation of cib\nFile \"/home/helios/coala_env/lib/python3.5/site-packages/coala_package_manager/installation_tool.py\", line 29, in <module> from coalib.misc.Shell import call_without_output ImportError: cannot import name 'call_without_output'","comments":1,"createdAt":"2017-03-17T13:31:26Z","updatedAt":"2017-04-10T15:28:52Z","closedAt":"2017-04-10T15:28:52Z","state":"closed","user":{"login":"madhukar01","avatarUrl":"https://avatars0.githubusercontent.com/u/15910378?v=4"},"owner":{"login":"madhukar01","avatarUrl":"https://avatars0.githubusercontent.com/u/15910378?v=4"},"assignee":{"login":"d3db0t","avatarUrl":"https://avatars3.githubusercontent.com/u/23397384?v=4"},"labels":[{"name":"area/install","color":"bfdadc"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1490025873000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3941","number":3941,"title":"Bears list should be case-insensitive order.","body":"Case A is better for users than case B when they are finding bears by eyes.\nCase A:\n$ coala -B\nAlexBear\nAnnotationBear\nBanditBear\nBootLintBear\nCheckstyleBear\nClangASTPrintBear\nClangBear\nClangCloneDetectionBear\nClangComplexityBear\nClangFunctionDifferenceBear\nCMakeLintBear\ncoalaBear\nCoffeeLintBear\nCPDBear\n ....\n ....\nVultureBear\nWriteGoodLintBear\nXMLBear\nYAMLLintBear\nYapfBear\n\nCase B(Current):\n$ coala -B\n\nAlexBear\nAnnotationBear\nBanditBear\nBootLintBear\nCMakeLintBear\nCPDBear\nCPPCheckBear\nCPPCleanBear\nCPPLintBear\nCSSAutoPrefixBear\nCSSLintBear\nCSVLintBear\nCSecurityBear\nCSharpLintBear\nCheckstyleBear\nClangASTPrintBear\nClangBear\nClangCloneDetectionBear\nClangComplexityBear\nClangFunctionDifferenceBear\nCoffeeLintBear\nDartLintBear\n...\n...\nXMLBear\nYAMLLintBear\nYapfBear\ncoalaBear\nreSTLintBear","comments":3,"createdAt":"2017-03-17T14:09:19Z","updatedAt":"2017-03-20T16:04:33Z","closedAt":"2017-03-20T16:04:33Z","state":"closed","user":{"login":"corona10","avatarUrl":"https://avatars2.githubusercontent.com/u/5110323?v=4"},"owner":{"login":"corona10","avatarUrl":"https://avatars2.githubusercontent.com/u/5110323?v=4"},"assignee":{"login":"corona10","avatarUrl":"https://avatars2.githubusercontent.com/u/5110323?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1505361815000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3944","number":3944,"title":"Create a new initiatives/gsoc label","body":"Creating a new initiatives/gsoc label would prevent it from being assigned to people who are not aware of the projects shortlisted for gsoc. Can be assigned to a person with write access. :)","comments":3,"createdAt":"2017-03-17T18:34:22Z","updatedAt":"2017-09-14T04:03:35Z","closedAt":"2017-09-14T04:03:35Z","state":"closed","user":{"login":"yash-nisar","avatarUrl":"https://avatars1.githubusercontent.com/u/14862976?v=4"},"owner":{"login":"yash-nisar","avatarUrl":"https://avatars1.githubusercontent.com/u/14862976?v=4"},"labels":[{"name":"initiatives/gci","color":"e99695"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1490694526000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3946","number":3946,"title":"deprecate_settings doesn't return __doc__ of the wrapping function","body":"Try:\nfrom bears.python.PyImportSortBear import PyImportSortBear\nfrom coalib.settings.Section import Section\nfrom queue import Queue\n\nbear = PyImportSortBear(Section(''), Queue())\nbear.__doc__ # is '', doc string is lost\n\nfrom bears.python.PEP8NotebookBear import PEP8NotebookBear\nbear = PEP8NotebookBear(Section(''), Queue())\nbear.__doc__ # this has doc string\nSo this mostly confirms it is the decorator","comments":6,"createdAt":"2017-03-18T12:57:55Z","updatedAt":"2017-03-28T09:48:46Z","closedAt":"2017-03-26T06:36:59Z","state":"closed","user":{"login":"meetmangukiya","avatarUrl":"https://avatars0.githubusercontent.com/u/7620533?v=4"},"owner":{"login":"meetmangukiya","avatarUrl":"https://avatars0.githubusercontent.com/u/7620533?v=4"},"assignee":{"login":"Flap-Py","avatarUrl":"https://avatars2.githubusercontent.com/u/11754275?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"},{"name":"importance/high","color":"eb6420"},{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1490109142000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3947","number":3947,"title":"docs: Mention in rebase docs that they should rebase with coala remote","body":"The docs should specify that the origin in the example is the remote of github.com/coala/coala\ndifficulty/newcomer\nOpened via gitter by @meetmangukiya","comments":0,"createdAt":"2017-03-18T14:26:08Z","updatedAt":"2017-03-21T15:12:22Z","closedAt":"2017-03-21T15:12:22Z","state":"closed","user":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"owner":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"assignee":{"login":"PierceAndy","avatarUrl":"https://avatars3.githubusercontent.com/u/8639005?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1492003933000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3948","number":3948,"title":"Git_Basics.rst: Be more clear on which repo to clone","body":"The docs give instructions to clone the main repos, but then tell the users it is ideal to clone their fork.\ndifficulty/newcomer\nOpened via gitter by @supergr35","comments":4,"createdAt":"2017-03-18T14:34:27Z","updatedAt":"2017-04-12T13:32:13Z","closedAt":"2017-04-12T13:32:13Z","state":"closed","user":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"owner":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"assignee":{"login":"PierceAndy","avatarUrl":"https://avatars3.githubusercontent.com/u/8639005?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"},{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1489912677000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3950","number":3950,"title":"caching: coala doesn't give any results on consecutive runs, if no files are altered","body":"Situation:\nI have some files that are not coala compliant, so coala complaints on coala. After coala has finished running, I do not alter a single line, in any file or to be more precise, the timestamps are the same for each file. Now run coala again and one doesn't get any results, because coala assumes, there is no change at all, so it doesn't run.\nWhich makes the user think that it is all fixed.\nThis should be fixed, or is it the cost of caching? cc/ @adtac\nI think one can reproduce the bug, doing the same steps as above.","comments":7,"createdAt":"2017-03-19T07:32:10Z","updatedAt":"2017-03-19T08:37:57Z","closedAt":null,"state":"open","user":{"login":"meetmangukiya","avatarUrl":"https://avatars0.githubusercontent.com/u/7620533?v=4"},"owner":{"login":"meetmangukiya","avatarUrl":"https://avatars0.githubusercontent.com/u/7620533?v=4"},"labels":[{"name":"status/cant reproduce","color":"006b75"},{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1490103774000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3952","number":3952,"title":"One test fails locally: OpenEditorActionTest.test_environ_editor","body":"Here is how to reproduce it on my machine:\nvirtualenv3 coala-venv-3.6.0\nsource ./coala-venv-3.6.0/bin/activate\npip3 install -r docs-requirements.txt\npytest\n\nThen, it collects 620 items to test, runs the tests and informs me of a single failure:\n======================================================= short test summary info ========================================================\nFAIL tests/results/result_actions/OpenEditorActionTest.py::OpenEditorActionTest::test_environ_editor\n\n=============================================================== FAILURES ===============================================================\n_______________________________________________ OpenEditorActionTest.test_environ_editor _______________________________________________\n\nself = <tests.results.result_actions.OpenEditorActionTest.OpenEditorActionTest testMethod=test_environ_editor>\n\n    def test_environ_editor(self):\n        old_environ = os.environ\n    \n        file_dict = {self.fb: ['1\\n', '2\\n', '3\\n']}\n        diff_dict = {}\n        subprocess.call = self.fake_edit\n        with open(self.fb, 'w') as handle:\n            handle.writelines(file_dict[self.fb])\n        result = Result.from_values('origin', 'msg', self.fb)\n    \n        # Currently an ``editor`` param is required, so this will raise\n        # a ``TypeError``.\n        from coalib.results.result_actions.OpenEditorAction import (\n            OpenEditorAction)\n        action = OpenEditorAction()\n        with self.assertRaises(TypeError):\n>           action.apply(result, file_dict, diff_dict)\nE           AssertionError: TypeError not raised\n\ntests/results/result_actions/OpenEditorActionTest.py:161: AssertionError\n================================================ 1 failed, 619 passed in 32.91 seconds =================================================\n\nAlright, this test seems to be doing something with a spawned editor. My .zshrc defines a function called emacs (named exactly like the editor):\nfunction emacs() {/usr/bin/emacs $@ -mm &}\n\nThis is my convenience function that spawns /usr/bin/emacs, passes all of the parameters to it through $@, then forces maximized mode with -mm and finally detaches it from console with &.\nSo, I commented it out and restarted my shell. The changes took effect because emacs was:\nalex@tardis ~/Code/coala (git)-[master] % type emacs\nemacs is /usr/bin/emacs\n\nHowever, the tests still failed on that single test case.\nFinally, I did echo $EDITOR and for some reason it showed me vi.\nCould someone untangle that for me? A human 5 sentence explanation for the OpenEditorAction class and the test_environ_editor functions would be nice.\nAlso summonning @adtac as they seem to be the author of that particular test case.","comments":1,"createdAt":"2017-03-19T13:13:46Z","updatedAt":"2017-03-21T13:42:54Z","closedAt":"2017-03-21T13:42:54Z","state":"closed","user":{"login":"alisianoi","avatarUrl":"https://avatars2.githubusercontent.com/u/962850?v=4"},"owner":{"login":"alisianoi","avatarUrl":"https://avatars2.githubusercontent.com/u/962850?v=4"},"assignee":{"login":"adtac","avatarUrl":"https://avatars2.githubusercontent.com/u/7521600?v=4"},"labels":[{"name":"area/tests","color":"bfd4f2"},{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1491816233000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3955","number":3955,"title":"Asserion error in Tests and Travis","body":"Errors are occuring due to http://httpbin.org/status/418 returning 500 Internal server error instead of 418 client error.\nDue to this Travis builds, local py.test and appveryor builds are failing.\nNone of the PR made now are going to pass the tests.\nAssertionError: \"418 Client Error\" does not match \"500 Server Error: INTERNAL SERVER ERROR for url: http://httpbin.org/status/418\" tests/bears/BearTest.py:328: AssertionError","comments":2,"createdAt":"2017-03-20T04:15:56Z","updatedAt":"2017-04-10T09:23:53Z","closedAt":"2017-04-10T09:23:53Z","state":"closed","user":{"login":"madhukar01","avatarUrl":"https://avatars0.githubusercontent.com/u/15910378?v=4"},"owner":{"login":"madhukar01","avatarUrl":"https://avatars0.githubusercontent.com/u/15910378?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1516211201000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3956","number":3956,"title":"docs: typo error","body":"You can help us testing coala in several ways.: testing should be test. (difficulty/newcomer)\nOpened via gitter by @PierceAndy","comments":22,"createdAt":"2017-03-20T04:18:33Z","updatedAt":"2018-01-17T17:46:41Z","closedAt":"2018-01-17T17:46:41Z","state":"closed","user":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"owner":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"assignee":{"login":"Kagamihime","avatarUrl":"https://avatars0.githubusercontent.com/u/25638564?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1495702766000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3958","number":3958,"title":"Newcomers guide: Add introduction to Gitter ","body":"A Gitter section should be added to the newcomers guide, probably in \"Step 1: Meet the community\" or as a separate page linked from there.\nIt should include:\n\nShort intro (What is Gitter?)\nExplain which channels are there. (Including non-repo related ones like offtopic, conferences....)\nExplain Gitter Etiquette, i.e. don't @-mention or private message people unless they are the only one who could help you. Don't continuously @-mention in an ongoing conversation.","comments":4,"createdAt":"2017-03-20T15:25:05Z","updatedAt":"2017-05-25T08:59:26Z","closedAt":"2017-05-25T08:59:26Z","state":"closed","user":{"login":"NiklasMM","avatarUrl":"https://avatars1.githubusercontent.com/u/1924002?v=4"},"owner":{"login":"NiklasMM","avatarUrl":"https://avatars1.githubusercontent.com/u/1924002?v=4"},"assignee":{"login":"mubaris","avatarUrl":"https://avatars0.githubusercontent.com/u/13871723?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/low","color":"207de5"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1492825459000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3961","number":3961,"title":"Appveyor failing because curl doesn't exist","body":"","comments":6,"createdAt":"2017-03-21T12:46:39Z","updatedAt":"2017-04-22T01:44:19Z","closedAt":"2017-03-21T13:19:54Z","state":"closed","user":{"login":"adtac","avatarUrl":"https://avatars2.githubusercontent.com/u/7521600?v=4"},"owner":{"login":"adtac","avatarUrl":"https://avatars2.githubusercontent.com/u/7521600?v=4"},"assignee":{"login":"adtac","avatarUrl":"https://avatars2.githubusercontent.com/u/7521600?v=4"},"labels":[{"name":"area/tests","color":"bfd4f2"},{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1490464329000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3963","number":3963,"title":"OpenEditorActionTest: Move `old_environ` to setup and teardown","body":"(difficulty/newcomer)\nOpened via gitter by @adtac","comments":2,"createdAt":"2017-03-21T13:43:01Z","updatedAt":"2017-03-25T17:52:09Z","closedAt":"2017-03-25T17:52:09Z","state":"closed","user":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"owner":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"assignee":{"login":"sasacocic","avatarUrl":"https://avatars0.githubusercontent.com/u/10764579?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1490464328000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3968","number":3968,"title":"Writing_Linter_Bears.rst: Add documentation for global linter Bears","body":"#3652 has added support for global linter bears.\nWe need to also add this to the documentation.","comments":0,"createdAt":"2017-03-22T14:12:52Z","updatedAt":"2017-03-25T17:52:08Z","closedAt":"2017-03-25T17:52:08Z","state":"closed","user":{"login":"NiklasMM","avatarUrl":"https://avatars1.githubusercontent.com/u/1924002?v=4"},"owner":{"login":"NiklasMM","avatarUrl":"https://avatars1.githubusercontent.com/u/1924002?v=4"},"assignee":{"login":"NiklasMM","avatarUrl":"https://avatars1.githubusercontent.com/u/1924002?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1500488822000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3969","number":3969,"title":"Prompt users if they want to install `coala-bears` if they install coala","body":"Terminal prompt for:\nWould you also like to install coala-bears (https://github.com/coala/coala-bears)? (Yes / No)\n\nNot sure if we want this. Open for discussion.\nOpened via gitter by @RohanVB","comments":5,"createdAt":"2017-03-22T15:25:48Z","updatedAt":"2017-07-19T18:27:02Z","closedAt":null,"state":"open","user":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"owner":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"assignee":{"login":"supergr35","avatarUrl":"https://avatars2.githubusercontent.com/u/23623348?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1491372911000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3971","number":3971,"title":"Git_Basics.rst: Tell newcomers to use their favorite search engine if they would like more information/commands","body":"Opened via gitter by @supergr35","comments":2,"createdAt":"2017-03-22T19:40:27Z","updatedAt":"2017-04-05T06:15:11Z","closedAt":"2017-04-05T06:15:11Z","state":"closed","user":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"owner":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"assignee":{"login":"gopalgoel19","avatarUrl":"https://avatars0.githubusercontent.com/u/11490517?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"},{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1490804004000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3972","number":3972,"title":"Linter.py docstring: Annotate parameters in code examples","body":"The third example using generate_config should have the params lintmode and enable_aggressive_lints annotated with str and bool respectively. Also the str function has to be applied inside the code to properly render the boolean to a string for enable_aggressive_lints.\nOpened via gitter by @Makman2","comments":0,"createdAt":"2017-03-22T21:02:10Z","updatedAt":"2017-03-29T16:13:24Z","closedAt":null,"state":"open","user":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"owner":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"assignee":{"login":"yashtrivedi96","avatarUrl":"https://avatars1.githubusercontent.com/u/25592697?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1490218627000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3973","number":3973,"title":"Development_Setup.rst: \"Building Documentation\" use setup.py instead of make","body":"The Development_Setup guide on the issue of generating the documentation:\n\nOnce you have done so, you can build the documentation by entering the docs directory and running make.\n\nThis is not correct (anymore), there isn't even a makefile. The documentation can be built with python setup.py docs.","comments":1,"createdAt":"2017-03-22T21:35:05Z","updatedAt":"2017-03-22T21:37:07Z","closedAt":"2017-03-22T21:37:07Z","state":"closed","user":{"login":"NiklasMM","avatarUrl":"https://avatars1.githubusercontent.com/u/1924002?v=4"},"owner":{"login":"NiklasMM","avatarUrl":"https://avatars1.githubusercontent.com/u/1924002?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1490464328000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3975","number":3975,"title":"writing linter bears doc: config_file parameter description is lacking","body":"there is this:\nconfig_file: The absolute path to a config file to use. If no config file is used, this parameter is None. More on that later.\nAnd there is not really anything else about that later.","comments":0,"createdAt":"2017-03-23T00:11:35Z","updatedAt":"2017-03-25T17:52:08Z","closedAt":"2017-03-25T17:52:08Z","state":"closed","user":{"login":"sims1253","avatarUrl":"https://avatars2.githubusercontent.com/u/6530123?v=4"},"owner":{"login":"sims1253","avatarUrl":"https://avatars2.githubusercontent.com/u/6530123?v=4"},"assignee":{"login":"NiklasMM","avatarUrl":"https://avatars1.githubusercontent.com/u/1924002?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1491161730000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3977","number":3977,"title":"issubaspect()","body":"We need some quick way of checking if an aspect is a subaspect of another aspect, to allow defining bear aspects by some parent, like...\nclass AspectsBear(Bear, aspects={\n    'detect': [CommitMessage],\n}\n... which means that our bear should support all subaspects of CommitMessage. Then we need to check if user-requested aspects, like CommitMessage.Shortlog.ColonExistence, are subaspects of the defined parent.\nSo I propose an issubaspect function to handle that task. It should basically work like python's builtin issubclass function, and also have those important two features:\n\nIt should support aspectclasses as well as their instances as subaspect argument:\n\n>>> issubaspect(ColonExistence, CommitMessage)\nTrue\n>>> issubaspect(ColonExistence(shortlog_colon=False), CommitMessage)\nTrue\n\nIt should raise an exception if the arguments are no aspectclasses (or the first argument is neither class nor instance) and not just return False in that case:\n\n>>> issubaspect(ColonExistence, dict)\nTypeError: <class 'dict'> is no aspectclass\nAnd according to issubclass, every aspect should of course also be a subaspect of itself.","comments":3,"createdAt":"2017-03-23T18:37:31Z","updatedAt":"2017-04-02T19:35:30Z","closedAt":"2017-04-02T19:35:30Z","state":"closed","user":{"login":"userzimmermann","avatarUrl":"https://avatars3.githubusercontent.com/u/2088633?v=4"},"owner":{"login":"userzimmermann","avatarUrl":"https://avatars3.githubusercontent.com/u/2088633?v=4"},"assignee":{"login":"AsnelChristian","avatarUrl":"https://avatars2.githubusercontent.com/u/10449314?v=4"},"labels":[{"name":"area/aspects","color":"000000"},{"name":"area/core","color":"eb6420"},{"name":"difficulty/medium","color":"0052cc"},{"name":"importance/high","color":"eb6420"},{"name":"type/feature","color":"0052cc"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1490729901000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3978","number":3978,"title":"Add additional \"SEE_MORE\" attribute to the bears of coala.","body":"Add additional attribute in the Bear.py file which has links to the tools used in that particular bear.","comments":1,"createdAt":"2017-03-23T19:10:00Z","updatedAt":"2017-03-28T19:38:21Z","closedAt":"2017-03-28T19:38:21Z","state":"closed","user":{"login":"rohanraju97","avatarUrl":"https://avatars2.githubusercontent.com/u/16348426?v=4"},"owner":{"login":"rohanraju97","avatarUrl":"https://avatars2.githubusercontent.com/u/16348426?v=4"},"assignee":{"login":"rohanraju97","avatarUrl":"https://avatars2.githubusercontent.com/u/16348426?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1490535364000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3981","number":3981,"title":"CliParsing.py: Typo in the error raised","body":"In check_confilicts function,\n\"'no_config' cannot be set together 'save' or 'find_config'.\"\nshould be\n\"'no_config' cannot be set together with 'save' or 'find_config'.\"\ndifficulty/newcomer","comments":1,"createdAt":"2017-03-23T23:03:58Z","updatedAt":"2017-03-26T13:36:04Z","closedAt":null,"state":"open","user":{"login":"satwikkansal","avatarUrl":"https://avatars1.githubusercontent.com/u/10217535?v=4"},"owner":{"login":"satwikkansal","avatarUrl":"https://avatars1.githubusercontent.com/u/10217535?v=4"},"assignee":{"login":"fragm3","avatarUrl":"https://avatars3.githubusercontent.com/u/18073126?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1493263157000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3982","number":3982,"title":"Bear.py: If check_prerequisites fails on a requirement, and if it has a version, it shall be contained inside the error message","body":"Shall be applied on both classes (as a code-copy), the coalib.bears.Bear and the new  coalib.core.Bear.\nJust implement inside coalib.bears.Bear, I'll pick in the changes into coalib.core.Bear once it gets integrated finally 👍","comments":0,"createdAt":"2017-03-23T23:31:32Z","updatedAt":"2017-04-27T03:19:17Z","closedAt":"2017-04-27T03:19:17Z","state":"closed","user":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"owner":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"assignee":{"login":"sasacocic","avatarUrl":"https://avatars0.githubusercontent.com/u/10764579?v=4"},"milestone":{"title":"0.11","createdAt":"2017-01-16T17:55:22Z","dueOn":"2017-05-01T00:00:00Z","state":"open","htmlUrl":"https://github.com/coala/coala/milestone/14","description":"All big pulls that will need to be merged during the merge freeze from 29 Jan-12 Feb\r\n"},"labels":[{"name":"area/bears","color":"eb6420"},{"name":"difficulty/low","color":"207de5"},{"name":"importance/low","color":"70E870"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1500138216000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3983","number":3983,"title":"Linter.py: Also check for REQUIREMENTS","body":"@linter currently only checks for the executable and ignores the check of the base Bear. This should be implemented.\nOne thing:\nI'm not sure whether the old check for the executable should be removed. @sils stated this in one of my outdated PRs:\n\nsils on Oct 7, 2016 Member\ndo we need this check at all? The requirements check should be totally sufficient\n@Makman2\n\n\nMakman2 on Oct 8, 2016 Member\nalready thought about this too. Will do that, though that interferes with #2073 a bit^^\n\nAlthough I said \"Will do that\", I think it's a good safety check we should maybe keep.\nAnother thing:\nThe best is to refer to the base class' check_prerequisites. This may get a bit complicated as the linter-type is constructed at run-time, and also the inheritance is dynamic (either LocalBear or GlobalBear depending what the user wants). I hope using super() works fine.","comments":10,"createdAt":"2017-03-23T23:46:16Z","updatedAt":"2017-07-15T17:03:36Z","closedAt":null,"state":"open","user":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"owner":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"assignee":{"login":"Siddhartha1234","avatarUrl":"https://avatars3.githubusercontent.com/u/18551427?v=4"},"milestone":{"title":"0.12","createdAt":"2017-04-08T16:02:24Z","dueOn":null,"state":"open","htmlUrl":"https://github.com/coala/coala/milestone/16","description":""},"labels":[{"name":"area/bears","color":"eb6420"},{"name":"difficulty/low","color":"207de5"},{"name":"importance/critical","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1493263157000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3986","number":3986,"title":"GlobalBearTest needs more tests added","body":"Opened via gitter by @jayvdb","comments":1,"createdAt":"2017-03-24T21:12:12Z","updatedAt":"2017-04-27T03:19:17Z","closedAt":"2017-04-27T03:19:17Z","state":"closed","user":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"owner":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"assignee":{"login":"alisianoi","avatarUrl":"https://avatars2.githubusercontent.com/u/962850?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1524034644000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3987","number":3987,"title":"Add strict .coafile mode","body":"Some of coala warnings indicate .coafile has problems.\nWarnings are also useful in TTY mode, but have lesser value in CI mode.\nSome CI users might like to have only warnings for config related problems, such as missing bears, so that their CI doesnt turn red regularly, and the rest of their CI works.\nOther CI users would see a config error as a regression that must be fixed. so a strict mode cant equal CI mode.\nOpened via gitter by @jayvdb","comments":10,"createdAt":"2017-03-24T21:21:54Z","updatedAt":"2018-04-18T06:57:24Z","closedAt":null,"state":"open","user":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"owner":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1521298862000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3565","number":3565,"title":"Two line spanning in case of MAC users. ","body":"The highlighted portion spans two lines unevenly. The issue of this poor highlighting is already mentioned here : #3544.","comments":8,"createdAt":"2017-01-15T16:43:16Z","updatedAt":"2018-03-17T15:01:02Z","closedAt":"2018-03-17T15:01:02Z","state":"closed","user":{"login":"HitRam","avatarUrl":"https://avatars3.githubusercontent.com/u/19632768?v=4"},"owner":{"login":"HitRam","avatarUrl":"https://avatars3.githubusercontent.com/u/19632768?v=4"},"milestone":{"title":"0.12","createdAt":"2017-04-08T16:02:24Z","dueOn":null,"state":"open","htmlUrl":"https://github.com/coala/coala/milestone/16","description":""},"labels":[{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1484589693000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3566","number":3566,"title":"Bear.maintainers_emails uses `else cls.MAINTAINERS` instead of `else cls.MAINTAINERS_EMAILS`","body":"type/bug difficulty newcomer\nOpened via gitter by @sils","comments":0,"createdAt":"2017-01-15T17:34:39Z","updatedAt":"2017-01-16T18:01:33Z","closedAt":"2017-01-16T18:01:33Z","state":"closed","user":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"owner":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"assignee":{"login":"lohani2280","avatarUrl":"https://avatars1.githubusercontent.com/u/18470647?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1484659813000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3572","number":3572,"title":"coafile/commit section: Improve regex","body":"Currently this case slips through:\ncommit-tag : a redundant space before colon\nSo we should improve the regex to catch the redundant space before a colon :)","comments":0,"createdAt":"2017-01-15T23:12:47Z","updatedAt":"2017-01-17T13:30:13Z","closedAt":"2017-01-17T13:30:13Z","state":"closed","user":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"owner":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"assignee":{"login":"affanv14","avatarUrl":"https://avatars3.githubusercontent.com/u/13151040?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1484845529000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3578","number":3578,"title":"Newcomers_Guide.rst: Improve \"Review Process\"","body":"Some things that should be improved there:\n\n\nEnclose \"difficulty/low\" in double backticks, not in double quotes\n\n\n\nWe highly encourage you to start reviewing other's \"difficulty/low\" or newcomer issues after you complete your newcomer issue as reviewing helps, you to learn more about coala and python.\n\nThe comma after \"helps\" should moved before \"as\".\n\n\n\nDo not only fix a newcomer issue! It is highly recommended that you fix one newcomer issue to get familiar with the workflow at coala and then proceed to a difficulty/low issues.\n\nEither do:\n\n... then proceed to difficulty/low issues\nor\n... then proceed to a difficulty/low issue","comments":1,"createdAt":"2017-01-16T12:44:55Z","updatedAt":"2017-01-19T17:05:29Z","closedAt":"2017-01-19T17:05:29Z","state":"closed","user":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"owner":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"assignee":{"login":"harshit890","avatarUrl":"https://avatars2.githubusercontent.com/u/12943200?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"},{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1484631070000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3582","number":3582,"title":"Remove redundant comma","body":"The comma after helps is not required in the following sentence and hence needs to be removed.\n\nWe highly encourage you to start reviewing other's \"difficulty/low\" or newcomer issues after you complete your newcomer issue as reviewing helps, you to learn more about coala and python.\n\nSource: https://github.com/coala/coala/blob/master/docs/Developers/Newcomers_Guide.rst\ndifficulty/newcomer","comments":1,"createdAt":"2017-01-17T05:26:06Z","updatedAt":"2017-01-17T05:31:10Z","closedAt":"2017-01-17T05:31:10Z","state":"closed","user":{"login":"yash-nisar","avatarUrl":"https://avatars1.githubusercontent.com/u/14862976?v=4"},"owner":{"login":"yash-nisar","avatarUrl":"https://avatars1.githubusercontent.com/u/14862976?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"},{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1484641476000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3584","number":3584,"title":"Remove  # +ELLIPSIS directives all over the place","body":"They're active by default I think. Just try removing them and if everything still works we're good to go :)\ndifficulty newcomer\nOpened via gitter by @sils","comments":2,"createdAt":"2017-01-17T08:13:58Z","updatedAt":"2017-01-17T08:24:36Z","closedAt":"2017-01-17T08:24:36Z","state":"closed","user":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"owner":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1484662343000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3585","number":3585,"title":"Change `python3` to `python 3` ","body":"In language option in TODOS header in coafile change language from python3 to python 3\ndifficulty newcomer\nOpened via gitter by @Techievena","comments":0,"createdAt":"2017-01-17T09:37:23Z","updatedAt":"2017-01-17T14:12:23Z","closedAt":"2017-01-17T14:12:23Z","state":"closed","user":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"owner":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"assignee":{"login":"ankit01ojha","avatarUrl":"https://avatars2.githubusercontent.com/u/21126132?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1490995087000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3587","number":3587,"title":"Improve coafile/KeywordBear shortlog regex","body":"I think the regex should be [^:]*|[^:]*[^: ]: [A-Z0-9*].*\nThe current one would also allow messages like\ns:: description\nand not allow\nt: description (it has to match two letters currently)\nAlso the redundant braces around the whole expression can be removed^^\nEDIT:\nThis issue also requires to create a coafileTest in our tests directory, to test settings in our coafile are working as expected.","comments":20,"createdAt":"2017-01-17T13:56:26Z","updatedAt":"2017-03-31T21:18:07Z","closedAt":null,"state":"open","user":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"owner":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"assignee":{"login":"mayangupta","avatarUrl":"https://avatars3.githubusercontent.com/u/26777795?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1484726320000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3589","number":3589,"title":"Documentation is bad","body":"documentation should be better","comments":0,"createdAt":"2017-01-18T07:56:53Z","updatedAt":"2017-01-18T07:58:40Z","closedAt":"2017-01-18T07:58:40Z","state":"closed","user":{"login":"fneu","avatarUrl":"https://avatars2.githubusercontent.com/u/7591685?v=4"},"owner":{"login":"fneu","avatarUrl":"https://avatars2.githubusercontent.com/u/7591685?v=4"},"assignee":{"login":"fneu","avatarUrl":"https://avatars2.githubusercontent.com/u/7591685?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1484770761000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3591","number":3591,"title":"Link `bear writing tutorial` in website coala.io is invalid","body":"As per #3549 writing bears was renamed writing native bears but this one was perhaps missed out. Provide valid URL in the link bear writing tutorial.\ndifficulty newcomer","comments":5,"createdAt":"2017-01-18T10:04:30Z","updatedAt":"2017-01-18T20:19:21Z","closedAt":"2017-01-18T20:19:21Z","state":"closed","user":{"login":"Techievena","avatarUrl":"https://avatars2.githubusercontent.com/u/17270966?v=4"},"owner":{"login":"Techievena","avatarUrl":"https://avatars2.githubusercontent.com/u/17270966?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1486539788000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3592","number":3592,"title":"Remove unnecessary import","body":"1724844#diff-4a49662a37e70525cb34f6b722cff846R13\nThe import is already made at the top of the module^^","comments":0,"createdAt":"2017-01-18T22:14:14Z","updatedAt":"2017-02-08T07:43:08Z","closedAt":"2017-02-08T07:43:08Z","state":"closed","user":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"owner":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"assignee":{"login":"Trailblazerr1","avatarUrl":"https://avatars2.githubusercontent.com/u/16671238?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1486175764000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3597","number":3597,"title":"Use sarge instead of subprocess","body":"sarge became a dependency in https://gitlab.com/coala/package_manager/merge_requests/8 , and should be used wherever possible in coala to simplify code dealing with subprocesses.\n(and deprecate coala's own subprocess wrappers)","comments":7,"createdAt":"2017-01-19T23:13:24Z","updatedAt":"2017-02-04T02:36:04Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"nkprince007","avatarUrl":"https://avatars3.githubusercontent.com/u/17202890?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1485381692000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3600","number":3600,"title":"Remove call_without_output from Shell.py L7","body":"This line was used by the requirement classes, it isnt used anymore as they use sarge, so it should be removed.\ndifficulty/newcomer","comments":4,"createdAt":"2017-01-20T15:44:28Z","updatedAt":"2017-01-25T22:01:32Z","closedAt":"2017-01-25T16:14:46Z","state":"closed","user":{"login":"Adrianzatreanu","avatarUrl":"https://avatars0.githubusercontent.com/u/15572459?v=4"},"owner":{"login":"Adrianzatreanu","avatarUrl":"https://avatars0.githubusercontent.com/u/15572459?v=4"},"assignee":{"login":"SiddharthKumar02","avatarUrl":"https://avatars2.githubusercontent.com/u/20840431?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1485010144000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3606","number":3606,"title":"Result.py: Perform message formatting only if message_arguments are passed","body":"","comments":0,"createdAt":"2017-01-21T14:15:37Z","updatedAt":"2017-01-21T14:49:04Z","closedAt":"2017-01-21T14:49:04Z","state":"closed","user":{"login":"pratyushprakash","avatarUrl":"https://avatars1.githubusercontent.com/u/18013053?v=4"},"owner":{"login":"pratyushprakash","avatarUrl":"https://avatars1.githubusercontent.com/u/18013053?v=4"},"assignee":{"login":"pratyushprakash","avatarUrl":"https://avatars1.githubusercontent.com/u/18013053?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1485931402000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3611","number":3611,"title":"De-activate Travis OSX job for PRs","body":"The OSX job has been in the matrix long enough, with no issues found (there was one failed build I saw, by rhemon iirc, but it looked unrelated to coala).\nAfter the 0.10 release, it will have been in place for most of a dev & release cycle, and should be deactivated at least for PRs, as it slows down merges, and doesnt add much value.\nMaybe it should be re-added at the end of the 0.11 cycle, to ensure there are no regressions.","comments":8,"createdAt":"2017-01-21T22:34:14Z","updatedAt":"2017-02-01T06:43:22Z","closedAt":"2017-02-01T06:43:22Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"area/CI","color":"eb6420"},{"name":"difficulty/low","color":"207de5"},{"name":"importance/low","color":"70E870"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1488203511000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3613","number":3613,"title":"Create OSX and Windows GitHub org teams","body":"It would be helpful to be able to ping all OSX or all Windows devs, for problems like #3565 .\nCould extend this to also have a Linux team, but that would be most of the core devs, who can generally diagnose problems themselves.","comments":7,"createdAt":"2017-01-21T23:45:22Z","updatedAt":"2017-02-27T13:51:51Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"stephenbhope","avatarUrl":"https://avatars0.githubusercontent.com/u/25934312?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1524785201000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3615","number":3615,"title":"Meta-review","body":"We have http://api.coala.io/en/latest/Developers/Review.html\nAnd we have a 'review' requirement for joining the 'developer' team.\nWherever we put developer statistics, we should also include review actions, as they are the real meat of the core team workload.\nHowever, what we need is a meta-review system, and I believe this is sort of uncharted territory, but I am prepared to be happily surprised.\nThis will be enormously helpful for our GSoC admins (@sims1253, @sils & @jayvdb) in tracking how GSOC projects are going.\nMy concept is that we track emoji responses to review comments. 👍 and 👎 and we actively encourage the PR author to publicly acknowledge or reject review comments this way.\nAs reviewers, we all screw up sometimes, either in the substance of the review comment, or in its delivery (i.e. wrong tone).\nWe should be tracking this.  It creates a feedback loop for senior developers , letting them know when they are being too harsh, so they can self-adjust accordingly if they can see what is being said, and allows peer review among reviewers if the reviewer doesnt want to get the message.\nIf the meta-review is wrong, other people can put forward their own view on the review, which helps the PR author adjust , as they can see that their meta-reviewing is off.\nThis will cause new conflicts to be public, but they were very likely to be latent undisclosed personal conflicts anyway.\nBut .. some personal conflicts , especially between people of unequal power in a system, means one party feels they cant publicly provide feedback without fear of reprisal.\nSo the meta-review system will also need a way for people to anonymously report their disagreement with review comments.  IMO the software that collects that negative response should then also add a 👎 on the review comment using an 'anonymous' type account, which allows other meta-review processes to continue as usual (i.e. other developers to counter-act the negative meta-review by adding their own 👍).","comments":9,"createdAt":"2017-01-22T04:49:30Z","updatedAt":"2018-04-26T23:26:41Z","closedAt":"2018-04-23T18:23:34Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1486839029000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3617","number":3617,"title":"Reorder levels in `-L` help","body":"The order of logging is Debug -> Info -> Warning -> Errors\nChange help to show this\nDifficulty newcomer.\nOpened via gitter by @nemaniarjun","comments":3,"createdAt":"2017-01-22T23:13:22Z","updatedAt":"2017-02-11T18:50:29Z","closedAt":"2017-02-11T18:50:29Z","state":"closed","user":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"owner":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"assignee":{"login":"kumarmj","avatarUrl":"https://avatars1.githubusercontent.com/u/9624553?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1485541908000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3618","number":3618,"title":"mention default in `-L` help","body":"Change help to show this\nDifficulty newcomer.\nOpened via gitter by @nemaniarjun","comments":4,"createdAt":"2017-01-22T23:15:00Z","updatedAt":"2017-01-27T18:31:48Z","closedAt":"2017-01-27T18:31:48Z","state":"closed","user":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"owner":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"assignee":{"login":"nitinkgp23","avatarUrl":"https://avatars2.githubusercontent.com/u/16208882?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1490117215000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3619","number":3619,"title":"Grammatical errors in newcomers guide","body":"there’s a few steps you need to complete\nIt should be: there are a few steps\n\n\nThe newcomer process is as it follows:\nShould be changed into: The newcomer process is as follows:\n\n\nThe file to be changed is at\n/docs/Developers/Newcomers_Guide.rst","comments":3,"createdAt":"2017-01-23T21:23:36Z","updatedAt":"2017-03-21T17:26:55Z","closedAt":"2017-03-21T17:26:55Z","state":"closed","user":{"login":"Mariatta","avatarUrl":"https://avatars1.githubusercontent.com/u/5844587?v=4"},"owner":{"login":"Mariatta","avatarUrl":"https://avatars1.githubusercontent.com/u/5844587?v=4"},"assignee":{"login":"AlexandruGhimisi","avatarUrl":"https://avatars3.githubusercontent.com/u/25138000?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1486134069000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3620","number":3620,"title":"Blacklist urllib's urlopen","body":"coala has moved to requests.  urlopen should not be used.\nOpened via gitter by @jayvdb","comments":4,"createdAt":"2017-01-23T21:34:37Z","updatedAt":"2017-02-03T15:01:09Z","closedAt":"2017-02-01T23:08:02Z","state":"closed","user":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"owner":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"},{"name":"importance/low","color":"70E870"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1485265560000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3624","number":3624,"title":"No files matching","body":"Edit: Accidentally submitted early, will reopen once I've written up the description.\nEdit 2: Actually would've been a dupe of #3053, leaving closed.","comments":0,"createdAt":"2017-01-24T13:44:38Z","updatedAt":"2017-01-24T13:46:00Z","closedAt":"2017-01-24T13:44:40Z","state":"closed","user":{"login":"underyx","avatarUrl":"https://avatars0.githubusercontent.com/u/1060436?v=4"},"owner":{"login":"underyx","avatarUrl":"https://avatars0.githubusercontent.com/u/1060436?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1485280318000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3626","number":3626,"title":"README.rst: Several broken images to links ","body":"On safari:\n\nOn chrome:\n\nOther ones include Pypi and circleci links.\nAlso, this link: https://camo.githubusercontent.com/5416aff57807c7556366feec8e1116720ccb0f9a/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f706c6174666f726d2d4c696e75782d627269676874677265656e2e737667 is broken.\nReroutes to a page with just error fetching resource","comments":1,"createdAt":"2017-01-24T16:07:36Z","updatedAt":"2017-01-24T17:51:58Z","closedAt":"2017-01-24T17:51:58Z","state":"closed","user":{"login":"RohanVB","avatarUrl":"https://avatars0.githubusercontent.com/u/15197846?v=4"},"owner":{"login":"RohanVB","avatarUrl":"https://avatars0.githubusercontent.com/u/15197846?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1485287829000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3629","number":3629,"title":"OpenEditorActionTest: TypeError not raised.","body":"This seems like a very strange issue, that has been happening on my new machine, where if I run OpenEditorActionTest, it fails.\nThis happens because my $EDITOR variable is set to vim, if I unset it, the test passes.\nUnsetting it in the code just before the .apply() on the other hand, doesn't work at all.","comments":0,"createdAt":"2017-01-24T19:57:05Z","updatedAt":"2017-01-24T19:57:09Z","closedAt":null,"state":"open","user":{"login":"SanketDG","avatarUrl":"https://avatars3.githubusercontent.com/u/8980971?v=4"},"owner":{"login":"SanketDG","avatarUrl":"https://avatars3.githubusercontent.com/u/8980971?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1485360544000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3630","number":3630,"title":"Version mismatch with requests","body":"We had a version mismatch with requests, due to adding requests to requests~=1.12.0, while requests~=1.12 was the direct dependency of coala-bears.\n#3628 made the two version specifiers identical.","comments":2,"createdAt":"2017-01-24T22:43:30Z","updatedAt":"2017-01-25T16:09:04Z","closedAt":"2017-01-25T16:09:04Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"milestone":{"title":"0.10","createdAt":"2016-11-27T15:43:36Z","dueOn":"2017-01-28T00:00:00Z","state":"closed","htmlUrl":"https://github.com/coala/coala/milestone/12","description":""},"labels":[{"name":"needs backport","color":"b60205"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1486362562000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3637","number":3637,"title":"tests.TestUtilities.execute_coala should not join stdout and stderr","body":"stdout and stderr should be separate return values, to make the tests more readable.\nI suspect doing this will also mean that stdout_only is then unnecessary, as it appears to be often used to hide warnings on stderr.\nThose warnings on stderr should typically also be tested.  e.g. an assertion that stderr is empty, or that it matches a regex, depending on the test.","comments":0,"createdAt":"2017-01-26T21:00:55Z","updatedAt":"2017-02-06T06:29:22Z","closedAt":"2017-02-06T06:29:22Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"aptrishu","avatarUrl":"https://avatars1.githubusercontent.com/u/22702242?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1487268525000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3639","number":3639,"title":"Json format is not working for PMD","body":"Running this same command\ncoala --json --bears SpaceConsistencyBear --files **.java --disable-caching -o json.txt -r .\nfor the JavaPMDBear does not produce results. However, if I run it in that way:\ncoala --ci --bears JavaPMDBear --files **.java --disable-caching\nIt takes a while, but produces results. Is anything wrong in the command?","comments":11,"createdAt":"2017-01-27T09:36:55Z","updatedAt":"2017-02-16T18:08:45Z","closedAt":null,"state":"open","user":{"login":"rpau","avatarUrl":"https://avatars3.githubusercontent.com/u/1483433?v=4"},"owner":{"login":"rpau","avatarUrl":"https://avatars3.githubusercontent.com/u/1483433?v=4"},"assignee":{"login":"arnab1896","avatarUrl":"https://avatars3.githubusercontent.com/u/25241297?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"},{"name":"importance/high","color":"eb6420"},{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1485542835000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3640","number":3640,"title":"[question] cache","body":"Hi,\nI would like to contribute with some ideas about git in that project and I would like to understand the logic beyond the cache. Specifically, when files become untracked.\nAre the editors plugins calling that method (untrack_files) after any modification?","comments":1,"createdAt":"2017-01-27T10:05:24Z","updatedAt":"2017-01-27T18:47:15Z","closedAt":"2017-01-27T18:47:15Z","state":"closed","user":{"login":"rpau","avatarUrl":"https://avatars3.githubusercontent.com/u/1483433?v=4"},"owner":{"login":"rpau","avatarUrl":"https://avatars3.githubusercontent.com/u/1483433?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1523974295000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3643","number":3643,"title":"Fix link of newcomers guide at https://github.com/coala/coala/blob/master/docs/Developers/Development_Setup.rst#repositories","body":"","comments":1,"createdAt":"2017-01-27T23:52:36Z","updatedAt":"2018-04-17T14:11:35Z","closedAt":"2018-04-17T14:11:35Z","state":"closed","user":{"login":"ashwini0529","avatarUrl":"https://avatars3.githubusercontent.com/u/8419333?v=4"},"owner":{"login":"ashwini0529","avatarUrl":"https://avatars3.githubusercontent.com/u/8419333?v=4"},"assignee":{"login":"amritpals","avatarUrl":"https://avatars0.githubusercontent.com/u/6468828?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1490370802000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3644","number":3644,"title":"deploy.pypi.sh should have better error detection.","body":"https://github.com/coala/coala/blob/master/.misc/deploy.pypi.sh should have better error detection.\nIt should gracefully fail only if it is a server error(500), and not if it is any error.","comments":2,"createdAt":"2017-01-28T02:30:02Z","updatedAt":"2017-03-24T15:53:22Z","closedAt":"2017-03-24T15:53:22Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"Shade5","avatarUrl":"https://avatars0.githubusercontent.com/u/13672946?v=4"},"labels":[{"name":"difficulty/medium","color":"0052cc"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1524077772000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3645","number":3645,"title":"Remove inactive org members","body":"The assignee drop down takes too long to load.\nI suspect we have too many org members, and many of them have never contributed, and .. never will.\nOpened via gitter by @jayvdb","comments":23,"createdAt":"2017-01-28T12:47:00Z","updatedAt":"2018-04-18T18:56:12Z","closedAt":"2018-04-18T18:56:12Z","state":"closed","user":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"owner":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"assignee":{"login":"sils","avatarUrl":"https://avatars0.githubusercontent.com/u/5716520?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1485651457000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3647","number":3647,"title":"create structural diagram of coala","body":"It is nice for new devs to see a visual representation of our architecture when they contribute\nCC @jayvdb as you tried to file this issue\nstatus/needs design\nOpened via gitter by @Mixih","comments":0,"createdAt":"2017-01-29T00:57:33Z","updatedAt":"2017-01-29T00:57:37Z","closedAt":null,"state":"open","user":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"owner":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"labels":[{"name":"status/needs design","color":"5319e7"},{"name":"status/needs info","color":"006b75"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1485981136000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3648","number":3648,"title":"Mandatory regression tests for issues with type/bug label to ensure the bug doesn't creep in again","body":"Inspired from https://docs.djangoproject.com/en/1.10/intro/contributing/#writing-some-tests-for-your-ticket\nstatus/needs design status/needs info\nOpened via gitter by @meetmangukiya","comments":8,"createdAt":"2017-01-29T06:02:04Z","updatedAt":"2017-02-01T20:32:16Z","closedAt":null,"state":"open","user":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"owner":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"labels":[{"name":"status/needs design","color":"5319e7"},{"name":"status/needs info","color":"006b75"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1521089639000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3650","number":3650,"title":"Allow bears to pass their own applicable actions","body":"I would suggest to introduce a new system for results so bears can easily add possible fixes / choices for the user.\nFor example for the GitCommitBear: When a commit message does not meet the standards, the user should have the choice to amend the current commit (see coala/coala-bears#1360).\nTo allow such functionality, I would propose a field inside Result which is a list of ResultAction-instances.\nResult.actions = XYZAction(...)\n\nAnd the bear would generate a result with the possible actions. It's possible to set even multiple ones:\nmy_result = Result('Something went wrong')\nmy_result.actions += ApplyPatchAction(...)\nmy_result.actions += EmailSomeone(...)\n\nThis may also solve #1021, as you can easily add different patches:\nmy_result.actions += ApplyPatchAction(...) # <-- patch variant 1\nmy_result.actions += ApplyPatchAction(...) # <-- patch variant 2\n\nSome actions are implicitly added by coala, like the IgnoreResultAction.\nSpecifically for the ApplyPatchAction, as it would contain all relevant data, including the patch itself, the diffs field can be removed from Result.\nCC @sils @jayvdb","comments":31,"createdAt":"2017-01-29T13:44:28Z","updatedAt":"2018-03-15T04:53:59Z","closedAt":null,"state":"open","user":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"owner":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"labels":[{"name":"cool and awesome","color":"0052cc"},{"name":"difficulty/high","color":"B319e7"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1486046523000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3654","number":3654,"title":"Bug: coala doesn't look for .BAT file","body":"As I added commands to install ruby bear in appveyor, gems were installed in appveyor with a  .BAT file format, however during tests these were not found. The test for bears that had Gem Requirement were failing with this error.\nE           Running bear PuppetLintBear...\nE           Running 'puppet-lint --log-format %{line}:%{column}:%{kind}:%{message} C:\\Users\\appveyor\\AppData\\Local\\Temp\\1\\tmpsd5drv_3'\nE           Bear PuppetLintBear failed to run. Take a look at debug messages (`-V`) for further information.\nE           The bear PuppetLintBear raised an exception. If you are the author of this bear, please make sure to catch all exceptions. If not and this error annoys you, you might want to get in contact with the author of this bear.\nE          \nE           Traceback information is provided below:\nE          \nE           Traceback (most recent call last):\nE             File \"C:\\Python34\\lib\\site-packages\\coalib\\bears\\Bear.py\", line 249, in execute\nE               result = self.run_bear_from_section(args, kwargs)\nE             File \"C:\\Python34\\lib\\site-packages\\coalib\\bears\\Bear.py\", line 242, in run_bear_from_section\nE               return self.run(*args, **kwargs)\nE             File \"C:\\Python34\\lib\\site-packages\\coalib\\bearlib\\abstractions\\Linter.py\", line 555, in run\nE               cwd=self.get_config_dir())\nE             File \"C:\\Python34\\lib\\site-packages\\coalib\\misc\\Shell.py\", line 95, in run_shell_command\nE               with run_interactive_shell_command(command, **kwargs) as p:\nE             File \"C:\\Python34\\lib\\contextlib.py\", line 59, in __enter__\nE               return next(self.gen)\nE             File \"C:\\Python34\\lib\\site-packages\\coalib\\misc\\Shell.py\", line 62, in run_interactive_shell_command\nE               process = Popen(command, **args)\nE             File \"C:\\Python34\\lib\\subprocess.py\", line 859, in __init__\nE               restore_signals, start_new_session)\nE             File \"C:\\Python34\\lib\\subprocess.py\", line 1114, in _execute_child\nE               startupinfo)\nE           FileNotFoundError: [WinError 2] The system cannot find the file specified\n\nFull Log is available here.\nSo afterwards as I debugged, It was found that run_interactive_shell_command invoked the FIleNotFoundError. So to run it either I had to run with providing arg shell=True or using .BAT\nRunning the command without .BAT or shell=True:\npython -c \"from coalib.misc.Shell import run_interactive_shell_command; print(list(run_interactive_shell_command('img_checker').gen))\"\nTraceback (most recent call last):\n File \"<string>\", line 1, in <module>\n File \"C:\\Python34\\lib\\site-packages\\coalib\\misc\\Shell.py\", line 62, in run_interactive_shell_command\n   process = Popen(command, **args)\n File \"C:\\Python34\\lib\\subprocess.py\", line 859, in __init__\n   restore_signals, start_new_session)\n File \"C:\\Python34\\lib\\subprocess.py\", line 1114, in _execute_child\n   startupinfo)\nFileNotFoundError: [WinError 2] The system cannot find the file specified\n\nRunning the command with the args:\npython -c \"from coalib.misc.Shell import run_interactive_shell_command; print(list(run_interactive_shell_command('img_checker', shell=True).gen))\n[<subprocess.Popen object at 0x00F6F070>]\n\npython -c \"from coalib.misc.Shell import run_interactive_shell_command; print(list(run_interactive_shell_command('img_checker.BAT').gen))\n[<subprocess.Popen object at 0x0076F070>]\n\nFull log here.\nTherefore afterwards I added .BAT to all the bear files where the gem executable was called. You can see the full change here.\nAfter this, during the test:\nRubySmellBearTest, SCSSLintBearTest, PuppetLintBearTest - passed\nHowever RuboCopBearTest and CSVLintBearTest are still failing.\nHave a look at the full lot here.","comments":0,"createdAt":"2017-01-30T04:02:26Z","updatedAt":"2017-02-02T14:42:03Z","closedAt":"2017-02-02T14:42:03Z","state":"closed","user":{"login":"rhemon","avatarUrl":"https://avatars2.githubusercontent.com/u/6615517?v=4"},"owner":{"login":"rhemon","avatarUrl":"https://avatars2.githubusercontent.com/u/6615517?v=4"},"milestone":{"title":"0.10","createdAt":"2016-11-27T15:43:36Z","dueOn":"2017-01-28T00:00:00Z","state":"closed","htmlUrl":"https://github.com/coala/coala/milestone/12","description":""},"labels":[{"name":"difficulty/low","color":"207de5"},{"name":"importance/high","color":"eb6420"},{"name":"needs backport","color":"b60205"},{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1521067989000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3655","number":3655,"title":"Globbing: Don't even walk into directories that match Ignore globs","body":"This hacky proof of concept of this reduced runtime with no bears on a real-world project from 14 seconds to 2 seconds. (and ~50 seconds in 0.9, before #3641):","comments":7,"createdAt":"2017-01-30T09:43:20Z","updatedAt":"2018-03-14T22:53:09Z","closedAt":null,"state":"open","user":{"login":"underyx","avatarUrl":"https://avatars0.githubusercontent.com/u/1060436?v=4"},"owner":{"login":"underyx","avatarUrl":"https://avatars0.githubusercontent.com/u/1060436?v=4"},"milestone":{"title":"0.12","createdAt":"2017-04-08T16:02:24Z","dueOn":null,"state":"open","htmlUrl":"https://github.com/coala/coala/milestone/16","description":""},"labels":[{"name":"difficulty/high","color":"B319e7"},{"name":"importance/high","color":"eb6420"},{"name":"type/performance","color":"fef2c0"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1524064511000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3656","number":3656,"title":"Globbing: Ignore VCS directories by default","body":"We can probably reuse the heuristics of ag for this.","comments":5,"createdAt":"2017-01-30T09:44:35Z","updatedAt":"2018-04-18T15:15:11Z","closedAt":null,"state":"open","user":{"login":"underyx","avatarUrl":"https://avatars0.githubusercontent.com/u/1060436?v=4"},"owner":{"login":"underyx","avatarUrl":"https://avatars0.githubusercontent.com/u/1060436?v=4"},"assignee":{"login":"underyx","avatarUrl":"https://avatars0.githubusercontent.com/u/1060436?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"},{"name":"importance/high","color":"eb6420"},{"name":"type/performance","color":"fef2c0"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1485799985000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3658","number":3658,"title":"Update Newcomer Guide to fulfill the developer requirements used for promotion in cEP-1","body":"","comments":0,"createdAt":"2017-01-30T18:13:05Z","updatedAt":"2017-01-30T18:13:05Z","closedAt":null,"state":"open","user":{"login":"sims1253","avatarUrl":"https://avatars2.githubusercontent.com/u/6530123?v=4"},"owner":{"login":"sims1253","avatarUrl":"https://avatars2.githubusercontent.com/u/6530123?v=4"},"assignee":{"login":"sims1253","avatarUrl":"https://avatars2.githubusercontent.com/u/6530123?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1485854264000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3660","number":3660,"title":"pycodestyle 2.3 reports E722 bare exception","body":"https://pypi.python.org/pypi/pycodestyle 2.3.0 was released on 30 Jan, causing many new code style errors.\nhttps://travis-ci.org/coala/coala/jobs/196607369\ncoalib/output/ConfWriter.py\n\n| 136| ············def_val·=·None\n|    | [NORMAL] PycodestyleBear (E306):\n|    | E306 expected 1 blank line before a nested definition, found 0'\n\ncoalib/output/ConfWriter.py\n\n| 149| ····················def_val·=·str(defaults[key])\n|    | [NORMAL] PycodestyleBear (E306):\n|    | E306 expected 1 blank line before a nested definition, found 0'\n\n[WARNING][14:53:36] PycodestyleBear (E306): This result has no patch attached.\n\ncoalib/settings/FunctionMetadata.py\n\n| 176| ········defaults·=·()·if·argspec.defaults·is·None·else·argspec.defaults\n|    | [NORMAL] PycodestyleBear (E306):\n|    | E306 expected 1 blank line before a nested definition, found 0'\n\n[WARNING][14:53:40] PycodestyleBear (E306): This result has no patch attached.\n\n[WARNING][14:53:40] PycodestyleBear (E306): This result has no patch attached.\n\n[WARNING][14:53:40] PycodestyleBear (E306): This result has no patch attached.\n\ntests/settings/SectionTest.py\n\n|  41| ········defaults.append(Setting('tEsT',·1,·3))\n|    | [NORMAL] PycodestyleBear (E306):\n|    | E306 expected 1 blank line before a nested definition, found 0'\n\ntests/settings/SectionTest.py\n\n|  42| ········defaults.append(Setting('·great···',·3,·8))\n|    | [NORMAL] PycodestyleBear (E306):\n|    | E306 expected 1 blank line before a nested definition, found 0'\n\ntests/settings/SectionTest.py\n\n|  43| ········defaults.append(Setting('·great···',·3,·8),·custom_key='custom')\n|    | [NORMAL] PycodestyleBear (E306):\n|    | E306 expected 1 blank line before a nested definition, found 0'\n\n[WARNING][14:53:40] PycodestyleBear (E722): This result has no patch attached.\n\ncoalib/processes/BearRunning.py\n\n| 105| ····except:\n|    | [NORMAL] PycodestyleBear (E722):\n|    | E722 do not use bare except''\n\n[WARNING][14:53:46] PycodestyleBear (E306): This result has no patch attached.\n\ncoalib/output/ConsoleInteraction.py\n\n| 309| ····default_format·=·('id:{id}:origin:{origin}:file:{file}:line:{line}:'\n|    | [NORMAL] PycodestyleBear (E306):\n|    | E306 expected 1 blank line before a nested definition, found 0'\n\n[WARNING][14:53:55] PycodestyleBear (E302): This result has no patch attached.\n\ncoalib/misc/Constants.py\n\n| 116| default_coafile·=·'.coafile'\n|    | [NORMAL] PycodestyleBear (E302):\n|    | E302 expected 2 blank lines, found 1'\n\n[WARNING][14:53:55] PycodestyleBear (E722): This result has no patch attached.\n\ncoalib/bears/Bear.py\n\n| 251| ········except:\n|    | [NORMAL] PycodestyleBear (E722):\n|    | E722 do not use bare except''","comments":8,"createdAt":"2017-01-30T22:41:12Z","updatedAt":"2017-01-31T09:17:44Z","closedAt":"2017-01-31T07:02:38Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"},{"name":"importance/critical","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1486744981000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3664","number":3664,"title":"Create instructions for setting up CI on a fork","body":"Instructions for setting up CI (Circle, Appveyor, Travis) are needed.\nThe pywikibot documentation for the same may be a useful guide.\nOpened via gitter by @jayvdb","comments":0,"createdAt":"2017-01-31T21:43:32Z","updatedAt":"2017-02-10T16:43:01Z","closedAt":"2017-02-10T16:43:01Z","state":"closed","user":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"owner":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"assignee":{"login":"rhemon","avatarUrl":"https://avatars2.githubusercontent.com/u/6615517?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"},{"name":"importance/high","color":"eb6420"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1485905969000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3665","number":3665,"title":"Create programming language labels and/or GitHub org teams","body":"(Similar to #3613 , but for programming languages.)\nA lot of problems with external linters require an advanced knowledge of the tool chain of the programming language.\nIt might be helpful to label issues (in coala-bears) according to programming language, and/or organise our team members by programming language, so that it is easier to match bugs to persons skills and vice versa .","comments":0,"createdAt":"2017-01-31T23:39:25Z","updatedAt":"2017-01-31T23:39:29Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1486938813000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3666","number":3666,"title":"Update urls from coala-analyzer to coala in IGitt repo","body":"difficulty/newcomer\nOpened via gitter by @jayvdb","comments":13,"createdAt":"2017-02-01T03:20:29Z","updatedAt":"2017-02-12T22:33:33Z","closedAt":"2017-02-12T16:32:09Z","state":"closed","user":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"owner":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"assignee":{"login":"nsurampu","avatarUrl":"https://avatars3.githubusercontent.com/u/23133275?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1486509614000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3668","number":3668,"title":"Intermittant error installing coala-bears dependencies: ImportError: No module named 'packaging'","body":"First mention on gitter:\nhttps://circleci.com/gh/coala/coala/10915\nThen I encountered it twice in a short period:\nhttps://travis-ci.org/coala/coala/jobs/197188789\nhttps://travis-ci.org/jayvdb/coala/jobs/197191905\nLast releases:\n\npip 9.0.1: 2016-11-06\npackaging 16.8: 2016-10-29\nsetuptools 34.1.0: 2017-01-29\n\nIt looks like the order of pip installing dependencies changes for each build, and whether this bug occurs depends somewhat on which order these packages are upgraded.","comments":4,"createdAt":"2017-02-01T04:56:04Z","updatedAt":"2017-02-07T23:20:14Z","closedAt":"2017-02-07T14:23:51Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"area/CI","color":"eb6420"},{"name":"area/upstream","color":"5319e7"},{"name":"importance/medium","color":"fbca04"},{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1485990720000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3671","number":3671,"title":"Phone home in CI mode when a deprecated feature is used","body":"This will allow us to see which deprecated features are no longer used\nOpened via gitter by @jayvdb","comments":1,"createdAt":"2017-02-01T14:01:19Z","updatedAt":"2017-02-01T23:12:00Z","closedAt":null,"state":"open","user":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"owner":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1486282293000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3672","number":3672,"title":"Newcomer documentation should recommend selecting an issue the developer understands","body":"Too many people are assigning themselves to tasks without any idea how to solve it\nOpened via gitter by @jayvdb","comments":2,"createdAt":"2017-02-01T14:02:26Z","updatedAt":"2017-02-05T08:11:33Z","closedAt":null,"state":"open","user":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"owner":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"assignee":{"login":"sims1253","avatarUrl":"https://avatars2.githubusercontent.com/u/6530123?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1528658300000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3676","number":3676,"title":"meta test class that all tests can inherit from","body":"coala could have its own library of helpers and assert* methods, with access to self so that they can utilise unittest functionality, especially to call standard assert*, and fail tests properly.\nAlso if all tests are using a meta class, there is also lots of opportunity to easily manage which tests are run. see pywikibot tests/aspects.py for some examples (but pytest plugins are a better idea for many of those features).\ndifficulty/medium\nOpened via gitter by @jayvdb","comments":11,"createdAt":"2017-02-02T01:33:43Z","updatedAt":"2018-06-10T19:18:20Z","closedAt":"2018-06-10T19:18:20Z","state":"closed","user":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"owner":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"assignee":{"login":"sangamcse","avatarUrl":"https://avatars2.githubusercontent.com/u/26381717?v=4"},"labels":[{"name":"difficulty/medium","color":"0052cc"},{"name":"status/needs design","color":"5319e7"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1525666551000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3677","number":3677,"title":"Investiate pipenv","body":"While piton isnt quite ready, pipenv has been iterating very quickly towards a workable solution.\nI've suggested it as a possible solution for our flake8 problem at https://gitlab.com/coala/package_manager/issues/25","comments":3,"createdAt":"2017-02-02T07:04:22Z","updatedAt":"2018-05-07T04:15:51Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1487979966000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3681","number":3681,"title":"Release Ports for 0.10","body":"#3426","comments":3,"createdAt":"2017-02-02T20:47:09Z","updatedAt":"2017-02-24T23:46:06Z","closedAt":"2017-02-10T22:49:24Z","state":"closed","user":{"login":"Mixih","avatarUrl":"https://avatars2.githubusercontent.com/u/5818750?v=4"},"owner":{"login":"Mixih","avatarUrl":"https://avatars2.githubusercontent.com/u/5818750?v=4"},"assignee":{"login":"Mixih","avatarUrl":"https://avatars2.githubusercontent.com/u/5818750?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1486391673000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3684","number":3684,"title":"Redundancy: Change ``deco`` to ``docs``","body":"Line 98 (coalib/bearlib/aspects/Redundancy.py)","comments":0,"createdAt":"2017-02-03T08:56:11Z","updatedAt":"2017-02-06T14:34:33Z","closedAt":"2017-02-06T14:34:33Z","state":"closed","user":{"login":"AsnelChristian","avatarUrl":"https://avatars2.githubusercontent.com/u/10449314?v=4"},"owner":{"login":"AsnelChristian","avatarUrl":"https://avatars2.githubusercontent.com/u/10449314?v=4"},"assignee":{"login":"SACHIN-13","avatarUrl":"https://avatars0.githubusercontent.com/u/11418889?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"size/XS","color":"00DE0F"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1486175947000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3687","number":3687,"title":"Deprecate run_shell_command","body":"coalib.misc.Shell.run_shell_command was inconvenient since it didn't return the returncode of the external command. I changed that with #3680 but in an ugly way to keep backwards compatibility, since some bears use it directly.\nFurther, the function name is misleading, since it doesn't run the external command through a shell.\nSo run_shell_command should be superseded by a new function like run_system_command.\n@sils @Makman2","comments":4,"createdAt":"2017-02-03T16:52:55Z","updatedAt":"2017-02-04T02:39:07Z","closedAt":null,"state":"open","user":{"login":"userzimmermann","avatarUrl":"https://avatars3.githubusercontent.com/u/2088633?v=4"},"owner":{"login":"userzimmermann","avatarUrl":"https://avatars3.githubusercontent.com/u/2088633?v=4"},"assignee":{"login":"userzimmermann","avatarUrl":"https://avatars3.githubusercontent.com/u/2088633?v=4"},"labels":[{"name":"importance/high","color":"eb6420"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1486142933000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3688","number":3688,"title":"New run_system_command function","body":"We need to implement a new run_system_command function according to #3687 with proper return objects that contain all useful information about a finished external command call.\nIt should be implemented in a new module and not alongside the existing run_shell_command function in coalib.misc.Shell. The name of the latter module would be misleading, since commands are not run through a shell. My suggestions:\n\ncoalib.misc.System\ncoalib.misc.Process\n\n@sils\n@Makman2","comments":1,"createdAt":"2017-02-03T17:01:59Z","updatedAt":"2017-02-03T17:28:53Z","closedAt":null,"state":"open","user":{"login":"userzimmermann","avatarUrl":"https://avatars3.githubusercontent.com/u/2088633?v=4"},"owner":{"login":"userzimmermann","avatarUrl":"https://avatars3.githubusercontent.com/u/2088633?v=4"},"assignee":{"login":"userzimmermann","avatarUrl":"https://avatars3.githubusercontent.com/u/2088633?v=4"},"labels":[{"name":"importance/high","color":"eb6420"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1496597647000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3690","number":3690,"title":"Information at openhub.net is outdated: Download and Issue Tracker link to be particular","body":"Since we are now encouraging installation of coala through coala-bears, IMO we should change the download link to coala-bears ?\nOpened via gitter by @meetmangukiya","comments":2,"createdAt":"2017-02-04T11:05:24Z","updatedAt":"2017-06-04T17:34:07Z","closedAt":null,"state":"open","user":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"owner":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1486302281000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3692","number":3692,"title":"CLI Markdown renderer","body":"We could try to output CLI text as markdown and try to render it as good as possible in the terminal :)\nFor example a code-block would be highlighted with gray or some different color (and the backticks would be removed), so it looks like rendered markdown in the browser.\nNot sure there's a package out there for this, but I think it's still a quite cool idea ;)","comments":5,"createdAt":"2017-02-04T16:29:19Z","updatedAt":"2017-02-05T13:44:41Z","closedAt":"2017-02-05T13:32:16Z","state":"closed","user":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"owner":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"labels":[{"name":"area/CLI","color":"006b75"},{"name":"status/needs design","color":"5319e7"},{"name":"status/wontfix/accepting patches","color":"aaaaaa"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1490196730000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3693","number":3693,"title":"Processing: Do not cache if bear isn't run","body":"E.g. if I run a bear and a req is missing, say I don't have php and I run phplintbear, it yields no results. coala caches that. I install PHP, I get no results. Crap!\nOpened via gitter by @sils","comments":4,"createdAt":"2017-02-04T22:43:22Z","updatedAt":"2017-03-22T15:32:10Z","closedAt":"2017-03-22T15:16:45Z","state":"closed","user":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"owner":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"assignee":{"login":"impmihai","avatarUrl":"https://avatars0.githubusercontent.com/u/22995337?v=4"},"milestone":{"title":"0.11","createdAt":"2017-01-16T17:55:22Z","dueOn":"2017-05-01T00:00:00Z","state":"open","htmlUrl":"https://github.com/coala/coala/milestone/14","description":"All big pulls that will need to be merged during the merge freeze from 29 Jan-12 Feb\r\n"},"labels":[{"name":"importance/critical","color":"e11d21"},{"name":"needs backport","color":"b60205"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1491749171000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3696","number":3696,"title":"Update the latest stable badge in readme to 0.10.0 ","body":"difficulty/newcomer\nOpened via gitter by @meetmangukiya","comments":4,"createdAt":"2017-02-05T05:59:38Z","updatedAt":"2017-04-09T14:46:11Z","closedAt":"2017-04-09T14:46:11Z","state":"closed","user":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"owner":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"assignee":{"login":"sils","avatarUrl":"https://avatars0.githubusercontent.com/u/5716520?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1492866378000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3697","number":3697,"title":"Initialise `AUTHORS` `AUTHORS_EMAILS` constants in Bear.py to a default value","body":"Since almost all the bears(that I've seen so far use the same value) I propose to include those in the Bear.py so it'd be inherited as well, and if author needs to use a custom value it can always override\nstatus/needs-info status/needs-design\nOpened via gitter by @meetmangukiya","comments":8,"createdAt":"2017-02-05T06:05:31Z","updatedAt":"2017-04-22T13:06:18Z","closedAt":null,"state":"open","user":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"owner":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"labels":[{"name":"status/needs design","color":"5319e7"},{"name":"status/needs info","color":"006b75"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1486364379000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3699","number":3699,"title":"add coala --ci to coala-ci deprecated warning","body":"Opened via gitter by @RohanVB","comments":6,"createdAt":"2017-02-05T16:37:36Z","updatedAt":"2017-02-06T06:59:39Z","closedAt":"2017-02-06T06:59:39Z","state":"closed","user":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"owner":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1494212691000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3701","number":3701,"title":"crash when runing coala on the libreoffice core repo","body":"coafile:\n[Default]\nbears = CPDBear, CPPCheckBear\nfiles = **.cxx, **.hxx\nlanguage = c++\n\nlog:\n[DEBUG][23:43:25] Running bear CPDBear...\n[WARNING][23:43:25] Bear CPDBear failed to run. Take a look at debug messages (`-V`) for further information.\n[DEBUG][23:43:26] The bear CPDBear raised an exception. If you are the author of this bear, please make sure to catch all exceptions. If not and this error annoys you, you might want to get in contact with the author of this bear.\n\nTraceback information is provided below:\n\nTraceback (most recent call last):\n  File \"/home/lasse/venvs/def/lib/python3.5/site-packages/coalib/bears/Bear.py\", line 240, in execute\n    return [] if result is None else list(result)\n  File \"/home/lasse/venvs/def/lib/python3.5/site-packages/bears/general/CPDBear.py\", line 103, in run\n    stdout_output, _ = run_shell_command(arguments)\n  File \"/home/lasse/venvs/def/lib/python3.5/site-packages/coalib/misc/Shell.py\", line 103, in run_shell_command\n    with run_interactive_shell_command(command, **kwargs) as p:\n  File \"/usr/lib64/python3.5/contextlib.py\", line 59, in __enter__\n    return next(self.gen)\n  File \"/home/lasse/venvs/def/lib/python3.5/site-packages/coalib/misc/Shell.py\", line 70, in run_interactive_shell_command\n    process = Popen(command, **args)\n  File \"/usr/lib64/python3.5/subprocess.py\", line 950, in __init__\n    restore_signals, start_new_session)\n  File \"/usr/lib64/python3.5/subprocess.py\", line 1544, in _execute_child\n    raise child_exception_type(errno_num, err_msg)\nOSError: [Errno 7] Argument list too long","comments":20,"createdAt":"2017-02-05T20:47:28Z","updatedAt":"2017-05-08T03:04:51Z","closedAt":null,"state":"open","user":{"login":"sils","avatarUrl":"https://avatars0.githubusercontent.com/u/5716520?v=4"},"owner":{"login":"sils","avatarUrl":"https://avatars0.githubusercontent.com/u/5716520?v=4"},"assignee":{"login":"impmihai","avatarUrl":"https://avatars0.githubusercontent.com/u/22995337?v=4"},"labels":[{"name":"area/bears","color":"eb6420"},{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1523958646000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3704","number":3704,"title":"Improve emphasis of material in Newcomer's Guide","body":"There are too many \"Notes\" and \"See Also\" blocks all using the same pattern that subliminally make one(or atleast me) to just scroll past all of them.\nCouple of ideas:\n\nMultipage guide (navbar, index/contents links on side so people can jump to page\nDifferent color schemes for different types of blocks used currently\nat least changing notes to important or something that indicates urgency/importance","comments":8,"createdAt":"2017-02-05T22:52:35Z","updatedAt":"2018-04-17T09:50:46Z","closedAt":"2018-04-17T09:50:46Z","state":"closed","user":{"login":"arvind-iyer","avatarUrl":"https://avatars3.githubusercontent.com/u/5451184?v=4"},"owner":{"login":"arvind-iyer","avatarUrl":"https://avatars3.githubusercontent.com/u/5451184?v=4"},"assignee":{"login":"kriti21","avatarUrl":"https://avatars3.githubusercontent.com/u/19872082?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/low","color":"207de5"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1486506297000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3707","number":3707,"title":"Add CSSLint installation to circleci","body":"it's already happening in travis which we can't rely on ATM so we need to add this to the circle yml as well.","comments":3,"createdAt":"2017-02-06T06:29:16Z","updatedAt":"2017-02-07T22:24:57Z","closedAt":"2017-02-07T22:24:57Z","state":"closed","user":{"login":"sils","avatarUrl":"https://avatars0.githubusercontent.com/u/5716520?v=4"},"owner":{"login":"sils","avatarUrl":"https://avatars0.githubusercontent.com/u/5716520?v=4"},"assignee":{"login":"damngamerz","avatarUrl":"https://avatars2.githubusercontent.com/u/13048113?v=4"},"labels":[{"name":"area/CI","color":"eb6420"},{"name":"difficulty/low","color":"207de5"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1523941694000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3708","number":3708,"title":"Refactor target list generation to a generator expression","body":"rather simple! difficulty newcomer\nthis one: 43a40fc#diff-8ecc903ba7ecebebacc61f64149f8eb7R164 can be simplified\n     targets = []\n     for item in list(cli_sections['default'].contents.pop('targets', '')):\t\n         targets.append(item.lower())\n\nOpened via gitter by @sils","comments":10,"createdAt":"2017-02-06T14:06:02Z","updatedAt":"2018-04-17T05:08:14Z","closedAt":"2018-04-17T05:08:14Z","state":"closed","user":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"owner":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"assignee":{"login":"ujjaldas1997","avatarUrl":"https://avatars3.githubusercontent.com/u/22221731?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"type/codestyle","color":"d4c5f9"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1486391204000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3709","number":3709,"title":"Look at attrs to make Setting object unmodifiable in coala.","body":"Opened via gitter by @Udayan12167","comments":1,"createdAt":"2017-02-06T14:25:32Z","updatedAt":"2017-02-06T14:26:44Z","closedAt":null,"state":"open","user":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"owner":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"assignee":{"login":"Udayan12167","avatarUrl":"https://avatars1.githubusercontent.com/u/6421568?v=4"},"labels":[{"name":"area/core","color":"eb6420"},{"name":"difficulty/medium","color":"0052cc"},{"name":"importance/medium","color":"fbca04"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1488856103000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3712","number":3712,"title":"Bears with DistributionRequirement only run on Debian","body":"Due to forcing use of Bear.check_prerequisites, any Bear which has a DistributionRequirement will fail because only apt_get is defined.\nBear.check_prerequisites should recognise NotImplementedError as meaning the Requirement class is not able to be used on this system, or we need some other approach to coordinate that type of information.\nThe worse case is Windows, which wont have any package manager, but it also affects OSX which only has brew, and not all users are using it.","comments":1,"createdAt":"2017-02-06T20:00:25Z","updatedAt":"2017-03-07T03:08:23Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"j0ack","avatarUrl":"https://avatars3.githubusercontent.com/u/9861290?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"},{"name":"importance/medium","color":"fbca04"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1500000183000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3713","number":3713,"title":"Bear.check_prerequisites should support multiple ways to obtain an executable/package","body":"bear REQUIREMENTS is a set used by coalib.bears.Bear.Bear.check_prerequisites to check that all dependencies are available.\nBear.check_prerequisites requires that they are all 'installed'.\nIn addition to problems like #3712 , it doesnt allow a Bear to define that there are multiple ways that an executable or package could be obtained.\nhttps://gitlab.com/coala/package_manager/issues/27 is one viable solution for this.","comments":5,"createdAt":"2017-02-06T20:07:27Z","updatedAt":"2017-07-14T02:43:03Z","closedAt":"2017-07-14T02:43:03Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1486634019000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3715","number":3715,"title":"Require 100% coverage on Appveyor","body":"With the dependency management code moved to a separate package, there should be very little OS specific code.\nWhere it exists, the coverage tools can be configured to excempt those parts of the codebase, or #pragma nocover can be used.","comments":0,"createdAt":"2017-02-07T05:19:57Z","updatedAt":"2017-02-09T09:53:39Z","closedAt":"2017-02-09T09:53:39Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1487530516000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3716","number":3716,"title":"Link fix in https://github.com/coala/coala/blob/master/docs/Developers/Development_Setup.rst","body":"Fix newcomers guideline link in https://github.com/coala/coala/blob/master/docs/Developers/Development_Setup.rst#repositories","comments":0,"createdAt":"2017-02-07T19:58:42Z","updatedAt":"2017-02-19T18:55:16Z","closedAt":"2017-02-19T18:55:16Z","state":"closed","user":{"login":"ashwini0529","avatarUrl":"https://avatars3.githubusercontent.com/u/8419333?v=4"},"owner":{"login":"ashwini0529","avatarUrl":"https://avatars3.githubusercontent.com/u/8419333?v=4"},"assignee":{"login":"yashtrivedi96","avatarUrl":"https://avatars1.githubusercontent.com/u/25592697?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1535679808000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3717","number":3717,"title":"Coverage.py warning: Could not parse Python file","body":"We are seeing a lot of \"Coverage.py warning: Could not parse Python file .....py\"  on Travis only.\ne.g.\nhttps://travis-ci.org/coala/coala/jobs/199030440#L514\nIt may be a problem with codecov-bash, or with coverage.","comments":6,"createdAt":"2017-02-07T22:35:16Z","updatedAt":"2018-08-31T01:43:28Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"difficulty/medium","color":"0052cc"},{"name":"importance/low","color":"70E870"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1486577998000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3718","number":3718,"title":"Use codecov-python","body":"Running a fetched uncached unversioned bash script is unreliable and slows down the builds\ncodecov/codecov-bash#14\nAlso the bash script isnt supported on Windows, so we would need to use codecov-python on Appveyor anyway for #3715, and that would be best done by adding it to test-requirements.txt to re-use the existing caching.\nAlso adding it to  test-requirements.txt means developers will have it installed and our docs can suggest they invoke codecov to see the results on codecov which is more readable.","comments":0,"createdAt":"2017-02-07T23:18:44Z","updatedAt":"2017-02-08T18:19:58Z","closedAt":"2017-02-08T18:19:58Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1486751110000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3720","number":3720,"title":"Add git cherry-pick in Developer's Guide","body":"We need to provide guidance on how to cherry-pick changes.\nIt should become part of the developer's guide under git basics.","comments":4,"createdAt":"2017-02-08T01:09:57Z","updatedAt":"2017-02-10T18:25:10Z","closedAt":"2017-02-10T18:25:10Z","state":"closed","user":{"login":"Mariatta","avatarUrl":"https://avatars1.githubusercontent.com/u/5844587?v=4"},"owner":{"login":"Mariatta","avatarUrl":"https://avatars1.githubusercontent.com/u/5844587?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/medium","color":"0052cc"},{"name":"importance/high","color":"eb6420"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1486754516000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3726","number":3726,"title":"Create NuGet package for llvm 3.4","body":"llvm 3.4 is needed by coala, and is installed in the Appveyor build.\nIt should be in downloaded for Appveyor using NuGet, which can be cached, and it is also useful for users to quickly set up their machine\nOpened via gitter by @jayvdb","comments":5,"createdAt":"2017-02-09T11:49:31Z","updatedAt":"2017-02-10T19:21:56Z","closedAt":null,"state":"open","user":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"owner":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"assignee":{"login":"Techievena","avatarUrl":"https://avatars2.githubusercontent.com/u/17270966?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1523964207000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3730","number":3730,"title":"coafile: max_line_length value different for coala and coala-bears repository","body":"The value of attribute max_line_length must be fixed to an unique value in all repositories of coala.","comments":15,"createdAt":"2017-02-10T03:12:25Z","updatedAt":"2018-04-17T11:23:27Z","closedAt":"2018-04-17T11:23:27Z","state":"closed","user":{"login":"Techievena","avatarUrl":"https://avatars2.githubusercontent.com/u/17270966?v=4"},"owner":{"login":"Techievena","avatarUrl":"https://avatars2.githubusercontent.com/u/17270966?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1524035414000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3731","number":3731,"title":"Create coala Maintainer's Guide","body":"We have extensive Developer's Guide, but one day, the developers may become coala Maintainers! 🎉 Yet, we don't currently have a proper documentation for the maintainers.\nI think we should start one :)\nNot sure where this should reside. Here, or another repo on it's own?\nHere are some things that should be included in coala Maintainer's Guide, there could be more.\n\nPledge not to press the shiny green button\nKnow how to cherrypick\nSetup @coala.io email address, how to forward it to gmail, etc.\nA list of all coala repos that the maintainers maintain (GitHub and GitLab)\nA list of current maintainers\netc","comments":2,"createdAt":"2017-02-10T18:31:10Z","updatedAt":"2018-04-18T07:10:14Z","closedAt":null,"state":"open","user":{"login":"Mariatta","avatarUrl":"https://avatars1.githubusercontent.com/u/5844587?v=4"},"owner":{"login":"Mariatta","avatarUrl":"https://avatars1.githubusercontent.com/u/5844587?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"cool and awesome","color":"0052cc"},{"name":"difficulty/medium","color":"0052cc"},{"name":"importance/medium","color":"fbca04"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1492551190000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3733","number":3733,"title":"Add new output-format  `diff` to @linter","body":"Some executables like https://github.com/myint/docformatter output only the diff, so we need a output format to handle such outputs.\nOpened via gitter by @satwikkansal","comments":6,"createdAt":"2017-02-10T22:10:26Z","updatedAt":"2017-04-18T21:33:10Z","closedAt":"2017-04-18T21:33:10Z","state":"closed","user":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"owner":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"assignee":{"login":"satwikkansal","avatarUrl":"https://avatars1.githubusercontent.com/u/10217535?v=4"},"labels":[{"name":"area/bears","color":"eb6420"},{"name":"difficulty/low","color":"207de5"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1488227520000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3736","number":3736,"title":"Investigate http://hypothesis.works/ for testing","body":"Hypothesis is a well designed testing framework, allowing very literate test writing.  Need to ensure it works well with pytest, works on all platforms supported by coala, and implement it in a limited part of the coala test suite so the maintainer team can evaluate it.\nOpened via gitter by @jayvdb","comments":3,"createdAt":"2017-02-12T21:04:53Z","updatedAt":"2017-02-27T20:32:00Z","closedAt":null,"state":"open","user":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"owner":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1488045962000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3737","number":3737,"title":"Change Fixes to Closes in Writing_Good_Commits.rst","body":"I have noticed that a lot of newcomers, without reading the details on https://github.com/coala/coala/blob/master/docs/Developers/Writing_Good_Commits.rst directly copy the format of the commit given in the example. However, most of the issues resolved are not bugs for which Closes should be used. I think we should change Fixes to Closes given in the examples on https://github.com/coala/coala/blob/master/docs/Developers/Writing_Good_Commits.rst so that even if the format of the commit is copied, we are good. :)\ndifficulty/newcomer\nWhat are your opinions @Adrianzatreanu @Mariatta ?","comments":2,"createdAt":"2017-02-13T13:44:23Z","updatedAt":"2017-02-25T18:06:02Z","closedAt":"2017-02-25T18:06:02Z","state":"closed","user":{"login":"yash-nisar","avatarUrl":"https://avatars1.githubusercontent.com/u/14862976?v=4"},"owner":{"login":"yash-nisar","avatarUrl":"https://avatars1.githubusercontent.com/u/14862976?v=4"},"assignee":{"login":"prateeksingh0001","avatarUrl":"https://avatars2.githubusercontent.com/u/20720045?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1487083122000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3741","number":3741,"title":"Benchmark coala execution time on sample projects regularly and publish the results","body":"Something like this http://speed.pypy.org/","comments":1,"createdAt":"2017-02-14T13:14:58Z","updatedAt":"2017-02-14T14:38:42Z","closedAt":null,"state":"open","user":{"login":"underyx","avatarUrl":"https://avatars0.githubusercontent.com/u/1060436?v=4"},"owner":{"login":"underyx","avatarUrl":"https://avatars0.githubusercontent.com/u/1060436?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1489330980000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3745","number":3745,"title":"pip install wheel with extra alldeps fails on pip 6.0.7","body":"Using pip 6.0.7 on the Travis precise builds fails.\n$ pip --version\npip 6.0.7 from /home/travis/virtualenv/python3.4.2/lib/python3.4/site-packages (python 3.4)\n\n$ pip install $(ls ./dist/*.whl)\"[alldeps]\"\n..\nException:\nTraceback (most recent call last):\n  File \"/home/travis/virtualenv/python3.4.2/lib/python3.4/site-packages/pip/basecommand.py\", line 232, in main\n    status = self.run(options, args)\n  File \"/home/travis/virtualenv/python3.4.2/lib/python3.4/site-packages/pip/commands/install.py\", line 305, in run\n    name, None, isolated=options.isolated_mode,\n  File \"/home/travis/virtualenv/python3.4.2/lib/python3.4/site-packages/pip/req/req_install.py\", line 179, in from_line\n    isolated=isolated)\n  File \"/home/travis/virtualenv/python3.4.2/lib/python3.4/site-packages/pip/req/req_install.py\", line 52, in __init__\n    req = pkg_resources.Requirement.parse(req)\n  File \"/home/travis/virtualenv/python3.4.2/lib/python3.4/site-packages/pip/_vendor/pkg_resources/__init__.py\", line 2873, in parse\n    reqs = list(parse_requirements(s))\n  File \"/home/travis/virtualenv/python3.4.2/lib/python3.4/site-packages/pip/_vendor/pkg_resources/__init__.py\", line 2820, in parse_requirements\n    \"version spec\")\n  File \"/home/travis/virtualenv/python3.4.2/lib/python3.4/site-packages/pip/_vendor/pkg_resources/__init__.py\", line 2785, in scan_list\n    raise ValueError(msg, line, \"at\", line[p:])\nValueError: ('Expected version spec in', './dist/coala_bears-0.10.0.dev99999999999999-py34.py35.py36-none-any.whl[alldeps]', 'at', '/dist/coala_bears-0.10.0.dev99999999999999-py34.py35.py36-none-any.whl[alldeps]')\n\nhttps://travis-ci.org/jayvdb/coala-bears/jobs/201824404\nA similar problem has been raised before at #1852 (comment)\nWe can at least include a minimum version in test-requirements.txt","comments":3,"createdAt":"2017-02-15T11:50:48Z","updatedAt":"2017-03-12T15:03:00Z","closedAt":"2017-03-12T15:03:00Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1487426108000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3747","number":3747,"title":"coala.io/commit should mention how to amend a commit message","body":"Possibly link to http://api.coala.io/en/latest/Developers/Git_Basics.html#follow-up\ndifficulty/newcomer\nOpened via gitter by @jayvdb","comments":4,"createdAt":"2017-02-16T04:01:11Z","updatedAt":"2017-02-18T13:55:08Z","closedAt":"2017-02-18T13:55:08Z","state":"closed","user":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"owner":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"assignee":{"login":"sgsh123","avatarUrl":"https://avatars1.githubusercontent.com/u/23427586?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1489330984000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3748","number":3748,"title":"Undeclared dependency on setuptools","body":"coala uses pkg_resources, which is part of setuptools, which is not a declared dependency.\nTesting on setuptools 8.0 results in failures:\nFAIL tests/coalaJSONTest.py::coalaJSONTest::test_version_conflict_in_collecting_bears\nFAIL tests/coalaTest.py::coalaTest::test_unimportable_bear\nFAIL tests/coalaTest.py::coalaTest::test_version_conflict_in_collecting_bears\nFAIL tests/misc/ExceptionsTest.py::ExceptionsTest::test_get_exitcode\n\n\nlog_printer = <coalib.output.printers.LogPrinter.LogPrinter object at 0x7fe146f6e278>\n\n    def get_exitcode(exception, log_printer=None):\n        log_printer = (LogPrinter(NullPrinter()) if log_printer is None\n                       else log_printer)\n\n        if isinstance(exception, KeyboardInterrupt):  # Ctrl+C\n            print('Program terminated by user.')\n            exitcode = 130\n        elif isinstance(exception, EOFError):  # Ctrl+D\n            print('Found EOF. Exiting gracefully.')\n            exitcode = 0\n        elif isinstance(exception, SystemExit):\n            exitcode = exception.code\n        elif isinstance(exception, VersionConflict):\n>           log_message = Constants.VERSION_CONFLICT_MESSAGE % str(exception.req)\n\nE           AttributeError: 'VersionConflict' object has no attribute 'req'\n\nhttps://travis-ci.org/jayvdb/coala/jobs/202070923","comments":4,"createdAt":"2017-02-16T08:21:23Z","updatedAt":"2017-03-12T15:03:04Z","closedAt":"2017-03-12T15:03:04Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"difficulty/medium","color":"0052cc"},{"name":"importance/medium","color":"fbca04"},{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1487246217000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3749","number":3749,"title":"coala exits with 0 when bears do not fulfill all requirements","body":"This makes CI look fine even though bears could not run and raised according [ERROR] messages. Just look at https://travis-ci.org/OpenNetworkingFoundation/CENTENNIAL/jobs/202208913\n$ coala --ci\nExecuting section Default...\nExecuting section javascript...\n[ERROR][11:20:25] The bear ESLintBear does not fulfill all requirements. 'eslint' is not installed.\nExecuting section yang...\nThe command \"coala --ci\" exited with 0.\nDone. Your build exited with 0.\n\n@sils","comments":1,"createdAt":"2017-02-16T11:28:32Z","updatedAt":"2017-02-16T11:56:57Z","closedAt":"2017-02-16T11:56:57Z","state":"closed","user":{"login":"userzimmermann","avatarUrl":"https://avatars3.githubusercontent.com/u/2088633?v=4"},"owner":{"login":"userzimmermann","avatarUrl":"https://avatars3.githubusercontent.com/u/2088633?v=4"},"labels":[{"name":"area/CI","color":"eb6420"},{"name":"area/CLI","color":"006b75"},{"name":"area/bears","color":"eb6420"},{"name":"importance/critical","color":"e11d21"},{"name":"status/duplicate","color":"000000"},{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1512060222000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3753","number":3753,"title":"Request wheels for all upstream Python packages","body":"The following do not have Windows wheels:\n Running setup.py install for sarge: started\n    Running setup.py install for sarge: finished with status 'done'\n  Running setup.py install for libclang-py3: started\n    Running setup.py install for libclang-py3: finished with status 'done'\n  Running setup.py install for termcolor: started\n    Running setup.py install for termcolor: finished with status 'done'\n  Running setup.py install for pytest-env: started\n    Running setup.py install for pytest-env: finished with status 'done'\n  Running setup.py install for pytest-xdist: started\n    Running setup.py install for pytest-xdist: finished with status 'done'\n\nhttps://ci.appveyor.com/project/coala/coala/build/1.0.6078/job/y30mactlfym0b397#L68\nAnd a little harder to see, the following do not have Unix wheels for Travis:\n\ncoverage\nsphinx-argparse (not used by Appveyor builds)","comments":6,"createdAt":"2017-02-16T13:40:16Z","updatedAt":"2017-11-30T16:43:42Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"Siddhartha1234","avatarUrl":"https://avatars3.githubusercontent.com/u/18551427?v=4"},"labels":[{"name":"area/upstream","color":"5319e7"},{"name":"difficulty/medium","color":"0052cc"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1518918398000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3754","number":3754,"title":"Mention coala.io shorturl on each doc page","body":"e.g. see shortcuts box on right side of http://enwp.org/WP:W2W\nOpened via gitter by @jayvdb","comments":8,"createdAt":"2017-02-16T16:14:31Z","updatedAt":"2018-02-18T01:46:38Z","closedAt":null,"state":"open","user":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"owner":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"assignee":{"login":"prakashdanish","avatarUrl":"https://avatars3.githubusercontent.com/u/19834040?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"},{"name":"importance/medium","color":"fbca04"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1535811421000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3755","number":3755,"title":"Mention \"Adding CI\" in Newcomers guide","body":"It should be mentioned in step 4 5\nOpened via gitter by @jayvdb","comments":2,"createdAt":"2017-02-16T16:15:34Z","updatedAt":"2018-09-01T14:17:01Z","closedAt":"2018-09-01T14:17:01Z","state":"closed","user":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"owner":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"assignee":{"login":"anuj97","avatarUrl":"https://avatars3.githubusercontent.com/u/18463482?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"importance/low","color":"70E870"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1488959254000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3756","number":3756,"title":"Taste documentation in aspect. Root is confusing","body":"bearlib/aspects/init.py\n\"\"\"\n Tastes can also be made available for only specific languages:\n    >>> from coalib.bearlib.languages import Language\n    >>> @Language\n    ... class GreaterTrumpScript:\n    ...     pass\n    >>> @Formatting.subaspect\n    ... class Greatness:\n    ...     \\\"\"\"\n    ...     This aspect controls the greatness of a file...\n    ...     \\\"\"\"\n    ...\n    ...     min_greatness = Taste[int](\n    ...         \"Minimum greatness factor needed for a TrumpScript file. \"\n    ...         \"This is fact.\",\n    ...         (1000000, 1000000000, 1000000000000), default=1000000,\n    ...         languages=('GreaterTrumpScript' ,))\n    >>> Greatness.tastes\n    {'min_greatness': <....Taste[int] object at ...>}\n    >>> Greatness('GreaterTrumpScript').tastes\n    {'min_greatness': 1000000}\n    >>> Greatness('GreaterTrumpScript', min_greatness=1000000000000).tastes\n    {'min_greatness': 1000000000000}\n    >>> Greatness('Python').tastes\n    {}\n\"\"\"\nI found those docstring example rather confusing because Trumpscript and Greatness is not a real well known language and metrics. There are many other possible example that more easy to understand like use Java language with Indentation taste.","comments":1,"createdAt":"2017-02-17T06:10:35Z","updatedAt":"2017-03-08T07:47:34Z","closedAt":null,"state":"open","user":{"login":"adhikasp","avatarUrl":"https://avatars2.githubusercontent.com/u/6151302?v=4"},"owner":{"login":"adhikasp","avatarUrl":"https://avatars2.githubusercontent.com/u/6151302?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1489138888000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3769","number":3769,"title":"Result.py: Preserve the order of arguments","body":"While going through https://github.com/coala/coala/blob/master/coalib/results/Result.py#L68, I noticed that the docstring params were in the order of the arguments in some functions except message_arguments. I think the order should be preserved since a user will have a tendency to check for docstring params in the order of arguments specified.\ndifficulty/newcomer","comments":0,"createdAt":"2017-02-18T22:21:41Z","updatedAt":"2017-03-10T09:41:28Z","closedAt":"2017-03-10T09:41:28Z","state":"closed","user":{"login":"yash-nisar","avatarUrl":"https://avatars1.githubusercontent.com/u/14862976?v=4"},"owner":{"login":"yash-nisar","avatarUrl":"https://avatars1.githubusercontent.com/u/14862976?v=4"},"assignee":{"login":"shreyans800755","avatarUrl":"https://avatars2.githubusercontent.com/u/3727351?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1488384992000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3770","number":3770,"title":"Testing_Bears.rst: Enclose result in []","body":"In Example 3 on https://github.com/coala/coala/blob/master/docs/Developers/Testing_Bears.rst, the expected result(list) is passed as a parameter to self.check_results(). The expected result ie. Result.from_values() is a list and therefore it should be enclosed in []\ndifficulty/newcomer","comments":2,"createdAt":"2017-02-19T06:39:14Z","updatedAt":"2017-03-01T16:16:32Z","closedAt":"2017-03-01T16:16:32Z","state":"closed","user":{"login":"yash-nisar","avatarUrl":"https://avatars1.githubusercontent.com/u/14862976?v=4"},"owner":{"login":"yash-nisar","avatarUrl":"https://avatars1.githubusercontent.com/u/14862976?v=4"},"assignee":{"login":"dristibutola","avatarUrl":"https://avatars0.githubusercontent.com/u/20968867?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1525143217000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3771","number":3771,"title":"Add is_important flag in Bear Class","body":"This would help in collecting and filtering important bears when required.\nOpened via gitter by @satwikkansal","comments":15,"createdAt":"2017-02-19T13:49:49Z","updatedAt":"2018-05-01T02:53:37Z","closedAt":null,"state":"open","user":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"owner":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"assignee":{"login":"satwikkansal","avatarUrl":"https://avatars1.githubusercontent.com/u/10217535?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1509698701000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3774","number":3774,"title":"Testing_Bears.rst: Properly format \"Understanding through examples\"","body":"Inside section Understanding through examples:\n\nInside code example:\n\n\nEnclose max_number_of_lines in double backticks instead of double quotes\n\nDetects if a file has more than \"max_number_of_lines\" lines\n\n\n\n\nif(len(file)>max_number_of_lines):\n\nimprove by adding spaces and remove redundant braces:\nif len(file) > max_number_of_lines:\n\n\n\nDetects if a file has more than \"max_number_of_lines\" lines\n\nAdd a period at end of sentence.\n\n\n\n:param max_number_of_lines    Maximum number of lines to be\nallowed for a file. Default is 10.\n\nProperly format:\n\nAdd a colon after max_number_of_lines\nAdjust layout, either\n:param max_number_of_lines: Maximum number of lines to be\n                            allowed for a file. Default is 10.\n\nor\n:param max_number_of_lines:\n    Maximum number of lines to be allowed for a file. Default is 10.\n\n\n\n\n\n\nyield Result(self, \"Too many lines\")\n\nUse single quotes instead of double quotes.","comments":6,"createdAt":"2017-02-20T20:29:21Z","updatedAt":"2017-11-03T08:45:01Z","closedAt":"2017-11-03T08:45:01Z","state":"closed","user":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"owner":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"assignee":{"login":"zhongLxyz","avatarUrl":"https://avatars0.githubusercontent.com/u/25083417?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1487629308000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3775","number":3775,"title":"SourcePosition.py: test ordering","body":"Use the helper functions defined in test.","comments":0,"createdAt":"2017-02-20T22:21:37Z","updatedAt":"2017-02-20T22:21:48Z","closedAt":null,"state":"open","user":{"login":"aptrishu","avatarUrl":"https://avatars1.githubusercontent.com/u/22702242?v=4"},"owner":{"login":"aptrishu","avatarUrl":"https://avatars1.githubusercontent.com/u/22702242?v=4"},"assignee":{"login":"aptrishu","avatarUrl":"https://avatars1.githubusercontent.com/u/22702242?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1487884867000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3780","number":3780,"title":"doctest assumes Python 3","body":"The doctest added in #3680 assumes that python is Python 3.\nOn systems where it is Python 2, the stderr will contain a NameError.\nPython 2.7.13 (default, Feb 21 2017, 12:00:39) \n[GCC 7.0.1 20170219 (Red Hat 7.0.1-0.9)] on linux2\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\n>>> input()\ndata\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"<string>\", line 1, in <module>\nNameError: name 'data' is not defined","comments":0,"createdAt":"2017-02-23T19:46:52Z","updatedAt":"2017-02-23T21:21:07Z","closedAt":"2017-02-23T21:21:07Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"area/tests","color":"bfd4f2"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1489914822000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3782","number":3782,"title":"Diff: deletion stats can be incorrect","body":"Since out of range deletions are allowed, the stats that will be created are incorrect\nIn [1]: from coalib.results.Diff import Diff\n\nIn [2]: a = Diff(['1', '2'])\n\nIn [3]: a.delete_lines(2,10)\n\nIn [4]: a.modified\nOut[4]: ['1']\n\nIn [5]: a.stats()\nOut[5]: (0, 9)\nIs this an intended behavior?","comments":4,"createdAt":"2017-02-24T11:46:24Z","updatedAt":"2017-03-19T09:13:42Z","closedAt":"2017-03-19T09:13:42Z","state":"closed","user":{"login":"meetmangukiya","avatarUrl":"https://avatars0.githubusercontent.com/u/7620533?v=4"},"owner":{"login":"meetmangukiya","avatarUrl":"https://avatars0.githubusercontent.com/u/7620533?v=4"},"assignee":{"login":"Techievena","avatarUrl":"https://avatars2.githubusercontent.com/u/17270966?v=4"},"labels":[{"name":"area/core","color":"eb6420"},{"name":"difficulty/low","color":"207de5"},{"name":"importance/low","color":"70E870"},{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1527404028000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3785","number":3785,"title":"Docs: Let `setup.py docs` generate them from the current repo, not installation","body":"As a dev I have often a stable version or some development version from pip installed. When executing setup.py docs, it grabs the docs from the installed package, not the repo.","comments":3,"createdAt":"2017-02-24T21:38:48Z","updatedAt":"2018-05-27T06:53:48Z","closedAt":null,"state":"open","user":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"owner":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"assignee":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1491827375000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3786","number":3786,"title":"CI: Avoid installing coala twice (latest PR + latest pre-release)","body":"There were recent problems with documentation generation which exposed another coala installation in the CI that is not installed from the submitted PR, but is the latest pre-release. We should avoid it.","comments":5,"createdAt":"2017-02-24T21:45:39Z","updatedAt":"2017-04-10T12:29:35Z","closedAt":"2017-04-10T12:29:35Z","state":"closed","user":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"owner":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"labels":[{"name":"area/CI","color":"eb6420"},{"name":"importance/low","color":"70E870"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1487975791000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3787","number":3787,"title":"Sphinx docs on master should include the commit hash or build date","body":"commit hash could be obtained via #3595\nThe build date could be added using .misc/adjust_version_number.py, however that change should be undone after the docs to avoid it being part of PRs. (do and undo in setup.py docs?)\nOpened via gitter by @jayvdb","comments":0,"createdAt":"2017-02-24T22:36:26Z","updatedAt":"2017-02-24T22:36:31Z","closedAt":null,"state":"open","user":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"owner":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1488230739000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3788","number":3788,"title":"Optimize Caching : Add Bear Specific Cache Optimization ( BSCO ) ","body":"This is with reference to the context of  \"Optimize Caching\" GSoC Project for the upcoming summers.\n\n\nProposal  :\n( Only valid for bears which do not use External Linters )\nDescription : The current caching technique runs the bear on whichever file is modified after previous      run. But in the situation where there are many modified files of huge size with only small changes in each ( Very frequent in incremental builds of project) , re running coala on the files all over again leads to poor performance . BSCO aims to define a minimum section of code that needs to re checked near each modified line i.e a \"Bear dependent Section\" (BDS) with a greedy approach which on the worst case would lead to the current Caching technique , but would boost  performance in general.\"Caching.py\" file would have generic functions for some additional flags mentioned by each bear for caching to control atleast which part of the code should be re run ,so that the bear  doesn't give false flags.\nThe following are the discussed Pros and Cons if this is included in current \"Caching Method \":\n\n\n\nPros:\n*  This will lead to a huge gain in performance with bears that parse through \"sections\" running on big files.\n*  The scenario where BSCO performs best is this: \"There are tons of files and the user runs coala only after small changes to a lot of these files, but not too small that computing the benefits of BSCO is costlier than not doing it, but not too large that using BSCO (the diff calculation part) is slower than running the bear itself.\"\nCons:\n*  Sometimes ,the cost of computing the benefits of BSCO might exceed the benefits of using BSCO , which can be mentioned in Bear specific Cache flags  to avoid using it.\n*  All the current Bears would have to add additional flags , by default it will assume the current worst case.\n*  No gain in time complexity of  \"diff\" part , but realtime data should improve.","comments":4,"createdAt":"2017-02-25T07:51:43Z","updatedAt":"2017-02-27T21:25:39Z","closedAt":null,"state":"open","user":{"login":"Siddhartha1234","avatarUrl":"https://avatars3.githubusercontent.com/u/18551427?v=4"},"owner":{"login":"Siddhartha1234","avatarUrl":"https://avatars3.githubusercontent.com/u/18551427?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1494023169000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3790","number":3790,"title":"Diff: Implement new property that indicates whether actual changes exist","body":"EDIT (by @Makman2):\nIt's useful to check whether a diff has actually changes in it, and currently it can be only checked like this:\nif self.modified != self._file:\n    ...\nwhich is ugly because self._file is protected.\nA property should be introduced, Diff.has_changes or Diff.is_modified (or similar), which indicates if there are actually changes.","comments":18,"createdAt":"2017-02-26T11:36:16Z","updatedAt":"2017-05-05T22:26:09Z","closedAt":"2017-05-04T20:34:23Z","state":"closed","user":{"login":"meetmangukiya","avatarUrl":"https://avatars0.githubusercontent.com/u/7620533?v=4"},"owner":{"login":"meetmangukiya","avatarUrl":"https://avatars0.githubusercontent.com/u/7620533?v=4"},"assignee":{"login":"lshobith","avatarUrl":"https://avatars3.githubusercontent.com/u/21293391?v=4"},"labels":[{"name":"area/core","color":"eb6420"},{"name":"difficulty/low","color":"207de5"},{"name":"importance/medium","color":"fbca04"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1489576630000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3792","number":3792,"title":"docs: Update styling to match with coala/documentation","body":"Involves replicating all the styling changes done in documentation repo to Developer docs coala/documentation@bfa74dc\nOpened via gitter by @hemangsk","comments":0,"createdAt":"2017-02-26T20:37:55Z","updatedAt":"2017-03-15T11:17:10Z","closedAt":"2017-03-15T11:17:10Z","state":"closed","user":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"owner":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"assignee":{"login":"hemangsk","avatarUrl":"https://avatars3.githubusercontent.com/u/13018570?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1523521954000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3793","number":3793,"title":"Warning says to enable debug when debug is already enabled","body":"When running coala with -V , a warning message says to enable -V\nBear CheckstyleBear failed to run. Take a look at debug messages (`-V`) for further information.\n\nhttps://ci.appveyor.com/project/coala/coala-bears/build/job/c9ca1wygut9y7eds","comments":9,"createdAt":"2017-02-26T22:05:45Z","updatedAt":"2018-04-12T08:32:34Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"importance/low","color":"70E870"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1493362364000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3795","number":3795,"title":"Caching : Use 'cPickle' module instead of 'Pickle' ","body":"cPickle is written in C and is upto 1000 times faster as mentioned in https://docs.python.org/2.4/lib/module-cPickle.html and can be used interchangeably with few changes.","comments":1,"createdAt":"2017-02-27T14:34:13Z","updatedAt":"2017-04-28T06:52:44Z","closedAt":"2017-03-01T13:59:29Z","state":"closed","user":{"login":"Siddhartha1234","avatarUrl":"https://avatars3.githubusercontent.com/u/18551427?v=4"},"owner":{"login":"Siddhartha1234","avatarUrl":"https://avatars3.githubusercontent.com/u/18551427?v=4"},"assignee":{"login":"Siddhartha1234","avatarUrl":"https://avatars3.githubusercontent.com/u/18551427?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"},{"name":"importance/low","color":"70E870"},{"name":"status/invalid","color":"000000"},{"name":"type/performance","color":"fef2c0"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1488440902000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3796","number":3796,"title":"TypeError in Linter.run with --settings","body":"A TypeError is generated from the following command line in the coala-bears directory\n$  coala-ci -I --bears CheckstyleBear --files ./tests/java/test_files/CheckstyleGood.java -V --settings checkstyle_configs=geosoft\nWARNING:root:Use of `coala-ci` binary is deprecated, use `coala --non-interactive` instead.\n[DEBUG][21:33:52] Platform Linux -- Python 3.6.0, coalib 0.10.0.dev99999999999999\n[DEBUG][21:33:52] Since the configuration settings have changed since the last run, the cache will be flushed and rebuilt.\n[DEBUG][21:33:52] The file cache was successfully flushed.\nExecuting section cli...\n[DEBUG][21:33:52] coala is run only on changed files, bears' log messages from previous runs may not appear. You may use the `--flush-cache` flag to see them.\n[DEBUG][21:33:52] Files that will be checked:\n/../coala-bears/tests/java/test_files/CheckstyleGood.java\n[DEBUG][21:33:52] Running bear CheckstyleBear...\n[WARNING][21:33:52] Bear CheckstyleBear failed to run on file /../coala/coala-bears/tests/java/test_files/CheckstyleGood.java. Take a look at debug messages (`-V`) for further information.\n[DEBUG][21:33:52] The bear CheckstyleBear raised an exception. If you are the author of this bear, please make sure to catch all exceptions. If not and this error annoys you, you might want to get in contact with the author of this bear.\n\nTraceback information is provided below:\n\nTraceback (most recent call last):\n  File \"/../coala/coalib/bears/Bear.py\", line 250, in execute\n    result = self.run_bear_from_section(args, kwargs)\n  File \"/../coala/coalib/bears/Bear.py\", line 243, in run_bear_from_section\n    return self.run(*args, **kwargs)\n  File \"/../coala/coalib/bearlib/abstractions/Linter.py\", line 550, in run\n    self.debug(\"Running '{}'\".format(' '.join(arguments)))\nTypeError: sequence item 2: expected str instance, NoneType found\n\nI believe it should have behind the scenes set cli.checkstyle_configs=geosoft, and maybe emitted a deprecation notice, but adding the cli. prefix is quite redundant.","comments":3,"createdAt":"2017-02-27T14:39:55Z","updatedAt":"2017-03-02T07:48:22Z","closedAt":"2017-03-02T07:48:12Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"Techievena","avatarUrl":"https://avatars2.githubusercontent.com/u/17270966?v=4"},"labels":[{"name":"area/tests","color":"bfd4f2"},{"name":"difficulty/low","color":"207de5"},{"name":"platform/linux","color":"c2e0c6"},{"name":"status/invalid","color":"000000"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1526034638000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3365","number":3365,"title":"Ignore comment does not work for VultureBear","body":"VultureBear is not ignoring the ignore comments that are given for an unused variable or function.\nSteps to reproduce\n\n\nCeate a file, let's say something.py, with the following code\n def fun():  # Ignore VultureBear\n     pass\n\n\n\nRun the following command\n coala -I --bears VultureBear --files something.py -S use_spaces=True\n\n\n\nActual Result\nExecuting section Default...\n\nsomething.py\n|   1| def•fun():••#•Ignore•VultureBear\n|    | [NORMAL] VultureBear:\n|    | Unused function 'fun'\n|    | *0: Do nothing\n|    |  1: Open file(s)\n|    |  2: Add ignore comment\n|    | Enter number (Ctrl-D to exit): 0\n\nExpected Result\nExecuting section Default...","comments":18,"createdAt":"2016-12-22T14:00:40Z","updatedAt":"2018-05-11T10:30:38Z","closedAt":"2018-05-11T10:30:38Z","state":"closed","user":{"login":"Abhisek-","avatarUrl":"https://avatars1.githubusercontent.com/u/9455582?v=4"},"owner":{"login":"Abhisek-","avatarUrl":"https://avatars1.githubusercontent.com/u/9455582?v=4"},"assignee":{"login":"RJ722","avatarUrl":"https://avatars1.githubusercontent.com/u/15556382?v=4"},"labels":[{"name":"importance/medium","color":"fbca04"},{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1483404574000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3366","number":3366,"title":"coala is not remembering the previous actions in interactive mode","body":"When run coala in interactive mode, it does not remember the changes applied and produces weird ouput.\nSteps to reproduce\n\n\nCreate a file, let's say something.py, with the following content.\n def fun():\n     print('start of the function')\n\n     print('something')  \n\n     print('end of the function')\n\n if __name__ == '__main__':\n     fun()\n\nNote: there are two trailing spaces after print('something')\n\n\nAfter that run coala -I --bears SpaceConsistencyBear --files something.py -S use_spaces=True\n something.py:\n |   4| ••••print('something')••\n |    | [NORMAL] SpaceConsistencyBear:\n |    | Line contains following spacing inconsistencies:\n |    | - Trailing whitespaces.\n |----|    | /home/abhisek/Github/coala/something.py\n |    |++++| /home/abhisek/Github/coala/something.py\n |   1|   1| def fun():\n |   2|   2|     print('start of the function')\n |   3|   3| \n |   4|    |-    print('something')  \n |    |   4|+    print('something')\n |   5|   5| \n |   6|   6|     print('end of the function')\n |   7|   7| \n |    | *0: Do nothing\n |    |  1: Open file(s)\n |    |  2: Apply patch\n |    |  3: Print more info\n |    |  4: Add ignore comment\n |    | Enter number (Ctrl-D to exit): 2\n |    | Patch applied successfully.\n |    | *0: Do nothing\n |    |  1: Open file(s)\n |    |  2: Print more info\n |    |  3: Add ignore comment\n |    | Enter number (Ctrl-D to exit): 3\n |    | Please enter a value for the parameter 'language' (No description given.): python\n |    | An ignore comment was added to your source code.\n |    | *0: Do nothing\n |    |  1: Open file(s)\n |    |  2: Apply patch\n |    |  3: Print more info\n |    |  4: Add ignore comment\n |    | Enter number (Ctrl-D to exit): 0\n\n\n\nObservation\n\n\nWhen entered 2\nIt says it applied the patch and then shows 4 options.\nBut it should exit at that very moment because after applying\nthe patch there is nothing else to do as all the issues has been\nresolved(remember only one line was infected).\n\n\nWhen entered 3\nIt appends a ignore statement to the line to which it just applied a patch in the previous step by\nproducing the following.\n def fun():\n     print('start of the function')\n\n     print('something')# Ignore SpaceConsistencyBear\n\n     print('end of the function')\n\n if __name__ == '__main__':\n     fun()\n\nand then again it shows the options!!","comments":12,"createdAt":"2016-12-22T17:05:46Z","updatedAt":"2017-01-03T00:49:34Z","closedAt":"2017-01-03T00:49:34Z","state":"closed","user":{"login":"Abhisek-","avatarUrl":"https://avatars1.githubusercontent.com/u/9455582?v=4"},"owner":{"login":"Abhisek-","avatarUrl":"https://avatars1.githubusercontent.com/u/9455582?v=4"},"assignee":{"login":"Udayan12167","avatarUrl":"https://avatars1.githubusercontent.com/u/6421568?v=4"},"labels":[{"name":"area/usability","color":"d4c5f9"},{"name":"importance/high","color":"eb6420"},{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1497101810000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3367","number":3367,"title":"setup.py install: Create a \"commit-sha\" field in coalib","body":"As self-installs from a git clone have dev9999999... version, we should add a commit sha into the module, like coalib.__sha__ or coalib.__commit__ or whatever\nThis makes bisecting problems easier.\nI would also add to the commit string whether the branch was dirty on install, or not, so it looks like\nab87df1-dirty or ab87df1*","comments":39,"createdAt":"2016-12-22T20:26:51Z","updatedAt":"2017-06-10T13:36:50Z","closedAt":null,"state":"open","user":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"owner":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"assignee":{"login":"arush0311","avatarUrl":"https://avatars0.githubusercontent.com/u/12007608?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"},{"name":"importance/low","color":"70E870"},{"name":"status/needs design","color":"5319e7"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1524069381000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3369","number":3369,"title":"Glob `**/*.rst`matching files in project root","body":"Glob */**.rst should only match files in sub-directories.  See Java for original concept of ** globbing, and our Glob Patterns page.\nAnd indeed, this does appear to work in a quick test.\ncoala$ python3 -c \"from coalib.parsing.Globbing import glob; print(set(glob('**.rst')) - set(glob('*/**.rst')))\"\n{'CONTRIBUTING.rst', 'RELEASE_NOTES.rst', 'README.rst'}\n\nHowever at https://github.com/coala/coala-bears/pull/1183/files#r93297157 , this is not what occurs.\nDoing that on the command line seems to work\ncoala$ coala -I --bears '' --files '*/**.rst' --verbose --flush-cache\n[DEBUG][03:38:35] Platform Linux -- Python 3.5.2, coalib 0.10.0.dev99999999999999\n[DEBUG][03:38:35] The file cache was successfully flushed.\nExecuting section Default...\n[DEBUG][03:38:35] coala is run only on changed files, bears' log messages from previous runs may not appear. You may use the `--flush-cache` flag to see them.\n[DEBUG][03:38:35] Files that will be checked:\n.../coala/docs/Developers/Writing_Bears.rst\n.../coala/docs/Developers/Writing_Documentation.rst\n.../coala/docs/Developers/Development_Setup.rst\n.../coala/docs/Developers/Executing_Tests.rst\n.../coala/docs/Developers/Codestyle.rst\n.../coala/docs/Developers/gc1.rst\n.../coala/docs/Developers/Linter_Bears_Advanced.rst\n.../coala/docs/Developers/Git_Basics.rst\n.../coala/docs/index.rst\n.../coala/docs/Developers/Testing_Bears.rst\n.../coala/docs/Developers/Review.rst\n.../coala/docs/Developers/Writing_Good_Commits.rst\n.../coala/docs/Developers/coala_settings.rst\n.../coala/docs/Developers/External_Bears.rst\n.../coala/docs/Developers/Writing_Tests.rst\n.../coala/docs/Developers/Writing_Linter_Bears.rst\n.../coala/docs/Developers/Bear_Installation_Tool.rst\n.../coala/docs/Developers/Newcomers_Guide.rst\n.../coala/docs/Developers/Implementation_Task.rst\n$","comments":10,"createdAt":"2016-12-22T20:52:27Z","updatedAt":"2018-04-18T16:36:21Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"},{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1524177859000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3372","number":3372,"title":"Invalid bear name does not raise an error","body":"see coala/coala-bears@47f61cc from coala/coala-bears#1178\nOpened via gitter by @jayvdb","comments":5,"createdAt":"2016-12-22T21:34:43Z","updatedAt":"2018-04-19T22:44:19Z","closedAt":"2018-04-19T22:44:19Z","state":"closed","user":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"owner":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"assignee":{"login":"anctartica","avatarUrl":"https://avatars0.githubusercontent.com/u/7020962?v=4"},"labels":[{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1522501582000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3374","number":3374,"title":"Replace assertRaises with assertRaisesRegex","body":"unittest.assertRaises is always lazy, and should be avoided.\nunitest.assertRaisesRegex has an extra parameter to check the exception message, and should be used instead.\nunittest.assertRaises is used 172 times in 44 files in this repo\n$ git grep -l 'assertRaises(' | wc\n     44      44    1660\n$ git grep 'assertRaises(' | wc\n    172     640   15481","comments":14,"createdAt":"2016-12-23T09:17:22Z","updatedAt":"2018-03-31T13:06:22Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"gabi0348","avatarUrl":"https://avatars2.githubusercontent.com/u/32877573?v=4"},"labels":[{"name":"area/tests","color":"bfd4f2"},{"name":"difficulty/low","color":"207de5"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1510537023000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3375","number":3375,"title":"After adding an ignore comment, the option should not be available any more.","body":"","comments":2,"createdAt":"2016-12-23T12:26:22Z","updatedAt":"2017-11-13T01:37:03Z","closedAt":"2017-11-13T01:37:03Z","state":"closed","user":{"login":"Udayan12167","avatarUrl":"https://avatars1.githubusercontent.com/u/6421568?v=4"},"owner":{"login":"Udayan12167","avatarUrl":"https://avatars1.githubusercontent.com/u/6421568?v=4"},"assignee":{"login":"mrtes","avatarUrl":"https://avatars3.githubusercontent.com/u/19871688?v=4"},"labels":[{"name":"area/results","color":"eb6420"},{"name":"difficulty/medium","color":"0052cc"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1483698094000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3376","number":3376,"title":"The ignore comment added through the result action should have one or two spaces after the statement.","body":"","comments":1,"createdAt":"2016-12-23T12:27:30Z","updatedAt":"2017-01-06T10:21:34Z","closedAt":null,"state":"open","user":{"login":"Udayan12167","avatarUrl":"https://avatars1.githubusercontent.com/u/6421568?v=4"},"owner":{"login":"Udayan12167","avatarUrl":"https://avatars1.githubusercontent.com/u/6421568?v=4"},"assignee":{"login":"Udayan12167","avatarUrl":"https://avatars1.githubusercontent.com/u/6421568?v=4"},"labels":[{"name":"area/results","color":"eb6420"},{"name":"importance/medium","color":"fbca04"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1483698095000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3377","number":3377,"title":"When applying a patch, don't ask for something else, continue with next result.","body":"","comments":2,"createdAt":"2016-12-23T12:32:23Z","updatedAt":"2017-01-06T10:21:35Z","closedAt":null,"state":"open","user":{"login":"Udayan12167","avatarUrl":"https://avatars1.githubusercontent.com/u/6421568?v=4"},"owner":{"login":"Udayan12167","avatarUrl":"https://avatars1.githubusercontent.com/u/6421568?v=4"},"assignee":{"login":"Udayan12167","avatarUrl":"https://avatars1.githubusercontent.com/u/6421568?v=4"},"labels":[{"name":"importance/high","color":"eb6420"},{"name":"status/needs design","color":"5319e7"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1486068642000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3379","number":3379,"title":"remove format_str for real this time","body":"This legacy setting needs to go badly..... give people a few releases to clean up their code before removing it.","comments":5,"createdAt":"2016-12-23T21:22:27Z","updatedAt":"2017-02-02T20:50:42Z","closedAt":"2017-02-02T20:30:49Z","state":"closed","user":{"login":"Mixih","avatarUrl":"https://avatars2.githubusercontent.com/u/5818750?v=4"},"owner":{"login":"Mixih","avatarUrl":"https://avatars2.githubusercontent.com/u/5818750?v=4"},"assignee":{"login":"sils","avatarUrl":"https://avatars0.githubusercontent.com/u/5716520?v=4"},"milestone":{"title":"0.10","createdAt":"2016-11-27T15:43:36Z","dueOn":"2017-01-28T00:00:00Z","state":"closed","htmlUrl":"https://github.com/coala/coala/milestone/12","description":""},"labels":[{"name":"area/CLI","color":"006b75"},{"name":"area/usability","color":"d4c5f9"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1484123287000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3385","number":3385,"title":"PyPI ascinema messed up","body":"Split from #3340 :\nAlso the ascii cinema is messed up:\n\nMonitor: 1920x1080p","comments":5,"createdAt":"2016-12-24T12:40:40Z","updatedAt":"2017-01-11T08:28:07Z","closedAt":"2017-01-11T08:28:07Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"HitRam","avatarUrl":"https://avatars3.githubusercontent.com/u/19632768?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1509933450000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3388","number":3388,"title":"Document default_coafile","body":"default_coafile can be used to solve problems like #3131 .  How and when it is used & modified should be in the dev docs.\n$ git grep default_coafile\n...","comments":9,"createdAt":"2016-12-25T04:32:07Z","updatedAt":"2017-11-06T01:57:30Z","closedAt":"2017-10-31T19:46:07Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"newbazz","avatarUrl":"https://avatars1.githubusercontent.com/u/25884863?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/low","color":"207de5"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1514838824000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3389","number":3389,"title":"Change default_coafile naming convention.","body":"Should we change the name of default_coafile in coalib to system_coafile?\nIt will avoid confusion due to the following lines in Constants.py\nsystem_coafile = os.path.join(coalib_root, 'default_coafile')\n\nuser_coafile = os.path.join(os.path.expanduser('~'), '.coarc')\n\ndefault_coafile = '.coafile'","comments":14,"createdAt":"2016-12-25T15:38:23Z","updatedAt":"2018-01-01T20:33:44Z","closedAt":"2018-01-01T20:33:44Z","state":"closed","user":{"login":"nemaniarjun","avatarUrl":"https://avatars0.githubusercontent.com/u/15715894?v=4"},"owner":{"login":"nemaniarjun","avatarUrl":"https://avatars0.githubusercontent.com/u/15715894?v=4"},"assignee":{"login":"pradeepgangwar","avatarUrl":"https://avatars1.githubusercontent.com/u/21259802?v=4"},"labels":[{"name":"area/core","color":"eb6420"},{"name":"difficulty/low","color":"207de5"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1483358869000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3392","number":3392,"title":"Add setting that allows turning off the warning about patches not being auto applicable","body":"And this should also be used for the force_show_patch mode in run_coala. importance/high\nOpened via gitter by @sils","comments":10,"createdAt":"2016-12-25T17:30:44Z","updatedAt":"2017-01-02T12:07:49Z","closedAt":"2017-01-02T12:07:49Z","state":"closed","user":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"owner":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"assignee":{"login":"Shade5","avatarUrl":"https://avatars0.githubusercontent.com/u/13672946?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"},{"name":"importance/high","color":"eb6420"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1484485295000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3395","number":3395,"title":"Change variable name `default_sections` to `base_sections`","body":"From @nemaniarjun :\n\nAlso should we change a bit of naming convention in ConfigurationGathering.py?\nThe following part could be clearer:\n else:\n     default_sections = load_config_file(Constants.system_coafile,\n                                         log_printer)\n     user_sections = load_config_file(\n         Constants.user_coafile,\n         log_printer,\n         silent=True)\n\n     default_config = str(\n         default_sections['default'].get('config', '.coafile'))\n     user_config = str(user_sections['default'].get(\n         'config', default_config))\n     config = os.path.abspath(\n         str(cli_sections['default'].get('config', user_config)))\n\nI say we change default_sections to base_sections or similar.","comments":5,"createdAt":"2016-12-25T20:02:16Z","updatedAt":"2017-01-15T13:01:35Z","closedAt":"2017-01-15T13:01:35Z","state":"closed","user":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"owner":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"assignee":{"login":"ankit01ojha","avatarUrl":"https://avatars2.githubusercontent.com/u/21126132?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1529634028000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3398","number":3398,"title":"ConsoleInteraction.py: Improve use of range builtin function for SourceRange","body":"range is a builtin function. We should not use range for any other purpose other than iterating over the iterator(which is offered by python).\nLocation:\n\ncoalib/results/Diff.py:Diff.range\ncoalib/output/ConsoleInteraction.py:print_results_formatted\ncoalib/results/Result.py:Result.overlaps\ncoalib/results/Result.py:Result:from_values (suggested by @vijeth-aradhya )\ncoalib/processes/Processing.py:check_result_ignore","comments":14,"createdAt":"2016-12-26T10:38:54Z","updatedAt":"2018-06-22T02:20:28Z","closedAt":"2018-06-22T02:20:28Z","state":"closed","user":{"login":"Abhisek-","avatarUrl":"https://avatars1.githubusercontent.com/u/9455582?v=4"},"owner":{"login":"Abhisek-","avatarUrl":"https://avatars1.githubusercontent.com/u/9455582?v=4"},"assignee":{"login":"kirankonduru","avatarUrl":"https://avatars3.githubusercontent.com/u/13452436?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"type/codestyle","color":"d4c5f9"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1484303079000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3402","number":3402,"title":"OSX xcode llvm 3.6 not found","body":"When I try running the tests it cant find clang.\nMy clang version:\nApple LLVM version 6.1.0 (clang-602.0.53) (based on LLVM 3.6.0svn)\nTarget: x86_64-apple-darwin14.5.0\nThread model: posix\n\nThe result when I try running the test : http://pastebin.com/JgRDAsM2\nSKIP [1] tests/c_languages/codeclone_detection/ClangCountingConditionsTest.py:64: dlopen(libclang.so, 6): image not found. To provide a path to libclang use Config.set_library_path() or Config.set_library_file().","comments":4,"createdAt":"2016-12-27T07:22:02Z","updatedAt":"2017-01-13T10:24:39Z","closedAt":null,"state":"open","user":{"login":"rhemon","avatarUrl":"https://avatars2.githubusercontent.com/u/6615517?v=4"},"owner":{"login":"rhemon","avatarUrl":"https://avatars2.githubusercontent.com/u/6615517?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1485270928000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3406","number":3406,"title":"Add a warning about the evil green button on the pull request template","body":"","comments":5,"createdAt":"2016-12-27T15:09:55Z","updatedAt":"2017-01-24T15:15:28Z","closedAt":"2017-01-24T15:15:28Z","state":"closed","user":{"login":"adtac","avatarUrl":"https://avatars2.githubusercontent.com/u/7521600?v=4"},"owner":{"login":"adtac","avatarUrl":"https://avatars2.githubusercontent.com/u/7521600?v=4"},"assignee":{"login":"bharg","avatarUrl":"https://avatars0.githubusercontent.com/u/2763795?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1490994857000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3407","number":3407,"title":"Emphasize that you should never use the evil green button in the docs","body":"The user should never use it even if their life depended on it. Well, not really :P","comments":10,"createdAt":"2016-12-27T15:12:13Z","updatedAt":"2017-03-31T21:14:17Z","closedAt":null,"state":"open","user":{"login":"adtac","avatarUrl":"https://avatars2.githubusercontent.com/u/7521600?v=4"},"owner":{"login":"adtac","avatarUrl":"https://avatars2.githubusercontent.com/u/7521600?v=4"},"assignee":{"login":"rajeev-ju","avatarUrl":"https://avatars0.githubusercontent.com/u/23433769?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1483387393000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3408","number":3408,"title":"Writing_Linter_Bear.rst -> add link to Linter module","body":"In the section \"Where to find more\" we should add a link to\nhttp://api.coala.io/en/latest/coalib.bearlib.abstractions.html#module-coalib.bearlib.abstractions.Linter","comments":5,"createdAt":"2016-12-27T20:05:08Z","updatedAt":"2017-01-02T20:03:13Z","closedAt":"2017-01-02T20:03:13Z","state":"closed","user":{"login":"Nosferatul","avatarUrl":"https://avatars2.githubusercontent.com/u/15227444?v=4"},"owner":{"login":"Nosferatul","avatarUrl":"https://avatars2.githubusercontent.com/u/15227444?v=4"},"assignee":{"login":"rishikksh20","avatarUrl":"https://avatars1.githubusercontent.com/u/4656872?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1487094132000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3409","number":3409,"title":"OpenEditorAction.is_applicable and IgnoreResultAction.is_applicable are duplicates","body":"We should remove one of them and just assign the other :)\ndifficulty low but needs a bit of python knowledge I guess\nOpened via gitter by @sils","comments":14,"createdAt":"2016-12-27T22:45:28Z","updatedAt":"2017-02-14T17:42:12Z","closedAt":"2017-02-14T17:39:25Z","state":"closed","user":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"owner":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"assignee":{"login":"vreethesh","avatarUrl":"https://avatars2.githubusercontent.com/u/19870394?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1514666820000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3411","number":3411,"title":"check out rultor permission system","body":"see discussion (you won't be able to see it unless you're a maintainer)\nCC @Mixih\nOpened via gitter by @sils","comments":17,"createdAt":"2016-12-27T23:31:49Z","updatedAt":"2017-12-30T20:47:00Z","closedAt":"2017-12-30T17:29:15Z","state":"closed","user":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"owner":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"assignee":{"login":"Mixih","avatarUrl":"https://avatars2.githubusercontent.com/u/5818750?v=4"},"labels":[{"name":"area/upstream","color":"5319e7"},{"name":"importance/low","color":"70E870"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1528127810000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3416","number":3416,"title":"Make it possible to write Bears in Haskell","body":"It would be nice if coala would support bears written in Haskell. I have an example bear at https://github.com/maweki/coalaCheckBear-hs and a haskell framework prototype at https://github.com/maweki/coalaHs. As discussed with @sils, you guys could help out with the python/coala-side templating while I do the Haskell stuff.\nCurrently the example bear could be run with (if stack is set up) stack build && cat in.example.json | stack exec coalaCheckBear-hs. stack build can be run by coala and the files the bear registered for can be piped into stack exec coalaCheckBear-hs\nI think for this use case it is enough that the bear is self-contained. Any user interaction can be handled from the python side but the haskell-bear is basically a function from a stdin json to a stdout json where IO might be allowed.\nAs a base of discussion I'd consider a haskell-based bear one of the following two types: coala :: String -> (ByteString -> Maybe a) -> (a -> [Result]) -> IO () or coalaIO :: String -> (ByteString -> Maybe a) -> (a -> IO [Result]) -> IO () where the do-Nothing implementation of a full bear would be main = coala \"doNothingBear\" singleFile (const []).","comments":17,"createdAt":"2016-12-28T16:09:43Z","updatedAt":"2018-06-04T15:56:50Z","closedAt":null,"state":"open","user":{"login":"maweki","avatarUrl":"https://avatars1.githubusercontent.com/u/613272?v=4"},"owner":{"login":"maweki","avatarUrl":"https://avatars1.githubusercontent.com/u/613272?v=4"},"labels":[{"name":"area/bears","color":"eb6420"},{"name":"type/feature","color":"0052cc"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1498856089000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3419","number":3419,"title":"Extend exception message test regex in LinterTest.py","body":"In https://github.com/coala/coala/blob/master/tests/bearlib/abstractions/LinterTest.py#L32\nThe message should be extended to something like\n'[A-Za-z_]+ must be an instance of type [A-Za-z_]+'\n\nOtherwise people who read the string\n'[a-z_]+ must be an instance'\n\nthink the exception just tells that we need an instance and not a type. This is kind of misleading.\n(As seen the regex shall also support upper-case letters for the variable name, as python variable names don't have to be lower-case only.)","comments":10,"createdAt":"2016-12-28T21:16:58Z","updatedAt":"2017-06-30T20:54:49Z","closedAt":"2017-06-30T20:54:49Z","state":"closed","user":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"owner":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"assignee":{"login":"lphk92","avatarUrl":"https://avatars2.githubusercontent.com/u/761075?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1483431432000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3432","number":3432,"title":"Move dev versions to testpypi.python.org","body":"They currently show up as the default on https://pypi.python.org/pypi/coala and slow down the parsing of https://pypi.python.org/simple/coala/ .\nOpened via gitter by @jayvdb\nSteps:\n\n #3459","comments":8,"createdAt":"2016-12-30T01:39:13Z","updatedAt":"2017-01-03T08:17:12Z","closedAt":null,"state":"open","user":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"owner":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"labels":[{"name":"difficulty/medium","color":"0052cc"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1483887930000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3433","number":3433,"title":"Automate release process","body":"This has a few parts:\n\n release notes script\n rultor release process\nOpening an issue so progress can be tracked as I get around to each part","comments":2,"createdAt":"2016-12-30T04:00:40Z","updatedAt":"2017-01-08T15:05:30Z","closedAt":null,"state":"open","user":{"login":"Mixih","avatarUrl":"https://avatars2.githubusercontent.com/u/5818750?v=4"},"owner":{"login":"Mixih","avatarUrl":"https://avatars2.githubusercontent.com/u/5818750?v=4"},"assignee":{"login":"Mixih","avatarUrl":"https://avatars2.githubusercontent.com/u/5818750?v=4"},"labels":[{"name":"area/CI","color":"eb6420"},{"name":"importance/low","color":"70E870"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1485049468000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3436","number":3436,"title":"Have a flag to ignore base_coafile","body":"The usage of Default Coafile (or base coafile #3389) needs to be discussed.\nThis is needed for #3131\nWe need to give user a way to disable this file and also prevent overriding of configuration in default coafile.","comments":6,"createdAt":"2016-12-30T08:00:54Z","updatedAt":"2017-01-22T01:44:28Z","closedAt":null,"state":"open","user":{"login":"nemaniarjun","avatarUrl":"https://avatars0.githubusercontent.com/u/15715894?v=4"},"owner":{"login":"nemaniarjun","avatarUrl":"https://avatars0.githubusercontent.com/u/15715894?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1483613447000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3439","number":3439,"title":"Support `+=` operator to add settings instead of overiding","body":"For example:\nIf base_coafile (or default_coafile) contains ignore += *.txt\nand user coafile contains ignore = *.js\nwe want to ignore both js and txt files\nRight now, we use ignore = *.txt which gets overriden by the js ignore.","comments":6,"createdAt":"2016-12-30T17:47:18Z","updatedAt":"2017-01-05T10:50:47Z","closedAt":"2017-01-05T10:50:47Z","state":"closed","user":{"login":"nemaniarjun","avatarUrl":"https://avatars0.githubusercontent.com/u/15715894?v=4"},"owner":{"login":"nemaniarjun","avatarUrl":"https://avatars0.githubusercontent.com/u/15715894?v=4"},"assignee":{"login":"Flap-Py","avatarUrl":"https://avatars2.githubusercontent.com/u/11754275?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"},{"name":"importance/medium","color":"fbca04"},{"name":"type/feature","color":"0052cc"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1483724100000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3441","number":3441,"title":"IgnoreResultAction.py: Can use multiline_comment_delimiter as a fallback when comment_delimiter doesn't exist for a language","body":"Initial discussion\nPresently IgnoreResultAction.py uses comment_delimiter attribute to add ignore comments.\nSome bears such as CSSLintBear have multiline_comment_delimiter attribute and not a comment_delimiter and therefore this causes failure to add ignore comment in css files.\nSteps for reproduction:\n\nCreate file style.css\n\n.low{\nfont-family:Roboto;\ncolor:white;\n}\n\n\n\nExecute coala --bears CSSLintBear --files style.css\n\nstyle.css\n|   1| .low•{\n|    | [NORMAL] CSSLintBear:\n|    | Rule doesn't have all its properties in alphabetical order. (order-alphabetical)\n|    | *0: Do nothing\n|    |  1: Open file(s)\n|    |  2: Add ignore comment\n|    | Enter number (Ctrl-D to exit): 2\n|    | Please enter a value for the parameter 'language' (No description given.): css\n[ERROR][14:26:06] Failed to execute the action IgnoreResultAction with error: 'comment_delimiter'.\n|    | *0: Do nothing\n|    |  1: Open file(s)\n|    |  2: Add ignore comment\n|    | Enter number (Ctrl-D to exit): 2\n|    | Please enter a value for the parameter 'language' (No description given.): css\n[ERROR][14:26:13] Failed to execute the action IgnoreResultAction with error: 'comment_delimiter'.\n|    | *0: Do nothing\n|    |  1: Open file(s)\n|    |  2: Add ignore comment\n|    | Enter number (Ctrl-D to exit): 2\n|    | Please enter a value for the parameter 'language' (No description given.): scss\n[ERROR][14:26:19] Failed to execute the action IgnoreResultAction with error: .\n\nIt is asking for the parameter 'language' from the user and then if there is no language found with name css, it returns\nFailed to execute the action IgnoreResultAction with error: 'comment_delimiter'.\n\nPossible Solution\nWe can add an option in IgnoreResultAction,\n if language has attribute comment delimiter then\n    use comment_delimiter to add ignore comment\n elif language.hasattr(multiline_comment_delimiter) and not language.hasattr(comment_delimiter):\n   use multilime_comment_delimiter to add ignore comment\nelse\n  print (\"We don't have a comment_delimiter for this language, What would you like to wrap the ignore comment in ?\")\n   take comment delimiter as an input from user","comments":10,"createdAt":"2016-12-30T21:43:06Z","updatedAt":"2017-01-06T17:35:00Z","closedAt":"2017-01-06T17:33:44Z","state":"closed","user":{"login":"hemangsk","avatarUrl":"https://avatars3.githubusercontent.com/u/13018570?v=4"},"owner":{"login":"hemangsk","avatarUrl":"https://avatars3.githubusercontent.com/u/13018570?v=4"},"assignee":{"login":"nemaniarjun","avatarUrl":"https://avatars0.githubusercontent.com/u/15715894?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1484083149000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3445","number":3445,"title":"Change coala-json into coala --json in External_Bears.rst","body":"Changes should be done into External_Bears.rst (bottom note).","comments":2,"createdAt":"2016-12-31T16:51:40Z","updatedAt":"2017-01-10T21:19:09Z","closedAt":"2017-01-10T21:19:09Z","state":"closed","user":{"login":"andreidinu","avatarUrl":"https://avatars1.githubusercontent.com/u/23266228?v=4"},"owner":{"login":"andreidinu","avatarUrl":"https://avatars1.githubusercontent.com/u/23266228?v=4"},"assignee":{"login":"harshit890","avatarUrl":"https://avatars2.githubusercontent.com/u/12943200?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1518123883000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3447","number":3447,"title":"Investigate piton support","body":"piton works like npm.  It doesnt install the requirements globally, or create a venv, but has a local .python_modules which needs to be added to the PYTHONPATH.  This would mostly be useful for developer environments.\nThe piton package.json can be generated by .ci/generate_bear_requirements.py, and coala should be able to find the .python_modules, and add it to the module loader path at runtime.\nInitially this issue is primarily to describe how piton could work in practise for coala, noting any blockers.\nOpened via gitter by @jayvdb","comments":2,"createdAt":"2016-12-31T19:34:25Z","updatedAt":"2018-02-08T21:04:43Z","closedAt":null,"state":"open","user":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"owner":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"labels":[{"name":"area/upstream","color":"5319e7"},{"name":"status/blocked","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1483341348000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3449","number":3449,"title":"settings docs page formatting issues","body":"http://api.coala.io/en/latest/Developers/coala_settings.html\n\n Should not use raw url link\n coala --show-bears command line is not highlighted","comments":3,"createdAt":"2017-01-01T16:39:45Z","updatedAt":"2017-01-02T07:15:48Z","closedAt":"2017-01-02T07:15:48Z","state":"closed","user":{"login":"Mariatta","avatarUrl":"https://avatars1.githubusercontent.com/u/5844587?v=4"},"owner":{"login":"Mariatta","avatarUrl":"https://avatars1.githubusercontent.com/u/5844587?v=4"},"assignee":{"login":"Mariatta","avatarUrl":"https://avatars1.githubusercontent.com/u/5844587?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1483384911000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3452","number":3452,"title":"ConsoleInteraction.py: Add param docs for functions","body":"","comments":2,"createdAt":"2017-01-02T15:17:46Z","updatedAt":"2017-01-02T19:21:51Z","closedAt":"2017-01-02T19:21:51Z","state":"closed","user":{"login":"adtac","avatarUrl":"https://avatars2.githubusercontent.com/u/7521600?v=4"},"owner":{"login":"adtac","avatarUrl":"https://avatars2.githubusercontent.com/u/7521600?v=4"},"assignee":{"login":"vijeth-aradhya","avatarUrl":"https://avatars1.githubusercontent.com/u/15227565?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/low","color":"207de5"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1496828380000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3457","number":3457,"title":"Improve cobot Help Page","body":"Perhaps someone who's more familiar with cobot can provide more information about of how cobot help page can be further improved.\nThanks 😃\nFollow up from #3228","comments":2,"createdAt":"2017-01-03T03:51:36Z","updatedAt":"2017-06-07T09:39:40Z","closedAt":"2017-06-07T09:39:40Z","state":"closed","user":{"login":"Mariatta","avatarUrl":"https://avatars1.githubusercontent.com/u/5844587?v=4"},"owner":{"login":"Mariatta","avatarUrl":"https://avatars1.githubusercontent.com/u/5844587?v=4"},"labels":[{"name":"importance/high","color":"eb6420"},{"name":"status/needs design","color":"5319e7"},{"name":"status/needs info","color":"006b75"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1496828367000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3458","number":3458,"title":"Fix cobot (gitter hubot adapter)","body":"Can anyone familiar with cobot/hubot provide more info of what they'd like fixed in cobot/hubot?\nThanks 😃\nFollow up from #3228","comments":12,"createdAt":"2017-01-03T03:53:33Z","updatedAt":"2017-06-07T09:39:27Z","closedAt":"2017-06-07T09:39:27Z","state":"closed","user":{"login":"Mariatta","avatarUrl":"https://avatars1.githubusercontent.com/u/5844587?v=4"},"owner":{"login":"Mariatta","avatarUrl":"https://avatars1.githubusercontent.com/u/5844587?v=4"},"labels":[{"name":"area/upstream","color":"5319e7"},{"name":"importance/high","color":"eb6420"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1484389058000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3459","number":3459,"title":"Enhance Travis to upload wheel to testpypi","body":"This is the first step in #3432","comments":21,"createdAt":"2017-01-03T05:55:53Z","updatedAt":"2017-01-14T10:17:38Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1483586554000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3460","number":3460,"title":"Newcomers guide should reference to coala.io/devsetup","body":"We probably want to elaborate on that in step zero. Found by @satwikkansal\ndifficutly newcomer type/documentation\nOpened via gitter by @sils","comments":11,"createdAt":"2017-01-03T07:36:29Z","updatedAt":"2017-01-05T03:22:34Z","closedAt":"2017-01-05T03:22:34Z","state":"closed","user":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"owner":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"assignee":{"login":"satwikkansal","avatarUrl":"https://avatars1.githubusercontent.com/u/10217535?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1489576630000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3461","number":3461,"title":"Move pyvenv from MAC_Hints to Development_Setup","body":"Opened via gitter by @jayvdb","comments":17,"createdAt":"2017-01-03T07:36:30Z","updatedAt":"2017-03-15T11:17:10Z","closedAt":"2017-03-15T11:17:10Z","state":"closed","user":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"owner":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"assignee":{"login":"rhemon","avatarUrl":"https://avatars2.githubusercontent.com/u/6615517?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1483429080000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3462","number":3462,"title":"MAC_Hints: Include info about libclang version 3.4","body":"c.f. #3182\nOpened via gitter by @jayvdb","comments":0,"createdAt":"2017-01-03T07:37:57Z","updatedAt":"2017-01-03T07:38:00Z","closedAt":null,"state":"open","user":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"owner":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1483444128000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3463","number":3463,"title":"Elaborate on test writing for bears","body":"We do have some quality problems with our bears and sometimes the tests are just insufficient. IMO we need a policy that applies for all new bears (and that all old bears should be migrated to) in order for this quality change to happen because without guidelines reviewers will likely let simple tests let through. Maybe it'd be nice to have at least one \"explorative test\" in addition to the good file/bad file tests that checks if the right results are given for at least one case?\nCC @jayvdb\nstatus needs-design type documentation\nOpened via gitter by @sils","comments":0,"createdAt":"2017-01-03T08:07:09Z","updatedAt":"2017-01-03T11:48:48Z","closedAt":null,"state":"open","user":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"owner":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"labels":[{"name":"status/needs design","color":"5319e7"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1483604274000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3467","number":3467,"title":"OpenEditorAction should log a warning for unknown editors","body":"This is an amendment to  #3443 where we defined a set of known editors.\nFor unknown editors we just pass all the filenames and hope for the best. The user should be warned about this and encouraged to file an issue requesting support for that editor.","comments":2,"createdAt":"2017-01-03T19:00:33Z","updatedAt":"2017-01-05T08:17:54Z","closedAt":"2017-01-05T08:17:54Z","state":"closed","user":{"login":"NiklasMM","avatarUrl":"https://avatars1.githubusercontent.com/u/1924002?v=4"},"owner":{"login":"NiklasMM","avatarUrl":"https://avatars1.githubusercontent.com/u/1924002?v=4"},"assignee":{"login":"NiklasMM","avatarUrl":"https://avatars1.githubusercontent.com/u/1924002?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1483534155000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3470","number":3470,"title":"Error seen in autopep8 while executing Coala on Windows","body":"Hi,\nI am new to github and am assuming this is the right place to ask for some help in an issue seen. I was looking for some static analysis tools for C project which allows user to define rules and came across coala. I installed python, coala in my windows machine and executed coala. However, I am seeing errors. Can somebody kindly help? I have followed the installation steps mentioned in the site.\nC:\\Users\\100784123\\AppData\\Local\\Programs\\Python\\Python36-32\\Scripts>coala --files c://*.c\nExecuting section Default...\nExecuting section python...\n[INFO][11:10:47] Applied 'ApplyPatchAction' on '..\\..\\..\\..\\..\\..\\..\\..\\\\modelHost.c' fro\nm 'SpaceConsistencyBear'.\n[INFO][11:10:47] Applied 'ApplyPatchAction' on '..\\..\\..\\..\\..\\..\\..\\..\\\\modelHost.c' fro\nm 'SpaceConsistencyBear'.\n[INFO][11:10:47] Applied 'ApplyPatchAction' on '..\\..\\..\\..\\..\\..\\..\\..\\\\modelHost.c' fro\nm 'SpaceConsistencyBear'.\n....\nWhy does the same information come so many times. There must be >50 such messages for the same file.\nACTUAL ERROR\nExecuting section autopep8...\n[ERROR][11:10:48] An unknown error occurred. This is a bug. We are sorry for the inconvenience. Please contact the developers for assistance. During execution of coala an exception was raised. This should never happen. When asked for, the following information may help investigating:\n[INFO][11:10:48] Exception was:\nTraceback (most recent call last):\nFile \"c:\\users\\100784123\\appdata\\local\\programs\\python\\python36-32\\lib\\site-pa\nckages\\coalib\\coala_main.py\", line 110, in run_coala\nconsole_printer=console_printer)\nFile \"c:\\users\\100784123\\appdata\\local\\programs\\python\\python36-32\\lib\\site-pa\nckages\\coalib\\processes\\Processing.py\", line 702, in execute_section\nrunner.start()\nFile \"c:\\users\\100784123\\appdata\\local\\programs\\python\\python36-32\\lib\\multipr\nocessing\\process.py\", line 105, in start\nself._popen = self._Popen(self)\nFile \"c:\\users\\100784123\\appdata\\local\\programs\\python\\python36-32\\lib\\multipr\nocessing\\context.py\", line 223, in _Popen\nreturn _default_context.get_context().Process._Popen(process_obj)\nFile \"c:\\users\\100784123\\appdata\\local\\programs\\python\\python36-32\\lib\\multipr\nocessing\\context.py\", line 322, in _Popen\nreturn Popen(process_obj)\nFile \"c:\\users\\100784123\\appdata\\local\\programs\\python\\python36-32\\lib\\multipr\nocessing\\popen_spawn_win32.py\", line 65, in init\nreduction.dump(process_obj, to_child)\nFile \"c:\\users\\100784123\\appdata\\local\\programs\\python\\python36-32\\lib\\multipr\nocessing\\reduction.py\", line 60, in dump\nForkingPickler(file, protocol).dump(obj)\n_pickle.PicklingError: Can't pickle <PycodestyleBear linter class (wrapping 'pyc\nodestyle')>: attribute lookup PycodestyleBear on coalib.bearlib.abstractions.Lin\nter failed\nC:\\Users\\100784123\\AppData\\Local\\Programs\\Python\\Python36-32\\Scripts>Traceback (\nmost recent call last):\nFile \"\", line 1, in \nFile \"c:\\users\\100784123\\appdata\\local\\programs\\python\\python36-32\\lib\\multipr\nocessing\\spawn.py\", line 99, in spawn_main\nnew_handle = reduction.steal_handle(parent_pid, pipe_handle)\nFile \"c:\\users\\100784123\\appdata\\local\\programs\\python\\python36-32\\lib\\multipr\nocessing\\reduction.py\", line 87, in steal_handle\n_winapi.DUPLICATE_SAME_ACCESS | _winapi.DUPLICATE_CLOSE_SOURCE)\nPermissionError: [WinError 5] Access is denied","comments":4,"createdAt":"2017-01-04T07:17:05Z","updatedAt":"2017-01-04T12:49:15Z","closedAt":"2017-01-04T12:49:15Z","state":"closed","user":{"login":"varunamayya","avatarUrl":"https://avatars1.githubusercontent.com/u/24909303?v=4"},"owner":{"login":"varunamayya","avatarUrl":"https://avatars1.githubusercontent.com/u/24909303?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1503707940000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3472","number":3472,"title":"ConsoleInteraction.py: Replace log_printers with built-in logging.","body":"","comments":4,"createdAt":"2017-01-04T14:26:42Z","updatedAt":"2017-08-26T00:39:00Z","closedAt":"2017-08-26T00:39:00Z","state":"closed","user":{"login":"tulphoon","avatarUrl":"https://avatars3.githubusercontent.com/u/17809450?v=4"},"owner":{"login":"tulphoon","avatarUrl":"https://avatars3.githubusercontent.com/u/17809450?v=4"},"assignee":{"login":"shreyans800755","avatarUrl":"https://avatars2.githubusercontent.com/u/3727351?v=4"},"labels":[{"name":"area/logging","color":"0052cc"},{"name":"difficulty/medium","color":"0052cc"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1483694454000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3475","number":3475,"title":"Change `-output` arg help","body":"Change the help string of the output function in DefaultArgParser\nThe option is used to write coala results into a given file. Not the Logs.\nNeeded for #3037\nDifficulty Newcomer.\nImportance Low","comments":1,"createdAt":"2017-01-05T00:28:55Z","updatedAt":"2017-01-06T09:20:54Z","closedAt":"2017-01-06T09:20:54Z","state":"closed","user":{"login":"nemaniarjun","avatarUrl":"https://avatars0.githubusercontent.com/u/15715894?v=4"},"owner":{"login":"nemaniarjun","avatarUrl":"https://avatars0.githubusercontent.com/u/15715894?v=4"},"assignee":{"login":"satwikkansal","avatarUrl":"https://avatars1.githubusercontent.com/u/10217535?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"importance/low","color":"70E870"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1524927952000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3476","number":3476,"title":"Write a code review guideline","body":"coala needs a guideline for reviewers, listing common pitfalls, and steps they should follow to ensure merged patches are well designed and well tested.","comments":3,"createdAt":"2017-01-05T04:38:28Z","updatedAt":"2018-04-28T15:05:52Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/medium","color":"0052cc"},{"name":"importance/high","color":"eb6420"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1494968728000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3478","number":3478,"title":"Codestyle.rst : Rephrase sentence","body":"In the Codestyle documentation the following sentence\n\nshould be\n\nThis will raise a TypeError if a or b are not strings or c is not a string and not None","comments":11,"createdAt":"2017-01-05T11:03:14Z","updatedAt":"2017-05-16T21:05:28Z","closedAt":"2017-05-16T21:05:28Z","state":"closed","user":{"login":"satwikkansal","avatarUrl":"https://avatars1.githubusercontent.com/u/10217535?v=4"},"owner":{"login":"satwikkansal","avatarUrl":"https://avatars1.githubusercontent.com/u/10217535?v=4"},"assignee":{"login":"nityeshaga","avatarUrl":"https://avatars1.githubusercontent.com/u/24698858?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1483945450000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3481","number":3481,"title":"Newcomers_Guide.rst: There is a link typo","body":"There is a link typo in coala/docs/Developers/Newcomers_Guide.rst:","comments":3,"createdAt":"2017-01-05T13:24:21Z","updatedAt":"2017-01-09T07:04:10Z","closedAt":"2017-01-09T07:04:10Z","state":"closed","user":{"login":"gaocegege","avatarUrl":"https://avatars3.githubusercontent.com/u/5100735?v=4"},"owner":{"login":"gaocegege","avatarUrl":"https://avatars3.githubusercontent.com/u/5100735?v=4"},"assignee":{"login":"gaocegege","avatarUrl":"https://avatars3.githubusercontent.com/u/5100735?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/low","color":"207de5"},{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1483662912000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3484","number":3484,"title":"requirements.txt: Upgrade dependency_management version to 0.2.0","body":"Currently, the version is 0.1.7\nUpdate to dependency_management 0.2.0","comments":1,"createdAt":"2017-01-05T22:50:49Z","updatedAt":"2017-01-06T00:35:12Z","closedAt":"2017-01-06T00:35:12Z","state":"closed","user":{"login":"vijeth-aradhya","avatarUrl":"https://avatars1.githubusercontent.com/u/15227565?v=4"},"owner":{"login":"vijeth-aradhya","avatarUrl":"https://avatars1.githubusercontent.com/u/15227565?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1484329717000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3486","number":3486,"title":"move ConsoleInteractions.join_names to coala_utils (on gitlab)","body":"difficulty low\nOpened via gitter by @sils","comments":0,"createdAt":"2017-01-06T08:34:47Z","updatedAt":"2017-01-13T17:48:37Z","closedAt":"2017-01-13T17:48:37Z","state":"closed","user":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"owner":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"assignee":{"login":"vijeth-aradhya","avatarUrl":"https://avatars1.githubusercontent.com/u/15227565?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1524037000000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3488","number":3488,"title":"The documentation comment parser doesn't recognize enumerations - they look super ugly","body":"Found by @Naereen , difficulty low probably. See coala/bear-docs#27\nOpened via gitter by @sils","comments":31,"createdAt":"2017-01-06T10:20:44Z","updatedAt":"2018-04-18T07:36:40Z","closedAt":"2018-04-18T07:36:40Z","state":"closed","user":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"owner":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"},{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1493819939000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3492","number":3492,"title":"CachingUtilities: Not completely covered by py.test -k Caching","body":"a@a ~/workspace/coala/coala $ py.test -k Caching --cov | grep CachingUtilities.py    \ncoalib/misc/CachingUtilities.py                                        75      1     20      1    98%   172, 169->172\n\nTests should be completely self-covering.","comments":6,"createdAt":"2017-01-07T06:09:03Z","updatedAt":"2017-05-03T13:58:59Z","closedAt":"2017-05-03T13:56:55Z","state":"closed","user":{"login":"Shade5","avatarUrl":"https://avatars0.githubusercontent.com/u/13672946?v=4"},"owner":{"login":"Shade5","avatarUrl":"https://avatars0.githubusercontent.com/u/13672946?v=4"},"labels":[{"name":"status/invalid","color":"000000"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1484083149000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3495","number":3495,"title":"Newcomers guide: should include cobot assign command","body":"The newcomers guide should include this command (and some context for using it):\ncobot assign <issue_link> - Assigns issue <issue_link> to user\nso that they know how to assign the unassigned issues to themselves.","comments":0,"createdAt":"2017-01-07T22:47:10Z","updatedAt":"2017-01-10T21:19:09Z","closedAt":"2017-01-10T21:19:09Z","state":"closed","user":{"login":"jiteshpabla","avatarUrl":"https://avatars3.githubusercontent.com/u/12662272?v=4"},"owner":{"login":"jiteshpabla","avatarUrl":"https://avatars3.githubusercontent.com/u/12662272?v=4"},"assignee":{"login":"CosminIcatoiu","avatarUrl":"https://avatars3.githubusercontent.com/u/24964456?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1487979801000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3499","number":3499,"title":"List of commits that need backport","body":"#3496","comments":2,"createdAt":"2017-01-08T14:53:59Z","updatedAt":"2017-02-24T23:43:21Z","closedAt":"2017-02-24T23:43:21Z","state":"closed","user":{"login":"sils","avatarUrl":"https://avatars0.githubusercontent.com/u/5716520?v=4"},"owner":{"login":"sils","avatarUrl":"https://avatars0.githubusercontent.com/u/5716520?v=4"},"milestone":{"title":"0.9.2","createdAt":"2016-12-30T01:09:21Z","dueOn":null,"state":"closed","htmlUrl":"https://github.com/coala/coala/milestone/13","description":""},"labels":[{"name":"needs backport","color":"b60205"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1509204135000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3502","number":3502,"title":"py.test -k coalaTest fails","body":"Getting\n    def test_did_nothing(self):\n        retval, output = execute_coala(coala.main, 'coala', '-I',\n                                       '-S', 'default.enabled=false')\n>       self.assertEqual(retval, 2)\nE       AssertionError: 13 != 2\n\ndifficulty low type bug area tests\nOpened via gitter by @sils","comments":15,"createdAt":"2017-01-09T07:40:36Z","updatedAt":"2017-10-28T15:22:15Z","closedAt":null,"state":"open","user":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"owner":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"assignee":{"login":"iamedgarmarkov","avatarUrl":"https://avatars2.githubusercontent.com/u/1784323?v=4"},"milestone":{"title":"0.12","createdAt":"2017-04-08T16:02:24Z","dueOn":null,"state":"open","htmlUrl":"https://github.com/coala/coala/milestone/16","description":""},"labels":[{"name":"area/tests","color":"bfd4f2"},{"name":"difficulty/low","color":"207de5"},{"name":"hacktoberfest","color":"e99695"},{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1484150307000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3503","number":3503,"title":"Provide a collection of fully ready-to-use .coafile, for popular languages?","body":"Hi,\nThat's not an issue, it's more like a feature proposal.\nIssue\nAll the documentation about coala and .coafiles is great, but I think it misses a very important aspect: examples.\nAnd I am not talking about a 5-lines example of a .coafile configured for just one CoalaBear.\nI am talking about full examples for one (or more) language.\nFor instance for Python 3, there is about a dozen of different Bears (+ the generic ones), and it just feels that it would take a few hours to read all their doc, understand and tune all their settings, and write the \"perfect\" .coafile -- at least for new users of coala, maybe experts can do that quickly (I can't).\nExample\nIs there any repository that contain a collection of ready-to-use .coafile  for the most popular languages? (I was unable to find any)\nFor instance, GitHub has this well known repository for .gitignore files (@github/gitignore), with one or more examples of complete and ready-to-use files for some languages. Same is true for all the \"dotfiles\" repo that some GitHub users keep.\nProposal\nSo my proposal & request is to start the same project for .coafile.  It could be named @coala/coafile-examples, or something like this.\nWhy?\nThe main reason for this list of \"ready-to-use\" examples is to increase the pace at which new coala users can indeed use coala \"in production\".\nWhen using a provided examples, it gives a ground base from where to start, instead of having to write the config file from scratch.\n(Disclaimer: I do not offer to solve it, I am basically asking this as I cannot figure how to quickly write a good .coafile for my dev workflow)","comments":11,"createdAt":"2017-01-09T08:58:49Z","updatedAt":"2017-01-11T15:58:27Z","closedAt":null,"state":"open","user":{"login":"Naereen","avatarUrl":"https://avatars2.githubusercontent.com/u/11994719?v=4"},"owner":{"login":"Naereen","avatarUrl":"https://avatars2.githubusercontent.com/u/11994719?v=4"},"labels":[{"name":"area/usability","color":"d4c5f9"},{"name":"importance/high","color":"eb6420"},{"name":"type/feature","color":"0052cc"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1485793054000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3505","number":3505,"title":"Make project page great again","body":"https://github.com/coala/coala/wiki/Project-Ideas needs some nice formatting, maybe an index","comments":1,"createdAt":"2017-01-09T13:25:30Z","updatedAt":"2017-01-30T16:17:34Z","closedAt":"2017-01-30T16:12:57Z","state":"closed","user":{"login":"sims1253","avatarUrl":"https://avatars2.githubusercontent.com/u/6530123?v=4"},"owner":{"login":"sims1253","avatarUrl":"https://avatars2.githubusercontent.com/u/6530123?v=4"},"assignee":{"login":"sims1253","avatarUrl":"https://avatars2.githubusercontent.com/u/6530123?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/low","color":"207de5"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1483984254000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3508","number":3508,"title":"Developer setup docs don't ask people to install requirements","body":"pip3 install -r requirements.txt should be inserted into the command list before each occurrence of pip3 install -e .\narea/documentation difficulty/newcomer\nOpened via gitter by @Mixih","comments":1,"createdAt":"2017-01-09T16:35:02Z","updatedAt":"2017-01-09T17:50:54Z","closedAt":"2017-01-09T17:50:54Z","state":"closed","user":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"owner":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1484391864000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3510","number":3510,"title":"OpenEditorAction : Add emacs to known editors","body":"Add emacs to KNOWN_EDITORS in OpenEditorAction.py","comments":0,"createdAt":"2017-01-09T18:52:47Z","updatedAt":"2017-01-14T11:04:24Z","closedAt":"2017-01-14T11:04:24Z","state":"closed","user":{"login":"pratyushprakash","avatarUrl":"https://avatars1.githubusercontent.com/u/18013053?v=4"},"owner":{"login":"pratyushprakash","avatarUrl":"https://avatars1.githubusercontent.com/u/18013053?v=4"},"assignee":{"login":"pratyushprakash","avatarUrl":"https://avatars1.githubusercontent.com/u/18013053?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1497295699000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3511","number":3511,"title":"`py.test` fails due to version conflict of packages","body":"Enhance py.test to first install the appropriate packages before starting the tests.\nCan prevent confusions.","comments":16,"createdAt":"2017-01-10T03:04:18Z","updatedAt":"2017-06-12T19:28:19Z","closedAt":"2017-06-12T19:28:19Z","state":"closed","user":{"login":"Shade5","avatarUrl":"https://avatars0.githubusercontent.com/u/13672946?v=4"},"owner":{"login":"Shade5","avatarUrl":"https://avatars0.githubusercontent.com/u/13672946?v=4"},"assignee":{"login":"Shade5","avatarUrl":"https://avatars0.githubusercontent.com/u/13672946?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1484144484000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3512","number":3512,"title":"Add note for people to use coala-quickstart for generating their config file","body":"Still a huge problem. Related issue: #3503\ndifficulty newcomer type documentation\nOpened via gitter by @sils","comments":0,"createdAt":"2017-01-10T08:24:46Z","updatedAt":"2017-01-11T14:21:24Z","closedAt":"2017-01-11T14:21:24Z","state":"closed","user":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"owner":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"assignee":{"login":"sils","avatarUrl":"https://avatars0.githubusercontent.com/u/5716520?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1487251391000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3513","number":3513,"title":"Feature Request: Visual Studio Code Plugin for coala","body":"Now coala has an atom plugin. We need a plugin for VS Code, too.\nFeature\n\nLinter for supported languages.\nAuto fix just like coala/coala-atom does.\nWhat features do you want? you could list them in the comment.\n\nReference\n\ncoala/coala-atom\nVS Code Extensibility Reference\nA Ruby Linter for VS Code","comments":2,"createdAt":"2017-01-10T08:33:01Z","updatedAt":"2017-02-16T13:23:11Z","closedAt":"2017-01-10T16:24:48Z","state":"closed","user":{"login":"gaocegege","avatarUrl":"https://avatars3.githubusercontent.com/u/5100735?v=4"},"owner":{"login":"gaocegege","avatarUrl":"https://avatars3.githubusercontent.com/u/5100735?v=4"},"assignee":{"login":"gaocegege","avatarUrl":"https://avatars3.githubusercontent.com/u/5100735?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1484493132000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3514","number":3514,"title":"Definitions for the language CSharp not properly defined","body":"Fields like  string_delimiters and comment_delimiters are missing  which is causing AnnotationBear to fail coala/coalib/bearlib/languages/definitions/CSharp.py","comments":2,"createdAt":"2017-01-10T11:45:41Z","updatedAt":"2017-01-15T15:12:12Z","closedAt":"2017-01-15T15:12:12Z","state":"closed","user":{"login":"Techievena","avatarUrl":"https://avatars2.githubusercontent.com/u/17270966?v=4"},"owner":{"login":"Techievena","avatarUrl":"https://avatars2.githubusercontent.com/u/17270966?v=4"},"assignee":{"login":"rishikksh20","avatarUrl":"https://avatars1.githubusercontent.com/u/4656872?v=4"},"labels":[{"name":"area/bears","color":"eb6420"},{"name":"difficulty/low","color":"207de5"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1485078263000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3515","number":3515,"title":"New Links Page ","body":"Through my experience as a newcomer i faced some problems in finding stuff on the site and I had to ask on gitter things that could easily be found anyway. So what i suggest is to have a stand alone page ( like the Newcomers Guide page for example) for Useful Links. Here it would be very easy for everybody ( especially for newcomers) to find links to tutorials( how to git, how to rebase how to work with rst docs), links to issues( by difficulty), etc. I understood that there is some kind of page with this but it`s not very accessible and not very known.\nSo, i wanted to ask you if you believe this may be a good idea to implement and also ask you to come with some ideas for the links. What do you believe to be useful to be on this page.","comments":17,"createdAt":"2017-01-10T11:51:18Z","updatedAt":"2017-01-22T09:44:23Z","closedAt":"2017-01-22T09:44:23Z","state":"closed","user":{"login":"CosminIcatoiu","avatarUrl":"https://avatars3.githubusercontent.com/u/24964456?v=4"},"owner":{"login":"CosminIcatoiu","avatarUrl":"https://avatars3.githubusercontent.com/u/24964456?v=4"},"assignee":{"login":"CosminIcatoiu","avatarUrl":"https://avatars3.githubusercontent.com/u/24964456?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/low","color":"207de5"},{"name":"importance/medium","color":"fbca04"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1488664127000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3516","number":3516,"title":"Limit branch builds to master","body":"see http://stackoverflow.com/questions/31882306/how-to-configure-travis-ci-to-build-pull-requests-merges-to-master-w-o-redunda\nOpened via gitter by @sils","comments":3,"createdAt":"2017-01-10T13:09:29Z","updatedAt":"2017-03-04T21:48:47Z","closedAt":"2017-03-04T21:48:47Z","state":"closed","user":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"owner":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1484262718000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3521","number":3521,"title":"In Writing Documentation section, add link to reST primer","body":"One link I found useful when just starting to write documentation is this link:\nhttp://www.sphinx-doc.org/en/latest/rest.html\nIt provides basics of restructuredText for those new to it.\nI think we should add this into our Dev Guide under Writing Documentation, http://api.coala.io/en/latest/Developers/Writing_Documentation.html","comments":9,"createdAt":"2017-01-10T20:36:04Z","updatedAt":"2017-01-12T23:11:58Z","closedAt":"2017-01-12T23:11:58Z","state":"closed","user":{"login":"Mariatta","avatarUrl":"https://avatars1.githubusercontent.com/u/5844587?v=4"},"owner":{"login":"Mariatta","avatarUrl":"https://avatars1.githubusercontent.com/u/5844587?v=4"},"assignee":{"login":"CosminIcatoiu","avatarUrl":"https://avatars3.githubusercontent.com/u/24964456?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/low","color":"207de5"},{"name":"importance/medium","color":"fbca04"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1485038184000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3525","number":3525,"title":"Support firehose static analysis results format","body":"Either a command line flag or at least a format string.\nSee https://github.com/fedora-static-analysis/firehose and take a look at the examples/ directory.\nWe don't currently support things such as SHA-1 hashes, so this issue should take care of all that.\nBrought up by this comment.","comments":2,"createdAt":"2017-01-11T05:18:21Z","updatedAt":"2017-01-21T22:36:24Z","closedAt":null,"state":"open","user":{"login":"adtac","avatarUrl":"https://avatars2.githubusercontent.com/u/7521600?v=4"},"owner":{"login":"adtac","avatarUrl":"https://avatars2.githubusercontent.com/u/7521600?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1484185654000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3528","number":3528,"title":"Add `git add --patch` to Git tutorial","body":"","comments":3,"createdAt":"2017-01-11T12:33:44Z","updatedAt":"2017-01-12T01:47:34Z","closedAt":"2017-01-12T01:47:34Z","state":"closed","user":{"login":"nemaniarjun","avatarUrl":"https://avatars0.githubusercontent.com/u/15715894?v=4"},"owner":{"login":"nemaniarjun","avatarUrl":"https://avatars0.githubusercontent.com/u/15715894?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1497354159000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3529","number":3529,"title":"files setting can not contain non-unicode files","body":"(venv) MBPs-MacBook-Pro:coala-bears rhemon$ coala -f ./test-img/img.png \nExecuting section Default...\n[WARNING][18:23:39] Failed to read file '/Users/mbp13inch/Documents/Workspace/coala-bears/test-img/img.png'. It seems to contain non-unicode characters. Leaving it out.\nExecuting section python...\n[WARNING][18:23:40] Failed to read file '/Users/mbp13inch/Documents/Workspace/coala-bears/test-img/img.png'. It seems to contain non-unicode characters. Leaving it out.\nExecuting section autopep8...\n[WARNING][18:23:40] Failed to read file '/Users/mbp13inch/Documents/Workspace/coala-bears/test-img/img.png'. It seems to contain non-unicode characters. Leaving it out.\nExecuting section linelength...\n[WARNING][18:23:43] Failed to read file '/Users/mbp13inch/Documents/Workspace/coala-bears/test-img/img.png'. It seems to contain non-unicode characters. Leaving it out.\nExecuting section CI...\nExecuting section commit...\n[WARNING][18:23:44] Failed to read file '/Users/mbp13inch/Documents/Workspace/coala-bears/test-img/img.png'. It seems to contain non-unicode characters. Leaving it out.\nExecuting section rst...\nExecuting section PythonPackageInit...\n[WARNING][18:23:45] Failed to read file '/Users/mbp13inch/Documents/Workspace/coala-bears/test-img/img.png'. It seems to contain non-unicode characters. Leaving it out.\n\nSame result if I use jpg files.","comments":8,"createdAt":"2017-01-11T12:34:00Z","updatedAt":"2017-06-13T11:42:39Z","closedAt":"2017-06-13T11:42:39Z","state":"closed","user":{"login":"rhemon","avatarUrl":"https://avatars2.githubusercontent.com/u/6615517?v=4"},"owner":{"login":"rhemon","avatarUrl":"https://avatars2.githubusercontent.com/u/6615517?v=4"},"assignee":{"login":"yukiisbored","avatarUrl":"https://avatars0.githubusercontent.com/u/18437312?v=4"},"labels":[{"name":"difficulty/medium","color":"0052cc"},{"name":"importance/high","color":"eb6420"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1529164886000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3530","number":3530,"title":"Add FileProxy","body":"See https://github.com/coala/cEPs/blob/master/cEP-0002.md#the-file-proxy\nThe FileProxy shall be responsible for providing files and their contents to the bears and bear-writers. It shall cache contents as efficient as possible, and also provide different interfaces to the file (like utf8-decoded with and without line-endings or a binary version).","comments":5,"createdAt":"2017-01-11T13:28:33Z","updatedAt":"2018-06-16T16:01:26Z","closedAt":"2018-06-16T16:01:25Z","state":"closed","user":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"owner":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"assignee":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4"},"milestone":{"title":"Nextgen-Core","createdAt":"2017-06-09T22:33:56Z","dueOn":null,"state":"open","htmlUrl":"https://github.com/coala/coala/milestone/18","description":""},"labels":[{"name":"area/core","color":"eb6420"},{"name":"difficulty/high","color":"B319e7"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1484149341000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3531","number":3531,"title":"we have not defined 'string_delimiter' in CSharp language so we'll get 'KeyError' while running AnnotationBear. Update it.","body":"Opened via gitter by @aptrishu","comments":1,"createdAt":"2017-01-11T14:01:02Z","updatedAt":"2017-01-11T15:42:21Z","closedAt":"2017-01-11T15:42:21Z","state":"closed","user":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"owner":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"labels":[{"name":"status/duplicate","color":"000000"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1484204360000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3532","number":3532,"title":"Add dependency conflict checking step to CI","body":"Since pip doesn't do this we gotta do it, there are third party packages that can check if there are conflicts and build a full dep tree, let's use them in the build!\nOpened via gitter by @sils","comments":8,"createdAt":"2017-01-11T14:12:07Z","updatedAt":"2017-01-12T06:59:20Z","closedAt":"2017-01-12T06:58:51Z","state":"closed","user":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"owner":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"assignee":{"login":"Shade5","avatarUrl":"https://avatars0.githubusercontent.com/u/13672946?v=4"},"labels":[{"name":"difficulty/medium","color":"0052cc"},{"name":"importance/high","color":"eb6420"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1484477445000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3535","number":3535,"title":"Performance: don't load all bears","body":"https://github.com/coala/coala/pull/2461/files#diff-e690c48863208d16808485e103164cd5R288 was an idea although it doesn't work. We don't need to load in all bears just to get the filename and we shouldn't do that.","comments":4,"createdAt":"2017-01-12T06:53:07Z","updatedAt":"2017-01-15T10:50:45Z","closedAt":null,"state":"open","user":{"login":"sils","avatarUrl":"https://avatars0.githubusercontent.com/u/5716520?v=4"},"owner":{"login":"sils","avatarUrl":"https://avatars0.githubusercontent.com/u/5716520?v=4"},"labels":[{"name":"difficulty/medium","color":"0052cc"},{"name":"type/performance","color":"fef2c0"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1490198262000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3537","number":3537,"title":"deprecate_settings: Allow multiple deprecations","body":"deprecate_settings currently allows only one deprecation per setting.","comments":0,"createdAt":"2017-01-12T11:00:12Z","updatedAt":"2017-03-22T15:57:42Z","closedAt":"2017-03-22T15:57:42Z","state":"closed","user":{"login":"pratyushprakash","avatarUrl":"https://avatars1.githubusercontent.com/u/18013053?v=4"},"owner":{"login":"pratyushprakash","avatarUrl":"https://avatars1.githubusercontent.com/u/18013053?v=4"},"assignee":{"login":"pratyushprakash","avatarUrl":"https://avatars1.githubusercontent.com/u/18013053?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1489536828000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3542","number":3542,"title":"bear-docs master is actually pre","body":"The master README.rst on https://github.com/coala/bear-docs says\n\"\nNote: The master branch contains docs for the latest stable version. If you want to view the docs for the latest development version, see the pre branch.\n\"\nBut the docs on pre are old and master is current.\nOpened via gitter by @jayvdb","comments":4,"createdAt":"2017-01-13T05:32:31Z","updatedAt":"2017-03-15T00:13:48Z","closedAt":"2017-03-15T00:13:48Z","state":"closed","user":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"owner":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1521148619000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3544","number":3544,"title":"Poor highlighting in case of Mac OSx users. ","body":"I used some SpaceConsistencyBear and InvalidLinkBear. In case of MAC OSx, it highlights the inconsistencies with green colour just like a marker does, but it rather makes it difficult to read the inconsistencies.\nHere is the link to the screenshot.\nhttp://i.imgur.com/3RP7cRW.png","comments":32,"createdAt":"2017-01-13T07:45:05Z","updatedAt":"2018-03-15T21:16:59Z","closedAt":"2018-03-15T21:16:59Z","state":"closed","user":{"login":"HitRam","avatarUrl":"https://avatars3.githubusercontent.com/u/19632768?v=4"},"owner":{"login":"HitRam","avatarUrl":"https://avatars3.githubusercontent.com/u/19632768?v=4"},"milestone":{"title":"0.12","createdAt":"2017-04-08T16:02:24Z","dueOn":null,"state":"open","htmlUrl":"https://github.com/coala/coala/milestone/16","description":""},"labels":[{"name":"area/usability","color":"d4c5f9"},{"name":"platform/mac","color":"fbca04"},{"name":"platform/windows","color":"0052cc"},{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1531786519000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3545","number":3545,"title":"Replace pkg_resources with implicit namespace packages","body":"pkg_resources breaks in an unrecoverable/unmanagable way when there is a VersionConflict.\nIf we empty out the root namespace of bears (blocked by coala/coala-bears#1199), we can use implicit namespace packages (PEP 420), which allows us to iterate over the subpackages of the namespace bears, and also allows the namespace bears to be filled by multiple pypi distribution packages. e.g. pypi 'coala-bears-python' could provide bears/python/.","comments":3,"createdAt":"2017-01-13T09:39:02Z","updatedAt":"2018-07-17T00:15:19Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"area/bears","color":"eb6420"},{"name":"difficulty/very-high","color":"e11d21"},{"name":"status/blocked","color":"e11d21"},{"name":"type/performance","color":"fef2c0"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1484329755000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3550","number":3550,"title":"test issue","body":"difficulty newcomer","comments":1,"createdAt":"2017-01-13T17:48:05Z","updatedAt":"2017-01-13T17:49:15Z","closedAt":"2017-01-13T17:49:15Z","state":"closed","user":{"login":"sils","avatarUrl":"https://avatars0.githubusercontent.com/u/5716520?v=4"},"owner":{"login":"sils","avatarUrl":"https://avatars0.githubusercontent.com/u/5716520?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1485131801000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3551","number":3551,"title":"Link to Code of Conduct from Newcomers Guide","body":"We need to link to the Code of Conduct from the Newcomer's Guide.","comments":0,"createdAt":"2017-01-14T03:58:14Z","updatedAt":"2017-01-23T00:36:41Z","closedAt":"2017-01-23T00:36:41Z","state":"closed","user":{"login":"Mariatta","avatarUrl":"https://avatars1.githubusercontent.com/u/5844587?v=4"},"owner":{"login":"Mariatta","avatarUrl":"https://avatars1.githubusercontent.com/u/5844587?v=4"},"assignee":{"login":"Mariatta","avatarUrl":"https://avatars1.githubusercontent.com/u/5844587?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/low","color":"207de5"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1486634019000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3553","number":3553,"title":"Appveyor build doesnt use clang","body":"This is one of the skipped tests.  It would be good to reach 100% coverage on Windows.\nOpened via gitter by @jayvdb","comments":2,"createdAt":"2017-01-14T15:00:43Z","updatedAt":"2017-02-09T09:53:39Z","closedAt":"2017-02-09T09:53:39Z","state":"closed","user":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"owner":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"labels":[{"name":"area/CI","color":"eb6420"},{"name":"area/tests","color":"bfd4f2"},{"name":"difficulty/medium","color":"0052cc"},{"name":"importance/medium","color":"fbca04"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1486670523000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3554","number":3554,"title":"Globbing.translate test coverage on Windows","body":"The unix specific line is currently being shown as not covered by the tests when run on Windows.\nThe Windows specific line is currently being marked as # pragma: nocover (Windows).\nThese should be the other way around, so the Windows specific line should be covered, and on Windows the unix specific code shouldnt need to be tested.\nOpened via gitter by @jayvdb","comments":6,"createdAt":"2017-01-14T15:07:46Z","updatedAt":"2017-02-09T20:02:03Z","closedAt":"2017-02-09T20:01:15Z","state":"closed","user":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"owner":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"assignee":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"area/CI","color":"eb6420"},{"name":"area/tests","color":"bfd4f2"},{"name":"difficulty/low","color":"207de5"},{"name":"importance/medium","color":"fbca04"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1495568596000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3556","number":3556,"title":"turn off E303 on pycodestylebear","body":"it's already covered by pep8bear\nOpened via gitter by @sils","comments":6,"createdAt":"2017-01-14T16:30:08Z","updatedAt":"2017-05-23T19:43:16Z","closedAt":"2017-05-23T19:43:16Z","state":"closed","user":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"owner":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"assignee":{"login":"shreyans800755","avatarUrl":"https://avatars2.githubusercontent.com/u/3727351?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1485180164000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3557","number":3557,"title":"Include module names in the log","body":"Currently logging is done directly like:\nimport logging\nlogging.debug()\nlogging.warning()\nleading to logs looking like :\nDEBUG:root: ...\nWARNING:root: ...\n\nInstead, logs looking like this:\nWARNING: coalib.bearlib.abstractions.linter: Use of capture groups is discouraged\n\nshould be adapted 🤔\narea/logging status/needs design","comments":26,"createdAt":"2017-01-14T17:49:04Z","updatedAt":"2017-01-23T14:02:44Z","closedAt":null,"state":"open","user":{"login":"meetmangukiya","avatarUrl":"https://avatars0.githubusercontent.com/u/7620533?v=4"},"owner":{"login":"meetmangukiya","avatarUrl":"https://avatars0.githubusercontent.com/u/7620533?v=4"},"labels":[{"name":"area/logging","color":"0052cc"},{"name":"status/blocked","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1521890671000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3558","number":3558,"title":"provide a default value when a settings-question is left empty","body":"From @abit2:\n\nhttp://pastebin.com/jkPW92mA\nit should be something like this:\nPlease provide a value for use_spaces (True or False), when you don't enter something, the default is >True:\nTo reproduce the problem just skip the use_space without giving any boolean value.","comments":15,"createdAt":"2017-01-14T18:16:08Z","updatedAt":"2018-03-24T11:24:31Z","closedAt":null,"state":"open","user":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"owner":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"assignee":{"login":"raduklb","avatarUrl":"https://avatars2.githubusercontent.com/u/36372694?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"},{"name":"importance/medium","color":"fbca04"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1484582532000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3561","number":3561,"title":"Update Show bears' information","body":"--show-description does not give a large amount of information as specified in the bullets. Also replacing it with --show-details and adding a few points that --show-details covers would be a good idea.","comments":5,"createdAt":"2017-01-15T11:58:47Z","updatedAt":"2017-01-16T16:02:12Z","closedAt":"2017-01-16T09:58:07Z","state":"closed","user":{"login":"yash-nisar","avatarUrl":"https://avatars1.githubusercontent.com/u/14862976?v=4"},"owner":{"login":"yash-nisar","avatarUrl":"https://avatars1.githubusercontent.com/u/14862976?v=4"},"assignee":{"login":"yash-nisar","avatarUrl":"https://avatars1.githubusercontent.com/u/14862976?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1484502036000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3564","number":3564,"title":"derpecate_settings: Allow modifying the new param if both new param and old param are provided","body":"Current implementation will use new param, if both new and old param is provided. But it may be useful to use the old setting and modify the new setting accordingly and make the new setting more flexible by allowing it to be modified.\nExample:\nIn coala/coala-bears#1244\n\nWe changed a setting from an int to a dict.\nWhat I'd like to do is:\n1. See if timeout setting is set, lets say to 10..\n2. And the network_timeout setting is set as well..\n3. But current decorator will use the new setting and ignore the old one, but we could improvise by changing the default timeout of all the websites other then those mentioned in the network_timeout i.e. the new setting to the value provided in timeout i.e. the old setting.\n\nThis way we used both the data as well as sent the user a warning to change the param ASAP without effectively losing some configuration setting.\nstatus/needs design status/needs info","comments":3,"createdAt":"2017-01-15T16:22:46Z","updatedAt":"2017-01-15T17:40:36Z","closedAt":null,"state":"open","user":{"login":"meetmangukiya","avatarUrl":"https://avatars0.githubusercontent.com/u/7620533?v=4"},"owner":{"login":"meetmangukiya","avatarUrl":"https://avatars0.githubusercontent.com/u/7620533?v=4"},"labels":[{"name":"status/needs design","color":"5319e7"},{"name":"status/needs info","color":"006b75"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1535848447000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5744","number":5744,"title":".coafile: Remove trailing globstars","body":"According to coala's warnings.","comments":6,"createdAt":"2018-09-01T20:13:37Z","updatedAt":"2018-09-02T00:34:07Z","closedAt":"2018-09-02T00:33:52Z","state":"merged","user":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"owner":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"labels":[{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5744","comments":[]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1535818737000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5742","number":5742,"title":"Collectors.py: Discard trailing ** in ignore glob","body":"Remove the trailing globstar from ignore glob patterns and warn the user\nabout it. This ensures that the entire directory is not globbed.\nCloses #5737\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":8,"createdAt":"2018-08-31T13:02:23Z","updatedAt":"2018-09-01T16:18:57Z","closedAt":"2018-09-01T13:33:33Z","state":"merged","user":{"login":"mach64","avatarUrl":"https://avatars3.githubusercontent.com/u/29517049?v=4"},"owner":{"login":"mach64","avatarUrl":"https://avatars3.githubusercontent.com/u/29517049?v=4"},"assignee":{"login":"mach64","avatarUrl":"https://avatars3.githubusercontent.com/u/29517049?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"},{"name":"importance/high","color":"eb6420"},{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5742","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDQxNzg1ODA0Ng==","url":"https://github.com/coala/coala/pull/5742#issuecomment-417858046","bodyText":"Ha, I was just going to explain the build failure ... and recommend exactly what you did as the solution. awesome","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yODgwNzUwNg==","createdAt":"2018-09-01T12:59:24Z","content":"LAUGH","user":{"login":"mach64","name":"Krut Patel"}}],"createdAt":"2018-09-01T12:58:49Z","lastEditedAt":null,"updatedAt":"2018-09-01T12:58:49Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1535848521000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5743","number":5743,"title":"WIP - TEST - Master build","body":"Do not merge!","comments":2,"createdAt":"2018-09-01T19:32:00Z","updatedAt":"2018-09-02T00:35:21Z","closedAt":"2018-09-01T20:11:24Z","state":"closed","user":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"owner":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"labels":[{"name":"process/wip","color":"fbca04"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5743","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDQxNzg5NjcwOQ==","url":"https://github.com/coala/coala/pull/5743#issuecomment-417896709","bodyText":"We advise everyone to test on their forks, not creating useless PRs.\nPlease follow that advice.\nBesides, travis has daily builds of master where you can see the problems: http://travis-ci.org/coala","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-09-02T00:35:21Z","lastEditedAt":null,"updatedAt":"2018-09-02T00:35:21Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1535470935000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5734","number":5734,"title":"Wilson branch","body":"For short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":1,"createdAt":"2018-08-28T15:20:07Z","updatedAt":"2018-08-28T15:42:15Z","closedAt":"2018-08-28T15:38:35Z","state":"closed","user":{"login":"shangchen1127","avatarUrl":"https://avatars3.githubusercontent.com/u/40648563?v=4"},"owner":{"login":"shangchen1127","avatarUrl":"https://avatars3.githubusercontent.com/u/40648563?v=4"},"labels":[{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XL","color":"FF0000"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5734","comments":[]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1535585042000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5735","number":5735,"title":"Added the break statement in ask_for_action_and_apply()","body":"For short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":5,"createdAt":"2018-08-28T17:43:39Z","updatedAt":"2018-08-29T23:24:02Z","closedAt":"2018-08-29T11:03:48Z","state":"closed","user":{"login":"rak-shit","avatarUrl":"https://avatars3.githubusercontent.com/u/30564496?v=4"},"owner":{"login":"rak-shit","avatarUrl":"https://avatars3.githubusercontent.com/u/30564496?v=4"},"labels":[{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5735","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDQxNjkwMjU0NQ==","url":"https://github.com/coala/coala/pull/5735#issuecomment-416902545","bodyText":"@palash25 Yes I have done the commit from my own laptop but the username is my dad's name. May be that is making you think that the commit is made from someone else laptop.","diffHunk":null,"author":{"login":"rak-shit","avatarUrl":"https://avatars3.githubusercontent.com/u/30564496?v=4","name":"Rakshit"},"createdAt":"2018-08-29T10:19:25Z","lastEditedAt":null,"updatedAt":"2018-08-29T10:19:25Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxNjkwNjc2Mw==","url":"https://github.com/coala/coala/pull/5735#issuecomment-416906763","bodyText":"username is my dad's name.\n\nWow, your dad uses git. That's cool.\n\nMaybe that is making you think that the commit is made from someone else laptop.\n\nyou need to set your credentials in your git config. Please look it up.","diffHunk":null,"author":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4","name":"Palash Nigam"},"createdAt":"2018-08-29T10:36:09Z","lastEditedAt":null,"updatedAt":"2018-08-29T10:36:09Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxNjkxMDk0OA==","url":"https://github.com/coala/coala/pull/5735#issuecomment-416910948","bodyText":"@palash25 Help needed! How do I squash my commits?","diffHunk":null,"author":{"login":"rak-shit","avatarUrl":"https://avatars3.githubusercontent.com/u/30564496?v=4","name":"Rakshit"},"createdAt":"2018-08-29T10:53:11Z","lastEditedAt":null,"updatedAt":"2018-08-29T10:53:11Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxNjkxNzEwMA==","url":"https://github.com/coala/coala/pull/5735#issuecomment-416917100","bodyText":"https://robots.thoughtbot.com/git-interactive-rebase-squash-amend-rewriting-history @rak-shit\nAlso never close your PRs without asking. Please reopen this and don't close it until a maintainer tells you to 😉","diffHunk":null,"author":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4","name":"Palash Nigam"},"createdAt":"2018-08-29T11:18:33Z","lastEditedAt":null,"updatedAt":"2018-08-29T11:18:33Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxNzEzOTQwNg==","url":"https://github.com/coala/coala/pull/5735#issuecomment-417139406","bodyText":"@rak-shit cant reopen this as they also deleted their fork.  @rak-shit , read https://coala.io/newcomer and https://coala.io/git  very carefully otherwise you'll be banned.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-29T23:24:02Z","lastEditedAt":null,"updatedAt":"2018-08-29T23:24:02Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1535811898000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5736","number":5736,"title":"ConsoleInteraction.py: Added break statement Fixes https://github.com…","body":"Closes #5202\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":4,"createdAt":"2018-08-29T11:24:47Z","updatedAt":"2018-09-01T14:24:58Z","closedAt":null,"state":"open","user":{"login":"rak-shit","avatarUrl":"https://avatars3.githubusercontent.com/u/30564496?v=4"},"owner":{"login":"rak-shit","avatarUrl":"https://avatars3.githubusercontent.com/u/30564496?v=4"},"assignee":{"login":"rak-shit","avatarUrl":"https://avatars3.githubusercontent.com/u/30564496?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"process/wip","color":"fbca04"},{"name":"size/XS","color":"00DE0F"},{"name":"type/performance","color":"fef2c0"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5736","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDQxNzEyODQ1MQ==","url":"https://github.com/coala/coala/pull/5736#issuecomment-417128451","bodyText":"I've sent an invite to @rak-shit .","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-29T22:32:13Z","lastEditedAt":null,"updatedAt":"2018-08-29T22:32:13Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxNzg2MjI5NA==","url":"https://github.com/coala/coala/pull/5736#issuecomment-417862294","bodyText":"Issue now assigned.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-09-01T14:10:39Z","lastEditedAt":null,"updatedAt":"2018-09-01T14:10:39Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1535807069000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5741","number":5741,"title":"CachingUtilities.py: Fix description","body":"Fix description for pickle_dump and pickle_load\nfunctions.\nFixes #5442\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":0,"createdAt":"2018-08-30T17:23:16Z","updatedAt":"2018-09-01T13:04:29Z","closedAt":null,"state":"open","user":{"login":"SubbulakshmiRS","avatarUrl":"https://avatars3.githubusercontent.com/u/32260751?v=4"},"owner":{"login":"SubbulakshmiRS","avatarUrl":"https://avatars3.githubusercontent.com/u/32260751?v=4"},"assignee":{"login":"SubbulakshmiRS","avatarUrl":"https://avatars3.githubusercontent.com/u/32260751?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"},{"name":"importance/medium","color":"fbca04"},{"name":"process/wip","color":"fbca04"},{"name":"size/XS","color":"00DE0F"},{"name":"type/bug","color":"e11d21"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5741","comments":[]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1534446552000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5721","number":5721,"title":"Sync templates","body":"For short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":3,"createdAt":"2018-08-16T13:48:10Z","updatedAt":"2018-08-16T19:09:12Z","closedAt":"2018-08-16T19:09:12Z","state":"merged","user":{"login":"Naveenaidu","avatarUrl":"https://avatars1.githubusercontent.com/u/30195193?v=4"},"owner":{"login":"Naveenaidu","avatarUrl":"https://avatars1.githubusercontent.com/u/30195193?v=4"},"labels":[{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5721","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMDYwMjM3NQ==","url":"https://github.com/coala/coala/pull/5721#discussion_r210602375","bodyText":"we dont want this file.","diffHunk":"@@ -0,0 +1,40 @@\n+.. image:: https://cloud.githubusercontent.com/assets/5716520/24838296/a9cf5f04-1d45-11e7-855c-47b816ce1e09.png","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-16T13:49:40Z","lastEditedAt":null,"updatedAt":"2018-08-16T13:49:40Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMDYwMjYwNQ==","url":"https://github.com/coala/coala/pull/5721#discussion_r210602605","bodyText":"this is a bug I have solved in a moban template and am waiting on the mobans repo to be unbroken","diffHunk":"@@ -27,7 +27,6 @@ addopts =\n   --instafail\n   --profile\n   --reorder 'requirements.txt' 'test-requirements.txt' '*'\n-  --ignore=tests/collecting/collectors_test_dir/bears/incorrect_bear.py","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-16T13:50:11Z","lastEditedAt":null,"updatedAt":"2018-08-16T13:50:11Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMDYwMjg1Nw==","url":"https://github.com/coala/coala/pull/5721#discussion_r210602857","bodyText":"We have another MR in the mobans repo which will finally solve this for all repos.","diffHunk":"@@ -16,7 +16,7 @@ pytest-instafail~=0.3.0\n pytest-mock~=1.1\n pytest-profiling~=1.3.0\n pytest-reorder~=0.1.0\n-git+https://github.com/jayvdb/pytest-reqs@skip-vcs-reqs#egg=pytest-reqs","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-16T13:50:49Z","lastEditedAt":null,"updatedAt":"2018-08-16T13:50:49Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMDY2Nzg1NA==","url":"https://github.com/coala/coala/pull/5721#discussion_r210667854","bodyText":"This bug fix has been solved","diffHunk":"@@ -27,7 +27,6 @@ addopts =\n   --instafail\n   --profile\n   --reorder 'requirements.txt' 'test-requirements.txt' '*'\n-  --ignore=tests/collecting/collectors_test_dir/bears/incorrect_bear.py","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-16T16:52:53Z","lastEditedAt":null,"updatedAt":"2018-08-16T16:52:53Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMDY2NzkxMg==","url":"https://github.com/coala/coala/pull/5721#discussion_r210667912","bodyText":"This MR has been merged","diffHunk":"@@ -16,7 +16,7 @@ pytest-instafail~=0.3.0\n pytest-mock~=1.1\n pytest-profiling~=1.3.0\n pytest-reorder~=0.1.0\n-git+https://github.com/jayvdb/pytest-reqs@skip-vcs-reqs#egg=pytest-reqs","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-16T16:53:04Z","lastEditedAt":null,"updatedAt":"2018-08-16T16:53:04Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1535812834000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5723","number":5723,"title":"LocalBearTestHelper: Decommission timeout","body":"LocalBearTestHelper had an undeclared dependency on pytest-timeout\nso it would not work unless the user had install pytest-timeout.\nNone of our bear test suites use this timeout argument, as the\ntimeout set in their repo configuration is sufficient.\nFixes #5508\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":5,"createdAt":"2018-08-18T00:10:57Z","updatedAt":"2018-09-01T14:40:34Z","closedAt":"2018-09-01T14:40:34Z","state":"merged","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"area/CI","color":"eb6420"},{"name":"area/tests","color":"bfd4f2"},{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"00DE0F"},{"name":"type/bug","color":"e11d21"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5723","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDQxNDAyMTE4OQ==","url":"https://github.com/coala/coala/pull/5723#issuecomment-414021189","bodyText":"Note coala/coala-bears#2680 ( https://travis-ci.org/coala/coala-bears/builds/417500622 ) was the only use of it, and I suspect that was because Julia was really slow back then.  It is much faster now, so finishes in time.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-18T01:04:42Z","lastEditedAt":null,"updatedAt":"2018-08-18T01:04:42Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1535171443000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5727","number":5727,"title":"Release notes now published at api docs","body":"Release Notes are now published at api docs.\nI was not familiar with reStructuredText.\nI was initially trying to add Release Notes in\n.. toctree::\n   :caption: Home\n   :hidden:\n\n   Welcome <self>\n   Homepage <http://coala.io/#/home>\n   Release Notes <release_notes>\n   Code of Conduct <http://coala.io/coc>\nbut it was giving out every title in this toctree, which is not suitable so I shifted Release Notes to it's own toctree.\nAlso to commit release_notes.rst i have to exclude it from .gitignore.\nCloses: #5724\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":11,"createdAt":"2018-08-21T17:31:34Z","updatedAt":"2018-08-25T04:30:43Z","closedAt":null,"state":"open","user":{"login":"aaqaishtyaq","avatarUrl":"https://avatars2.githubusercontent.com/u/22131756?v=4"},"owner":{"login":"aaqaishtyaq","avatarUrl":"https://avatars2.githubusercontent.com/u/22131756?v=4"},"labels":[{"name":"process/wip","color":"fbca04"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5727","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDQxNDkyMTMwMw==","url":"https://github.com/coala/coala/pull/5727#issuecomment-414921303","bodyText":"Don't ask for review in Pull Request description. It is useless, either ask in gitter channel or in PR comments.","diffHunk":null,"author":{"login":"Man-Jain","avatarUrl":"https://avatars3.githubusercontent.com/u/12700384?v=4","name":"Manank Patni"},"createdAt":"2018-08-22T06:01:57Z","lastEditedAt":null,"updatedAt":"2018-08-22T06:01:57Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxNDk3ODE3OQ==","url":"https://github.com/coala/coala/pull/5727#issuecomment-414978179","bodyText":"@Man-Jain I'll keep in mind next time.","diffHunk":null,"author":{"login":"aaqaishtyaq","avatarUrl":"https://avatars2.githubusercontent.com/u/22131756?v=4","name":"Aaqa Ishtyaq"},"createdAt":"2018-08-22T09:53:03Z","lastEditedAt":null,"updatedAt":"2018-08-22T09:53:03Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxNTI0NDk4Mw==","url":"https://github.com/coala/coala/pull/5727#issuecomment-415244983","bodyText":"@aaqaishtyaq , you need to fix this PR, otherwise there is no next time.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-23T01:26:56Z","lastEditedAt":null,"updatedAt":"2018-08-23T01:26:56Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxNTI4NjE1NA==","url":"https://github.com/coala/coala/pull/5727#issuecomment-415286154","bodyText":"@jayvdb looks good now?","diffHunk":null,"author":{"login":"aaqaishtyaq","avatarUrl":"https://avatars2.githubusercontent.com/u/22131756?v=4","name":"Aaqa Ishtyaq"},"createdAt":"2018-08-23T04:26:50Z","lastEditedAt":null,"updatedAt":"2018-08-23T04:26:50Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxNTQyNjMxMg==","url":"https://github.com/coala/coala/pull/5727#issuecomment-415426312","bodyText":"@jayvdb Squash both commit into one. Also changed commit message and description as suggested by @Man-Jain","diffHunk":null,"author":{"login":"aaqaishtyaq","avatarUrl":"https://avatars2.githubusercontent.com/u/22131756?v=4","name":"Aaqa Ishtyaq"},"createdAt":"2018-08-23T14:06:37Z","lastEditedAt":null,"updatedAt":"2018-08-23T14:06:37Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxNTUwOTE0Mw==","url":"https://github.com/coala/coala/pull/5727#issuecomment-415509143","bodyText":"@aaqaishtyaq The commit body contains more than 72 characters per line. You will have to fix that.","diffHunk":null,"author":{"login":"Man-Jain","avatarUrl":"https://avatars3.githubusercontent.com/u/12700384?v=4","name":"Manank Patni"},"createdAt":"2018-08-23T17:49:18Z","lastEditedAt":null,"updatedAt":"2018-08-23T17:49:18Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxNTYyMTQwMg==","url":"https://github.com/coala/coala/pull/5727#issuecomment-415621402","bodyText":"@Man-Jain do not repeat what gitmate-bot is saying. I can read that.\nFYI Already fixed that, just see commit message.","diffHunk":null,"author":{"login":"aaqaishtyaq","avatarUrl":"https://avatars2.githubusercontent.com/u/22131756?v=4","name":"Aaqa Ishtyaq"},"createdAt":"2018-08-24T01:19:41Z","lastEditedAt":null,"updatedAt":"2018-08-24T01:19:41Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxNTYzNDIyNw==","url":"https://github.com/coala/coala/pull/5727#issuecomment-415634227","bodyText":"@aaqaishtyaq Yeah you did. My bad. Sorry","diffHunk":null,"author":{"login":"Man-Jain","avatarUrl":"https://avatars3.githubusercontent.com/u/12700384?v=4","name":"Manank Patni"},"createdAt":"2018-08-24T02:43:32Z","lastEditedAt":null,"updatedAt":"2018-08-24T02:43:32Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1535421399000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5728","number":5728,"title":"JavaScript.py: Add alias 'node' to language JavaScript","body":"Closes #5603\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":14,"createdAt":"2018-08-23T19:45:17Z","updatedAt":"2018-08-28T01:56:39Z","closedAt":"2018-08-28T01:56:39Z","state":"merged","user":{"login":"Akhelesh","avatarUrl":"https://avatars2.githubusercontent.com/u/42298056?v=4"},"owner":{"login":"Akhelesh","avatarUrl":"https://avatars2.githubusercontent.com/u/42298056?v=4"},"assignee":{"login":"Akhelesh","avatarUrl":"https://avatars2.githubusercontent.com/u/42298056?v=4"},"labels":[{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5728","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDQxNjQxNzkwNA==","url":"https://github.com/coala/coala/pull/5728#issuecomment-416417904","bodyText":"Reack 82917c0","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-28T01:10:58Z","lastEditedAt":null,"updatedAt":"2018-08-28T01:10:58Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1535811421000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5729","number":5729,"title":"Newcomers_Guide.rst: Mention \"Adding CI\"","body":"Mentioned Adding CI info in Step 4 of Newcomers' Guide.\nCloses #3755.\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":9,"createdAt":"2018-08-24T07:59:32Z","updatedAt":"2018-09-01T14:17:01Z","closedAt":"2018-09-01T14:17:01Z","state":"merged","user":{"login":"anuj97","avatarUrl":"https://avatars3.githubusercontent.com/u/18463482?v=4"},"owner":{"login":"anuj97","avatarUrl":"https://avatars3.githubusercontent.com/u/18463482?v=4"},"assignee":{"login":"anuj97","avatarUrl":"https://avatars3.githubusercontent.com/u/18463482?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"importance/low","color":"70E870"},{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5729","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMjc4ODQ3MQ==","url":"https://github.com/coala/coala/pull/5729#discussion_r212788471","bodyText":"dont use \"here\".  Describe the link using normal words that actually describe the link target.\nAlso, put See <long link> on the next line, to keep lines under 80cpl wherever possible.","diffHunk":"@@ -355,6 +355,9 @@ to be merged, create a commit and push it to your fork, using:\n \n where ``myfork`` is the name of your fork that you added at the previous step.\n \n+After making the changes, you can test the code on your forked repository by\n+adding the required CI tools. See `here <http://api.coala.io/en/latest/Developers/Adding_CI.html>`_.","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-25T04:32:34Z","lastEditedAt":null,"updatedAt":"2018-08-25T04:32:34Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1535417081000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5731","number":5731,"title":"for testing purpose","body":"For short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":0,"createdAt":"2018-08-26T09:36:45Z","updatedAt":"2018-08-28T00:44:41Z","closedAt":"2018-08-28T00:44:27Z","state":"closed","user":{"login":"shangchen1127","avatarUrl":"https://avatars3.githubusercontent.com/u/40648563?v=4"},"owner":{"login":"shangchen1127","avatarUrl":"https://avatars3.githubusercontent.com/u/40648563?v=4"},"labels":[{"name":"size/XS","color":"00DE0F"},{"name":"status/invalid","color":"000000"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5731","comments":[]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1535357489000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5732","number":5732,"title":"Joe bugfix","body":"For short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":1,"createdAt":"2018-08-27T08:08:19Z","updatedAt":"2018-08-27T08:11:29Z","closedAt":"2018-08-27T08:08:52Z","state":"closed","user":{"login":"JoeSiew","avatarUrl":"https://avatars3.githubusercontent.com/u/40135419?v=4"},"owner":{"login":"JoeSiew","avatarUrl":"https://avatars3.githubusercontent.com/u/40135419?v=4"},"labels":[{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5732","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDQxNjE1MDA2MA==","url":"https://github.com/coala/coala/pull/5732#issuecomment-416150060","bodyText":"I am so sorry, this is a mistake pull request. I am trying to commit to my friend repository to learn & test and not coala/coala.","diffHunk":null,"author":{"login":"JoeSiew","avatarUrl":"https://avatars3.githubusercontent.com/u/40135419?v=4","name":null},"createdAt":"2018-08-27T08:11:29Z","lastEditedAt":null,"updatedAt":"2018-08-27T08:11:29Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1535416866000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5733","number":5733,"title":"JSON.py: Add language definition for JSON","body":"Closes #5730","comments":4,"createdAt":"2018-08-27T17:12:45Z","updatedAt":"2018-08-28T00:41:06Z","closedAt":"2018-08-28T00:41:06Z","state":"merged","user":{"login":"Man-Jain","avatarUrl":"https://avatars3.githubusercontent.com/u/12700384?v=4"},"owner":{"login":"Man-Jain","avatarUrl":"https://avatars3.githubusercontent.com/u/12700384?v=4"},"labels":[{"name":"area/aspects","color":"000000"},{"name":"area/documentation","color":"bfe5bf"},{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5733","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDQxNjQxMzAyOA==","url":"https://github.com/coala/coala/pull/5733#issuecomment-416413028","bodyText":"Ack 36b52e5","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-28T00:39:47Z","lastEditedAt":null,"updatedAt":"2018-08-28T00:39:47Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1534131247000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5703","number":5703,"title":"appveyor.yml: Install test requirements first","body":"For short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":4,"createdAt":"2018-08-10T13:58:37Z","updatedAt":"2018-08-13T03:34:07Z","closedAt":"2018-08-13T03:34:02Z","state":"merged","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5703","comments":[]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1533951712000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5704","number":5704,"title":"Newcomers_Guide.rst: Add meta-review process","body":"Closes #5702\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":4,"createdAt":"2018-08-10T14:00:59Z","updatedAt":"2018-08-11T01:41:52Z","closedAt":"2018-08-11T00:23:45Z","state":"merged","user":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4"},"owner":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5704","comments":[]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1535816281000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5705","number":5705,"title":".travis.yml: Disable install on unsupported","body":"Unsupported versions do not need requirements\npre-installed.  This also prevents version\nconstraints in dependencies from breaking the job.\nCloses #5636\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":1,"createdAt":"2018-08-14T15:07:47Z","updatedAt":"2018-09-01T15:38:01Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"area/CI","color":"eb6420"},{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5705","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMDIwMzY3MA==","url":"https://github.com/coala/coala/pull/5705#discussion_r210203670","bodyText":"note this convention is being used in lots of coala repos now\nhttps://github.com/coala/coala-bears/blob/master/.travis.yml#L9","diffHunk":"@@ -12,15 +12,19 @@ stages:\n   - name: unsupported\n     if: branch = master AND type = push\n \n+.disable_global: &disable_global","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-15T08:35:40Z","lastEditedAt":null,"updatedAt":"2018-08-15T08:35:40Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNDUxNjU2Mw==","url":"https://github.com/coala/coala/pull/5705#discussion_r214516563","bodyText":"To make python 3.6 section more intuitive and readable, can we consider merging disable_global in this section too and then overriding install?","diffHunk":"@@ -38,12 +42,15 @@ jobs:\n     # OSX build removed due to long build startup delays\n     # Restore matrix job entry from d2d67fab to test OSX\n     - python: 2.7\n+      <<: *disable_global\n       stage: unsupported\n       script: .misc/check_unsupported.sh\n     - python: 3.3\n+      <<: *disable_global\n       stage: unsupported\n       script: .misc/check_unsupported.sh\n     - python: 3.4.3\n+      <<: *disable_global\n       stage: unsupported\n       script: .misc/check_unsupported.sh\n     - python: 3.6","author":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4","name":"Kilari Teja"},"createdAt":"2018-09-01T15:33:44Z","lastEditedAt":"2018-09-01T15:36:43Z","updatedAt":"2018-09-01T15:36:43Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNDUxNjY2OA==","url":"https://github.com/coala/coala/pull/5705#discussion_r214516668","bodyText":"It is also partially possible to do this in https://github.com/coala/coala-bears/blob/master/.travis.yml#L62.","diffHunk":"@@ -38,12 +42,15 @@ jobs:\n     # OSX build removed due to long build startup delays\n     # Restore matrix job entry from d2d67fab to test OSX\n     - python: 2.7\n+      <<: *disable_global\n       stage: unsupported\n       script: .misc/check_unsupported.sh\n     - python: 3.3\n+      <<: *disable_global\n       stage: unsupported\n       script: .misc/check_unsupported.sh\n     - python: 3.4.3\n+      <<: *disable_global\n       stage: unsupported\n       script: .misc/check_unsupported.sh\n     - python: 3.6","author":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4","name":"Kilari Teja"},"createdAt":"2018-09-01T15:37:49Z","lastEditedAt":"2018-09-01T15:38:01Z","updatedAt":"2018-09-01T15:38:01Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMjkxMjIwMA==","url":"https://github.com/coala/coala/pull/5705#issuecomment-412912200","bodyText":"Example build with unsupported jobs: https://travis-ci.org/jayvdb/coala/builds/415949300","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-14T15:26:43Z","lastEditedAt":null,"updatedAt":"2018-08-14T15:26:43Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1534287815000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5706","number":5706,"title":"FileFactory: Add missing magic methods","body":"__len__ and __getitem__ are missing magic methods of\ndict needed to be emulated in order to be backwards compatible.\nThese are needed by coala-quickstart green mode to work on master.\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":1,"createdAt":"2018-08-14T15:41:42Z","updatedAt":"2018-08-14T23:03:35Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5706","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDQxMzA0MzM5Nw==","url":"https://github.com/coala/coala/pull/5706#issuecomment-413043397","bodyText":"I'll write tests, but waiting for @Makman2 's thoughts first.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzk0NjQ0Mg==","createdAt":"2018-08-15T09:41:20Z","content":"THUMBS_UP","user":{"login":"palash25","name":"Palash Nigam"}}],"createdAt":"2018-08-14T23:03:35Z","lastEditedAt":null,"updatedAt":"2018-08-14T23:03:35Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1535583023000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5707","number":5707,"title":"FilterHelper.py: Rewrite filters","body":"Change the filters input from list to dict\nFixes #5398\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":17,"createdAt":"2018-08-15T05:48:44Z","updatedAt":"2018-08-29T22:50:23Z","closedAt":"2018-08-28T03:10:50Z","state":"merged","user":{"login":"Utkarsh1308","avatarUrl":"https://avatars0.githubusercontent.com/u/23418707?v=4"},"owner":{"login":"Utkarsh1308","avatarUrl":"https://avatars0.githubusercontent.com/u/23418707?v=4"},"assignee":{"login":"Utkarsh1308","avatarUrl":"https://avatars0.githubusercontent.com/u/23418707?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"},{"name":"importance/high","color":"eb6420"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5707","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMDE5OTQ1MA==","url":"https://github.com/coala/coala/pull/5707#discussion_r210199450","bodyText":"I believe you do not require *.","diffHunk":"@@ -75,8 +75,11 @@ def apply_filters(filters, bears=None, sections=None):\n         items = sections\n         applier = _apply_section_filter\n \n-    for filter in filters:\n-        filter_name, *filter_args = filter\n+    for filter_name, *filter_args in filters.items():","author":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4","name":"Kilari Teja"},"reactions":[],"createdAt":"2018-08-15T08:16:46Z","lastEditedAt":"2018-08-15T10:43:18Z","updatedAt":"2018-08-15T10:43:18Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMDE5OTc1OA==","url":"https://github.com/coala/coala/pull/5707#discussion_r210199758","bodyText":"key should be arg or filter_arg.","diffHunk":"@@ -75,8 +75,11 @@ def apply_filters(filters, bears=None, sections=None):\n         items = sections\n         applier = _apply_section_filter\n \n-    for filter in filters:\n-        filter_name, *filter_args = filter\n+    for filter_name, *filter_args in filters.items():\n+        for key in filter_args:","author":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4","name":"Kilari Teja"},"reactions":[],"createdAt":"2018-08-15T08:18:02Z","lastEditedAt":null,"updatedAt":"2018-08-15T08:18:02Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMDE5OTk5MQ==","url":"https://github.com/coala/coala/pull/5707#discussion_r210199991","bodyText":"As @jayvdb says, we should at least use tuples.","diffHunk":"@@ -75,8 +75,11 @@ def apply_filters(filters, bears=None, sections=None):\n         items = sections\n         applier = _apply_section_filter\n \n-    for filter in filters:\n-        filter_name, *filter_args = filter\n+    for filter_name, *filter_args in filters.items():\n+        for key in filter_args:\n+            if isinstance(key, list):","author":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4","name":"Kilari Teja"},"reactions":[],"createdAt":"2018-08-15T08:18:59Z","lastEditedAt":null,"updatedAt":"2018-08-15T08:18:59Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMDIwMDM5Nw==","url":"https://github.com/coala/coala/pull/5707#discussion_r210200397","bodyText":"Please explain the need for this.","diffHunk":"@@ -75,8 +75,11 @@ def apply_filters(filters, bears=None, sections=None):\n         items = sections\n         applier = _apply_section_filter\n \n-    for filter in filters:\n-        filter_name, *filter_args = filter\n+    for filter_name, *filter_args in filters.items():\n+        for key in filter_args:\n+            if isinstance(key, list):\n+                filter_args = [\n+                    item for sublist in filter_args for item in sublist]","author":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4","name":"Kilari Teja"},"reactions":[],"createdAt":"2018-08-15T08:20:50Z","lastEditedAt":null,"updatedAt":"2018-08-15T08:20:50Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMDIyMzg3OQ==","url":"https://github.com/coala/coala/pull/5707#discussion_r210223879","bodyText":"To convert a list of lists into a list. --> [['C', 'java']] ==> ['C', 'java']","diffHunk":"@@ -75,8 +75,11 @@ def apply_filters(filters, bears=None, sections=None):\n         items = sections\n         applier = _apply_section_filter\n \n-    for filter in filters:\n-        filter_name, *filter_args = filter\n+    for filter_name, *filter_args in filters.items():\n+        for key in filter_args:\n+            if isinstance(key, list):\n+                filter_args = [\n+                    item for sublist in filter_args for item in sublist]","author":{"login":"Utkarsh1308","avatarUrl":"https://avatars0.githubusercontent.com/u/23418707?v=4","name":"Utkarsh Sharma"},"reactions":[],"createdAt":"2018-08-15T10:03:51Z","lastEditedAt":null,"updatedAt":"2018-08-15T10:03:51Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMDIyNzIxNQ==","url":"https://github.com/coala/coala/pull/5707#discussion_r210227215","bodyText":"The top level for filter_name, *filter_args in filters.items() already iterates over all the filters. This should be pretty straight forward and not requires this kind of looping.\ndict_filters = {}\n\nfor filter_name, *filter_args in filters:\n  filter_args = tuple(filter_args)\n  dict_filters[filter_name] = filter_args\nWhy won't this work?","diffHunk":"@@ -75,8 +75,11 @@ def apply_filters(filters, bears=None, sections=None):\n         items = sections\n         applier = _apply_section_filter\n \n-    for filter in filters:\n-        filter_name, *filter_args = filter\n+    for filter_name, *filter_args in filters.items():\n+        for key in filter_args:\n+            if isinstance(key, list):\n+                filter_args = [\n+                    item for sublist in filter_args for item in sublist]","author":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4","name":"Kilari Teja"},"reactions":[],"createdAt":"2018-08-15T10:21:27Z","lastEditedAt":"2018-08-15T10:23:33Z","updatedAt":"2018-08-15T10:23:33Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMDIyODkyMg==","url":"https://github.com/coala/coala/pull/5707#discussion_r210228922","bodyText":"In the original code filter_args gave a list instead of a single variable. (['syntax'] instead of syntax)\nOn using filter_args I got a single variable and *filter_args gave a list so I sticked with the original result because I didn't know if this change could give an error.","diffHunk":"@@ -75,8 +75,11 @@ def apply_filters(filters, bears=None, sections=None):\n         items = sections\n         applier = _apply_section_filter\n \n-    for filter in filters:\n-        filter_name, *filter_args = filter\n+    for filter_name, *filter_args in filters.items():","author":{"login":"Utkarsh1308","avatarUrl":"https://avatars0.githubusercontent.com/u/23418707?v=4","name":"Utkarsh Sharma"},"reactions":[],"createdAt":"2018-08-15T10:30:30Z","lastEditedAt":null,"updatedAt":"2018-08-15T10:30:30Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMDIzMDUxOQ==","url":"https://github.com/coala/coala/pull/5707#discussion_r210230519","bodyText":"This would give the following result\nlanguage\n('c', 'java')\ncan_fix\n('s', 'y', 'n', 't', 'a', 'x')\nsection_tags\n('s', 'a', 'v', 'e')\n\ninstead of what I am aiming for\nlanguage\n['c', 'java']\ncan_fix\n['syntax']\nsection_tags\n['save']\n\nI wrote this extra code to change the filter args from\n[['c', 'java']]\n['syntax']\n['save']\n\nto\n['c', 'java']\n['syntax']\n['save']","diffHunk":"@@ -75,8 +75,11 @@ def apply_filters(filters, bears=None, sections=None):\n         items = sections\n         applier = _apply_section_filter\n \n-    for filter in filters:\n-        filter_name, *filter_args = filter\n+    for filter_name, *filter_args in filters.items():\n+        for key in filter_args:\n+            if isinstance(key, list):\n+                filter_args = [\n+                    item for sublist in filter_args for item in sublist]","author":{"login":"Utkarsh1308","avatarUrl":"https://avatars0.githubusercontent.com/u/23418707?v=4","name":"Utkarsh Sharma"},"reactions":[],"createdAt":"2018-08-15T10:38:21Z","lastEditedAt":null,"updatedAt":"2018-08-15T10:38:21Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMDIzMTUxMA==","url":"https://github.com/coala/coala/pull/5707#discussion_r210231510","bodyText":"filters is a list right?","diffHunk":"@@ -75,8 +75,11 @@ def apply_filters(filters, bears=None, sections=None):\n         items = sections\n         applier = _apply_section_filter\n \n-    for filter in filters:\n-        filter_name, *filter_args = filter\n+    for filter_name, *filter_args in filters.items():","author":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4","name":"Kilari Teja"},"reactions":[],"createdAt":"2018-08-15T10:43:41Z","lastEditedAt":null,"updatedAt":"2018-08-15T10:43:41Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMDIzMjMzNg==","url":"https://github.com/coala/coala/pull/5707#discussion_r210232336","bodyText":"The original code takes filters as a list but according to my understanding the issue aims to change filters from a list to a dict as an argument. I might have misunderstood the issue.","diffHunk":"@@ -75,8 +75,11 @@ def apply_filters(filters, bears=None, sections=None):\n         items = sections\n         applier = _apply_section_filter\n \n-    for filter in filters:\n-        filter_name, *filter_args = filter\n+    for filter_name, *filter_args in filters.items():","author":{"login":"Utkarsh1308","avatarUrl":"https://avatars0.githubusercontent.com/u/23418707?v=4","name":"Utkarsh Sharma"},"reactions":[],"createdAt":"2018-08-15T10:47:09Z","lastEditedAt":"2018-08-15T10:47:26Z","updatedAt":"2018-08-15T10:47:26Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMDIzMjYyNQ==","url":"https://github.com/coala/coala/pull/5707#discussion_r210232625","bodyText":">>> filters = [['langauge', 'c', 'java'], ['can_fix', 'syntax']]\n>>> dict_filters = {}\n>>> \n>>> for filter_name, *filter_args in filters:\n...   filter_args = tuple(filter_args)\n...   dict_filters[filter_name] = filter_args\n... \n>>> \n>>> dict_filters\n{'langauge': ('c', 'java'), 'can_fix': ('syntax',)}\n>>> \nWhat am I doing wrong here?","diffHunk":"@@ -75,8 +75,11 @@ def apply_filters(filters, bears=None, sections=None):\n         items = sections\n         applier = _apply_section_filter\n \n-    for filter in filters:\n-        filter_name, *filter_args = filter\n+    for filter_name, *filter_args in filters.items():\n+        for key in filter_args:\n+            if isinstance(key, list):\n+                filter_args = [\n+                    item for sublist in filter_args for item in sublist]","author":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4","name":"Kilari Teja"},"reactions":[],"createdAt":"2018-08-15T10:48:34Z","lastEditedAt":null,"updatedAt":"2018-08-15T10:48:34Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMDIzMjk1Ng==","url":"https://github.com/coala/coala/pull/5707#discussion_r210232956","bodyText":"I changed filters from a list into a dict.\nThe new filters is\n{'language': ['c', 'java'], 'can_fix': 'syntax', 'section_tags': 'save'}","diffHunk":"@@ -75,8 +75,11 @@ def apply_filters(filters, bears=None, sections=None):\n         items = sections\n         applier = _apply_section_filter\n \n-    for filter in filters:\n-        filter_name, *filter_args = filter\n+    for filter_name, *filter_args in filters.items():\n+        for key in filter_args:\n+            if isinstance(key, list):\n+                filter_args = [\n+                    item for sublist in filter_args for item in sublist]","author":{"login":"Utkarsh1308","avatarUrl":"https://avatars0.githubusercontent.com/u/23418707?v=4","name":"Utkarsh Sharma"},"reactions":[],"createdAt":"2018-08-15T10:50:24Z","lastEditedAt":null,"updatedAt":"2018-08-15T10:50:24Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMDIzNTc5Mg==","url":"https://github.com/coala/coala/pull/5707#discussion_r210235792","bodyText":"Ok, so my understanding is you have already performed partial conversion to a dict based filter structure. A few remarks here:\n\nUse OrderedDicts, filtering order is important here.\nUse tuples for holding args, not lists.\nDo not partially convert the filters, you should rather have all the filter args as tuples. {'language': ('c', 'java'), 'can_fix': ('syntax',), 'section_tags': ('save',)} otherwise it will force all the other unrelated methods to handle this case.","diffHunk":"@@ -75,8 +75,11 @@ def apply_filters(filters, bears=None, sections=None):\n         items = sections\n         applier = _apply_section_filter\n \n-    for filter in filters:\n-        filter_name, *filter_args = filter\n+    for filter_name, *filter_args in filters.items():\n+        for key in filter_args:\n+            if isinstance(key, list):\n+                filter_args = [\n+                    item for sublist in filter_args for item in sublist]","author":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4","name":"Kilari Teja"},"reactions":[],"createdAt":"2018-08-15T11:03:41Z","lastEditedAt":"2018-08-15T11:04:01Z","updatedAt":"2018-08-15T11:04:01Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMDIzNjE5Nw==","url":"https://github.com/coala/coala/pull/5707#discussion_r210236197","bodyText":"I would suggest doing this step wise to understand it better. Make everything work with tuple right now and then introduce dicts.","diffHunk":"@@ -75,8 +75,11 @@ def apply_filters(filters, bears=None, sections=None):\n         items = sections\n         applier = _apply_section_filter\n \n-    for filter in filters:\n-        filter_name, *filter_args = filter\n+    for filter_name, *filter_args in filters.items():\n+        for key in filter_args:\n+            if isinstance(key, list):\n+                filter_args = [\n+                    item for sublist in filter_args for item in sublist]","author":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4","name":"Kilari Teja"},"reactions":[],"createdAt":"2018-08-15T11:05:47Z","lastEditedAt":null,"updatedAt":"2018-08-15T11:05:47Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMTEwNDQ5Mg==","url":"https://github.com/coala/coala/pull/5707#discussion_r211104492","bodyText":"this lines aren't the same with 135:140 from FilterHelper.py ? Maybe you can write a function inside FilterHelper with this lines and call it at the start of apply_filters instead of here, i don't think is the proper place. Also you can use that function instead of 135:140 to avoid duplicate code.","diffHunk":"@@ -70,6 +70,11 @@ def main(debug=False):\n                 # Each iteration of the following loop applies\n                 # filters one by one provided as arguments\n                 try:\n+                    items = {}","author":{"login":"Nosferatul","avatarUrl":"https://avatars2.githubusercontent.com/u/15227444?v=4","name":"Alexandru-Sorin Maxim"},"reactions":[],"createdAt":"2018-08-19T14:16:56Z","lastEditedAt":null,"updatedAt":"2018-08-19T14:16:56Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMTYyMjk0Mg==","url":"https://github.com/coala/coala/pull/5707#discussion_r211622942","bodyText":"Why new line here?","diffHunk":"@@ -75,8 +75,11 @@ def apply_filters(filters, bears=None, sections=None):\n         items = sections\n         applier = _apply_section_filter\n \n-    for filter in filters:\n-        filter_name, *filter_args = filter\n+    for filter_name, *filter_args in filters.items():\n+        for filter_arg in filter_args:\n+            if isinstance(filter_arg, list):\n+                filter_args = [\n+                    item for sublist in filter_args for item in sublist]","author":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4","name":"Boxuan Li"},"reactions":[],"createdAt":"2018-08-21T14:18:05Z","lastEditedAt":null,"updatedAt":"2018-08-21T14:18:05Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMTYyMzY3MQ==","url":"https://github.com/coala/coala/pull/5707#discussion_r211623671","bodyText":"fil -> filter?","diffHunk":"@@ -123,10 +126,20 @@ def collect_filters(args, arg_list=None, arg_parser=None):\n         Instance of ArgParser that is used to parse arg list.\n     :return:\n         List of filters in standard filter format, i.e\n-        ``[['filter_name', 'arg1', 'arg2']]``.\n+        ``{'filter_name': ['arg1', 'arg2']}``.\n     \"\"\"\n     if args is None:\n         arg_parser = default_arg_parser() if arg_parser is None else arg_parser\n         args = arg_parser.parse_args(arg_list)\n \n-    return getattr(args, 'filter_by', None) or []\n+    filters = getattr(args, 'filter_by', None) or []\n+    filters = list_to_dict(filters)\n+    return filters\n+\n+\n+def list_to_dict(filters):\n+    items = {}\n+    for fil in filters:","author":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4","name":"Boxuan Li"},"reactions":[],"createdAt":"2018-08-21T14:19:59Z","lastEditedAt":null,"updatedAt":"2018-08-21T14:19:59Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMTYyNDY2OA==","url":"https://github.com/coala/coala/pull/5707#discussion_r211624668","bodyText":"Ideally, the doc string here should also be changed.","diffHunk":"@@ -60,8 +60,8 @@ def apply_filters(filters, bears=None, sections=None):\n \n     :param filters:\n         List of args based on ``bears`` has to be filtered. For example:","author":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4","name":"Boxuan Li"},"reactions":[],"createdAt":"2018-08-21T14:22:30Z","lastEditedAt":null,"updatedAt":"2018-08-21T14:22:30Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMTYzMjI2Ng==","url":"https://github.com/coala/coala/pull/5707#discussion_r211632266","bodyText":"What should be changed?","diffHunk":"@@ -60,8 +60,8 @@ def apply_filters(filters, bears=None, sections=None):\n \n     :param filters:\n         List of args based on ``bears`` has to be filtered. For example:","author":{"login":"Utkarsh1308","avatarUrl":"https://avatars0.githubusercontent.com/u/23418707?v=4","name":"Utkarsh Sharma"},"reactions":[],"createdAt":"2018-08-21T14:41:15Z","lastEditedAt":null,"updatedAt":"2018-08-21T14:41:15Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMTYzMjI4Ng==","url":"https://github.com/coala/coala/pull/5707#discussion_r211632286","bodyText":"Please name this appropriately, list_to_dict does not explain its purpose.","diffHunk":"@@ -123,10 +126,20 @@ def collect_filters(args, arg_list=None, arg_parser=None):\n         Instance of ArgParser that is used to parse arg list.\n     :return:\n         List of filters in standard filter format, i.e\n-        ``[['filter_name', 'arg1', 'arg2']]``.\n+        ``{'filter_name': ['arg1', 'arg2']}``.\n     \"\"\"\n     if args is None:\n         arg_parser = default_arg_parser() if arg_parser is None else arg_parser\n         args = arg_parser.parse_args(arg_list)\n \n-    return getattr(args, 'filter_by', None) or []\n+    filters = getattr(args, 'filter_by', None) or []\n+    filters = list_to_dict(filters)\n+    return filters\n+\n+\n+def list_to_dict(filters):","author":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4","name":"Kilari Teja"},"reactions":[],"createdAt":"2018-08-21T14:41:17Z","lastEditedAt":null,"updatedAt":"2018-08-21T14:41:17Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMzEzMDU0MQ==","url":"https://github.com/coala/coala/pull/5707#issuecomment-413130541","bodyText":"https://github.com/coala/coala/blob/master/coalib/coala.py#L69 might require some patch work too.","diffHunk":null,"author":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4","name":"Kilari Teja"},"reactions":[],"createdAt":"2018-08-15T08:31:47Z","lastEditedAt":null,"updatedAt":"2018-08-15T08:31:47Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMzEzMTE2OA==","url":"https://github.com/coala/coala/pull/5707#issuecomment-413131168","bodyText":"Would you consider doing this in stages? First let us transition this into tuple based structures and then worry about introducing dicts (OrderedDicts) or class based filters.","diffHunk":null,"author":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4","name":"Kilari Teja"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzk1OTc2NQ==","createdAt":"2018-08-15T14:40:02Z","content":"THUMBS_UP","user":{"login":"jayvdb","name":"John Vandenberg"}}],"createdAt":"2018-08-15T08:34:15Z","lastEditedAt":"2018-08-15T08:34:35Z","updatedAt":"2018-08-15T08:34:35Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxNjA3NTE0Mw==","url":"https://github.com/coala/coala/pull/5707#issuecomment-416075143","bodyText":"The test failing is tests/coalaTest.py::coalaTest::test_coala_with_color, you can ignore that, it happens sometimes.","diffHunk":null,"author":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4","name":"Kilari Teja"},"reactions":[],"createdAt":"2018-08-26T21:52:36Z","lastEditedAt":null,"updatedAt":"2018-08-26T21:52:36Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1534320371000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5709","number":5709,"title":"Processing.py: Fix file dict logging","body":"Fix logging message related to file dict collection.\nFixes #5708\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":7,"createdAt":"2018-08-15T07:27:18Z","updatedAt":"2018-08-15T08:06:11Z","closedAt":"2018-08-15T08:06:11Z","state":"merged","user":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4"},"owner":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4"},"assignee":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4"},"labels":[{"name":"importance/medium","color":"fbca04"},{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"00DE0F"},{"name":"type/bug","color":"e11d21"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5709","comments":[]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1534357007000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5711","number":5711,"title":"docs: Update Newcomers_Guide.rst","body":"The update makes all the blocks even colored in Newcomers_Guide\nCloses #5333\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":11,"createdAt":"2018-08-15T14:39:41Z","updatedAt":"2018-08-15T18:16:47Z","closedAt":"2018-08-15T18:16:47Z","state":"closed","user":{"login":"imnotkk","avatarUrl":"https://avatars0.githubusercontent.com/u/31278163?v=4"},"owner":{"login":"imnotkk","avatarUrl":"https://avatars0.githubusercontent.com/u/31278163?v=4"},"assignee":{"login":"imnotkk","avatarUrl":"https://avatars0.githubusercontent.com/u/31278163?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5711","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDQxMzIyNTA1NQ==","url":"https://github.com/coala/coala/pull/5711#issuecomment-413225055","bodyText":"@imnotkk , the bot says there is a problem with your commit message, and it is reporting that rstcheck doesnt like one of the lines.\nCould you investigate a little, and if you need help come onto https://coala.io/chat .  Thanks","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-15T14:59:28Z","lastEditedAt":null,"updatedAt":"2018-08-15T14:59:28Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMzIyNzY3Mg==","url":"https://github.com/coala/coala/pull/5711#issuecomment-413227672","bodyText":"I suggest you come onto https://coala.io/chat and ask for help ; you've made a number of mistakes , and it is easier to fix them with someone helping you to avoid making a mess in public .","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-15T15:07:24Z","lastEditedAt":null,"updatedAt":"2018-08-15T15:07:24Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1535842669000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5712","number":5712,"title":"Definition","body":"Checklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!","comments":9,"createdAt":"2018-08-15T15:57:57Z","updatedAt":"2018-09-01T22:57:49Z","closedAt":null,"state":"open","user":{"login":"shashwatmishra76","avatarUrl":"https://avatars2.githubusercontent.com/u/24711156?v=4"},"owner":{"login":"shashwatmishra76","avatarUrl":"https://avatars2.githubusercontent.com/u/24711156?v=4"},"assignee":{"login":"shashwatmishra76","avatarUrl":"https://avatars2.githubusercontent.com/u/24711156?v=4"},"labels":[{"name":"area/languages","color":"d4c5f9"},{"name":"difficulty/low","color":"207de5"},{"name":"importance/medium","color":"fbca04"},{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5712","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMTExNzc3MA==","url":"https://github.com/coala/coala/pull/5712#discussion_r211117770","bodyText":"Please check all keywords.\nE.g. https://unix.stackexchange.com/questions/86270/how-do-you-use-the-command-coproc-in-various-shells","diffHunk":"@@ -0,0 +1,16 @@\n+from coalib.bearlib.languages.Language import Language\n+\n+\n+@Language\n+class KornShell:\n+    extensions = '.ksh'\n+    comment_delimiters = '#',\n+    multiline_comment_delimiters = {\": '\": \"'\"}\n+    string_delimiters = {'\"': '\"', \"'\": \"'\", '`': '`'}\n+    multiline_string_delimiters = string_delimiters\n+    encapsulators = {'[': ']', '{': '}'}\n+    keywords = [\n+        'if', 'then', 'else', 'elif', 'fi', 'case', 'coproc', 'esac',","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-19T22:40:44Z","lastEditedAt":null,"updatedAt":"2018-08-19T22:40:44Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMTIxMzgwMw==","url":"https://github.com/coala/coala/pull/5712#discussion_r211213803","bodyText":"Please remove this file . And read your PR diff after uploading it to find such obvious mistakes before wasting reviewer time.","diffHunk":"@@ -0,0 +1,18 @@\n+from coalib.bearlib.languages.Language import Language\n+\n+\n+@Language","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-20T10:27:25Z","lastEditedAt":null,"updatedAt":"2018-08-20T10:27:25Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMTYyMTY1Ng==","url":"https://github.com/coala/coala/pull/5712#discussion_r211621656","bodyText":"This should be a tuple.","diffHunk":"@@ -0,0 +1,16 @@\n+from coalib.bearlib.languages.Language import Language\n+\n+\n+@Language\n+class Bash:\n+    extensions = '.bash'","author":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4","name":"Boxuan Li"},"createdAt":"2018-08-21T14:14:48Z","lastEditedAt":null,"updatedAt":"2018-08-21T14:14:48Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMTkyNzIwNQ==","url":"https://github.com/coala/coala/pull/5712#discussion_r211927205","bodyText":"Your commit message says you are only adding language definitions, then why is this file here?","diffHunk":"@@ -0,0 +1,206 @@\n+import os\n+import tempfile\n+import unittest\n+from collections import OrderedDict\n+import logging\n+\n+from coalib.parsing.ConfParser import ConfParser\n+from coalib.settings.Section import Section\n+\n+\n+class ConfParserTest(unittest.TestCase):\n+    example_file = \"\"\"setting = without_section\n+    [foo]\n+    to be ignored","author":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4","name":"Pareksha Manchanda"},"createdAt":"2018-08-22T11:59:51Z","lastEditedAt":null,"updatedAt":"2018-08-22T11:59:51Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMTkyODc2NQ==","url":"https://github.com/coala/coala/pull/5712#discussion_r211928765","bodyText":"I don't know how this got generated.Will remove this at once.","diffHunk":"@@ -0,0 +1,206 @@\n+import os\n+import tempfile\n+import unittest\n+from collections import OrderedDict\n+import logging\n+\n+from coalib.parsing.ConfParser import ConfParser\n+from coalib.settings.Section import Section\n+\n+\n+class ConfParserTest(unittest.TestCase):\n+    example_file = \"\"\"setting = without_section\n+    [foo]\n+    to be ignored","author":{"login":"shashwatmishra76","avatarUrl":"https://avatars2.githubusercontent.com/u/24711156?v=4","name":"Shashwat Mishra"},"createdAt":"2018-08-22T12:05:43Z","lastEditedAt":null,"updatedAt":"2018-08-22T12:05:43Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMjE1ODM4OQ==","url":"https://github.com/coala/coala/pull/5712#discussion_r212158389","bodyText":"Wow -- this review comment was pinned on a file called something.orig iirc , and GitHub has now pinned it to ZShell.py.  Very strange.","diffHunk":"@@ -0,0 +1,18 @@\n+from coalib.bearlib.languages.Language import Language\n+\n+\n+@Language","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-23T01:23:36Z","lastEditedAt":null,"updatedAt":"2018-08-23T01:23:36Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMjE1ODUwMA==","url":"https://github.com/coala/coala/pull/5712#discussion_r212158500","bodyText":"this is not in alpha order.","diffHunk":"@@ -61,6 +63,7 @@\n     'Vala',\n     'VisualBasic',\n     'm4',\n+    'ZShell',","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-23T01:24:27Z","lastEditedAt":null,"updatedAt":"2018-08-23T01:24:27Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMzg1NzY1Mw==","url":"https://github.com/coala/coala/pull/5712#discussion_r213857653","bodyText":"why this change removing JSON?  How is this relevant to your change?\nAnd please never rebase using a merge, like you did in 8a71a76 .  It is ugly.  Now this PR has three commits.","diffHunk":"@@ -47,7 +47,6 @@\n     'JavaScript Object Notation',\n     'JavaServer Pages',\n     'Jinja2',\n-    'JSON',","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-29T22:44:47Z","lastEditedAt":null,"updatedAt":"2018-08-29T22:44:47Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMzg1ODc1OQ==","url":"https://github.com/coala/coala/pull/5712#discussion_r213858759","bodyText":"Because I was getting an assertion error in\nCollectorsTest.py : test_get_all_languages_without_unknown\nwhich said that 'JSON' is present in 'set(LANGUAGE_NAMES)' but not in 'languages '.","diffHunk":"@@ -47,7 +47,6 @@\n     'JavaScript Object Notation',\n     'JavaServer Pages',\n     'Jinja2',\n-    'JSON',","author":{"login":"shashwatmishra76","avatarUrl":"https://avatars2.githubusercontent.com/u/24711156?v=4","name":"Shashwat Mishra"},"createdAt":"2018-08-29T22:51:05Z","lastEditedAt":null,"updatedAt":"2018-08-29T22:51:05Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMzg1OTQyNQ==","url":"https://github.com/coala/coala/pull/5712#discussion_r213859425","bodyText":"Also,you already have 'JavaScript Object Notation' as a qualname .So I don't think there is any need of having  JSON in TestUtilities.py when you already have 'JavaScript Object Notation' sitting there.","diffHunk":"@@ -47,7 +47,6 @@\n     'JavaScript Object Notation',\n     'JavaServer Pages',\n     'Jinja2',\n-    'JSON',","author":{"login":"shashwatmishra76","avatarUrl":"https://avatars2.githubusercontent.com/u/24711156?v=4","name":"Shashwat Mishra"},"createdAt":"2018-08-29T22:54:51Z","lastEditedAt":null,"updatedAt":"2018-08-29T22:54:51Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNDUxNTE0NA==","url":"https://github.com/coala/coala/pull/5712#discussion_r214515144","bodyText":"If you look at travis, the tests are passing without that change.... I see you have removed it now.  Thanks.","diffHunk":"@@ -47,7 +47,6 @@\n     'JavaScript Object Notation',\n     'JavaServer Pages',\n     'Jinja2',\n-    'JSON',","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-09-01T14:26:06Z","lastEditedAt":null,"updatedAt":"2018-09-01T14:26:06Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNDUxNTE3Mw==","url":"https://github.com/coala/coala/pull/5712#discussion_r214515173","bodyText":"please do not re-arrange these.  That isnt what your issue is about.\nCreate a newcomer issue for someone else to sort them ;-)","diffHunk":"@@ -16,8 +17,10 @@\n from .definitions.html import HTML\n from .definitions.Java import Java\n from .definitions.JavaScript import JavaScript\n+from .definitions.Jinja2 import Jinja2","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-09-01T14:27:54Z","lastEditedAt":null,"updatedAt":"2018-09-01T14:27:54Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxNDkzMzc2OA==","url":"https://github.com/coala/coala/pull/5712#issuecomment-414933768","bodyText":"@li-boxuan Can you review my changes once?","diffHunk":null,"author":{"login":"shashwatmishra76","avatarUrl":"https://avatars2.githubusercontent.com/u/24711156?v=4","name":"Shashwat Mishra"},"createdAt":"2018-08-22T07:07:53Z","lastEditedAt":null,"updatedAt":"2018-08-22T07:07:53Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxNDk2MjYzMg==","url":"https://github.com/coala/coala/pull/5712#issuecomment-414962632","bodyText":"@jayvdb I guess I have made the necessary changes.Please review.","diffHunk":null,"author":{"login":"shashwatmishra76","avatarUrl":"https://avatars2.githubusercontent.com/u/24711156?v=4","name":"Shashwat Mishra"},"createdAt":"2018-08-22T08:57:31Z","lastEditedAt":null,"updatedAt":"2018-08-22T08:57:31Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxNTk4MzYzMg==","url":"https://github.com/coala/coala/pull/5712#issuecomment-415983632","bodyText":"Please refer to https://api.coala.io/en/latest/Developers/Writing_Good_Commits.html for writing commit messages.","diffHunk":null,"author":{"login":"srivama","avatarUrl":"https://avatars0.githubusercontent.com/u/17855807?v=4","name":"Amandeep Srivastava"},"createdAt":"2018-08-25T17:12:26Z","lastEditedAt":null,"updatedAt":"2018-08-25T17:12:26Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxNzg2MDIxNQ==","url":"https://github.com/coala/coala/pull/5712#issuecomment-417860215","bodyText":"@jayvdb Please review this.","diffHunk":null,"author":{"login":"shashwatmishra76","avatarUrl":"https://avatars2.githubusercontent.com/u/24711156?v=4","name":"Shashwat Mishra"},"createdAt":"2018-09-01T13:35:18Z","lastEditedAt":null,"updatedAt":"2018-09-01T13:35:18Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1534356437000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5713","number":5713,"title":"docs: Updated Newcomers_Guide","body":"Updated the Newcomers_Guide.rst so that all Colored boxes are Even Colored\nCloses #5333\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":7,"createdAt":"2018-08-15T17:54:45Z","updatedAt":"2018-08-15T18:07:17Z","closedAt":"2018-08-15T18:03:58Z","state":"closed","user":{"login":"imnotkk","avatarUrl":"https://avatars0.githubusercontent.com/u/31278163?v=4"},"owner":{"login":"imnotkk","avatarUrl":"https://avatars0.githubusercontent.com/u/31278163?v=4"},"assignee":{"login":"imnotkk","avatarUrl":"https://avatars0.githubusercontent.com/u/31278163?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5713","comments":[]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1534356880000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5714","number":5714,"title":"docs: Fix Even Colored Blocks","body":"Updated to make every block Even Colored.\nCloses: #5333\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":3,"createdAt":"2018-08-15T18:10:50Z","updatedAt":"2018-08-15T18:14:40Z","closedAt":"2018-08-15T18:13:10Z","state":"closed","user":{"login":"imnotkk","avatarUrl":"https://avatars0.githubusercontent.com/u/31278163?v=4"},"owner":{"login":"imnotkk","avatarUrl":"https://avatars0.githubusercontent.com/u/31278163?v=4"},"assignee":{"login":"imnotkk","avatarUrl":"https://avatars0.githubusercontent.com/u/31278163?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5714","comments":[]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1534357238000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5715","number":5715,"title":"docs: Fix Colored Blocks","body":"Updated to make every block Even Colored.\nCloses #5333\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":3,"createdAt":"2018-08-15T18:19:11Z","updatedAt":"2018-08-15T18:20:38Z","closedAt":"2018-08-15T18:20:26Z","state":"closed","user":{"login":"imnotkk","avatarUrl":"https://avatars0.githubusercontent.com/u/31278163?v=4"},"owner":{"login":"imnotkk","avatarUrl":"https://avatars0.githubusercontent.com/u/31278163?v=4"},"assignee":{"login":"imnotkk","avatarUrl":"https://avatars0.githubusercontent.com/u/31278163?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5715","comments":[]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1534395387000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5716","number":5716,"title":" docs: Fix Colored Blocks ","body":"Updated to fix even block color.\nCloses #5333\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":5,"createdAt":"2018-08-15T18:26:04Z","updatedAt":"2018-08-16T04:56:27Z","closedAt":"2018-08-15T18:56:02Z","state":"closed","user":{"login":"imnotkk","avatarUrl":"https://avatars0.githubusercontent.com/u/31278163?v=4"},"owner":{"login":"imnotkk","avatarUrl":"https://avatars0.githubusercontent.com/u/31278163?v=4"},"assignee":{"login":"imnotkk","avatarUrl":"https://avatars0.githubusercontent.com/u/31278163?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5716","comments":[]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1534359760000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5717","number":5717,"title":"Newcomer_Guide.rst: Fix Even Colored Blocks","body":"Fixed to make all blocks even colored.\nFixes #5333\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":3,"createdAt":"2018-08-15T18:44:33Z","updatedAt":"2018-08-15T19:02:40Z","closedAt":"2018-08-15T19:02:40Z","state":"closed","user":{"login":"imnotkk","avatarUrl":"https://avatars0.githubusercontent.com/u/31278163?v=4"},"owner":{"login":"imnotkk","avatarUrl":"https://avatars0.githubusercontent.com/u/31278163?v=4"},"assignee":{"login":"imnotkk","avatarUrl":"https://avatars0.githubusercontent.com/u/31278163?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5717","comments":[]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1534365479000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5718","number":5718,"title":"docs: Fix Colored Blocks","body":"Fixes #5333\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":1,"createdAt":"2018-08-15T19:05:33Z","updatedAt":"2018-08-15T20:37:59Z","closedAt":"2018-08-15T20:37:59Z","state":"closed","user":{"login":"imnotkk","avatarUrl":"https://avatars0.githubusercontent.com/u/31278163?v=4"},"owner":{"login":"imnotkk","avatarUrl":"https://avatars0.githubusercontent.com/u/31278163?v=4"},"assignee":{"login":"imnotkk","avatarUrl":"https://avatars0.githubusercontent.com/u/31278163?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5718","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDQxMzMwMzU0MQ==","url":"https://github.com/coala/coala/pull/5718#issuecomment-413303541","bodyText":"@jayvdb I have updated the code according to issue #5333 but here it says \"Unexpected possible title overline or transition.\".\nIs there any way you can help?","diffHunk":null,"author":{"login":"imnotkk","avatarUrl":"https://avatars0.githubusercontent.com/u/31278163?v=4","name":"Kranthi Kiran"},"createdAt":"2018-08-15T19:10:59Z","lastEditedAt":null,"updatedAt":"2018-08-15T19:10:59Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1534394647000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5719","number":5719,"title":"Newcomers_Guide.rst: Fix Colored Blocks","body":"This fixes to make all blocks even colored blocks.\nFixes #5333\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":5,"createdAt":"2018-08-15T20:38:43Z","updatedAt":"2018-08-16T04:44:07Z","closedAt":"2018-08-16T04:44:07Z","state":"closed","user":{"login":"imnotkk","avatarUrl":"https://avatars0.githubusercontent.com/u/31278163?v=4"},"owner":{"login":"imnotkk","avatarUrl":"https://avatars0.githubusercontent.com/u/31278163?v=4"},"assignee":{"login":"imnotkk","avatarUrl":"https://avatars0.githubusercontent.com/u/31278163?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"process/pending review","color":"bfe5bf"},{"name":"size/S","color":"B1CF0A"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5719","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDQxMzQyNDQ3NQ==","url":"https://github.com/coala/coala/pull/5719#issuecomment-413424475","bodyText":"By creating 8 PRs, all broken, instead of working on fixing one, you have demonstrated you did not read https://coala.io/newcomer , https://coala.io/git , etc , and are not suitable for @coala yet.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-16T04:44:07Z","lastEditedAt":null,"updatedAt":"2018-08-16T04:44:07Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1534397067000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5720","number":5720,"title":"Newcomers_Guide.rst: Fix Colored Blocks","body":"Fixes colored blocks to be of even color.\nFixes #5333\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":0,"createdAt":"2018-08-16T05:09:48Z","updatedAt":"2018-08-16T05:24:27Z","closedAt":"2018-08-16T05:24:27Z","state":"closed","user":{"login":"imnotkk","avatarUrl":"https://avatars0.githubusercontent.com/u/31278163?v=4"},"owner":{"login":"imnotkk","avatarUrl":"https://avatars0.githubusercontent.com/u/31278163?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5720","comments":[]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1532230018000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5652","number":5652,"title":"Removed unused import","body":"For short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":9,"createdAt":"2018-07-21T14:44:55Z","updatedAt":"2018-07-22T03:26:58Z","closedAt":"2018-07-22T03:11:49Z","state":"closed","user":{"login":"XDoubleU","avatarUrl":"https://avatars3.githubusercontent.com/u/28691666?v=4"},"owner":{"login":"XDoubleU","avatarUrl":"https://avatars3.githubusercontent.com/u/28691666?v=4"},"assignee":{"login":"XDoubleU","avatarUrl":"https://avatars3.githubusercontent.com/u/28691666?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"00DE0F"},{"name":"type/codestyle","color":"d4c5f9"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5652","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDQwNjgwMjM3NA==","url":"https://github.com/coala/coala/pull/5652#issuecomment-406802374","bodyText":"Have a look at this.\nChange Removed to Remove. Simplify commit body too.","diffHunk":null,"author":{"login":"MacBox7","avatarUrl":"https://avatars0.githubusercontent.com/u/15063552?v=4","name":"Ankit Joshi"},"createdAt":"2018-07-21T15:03:04Z","lastEditedAt":"2018-07-21T15:04:14Z","updatedAt":"2018-07-21T15:04:14Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQwNjgzODMxNg==","url":"https://github.com/coala/coala/pull/5652#issuecomment-406838316","bodyText":"Duplicate of #5647\nGrr!","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-07-22T03:26:58Z","lastEditedAt":null,"updatedAt":"2018-07-22T03:26:58Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1532963285000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5653","number":5653,"title":"CachingUtilities.py: Remove unused local variable","body":"Closes #5642\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":25,"createdAt":"2018-07-21T16:44:10Z","updatedAt":"2018-07-30T15:08:05Z","closedAt":"2018-07-30T15:08:05Z","state":"merged","user":{"login":"HemabhKamboj","avatarUrl":"https://avatars2.githubusercontent.com/u/32740899?v=4"},"owner":{"login":"HemabhKamboj","avatarUrl":"https://avatars2.githubusercontent.com/u/32740899?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"size/XS","color":"00DE0F"},{"name":"type/codestyle","color":"d4c5f9"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5653","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDQwNjgxMTAyNQ==","url":"https://github.com/coala/coala/pull/5653#issuecomment-406811025","bodyText":"Thanks for guiding me more.\nWill surely take care of it next time.\nWill you merge this PR?","diffHunk":null,"author":{"login":"HemabhKamboj","avatarUrl":"https://avatars2.githubusercontent.com/u/32740899?v=4","name":"Hemabh Kamboj"},"reactions":[],"createdAt":"2018-07-21T17:22:01Z","lastEditedAt":null,"updatedAt":"2018-07-21T17:22:01Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQwNjgxMTM5Mw==","url":"https://github.com/coala/coala/pull/5653#issuecomment-406811393","bodyText":"The PR won't be merged until you fix what has been suggested. And every PR should pass all test case.\n\nDo not close this PR\nDo not delete this branch\nDo not create new commits.\n\nMake changes in the same commit and use git commit --amend  to that.","diffHunk":null,"author":{"login":"MacBox7","avatarUrl":"https://avatars0.githubusercontent.com/u/15063552?v=4","name":"Ankit Joshi"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNjc5NTE3Mg==","createdAt":"2018-07-22T06:48:32Z","content":"THUMBS_UP","user":{"login":"ksdme","name":"Kilari Teja"}}],"createdAt":"2018-07-21T17:28:32Z","lastEditedAt":"2018-07-21T17:28:53Z","updatedAt":"2018-07-21T17:28:53Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQwNjgxMzQyNg==","url":"https://github.com/coala/coala/pull/5653#issuecomment-406813426","bodyText":"ok, looking the code again, can't capture that a removal of a variable is failing the test.","diffHunk":null,"author":{"login":"HemabhKamboj","avatarUrl":"https://avatars2.githubusercontent.com/u/32740899?v=4","name":"Hemabh Kamboj"},"reactions":[],"createdAt":"2018-07-21T18:04:56Z","lastEditedAt":null,"updatedAt":"2018-07-21T18:04:56Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQwNjgzNzg5OQ==","url":"https://github.com/coala/coala/pull/5653#issuecomment-406837899","bodyText":"@HemabhKamboj , please read the errors by gitmate here on your PR.\nPlease read and follow https://coala.io/git closely.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-07-22T03:12:24Z","lastEditedAt":null,"updatedAt":"2018-07-22T03:12:24Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQwNjgzOTc3NQ==","url":"https://github.com/coala/coala/pull/5653#issuecomment-406839775","bodyText":"The only problem is  you didn't squash commit and commit head, test is not failing because of your changes.","diffHunk":null,"author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"reactions":[],"createdAt":"2018-07-22T04:12:22Z","lastEditedAt":null,"updatedAt":"2018-07-22T04:12:22Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQwNjg0NzU0Ng==","url":"https://github.com/coala/coala/pull/5653#issuecomment-406847546","bodyText":"You can also find out squashing guide at https://api.coala.io/en/latest/Developers/Git_Basics.html#rebasing.","diffHunk":null,"author":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4","name":"Kilari Teja"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNjc5NTY0Nw==","createdAt":"2018-07-22T07:49:36Z","content":"THUMBS_UP","user":{"login":"jayvdb","name":"John Vandenberg"}}],"createdAt":"2018-07-22T07:39:53Z","lastEditedAt":null,"updatedAt":"2018-07-22T07:39:53Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQwODYzMDk1Mg==","url":"https://github.com/coala/coala/pull/5653#issuecomment-408630952","bodyText":"@HemabhKamboj please reply and fix this soon otherwise you will be unassigned. For any help ask on coala group.","diffHunk":null,"author":{"login":"MacBox7","avatarUrl":"https://avatars0.githubusercontent.com/u/15063552?v=4","name":"Ankit Joshi"},"reactions":[],"createdAt":"2018-07-28T19:48:57Z","lastEditedAt":null,"updatedAt":"2018-07-28T19:48:57Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQwODY1MzQzNA==","url":"https://github.com/coala/coala/pull/5653#issuecomment-408653434","bodyText":"@MacBox7 will do it by today","diffHunk":null,"author":{"login":"HemabhKamboj","avatarUrl":"https://avatars2.githubusercontent.com/u/32740899?v=4","name":"Hemabh Kamboj"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzEyNjc5NQ==","createdAt":"2018-07-29T05:49:39Z","content":"THUMBS_UP","user":{"login":"MacBox7","name":"Ankit Joshi"}},{"id":"MDg6UmVhY3Rpb24yNzEyODA1MA==","createdAt":"2018-07-29T08:23:21Z","content":"THUMBS_UP","user":{"login":"ksdme","name":"Kilari Teja"}}],"createdAt":"2018-07-29T05:35:51Z","lastEditedAt":null,"updatedAt":"2018-07-29T05:35:51Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQwODY3MDM1MQ==","url":"https://github.com/coala/coala/pull/5653#issuecomment-408670351","bodyText":"I followed the instructions of @MacBox7 as he said on Gitter and fetched from coala/master. Now, squashing all new changes to my initial commit 9cae7e80 is saying 'Cannot squash without previous commit'. Should I squash the other commits now?","diffHunk":null,"author":{"login":"HemabhKamboj","avatarUrl":"https://avatars2.githubusercontent.com/u/32740899?v=4","name":"Hemabh Kamboj"},"reactions":[],"createdAt":"2018-07-29T11:36:31Z","lastEditedAt":null,"updatedAt":"2018-07-29T11:36:31Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQwODgzMDA4Ng==","url":"https://github.com/coala/coala/pull/5653#issuecomment-408830086","bodyText":"Please reword your commit message.","diffHunk":null,"author":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4","name":"Kilari Teja"},"reactions":[],"createdAt":"2018-07-30T11:18:50Z","lastEditedAt":null,"updatedAt":"2018-07-30T11:18:50Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQwODgzMzAxNQ==","url":"https://github.com/coala/coala/pull/5653#issuecomment-408833015","bodyText":"Read the commit guidelines at coala.io/commits, you are missing a proper shortlog.","diffHunk":null,"author":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4","name":"Kilari Teja"},"reactions":[],"createdAt":"2018-07-30T11:32:21Z","lastEditedAt":null,"updatedAt":"2018-07-30T11:32:21Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQwODg1MDkyNQ==","url":"https://github.com/coala/coala/pull/5653#issuecomment-408850925","bodyText":"A couple of issues with your commit message:\n\nThis fixes the typo That was not a typo.\nlines 48 and 89 No point in adding line numbers in commit message.\nMissing period in commit body.\nFixes, this was not a but, you should use Closes.","diffHunk":null,"author":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4","name":"Kilari Teja"},"reactions":[],"createdAt":"2018-07-30T12:46:33Z","lastEditedAt":null,"updatedAt":"2018-07-30T12:46:33Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQwODg1MjE2Mw==","url":"https://github.com/coala/coala/pull/5653#issuecomment-408852163","bodyText":"You are good to go. Just some minor issue as @ksdme  pointed out.\n\nCommit body is not needed remove it.\nFixes => Closes\nRemoves => Remove\n\nI hope you now know that you can use =>\ngit commit --amend\n<Do the changes>\ngit push -f origin Hemabh\nto do the changes.","diffHunk":null,"author":{"login":"MacBox7","avatarUrl":"https://avatars0.githubusercontent.com/u/15063552?v=4","name":"Ankit Joshi"},"reactions":[],"createdAt":"2018-07-30T12:51:14Z","lastEditedAt":"2018-07-30T12:53:12Z","updatedAt":"2018-07-30T12:53:12Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1532603065000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5656","number":5656,"title":"aspects: Default languages=all when using aspects","body":"This ensures that there is no need to pass languages argument\nfor bears supporting all languages by making a list of all languages\nas default for bears when they are run via aspects or both\naspects and settings.\nCloses #5655\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":4,"createdAt":"2018-07-22T07:11:06Z","updatedAt":"2018-07-26T11:04:25Z","closedAt":"2018-07-26T11:04:00Z","state":"merged","user":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4"},"owner":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4"},"assignee":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4"},"labels":[{"name":"area/aspects","color":"000000"},{"name":"area/documentation","color":"bfe5bf"},{"name":"area/languages","color":"d4c5f9"},{"name":"size/S","color":"B1CF0A"},{"name":"type/bug","color":"e11d21"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5656","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNDMyMjE5Mg==","url":"https://github.com/coala/coala/pull/5656#discussion_r204322192","bodyText":"Move unknown to top. It is special.\nAnd move these editions to a separate commit, so we can ack that bit and then work on the rest of the patch.","diffHunk":"@@ -17,17 +17,22 @@\n from .definitions.Java import Java\n from .definitions.JavaScript import JavaScript\n from .definitions.JSP import JSP\n+from .definitions.m4 import m4\n from .definitions.Matlab import Matlab\n from .definitions.Markdown import Markdown\n from .definitions.ObjectiveC import ObjectiveC\n from .definitions.PHP import PHP\n from .definitions.PLSQL import PLSQL\n+from .definitions.PowerShell import PowerShell\n from .definitions.Python import Python\n from .definitions.Ruby import Ruby\n from .definitions.Scala import Scala\n from .definitions.Swift import Swift\n+from .definitions.Tcl import Tcl\n from .definitions.Vala import Vala\n from .definitions.TypeScript import TypeScript\n+from .definitions.Unknown import Unknown","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-07-23T08:39:48Z","lastEditedAt":null,"updatedAt":"2018-07-23T08:39:48Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNDMyMjg4Mw==","url":"https://github.com/coala/coala/pull/5656#discussion_r204322883","bodyText":"And arg to include Unknown, default False.","diffHunk":"@@ -350,6 +351,17 @@ def get_all_bears_names():\n     return [bear.name for bear in get_all_bears()]\n \n \n+def get_all_languages():","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-07-23T08:42:26Z","lastEditedAt":null,"updatedAt":"2018-07-23T08:42:26Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNDMyMzMzNA==","url":"https://github.com/coala/coala/pull/5656#discussion_r204323334","bodyText":"They are all here, loaded, so dont look at the directory.","diffHunk":"@@ -350,6 +351,17 @@ def get_all_bears_names():\n     return [bear.name for bear in get_all_bears()]\n \n \n+def get_all_languages():\n+    \"\"\"\n+    Get a ``list`` of all languages supported by coala, including\n+    ``Unknown`` language.\n+    \"\"\"\n+    return Languages([\n+        language_file[: -3] for language_file in\n+        os.listdir('coalib/bearlib/languages/definitions/')","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-07-23T08:43:42Z","lastEditedAt":null,"updatedAt":"2018-07-23T08:43:42Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNDMyNDA3Nw==","url":"https://github.com/coala/coala/pull/5656#discussion_r204324077","bodyText":"This list needs to be loaded from the directory to check all lang files were loaded","diffHunk":"@@ -422,3 +424,38 @@ def test_get_all_bears_names(self):\n                  'TestDepBearAA',\n                  'AspectTestBear',\n                  'TestDepBearDependsAAndAA'})\n+\n+    def test_get_all_languages(self):\n+        with bear_test_module():\n+            languages = get_all_languages()\n+            assert isinstance(languages, tuple)\n+            self.assertSetEqual(\n+                {str(language) for language in languages},\n+                {'C',\n+                 'C#',\n+                 'CPP',\n+                 'CSS',\n+                 'Fortran',\n+                 'Golang',\n+                 'Hypertext Markup Language 2.0, 3.2, 4.0, 4.1, 5, 5.1',\n+                 'Java',\n+                 'JavaScript',\n+                 'JavaServer Pages',\n+                 'Jinja2',\n+                 'Markdown',\n+                 'Matlab',\n+                 'ObjectiveC',\n+                 'PHP',\n+                 'PLSQL',\n+                 'PowerShell',\n+                 'Python 2.7, 3.3, 3.4, 3.5, 3.6',\n+                 'Ruby',\n+                 'Scala',\n+                 'Shell',\n+                 'Swift',\n+                 'Tcl',\n+                 'TypeScript',\n+                 'Unknown',\n+                 'Vala',\n+                 'VisualBasic',\n+                 'm4'})","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-07-23T08:46:04Z","lastEditedAt":null,"updatedAt":"2018-07-23T08:46:04Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNDMyNDI2Ng==","url":"https://github.com/coala/coala/pull/5656#discussion_r204324266","bodyText":"This should go in test_bears dir , after #5651","diffHunk":"@@ -157,6 +157,13 @@ class aspectsFixOnlyTestBear(Bear, aspects={\n     pass\n \n \n+class aspectsGeneralTestBear(Bear, aspects={","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-07-23T08:46:39Z","lastEditedAt":null,"updatedAt":"2018-07-23T08:46:39Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNDMyOTY1Mg==","url":"https://github.com/coala/coala/pull/5656#discussion_r204329652","bodyText":"How are they loaded until I do something like from coalib.bearlib.languages import Python for every language?","diffHunk":"@@ -350,6 +351,17 @@ def get_all_bears_names():\n     return [bear.name for bear in get_all_bears()]\n \n \n+def get_all_languages():\n+    \"\"\"\n+    Get a ``list`` of all languages supported by coala, including\n+    ``Unknown`` language.\n+    \"\"\"\n+    return Languages([\n+        language_file[: -3] for language_file in\n+        os.listdir('coalib/bearlib/languages/definitions/')","author":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4","name":"Pareksha Manchanda"},"reactions":[],"createdAt":"2018-07-23T09:04:14Z","lastEditedAt":null,"updatedAt":"2018-07-23T09:04:14Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNDMzMDQyMg==","url":"https://github.com/coala/coala/pull/5656#discussion_r204330422","bodyText":"I see, I'll keep it here for now else the tests won't pass. Would rebase as soon as you get the issue solved 👍","diffHunk":"@@ -157,6 +157,13 @@ class aspectsFixOnlyTestBear(Bear, aspects={\n     pass\n \n \n+class aspectsGeneralTestBear(Bear, aspects={","author":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4","name":"Pareksha Manchanda"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNjgyMzkzMA==","createdAt":"2018-07-23T09:54:15Z","content":"THUMBS_UP","user":{"login":"jayvdb","name":"John Vandenberg"}}],"createdAt":"2018-07-23T09:07:09Z","lastEditedAt":null,"updatedAt":"2018-07-23T09:07:09Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNDMzMjY2OA==","url":"https://github.com/coala/coala/pull/5656#discussion_r204332668","bodyText":"If I load this from the directory, the versions won't come. It would be Python instead of Python 2.7, 3.3, 3.4, 3.5, 3.6. Then I have to use Languages for that, which would render the test useless.\nOne solution to check whether all files are loaded or not is to check that the number of language files in the directory is equal to the number of items supplied by get_all_languages().","diffHunk":"@@ -422,3 +424,38 @@ def test_get_all_bears_names(self):\n                  'TestDepBearAA',\n                  'AspectTestBear',\n                  'TestDepBearDependsAAndAA'})\n+\n+    def test_get_all_languages(self):\n+        with bear_test_module():\n+            languages = get_all_languages()\n+            assert isinstance(languages, tuple)\n+            self.assertSetEqual(\n+                {str(language) for language in languages},\n+                {'C',\n+                 'C#',\n+                 'CPP',\n+                 'CSS',\n+                 'Fortran',\n+                 'Golang',\n+                 'Hypertext Markup Language 2.0, 3.2, 4.0, 4.1, 5, 5.1',\n+                 'Java',\n+                 'JavaScript',\n+                 'JavaServer Pages',\n+                 'Jinja2',\n+                 'Markdown',\n+                 'Matlab',\n+                 'ObjectiveC',\n+                 'PHP',\n+                 'PLSQL',\n+                 'PowerShell',\n+                 'Python 2.7, 3.3, 3.4, 3.5, 3.6',\n+                 'Ruby',\n+                 'Scala',\n+                 'Shell',\n+                 'Swift',\n+                 'Tcl',\n+                 'TypeScript',\n+                 'Unknown',\n+                 'Vala',\n+                 'VisualBasic',\n+                 'm4'})","author":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4","name":"Pareksha Manchanda"},"reactions":[],"createdAt":"2018-07-23T09:14:24Z","lastEditedAt":"2018-07-23T09:14:35Z","updatedAt":"2018-07-23T09:14:35Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNDM0NDA1OQ==","url":"https://github.com/coala/coala/pull/5656#discussion_r204344059","bodyText":"See coalib.bearlib.languages.__dict__ for one way to get them all\nBut manually listing them is also ok. The test will fail if someone forgets to add one.","diffHunk":"@@ -350,6 +351,17 @@ def get_all_bears_names():\n     return [bear.name for bear in get_all_bears()]\n \n \n+def get_all_languages():\n+    \"\"\"\n+    Get a ``list`` of all languages supported by coala, including\n+    ``Unknown`` language.\n+    \"\"\"\n+    return Languages([\n+        language_file[: -3] for language_file in\n+        os.listdir('coalib/bearlib/languages/definitions/')","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-07-23T09:53:53Z","lastEditedAt":null,"updatedAt":"2018-07-23T09:53:53Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNDM0NDM5MQ==","url":"https://github.com/coala/coala/pull/5656#discussion_r204344391","bodyText":"a count comparson sounds good.","diffHunk":"@@ -422,3 +424,38 @@ def test_get_all_bears_names(self):\n                  'TestDepBearAA',\n                  'AspectTestBear',\n                  'TestDepBearDependsAAndAA'})\n+\n+    def test_get_all_languages(self):\n+        with bear_test_module():\n+            languages = get_all_languages()\n+            assert isinstance(languages, tuple)\n+            self.assertSetEqual(\n+                {str(language) for language in languages},\n+                {'C',\n+                 'C#',\n+                 'CPP',\n+                 'CSS',\n+                 'Fortran',\n+                 'Golang',\n+                 'Hypertext Markup Language 2.0, 3.2, 4.0, 4.1, 5, 5.1',\n+                 'Java',\n+                 'JavaScript',\n+                 'JavaServer Pages',\n+                 'Jinja2',\n+                 'Markdown',\n+                 'Matlab',\n+                 'ObjectiveC',\n+                 'PHP',\n+                 'PLSQL',\n+                 'PowerShell',\n+                 'Python 2.7, 3.3, 3.4, 3.5, 3.6',\n+                 'Ruby',\n+                 'Scala',\n+                 'Shell',\n+                 'Swift',\n+                 'Tcl',\n+                 'TypeScript',\n+                 'Unknown',\n+                 'Vala',\n+                 'VisualBasic',\n+                 'm4'})","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNjgyNDgyMg==","createdAt":"2018-07-23T10:12:57Z","content":"THUMBS_UP","user":{"login":"pareksha","name":"Pareksha Manchanda"}}],"createdAt":"2018-07-23T09:55:15Z","lastEditedAt":null,"updatedAt":"2018-07-23T09:55:15Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNDM1OTUxNw==","url":"https://github.com/coala/coala/pull/5656#discussion_r204359517","bodyText":"Unknown was already imported, didn't see at first, removing this extra import","diffHunk":"@@ -17,17 +17,22 @@\n from .definitions.Java import Java\n from .definitions.JavaScript import JavaScript\n from .definitions.JSP import JSP\n+from .definitions.m4 import m4\n from .definitions.Matlab import Matlab\n from .definitions.Markdown import Markdown\n from .definitions.ObjectiveC import ObjectiveC\n from .definitions.PHP import PHP\n from .definitions.PLSQL import PLSQL\n+from .definitions.PowerShell import PowerShell\n from .definitions.Python import Python\n from .definitions.Ruby import Ruby\n from .definitions.Scala import Scala\n from .definitions.Swift import Swift\n+from .definitions.Tcl import Tcl\n from .definitions.Vala import Vala\n from .definitions.TypeScript import TypeScript\n+from .definitions.Unknown import Unknown","author":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4","name":"Pareksha Manchanda"},"reactions":[],"createdAt":"2018-07-23T10:56:44Z","lastEditedAt":null,"updatedAt":"2018-07-23T10:56:44Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNDM3MDcxNw==","url":"https://github.com/coala/coala/pull/5656#discussion_r204370717","bodyText":"with [key for key in coalib.bearlib.languages.definitions.__dict__], I was getting things like __file__, __spec__ and some other dunders so I added the if statement. If there's another more efficient way to do it, please let me know. :)","diffHunk":"@@ -350,6 +352,18 @@ def get_all_bears_names():\n     return [bear.name for bear in get_all_bears()]\n \n \n+def get_all_languages(include_unknown=False):\n+    \"\"\"\n+    Get a ``list`` of all languages supported by coala, including\n+    ``Unknown`` language.\n+    \"\"\"\n+    languages = [\n+        key for key in definitions.__dict__ if not key.startswith('__')]","author":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4","name":"Pareksha Manchanda"},"reactions":[],"createdAt":"2018-07-23T11:43:35Z","lastEditedAt":null,"updatedAt":"2018-07-23T11:43:35Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNDQ3MTkyMg==","url":"https://github.com/coala/coala/pull/5656#discussion_r204471922","bodyText":":Param:","diffHunk":"@@ -350,6 +352,18 @@ def get_all_bears_names():\n     return [bear.name for bear in get_all_bears()]\n \n \n+def get_all_languages(include_unknown=False):\n+    \"\"\"\n+    Get a ``list`` of all languages supported by coala, including\n+    ``Unknown`` language.","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-07-23T16:31:07Z","lastEditedAt":null,"updatedAt":"2018-07-23T16:31:07Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNDQ3MjA3MQ==","url":"https://github.com/coala/coala/pull/5656#discussion_r204472071","bodyText":"isinstance","diffHunk":"@@ -350,6 +352,18 @@ def get_all_bears_names():\n     return [bear.name for bear in get_all_bears()]\n \n \n+def get_all_languages(include_unknown=False):\n+    \"\"\"\n+    Get a ``list`` of all languages supported by coala, including\n+    ``Unknown`` language.\n+    \"\"\"\n+    languages = [\n+        key for key in definitions.__dict__ if not key.startswith('__')]","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-07-23T16:31:39Z","lastEditedAt":null,"updatedAt":"2018-07-23T16:31:39Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNDQ5NTIwNw==","url":"https://github.com/coala/coala/pull/5656#discussion_r204495207","bodyText":"It is ready","diffHunk":"@@ -157,6 +157,13 @@ class aspectsFixOnlyTestBear(Bear, aspects={\n     pass\n \n \n+class aspectsGeneralTestBear(Bear, aspects={","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNjg3MjE4OA==","createdAt":"2018-07-24T04:25:21Z","content":"THUMBS_UP","user":{"login":"pareksha","name":"Pareksha Manchanda"}}],"createdAt":"2018-07-23T17:45:25Z","lastEditedAt":null,"updatedAt":"2018-07-23T17:45:25Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNDYyNTg1OA==","url":"https://github.com/coala/coala/pull/5656#discussion_r204625858","bodyText":"Shifted LANGUAGE_NAMES and LANGUAGE_COUNT to TestUtilities.py as you did in  #5651.","diffHunk":"@@ -157,6 +157,13 @@ class aspectsFixOnlyTestBear(Bear, aspects={\n     pass\n \n \n+class aspectsGeneralTestBear(Bear, aspects={","author":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4","name":"Pareksha Manchanda"},"reactions":[],"createdAt":"2018-07-24T05:17:19Z","lastEditedAt":null,"updatedAt":"2018-07-24T05:17:19Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNDYyNTk3NQ==","url":"https://github.com/coala/coala/pull/5656#discussion_r204625975","bodyText":"Added :return: too :)","diffHunk":"@@ -350,6 +352,18 @@ def get_all_bears_names():\n     return [bear.name for bear in get_all_bears()]\n \n \n+def get_all_languages(include_unknown=False):\n+    \"\"\"\n+    Get a ``list`` of all languages supported by coala, including\n+    ``Unknown`` language.","author":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4","name":"Pareksha Manchanda"},"reactions":[],"createdAt":"2018-07-24T05:18:19Z","lastEditedAt":null,"updatedAt":"2018-07-24T05:18:19Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNDYyNjE4MA==","url":"https://github.com/coala/coala/pull/5656#discussion_r204626180","bodyText":"That helped a lot 👍","diffHunk":"@@ -350,6 +352,18 @@ def get_all_bears_names():\n     return [bear.name for bear in get_all_bears()]\n \n \n+def get_all_languages(include_unknown=False):\n+    \"\"\"\n+    Get a ``list`` of all languages supported by coala, including\n+    ``Unknown`` language.\n+    \"\"\"\n+    languages = [\n+        key for key in definitions.__dict__ if not key.startswith('__')]","author":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4","name":"Pareksha Manchanda"},"reactions":[],"createdAt":"2018-07-24T05:18:51Z","lastEditedAt":null,"updatedAt":"2018-07-24T05:18:51Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNDYzMDg0Nw==","url":"https://github.com/coala/coala/pull/5656#discussion_r204630847","bodyText":"This Bear needs to be a separate module in our tests/test_bears/ directory","diffHunk":"@@ -157,6 +157,13 @@ class aspectsFixOnlyTestBear(Bear, aspects={\n     pass\n \n \n+class aspectsGeneralTestBear(Bear, aspects={","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-07-24T05:53:40Z","lastEditedAt":null,"updatedAt":"2018-07-24T05:53:40Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNDY2ODY3Ng==","url":"https://github.com/coala/coala/pull/5656#discussion_r204668676","bodyText":"Create constant","diffHunk":"@@ -187,5 +187,5 @@ def test_show_language_bears_output_file(self):\n         os.remove('bears.json')\n \n         self.assertEqual(retval, 0)\n-        self.assertEqual(len(data['bears']), 2)\n+        self.assertEqual(len(data['bears']), 3)","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-07-24T08:35:55Z","lastEditedAt":null,"updatedAt":"2018-07-24T08:35:55Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNDY3ODI1OQ==","url":"https://github.com/coala/coala/pull/5656#discussion_r204678259","bodyText":"JAVA_BEARS_CONSTANT = 3 as a module level constant?","diffHunk":"@@ -187,5 +187,5 @@ def test_show_language_bears_output_file(self):\n         os.remove('bears.json')\n \n         self.assertEqual(retval, 0)\n-        self.assertEqual(len(data['bears']), 2)\n+        self.assertEqual(len(data['bears']), 3)","author":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4","name":"Pareksha Manchanda"},"reactions":[],"createdAt":"2018-07-24T09:06:20Z","lastEditedAt":null,"updatedAt":"2018-07-24T09:06:20Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNDc1NzA5OA==","url":"https://github.com/coala/coala/pull/5656#discussion_r204757098","bodyText":"Create a constant , derived from the other constants","diffHunk":"@@ -186,8 +186,8 @@ def test_show_language_bears(self, debug=False):\n             retval, stdout, stderr = execute_coala(\n                 coala.main, 'coala', '-B', '-l', 'java', '-I', debug=debug)\n             self.assertEqual(retval, 0)\n-            # 2 bears plus 1 line holding the closing colour escape sequence.\n-            self.assertEqual(len(stdout.splitlines()), 3)\n+            # 3 bears plus 1 line holding the closing colour escape sequence.\n+            self.assertEqual(len(stdout.splitlines()), 4)","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-07-24T13:35:45Z","lastEditedAt":null,"updatedAt":"2018-07-24T13:35:45Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNDc1NzE3Nw==","url":"https://github.com/coala/coala/pull/5656#discussion_r204757177","bodyText":"As above","diffHunk":"@@ -16,8 +16,8 @@ def test_filter_by_language_c(self):\n             retval, stdout, stderr = execute_coala(\n                 coala.main, 'coala', '-B', '--filter-by', 'language', 'c')\n             self.assertEqual(retval, 0)\n-            # 1 bear plus 1 line holding the closing colour escape sequence.\n-            self.assertEqual(len(stdout.strip().splitlines()), 2)\n+            # 2 bears plus 1 line holding the closing colour escape sequence.\n+            self.assertEqual(len(stdout.strip().splitlines()), 3)","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-07-24T13:35:58Z","lastEditedAt":null,"updatedAt":"2018-07-24T13:35:58Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNDc1Nzg1NA==","url":"https://github.com/coala/coala/pull/5656#discussion_r204757854","bodyText":"@MacBox7 this is unsorted?\nWe need to apply a sort here I guess otherwise these will jiggle around randomly","diffHunk":"@@ -466,9 +466,9 @@ def test_get_filtered_bears(self):\n             local_bears, global_bears = get_filtered_bears(","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-07-24T13:37:53Z","lastEditedAt":null,"updatedAt":"2018-07-24T13:37:53Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNDc3Mzg3OQ==","url":"https://github.com/coala/coala/pull/5656#discussion_r204773879","bodyText":"Either we can sort the output of get_filtered_bears or we can provide a utility in TestUtilities.py. Which one do you think would be best?","diffHunk":"@@ -466,9 +466,9 @@ def test_get_filtered_bears(self):\n             local_bears, global_bears = get_filtered_bears(","author":{"login":"MacBox7","avatarUrl":"https://avatars0.githubusercontent.com/u/15063552?v=4","name":"Ankit Joshi"},"reactions":[],"createdAt":"2018-07-24T14:16:55Z","lastEditedAt":null,"updatedAt":"2018-07-24T14:16:55Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNDg5ODQ4Nw==","url":"https://github.com/coala/coala/pull/5656#discussion_r204898487","bodyText":"Utility in coalib , used here in tests","diffHunk":"@@ -466,9 +466,9 @@ def test_get_filtered_bears(self):\n             local_bears, global_bears = get_filtered_bears(","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-07-24T20:23:43Z","lastEditedAt":null,"updatedAt":"2018-07-24T20:23:43Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNDk3NjM3Mg==","url":"https://github.com/coala/coala/pull/5656#discussion_r204976372","bodyText":"Will it be a part of this PR?","diffHunk":"@@ -466,9 +466,9 @@ def test_get_filtered_bears(self):\n             local_bears, global_bears = get_filtered_bears(","author":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4","name":"Pareksha Manchanda"},"reactions":[],"createdAt":"2018-07-25T04:11:58Z","lastEditedAt":null,"updatedAt":"2018-07-25T04:11:58Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNTM5OTAwOA==","url":"https://github.com/coala/coala/pull/5656#discussion_r205399008","bodyText":"Why not assert the instances of all three bears.","diffHunk":"@@ -470,9 +470,9 @@ def test_get_filtered_bears(self):\n         local_bears['cli'] = _sort_bears(local_bears['cli'])\n         global_bears['cli'] = _sort_bears(global_bears['cli'])\n \n-        self.assertEqual(len(local_bears['cli']), 2)\n-        self.assertEqual(str(local_bears['cli'][0]),\n-                         \"<class 'JavaTestBear.JavaTestBear'>\")\n+        self.assertEqual(len(local_bears['cli']), 3)\n         self.assertEqual(str(local_bears['cli'][1]),","author":{"login":"MacBox7","avatarUrl":"https://avatars0.githubusercontent.com/u/15063552?v=4","name":"Ankit Joshi"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzAxNTAyMw==","createdAt":"2018-07-26T10:45:40Z","content":"THUMBS_UP","user":{"login":"pareksha","name":"Pareksha Manchanda"}}],"createdAt":"2018-07-26T09:59:01Z","lastEditedAt":null,"updatedAt":"2018-07-26T09:59:01Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1532274421000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5660","number":5660,"title":"test-requirements.txt: Moban Sync","body":"Sync with mobans template.\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":4,"createdAt":"2018-07-22T13:58:31Z","updatedAt":"2018-07-22T15:47:01Z","closedAt":"2018-07-22T15:46:48Z","state":"merged","user":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4"},"owner":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4"},"labels":[{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5660","comments":[]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1534985252000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5661","number":5661,"title":"changes ArgParser to ArgumentParser in doc strings","body":"Fixes #4188\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!\nFor issue #4188 . I had a earlier PR #5649 but don't know how to change commit messages so closing that.","comments":3,"createdAt":"2018-07-23T06:27:31Z","updatedAt":"2018-08-23T00:47:32Z","closedAt":null,"state":"open","user":{"login":"frunkad","avatarUrl":"https://avatars2.githubusercontent.com/u/33373582?v=4"},"owner":{"login":"frunkad","avatarUrl":"https://avatars2.githubusercontent.com/u/33373582?v=4"},"labels":[{"name":"process/wip","color":"fbca04"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5661","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNTk1ODkwNg==","url":"https://github.com/coala/coala/pull/5661#discussion_r205958906","bodyText":"bad indentation","diffHunk":"@@ -469,8 +469,8 @@ def gather_configuration(acquire_settings,\n     :param log_printer:      The log printer to use for logging. The log level\n                              will be adjusted to the one given by the section.\n     :param arg_list:         CLI args to use\n-    :param arg_parser:       Instance of ArgParser that is used to parse\n-                             none-setting arguments.\n+    :param arg_parser:       Instance of argparse.ArgumentParser that is used\n+                            to parse none-setting arguments.","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-07-29T02:28:49Z","lastEditedAt":null,"updatedAt":"2018-07-29T02:28:49Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQwODYzMDY5MA==","url":"https://github.com/coala/coala/pull/5661#issuecomment-408630690","bodyText":"@jayvdb done!","diffHunk":null,"author":{"login":"frunkad","avatarUrl":"https://avatars2.githubusercontent.com/u/33373582?v=4","name":"Darshan Baid"},"createdAt":"2018-07-28T19:43:27Z","lastEditedAt":null,"updatedAt":"2018-07-28T19:43:27Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQwODY4OTM2Mg==","url":"https://github.com/coala/coala/pull/5661#issuecomment-408689362","bodyText":"Sorry missed that! Now done @jayvdb","diffHunk":null,"author":{"login":"frunkad","avatarUrl":"https://avatars2.githubusercontent.com/u/33373582?v=4","name":"Darshan Baid"},"createdAt":"2018-07-29T16:33:07Z","lastEditedAt":null,"updatedAt":"2018-07-29T16:33:07Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQwOTQzMzg1OA==","url":"https://github.com/coala/coala/pull/5661#issuecomment-409433858","bodyText":"#5661 (review)\nnot done","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-01T03:01:20Z","lastEditedAt":null,"updatedAt":"2018-08-01T03:01:20Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1532585253000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5662","number":5662,"title":"Document unsorted bear lists","body":"Fixes #5654\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":3,"createdAt":"2018-07-23T10:44:46Z","updatedAt":"2018-07-26T06:07:33Z","closedAt":"2018-07-26T06:07:33Z","state":"merged","user":{"login":"MacBox7","avatarUrl":"https://avatars0.githubusercontent.com/u/15063552?v=4"},"owner":{"login":"MacBox7","avatarUrl":"https://avatars0.githubusercontent.com/u/15063552?v=4"},"assignee":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"},{"name":"importance/high","color":"eb6420"},{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"00DE0F"},{"name":"type/bug","color":"e11d21"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5662","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNDM1Nzg3Mg==","url":"https://github.com/coala/coala/pull/5662#discussion_r204357872","bodyText":"We can sort down at this level.\nToo many things will change slightly, and perform badly, especially if a different sorting is needed higher up the stack.\nSorting needs to be done in the CLI layer where the desired use of the data is known.","diffHunk":"@@ -243,7 +243,8 @@ def collect_bears(bear_dirs, bear_globs, kinds, log_printer=None,\n                              'No bears matching \\'{}\\' were found. Make sure '\n                              'you have coala-bears installed or you have typed '\n                              'the name correctly.')\n-    return bears_found\n+    return tuple(map(lambda x: sorted(x, key=lambda y: y.__name__),","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-07-23T10:49:14Z","lastEditedAt":null,"updatedAt":"2018-07-23T10:49:14Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNTA1NzA1Mg==","url":"https://github.com/coala/coala/pull/5662#discussion_r205057052","bodyText":"it isnt populated with \"names\"; they a Bear objects?\nAnyway, you can get coverage by putting it to use at test_get_filtered_bears.\nIt is too basic a wrapper around sorted to need its own tests","diffHunk":"@@ -396,3 +396,12 @@ def test_get_all_bears_names(self):\n             self.assertSetEqual(\n                 set(names),\n                 set(TEST_BEAR_NAMES))\n+\n+    def test_bears_sorting(self):\n+        with bear_test_module():\n+            names = get_all_bears()","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-07-25T10:20:54Z","lastEditedAt":null,"updatedAt":"2018-07-25T10:20:54Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNTA1NzI1NA==","url":"https://github.com/coala/coala/pull/5662#discussion_r205057254","bodyText":"need to briefly describe the default sort order","diffHunk":"@@ -37,6 +37,18 @@ def _import_bears(file_path, kinds):\n             yield bear_class\n \n \n+def _sort_bears(bears, key=lambda x: x.name.lower(), reverse=False):\n+    \"\"\"\n+    Sort the bear list according to the key provided.\n+\n+    :param bears:           List of bears to be sorted.\n+    :param key:             Key using which comparison should take place.","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-07-25T10:21:36Z","lastEditedAt":null,"updatedAt":"2018-07-25T10:21:36Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNTMzMzAzMA==","url":"https://github.com/coala/coala/pull/5662#discussion_r205333030","bodyText":"ehh?.  please keep using a reusable constant in TestUtilities.","diffHunk":"@@ -387,12 +387,38 @@ def test_get_all_bears(self):\n                 assert issubclass(bear, Bear)\n             self.assertSetEqual(\n                 {b.name for b in bears},\n-                set(TEST_BEAR_NAMES))\n+                {'DependentBear',","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-07-26T05:10:14Z","lastEditedAt":null,"updatedAt":"2018-07-26T05:10:14Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1532827121000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5663","number":5663,"title":"setup.py: Require dev release of depman","body":"For short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":5,"createdAt":"2018-07-23T15:39:17Z","updatedAt":"2018-07-29T01:18:41Z","closedAt":"2018-07-29T01:18:40Z","state":"merged","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"process/pending review","color":"bfe5bf"},{"name":"size/M","color":"eb6420"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5663","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNDQ1ODI4Mg==","url":"https://github.com/coala/coala/pull/5663#discussion_r204458282","bodyText":"> will also work, and be more appropriate.  Still testing that","diffHunk":"@@ -127,6 +128,57 @@ def run(self):\n __dir__ = os.path.dirname(__file__)\n \n \n+def egg_name_to_requirement(name):\n+    name = name.strip()\n+    parts = name.split('-')\n+\n+    # The first part may be v or v0, which would be considered a version\n+    # if processed in the following loop.\n+    name_parts = [parts[0]]\n+    # Pre-releases may contain a '-' and be alpha only, so we must\n+    # parse from the second part to find the first version-like part.\n+    for part in parts[1:]:\n+        version = LooseVersion(part)\n+        version = version.version\n+        v_prefix = version[0] == 'v'\n+        if v_prefix:\n+            version = version[1:]\n+        if isinstance(version[0], int):\n+            break\n+        name_parts.append(part)\n+\n+    version_parts = parts[len(name_parts):]\n+\n+    if not version_parts:\n+        return name\n+\n+    name = '-'.join(name_parts)\n+\n+    version = LooseVersion('-'.join(version_parts))\n+\n+    # Assume that alpha, beta, pre, post & final releases\n+    # are in PyPi so setutools can find it.\n+    if not any(part == 'dev' for part in version.version):\n+        return name + '==' + version\n+\n+    # For development releases, which will not usually be PyPi,\n+    # setuptools will fail with `==` and `~=` as it will look for the\n+    # release in PyPi.\n+    # Decrement the first non-final version part, which should be in PyPi,\n+    # and use version specifier >= so that the installed package from VCS\n+    # will have a version acceptable to the requirement.\n+    for i, part in enumerate(version.version):\n+        if not isinstance(part, int):\n+            break\n+\n+    previous_final_version = version.version[0:i]\n+    previous_final_version[i - 1] -= 1\n+\n+    version = '.'.join(str(part) for part in previous_final_version)\n+\n+    return name + '>=' + version","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-07-23T16:01:40Z","lastEditedAt":null,"updatedAt":"2018-07-23T16:01:40Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNDQ2OTM5OA==","url":"https://github.com/coala/coala/pull/5663#discussion_r204469398","bodyText":"version is a LooseVersion object concatenation not possible.","diffHunk":"@@ -127,6 +128,57 @@ def run(self):\n __dir__ = os.path.dirname(__file__)\n \n \n+def egg_name_to_requirement(name):\n+    name = name.strip()\n+    parts = name.split('-')\n+\n+    # The first part may be v or v0, which would be considered a version\n+    # if processed in the following loop.\n+    name_parts = [parts[0]]\n+    # Pre-releases may contain a '-' and be alpha only, so we must\n+    # parse from the second part to find the first version-like part.\n+    for part in parts[1:]:\n+        version = LooseVersion(part)\n+        version = version.version\n+        v_prefix = version[0] == 'v'\n+        if v_prefix:\n+            version = version[1:]\n+        if isinstance(version[0], int):\n+            break\n+        name_parts.append(part)\n+\n+    version_parts = parts[len(name_parts):]\n+\n+    if not version_parts:\n+        return name\n+\n+    name = '-'.join(name_parts)\n+\n+    version = LooseVersion('-'.join(version_parts))\n+\n+    # Assume that alpha, beta, pre, post & final releases\n+    # are in PyPi so setutools can find it.\n+    if not any(part == 'dev' for part in version.version):\n+        return name + '==' + version","author":{"login":"MacBox7","avatarUrl":"https://avatars0.githubusercontent.com/u/15063552?v=4","name":"Ankit Joshi"},"createdAt":"2018-07-23T16:23:23Z","lastEditedAt":null,"updatedAt":"2018-07-23T16:23:23Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNDQ3MTk0Nw==","url":"https://github.com/coala/coala/pull/5663#discussion_r204471947","bodyText":"coala-utils-5.0.dev0 would result in negative version. Is this a possible scenario?","diffHunk":"@@ -127,6 +128,57 @@ def run(self):\n __dir__ = os.path.dirname(__file__)\n \n \n+def egg_name_to_requirement(name):\n+    name = name.strip()\n+    parts = name.split('-')\n+\n+    # The first part may be v or v0, which would be considered a version\n+    # if processed in the following loop.\n+    name_parts = [parts[0]]\n+    # Pre-releases may contain a '-' and be alpha only, so we must\n+    # parse from the second part to find the first version-like part.\n+    for part in parts[1:]:\n+        version = LooseVersion(part)\n+        version = version.version\n+        v_prefix = version[0] == 'v'\n+        if v_prefix:\n+            version = version[1:]\n+        if isinstance(version[0], int):\n+            break\n+        name_parts.append(part)\n+\n+    version_parts = parts[len(name_parts):]\n+\n+    if not version_parts:\n+        return name\n+\n+    name = '-'.join(name_parts)\n+\n+    version = LooseVersion('-'.join(version_parts))\n+\n+    # Assume that alpha, beta, pre, post & final releases\n+    # are in PyPi so setutools can find it.\n+    if not any(part == 'dev' for part in version.version):\n+        return name + '==' + version\n+\n+    # For development releases, which will not usually be PyPi,\n+    # setuptools will fail with `==` and `~=` as it will look for the\n+    # release in PyPi.\n+    # Decrement the first non-final version part, which should be in PyPi,\n+    # and use version specifier >= so that the installed package from VCS\n+    # will have a version acceptable to the requirement.\n+    for i, part in enumerate(version.version):\n+        if not isinstance(part, int):\n+            break\n+\n+    previous_final_version = version.version[0:i]\n+    previous_final_version[i - 1] -= 1","author":{"login":"MacBox7","avatarUrl":"https://avatars0.githubusercontent.com/u/15063552?v=4","name":"Ankit Joshi"},"createdAt":"2018-07-23T16:31:15Z","lastEditedAt":null,"updatedAt":"2018-07-23T16:31:15Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQwNzM1NzgyNw==","url":"https://github.com/coala/coala/pull/5663#issuecomment-407357827","bodyText":"test-requirements.txt isn't in sync with moban. Leading to failure.","diffHunk":null,"author":{"login":"MacBox7","avatarUrl":"https://avatars0.githubusercontent.com/u/15063552?v=4","name":"Ankit Joshi"},"createdAt":"2018-07-24T10:23:07Z","lastEditedAt":"2018-07-24T10:23:20Z","updatedAt":"2018-07-24T10:23:20Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQwODYyODEzOA==","url":"https://github.com/coala/coala/pull/5663#issuecomment-408628138","bodyText":"test-requirements.txt isnt in scope for this PR.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-07-28T18:55:06Z","lastEditedAt":null,"updatedAt":"2018-07-28T18:55:06Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1532581727000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5665","number":5665,"title":"ANURADHAJHA99","body":"For short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":0,"createdAt":"2018-07-24T21:08:37Z","updatedAt":"2018-07-26T05:08:47Z","closedAt":"2018-07-26T05:08:21Z","state":"closed","user":{"login":"ANURADHAJHA99","avatarUrl":"https://avatars2.githubusercontent.com/u/34815869?v=4"},"owner":{"login":"ANURADHAJHA99","avatarUrl":"https://avatars2.githubusercontent.com/u/34815869?v=4"},"labels":[{"name":"size/XS","color":"00DE0F"},{"name":"status/invalid","color":"000000"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5665","comments":[]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1533545769000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5666","number":5666,"title":"Profile_Bears: Add Profiling Interface doc","body":"Related to #565","comments":6,"createdAt":"2018-07-25T16:49:24Z","updatedAt":"2018-08-06T08:56:09Z","closedAt":"2018-08-06T08:55:41Z","state":"merged","user":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4"},"owner":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4"},"assignee":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4"},"labels":[{"name":"difficulty/medium","color":"0052cc"},{"name":"importance/low","color":"70E870"},{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"00DE0F"},{"name":"type/feature","color":"0052cc"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5666","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNTM4MjE1Ng==","url":"https://github.com/coala/coala/pull/5666#discussion_r205382156","bodyText":"shouldn't be there another newline here? Not sure if RST requires that","diffHunk":"@@ -0,0 +1,74 @@\n+Profile Bears\n+=============\n+\n+This document provide the overview of coala's Profiling Interface. The\n+Profiling Interface will provide an ability to Profile the Bear's code to\n+optimize its performance.\n+\n+The profiler will start by profiling the run() method of bears because it\n+consumes most of the bears time. So, this is part where bear writer will spend\n+time, as rest of the part like loading the files, collecting the settings,\n+etc. are done by coala itself.\n+\n+.. note::","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzAyNDkzNQ==","createdAt":"2018-07-26T14:00:42Z","content":"THUMBS_UP","user":{"login":"RaiVaibhav","name":"Vaibhav Rai"}}],"createdAt":"2018-07-26T09:05:43Z","lastEditedAt":null,"updatedAt":"2018-07-26T09:05:43Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNTM4MjI0OQ==","url":"https://github.com/coala/coala/pull/5666#discussion_r205382249","bodyText":"provides ;) --> https://www.gymglish.com/en/english-grammar/the-s-in-the-third-person-singular-form :D","diffHunk":"@@ -0,0 +1,74 @@\n+Profile Bears\n+=============\n+\n+This document provide the overview of coala's Profiling Interface. The","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-07-26T09:06:05Z","lastEditedAt":null,"updatedAt":"2018-07-26T09:06:05Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNTM4MjI4Ng==","url":"https://github.com/coala/coala/pull/5666#discussion_r205382286","bodyText":"an overview","diffHunk":"@@ -0,0 +1,74 @@\n+Profile Bears\n+=============\n+\n+This document provide the overview of coala's Profiling Interface. The","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-07-26T09:06:10Z","lastEditedAt":null,"updatedAt":"2018-07-26T09:06:10Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNTM4MjU0NQ==","url":"https://github.com/coala/coala/pull/5666#discussion_r205382545","bodyText":"I think plural sounds better:\nThe Profiling Interfaces provides abilities to Pprofile Bears code","diffHunk":"@@ -0,0 +1,74 @@\n+Profile Bears\n+=============\n+\n+This document provide the overview of coala's Profiling Interface. The\n+Profiling Interface will provide an ability to Profile the Bear's code to","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-07-26T09:06:51Z","lastEditedAt":null,"updatedAt":"2018-07-26T09:06:51Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNTM4MzY4OA==","url":"https://github.com/coala/coala/pull/5666#discussion_r205383688","bodyText":"You should omit the part \"consumes most the bears time\", that's an assumption that is usually satisfied for larger setups.\nAlso you actually describe the real reason below :)\n-->\nThe profiler will start by profiling the run() method of bears because it\nconsumes most of the bears time. So, this is the part where bear writers will spend time on ...","diffHunk":"@@ -0,0 +1,74 @@\n+Profile Bears\n+=============\n+\n+This document provide the overview of coala's Profiling Interface. The\n+Profiling Interface will provide an ability to Profile the Bear's code to\n+optimize its performance.\n+\n+The profiler will start by profiling the run() method of bears because it\n+consumes most of the bears time. So, this is part where bear writer will spend","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-07-26T09:10:08Z","lastEditedAt":null,"updatedAt":"2018-07-26T09:10:08Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNTM4Mzc1Mg==","url":"https://github.com/coala/coala/pull/5666#discussion_r205383752","bodyText":"writers","diffHunk":"@@ -0,0 +1,74 @@\n+Profile Bears\n+=============\n+\n+This document provide the overview of coala's Profiling Interface. The\n+Profiling Interface will provide an ability to Profile the Bear's code to\n+optimize its performance.\n+\n+The profiler will start by profiling the run() method of bears because it\n+consumes most of the bears time. So, this is part where bear writer will spend\n+time, as rest of the part like loading the files, collecting the settings,\n+etc. are done by coala itself.\n+\n+.. note::\n+    Enabliling both profiler and debugger on a bear at a same time will result\n+    into error.\n+\n+Bear writer will have the ability to directly dump the raw profile output","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-07-26T09:10:22Z","lastEditedAt":null,"updatedAt":"2018-07-26T09:10:22Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNTM4NDE1Mg==","url":"https://github.com/coala/coala/pull/5666#discussion_r205384152","bodyText":"Since this is an \"unspecified quantity\" of people you are referring two, you have to choices in fact:\n\nA bear writer\nBear writers","diffHunk":"@@ -0,0 +1,74 @@\n+Profile Bears\n+=============\n+\n+This document provide the overview of coala's Profiling Interface. The\n+Profiling Interface will provide an ability to Profile the Bear's code to\n+optimize its performance.\n+\n+The profiler will start by profiling the run() method of bears because it\n+consumes most of the bears time. So, this is part where bear writer will spend\n+time, as rest of the part like loading the files, collecting the settings,\n+etc. are done by coala itself.\n+\n+.. note::\n+    Enabliling both profiler and debugger on a bear at a same time will result\n+    into error.\n+\n+Bear writer will have the ability to directly dump the raw profile output","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-07-26T09:11:32Z","lastEditedAt":null,"updatedAt":"2018-07-26T09:11:32Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNTQ2Nzg4NA==","url":"https://github.com/coala/coala/pull/5666#discussion_r205467884","bodyText":"Both will work fine IMO.","diffHunk":"@@ -0,0 +1,74 @@\n+Profile Bears\n+=============\n+\n+This document provide the overview of coala's Profiling Interface. The\n+Profiling Interface will provide an ability to Profile the Bear's code to\n+optimize its performance.\n+\n+The profiler will start by profiling the run() method of bears because it\n+consumes most of the bears time. So, this is part where bear writer will spend\n+time, as rest of the part like loading the files, collecting the settings,\n+etc. are done by coala itself.\n+\n+.. note::","author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"reactions":[],"createdAt":"2018-07-26T14:00:26Z","lastEditedAt":null,"updatedAt":"2018-07-26T14:00:26Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNjA3NjU4Mw==","url":"https://github.com/coala/coala/pull/5666#discussion_r206076583","bodyText":"an abilities","diffHunk":"@@ -0,0 +1,75 @@\n+Profile Bears\n+=============\n+\n+This document provides an overview of coala's Profiling Interface. The\n+Profiling Interface provides an abilities to profile Bear code to optimize its","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-07-30T09:59:16Z","lastEditedAt":null,"updatedAt":"2018-07-30T09:59:16Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNjA3Njg4Mg==","url":"https://github.com/coala/coala/pull/5666#discussion_r206076882","bodyText":"I guess it won't work if you enablelel the profiler, but it will if you are Enabling it ;P","diffHunk":"@@ -0,0 +1,75 @@\n+Profile Bears\n+=============\n+\n+This document provides an overview of coala's Profiling Interface. The\n+Profiling Interface provides an abilities to profile Bear code to optimize its\n+performance.\n+\n+The profiler will start by profiling the run() method of bears because this is\n+the part where bear writers will spend time on, as rest of the part like loading\n+the files, collecting the settings, etc. are done by coala itself.\n+\n+.. note::\n+\n+    Enabliling both profiler and debugger on a bear at a same time will result","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-07-30T10:00:21Z","lastEditedAt":null,"updatedAt":"2018-07-30T10:00:21Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNjA3Njk0OQ==","url":"https://github.com/coala/coala/pull/5666#discussion_r206076949","bodyText":"at a the same time","diffHunk":"@@ -0,0 +1,75 @@\n+Profile Bears\n+=============\n+\n+This document provides an overview of coala's Profiling Interface. The\n+Profiling Interface provides an abilities to profile Bear code to optimize its\n+performance.\n+\n+The profiler will start by profiling the run() method of bears because this is\n+the part where bear writers will spend time on, as rest of the part like loading\n+the files, collecting the settings, etc. are done by coala itself.\n+\n+.. note::\n+\n+    Enabliling both profiler and debugger on a bear at a same time will result","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-07-30T10:00:34Z","lastEditedAt":null,"updatedAt":"2018-07-30T10:00:34Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNjA5NTU3MQ==","url":"https://github.com/coala/coala/pull/5666#discussion_r206095571","bodyText":"into an error.","diffHunk":"@@ -0,0 +1,75 @@\n+Profile Bears\n+=============\n+\n+This document provides an overview of coala's Profiling Interface. The\n+Profiling Interface provides an abilities to profile Bear code to optimize its\n+performance.\n+\n+The profiler will start by profiling the run() method of bears because this is\n+the part where bear writers will spend time on, as rest of the part like loading\n+the files, collecting the settings, etc. are done by coala itself.\n+\n+.. note::\n+\n+    Enabliling both profiler and debugger on a bear at a same time will result\n+    into error.","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-07-30T11:13:52Z","lastEditedAt":null,"updatedAt":"2018-07-30T11:13:52Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNjA5NTY3NA==","url":"https://github.com/coala/coala/pull/5666#discussion_r206095674","bodyText":"(binary output)\n\nIs that relevant?","diffHunk":"@@ -0,0 +1,75 @@\n+Profile Bears\n+=============\n+\n+This document provides an overview of coala's Profiling Interface. The\n+Profiling Interface provides an abilities to profile Bear code to optimize its\n+performance.\n+\n+The profiler will start by profiling the run() method of bears because this is\n+the part where bear writers will spend time on, as rest of the part like loading\n+the files, collecting the settings, etc. are done by coala itself.\n+\n+.. note::\n+\n+    Enabliling both profiler and debugger on a bear at a same time will result\n+    into error.\n+\n+Bear writers will have the ability to directly dump the raw profile output\n+(binary output) either on current working directory or to a specified directory","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-07-30T11:14:20Z","lastEditedAt":null,"updatedAt":"2018-07-30T11:14:20Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNjA5NTgzNA==","url":"https://github.com/coala/coala/pull/5666#discussion_r206095834","bodyText":"Typo ;)","diffHunk":"@@ -0,0 +1,75 @@\n+Profile Bears\n+=============\n+\n+This document provides an overview of coala's Profiling Interface. The\n+Profiling Interface provides an abilities to profile Bear code to optimize its\n+performance.\n+\n+The profiler will start by profiling the run() method of bears because this is\n+the part where bear writers will spend time on, as rest of the part like loading\n+the files, collecting the settings, etc. are done by coala itself.\n+\n+.. note::\n+\n+    Enabliling both profiler and debugger on a bear at a same time will result\n+    into error.\n+\n+Bear writers will have the ability to directly dump the raw profile output\n+(binary output) either on current working directory or to a specified directory\n+name, which can be further used for examination of profiler stats with the help\n+of different modules like ``pstats`` or ``snakeviz``.\n+\n+``--profile`` or ``profile`` (using coafile) is the main argument to enable\n+profiling. It accepts an additional parameter directory name or directory path\n+where profiled files will be dumped, if ``True`` is provided profiled files will\n+be saved to current working directory. If specified directory does not exists it\n+will create one and if path specified is already a file path then it will throw\n+``FileExitsError``.","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-07-30T11:15:15Z","lastEditedAt":null,"updatedAt":"2018-07-30T11:15:15Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNjA5NjMxNA==","url":"https://github.com/coala/coala/pull/5666#discussion_r206096314","bodyText":"I guess all this belongs into the Usage section. It should be maybe stripped as well since you describe already how to enable the profiler below. But the FileExistsError is important, that could go directly below the Usage paragraph, describing how paths are treated.","diffHunk":"@@ -0,0 +1,75 @@\n+Profile Bears\n+=============\n+\n+This document provides an overview of coala's Profiling Interface. The\n+Profiling Interface provides an abilities to profile Bear code to optimize its\n+performance.\n+\n+The profiler will start by profiling the run() method of bears because this is\n+the part where bear writers will spend time on, as rest of the part like loading\n+the files, collecting the settings, etc. are done by coala itself.\n+\n+.. note::\n+\n+    Enabliling both profiler and debugger on a bear at a same time will result\n+    into error.\n+\n+Bear writers will have the ability to directly dump the raw profile output\n+(binary output) either on current working directory or to a specified directory\n+name, which can be further used for examination of profiler stats with the help\n+of different modules like ``pstats`` or ``snakeviz``.\n+\n+``--profile`` or ``profile`` (using coafile) is the main argument to enable\n+profiling. It accepts an additional parameter directory name or directory path\n+where profiled files will be dumped, if ``True`` is provided profiled files will\n+be saved to current working directory. If specified directory does not exists it\n+will create one and if path specified is already a file path then it will throw\n+``FileExitsError``.","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-07-30T11:17:19Z","lastEditedAt":null,"updatedAt":"2018-07-30T11:17:19Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNjA5NjQ4Nw==","url":"https://github.com/coala/coala/pull/5666#discussion_r206096487","bodyText":"should be enclosed in backticks ;)\n``{section.name}...prof``","diffHunk":"@@ -0,0 +1,75 @@\n+Profile Bears\n+=============\n+\n+This document provides an overview of coala's Profiling Interface. The\n+Profiling Interface provides an abilities to profile Bear code to optimize its\n+performance.\n+\n+The profiler will start by profiling the run() method of bears because this is\n+the part where bear writers will spend time on, as rest of the part like loading\n+the files, collecting the settings, etc. are done by coala itself.\n+\n+.. note::\n+\n+    Enabliling both profiler and debugger on a bear at a same time will result\n+    into error.\n+\n+Bear writers will have the ability to directly dump the raw profile output\n+(binary output) either on current working directory or to a specified directory\n+name, which can be further used for examination of profiler stats with the help\n+of different modules like ``pstats`` or ``snakeviz``.\n+\n+``--profile`` or ``profile`` (using coafile) is the main argument to enable\n+profiling. It accepts an additional parameter directory name or directory path\n+where profiled files will be dumped, if ``True`` is provided profiled files will\n+be saved to current working directory. If specified directory does not exists it\n+will create one and if path specified is already a file path then it will throw\n+``FileExitsError``.\n+\n+.. note::\n+\n+    All bears (even implicit dependency bears) in a section will be profiled.\n+    Profiled files will have a name format {section.name}_{bear.name}.prof.","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-07-30T11:18:00Z","lastEditedAt":null,"updatedAt":"2018-07-30T11:18:00Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNjEwMzYzNQ==","url":"https://github.com/coala/coala/pull/5666#discussion_r206103635","bodyText":"i.e. ?\nThose sentences do not connect very well :)","diffHunk":"@@ -0,0 +1,75 @@\n+Profile Bears\n+=============\n+\n+This document provides an overview of coala's Profiling Interface. The\n+Profiling Interface provides an abilities to profile Bear code to optimize its\n+performance.\n+\n+The profiler will start by profiling the run() method of bears because this is\n+the part where bear writers will spend time on, as rest of the part like loading\n+the files, collecting the settings, etc. are done by coala itself.\n+\n+.. note::\n+\n+    Enabliling both profiler and debugger on a bear at a same time will result\n+    into error.\n+\n+Bear writers will have the ability to directly dump the raw profile output\n+(binary output) either on current working directory or to a specified directory\n+name, which can be further used for examination of profiler stats with the help\n+of different modules like ``pstats`` or ``snakeviz``.\n+\n+``--profile`` or ``profile`` (using coafile) is the main argument to enable\n+profiling. It accepts an additional parameter directory name or directory path\n+where profiled files will be dumped, if ``True`` is provided profiled files will\n+be saved to current working directory. If specified directory does not exists it\n+will create one and if path specified is already a file path then it will throw\n+``FileExitsError``.\n+\n+.. note::\n+\n+    All bears (even implicit dependency bears) in a section will be profiled.\n+    Profiled files will have a name format {section.name}_{bear.name}.prof.\n+\n+Usage\n+-----\n+\n+Command Line Interface\n+^^^^^^^^^^^^^^^^^^^^^^\n+\n+Bear writers can invoke the profiler with the ``--profile`` argument, i.e.\n+\n+To dump profiled files in current working directory.","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-07-30T11:48:59Z","lastEditedAt":null,"updatedAt":"2018-07-30T11:48:59Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNjEwMzc5Nw==","url":"https://github.com/coala/coala/pull/5666#discussion_r206103797","bodyText":"to dumped profiled files to a specified directory: (<-- note the colon)","diffHunk":"@@ -0,0 +1,75 @@\n+Profile Bears\n+=============\n+\n+This document provides an overview of coala's Profiling Interface. The\n+Profiling Interface provides an abilities to profile Bear code to optimize its\n+performance.\n+\n+The profiler will start by profiling the run() method of bears because this is\n+the part where bear writers will spend time on, as rest of the part like loading\n+the files, collecting the settings, etc. are done by coala itself.\n+\n+.. note::\n+\n+    Enabliling both profiler and debugger on a bear at a same time will result\n+    into error.\n+\n+Bear writers will have the ability to directly dump the raw profile output\n+(binary output) either on current working directory or to a specified directory\n+name, which can be further used for examination of profiler stats with the help\n+of different modules like ``pstats`` or ``snakeviz``.\n+\n+``--profile`` or ``profile`` (using coafile) is the main argument to enable\n+profiling. It accepts an additional parameter directory name or directory path\n+where profiled files will be dumped, if ``True`` is provided profiled files will\n+be saved to current working directory. If specified directory does not exists it\n+will create one and if path specified is already a file path then it will throw\n+``FileExitsError``.\n+\n+.. note::\n+\n+    All bears (even implicit dependency bears) in a section will be profiled.\n+    Profiled files will have a name format {section.name}_{bear.name}.prof.\n+\n+Usage\n+-----\n+\n+Command Line Interface\n+^^^^^^^^^^^^^^^^^^^^^^\n+\n+Bear writers can invoke the profiler with the ``--profile`` argument, i.e.\n+\n+To dump profiled files in current working directory.\n+\n+.. code:: shell\n+\n+    $coala -b PEP8Bear,PyUnusedCodeBear -f <filename> --profile\n+\n+Or to dumped profiled files to a specified directory.","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-07-30T11:49:37Z","lastEditedAt":null,"updatedAt":"2018-07-30T11:49:37Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNjEwMzk0Nw==","url":"https://github.com/coala/coala/pull/5666#discussion_r206103947","bodyText":"choose one, dirname or dirpath, as well as write it completely lower-case to match the same style as <filename>","diffHunk":"@@ -0,0 +1,75 @@\n+Profile Bears\n+=============\n+\n+This document provides an overview of coala's Profiling Interface. The\n+Profiling Interface provides an abilities to profile Bear code to optimize its\n+performance.\n+\n+The profiler will start by profiling the run() method of bears because this is\n+the part where bear writers will spend time on, as rest of the part like loading\n+the files, collecting the settings, etc. are done by coala itself.\n+\n+.. note::\n+\n+    Enabliling both profiler and debugger on a bear at a same time will result\n+    into error.\n+\n+Bear writers will have the ability to directly dump the raw profile output\n+(binary output) either on current working directory or to a specified directory\n+name, which can be further used for examination of profiler stats with the help\n+of different modules like ``pstats`` or ``snakeviz``.\n+\n+``--profile`` or ``profile`` (using coafile) is the main argument to enable\n+profiling. It accepts an additional parameter directory name or directory path\n+where profiled files will be dumped, if ``True`` is provided profiled files will\n+be saved to current working directory. If specified directory does not exists it\n+will create one and if path specified is already a file path then it will throw\n+``FileExitsError``.\n+\n+.. note::\n+\n+    All bears (even implicit dependency bears) in a section will be profiled.\n+    Profiled files will have a name format {section.name}_{bear.name}.prof.\n+\n+Usage\n+-----\n+\n+Command Line Interface\n+^^^^^^^^^^^^^^^^^^^^^^\n+\n+Bear writers can invoke the profiler with the ``--profile`` argument, i.e.\n+\n+To dump profiled files in current working directory.\n+\n+.. code:: shell\n+\n+    $coala -b PEP8Bear,PyUnusedCodeBear -f <filename> --profile\n+\n+Or to dumped profiled files to a specified directory.\n+\n+.. code:: shell\n+\n+    $coala -b PEP8Bear,MypyBear -f <filename> --profile <Dirname/Dirpath>","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-07-30T11:50:10Z","lastEditedAt":null,"updatedAt":"2018-07-30T11:50:10Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNjEwNDA3Nw==","url":"https://github.com/coala/coala/pull/5666#discussion_r206104077","bodyText":"I would add \"as well\":\n\nUsers can specify to profile bears using a .coafile as well:","diffHunk":"@@ -0,0 +1,75 @@\n+Profile Bears\n+=============\n+\n+This document provides an overview of coala's Profiling Interface. The\n+Profiling Interface provides an abilities to profile Bear code to optimize its\n+performance.\n+\n+The profiler will start by profiling the run() method of bears because this is\n+the part where bear writers will spend time on, as rest of the part like loading\n+the files, collecting the settings, etc. are done by coala itself.\n+\n+.. note::\n+\n+    Enabliling both profiler and debugger on a bear at a same time will result\n+    into error.\n+\n+Bear writers will have the ability to directly dump the raw profile output\n+(binary output) either on current working directory or to a specified directory\n+name, which can be further used for examination of profiler stats with the help\n+of different modules like ``pstats`` or ``snakeviz``.\n+\n+``--profile`` or ``profile`` (using coafile) is the main argument to enable\n+profiling. It accepts an additional parameter directory name or directory path\n+where profiled files will be dumped, if ``True`` is provided profiled files will\n+be saved to current working directory. If specified directory does not exists it\n+will create one and if path specified is already a file path then it will throw\n+``FileExitsError``.\n+\n+.. note::\n+\n+    All bears (even implicit dependency bears) in a section will be profiled.\n+    Profiled files will have a name format {section.name}_{bear.name}.prof.\n+\n+Usage\n+-----\n+\n+Command Line Interface\n+^^^^^^^^^^^^^^^^^^^^^^\n+\n+Bear writers can invoke the profiler with the ``--profile`` argument, i.e.\n+\n+To dump profiled files in current working directory.\n+\n+.. code:: shell\n+\n+    $coala -b PEP8Bear,PyUnusedCodeBear -f <filename> --profile\n+\n+Or to dumped profiled files to a specified directory.\n+\n+.. code:: shell\n+\n+    $coala -b PEP8Bear,MypyBear -f <filename> --profile <Dirname/Dirpath>\n+\n+coafile\n+^^^^^^^\n+\n+Users can specify to profile bears using a ``.coafile``:","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-07-30T11:50:42Z","lastEditedAt":null,"updatedAt":"2018-07-30T11:50:42Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNjEwNDEyNA==","url":"https://github.com/coala/coala/pull/5666#discussion_r206104124","bodyText":"Same here, sentences do not connect","diffHunk":"@@ -0,0 +1,75 @@\n+Profile Bears\n+=============\n+\n+This document provides an overview of coala's Profiling Interface. The\n+Profiling Interface provides an abilities to profile Bear code to optimize its\n+performance.\n+\n+The profiler will start by profiling the run() method of bears because this is\n+the part where bear writers will spend time on, as rest of the part like loading\n+the files, collecting the settings, etc. are done by coala itself.\n+\n+.. note::\n+\n+    Enabliling both profiler and debugger on a bear at a same time will result\n+    into error.\n+\n+Bear writers will have the ability to directly dump the raw profile output\n+(binary output) either on current working directory or to a specified directory\n+name, which can be further used for examination of profiler stats with the help\n+of different modules like ``pstats`` or ``snakeviz``.\n+\n+``--profile`` or ``profile`` (using coafile) is the main argument to enable\n+profiling. It accepts an additional parameter directory name or directory path\n+where profiled files will be dumped, if ``True`` is provided profiled files will\n+be saved to current working directory. If specified directory does not exists it\n+will create one and if path specified is already a file path then it will throw\n+``FileExitsError``.\n+\n+.. note::\n+\n+    All bears (even implicit dependency bears) in a section will be profiled.\n+    Profiled files will have a name format {section.name}_{bear.name}.prof.\n+\n+Usage\n+-----\n+\n+Command Line Interface\n+^^^^^^^^^^^^^^^^^^^^^^\n+\n+Bear writers can invoke the profiler with the ``--profile`` argument, i.e.\n+\n+To dump profiled files in current working directory.\n+\n+.. code:: shell\n+\n+    $coala -b PEP8Bear,PyUnusedCodeBear -f <filename> --profile\n+\n+Or to dumped profiled files to a specified directory.\n+\n+.. code:: shell\n+\n+    $coala -b PEP8Bear,MypyBear -f <filename> --profile <Dirname/Dirpath>\n+\n+coafile\n+^^^^^^^\n+\n+Users can specify to profile bears using a ``.coafile``:\n+\n+To dump profiled files in current working directory.","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-07-30T11:50:52Z","lastEditedAt":null,"updatedAt":"2018-07-30T11:50:52Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNjEwNDE5NQ==","url":"https://github.com/coala/coala/pull/5666#discussion_r206104195","bodyText":"dumped profiled ...: (<-- note the colon again)","diffHunk":"@@ -0,0 +1,75 @@\n+Profile Bears\n+=============\n+\n+This document provides an overview of coala's Profiling Interface. The\n+Profiling Interface provides an abilities to profile Bear code to optimize its\n+performance.\n+\n+The profiler will start by profiling the run() method of bears because this is\n+the part where bear writers will spend time on, as rest of the part like loading\n+the files, collecting the settings, etc. are done by coala itself.\n+\n+.. note::\n+\n+    Enabliling both profiler and debugger on a bear at a same time will result\n+    into error.\n+\n+Bear writers will have the ability to directly dump the raw profile output\n+(binary output) either on current working directory or to a specified directory\n+name, which can be further used for examination of profiler stats with the help\n+of different modules like ``pstats`` or ``snakeviz``.\n+\n+``--profile`` or ``profile`` (using coafile) is the main argument to enable\n+profiling. It accepts an additional parameter directory name or directory path\n+where profiled files will be dumped, if ``True`` is provided profiled files will\n+be saved to current working directory. If specified directory does not exists it\n+will create one and if path specified is already a file path then it will throw\n+``FileExitsError``.\n+\n+.. note::\n+\n+    All bears (even implicit dependency bears) in a section will be profiled.\n+    Profiled files will have a name format {section.name}_{bear.name}.prof.\n+\n+Usage\n+-----\n+\n+Command Line Interface\n+^^^^^^^^^^^^^^^^^^^^^^\n+\n+Bear writers can invoke the profiler with the ``--profile`` argument, i.e.\n+\n+To dump profiled files in current working directory.\n+\n+.. code:: shell\n+\n+    $coala -b PEP8Bear,PyUnusedCodeBear -f <filename> --profile\n+\n+Or to dumped profiled files to a specified directory.\n+\n+.. code:: shell\n+\n+    $coala -b PEP8Bear,MypyBear -f <filename> --profile <Dirname/Dirpath>\n+\n+coafile\n+^^^^^^^\n+\n+Users can specify to profile bears using a ``.coafile``:\n+\n+To dump profiled files in current working directory.\n+\n+::\n+\n+    [all]\n+    bears = PEP8Bear,MypyBear\n+    files = <filename>\n+    profile = True\n+\n+Or to dumped profiled files to a specified directory.","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-07-30T11:51:11Z","lastEditedAt":null,"updatedAt":"2018-07-30T11:51:11Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNjMxMTQxNw==","url":"https://github.com/coala/coala/pull/5666#discussion_r206311417","bodyText":"If the specified directory does not exists it will be created create one. If the specified path points to an already existing file a FileExistsError is thrown.","diffHunk":"@@ -0,0 +1,74 @@\n+Profile Bears\n+=============\n+\n+This document provides an overview of coala's Profiling Interface. The\n+Profiling Interface provides abilities to profile Bear code to optimize its\n+performance.\n+\n+The profiler will start by profiling the run() method of bears because this is\n+the part where bear writers will spend time on, as rest of the part like loading\n+the files, collecting the settings, etc. are done by coala itself.\n+\n+.. note::\n+\n+    Enabling both profiler and debugger on a bear at the same time will result\n+    in error.\n+\n+Bear writers will have the ability to directly dump the raw profile output\n+either on current working directory or to a specified directory name, which can\n+be further used for examination of profiler stats with the help of different\n+modules like ``pstats`` or ``snakeviz``.\n+\n+Usage\n+-----\n+\n+coala's Profiler accepts an additional parameter, directory name or directory\n+path where profiled files will be dumped, if ``True`` is provided profiled\n+files will be saved to current working directory. If specified directory does\n+not exists it will create one and if path specified is already a file path then","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-07-30T20:32:35Z","lastEditedAt":null,"updatedAt":"2018-07-30T20:32:35Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNjMxMTU4MA==","url":"https://github.com/coala/coala/pull/5666#discussion_r206311580","bodyText":"dirname or dirpath, choose wisely :P","diffHunk":"@@ -0,0 +1,74 @@\n+Profile Bears\n+=============\n+\n+This document provides an overview of coala's Profiling Interface. The\n+Profiling Interface provides abilities to profile Bear code to optimize its\n+performance.\n+\n+The profiler will start by profiling the run() method of bears because this is\n+the part where bear writers will spend time on, as rest of the part like loading\n+the files, collecting the settings, etc. are done by coala itself.\n+\n+.. note::\n+\n+    Enabling both profiler and debugger on a bear at the same time will result\n+    in error.\n+\n+Bear writers will have the ability to directly dump the raw profile output\n+either on current working directory or to a specified directory name, which can\n+be further used for examination of profiler stats with the help of different\n+modules like ``pstats`` or ``snakeviz``.\n+\n+Usage\n+-----\n+\n+coala's Profiler accepts an additional parameter, directory name or directory\n+path where profiled files will be dumped, if ``True`` is provided profiled\n+files will be saved to current working directory. If specified directory does\n+not exists it will create one and if path specified is already a file path then\n+it will throw ``FileExistsError``.\n+\n+.. note::\n+\n+    All bears (even implicit dependency bears) in a section will be profiled.\n+    Profiled files will have a name format ``{section.name}_{bear.name}.prof``.\n+\n+Command Line Interface\n+^^^^^^^^^^^^^^^^^^^^^^\n+\n+Bear writers can invoke the profiler with the ``--profile`` argument.\n+\n+- To dump profile files in current working directory:\n+\n+  .. code:: shell\n+\n+      $coala -b PEP8Bear,PyUnusedCodeBear -f <filename> --profile\n+\n+- To dump profile files to a specified directory:\n+\n+  .. code:: shell\n+\n+      $coala -b PEP8Bear,MypyBear -f <filename> --profile <dirpath>\n+\n+coafile\n+^^^^^^^\n+\n+Users can specify to profile bears using a ``.coafile`` as well.\n+\n+- To dump profile files in current working directory:\n+\n+  ::\n+\n+      [all]\n+      bears = PEP8Bear,MypyBear\n+      files = <filename>\n+      profile = True\n+\n+- To dump profile files to a specified directory:\n+\n+  ::\n+\n+      [all]\n+      bears = PEP8Bear,MypyBear\n+      files = <filename>\n+      profile = DirName/Dirpath","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzQ0ODUyNA==","createdAt":"2018-08-04T08:05:39Z","content":"THUMBS_UP","user":{"login":"jayvdb","name":"John Vandenberg"}}],"createdAt":"2018-07-30T20:33:07Z","lastEditedAt":null,"updatedAt":"2018-07-30T20:33:07Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNjY1NTgwOQ==","url":"https://github.com/coala/coala/pull/5666#discussion_r206655809","bodyText":"When reading this sounds a bit confusing, it reads like it takes either \"an additional parameter\", or either a \"directory name\" or a \"directory path\". Would recommend following:\n\n... accepts an additional parameter: a directory path where profiled files will be ...","diffHunk":"@@ -0,0 +1,74 @@\n+Profile Bears\n+=============\n+\n+This document provides an overview of coala's Profiling Interface. The\n+Profiling Interface provides abilities to profile Bear code to optimize its\n+performance.\n+\n+The profiler will start by profiling the run() method of bears because this is\n+the part where bear writers will spend time on, as rest of the part like loading\n+the files, collecting the settings, etc. are done by coala itself.\n+\n+.. note::\n+\n+    Enabling both profiler and debugger on a bear at the same time will result\n+    in error.\n+\n+Bear writers will have the ability to directly dump the raw profile output\n+either on current working directory or to a specified directory name, which can\n+be further used for examination of profiler stats with the help of different\n+modules like ``pstats`` or ``snakeviz``.\n+\n+Usage\n+-----\n+\n+coala's Profiler accepts an additional parameter, directory name or directory\n+path where profiled files will be dumped, if ``True`` is provided profiled","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzI1OTI0Mw==","createdAt":"2018-07-31T21:56:51Z","content":"THUMBS_UP","user":{"login":"RaiVaibhav","name":"Vaibhav Rai"}}],"createdAt":"2018-07-31T19:32:40Z","lastEditedAt":null,"updatedAt":"2018-07-31T19:32:40Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNjY1NTk5OQ==","url":"https://github.com/coala/coala/pull/5666#discussion_r206655999","bodyText":"question is what that means to the regular user, but let's put that aside for now, I'm not sure how coala should handle such \"user-exceptions\" properly (which are intended to generate an error-log and exit).","diffHunk":"@@ -0,0 +1,74 @@\n+Profile Bears\n+=============\n+\n+This document provides an overview of coala's Profiling Interface. The\n+Profiling Interface provides abilities to profile Bear code to optimize its\n+performance.\n+\n+The profiler will start by profiling the run() method of bears because this is\n+the part where bear writers will spend time on, as rest of the part like loading\n+the files, collecting the settings, etc. are done by coala itself.\n+\n+.. note::\n+\n+    Enabling both profiler and debugger on a bear at the same time will result\n+    in error.\n+\n+Bear writers will have the ability to directly dump the raw profile output\n+either on current working directory or to a specified directory name, which can\n+be further used for examination of profiler stats with the help of different\n+modules like ``pstats`` or ``snakeviz``.\n+\n+Usage\n+-----\n+\n+coala's Profiler accepts an additional parameter, directory name or directory\n+path where profiled files will be dumped, if ``True`` is provided profiled\n+files will be saved to current working directory. If the specified directory\n+does not exist it will be created. If the specified path points to an already\n+existing file a ``FileExistsError`` is thrown.","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzI1OTIzNw==","createdAt":"2018-07-31T21:56:46Z","content":"THUMBS_UP","user":{"login":"RaiVaibhav","name":"Vaibhav Rai"}}],"createdAt":"2018-07-31T19:33:20Z","lastEditedAt":null,"updatedAt":"2018-07-31T19:33:20Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzc5ODU3OA==","url":"https://github.com/coala/coala/pull/5666#discussion_r207798578","bodyText":": on line above is incompatible with the , here.\nIf you use a colon, you are allowed one phrase after that.  No more.\nThen start a new sentence.","diffHunk":"@@ -0,0 +1,76 @@\n+Profile Bears\n+=============\n+\n+This document provides an overview of coala's Profiling Interface. The\n+Profiling Interface provides abilities to profile Bear code to optimize its\n+performance.\n+\n+The profiler will start by profiling the run() method of bears because this is\n+the part where bear writers will spend time on, as rest of the part like loading\n+the files, collecting the settings, etc. are done by coala itself.\n+\n+.. note::\n+\n+    Enabling both profiler and debugger on a bear at the same time will result\n+    in error.\n+\n+Bear writers will have the ability to directly dump the raw profile output\n+either on current working directory or to a specified directory name, which can\n+be further used for examination of profiler stats with the help of different\n+modules like ``pstats`` or ``snakeviz``.\n+\n+Usage\n+-----\n+\n+coala's Profiler accepts an additional parameter: a directory path where\n+profiled files will be dumped, if ``True`` is provided profiled files will be","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-06T07:41:51Z","lastEditedAt":null,"updatedAt":"2018-08-06T07:41:51Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzc5ODc5MA==","url":"https://github.com/coala/coala/pull/5666#discussion_r207798790","bodyText":"Profiled files will get overwritten, if specified directory\n\nI thought this was will cause an error?\nIf I am correct, you obviously have not re-checked this document and it shouldnt be up for review.","diffHunk":"@@ -0,0 +1,76 @@\n+Profile Bears\n+=============\n+\n+This document provides an overview of coala's Profiling Interface. The\n+Profiling Interface provides abilities to profile Bear code to optimize its\n+performance.\n+\n+The profiler will start by profiling the run() method of bears because this is\n+the part where bear writers will spend time on, as rest of the part like loading\n+the files, collecting the settings, etc. are done by coala itself.\n+\n+.. note::\n+\n+    Enabling both profiler and debugger on a bear at the same time will result\n+    in error.\n+\n+Bear writers will have the ability to directly dump the raw profile output\n+either on current working directory or to a specified directory name, which can\n+be further used for examination of profiler stats with the help of different\n+modules like ``pstats`` or ``snakeviz``.\n+\n+Usage\n+-----\n+\n+coala's Profiler accepts an additional parameter: a directory path where\n+profiled files will be dumped, if ``True`` is provided profiled files will be\n+saved to current working directory. If the specified directory does not exist\n+it will be created. If the specified path points to an already existing file\n+a error is raised. Profiled files will get overwritten, if specified directory","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-06T07:42:48Z","lastEditedAt":null,"updatedAt":"2018-08-06T07:42:48Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzgwMDA0NQ==","url":"https://github.com/coala/coala/pull/5666#discussion_r207800045","bodyText":"FileExistsError will be thrown and it raise SystemExit when user provide a filepath in --profile but if user provide a directory path and that directory already have profiled files then in the next run of coala file with the same name gets overwritten","diffHunk":"@@ -0,0 +1,76 @@\n+Profile Bears\n+=============\n+\n+This document provides an overview of coala's Profiling Interface. The\n+Profiling Interface provides abilities to profile Bear code to optimize its\n+performance.\n+\n+The profiler will start by profiling the run() method of bears because this is\n+the part where bear writers will spend time on, as rest of the part like loading\n+the files, collecting the settings, etc. are done by coala itself.\n+\n+.. note::\n+\n+    Enabling both profiler and debugger on a bear at the same time will result\n+    in error.\n+\n+Bear writers will have the ability to directly dump the raw profile output\n+either on current working directory or to a specified directory name, which can\n+be further used for examination of profiler stats with the help of different\n+modules like ``pstats`` or ``snakeviz``.\n+\n+Usage\n+-----\n+\n+coala's Profiler accepts an additional parameter: a directory path where\n+profiled files will be dumped, if ``True`` is provided profiled files will be\n+saved to current working directory. If the specified directory does not exist\n+it will be created. If the specified path points to an already existing file\n+a error is raised. Profiled files will get overwritten, if specified directory","author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzQ4NDc1MA==","createdAt":"2018-08-06T07:54:41Z","content":"THUMBS_UP","user":{"login":"jayvdb","name":"John Vandenberg"}}],"createdAt":"2018-08-06T07:48:07Z","lastEditedAt":"2018-08-06T07:48:40Z","updatedAt":"2018-08-06T07:48:40Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzgwNTM1MQ==","url":"https://github.com/coala/coala/pull/5666#discussion_r207805351","bodyText":"ill avoid the next grammar lesson.\nAfter dumped add a full stop.  Add two carraige returns.\nShort simple intros are what people will read.  If the short intro is stuffed into a large paragraph, they will try to avoid it.\nThen explain the profile arg options in a new paragraph.  And this usage section should not mention \"True\" , the title case Python constant, as there are multiple ways to enable profiling, and many do not require the Python keyword True.  Dumb it down.  Use prose.","diffHunk":"@@ -0,0 +1,76 @@\n+Profile Bears\n+=============\n+\n+This document provides an overview of coala's Profiling Interface. The\n+Profiling Interface provides abilities to profile Bear code to optimize its\n+performance.\n+\n+The profiler will start by profiling the run() method of bears because this is\n+the part where bear writers will spend time on, as rest of the part like loading\n+the files, collecting the settings, etc. are done by coala itself.\n+\n+.. note::\n+\n+    Enabling both profiler and debugger on a bear at the same time will result\n+    in error.\n+\n+Bear writers will have the ability to directly dump the raw profile output\n+either on current working directory or to a specified directory name, which can\n+be further used for examination of profiler stats with the help of different\n+modules like ``pstats`` or ``snakeviz``.\n+\n+Usage\n+-----\n+\n+coala's Profiler accepts an additional parameter, a directory path where\n+profiled files will be dumped, if ``True`` is provided profiled files will be","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-06T08:08:57Z","lastEditedAt":null,"updatedAt":"2018-08-06T08:08:57Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMDYxNjY3NQ==","url":"https://github.com/coala/coala/pull/5666#issuecomment-410616675","bodyText":"As #565 is still open, I guess this could be Closes ... ?","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzQ4NTE0Ng==","createdAt":"2018-08-06T08:03:06Z","content":"THUMBS_UP","user":{"login":"RaiVaibhav","name":"Vaibhav Rai"}}],"createdAt":"2018-08-06T07:40:01Z","lastEditedAt":null,"updatedAt":"2018-08-06T07:40:01Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1532832519000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5669","number":5669,"title":"setup.cfg: Use template","body":"Also use template for tests/conftest.py\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":4,"createdAt":"2018-07-26T20:04:11Z","updatedAt":"2018-07-29T02:48:39Z","closedAt":"2018-07-29T02:48:39Z","state":"merged","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"size/S","color":"B1CF0A"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5669","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNTk0MDg1MQ==","url":"https://github.com/coala/coala/pull/5669#discussion_r205940851","bodyText":"Should we have this indicated in the logger that this test isn't being run and the dev would need to install pytest-reqs plugin ?","diffHunk":"@@ -1,5 +1,10 @@\n-from pytest_reqs import check_requirements\n+# Allow import to fail to avoid annoying developers\n+try:\n+    from pytest_reqs import check_requirements\n+except ImportError:","author":{"login":"virresh","avatarUrl":"https://avatars0.githubusercontent.com/u/10978108?v=4","name":"Viresh Gupta"},"reactions":[],"createdAt":"2018-07-28T11:10:42Z","lastEditedAt":null,"updatedAt":"2018-07-28T11:10:42Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNTk0NDM5NA==","url":"https://github.com/coala/coala/pull/5669#discussion_r205944394","bodyText":"Sounds like a good idea,.\nhttps://gitlab.com/coala/mobans/issues/74","diffHunk":"@@ -1,5 +1,10 @@\n-from pytest_reqs import check_requirements\n+# Allow import to fail to avoid annoying developers\n+try:\n+    from pytest_reqs import check_requirements\n+except ImportError:","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzExNzkxMQ==","createdAt":"2018-07-28T14:31:32Z","content":"THUMBS_UP","user":{"login":"virresh","name":"Viresh Gupta"}}],"createdAt":"2018-07-28T14:08:11Z","lastEditedAt":null,"updatedAt":"2018-07-28T14:08:11Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1532652640000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5670","number":5670,"title":"Dep5510","body":"For short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":6,"createdAt":"2018-07-26T21:54:38Z","updatedAt":"2018-07-27T00:50:40Z","closedAt":"2018-07-27T00:50:25Z","state":"closed","user":{"login":"JameerBabu","avatarUrl":"https://avatars2.githubusercontent.com/u/20906632?v=4"},"owner":{"login":"JameerBabu","avatarUrl":"https://avatars2.githubusercontent.com/u/20906632?v=4"},"assignee":{"login":"JameerBabu","avatarUrl":"https://avatars2.githubusercontent.com/u/20906632?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/low","color":"207de5"},{"name":"importance/low","color":"70E870"},{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5670","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDQwODI0Nzg3Mg==","url":"https://github.com/coala/coala/pull/5670#issuecomment-408247872","bodyText":"I sincerely apologize for creating another pull request. It had without my prior knowledge.","diffHunk":null,"author":{"login":"JameerBabu","avatarUrl":"https://avatars2.githubusercontent.com/u/20906632?v=4","name":"Jameer Babu"},"createdAt":"2018-07-26T21:58:39Z","lastEditedAt":null,"updatedAt":"2018-07-26T21:58:39Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQwODI3ODI4NQ==","url":"https://github.com/coala/coala/pull/5670#issuecomment-408278285","bodyText":"Please test on your own machine, not in a Pull Request.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-07-27T00:50:39Z","lastEditedAt":null,"updatedAt":"2018-07-27T00:50:39Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1532669629000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5672","number":5672,"title":"coalaJSONTest: Remove unnecessary second patch","body":"Fixes #5671\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":2,"createdAt":"2018-07-27T02:50:30Z","updatedAt":"2018-07-27T05:33:49Z","closedAt":"2018-07-27T05:33:49Z","state":"merged","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"area/CLI","color":"006b75"},{"name":"area/tests","color":"bfd4f2"},{"name":"difficulty/low","color":"207de5"},{"name":"importance/low","color":"70E870"},{"name":"process/approved","color":"009800"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5672","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDQwODMxMzgyMA==","url":"https://github.com/coala/coala/pull/5672#issuecomment-408313820","bodyText":"Approved on #5645","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-07-27T05:15:48Z","lastEditedAt":null,"updatedAt":"2018-07-27T05:15:48Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1532681642000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5673","number":5673,"title":"Constants: Move USER_DATA_DIR to CachingUtilities","body":"Fixes #5664\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":4,"createdAt":"2018-07-27T05:08:03Z","updatedAt":"2018-07-27T08:54:02Z","closedAt":"2018-07-27T08:54:02Z","state":"merged","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"area/CLI","color":"006b75"},{"name":"area/tests","color":"bfd4f2"},{"name":"difficulty/low","color":"207de5"},{"name":"importance/low","color":"70E870"},{"name":"size/XS","color":"00DE0F"},{"name":"type/bug","color":"e11d21"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5673","comments":[]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1532774572000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5675","number":5675,"title":"VisualBasic: Add `max_line_length`","body":"Some langauges have language specific line length restriction.\nThis adds max_line_length restriction for VB.\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":2,"createdAt":"2018-07-28T05:41:23Z","updatedAt":"2018-07-28T10:42:52Z","closedAt":"2018-07-28T10:42:52Z","state":"merged","user":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4"},"owner":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4"},"labels":[],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5675","comments":[]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1533249511000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5677","number":5677,"title":"Bear: Remove debugger from init","body":"Add initial Fix the API breakage problem\nbecause of debugger flag in bear base\nclass.\nRelated to #5676","comments":6,"createdAt":"2018-07-28T10:45:43Z","updatedAt":"2018-08-02T22:38:31Z","closedAt":"2018-08-01T03:54:15Z","state":"merged","user":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4"},"owner":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4"},"labels":[{"name":"process/approved","color":"009800"},{"name":"size/S","color":"B1CF0A"},{"name":"status/ci-approved","color":"ededed"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5677","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNTk0MDM3Mw==","url":"https://github.com/coala/coala/pull/5677#discussion_r205940373","bodyText":"these changes are already reflected in Profiler interface PR once these changes gets merge there I will rebase (the purpose of reflecting these changes here is preventing the coverage and test failure problem)","diffHunk":"@@ -566,8 +567,8 @@ def test_yield_ignore_ranges(self):\n     def test_loaded_bears_with_error_result(self):\n         class BearWithMissingPrerequisites(Bear):\n \n-            def __init__(self, section, queue, timeout=0.1, debugger=False):\n-                Bear.__init__(self, section, queue, timeout, debugger)\n+            def __init__(self, *args, **kwargs):\n+                Bear.__init__(self, *args, **kwargs)","author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"reactions":[],"createdAt":"2018-07-28T10:48:47Z","lastEditedAt":null,"updatedAt":"2018-07-28T10:48:47Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNTk0NzIxMQ==","url":"https://github.com/coala/coala/pull/5677#discussion_r205947211","bodyText":"put this in a helper function.  You will use it again for profile","diffHunk":"@@ -301,7 +302,12 @@ def __init__(self,\n         self.section = section\n         self.message_queue = message_queue\n         self.timeout = timeout\n-        self.debugger = debugger\n+        self.debugger = (False if 'debug_bears' not in section or (","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-07-28T16:20:55Z","lastEditedAt":null,"updatedAt":"2018-07-28T16:20:55Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNTk0NzI1Mg==","url":"https://github.com/coala/coala/pull/5677#discussion_r205947252","bodyText":"why changing to GlobalBear ?","diffHunk":"@@ -606,41 +607,36 @@ def check_prerequisites(cls):\n     def test_global_instantiation(self):\n         class TestOneBear(Bear):\n \n-            def __init__(self, file_dict, section, queue, timeout=0.1,\n-                         debugger=False):\n+            def __init__(self, *args, **kwargs):\n                 raise RuntimeError\n \n-        class TestTwoBear(Bear):\n+        class TestTwoBear(GlobalBear):","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-07-28T16:23:01Z","lastEditedAt":null,"updatedAt":"2018-07-28T16:23:01Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNTk1NDEyMA==","url":"https://github.com/coala/coala/pull/5677#discussion_r205954120","bodyText":"I just made test more clear check the line 627 (just like a enhancement of test), it will also run fine without changing it to GlobalBear","diffHunk":"@@ -606,41 +607,36 @@ def check_prerequisites(cls):\n     def test_global_instantiation(self):\n         class TestOneBear(Bear):\n \n-            def __init__(self, file_dict, section, queue, timeout=0.1,\n-                         debugger=False):\n+            def __init__(self, *args, **kwargs):\n                 raise RuntimeError\n \n-        class TestTwoBear(Bear):\n+        class TestTwoBear(GlobalBear):","author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"reactions":[],"createdAt":"2018-07-28T21:13:33Z","lastEditedAt":null,"updatedAt":"2018-07-28T21:13:33Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNTk1NDE3MA==","url":"https://github.com/coala/coala/pull/5677#discussion_r205954170","bodyText":"@jayvdb I didn't get, you want me to make a different private method which do the same work?\n\nYou will use it again for profile\n\nI don't think so as debug_bears accept different argument then profile, If I try to mix both it will create a extra code","diffHunk":"@@ -301,7 +302,12 @@ def __init__(self,\n         self.section = section\n         self.message_queue = message_queue\n         self.timeout = timeout\n-        self.debugger = debugger\n+        self.debugger = (False if 'debug_bears' not in section or (","author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"reactions":[],"createdAt":"2018-07-28T21:15:51Z","lastEditedAt":null,"updatedAt":"2018-07-28T21:15:51Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNTk2MDQzMw==","url":"https://github.com/coala/coala/pull/5677#discussion_r205960433","bodyText":"Also IMO creating a helper will not help as both debug_bears and profile take different argument and accordingly logic change in both case.","diffHunk":"@@ -301,7 +302,12 @@ def __init__(self,\n         self.section = section\n         self.message_queue = message_queue\n         self.timeout = timeout\n-        self.debugger = debugger\n+        self.debugger = (False if 'debug_bears' not in section or (","author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"reactions":[],"createdAt":"2018-07-29T04:29:24Z","lastEditedAt":null,"updatedAt":"2018-07-29T04:29:24Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNTk2MDc2MA==","url":"https://github.com/coala/coala/pull/5677#discussion_r205960760","bodyText":"the helper would take an argument obviously for the setting name.\nIf necessary, create two helpers.\nAt the moment these are gibberish logic which I am assuming is similar because it isnt python code which is readable and intuitive.","diffHunk":"@@ -301,7 +302,12 @@ def __init__(self,\n         self.section = section\n         self.message_queue = message_queue\n         self.timeout = timeout\n-        self.debugger = debugger\n+        self.debugger = (False if 'debug_bears' not in section or (","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzEyNjQ5OA==","createdAt":"2018-07-29T05:05:47Z","content":"THUMBS_UP","user":{"login":"RaiVaibhav","name":"Vaibhav Rai"}}],"createdAt":"2018-07-29T04:57:06Z","lastEditedAt":"2018-07-29T04:57:24Z","updatedAt":"2018-07-29T04:57:24Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNTk2MDk1NQ==","url":"https://github.com/coala/coala/pull/5677#discussion_r205960955","bodyText":"If the test runs fine without changing it to GlobalBear, please do not change the tests.\nCreate an issue and explain why you think it should be changed.\nAnd it would probably be a newcomer issue.","diffHunk":"@@ -606,41 +607,36 @@ def check_prerequisites(cls):\n     def test_global_instantiation(self):\n         class TestOneBear(Bear):\n \n-            def __init__(self, file_dict, section, queue, timeout=0.1,\n-                         debugger=False):\n+            def __init__(self, *args, **kwargs):\n                 raise RuntimeError\n \n-        class TestTwoBear(Bear):\n+        class TestTwoBear(GlobalBear):","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-07-29T05:10:11Z","lastEditedAt":null,"updatedAt":"2018-07-29T05:10:11Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNTk2MjIwMQ==","url":"https://github.com/coala/coala/pull/5677#discussion_r205962201","bodyText":"Sorry for the confusion please nvm the above comment, that change was meaningfull actually GlobalBear gets one more arg file_dict compare to other Bears. so I changed that to GlobalBear here, these changes will be needed when I put *args and **kwargs here","diffHunk":"@@ -606,41 +607,36 @@ def check_prerequisites(cls):\n     def test_global_instantiation(self):\n         class TestOneBear(Bear):\n \n-            def __init__(self, file_dict, section, queue, timeout=0.1,\n-                         debugger=False):\n+            def __init__(self, *args, **kwargs):\n                 raise RuntimeError\n \n-        class TestTwoBear(Bear):\n+        class TestTwoBear(GlobalBear):","author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"reactions":[],"createdAt":"2018-07-29T06:19:14Z","lastEditedAt":"2018-07-29T06:22:50Z","updatedAt":"2018-07-29T06:22:50Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNTk2MjMyMQ==","url":"https://github.com/coala/coala/pull/5677#discussion_r205962321","bodyText":"Nvm this PR will get merge first.","diffHunk":"@@ -566,8 +567,8 @@ def test_yield_ignore_ranges(self):\n     def test_loaded_bears_with_error_result(self):\n         class BearWithMissingPrerequisites(Bear):\n \n-            def __init__(self, section, queue, timeout=0.1, debugger=False):\n-                Bear.__init__(self, section, queue, timeout, debugger)\n+            def __init__(self, *args, **kwargs):\n+                Bear.__init__(self, *args, **kwargs)","author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"reactions":[],"createdAt":"2018-07-29T06:25:39Z","lastEditedAt":null,"updatedAt":"2018-07-29T06:25:39Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNTk2NzA1NA==","url":"https://github.com/coala/coala/pull/5677#discussion_r205967054","bodyText":"what does this do?\nthe function name should describe it.\nthe docstring should explain it.","diffHunk":"@@ -16,14 +16,31 @@\n from coalib.bears.BEAR_KIND import BEAR_KIND\n from coalib.output.printers.LogPrinter import LogPrinterMixin\n from coalib.results.Result import Result\n+from coalib.misc.Constants import FALSE_STRINGS, TRUE_STRINGS\n from coalib.results.TextPosition import ZeroOffsetError\n from coalib.settings.FunctionMetadata import FunctionMetadata\n from coalib.settings.Section import Section\n from coalib.settings.ConfigurationGathering import get_config_directory\n+from coalib.settings.Setting import typed_list\n \n from .meta import bearclass\n \n \n+def _debugger_helper(bear):","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzEyOTAxMg==","createdAt":"2018-07-29T09:53:42Z","content":"THUMBS_UP","user":{"login":"RaiVaibhav","name":"Vaibhav Rai"}}],"createdAt":"2018-07-29T09:35:34Z","lastEditedAt":null,"updatedAt":"2018-07-29T09:35:34Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNTk2NzA2Mw==","url":"https://github.com/coala/coala/pull/5677#discussion_r205967063","bodyText":"help the reader follow the logic.  one step at a time.\nif 'debug_bears' not in bear.section:\n    return False\nif ...:\n    ....","diffHunk":"@@ -16,14 +16,31 @@\n from coalib.bears.BEAR_KIND import BEAR_KIND\n from coalib.output.printers.LogPrinter import LogPrinterMixin\n from coalib.results.Result import Result\n+from coalib.misc.Constants import FALSE_STRINGS, TRUE_STRINGS\n from coalib.results.TextPosition import ZeroOffsetError\n from coalib.settings.FunctionMetadata import FunctionMetadata\n from coalib.settings.Section import Section\n from coalib.settings.ConfigurationGathering import get_config_directory\n+from coalib.settings.Setting import typed_list\n \n from .meta import bearclass\n \n \n+def _debugger_helper(bear):\n+    if bear is None:\n+        return False\n+    elif 'debug_bears' not in bear.section or (","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-07-29T09:35:55Z","lastEditedAt":null,"updatedAt":"2018-07-29T09:35:55Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNTk2NzE0OA==","url":"https://github.com/coala/coala/pull/5677#discussion_r205967148","bodyText":"you do not need elif if the previous branch did a return.\navoiding the elif means you can also do some computation and use variables before the next if, instead of putting so much unreadable stuff into an if clause like you have done here","diffHunk":"@@ -16,14 +16,31 @@\n from coalib.bears.BEAR_KIND import BEAR_KIND\n from coalib.output.printers.LogPrinter import LogPrinterMixin\n from coalib.results.Result import Result\n+from coalib.misc.Constants import FALSE_STRINGS, TRUE_STRINGS\n from coalib.results.TextPosition import ZeroOffsetError\n from coalib.settings.FunctionMetadata import FunctionMetadata\n from coalib.settings.Section import Section\n from coalib.settings.ConfigurationGathering import get_config_directory\n+from coalib.settings.Setting import typed_list\n \n from .meta import bearclass\n \n \n+def _debugger_helper(bear):\n+    if bear is None:\n+        return False\n+    elif 'debug_bears' not in bear.section or (\n+            bear.section['debug_bears'].value.lower() in FALSE_STRINGS):\n+        return False\n+    elif bear.name.lower() in (","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-07-29T09:38:31Z","lastEditedAt":null,"updatedAt":"2018-07-29T09:38:31Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNTk2NzE1NA==","url":"https://github.com/coala/coala/pull/5677#discussion_r205967154","bodyText":"bool(bear.section['debug_bears'])","diffHunk":"@@ -16,14 +16,31 @@\n from coalib.bears.BEAR_KIND import BEAR_KIND\n from coalib.output.printers.LogPrinter import LogPrinterMixin\n from coalib.results.Result import Result\n+from coalib.misc.Constants import FALSE_STRINGS, TRUE_STRINGS\n from coalib.results.TextPosition import ZeroOffsetError\n from coalib.settings.FunctionMetadata import FunctionMetadata\n from coalib.settings.Section import Section\n from coalib.settings.ConfigurationGathering import get_config_directory\n+from coalib.settings.Setting import typed_list\n \n from .meta import bearclass\n \n \n+def _debugger_helper(bear):\n+    if bear is None:\n+        return False\n+    elif 'debug_bears' not in bear.section or (\n+            bear.section['debug_bears'].value.lower() in FALSE_STRINGS):","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-07-29T09:39:11Z","lastEditedAt":null,"updatedAt":"2018-07-29T09:39:11Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNTk2NzUxMQ==","url":"https://github.com/coala/coala/pull/5677#discussion_r205967511","bodyText":"Please check this I am following the previous instructions also for the value like na or non etc this will raise ValueError","diffHunk":"@@ -16,14 +16,31 @@\n from coalib.bears.BEAR_KIND import BEAR_KIND\n from coalib.output.printers.LogPrinter import LogPrinterMixin\n from coalib.results.Result import Result\n+from coalib.misc.Constants import FALSE_STRINGS, TRUE_STRINGS\n from coalib.results.TextPosition import ZeroOffsetError\n from coalib.settings.FunctionMetadata import FunctionMetadata\n from coalib.settings.Section import Section\n from coalib.settings.ConfigurationGathering import get_config_directory\n+from coalib.settings.Setting import typed_list\n \n from .meta import bearclass\n \n \n+def _debugger_helper(bear):\n+    if bear is None:\n+        return False\n+    elif 'debug_bears' not in bear.section or (\n+            bear.section['debug_bears'].value.lower() in FALSE_STRINGS):","author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"reactions":[],"createdAt":"2018-07-29T09:55:44Z","lastEditedAt":"2018-07-29T09:56:06Z","updatedAt":"2018-07-29T09:56:06Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNTk2Nzc1Mg==","url":"https://github.com/coala/coala/pull/5677#discussion_r205967752","bodyText":"Please test what I suggested before saying it will raise an exception .\nAnd see StringConverter.__bool__ for why it should work.\nIf it doesnt work, it is because there is something else wrong with the debug_bears Setting.","diffHunk":"@@ -16,14 +16,31 @@\n from coalib.bears.BEAR_KIND import BEAR_KIND\n from coalib.output.printers.LogPrinter import LogPrinterMixin\n from coalib.results.Result import Result\n+from coalib.misc.Constants import FALSE_STRINGS, TRUE_STRINGS\n from coalib.results.TextPosition import ZeroOffsetError\n from coalib.settings.FunctionMetadata import FunctionMetadata\n from coalib.settings.Section import Section\n from coalib.settings.ConfigurationGathering import get_config_directory\n+from coalib.settings.Setting import typed_list\n \n from .meta import bearclass\n \n \n+def _debugger_helper(bear):\n+    if bear is None:\n+        return False\n+    elif 'debug_bears' not in bear.section or (\n+            bear.section['debug_bears'].value.lower() in FALSE_STRINGS):","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-07-29T10:06:37Z","lastEditedAt":null,"updatedAt":"2018-07-29T10:06:37Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNTk2Nzg4Mw==","url":"https://github.com/coala/coala/pull/5677#discussion_r205967883","bodyText":"Check this https://bpaste.net/show/1faff582d756","diffHunk":"@@ -16,14 +16,31 @@\n from coalib.bears.BEAR_KIND import BEAR_KIND\n from coalib.output.printers.LogPrinter import LogPrinterMixin\n from coalib.results.Result import Result\n+from coalib.misc.Constants import FALSE_STRINGS, TRUE_STRINGS\n from coalib.results.TextPosition import ZeroOffsetError\n from coalib.settings.FunctionMetadata import FunctionMetadata\n from coalib.settings.Section import Section\n from coalib.settings.ConfigurationGathering import get_config_directory\n+from coalib.settings.Setting import typed_list\n \n from .meta import bearclass\n \n \n+def _debugger_helper(bear):\n+    if bear is None:\n+        return False\n+    elif 'debug_bears' not in bear.section or (\n+            bear.section['debug_bears'].value.lower() in FALSE_STRINGS):","author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"reactions":[],"createdAt":"2018-07-29T10:10:31Z","lastEditedAt":null,"updatedAt":"2018-07-29T10:10:31Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNTk2Nzk2Mw==","url":"https://github.com/coala/coala/pull/5677#discussion_r205967963","bodyText":">>> section.append(Setting('abc', 'nop'))\n>>> bool(section['abc'])\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"/usr/local/lib/python3.6/dist-packages/coala_utils/string_processing/StringConverter.py\", line 46, in __bool__\n    raise ValueError\nValueError\n>>>","diffHunk":"@@ -16,14 +16,31 @@\n from coalib.bears.BEAR_KIND import BEAR_KIND\n from coalib.output.printers.LogPrinter import LogPrinterMixin\n from coalib.results.Result import Result\n+from coalib.misc.Constants import FALSE_STRINGS, TRUE_STRINGS\n from coalib.results.TextPosition import ZeroOffsetError\n from coalib.settings.FunctionMetadata import FunctionMetadata\n from coalib.settings.Section import Section\n from coalib.settings.ConfigurationGathering import get_config_directory\n+from coalib.settings.Setting import typed_list\n \n from .meta import bearclass\n \n \n+def _debugger_helper(bear):\n+    if bear is None:\n+        return False\n+    elif 'debug_bears' not in bear.section or (\n+            bear.section['debug_bears'].value.lower() in FALSE_STRINGS):","author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"reactions":[],"createdAt":"2018-07-29T10:12:51Z","lastEditedAt":null,"updatedAt":"2018-07-29T10:12:51Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNTk2ODQ5OA==","url":"https://github.com/coala/coala/pull/5677#discussion_r205968498","bodyText":"Actually, I've seen that this is kinda buggy because we don't use coala's FALSE_STRINGS, but coala_util's FALSE_STRINGS, which isn't so comprehensive than coala's list. However, @jayvdb is right to use bool on Section, it works in principle and that's what our section system uses.","diffHunk":"@@ -16,14 +16,31 @@\n from coalib.bears.BEAR_KIND import BEAR_KIND\n from coalib.output.printers.LogPrinter import LogPrinterMixin\n from coalib.results.Result import Result\n+from coalib.misc.Constants import FALSE_STRINGS, TRUE_STRINGS\n from coalib.results.TextPosition import ZeroOffsetError\n from coalib.settings.FunctionMetadata import FunctionMetadata\n from coalib.settings.Section import Section\n from coalib.settings.ConfigurationGathering import get_config_directory\n+from coalib.settings.Setting import typed_list\n \n from .meta import bearclass\n \n \n+def _debugger_helper(bear):\n+    if bear is None:\n+        return False\n+    elif 'debug_bears' not in bear.section or (\n+            bear.section['debug_bears'].value.lower() in FALSE_STRINGS):","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-07-29T10:33:13Z","lastEditedAt":null,"updatedAt":"2018-07-29T10:33:13Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNTk2ODU4Nw==","url":"https://github.com/coala/coala/pull/5677#discussion_r205968587","bodyText":"you can return the result of bear.name.lower() in ... directly instead of using an if, it's like if True: return True else: return False now","diffHunk":"@@ -16,14 +16,31 @@\n from coalib.bears.BEAR_KIND import BEAR_KIND\n from coalib.output.printers.LogPrinter import LogPrinterMixin\n from coalib.results.Result import Result\n+from coalib.misc.Constants import FALSE_STRINGS, TRUE_STRINGS\n from coalib.results.TextPosition import ZeroOffsetError\n from coalib.settings.FunctionMetadata import FunctionMetadata\n from coalib.settings.Section import Section\n from coalib.settings.ConfigurationGathering import get_config_directory\n+from coalib.settings.Setting import typed_list\n \n from .meta import bearclass\n \n \n+def _debugger_helper(bear):\n+    if bear is None:\n+        return False\n+    elif 'debug_bears' not in bear.section or (\n+            bear.section['debug_bears'].value.lower() in FALSE_STRINGS):\n+        return False\n+    elif bear.name.lower() in (\n+            map(str.lower, typed_list(str)(bear.section['debug_bears']))) or (\n+                typed_list(str)(bear.section['debug_bears'])[0].lower() in\n+            TRUE_STRINGS):\n+        return True\n+    else:\n+        return False","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzE2NDkxNw==","createdAt":"2018-07-30T13:14:31Z","content":"THUMBS_UP","user":{"login":"jayvdb","name":"John Vandenberg"}},{"id":"MDg6UmVhY3Rpb24yNzE2NDkyMQ==","createdAt":"2018-07-30T13:14:35Z","content":"LAUGH","user":{"login":"jayvdb","name":"John Vandenberg"}}],"createdAt":"2018-07-29T10:35:23Z","lastEditedAt":null,"updatedAt":"2018-07-29T10:35:23Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNjEyNzg1NA==","url":"https://github.com/coala/coala/pull/5677#discussion_r206127854","bodyText":"@Makman2 , so we need to enhance coala_util's FALSE_STRINGS ?  better create an issue quick as those libraries need to get released soon","diffHunk":"@@ -16,14 +16,31 @@\n from coalib.bears.BEAR_KIND import BEAR_KIND\n from coalib.output.printers.LogPrinter import LogPrinterMixin\n from coalib.results.Result import Result\n+from coalib.misc.Constants import FALSE_STRINGS, TRUE_STRINGS\n from coalib.results.TextPosition import ZeroOffsetError\n from coalib.settings.FunctionMetadata import FunctionMetadata\n from coalib.settings.Section import Section\n from coalib.settings.ConfigurationGathering import get_config_directory\n+from coalib.settings.Setting import typed_list\n \n from .meta import bearclass\n \n \n+def _debugger_helper(bear):\n+    if bear is None:\n+        return False\n+    elif 'debug_bears' not in bear.section or (\n+            bear.section['debug_bears'].value.lower() in FALSE_STRINGS):\n+        return False\n+    elif bear.name.lower() in (\n+            map(str.lower, typed_list(str)(bear.section['debug_bears']))) or (\n+                typed_list(str)(bear.section['debug_bears'])[0].lower() in\n+            TRUE_STRINGS):\n+        return True\n+    else:\n+        return False","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-07-30T13:15:21Z","lastEditedAt":null,"updatedAt":"2018-07-30T13:15:21Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNjEyOTQ1NQ==","url":"https://github.com/coala/coala/pull/5677#discussion_r206129455","bodyText":"Can you review this code 😅\nI will create a issue after getting green from Makman","diffHunk":"@@ -16,14 +16,31 @@\n from coalib.bears.BEAR_KIND import BEAR_KIND\n from coalib.output.printers.LogPrinter import LogPrinterMixin\n from coalib.results.Result import Result\n+from coalib.misc.Constants import FALSE_STRINGS, TRUE_STRINGS\n from coalib.results.TextPosition import ZeroOffsetError\n from coalib.settings.FunctionMetadata import FunctionMetadata\n from coalib.settings.Section import Section\n from coalib.settings.ConfigurationGathering import get_config_directory\n+from coalib.settings.Setting import typed_list\n \n from .meta import bearclass\n \n \n+def _debugger_helper(bear):\n+    if bear is None:\n+        return False\n+    elif 'debug_bears' not in bear.section or (\n+            bear.section['debug_bears'].value.lower() in FALSE_STRINGS):\n+        return False\n+    elif bear.name.lower() in (\n+            map(str.lower, typed_list(str)(bear.section['debug_bears']))) or (\n+                typed_list(str)(bear.section['debug_bears'])[0].lower() in\n+            TRUE_STRINGS):\n+        return True\n+    else:\n+        return False","author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"reactions":[],"createdAt":"2018-07-30T13:20:30Z","lastEditedAt":null,"updatedAt":"2018-07-30T13:20:30Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNjEyOTYyNg==","url":"https://github.com/coala/coala/pull/5677#discussion_r206129626","bodyText":"If possible I will solve that but later (sorry GSoC pressure). 👍","diffHunk":"@@ -16,14 +16,31 @@\n from coalib.bears.BEAR_KIND import BEAR_KIND\n from coalib.output.printers.LogPrinter import LogPrinterMixin\n from coalib.results.Result import Result\n+from coalib.misc.Constants import FALSE_STRINGS, TRUE_STRINGS\n from coalib.results.TextPosition import ZeroOffsetError\n from coalib.settings.FunctionMetadata import FunctionMetadata\n from coalib.settings.Section import Section\n from coalib.settings.ConfigurationGathering import get_config_directory\n+from coalib.settings.Setting import typed_list\n \n from .meta import bearclass\n \n \n+def _debugger_helper(bear):\n+    if bear is None:\n+        return False\n+    elif 'debug_bears' not in bear.section or (\n+            bear.section['debug_bears'].value.lower() in FALSE_STRINGS):\n+        return False\n+    elif bear.name.lower() in (\n+            map(str.lower, typed_list(str)(bear.section['debug_bears']))) or (\n+                typed_list(str)(bear.section['debug_bears'])[0].lower() in\n+            TRUE_STRINGS):\n+        return True\n+    else:\n+        return False","author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"reactions":[],"createdAt":"2018-07-30T13:21:02Z","lastEditedAt":"2018-07-30T13:21:34Z","updatedAt":"2018-07-30T13:21:34Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNjEyODI3NQ==","url":"https://github.com/coala/coala/pull/5677#discussion_r206128275","bodyText":"this is not a \"setter\".  It doesnt set anything.\nIt determines the value of the debugger setting.","diffHunk":"@@ -20,10 +20,29 @@\n from coalib.settings.FunctionMetadata import FunctionMetadata\n from coalib.settings.Section import Section\n from coalib.settings.ConfigurationGathering import get_config_directory\n+from coalib.settings.Setting import typed_list\n \n from .meta import bearclass\n \n \n+def _debugger_flag_setter(bear):","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-07-30T13:16:45Z","lastEditedAt":null,"updatedAt":"2018-07-30T13:16:45Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNjEzNTM0OQ==","url":"https://github.com/coala/coala/pull/5677#discussion_r206135349","bodyText":"what is typed_list(bool)(bear.section['debug_bears'])[0] ?\nthat is buggy as.  I know what you are trying to do.  You want to hide the ValueError exceptions which could happen.  But it only hides some of them, because that is not what typed_list(bool) is designed to do.\nYou need to let go of that horrible or you have in the return.  It is forcing you to write more complicated and buggy code.\nbool(bear.section['debug_bears']) can raise exceptions.  So, you need to catch them.  We even have a MR related to it at https://gitlab.com/coala/coala-utils/merge_requests/34/diffs .\nThen after you have finished checking if it is a bool, then do another check if it is a list of bear names.\nAnd do not use typed_list(str).  bear.section['debug_bears'] is already the appropriate type.  Read the documentation about that type for how to use it correctly.","diffHunk":"@@ -20,10 +20,29 @@\n from coalib.settings.FunctionMetadata import FunctionMetadata\n from coalib.settings.Section import Section\n from coalib.settings.ConfigurationGathering import get_config_directory\n+from coalib.settings.Setting import typed_list\n \n from .meta import bearclass\n \n \n+def _debugger_flag_setter(bear):\n+    \"\"\"\n+    Set the value of `debugger` flag.\n+\n+    :param bear: Bear object\n+    :return:     True if ``debug_bears`` is ``True`` or if bear name specified\n+                 in ``debug_bears`` setting matched with the name of parameter\n+                 bear.\n+    \"\"\"\n+    if bear is None:\n+        return False\n+    if 'debug_bears' not in bear.section:\n+        return False\n+    return (bear.name.lower() in (\n+            map(str.lower, typed_list(str)(bear.section['debug_bears']))) or\n+            typed_list(bool)(bear.section['debug_bears'])[0])","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-07-30T13:39:03Z","lastEditedAt":null,"updatedAt":"2018-07-30T13:39:03Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNjEzNzg5Mw==","url":"https://github.com/coala/coala/pull/5677#discussion_r206137893","bodyText":"I didn't get this part\n\nAnd do not use typed_list(str). bear.section['debug_bears'] is already the appropriate type\n\nCan you tell me how am I going to make this --> 'ABear, Bbear' to a list without using typed_list?","diffHunk":"@@ -20,10 +20,29 @@\n from coalib.settings.FunctionMetadata import FunctionMetadata\n from coalib.settings.Section import Section\n from coalib.settings.ConfigurationGathering import get_config_directory\n+from coalib.settings.Setting import typed_list\n \n from .meta import bearclass\n \n \n+def _debugger_flag_setter(bear):\n+    \"\"\"\n+    Set the value of `debugger` flag.\n+\n+    :param bear: Bear object\n+    :return:     True if ``debug_bears`` is ``True`` or if bear name specified\n+                 in ``debug_bears`` setting matched with the name of parameter\n+                 bear.\n+    \"\"\"\n+    if bear is None:\n+        return False\n+    if 'debug_bears' not in bear.section:\n+        return False\n+    return (bear.name.lower() in (\n+            map(str.lower, typed_list(str)(bear.section['debug_bears']))) or\n+            typed_list(bool)(bear.section['debug_bears'])[0])","author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"reactions":[],"createdAt":"2018-07-30T13:46:13Z","lastEditedAt":null,"updatedAt":"2018-07-30T13:46:13Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQwODU5ODgzMg==","url":"https://github.com/coala/coala/pull/5677#issuecomment-408598832","bodyText":"[WIP]","diffHunk":null,"author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"reactions":[],"createdAt":"2018-07-28T10:45:54Z","lastEditedAt":null,"updatedAt":"2018-07-28T10:45:54Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQwODg1MjExMg==","url":"https://github.com/coala/coala/pull/5677#issuecomment-408852112","bodyText":"@Makman2 @jayvdb  can you take a look, please, I want this to be merge today so that I can update the Profiler Interface code asap.","diffHunk":null,"author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"reactions":[],"createdAt":"2018-07-30T12:51:02Z","lastEditedAt":"2018-07-30T12:53:23Z","updatedAt":"2018-07-30T12:53:23Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1533174716000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5678","number":5678,"title":"done","body":"For short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":1,"createdAt":"2018-07-28T12:27:19Z","updatedAt":"2018-08-02T01:51:56Z","closedAt":null,"state":"open","user":{"login":"vaibhav9619","avatarUrl":"https://avatars1.githubusercontent.com/u/35555074?v=4"},"owner":{"login":"vaibhav9619","avatarUrl":"https://avatars1.githubusercontent.com/u/35555074?v=4"},"labels":[{"name":"process/wip","color":"fbca04"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5678","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDQwOTcyMjUzOQ==","url":"https://github.com/coala/coala/pull/5678#issuecomment-409722539","bodyText":"Which issue is this fixing?","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-01T21:04:33Z","lastEditedAt":null,"updatedAt":"2018-08-01T21:04:33Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1532831547000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5679","number":5679,"title":"changes negative distance docstring to ``-1``","body":"Resolves issue #5329\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":1,"createdAt":"2018-07-28T19:51:27Z","updatedAt":"2018-07-29T02:32:27Z","closedAt":"2018-07-29T02:32:27Z","state":"closed","user":{"login":"frunkad","avatarUrl":"https://avatars2.githubusercontent.com/u/33373582?v=4"},"owner":{"login":"frunkad","avatarUrl":"https://avatars2.githubusercontent.com/u/33373582?v=4"},"labels":[{"name":"process/wip","color":"fbca04"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5679","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDQwODY0NzU2OA==","url":"https://github.com/coala/coala/pull/5679#issuecomment-408647568","bodyText":"Ugh..  your newcomer issue is #5661 .\nYou do not get two newcomer issues.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-07-29T02:32:27Z","lastEditedAt":null,"updatedAt":"2018-07-29T02:32:27Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1533830589000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5680","number":5680,"title":" setup.cfg: Allow non-coverage of sys.exit(main())","body":"Related to #4166\nSplit off from #4169\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":7,"createdAt":"2018-07-29T03:06:48Z","updatedAt":"2018-08-09T16:03:09Z","closedAt":"2018-08-09T16:03:09Z","state":"merged","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5680","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzcwODkyMg==","url":"https://github.com/coala/coala/pull/5680#discussion_r207708922","bodyText":"We can have a alternate way, check this out https://medium.com/@george.shuklin/how-to-test-if-name-main-1928367290cb","diffHunk":"@@ -67,3 +67,4 @@ exclude_lines =\n   pragma ${PLATFORM_SYSTEM}: no cover\n   pragma ${OS_NAME}: no cover\n   pragma Python [0-9.,]*${PYTHON_VERSION}[0-9.,]*: no cover\n+  sys.exit\\(main\\(\\)\\)","author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzQ1MjEwNg==","createdAt":"2018-08-04T13:52:13Z","content":"THUMBS_UP","user":{"login":"jayvdb","name":"John Vandenberg"}}],"createdAt":"2018-08-04T13:39:36Z","lastEditedAt":null,"updatedAt":"2018-08-04T13:39:36Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwODk2ODExOQ==","url":"https://github.com/coala/coala/pull/5680#discussion_r208968119","bodyText":"I've explained on https://gitlab.com/coala/mobans/issues/84 why I think that is unnecessary.\nIf necessary, we have a check script which verifies that all entry points defined in the yaml have exactly these two lines at end of the file.  That prevents these sequences from being different in multiple entry points, and also ensures they are identical on all repos with entry points.","diffHunk":"@@ -67,3 +67,4 @@ exclude_lines =\n   pragma ${PLATFORM_SYSTEM}: no cover\n   pragma ${OS_NAME}: no cover\n   pragma Python [0-9.,]*${PYTHON_VERSION}[0-9.,]*: no cover\n+  sys.exit\\(main\\(\\)\\)","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzcwMTAxMw==","createdAt":"2018-08-09T15:33:48Z","content":"THUMBS_UP","user":{"login":"RaiVaibhav","name":"Vaibhav Rai"}}],"createdAt":"2018-08-09T15:10:46Z","lastEditedAt":null,"updatedAt":"2018-08-09T15:10:46Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMDQ5NDc4OQ==","url":"https://github.com/coala/coala/pull/5680#issuecomment-410494789","bodyText":"Also outdated - needs to use the new moban variables.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-05T04:23:01Z","lastEditedAt":null,"updatedAt":"2018-08-05T04:23:01Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1532969438000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5681","number":5681,"title":".coafile: Modify circleci config file location","body":"Related to #5375.\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":21,"createdAt":"2018-07-29T07:31:52Z","updatedAt":"2018-07-30T16:50:38Z","closedAt":"2018-07-30T16:50:38Z","state":"merged","user":{"login":"souravbadami","avatarUrl":"https://avatars0.githubusercontent.com/u/11073943?v=4"},"owner":{"login":"souravbadami","avatarUrl":"https://avatars0.githubusercontent.com/u/11073943?v=4"},"assignee":{"login":"kuthulas","avatarUrl":"https://avatars2.githubusercontent.com/u/7317359?v=4"},"labels":[{"name":"area/CI","color":"eb6420"},{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"importance/medium","color":"fbca04"},{"name":"size/XS","color":"00DE0F"},{"name":"type/codestyle","color":"d4c5f9"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5681","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDQwODY2MTM1Mw==","url":"https://github.com/coala/coala/pull/5681#issuecomment-408661353","bodyText":"If you change the commit message according to the guidelines I think the CIs should pass","diffHunk":null,"author":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4","name":"Palash Nigam"},"createdAt":"2018-07-29T08:39:32Z","lastEditedAt":null,"updatedAt":"2018-07-29T08:39:32Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQwODY2MTYxNw==","url":"https://github.com/coala/coala/pull/5681#issuecomment-408661617","bodyText":"@palash25 -- Updated. I hope it does.","diffHunk":null,"author":{"login":"souravbadami","avatarUrl":"https://avatars0.githubusercontent.com/u/11073943?v=4","name":"Sourav Badami"},"createdAt":"2018-07-29T08:44:54Z","lastEditedAt":null,"updatedAt":"2018-07-29T08:44:54Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQwODY2MTc5Nw==","url":"https://github.com/coala/coala/pull/5681#issuecomment-408661797","bodyText":"@souravbadami please read the whole commit guidelines doc first. It still has a few problems. Or you can just read the comments by the gitmate-bot and make the fixes accordingly.","diffHunk":null,"author":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4","name":"Palash Nigam"},"createdAt":"2018-07-29T08:48:55Z","lastEditedAt":null,"updatedAt":"2018-07-29T08:48:55Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQwODY3MDIxMg==","url":"https://github.com/coala/coala/pull/5681#issuecomment-408670212","bodyText":"@jayvdb -- Can we merge this ?","diffHunk":null,"author":{"login":"souravbadami","avatarUrl":"https://avatars0.githubusercontent.com/u/11073943?v=4","name":"Sourav Badami"},"createdAt":"2018-07-29T11:34:02Z","lastEditedAt":null,"updatedAt":"2018-07-29T11:34:02Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQwODY3NDI5NA==","url":"https://github.com/coala/coala/pull/5681#issuecomment-408674294","bodyText":"@souravbadami this isnt a bug, so the commit message should be Closes ...\n(the Circle CI config file moved; we should have changed .coafile in the PR, but it isnt a bug in the lines of code your are modifying -- it is a bug in our reviewing ;-))","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-07-29T12:23:32Z","lastEditedAt":null,"updatedAt":"2018-07-29T12:23:32Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQwODY3NDY4Ng==","url":"https://github.com/coala/coala/pull/5681#issuecomment-408674686","bodyText":"@jayvdb -- Yeah, modified and pushed!","diffHunk":null,"author":{"login":"souravbadami","avatarUrl":"https://avatars0.githubusercontent.com/u/11073943?v=4","name":"Sourav Badami"},"createdAt":"2018-07-29T12:30:03Z","lastEditedAt":null,"updatedAt":"2018-07-29T12:30:03Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1533476599000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5682","number":5682,"title":"BearRunning: Test exceptions","body":"For short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":4,"createdAt":"2018-07-31T00:17:59Z","updatedAt":"2018-08-05T13:43:19Z","closedAt":"2018-08-05T13:43:19Z","state":"merged","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"size/S","color":"B1CF0A"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5682","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzcyNzM3Mg==","url":"https://github.com/coala/coala/pull/5682#discussion_r207727372","bodyText":"Didn't get why do you calling run here one more time?\nSame in test_bear_impossible","diffHunk":"@@ -192,6 +192,79 @@ def test_evil_bear(self):\n             self.message_queue,\n             self.control_queue)\n \n+    def test_bear_debug(self):\n+        self.settings.append(Setting('cls', 'KeyboardInterrupt'))\n+        self.settings.append(Setting('msg', 'fake error'))\n+\n+        self.local_bear_list.append(\n+            RaiseTestExecuteBear(self.settings, self.message_queue))\n+\n+        self.file_name_queue.put('t')\n+        self.file_dict['t'] = []\n+\n+        with self.assertRaisesRegex(KeyboardInterrupt, 'fake error'):\n+            run(self.file_name_queue,\n+                self.local_bear_list,\n+                self.global_bear_list,\n+                self.global_bear_queue,\n+                self.file_dict,\n+                self.local_result_dict,\n+                self.global_result_dict,\n+                self.message_queue,\n+                self.control_queue,\n+                debug=True,\n+                )\n+\n+        self.file_name_queue.put('t')\n+        self.file_dict['t'] = []\n+\n+        run(self.file_name_queue,","author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"reactions":[],"createdAt":"2018-08-05T07:05:43Z","lastEditedAt":"2018-08-05T07:06:00Z","updatedAt":"2018-08-05T07:06:00Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzcyNzUwMg==","url":"https://github.com/coala/coala/pull/5682#discussion_r207727502","bodyText":"Nvm above ^^","diffHunk":"@@ -192,6 +192,79 @@ def test_evil_bear(self):\n             self.message_queue,\n             self.control_queue)\n \n+    def test_bear_debug(self):\n+        self.settings.append(Setting('cls', 'KeyboardInterrupt'))\n+        self.settings.append(Setting('msg', 'fake error'))\n+\n+        self.local_bear_list.append(\n+            RaiseTestExecuteBear(self.settings, self.message_queue))\n+\n+        self.file_name_queue.put('t')\n+        self.file_dict['t'] = []\n+\n+        with self.assertRaisesRegex(KeyboardInterrupt, 'fake error'):\n+            run(self.file_name_queue,\n+                self.local_bear_list,\n+                self.global_bear_list,\n+                self.global_bear_queue,\n+                self.file_dict,\n+                self.local_result_dict,\n+                self.global_result_dict,\n+                self.message_queue,\n+                self.control_queue,\n+                debug=True,\n+                )\n+\n+        self.file_name_queue.put('t')\n+        self.file_dict['t'] = []\n+\n+        run(self.file_name_queue,","author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"reactions":[],"createdAt":"2018-08-05T07:10:26Z","lastEditedAt":null,"updatedAt":"2018-08-05T07:10:26Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzcyNzU0NQ==","url":"https://github.com/coala/coala/pull/5682#discussion_r207727545","bodyText":"code repetition here, no need to reassign the same value","diffHunk":"@@ -192,6 +192,79 @@ def test_evil_bear(self):\n             self.message_queue,\n             self.control_queue)\n \n+    def test_bear_debug(self):\n+        self.settings.append(Setting('cls', 'KeyboardInterrupt'))\n+        self.settings.append(Setting('msg', 'fake error'))\n+\n+        self.local_bear_list.append(\n+            RaiseTestExecuteBear(self.settings, self.message_queue))\n+\n+        self.file_name_queue.put('t')\n+        self.file_dict['t'] = []\n+\n+        with self.assertRaisesRegex(KeyboardInterrupt, 'fake error'):\n+            run(self.file_name_queue,\n+                self.local_bear_list,\n+                self.global_bear_list,\n+                self.global_bear_queue,\n+                self.file_dict,\n+                self.local_result_dict,\n+                self.global_result_dict,\n+                self.message_queue,\n+                self.control_queue,\n+                debug=True,\n+                )\n+\n+        self.file_name_queue.put('t')","author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzQ2MzUzMQ==","createdAt":"2018-08-05T09:24:11Z","content":"THUMBS_DOWN","user":{"login":"RaiVaibhav","name":"Vaibhav Rai"}}],"createdAt":"2018-08-05T07:12:47Z","lastEditedAt":null,"updatedAt":"2018-08-05T07:12:47Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzcyNzU0Ng==","url":"https://github.com/coala/coala/pull/5682#discussion_r207727546","bodyText":"same ^^","diffHunk":"@@ -192,6 +192,79 @@ def test_evil_bear(self):\n             self.message_queue,\n             self.control_queue)\n \n+    def test_bear_debug(self):\n+        self.settings.append(Setting('cls', 'KeyboardInterrupt'))\n+        self.settings.append(Setting('msg', 'fake error'))\n+\n+        self.local_bear_list.append(\n+            RaiseTestExecuteBear(self.settings, self.message_queue))\n+\n+        self.file_name_queue.put('t')\n+        self.file_dict['t'] = []\n+\n+        with self.assertRaisesRegex(KeyboardInterrupt, 'fake error'):\n+            run(self.file_name_queue,\n+                self.local_bear_list,\n+                self.global_bear_list,\n+                self.global_bear_queue,\n+                self.file_dict,\n+                self.local_result_dict,\n+                self.global_result_dict,\n+                self.message_queue,\n+                self.control_queue,\n+                debug=True,\n+                )\n+\n+        self.file_name_queue.put('t')\n+        self.file_dict['t'] = []","author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzQ2MzUzNA==","createdAt":"2018-08-05T09:24:18Z","content":"THUMBS_DOWN","user":{"login":"RaiVaibhav","name":"Vaibhav Rai"}}],"createdAt":"2018-08-05T07:13:01Z","lastEditedAt":null,"updatedAt":"2018-08-05T07:13:01Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzczMDM0Ng==","url":"https://github.com/coala/coala/pull/5682#discussion_r207730346","bodyText":"The queue is empty after the previous coala run. Needs new items in the queue otherwise it does nothing in the next lines.","diffHunk":"@@ -192,6 +192,79 @@ def test_evil_bear(self):\n             self.message_queue,\n             self.control_queue)\n \n+    def test_bear_debug(self):\n+        self.settings.append(Setting('cls', 'KeyboardInterrupt'))\n+        self.settings.append(Setting('msg', 'fake error'))\n+\n+        self.local_bear_list.append(\n+            RaiseTestExecuteBear(self.settings, self.message_queue))\n+\n+        self.file_name_queue.put('t')\n+        self.file_dict['t'] = []\n+\n+        with self.assertRaisesRegex(KeyboardInterrupt, 'fake error'):\n+            run(self.file_name_queue,\n+                self.local_bear_list,\n+                self.global_bear_list,\n+                self.global_bear_queue,\n+                self.file_dict,\n+                self.local_result_dict,\n+                self.global_result_dict,\n+                self.message_queue,\n+                self.control_queue,\n+                debug=True,\n+                )\n+\n+        self.file_name_queue.put('t')","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-05T09:23:01Z","lastEditedAt":null,"updatedAt":"2018-08-05T09:23:01Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzczMDM2OA==","url":"https://github.com/coala/coala/pull/5682#discussion_r207730368","bodyText":"Oh yes 👍","diffHunk":"@@ -192,6 +192,79 @@ def test_evil_bear(self):\n             self.message_queue,\n             self.control_queue)\n \n+    def test_bear_debug(self):\n+        self.settings.append(Setting('cls', 'KeyboardInterrupt'))\n+        self.settings.append(Setting('msg', 'fake error'))\n+\n+        self.local_bear_list.append(\n+            RaiseTestExecuteBear(self.settings, self.message_queue))\n+\n+        self.file_name_queue.put('t')\n+        self.file_dict['t'] = []\n+\n+        with self.assertRaisesRegex(KeyboardInterrupt, 'fake error'):\n+            run(self.file_name_queue,\n+                self.local_bear_list,\n+                self.global_bear_list,\n+                self.global_bear_queue,\n+                self.file_dict,\n+                self.local_result_dict,\n+                self.global_result_dict,\n+                self.message_queue,\n+                self.control_queue,\n+                debug=True,\n+                )\n+\n+        self.file_name_queue.put('t')","author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"reactions":[],"createdAt":"2018-08-05T09:24:00Z","lastEditedAt":null,"updatedAt":"2018-08-05T09:24:00Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1533834643000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5684","number":5684,"title":"__main__.py: Invokes coala as module","body":"__main__.py: Invokes coala as module\nThis allow coala to be invoked as a module by\nusing the -m tag.\nCloses #5667\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":40,"createdAt":"2018-08-04T09:00:42Z","updatedAt":"2018-08-09T17:10:43Z","closedAt":null,"state":"open","user":{"login":"Naveenaidu","avatarUrl":"https://avatars1.githubusercontent.com/u/30195193?v=4"},"owner":{"login":"Naveenaidu","avatarUrl":"https://avatars1.githubusercontent.com/u/30195193?v=4"},"assignee":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"area/CLI","color":"006b75"},{"name":"difficulty/medium","color":"0052cc"},{"name":"importance/medium","color":"fbca04"},{"name":"type/feature","color":"0052cc"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5684","comments":[]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1533460157000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5686","number":5686,"title":"coala_main.py: Changed Variable name and value of STR_ENTER_NUMBER","body":"ConsoleInteraction.py: Changed Variable name and value of STR_ENTER_NUMBER\nChanged the Variable name from STR_ENTER_NUMBER to STR_ENTER_LETTER\nChanged the value of Variable from 'Enter number (Ctrl-D to exit)' to 'Enter letter (Ctrl-D to exit)'\nFixes #5685\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":5,"createdAt":"2018-08-04T18:23:38Z","updatedAt":"2018-08-05T09:09:17Z","closedAt":"2018-08-05T09:09:17Z","state":"closed","user":{"login":"Utkarsh1308","avatarUrl":"https://avatars0.githubusercontent.com/u/23418707?v=4"},"owner":{"login":"Utkarsh1308","avatarUrl":"https://avatars0.githubusercontent.com/u/23418707?v=4"},"assignee":{"login":"Utkarsh1308","avatarUrl":"https://avatars0.githubusercontent.com/u/23418707?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"00DE0F"},{"name":"type/bug","color":"e11d21"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5686","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzcyNTM1Ng==","url":"https://github.com/coala/coala/pull/5686#discussion_r207725356","bodyText":"This change is unnecessary. This changes the ouput message we get, when we call coala without the -A tag.","diffHunk":"@@ -75,7 +75,7 @@ def highlight_text(no_color, text, style, lexer=TextLexer()):\n                          'cannot be printed because it refers to a line '\n                          \"that doesn't seem to exist in the given file.\")\n STR_PROJECT_WIDE = 'Project wide:'\n-STR_ENTER_NUMBER = 'Enter number (Ctrl-{} to exit): '.format(\n+STR_ENTER_LETTER = 'Enter letter (Ctrl-{} to exit): '.format(","author":{"login":"Naveenaidu","avatarUrl":"https://avatars1.githubusercontent.com/u/30195193?v=4","name":"Naveen Naidu"},"createdAt":"2018-08-05T04:52:27Z","lastEditedAt":null,"updatedAt":"2018-08-05T04:52:27Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzcyNTM2Nw==","url":"https://github.com/coala/coala/pull/5686#discussion_r207725367","bodyText":"This change is unnecessary too. Please don't change it.","diffHunk":"@@ -654,7 +654,7 @@ def choose_action(console_printer, actions, apply_single=False):\n                 color_letter(console_printer, format_lines(output.format(\n                     i, action.desc), symbol='['))\n \n-            line = format_lines(STR_ENTER_NUMBER, symbol='[')\n+            line = format_lines(STR_ENTER_LETTER, symbol='[')","author":{"login":"Naveenaidu","avatarUrl":"https://avatars1.githubusercontent.com/u/30195193?v=4","name":"Naveen Naidu"},"createdAt":"2018-08-05T04:53:18Z","lastEditedAt":null,"updatedAt":"2018-08-05T04:53:18Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMDQ5NTg4Mw==","url":"https://github.com/coala/coala/pull/5686#issuecomment-410495883","bodyText":"Please change your shortlog of the commit message. Refer Writing Commit message","diffHunk":null,"author":{"login":"Naveenaidu","avatarUrl":"https://avatars1.githubusercontent.com/u/30195193?v=4","name":"Naveen Naidu"},"createdAt":"2018-08-05T04:56:50Z","lastEditedAt":null,"updatedAt":"2018-08-05T04:56:50Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMDUwNjUwMQ==","url":"https://github.com/coala/coala/pull/5686#issuecomment-410506501","bodyText":"I am closing this I'll send you a new pull request","diffHunk":null,"author":{"login":"Utkarsh1308","avatarUrl":"https://avatars0.githubusercontent.com/u/23418707?v=4","name":"Utkarsh Sharma"},"createdAt":"2018-08-05T09:09:17Z","lastEditedAt":null,"updatedAt":"2018-08-05T09:09:17Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1533559899000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5687","number":5687,"title":"coala_main.py: Change variable name and value","body":"Changed the Variable name from STR_ENTER_NUMBER to STR_ENTER_LETTER\nChanged the value of Variable from 'Enter number (Ctrl-D to exit)' to 'Enter letter (Ctrl-D to exit)'\nFixes #5685\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":25,"createdAt":"2018-08-05T09:09:48Z","updatedAt":"2018-08-06T12:51:39Z","closedAt":"2018-08-06T11:35:54Z","state":"merged","user":{"login":"Utkarsh1308","avatarUrl":"https://avatars0.githubusercontent.com/u/23418707?v=4"},"owner":{"login":"Utkarsh1308","avatarUrl":"https://avatars0.githubusercontent.com/u/23418707?v=4"},"assignee":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4"},"labels":[{"name":"difficulty/medium","color":"0052cc"},{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"importance/low","color":"70E870"},{"name":"process/needs rebase","color":"e52db1"},{"name":"size/XS","color":"00DE0F"},{"name":"type/bug","color":"e11d21"},{"name":"type/feature","color":"0052cc"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5687","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDQxMDUyMjk0OA==","url":"https://github.com/coala/coala/pull/5687#issuecomment-410522948","bodyText":"@Utkarsh1308 , please rebase.  And also please change the two capital V to lowercase v in your commit shortlog.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-05T14:13:31Z","lastEditedAt":null,"updatedAt":"2018-08-05T14:13:31Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMDUyOTAyMQ==","url":"https://github.com/coala/coala/pull/5687#issuecomment-410529021","bodyText":"Still needs to be rebased.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-05T15:50:22Z","lastEditedAt":null,"updatedAt":"2018-08-05T15:50:22Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMDUzMTIxMw==","url":"https://github.com/coala/coala/pull/5687#issuecomment-410531213","bodyText":"That is not how you rebase according to https://coala.io/git","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-05T16:24:19Z","lastEditedAt":null,"updatedAt":"2018-08-05T16:24:19Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMDU2MTk2Mw==","url":"https://github.com/coala/coala/pull/5687#issuecomment-410561963","bodyText":"Still needs to be rebased.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-06T00:58:03Z","lastEditedAt":null,"updatedAt":"2018-08-06T00:58:03Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1533872004000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5688","number":5688,"title":"Modified:   coalib/parsing/CliParsing.py","body":"Changed variable name comment_seperators to comment_separators.\nFixes #5510\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!","comments":6,"createdAt":"2018-08-05T11:14:18Z","updatedAt":"2018-08-10T03:33:24Z","closedAt":"2018-08-10T03:33:24Z","state":"closed","user":{"login":"shashwatmishra76","avatarUrl":"https://avatars2.githubusercontent.com/u/24711156?v=4"},"owner":{"login":"shashwatmishra76","avatarUrl":"https://avatars2.githubusercontent.com/u/24711156?v=4"},"assignee":{"login":"shashwatmishra76","avatarUrl":"https://avatars2.githubusercontent.com/u/24711156?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/low","color":"207de5"},{"name":"importance/low","color":"70E870"},{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5688","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDQxMDUzMzQ1Nw==","url":"https://github.com/coala/coala/pull/5688#issuecomment-410533457","bodyText":"@jayvdb This PR got a label of newcomer.So,this should be ready for reviewing from your side,right?","diffHunk":null,"author":{"login":"shashwatmishra76","avatarUrl":"https://avatars2.githubusercontent.com/u/24711156?v=4","name":"Shashwat Mishra"},"createdAt":"2018-08-05T17:03:01Z","lastEditedAt":null,"updatedAt":"2018-08-05T17:03:01Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMDUzNDI1Mw==","url":"https://github.com/coala/coala/pull/5688#issuecomment-410534253","bodyText":"Get rid of the incorrect attempt at fixing the typo. It is wrong. You are not assigned to do\n#5510 (comment)","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-05T17:15:50Z","lastEditedAt":null,"updatedAt":"2018-08-05T17:15:50Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMTk2NTQxMw==","url":"https://github.com/coala/coala/pull/5688#issuecomment-411965413","bodyText":"Duplicate of #5696","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-10T03:33:24Z","lastEditedAt":null,"updatedAt":"2018-08-10T03:33:24Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1533896454000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5690","number":5690,"title":"Section Tags Filter","body":"PTAL cEP-0028","comments":5,"createdAt":"2018-08-05T15:20:05Z","updatedAt":"2018-08-10T10:20:54Z","closedAt":"2018-08-10T10:20:54Z","state":"merged","user":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4"},"owner":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4"},"labels":[{"name":"size/M","color":"eb6420"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5690","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzc0MDMwMg==","url":"https://github.com/coala/coala/pull/5690#discussion_r207740302","bodyText":"This belongs before --bear-dirs , probably after --files .\nLets wait for more feedback on position","diffHunk":"@@ -177,6 +177,10 @@ def default_arg_parser(formatter_class=None):\n         '-d', '--bear-dirs', type=PathArg, nargs='+', metavar='DIR',\n         help='additional directories which may contain bears')\n \n+    inputs_group.add_argument(","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzQ2Nzg1NA==","createdAt":"2018-08-05T15:44:01Z","content":"THUMBS_UP","user":{"login":"ksdme","name":"Kilari Teja"}}],"createdAt":"2018-08-05T15:35:45Z","lastEditedAt":null,"updatedAt":"2018-08-05T15:35:45Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzc0MDMzMA==","url":"https://github.com/coala/coala/pull/5690#discussion_r207740330","bodyText":"please use exampes from your cEP, and your own real needs.\nthis looks like language , not a tag which should be an arbitrary grouping which couldnt be achieved via any other means.","diffHunk":"@@ -49,6 +55,37 @@ def apply_filter(filter_name, filter_args, all_bears=None):\n     return local_bears, global_bears\n \n \n+def apply_section_filter(filter_name, filter_args, all_sections):\n+    \"\"\"\n+    Returns sections after filtering based on ``filter_args``. It returns\n+    all sections if nothing is present in ``filter_args``.\n+\n+    :param filter_name:\n+        Name of the filter.\n+    :param filter_args:\n+        Arguments of the filter to be passed in.\n+        For example:\n+        ``['tags', ('java',)]``","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzQ2NzgzOA==","createdAt":"2018-08-05T15:42:57Z","content":"THUMBS_UP","user":{"login":"ksdme","name":"Kilari Teja"}}],"createdAt":"2018-08-05T15:37:04Z","lastEditedAt":null,"updatedAt":"2018-08-05T15:37:04Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzc0MDM1MA==","url":"https://github.com/coala/coala/pull/5690#discussion_r207740350","bodyText":"again, dont use tags that are a language .  it is confusing.","diffHunk":"@@ -68,3 +105,53 @@ def apply_filters(filters, bears=None):\n         filter_name, *filter_args = filter\n         bears = apply_filter(filter_name, filter_args, bears)\n     return bears\n+\n+\n+def apply_section_filters(filters, sections):\n+    \"\"\"\n+    Returns sections after filtering based on ``filters``. It returns\n+    intersection of sections if more than one element is present in ``filters``\n+    list.\n+\n+    :param filters:\n+        List of args based on ``sections`` has to be filtered.\n+        For example:\n+        ``[['tags', ('save', 'change')], ['exclude', ('css', '!python')]]``","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzQ2NzgzOQ==","createdAt":"2018-08-05T15:43:09Z","content":"THUMBS_UP","user":{"login":"ksdme","name":"Kilari Teja"}}],"createdAt":"2018-08-05T15:38:06Z","lastEditedAt":null,"updatedAt":"2018-08-05T15:38:06Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzc0MDQ0Mw==","url":"https://github.com/coala/coala/pull/5690#discussion_r207740443","bodyText":"move the '-c', back to the next line, so you dont modify that line.\nit is also confusing to have the '-c', on this line when its arg is on the next line.","diffHunk":"@@ -198,12 +198,16 @@ def test_merge_defaults(self):\n                 gather_configuration(lambda *args: True,\n                                      self.log_printer,\n                                      arg_list=['-S', 'value=1', 'test.value=2',\n-                                               '-c', escape(temporary, '\\\\')] +\n+                                               '--tags', 'save', '-c',","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzQ2Nzg0NA==","createdAt":"2018-08-05T15:43:20Z","content":"THUMBS_UP","user":{"login":"ksdme","name":"Kilari Teja"}}],"createdAt":"2018-08-05T15:41:19Z","lastEditedAt":null,"updatedAt":"2018-08-05T15:41:19Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzc0MDUyNw==","url":"https://github.com/coala/coala/pull/5690#discussion_r207740527","bodyText":"I used them as examples, but I will update it.","diffHunk":"@@ -49,6 +55,37 @@ def apply_filter(filter_name, filter_args, all_bears=None):\n     return local_bears, global_bears\n \n \n+def apply_section_filter(filter_name, filter_args, all_sections):\n+    \"\"\"\n+    Returns sections after filtering based on ``filter_args``. It returns\n+    all sections if nothing is present in ``filter_args``.\n+\n+    :param filter_name:\n+        Name of the filter.\n+    :param filter_args:\n+        Arguments of the filter to be passed in.\n+        For example:\n+        ``['tags', ('java',)]``","author":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4","name":"Kilari Teja"},"reactions":[],"createdAt":"2018-08-05T15:43:43Z","lastEditedAt":null,"updatedAt":"2018-08-05T15:43:43Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzc0MDk4MA==","url":"https://github.com/coala/coala/pull/5690#discussion_r207740980","bodyText":"Currently,\nInputs:\n  -b, --bears           names of bears to use\n  -f, --files           files that should be checked\n  -i, --ignore          files that should be ignored\n  --limit-files         filter the `--files` argument's matches further\n  -d, --bear-dirs       additional directories which may contain bears\n  -t, --tags            tags of sections to execute\n\nI think tags should definitely be above bear-dirs.","diffHunk":"@@ -177,6 +177,10 @@ def default_arg_parser(formatter_class=None):\n         '-d', '--bear-dirs', type=PathArg, nargs='+', metavar='DIR',\n         help='additional directories which may contain bears')\n \n+    inputs_group.add_argument(","author":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4","name":"Kilari Teja"},"reactions":[],"createdAt":"2018-08-05T15:59:29Z","lastEditedAt":null,"updatedAt":"2018-08-05T15:59:29Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzc2NDM1MQ==","url":"https://github.com/coala/coala/pull/5690#discussion_r207764351","bodyText":"nope.\nlets improve the filters system to support sections.\ndef foo_filter(thing, args):\nevery filter than checks whether is knows what is in thing, e.g. using isinstance , and raises NotImplementedError if it doesnt get it.  Existing filters only know about Bear.\nYou make a small chance to the existing filters to make them compliant with the new API by adding a raise NotImplementedError to them.\n(Actually most of them understand could easily be improved to understand Section, but that is beyond the scope of your change, and each will need to be carefully done wrt the CLI args to ensure we build a good user experience)","diffHunk":"@@ -1,11 +1,17 @@\n from coalib.parsing.InvalidFilterException import InvalidFilterException\n-from coalib.parsing.filters import available_filters\n+from coalib.parsing.filters import (\n+    available_filters, available_section_filters)\n+from coalib.parsing.DefaultArgParser import default_arg_parser\n \n \n def is_valid_filter(filter):\n     return filter in available_filters\n \n \n+def is_valid_section_filter(filter):","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-06T02:54:27Z","lastEditedAt":null,"updatedAt":"2018-08-06T02:54:27Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzc2NDU3MQ==","url":"https://github.com/coala/coala/pull/5690#discussion_r207764571","bodyText":"not needed.  below you would catch NotImplementedError and ignore it.","diffHunk":"@@ -49,6 +55,37 @@ def apply_filter(filter_name, filter_args, all_bears=None):\n     return local_bears, global_bears\n \n \n+def apply_section_filter(filter_name, filter_args, all_sections):\n+    \"\"\"\n+    Returns sections after filtering based on ``filter_args``. It returns\n+    all sections if nothing is present in ``filter_args``.\n+\n+    :param filter_name:\n+        Name of the filter.\n+    :param filter_args:\n+        Arguments of the filter to be passed in.\n+        For example:\n+        ``['tag_section_filter', ('save', 'change')]``\n+    :param all_sections:\n+        List of sections on which filter is to be applied.\n+    :return:\n+        Filtered sections based on a single section filter.\n+    \"\"\"\n+    if not is_valid_section_filter(filter_name):\n+        raise InvalidFilterException(filter_name)\n+    if not filter_args or len(filter_args) == 0:\n+        return all_sections\n+\n+    filter_function = available_section_filters[filter_name]","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-06T02:57:03Z","lastEditedAt":null,"updatedAt":"2018-08-06T02:57:03Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzc2NDgxMA==","url":"https://github.com/coala/coala/pull/5690#discussion_r207764810","bodyText":"I agree with @shreyans800755 that this doesnt belong in the filter.\nksdme@f8fc69c#r29964403\nThe cli section should be kept hidden inside coalib/settings, as a special case implementation detail.  It annoys me that we have any UI messages that mention this section -- the user cant see it, so they shouldnt hear about it.\nAnd likewise developers in other parts of coalib shouldnt need to deal with that section.","diffHunk":"@@ -0,0 +1,21 @@\n+def tag_section_filter(section, args):\n+    \"\"\"\n+    Filters the sections by ``tags``. ``cli`` is always accepted.\n+\n+    :param section: Section object.\n+    :param args:    Set of tags on which ``section`` is to be filtered.\n+    :return:        ``True`` if this section matches the criteria inside args,\n+                    ``False`` otherwise.\n+    \"\"\"\n+    if section.name == 'cli':","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-06T03:00:04Z","lastEditedAt":null,"updatedAt":"2018-08-06T03:00:04Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzc2OTAxOQ==","url":"https://github.com/coala/coala/pull/5690#discussion_r207769019","bodyText":"I think we could remove the last ,","diffHunk":"@@ -159,6 +161,15 @@ def run_coala(console_printer=None,\n                 (section_name, sections[section_name])\n                 for section_name in targets)\n \n+        # Collect all the section filters which are based on args,","author":{"login":"gaocegege","avatarUrl":"https://avatars3.githubusercontent.com/u/5100735?v=4","name":"Ce Gao"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzQ5NDg1MQ==","createdAt":"2018-08-06T11:33:29Z","content":"THUMBS_UP","user":{"login":"ksdme","name":"Kilari Teja"}}],"createdAt":"2018-08-06T03:54:24Z","lastEditedAt":null,"updatedAt":"2018-08-06T03:54:24Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwODAyNTA0OQ==","url":"https://github.com/coala/coala/pull/5690#discussion_r208025049","bodyText":"Let's call it items rather than things","diffHunk":"@@ -49,22 +50,83 @@ def apply_filter(filter_name, filter_args, all_bears=None):\n     return local_bears, global_bears\n \n \n-def apply_filters(filters, bears=None):\n+def _apply_section_filter(filter_name, filter_args, all_sections):\n     \"\"\"\n-    Returns bears after filtering based on ``filters``. It returns\n-    intersection of bears if more than one element is present in ``filters``\n-    list.\n+    Returns sections after filtering based on ``filter_args``. It\n+    returns all sections if nothing is present in ``filter_args``.\n+\n+    :param filter_name:\n+        Name of the section filter.\n+    :param filter_args:\n+        Arguments to be passed to the filter. For example:\n+        ``['section_tags', ('save', 'change')]``\n+    :param all_sections:\n+        List of all sections on which filter is to be applied.\n+    :return:\n+        Filtered sections based on a single section filter.\n+    \"\"\"\n+    if not is_valid_filter(filter_name):\n+        raise InvalidFilterException(filter_name)\n+    if not filter_args or len(filter_args) == 0:\n+        return all_sections\n+\n+    filter_function = available_filters[filter_name]\n+    filtered_sections = []\n+\n+    for section in all_sections:\n+        if filter_function(section, filter_args):\n+            filtered_sections += [section]\n+\n+    return filtered_sections\n+\n+\n+def apply_filters(filters, bears=None, sections=None):\n+    \"\"\"\n+    Returns bears or sections after filtering based on ``filters``.\n+    It returns intersection if more than one element is present in\n+    ``filters`` list. Either bears or sections need to be passed,\n+    if both or none are passed it defaults to use bears gathering\n+    and runs filter in bear filtering mode.\n \n     :param filters:\n-        List of args based on ``bears`` has to be filtered.\n-        For example:\n-        ``[['language', 'c', 'java'], ['can_fix', 'syntax']]``\n+        List of args based on ``bears`` has to be filtered. For example:\n+        ``[['language', 'c', 'java'], ['can_fix', 'syntax'],\n+        ['section_tags', 'save']]``\n     :param bears:\n         The bears to filter.\n+    :param sections:\n+        The sections to filter.\n     :return:\n-        Filtered bears.\n+        Filtered bears or sections.\n     \"\"\"\n+    things = bears","author":{"login":"shreyans800755","avatarUrl":"https://avatars2.githubusercontent.com/u/3727351?v=4","name":"Shreyans"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzUyNzAxOA==","createdAt":"2018-08-06T21:48:44Z","content":"THUMBS_UP","user":{"login":"jayvdb","name":"John Vandenberg"}}],"createdAt":"2018-08-06T20:50:01Z","lastEditedAt":null,"updatedAt":"2018-08-06T20:50:01Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwODAyNTQ0OQ==","url":"https://github.com/coala/coala/pull/5690#discussion_r208025449","bodyText":"Do we have any practical case for this condition ?\nIf so, is there way we can check this before calling this function ?","diffHunk":"@@ -49,22 +50,83 @@ def apply_filter(filter_name, filter_args, all_bears=None):\n     return local_bears, global_bears\n \n \n-def apply_filters(filters, bears=None):\n+def _apply_section_filter(filter_name, filter_args, all_sections):\n     \"\"\"\n-    Returns bears after filtering based on ``filters``. It returns\n-    intersection of bears if more than one element is present in ``filters``\n-    list.\n+    Returns sections after filtering based on ``filter_args``. It\n+    returns all sections if nothing is present in ``filter_args``.\n+\n+    :param filter_name:\n+        Name of the section filter.\n+    :param filter_args:\n+        Arguments to be passed to the filter. For example:\n+        ``['section_tags', ('save', 'change')]``\n+    :param all_sections:\n+        List of all sections on which filter is to be applied.\n+    :return:\n+        Filtered sections based on a single section filter.\n+    \"\"\"\n+    if not is_valid_filter(filter_name):\n+        raise InvalidFilterException(filter_name)\n+    if not filter_args or len(filter_args) == 0:\n+        return all_sections\n+\n+    filter_function = available_filters[filter_name]\n+    filtered_sections = []\n+\n+    for section in all_sections:\n+        if filter_function(section, filter_args):\n+            filtered_sections += [section]\n+\n+    return filtered_sections\n+\n+\n+def apply_filters(filters, bears=None, sections=None):\n+    \"\"\"\n+    Returns bears or sections after filtering based on ``filters``.\n+    It returns intersection if more than one element is present in\n+    ``filters`` list. Either bears or sections need to be passed,\n+    if both or none are passed it defaults to use bears gathering\n+    and runs filter in bear filtering mode.\n \n     :param filters:\n-        List of args based on ``bears`` has to be filtered.\n-        For example:\n-        ``[['language', 'c', 'java'], ['can_fix', 'syntax']]``\n+        List of args based on ``bears`` has to be filtered. For example:\n+        ``[['language', 'c', 'java'], ['can_fix', 'syntax'],\n+        ['section_tags', 'save']]``\n     :param bears:\n         The bears to filter.\n+    :param sections:\n+        The sections to filter.\n     :return:\n-        Filtered bears.\n+        Filtered bears or sections.\n     \"\"\"\n+    things = bears\n+    applier = apply_filter\n+    if sections is not None:\n+        things = sections\n+        applier = _apply_section_filter\n+\n     for filter in filters:\n         filter_name, *filter_args = filter\n-        bears = apply_filter(filter_name, filter_args, bears)\n-    return bears\n+        things = applier(filter_name, filter_args, things)\n+    return things\n+\n+\n+def collect_filters(args, arg_list=None, arg_parser=None):\n+    \"\"\"\n+    Collects all filters from based on cli arguments.\n+\n+    :param args:\n+        Parsed CLI args using which the filters are to be collected.\n+    :param arg_list:\n+        The CLI argument list.\n+    :param arg_parser:\n+        Instance of ArgParser that is used to parse arg list.\n+    :return:\n+        List of filters in standard filter format, i.e\n+        ``[['filter_name', 'arg1', 'arg2']]``.\n+    \"\"\"\n+    if args is None:","author":{"login":"shreyans800755","avatarUrl":"https://avatars2.githubusercontent.com/u/3727351?v=4","name":"Shreyans"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzUyNzIyNw==","createdAt":"2018-08-06T21:53:21Z","content":"THUMBS_UP","user":{"login":"jayvdb","name":"John Vandenberg"}}],"createdAt":"2018-08-06T20:51:36Z","lastEditedAt":null,"updatedAt":"2018-08-06T20:51:36Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwODAyNTU4NA==","url":"https://github.com/coala/coala/pull/5690#discussion_r208025584","bodyText":"Because this is not the job of this function. This function is just a getter","diffHunk":"@@ -49,22 +50,83 @@ def apply_filter(filter_name, filter_args, all_bears=None):\n     return local_bears, global_bears\n \n \n-def apply_filters(filters, bears=None):\n+def _apply_section_filter(filter_name, filter_args, all_sections):\n     \"\"\"\n-    Returns bears after filtering based on ``filters``. It returns\n-    intersection of bears if more than one element is present in ``filters``\n-    list.\n+    Returns sections after filtering based on ``filter_args``. It\n+    returns all sections if nothing is present in ``filter_args``.\n+\n+    :param filter_name:\n+        Name of the section filter.\n+    :param filter_args:\n+        Arguments to be passed to the filter. For example:\n+        ``['section_tags', ('save', 'change')]``\n+    :param all_sections:\n+        List of all sections on which filter is to be applied.\n+    :return:\n+        Filtered sections based on a single section filter.\n+    \"\"\"\n+    if not is_valid_filter(filter_name):\n+        raise InvalidFilterException(filter_name)\n+    if not filter_args or len(filter_args) == 0:\n+        return all_sections\n+\n+    filter_function = available_filters[filter_name]\n+    filtered_sections = []\n+\n+    for section in all_sections:\n+        if filter_function(section, filter_args):\n+            filtered_sections += [section]\n+\n+    return filtered_sections\n+\n+\n+def apply_filters(filters, bears=None, sections=None):\n+    \"\"\"\n+    Returns bears or sections after filtering based on ``filters``.\n+    It returns intersection if more than one element is present in\n+    ``filters`` list. Either bears or sections need to be passed,\n+    if both or none are passed it defaults to use bears gathering\n+    and runs filter in bear filtering mode.\n \n     :param filters:\n-        List of args based on ``bears`` has to be filtered.\n-        For example:\n-        ``[['language', 'c', 'java'], ['can_fix', 'syntax']]``\n+        List of args based on ``bears`` has to be filtered. For example:\n+        ``[['language', 'c', 'java'], ['can_fix', 'syntax'],\n+        ['section_tags', 'save']]``\n     :param bears:\n         The bears to filter.\n+    :param sections:\n+        The sections to filter.\n     :return:\n-        Filtered bears.\n+        Filtered bears or sections.\n     \"\"\"\n+    things = bears\n+    applier = apply_filter\n+    if sections is not None:\n+        things = sections\n+        applier = _apply_section_filter\n+\n     for filter in filters:\n         filter_name, *filter_args = filter\n-        bears = apply_filter(filter_name, filter_args, bears)\n-    return bears\n+        things = applier(filter_name, filter_args, things)\n+    return things\n+\n+\n+def collect_filters(args, arg_list=None, arg_parser=None):\n+    \"\"\"\n+    Collects all filters from based on cli arguments.\n+\n+    :param args:\n+        Parsed CLI args using which the filters are to be collected.\n+    :param arg_list:\n+        The CLI argument list.\n+    :param arg_parser:\n+        Instance of ArgParser that is used to parse arg list.\n+    :return:\n+        List of filters in standard filter format, i.e\n+        ``[['filter_name', 'arg1', 'arg2']]``.\n+    \"\"\"\n+    if args is None:","author":{"login":"shreyans800755","avatarUrl":"https://avatars2.githubusercontent.com/u/3727351?v=4","name":"Shreyans"},"reactions":[],"createdAt":"2018-08-06T20:52:04Z","lastEditedAt":null,"updatedAt":"2018-08-06T20:52:04Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwODA0MDI2MA==","url":"https://github.com/coala/coala/pull/5690#discussion_r208040260","bodyText":"move this after the apply_filters function so that the diff better aligns, and probably at the end as it is a private function","diffHunk":"@@ -49,22 +50,83 @@ def apply_filter(filter_name, filter_args, all_bears=None):\n     return local_bears, global_bears\n \n \n-def apply_filters(filters, bears=None):\n+def _apply_section_filter(filter_name, filter_args, all_sections):","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzU0MDIyOA==","createdAt":"2018-08-07T06:01:04Z","content":"THUMBS_UP","user":{"login":"ksdme","name":"Kilari Teja"}}],"createdAt":"2018-08-06T21:49:53Z","lastEditedAt":null,"updatedAt":"2018-08-06T21:49:53Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwODA0MTM1Nw==","url":"https://github.com/coala/coala/pull/5690#discussion_r208041357","bodyText":"It looks like a helper for the tests , so should be moved into the tests.","diffHunk":"@@ -49,22 +50,83 @@ def apply_filter(filter_name, filter_args, all_bears=None):\n     return local_bears, global_bears\n \n \n-def apply_filters(filters, bears=None):\n+def _apply_section_filter(filter_name, filter_args, all_sections):\n     \"\"\"\n-    Returns bears after filtering based on ``filters``. It returns\n-    intersection of bears if more than one element is present in ``filters``\n-    list.\n+    Returns sections after filtering based on ``filter_args``. It\n+    returns all sections if nothing is present in ``filter_args``.\n+\n+    :param filter_name:\n+        Name of the section filter.\n+    :param filter_args:\n+        Arguments to be passed to the filter. For example:\n+        ``['section_tags', ('save', 'change')]``\n+    :param all_sections:\n+        List of all sections on which filter is to be applied.\n+    :return:\n+        Filtered sections based on a single section filter.\n+    \"\"\"\n+    if not is_valid_filter(filter_name):\n+        raise InvalidFilterException(filter_name)\n+    if not filter_args or len(filter_args) == 0:\n+        return all_sections\n+\n+    filter_function = available_filters[filter_name]\n+    filtered_sections = []\n+\n+    for section in all_sections:\n+        if filter_function(section, filter_args):\n+            filtered_sections += [section]\n+\n+    return filtered_sections\n+\n+\n+def apply_filters(filters, bears=None, sections=None):\n+    \"\"\"\n+    Returns bears or sections after filtering based on ``filters``.\n+    It returns intersection if more than one element is present in\n+    ``filters`` list. Either bears or sections need to be passed,\n+    if both or none are passed it defaults to use bears gathering\n+    and runs filter in bear filtering mode.\n \n     :param filters:\n-        List of args based on ``bears`` has to be filtered.\n-        For example:\n-        ``[['language', 'c', 'java'], ['can_fix', 'syntax']]``\n+        List of args based on ``bears`` has to be filtered. For example:\n+        ``[['language', 'c', 'java'], ['can_fix', 'syntax'],\n+        ['section_tags', 'save']]``\n     :param bears:\n         The bears to filter.\n+    :param sections:\n+        The sections to filter.\n     :return:\n-        Filtered bears.\n+        Filtered bears or sections.\n     \"\"\"\n+    things = bears\n+    applier = apply_filter\n+    if sections is not None:\n+        things = sections\n+        applier = _apply_section_filter\n+\n     for filter in filters:\n         filter_name, *filter_args = filter\n-        bears = apply_filter(filter_name, filter_args, bears)\n-    return bears\n+        things = applier(filter_name, filter_args, things)\n+    return things\n+\n+\n+def collect_filters(args, arg_list=None, arg_parser=None):\n+    \"\"\"\n+    Collects all filters from based on cli arguments.\n+\n+    :param args:\n+        Parsed CLI args using which the filters are to be collected.\n+    :param arg_list:\n+        The CLI argument list.\n+    :param arg_parser:\n+        Instance of ArgParser that is used to parse arg list.\n+    :return:\n+        List of filters in standard filter format, i.e\n+        ``[['filter_name', 'arg1', 'arg2']]``.\n+    \"\"\"\n+    if args is None:","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-06T21:54:38Z","lastEditedAt":null,"updatedAt":"2018-08-06T21:54:38Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwODA0MjA4Ng==","url":"https://github.com/coala/coala/pull/5690#discussion_r208042086","bodyText":"(almost) very generic ... belongs in coala_utils::decorators.py\nand this is enforce_duck_type or enforce_duct_tape ? ;-)\nand to make calling generic, use\n@typed_filter(bear='bearclass')\ndef language_filter(bear, args):\n```","diffHunk":"@@ -0,0 +1,42 @@\n+from inspect import getmro\n+from functools import wraps\n+\n+\n+def typed_filter(type_classes, msg=None):","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzU0MDM0Mw==","createdAt":"2018-08-07T06:04:06Z","content":"THUMBS_UP","user":{"login":"ksdme","name":"Kilari Teja"}},{"id":"MDg6UmVhY3Rpb24yNzc1MjkyNQ==","createdAt":"2018-08-10T13:30:01Z","content":"THUMBS_UP","user":{"login":"aashutoshrathi","name":"Aashutosh Rathi"}}],"createdAt":"2018-08-06T21:58:04Z","lastEditedAt":null,"updatedAt":"2018-08-06T21:58:04Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwODA0MjI0OA==","url":"https://github.com/coala/coala/pull/5690#discussion_r208042248","bodyText":"thing -> obj or object_","diffHunk":"@@ -0,0 +1,42 @@\n+from inspect import getmro\n+from functools import wraps\n+\n+\n+def typed_filter(type_classes, msg=None):\n+    \"\"\"\n+    Used to enforce type of the first argument of a method\n+    by its class name as string. Raises NotImplementedError\n+    if the type does not match. Primarily used to enforce\n+    type of a filter.\n+\n+    :param type_classes:    list or tuple of acceptable class names\n+                            as strings for the first argument of the\n+                            method being decorated.\n+    :param msg:             Message to pass with NotImplementedError.\n+    \"\"\"\n+    if (type(type_classes) not in (tuple, list)):\n+        type_classes = (type_classes,)\n+\n+    def decorator(filter):\n+\n+        @wraps(filter)\n+        def decorated_filter(thing, *args, **kargs):","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzU0MDIwMA==","createdAt":"2018-08-07T06:00:22Z","content":"THUMBS_UP","user":{"login":"ksdme","name":"Kilari Teja"}}],"createdAt":"2018-08-06T21:58:48Z","lastEditedAt":null,"updatedAt":"2018-08-06T21:58:48Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwODA0MzI0NA==","url":"https://github.com/coala/coala/pull/5690#discussion_r208043244","bodyText":"it was going so well until you mentioned filter here.\nthe thing you are wrapping has a name, which you are using here.\nThis decorator is a developer helper ... to catch when they have done the wrong thing.  it shouldnt give pretty names ... the caller needs to detect this and make it user-friendly.\nWhy should a NotImplementedError say \"language_filter filter\" .. ?  language_filter is better, and the backtrace is even better, so no need to tidy it up.\nTo help, create a subclass of NotImplementedError and stuff into it extra attributes to record what went wrong, such as the callee, expected classes, and the incorrect object which was encountered.   Then whoever is catching it can understand what went wrong and create a user-friendly message.","diffHunk":"@@ -0,0 +1,42 @@\n+from inspect import getmro\n+from functools import wraps\n+\n+\n+def typed_filter(type_classes, msg=None):\n+    \"\"\"\n+    Used to enforce type of the first argument of a method\n+    by its class name as string. Raises NotImplementedError\n+    if the type does not match. Primarily used to enforce\n+    type of a filter.\n+\n+    :param type_classes:    list or tuple of acceptable class names\n+                            as strings for the first argument of the\n+                            method being decorated.\n+    :param msg:             Message to pass with NotImplementedError.\n+    \"\"\"\n+    if (type(type_classes) not in (tuple, list)):\n+        type_classes = (type_classes,)\n+\n+    def decorator(filter):\n+\n+        @wraps(filter)\n+        def decorated_filter(thing, *args, **kargs):\n+            thing_class = thing.__class__\n+            all_bases = list(map(lambda klass: klass.__name__,\n+                                 getmro(thing_class)))\n+\n+            for type_class in type_classes:\n+                if str(type_class) in all_bases:\n+                    break\n+            else:\n+                raise NotImplementedError(\n+                    msg or '\\'{filter}\\' filter can only handle {type_name}. '","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-06T22:03:35Z","lastEditedAt":null,"updatedAt":"2018-08-06T22:03:35Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwODA0NDM1Nw==","url":"https://github.com/coala/coala/pull/5690#discussion_r208044357","bodyText":"section_tag_filter","diffHunk":"@@ -0,0 +1,31 @@\n+from coalib.parsing.filters.decorators import typed_filter\n+\n+\n+@typed_filter(('bearclass', 'Bear', 'Section'))\n+def tag_section_filter(section_or_bear, args):","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzUzOTkxNQ==","createdAt":"2018-08-07T05:50:37Z","content":"THUMBS_UP","user":{"login":"ksdme","name":"Kilari Teja"}}],"createdAt":"2018-08-06T22:09:14Z","lastEditedAt":null,"updatedAt":"2018-08-06T22:09:14Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwODEwODU2MA==","url":"https://github.com/coala/coala/pull/5690#discussion_r208108560","bodyText":"run_coala\n\n:param arg_parser:        Instance of ArgParser that is used to non-setting arguments.\n:param arg_list:              The CLI argument list.\n:param args:                   Alternative pre-parsed CLI arguments.\n\nThis is not just about the tests, since args to run_coala() can be optionally passed instead of arg_list, I think we need to merge opts from both, so as to enable the internal usage of this filter. Tests also use can use this by directly calling run_coala() with an arg list.","diffHunk":"@@ -49,22 +50,83 @@ def apply_filter(filter_name, filter_args, all_bears=None):\n     return local_bears, global_bears\n \n \n-def apply_filters(filters, bears=None):\n+def _apply_section_filter(filter_name, filter_args, all_sections):\n     \"\"\"\n-    Returns bears after filtering based on ``filters``. It returns\n-    intersection of bears if more than one element is present in ``filters``\n-    list.\n+    Returns sections after filtering based on ``filter_args``. It\n+    returns all sections if nothing is present in ``filter_args``.\n+\n+    :param filter_name:\n+        Name of the section filter.\n+    :param filter_args:\n+        Arguments to be passed to the filter. For example:\n+        ``['section_tags', ('save', 'change')]``\n+    :param all_sections:\n+        List of all sections on which filter is to be applied.\n+    :return:\n+        Filtered sections based on a single section filter.\n+    \"\"\"\n+    if not is_valid_filter(filter_name):\n+        raise InvalidFilterException(filter_name)\n+    if not filter_args or len(filter_args) == 0:\n+        return all_sections\n+\n+    filter_function = available_filters[filter_name]\n+    filtered_sections = []\n+\n+    for section in all_sections:\n+        if filter_function(section, filter_args):\n+            filtered_sections += [section]\n+\n+    return filtered_sections\n+\n+\n+def apply_filters(filters, bears=None, sections=None):\n+    \"\"\"\n+    Returns bears or sections after filtering based on ``filters``.\n+    It returns intersection if more than one element is present in\n+    ``filters`` list. Either bears or sections need to be passed,\n+    if both or none are passed it defaults to use bears gathering\n+    and runs filter in bear filtering mode.\n \n     :param filters:\n-        List of args based on ``bears`` has to be filtered.\n-        For example:\n-        ``[['language', 'c', 'java'], ['can_fix', 'syntax']]``\n+        List of args based on ``bears`` has to be filtered. For example:\n+        ``[['language', 'c', 'java'], ['can_fix', 'syntax'],\n+        ['section_tags', 'save']]``\n     :param bears:\n         The bears to filter.\n+    :param sections:\n+        The sections to filter.\n     :return:\n-        Filtered bears.\n+        Filtered bears or sections.\n     \"\"\"\n+    things = bears\n+    applier = apply_filter\n+    if sections is not None:\n+        things = sections\n+        applier = _apply_section_filter\n+\n     for filter in filters:\n         filter_name, *filter_args = filter\n-        bears = apply_filter(filter_name, filter_args, bears)\n-    return bears\n+        things = applier(filter_name, filter_args, things)\n+    return things\n+\n+\n+def collect_filters(args, arg_list=None, arg_parser=None):\n+    \"\"\"\n+    Collects all filters from based on cli arguments.\n+\n+    :param args:\n+        Parsed CLI args using which the filters are to be collected.\n+    :param arg_list:\n+        The CLI argument list.\n+    :param arg_parser:\n+        Instance of ArgParser that is used to parse arg list.\n+    :return:\n+        List of filters in standard filter format, i.e\n+        ``[['filter_name', 'arg1', 'arg2']]``.\n+    \"\"\"\n+    if args is None:","author":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4","name":"Kilari Teja"},"reactions":[],"createdAt":"2018-08-07T06:11:39Z","lastEditedAt":null,"updatedAt":"2018-08-07T06:11:39Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwODEwODgwMw==","url":"https://github.com/coala/coala/pull/5690#discussion_r208108803","bodyText":"run_coala\n\n:param arg_parser:        Instance of ArgParser that is used to non-setting arguments.\n:param arg_list:              The CLI argument list.\n:param args:                   Alternative pre-parsed CLI arguments.\n\nThis is not just about the tests, since args to run_coala() can be optionally passed instead of arg_list, I think we need to merge opts from both, so as to enable the internal usage of this filter. Tests also use can use this by directly calling run_coala() with an arg list.","diffHunk":"@@ -49,22 +50,83 @@ def apply_filter(filter_name, filter_args, all_bears=None):\n     return local_bears, global_bears\n \n \n-def apply_filters(filters, bears=None):\n+def _apply_section_filter(filter_name, filter_args, all_sections):\n     \"\"\"\n-    Returns bears after filtering based on ``filters``. It returns\n-    intersection of bears if more than one element is present in ``filters``\n-    list.\n+    Returns sections after filtering based on ``filter_args``. It\n+    returns all sections if nothing is present in ``filter_args``.\n+\n+    :param filter_name:\n+        Name of the section filter.\n+    :param filter_args:\n+        Arguments to be passed to the filter. For example:\n+        ``['section_tags', ('save', 'change')]``\n+    :param all_sections:\n+        List of all sections on which filter is to be applied.\n+    :return:\n+        Filtered sections based on a single section filter.\n+    \"\"\"\n+    if not is_valid_filter(filter_name):\n+        raise InvalidFilterException(filter_name)\n+    if not filter_args or len(filter_args) == 0:\n+        return all_sections\n+\n+    filter_function = available_filters[filter_name]\n+    filtered_sections = []\n+\n+    for section in all_sections:\n+        if filter_function(section, filter_args):\n+            filtered_sections += [section]\n+\n+    return filtered_sections\n+\n+\n+def apply_filters(filters, bears=None, sections=None):\n+    \"\"\"\n+    Returns bears or sections after filtering based on ``filters``.\n+    It returns intersection if more than one element is present in\n+    ``filters`` list. Either bears or sections need to be passed,\n+    if both or none are passed it defaults to use bears gathering\n+    and runs filter in bear filtering mode.\n \n     :param filters:\n-        List of args based on ``bears`` has to be filtered.\n-        For example:\n-        ``[['language', 'c', 'java'], ['can_fix', 'syntax']]``\n+        List of args based on ``bears`` has to be filtered. For example:\n+        ``[['language', 'c', 'java'], ['can_fix', 'syntax'],\n+        ['section_tags', 'save']]``\n     :param bears:\n         The bears to filter.\n+    :param sections:\n+        The sections to filter.\n     :return:\n-        Filtered bears.\n+        Filtered bears or sections.\n     \"\"\"\n+    things = bears\n+    applier = apply_filter\n+    if sections is not None:\n+        things = sections\n+        applier = _apply_section_filter\n+\n     for filter in filters:\n         filter_name, *filter_args = filter\n-        bears = apply_filter(filter_name, filter_args, bears)\n-    return bears\n+        things = applier(filter_name, filter_args, things)\n+    return things\n+\n+\n+def collect_filters(args, arg_list=None, arg_parser=None):\n+    \"\"\"\n+    Collects all filters from based on cli arguments.\n+\n+    :param args:\n+        Parsed CLI args using which the filters are to be collected.\n+    :param arg_list:\n+        The CLI argument list.\n+    :param arg_parser:\n+        Instance of ArgParser that is used to parse arg list.\n+    :return:\n+        List of filters in standard filter format, i.e\n+        ``[['filter_name', 'arg1', 'arg2']]``.\n+    \"\"\"\n+    if args is None:","author":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4","name":"Kilari Teja"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzc0MjI4Mg==","createdAt":"2018-08-10T09:25:27Z","content":"THUMBS_UP","user":{"login":"jayvdb","name":"John Vandenberg"}}],"createdAt":"2018-08-07T06:12:25Z","lastEditedAt":null,"updatedAt":"2018-08-07T06:12:25Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTE5OTI0OQ==","url":"https://github.com/coala/coala/pull/5690#discussion_r209199249","bodyText":"belongs in coala_utils::decorators.py\n\nUnfortunately not ...\nBecause we are not allowed to do imports here!  argh.\nIt was built: https://gitlab.com/coala/coala-utils/merge_requests/82","diffHunk":"@@ -0,0 +1,42 @@\n+from inspect import getmro\n+from functools import wraps\n+\n+\n+def typed_filter(type_classes, msg=None):","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-10T09:23:37Z","lastEditedAt":null,"updatedAt":"2018-08-10T09:23:37Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMDgzOTE1OQ==","url":"https://github.com/coala/coala/pull/5690#issuecomment-410839159","bodyText":"Updated to use --filter-by (can be used by doing coala --filter-by section_tags save) for both section filters and bear filters. Known issues:\n\nRequires update to --filter-by documentation.","diffHunk":null,"author":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4","name":"Kilari Teja"},"reactions":[],"createdAt":"2018-08-06T20:15:22Z","lastEditedAt":"2018-08-06T20:17:40Z","updatedAt":"2018-08-06T20:17:40Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1533552812000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5691","number":5691,"title":".coafile: Change in pycodestyle_ignore list","body":"Removed E133,E242 and E303 from pycodestyle_ignore list.\nFixes #5389\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!","comments":21,"createdAt":"2018-08-05T15:31:05Z","updatedAt":"2018-08-06T10:53:32Z","closedAt":"2018-08-06T10:49:20Z","state":"merged","user":{"login":"shashwatmishra76","avatarUrl":"https://avatars2.githubusercontent.com/u/24711156?v=4"},"owner":{"login":"shashwatmishra76","avatarUrl":"https://avatars2.githubusercontent.com/u/24711156?v=4"},"assignee":{"login":"shashwatmishra76","avatarUrl":"https://avatars2.githubusercontent.com/u/24711156?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"importance/medium","color":"fbca04"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5691","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDQxMDUzMTcwMg==","url":"https://github.com/coala/coala/pull/5691#issuecomment-410531702","bodyText":"@jayvdb My PR can't seem to pass this one test.What changes do I need to make?","diffHunk":null,"author":{"login":"shashwatmishra76","avatarUrl":"https://avatars2.githubusercontent.com/u/24711156?v=4","name":"Shashwat Mishra"},"createdAt":"2018-08-05T16:32:30Z","lastEditedAt":null,"updatedAt":"2018-08-05T16:32:30Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMDUzNDY1OA==","url":"https://github.com/coala/coala/pull/5691#issuecomment-410534658","bodyText":"@jayvdb Please review this.","diffHunk":null,"author":{"login":"shashwatmishra76","avatarUrl":"https://avatars2.githubusercontent.com/u/24711156?v=4","name":"Shashwat Mishra"},"createdAt":"2018-08-05T17:21:37Z","lastEditedAt":null,"updatedAt":"2018-08-05T17:21:37Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMDUzNzc0MA==","url":"https://github.com/coala/coala/pull/5691#issuecomment-410537740","bodyText":"@jayvdb I have done rebasing.Please review this.","diffHunk":null,"author":{"login":"shashwatmishra76","avatarUrl":"https://avatars2.githubusercontent.com/u/24711156?v=4","name":"Shashwat Mishra"},"createdAt":"2018-08-05T18:13:28Z","lastEditedAt":null,"updatedAt":"2018-08-05T18:13:28Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMDUzOTA2NQ==","url":"https://github.com/coala/coala/pull/5691#issuecomment-410539065","bodyText":"If you see a test failing, check out the detailed logs, try to find the error. You can ask for help on gitter.\nFor now, I see there's timeout error in your ci (which causes trouble sometimes). It's nothing to do with your PR so don't worry.","diffHunk":null,"author":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4","name":"Pareksha Manchanda"},"createdAt":"2018-08-05T18:36:19Z","lastEditedAt":null,"updatedAt":"2018-08-05T18:36:19Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMDU0MDA5Ng==","url":"https://github.com/coala/coala/pull/5691#issuecomment-410540096","bodyText":"@pareksha  I have changed my shortlog message.And,concerning the error,as it is due to timeout,is there anything that I need to do?","diffHunk":null,"author":{"login":"shashwatmishra76","avatarUrl":"https://avatars2.githubusercontent.com/u/24711156?v=4","name":"Shashwat Mishra"},"createdAt":"2018-08-05T18:54:58Z","lastEditedAt":null,"updatedAt":"2018-08-05T18:54:58Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMDU1MTgzMg==","url":"https://github.com/coala/coala/pull/5691#issuecomment-410551832","bodyText":"This is not rebased.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-05T22:03:05Z","lastEditedAt":null,"updatedAt":"2018-08-05T22:03:05Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMDU3MDYxNQ==","url":"https://github.com/coala/coala/pull/5691#issuecomment-410570615","bodyText":"\"Change made as per requirement\" is an inappropriate https://coala.io/commit shortlog","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-06T02:18:32Z","lastEditedAt":null,"updatedAt":"2018-08-06T02:18:32Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMDYxNzU3Mg==","url":"https://github.com/coala/coala/pull/5691#issuecomment-410617572","bodyText":"\"Change in .coalafile\" also does not describe what was changed.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-06T07:43:31Z","lastEditedAt":null,"updatedAt":"2018-08-06T07:43:31Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMDY0OTc5MA==","url":"https://github.com/coala/coala/pull/5691#issuecomment-410649790","bodyText":"ok, the shortlog is good enough.\nNext, #5389 does not say it is a bug, so you need the final line to say Closes https://github.com/coala/coala/issues/5389 -- not Fixes https://github.com/coala/coala/issues/5389","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-06T09:39:50Z","lastEditedAt":null,"updatedAt":"2018-08-06T09:39:50Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMDY1MTUwMQ==","url":"https://github.com/coala/coala/pull/5691#issuecomment-410651501","bodyText":"Awesome.  Now we let that build, and ping me on gitter for the next step.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-06T09:45:57Z","lastEditedAt":null,"updatedAt":"2018-08-06T09:45:57Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1533768077000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5693","number":5693,"title":"XML.py: Add language definition for XML","body":"Closes #5692\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":4,"createdAt":"2018-08-05T17:26:17Z","updatedAt":"2018-08-08T22:41:17Z","closedAt":"2018-08-06T18:49:27Z","state":"merged","user":{"login":"virresh","avatarUrl":"https://avatars0.githubusercontent.com/u/10978108?v=4"},"owner":{"login":"virresh","avatarUrl":"https://avatars0.githubusercontent.com/u/10978108?v=4"},"assignee":{"login":"virresh","avatarUrl":"https://avatars0.githubusercontent.com/u/10978108?v=4"},"labels":[{"name":"area/aspects","color":"000000"},{"name":"area/documentation","color":"bfe5bf"},{"name":"area/languages","color":"d4c5f9"},{"name":"process/approved","color":"009800"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5693","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzc0OTY4Ng==","url":"https://github.com/coala/coala/pull/5693#discussion_r207749686","bodyText":"Please see how this is used by core and bears. I believe there are no equivalent in xml.","diffHunk":"@@ -0,0 +1,13 @@\n+from coalib.bearlib.languages.Language import Language\n+\n+\n+@Language\n+class XML:\n+    __qualname__ = 'Extensible Markup Language'\n+    aliases = 'xml',\n+\n+    extensions = '.xml',\n+    multiline_comment_delimiters = {'<!--': '-->'}\n+    string_delimiters = {'\"': '\"', \"'\": \"'\"}\n+    multiline_string_delimiters = string_delimiters\n+    encapsulators = {'<': '>'}","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzQ4NTkzMQ==","createdAt":"2018-08-06T08:19:07Z","content":"THUMBS_UP","user":{"login":"pareksha","name":"Pareksha Manchanda"}}],"createdAt":"2018-08-05T21:57:16Z","lastEditedAt":null,"updatedAt":"2018-08-05T21:57:16Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzc0OTcyNA==","url":"https://github.com/coala/coala/pull/5693#discussion_r207749724","bodyText":"Also add cdata","diffHunk":"@@ -0,0 +1,13 @@\n+from coalib.bearlib.languages.Language import Language\n+\n+\n+@Language\n+class XML:\n+    __qualname__ = 'Extensible Markup Language'\n+    aliases = 'xml',\n+\n+    extensions = '.xml',\n+    multiline_comment_delimiters = {'<!--': '-->'}\n+    string_delimiters = {'\"': '\"', \"'\": \"'\"}","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzUxMDE4Nw==","createdAt":"2018-08-06T16:06:25Z","content":"THUMBS_UP","user":{"login":"virresh","name":"Viresh Gupta"}}],"createdAt":"2018-08-05T21:58:58Z","lastEditedAt":null,"updatedAt":"2018-08-05T21:58:58Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzgwNzM1MQ==","url":"https://github.com/coala/coala/pull/5693#discussion_r207807351","bodyText":"Why blank line here?","diffHunk":"@@ -0,0 +1,13 @@\n+from coalib.bearlib.languages.Language import Language\n+\n+\n+@Language\n+class XML:\n+    __qualname__ = 'Extensible Markup Language'\n+    aliases = 'xml',\n+","author":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4","name":"Pareksha Manchanda"},"reactions":[],"createdAt":"2018-08-06T08:16:49Z","lastEditedAt":null,"updatedAt":"2018-08-06T08:16:49Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzgwODA3MA==","url":"https://github.com/coala/coala/pull/5693#discussion_r207808070","bodyText":"And if < > is considered, </ > should also be","diffHunk":"@@ -0,0 +1,13 @@\n+from coalib.bearlib.languages.Language import Language\n+\n+\n+@Language\n+class XML:\n+    __qualname__ = 'Extensible Markup Language'\n+    aliases = 'xml',\n+\n+    extensions = '.xml',\n+    multiline_comment_delimiters = {'<!--': '-->'}\n+    string_delimiters = {'\"': '\"', \"'\": \"'\"}\n+    multiline_string_delimiters = string_delimiters\n+    encapsulators = {'<': '>'}","author":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4","name":"Pareksha Manchanda"},"reactions":[],"createdAt":"2018-08-06T08:19:36Z","lastEditedAt":null,"updatedAt":"2018-08-06T08:19:36Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzk0NzY2Mg==","url":"https://github.com/coala/coala/pull/5693#discussion_r207947662","bodyText":"@jayvdb @pareksha\nI referred https://github.com/coala/coala/blob/master/coalib/bearlib/languages/definitions/html.py\nfor referring to how we use markups in language definitions,\nI am not particularly sure of how these are used by core\nCould only find one place in bears repo (the IndentationBear) where these were used, and considering that, I believe these are also sufficient to determine indents of tags ?\nAlso @pareksha , </> is a subset of <>, note the same literal opens and ends tag","diffHunk":"@@ -0,0 +1,13 @@\n+from coalib.bearlib.languages.Language import Language\n+\n+\n+@Language\n+class XML:\n+    __qualname__ = 'Extensible Markup Language'\n+    aliases = 'xml',\n+\n+    extensions = '.xml',\n+    multiline_comment_delimiters = {'<!--': '-->'}\n+    string_delimiters = {'\"': '\"', \"'\": \"'\"}\n+    multiline_string_delimiters = string_delimiters\n+    encapsulators = {'<': '>'}","author":{"login":"virresh","avatarUrl":"https://avatars0.githubusercontent.com/u/10978108?v=4","name":"Viresh Gupta"},"reactions":[],"createdAt":"2018-08-06T16:09:56Z","lastEditedAt":null,"updatedAt":"2018-08-06T16:09:56Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzk0Nzc4MA==","url":"https://github.com/coala/coala/pull/5693#discussion_r207947780","bodyText":"c.f https://github.com/coala/coala/blob/master/coalib/bearlib/languages/definitions/html.py#L8\nhttps://github.com/coala/coala/blob/master/coalib/bearlib/languages/definitions/Shell.py#L7\nSo I think this is some kind of convention and I followed it :)","diffHunk":"@@ -0,0 +1,13 @@\n+from coalib.bearlib.languages.Language import Language\n+\n+\n+@Language\n+class XML:\n+    __qualname__ = 'Extensible Markup Language'\n+    aliases = 'xml',\n+","author":{"login":"virresh","avatarUrl":"https://avatars0.githubusercontent.com/u/10978108?v=4","name":"Viresh Gupta"},"reactions":[],"createdAt":"2018-08-06T16:10:22Z","lastEditedAt":"2018-08-06T16:12:45Z","updatedAt":"2018-08-06T16:12:45Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzk5MjcwMQ==","url":"https://github.com/coala/coala/pull/5693#discussion_r207992701","bodyText":"I suspect this is 'not right, but also not wrong'. Not bad for v1.","diffHunk":"@@ -0,0 +1,14 @@\n+from coalib.bearlib.languages.Language import Language\n+\n+\n+@Language\n+class XML:\n+    __qualname__ = 'Extensible Markup Language'\n+    aliases = 'xml',\n+    versions = 1.0,\n+\n+    extensions = '.xml',\n+    multiline_comment_delimiters = {'<!--': '-->'}\n+    string_delimiters = {'\"': '\"', \"'\": \"'\", '<![CDATA[': ']]>'}\n+    multiline_string_delimiters = string_delimiters\n+    encapsulators = {'<': '>'}","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-06T18:47:35Z","lastEditedAt":null,"updatedAt":"2018-08-06T18:47:35Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1533994825000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5696","number":5696,"title":"CliParsing.py,ConfParser.py : Change in variable name","body":"Corrected typo in variable name comment_seperator and changed it to comment_separator.\nAdded comment_seperator as a deprecated argument.\nCloses #5510\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!","comments":37,"createdAt":"2018-08-07T19:10:35Z","updatedAt":"2018-08-11T13:40:25Z","closedAt":"2018-08-11T13:40:12Z","state":"merged","user":{"login":"shashwatmishra76","avatarUrl":"https://avatars2.githubusercontent.com/u/24711156?v=4"},"owner":{"login":"shashwatmishra76","avatarUrl":"https://avatars2.githubusercontent.com/u/24711156?v=4"},"assignee":{"login":"shashwatmishra76","avatarUrl":"https://avatars2.githubusercontent.com/u/24711156?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/low","color":"207de5"},{"name":"importance/low","color":"70E870"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5696","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDQxMTIwOTExNg==","url":"https://github.com/coala/coala/pull/5696#issuecomment-411209116","bodyText":"@jayvdb I checked the piece of code that I added to my local machine and it works fine.I am not sure why it is not passing the build tests.Where have I gone wrong?","diffHunk":null,"author":{"login":"shashwatmishra76","avatarUrl":"https://avatars2.githubusercontent.com/u/24711156?v=4","name":"Shashwat Mishra"},"createdAt":"2018-08-07T21:30:26Z","lastEditedAt":null,"updatedAt":"2018-08-07T21:30:26Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMTYyODY1OA==","url":"https://github.com/coala/coala/pull/5696#issuecomment-411628658","bodyText":"You need to rebase your patch.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-09T03:54:27Z","lastEditedAt":null,"updatedAt":"2018-08-09T03:54:27Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMTY4MDMyNg==","url":"https://github.com/coala/coala/pull/5696#issuecomment-411680326","bodyText":"@jayvdb Have done rebase.","diffHunk":null,"author":{"login":"shashwatmishra76","avatarUrl":"https://avatars2.githubusercontent.com/u/24711156?v=4","name":"Shashwat Mishra"},"createdAt":"2018-08-09T08:31:39Z","lastEditedAt":null,"updatedAt":"2018-08-09T08:31:39Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMTgwOTg3MA==","url":"https://github.com/coala/coala/pull/5696#issuecomment-411809870","bodyText":"Needs another rebase due to a different PR getting merged","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-09T16:03:35Z","lastEditedAt":null,"updatedAt":"2018-08-09T16:03:35Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMTg0MzkxNQ==","url":"https://github.com/coala/coala/pull/5696#issuecomment-411843915","bodyText":"There is another PR which is duplicate of this at #5688 .","diffHunk":null,"author":{"login":"shashwatmishra76","avatarUrl":"https://avatars2.githubusercontent.com/u/24711156?v=4","name":"Shashwat Mishra"},"createdAt":"2018-08-09T17:57:56Z","lastEditedAt":null,"updatedAt":"2018-08-09T17:57:56Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMjI0NTg1NA==","url":"https://github.com/coala/coala/pull/5696#issuecomment-412245854","bodyText":"Test is failing\nhttps://travis-ci.org/coala/coala/jobs/414626526#L794","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-11T02:45:55Z","lastEditedAt":null,"updatedAt":"2018-08-11T02:45:55Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMjI2NTE4MQ==","url":"https://github.com/coala/coala/pull/5696#issuecomment-412265181","bodyText":"Rebase please.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-11T10:04:31Z","lastEditedAt":null,"updatedAt":"2018-08-11T10:04:31Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1533795185000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5698","number":5698,"title":"Sync templates","body":"For short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":4,"createdAt":"2018-08-08T14:36:28Z","updatedAt":"2018-08-09T06:13:05Z","closedAt":"2018-08-09T06:13:05Z","state":"merged","user":{"login":"Naveenaidu","avatarUrl":"https://avatars1.githubusercontent.com/u/30195193?v=4"},"owner":{"login":"Naveenaidu","avatarUrl":"https://avatars1.githubusercontent.com/u/30195193?v=4"},"labels":[{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5698","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwODY3MzMwNw==","url":"https://github.com/coala/coala/pull/5698#discussion_r208673307","bodyText":"undo this line please.\nthis is why it is breaking, and is a special problem that I need to fix.","diffHunk":"@@ -13,7 +16,7 @@ pytest-instafail~=0.3.0\n pytest-mock~=1.1\n pytest-profiling~=1.3.0\n pytest-reorder~=0.1.0\n-git+https://github.com/jayvdb/pytest-reqs@skip-vcs-reqs#egg=pytest-reqs\n+pytest-reqs~=0.0.6","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-08T17:44:44Z","lastEditedAt":null,"updatedAt":"2018-08-08T17:44:44Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1533973252000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5699","number":5699,"title":"Add Support for FileProxies","body":"Adds support for FileProxies and analysis of in-memory files.\nKnown Shortcomings:\n\nCannot yet work with apply-patch actions.\nFile Proxies cannot yet work with caching disabled.","comments":5,"createdAt":"2018-08-08T14:52:12Z","updatedAt":"2018-08-11T07:40:52Z","closedAt":"2018-08-11T07:40:52Z","state":"merged","user":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4"},"owner":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4"},"labels":[{"name":"size/L","color":"FF8888"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5699","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwODgwNTU2MQ==","url":"https://github.com/coala/coala/pull/5699#discussion_r208805561","bodyText":"this could be moved to the common path in instantiate_processes after the dict has been obtained.","diffHunk":"@@ -173,3 +178,137 @@ def get_uncached_files(self, files):\n                     for file in files\n                     if (file not in self.data or\n                         int(os.path.getmtime(file)) > self.data[file])}\n+\n+\n+class FileDictFileCache(FileCache, FileDictGenerator):\n+    \"\"\"\n+    FileDictFileCache extends a traditional FileCache\n+    to support generation of a complete file dict, this\n+    lets FileDictFileCache provide access to both file\n+    cache and contents of files from disk.\n+    \"\"\"\n+\n+    def __init__(self, *args, **kargs):\n+        \"\"\"\n+        This directly initializes the associated FileCache.\n+        \"\"\"\n+        super().__init__(*args, **kargs)\n+\n+    def get_file_dict(self, filename_list, allow_raw_files=False):\n+        \"\"\"\n+        Returns a file dictionary mapping from filename to lines of\n+        file. Uses coalib.processes.Processing.get_file_dict().\n+\n+        :param filename_list:   List of filenames as strings to build\n+                                the file dict.\n+        :param allow_raw_files: Indicates if the file could also be\n+                                read as a binary.\n+        :return:                Reads the content of each file into\n+                                dictionary with filenames as keys.\n+        \"\"\"\n+        return get_file_dict(filename_list,\n+                             allow_raw_files=allow_raw_files)\n+\n+\n+class ProxyMapFileCache(FileCache, FileDictGenerator):\n+    \"\"\"\n+    ProxyMapFileCache is a FileCache that also provides\n+    methods to produce a file dict from a FileProxyMap.\n+\n+    >>> import logging\n+    >>> import tempfile\n+    >>> import copy, time\n+    >>> logging.getLogger().setLevel(logging.CRITICAL)\n+\n+    >>> file = tempfile.NamedTemporaryFile(delete=False)\n+    >>> file.write(b'coala')\n+    5\n+    >>> file.close()\n+\n+    A new instance of ProxyMapFileCache can be instantited:\n+\n+    >>> proxycache = ProxyMapFileCache(None, \"test\")\n+\n+    Before any action on the associated proxy map is carried\n+    out, the proxymap needs to be initialized/set using:\n+\n+    >>> proxymap = FileProxyMap()\n+    >>> proxycache.set_proxymap(proxymap)\n+\n+    A file dict can now be build using the underlying proxy\n+    map using:\n+\n+    >>> proxy = FileProxy.from_file(file.name, None)\n+    >>> proxymap.add(proxy)\n+    True\n+\n+    >>> file_dict = proxycache.get_file_dict([file.name])\n+    >>> file_dict[file.name]\n+    ('coala',)\n+    \"\"\"\n+\n+    def __init__(self, *args, **kargs):\n+        \"\"\"\n+        This directly initializes the associated FileCache.\n+        \"\"\"\n+        super().__init__(*args, **kargs)\n+        self.__proxymap = None\n+\n+    @enforce_signature\n+    def set_proxymap(self, fileproxy_map: FileProxyMap):\n+        \"\"\"\n+        Used to assign a ProxyMap, this is separate from\n+        the instance initialization method to keep the\n+        concerns separate.\n+\n+        :param fileproxy_map:   FileProxyMap instance to build\n+                                the file dict from.\n+        \"\"\"\n+        self.__proxymap = fileproxy_map\n+\n+    def get_file_dict(self, filename_list, allow_raw_files=False):\n+        \"\"\"\n+        Builds a file dictionary from filename to lines of the file\n+        from an associated FileProxyMap.\n+\n+        :param filename_list:   List of files to get the contents of.\n+        :param allow_raw_files: Allow the usage of raw files (non text files),\n+                                disabled by default\n+        :return:                Reads the content of each file into dictionary\n+                                with filenames as keys.\n+        \"\"\"\n+        if self.__proxymap is None:\n+            raise ValueError('set_proxymap() should be called to set proxymap'\n+                             'of ProxyMapFileCache instance')\n+\n+        file_dict = {}\n+        for filename in filename_list:\n+            try:\n+                # Keep the binary mode turned off to maintain compatibility\n+                # with FileDictFileCache.get_file_dict().\n+                # filename is assumed to be normcased.\n+                proxy = self.__proxymap.resolve(filename,\n+                                                hard_sync=True,\n+                                                binary=False)\n+\n+                file_lines = proxy.lines()\n+                file_dict[filename] = tuple(file_lines)\n+            except UnicodeDecodeError:\n+                if allow_raw_files:\n+                    file_dict[filename] = None\n+                    continue\n+\n+                logging.warning(\"Failed to read file '{}'. It seems to contain \"\n+                                'non-unicode characters. Leaving it out.'\n+                                .format(filename))\n+\n+            except (OSError, FileNameError) as exception:\n+                log_exception(\"Failed to read file '{}' because of an unknown \"\n+                              'error. Leaving it out.'.format(filename),\n+                              exception,\n+                              log_level=LOG_LEVEL.WARNING)\n+\n+        logging.debug('Files that will be checked:\\n' +","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-09T04:49:27Z","lastEditedAt":null,"updatedAt":"2018-08-09T04:49:27Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwODgwNTYyNw==","url":"https://github.com/coala/coala/pull/5699#discussion_r208805627","bodyText":"you sure you need this?\nit isnt doing anything afaics","diffHunk":"@@ -0,0 +1,363 @@\n+import logging\n+from os import path\n+\n+from coala_utils.FileUtils import detect_encoding\n+from coala_utils.decorators import (enforce_signature, generate_eq,)\n+\n+\n+class FileNameError(LookupError):\n+    def __init__(self, error_message):","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzY4MjA4NA==","createdAt":"2018-08-09T09:52:40Z","content":"THUMBS_UP","user":{"login":"ksdme","name":"Kilari Teja"}}],"createdAt":"2018-08-09T04:50:11Z","lastEditedAt":null,"updatedAt":"2018-08-09T04:50:11Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwODgyNTcyMA==","url":"https://github.com/coala/coala/pull/5699#discussion_r208825720","bodyText":"I think we need to maintain compatibility with FileDictFileCache, since it uses the default implementation of get_file_dict() it logs locally as soon as files are collected. Moving this to instantiate_processes() will cause logging twice for FileDictFileCache. I think we can have a separate issue for this once this gets merged.","diffHunk":"@@ -173,3 +178,137 @@ def get_uncached_files(self, files):\n                     for file in files\n                     if (file not in self.data or\n                         int(os.path.getmtime(file)) > self.data[file])}\n+\n+\n+class FileDictFileCache(FileCache, FileDictGenerator):\n+    \"\"\"\n+    FileDictFileCache extends a traditional FileCache\n+    to support generation of a complete file dict, this\n+    lets FileDictFileCache provide access to both file\n+    cache and contents of files from disk.\n+    \"\"\"\n+\n+    def __init__(self, *args, **kargs):\n+        \"\"\"\n+        This directly initializes the associated FileCache.\n+        \"\"\"\n+        super().__init__(*args, **kargs)\n+\n+    def get_file_dict(self, filename_list, allow_raw_files=False):\n+        \"\"\"\n+        Returns a file dictionary mapping from filename to lines of\n+        file. Uses coalib.processes.Processing.get_file_dict().\n+\n+        :param filename_list:   List of filenames as strings to build\n+                                the file dict.\n+        :param allow_raw_files: Indicates if the file could also be\n+                                read as a binary.\n+        :return:                Reads the content of each file into\n+                                dictionary with filenames as keys.\n+        \"\"\"\n+        return get_file_dict(filename_list,\n+                             allow_raw_files=allow_raw_files)\n+\n+\n+class ProxyMapFileCache(FileCache, FileDictGenerator):\n+    \"\"\"\n+    ProxyMapFileCache is a FileCache that also provides\n+    methods to produce a file dict from a FileProxyMap.\n+\n+    >>> import logging\n+    >>> import tempfile\n+    >>> import copy, time\n+    >>> logging.getLogger().setLevel(logging.CRITICAL)\n+\n+    >>> file = tempfile.NamedTemporaryFile(delete=False)\n+    >>> file.write(b'coala')\n+    5\n+    >>> file.close()\n+\n+    A new instance of ProxyMapFileCache can be instantited:\n+\n+    >>> proxycache = ProxyMapFileCache(None, \"test\")\n+\n+    Before any action on the associated proxy map is carried\n+    out, the proxymap needs to be initialized/set using:\n+\n+    >>> proxymap = FileProxyMap()\n+    >>> proxycache.set_proxymap(proxymap)\n+\n+    A file dict can now be build using the underlying proxy\n+    map using:\n+\n+    >>> proxy = FileProxy.from_file(file.name, None)\n+    >>> proxymap.add(proxy)\n+    True\n+\n+    >>> file_dict = proxycache.get_file_dict([file.name])\n+    >>> file_dict[file.name]\n+    ('coala',)\n+    \"\"\"\n+\n+    def __init__(self, *args, **kargs):\n+        \"\"\"\n+        This directly initializes the associated FileCache.\n+        \"\"\"\n+        super().__init__(*args, **kargs)\n+        self.__proxymap = None\n+\n+    @enforce_signature\n+    def set_proxymap(self, fileproxy_map: FileProxyMap):\n+        \"\"\"\n+        Used to assign a ProxyMap, this is separate from\n+        the instance initialization method to keep the\n+        concerns separate.\n+\n+        :param fileproxy_map:   FileProxyMap instance to build\n+                                the file dict from.\n+        \"\"\"\n+        self.__proxymap = fileproxy_map\n+\n+    def get_file_dict(self, filename_list, allow_raw_files=False):\n+        \"\"\"\n+        Builds a file dictionary from filename to lines of the file\n+        from an associated FileProxyMap.\n+\n+        :param filename_list:   List of files to get the contents of.\n+        :param allow_raw_files: Allow the usage of raw files (non text files),\n+                                disabled by default\n+        :return:                Reads the content of each file into dictionary\n+                                with filenames as keys.\n+        \"\"\"\n+        if self.__proxymap is None:\n+            raise ValueError('set_proxymap() should be called to set proxymap'\n+                             'of ProxyMapFileCache instance')\n+\n+        file_dict = {}\n+        for filename in filename_list:\n+            try:\n+                # Keep the binary mode turned off to maintain compatibility\n+                # with FileDictFileCache.get_file_dict().\n+                # filename is assumed to be normcased.\n+                proxy = self.__proxymap.resolve(filename,\n+                                                hard_sync=True,\n+                                                binary=False)\n+\n+                file_lines = proxy.lines()\n+                file_dict[filename] = tuple(file_lines)\n+            except UnicodeDecodeError:\n+                if allow_raw_files:\n+                    file_dict[filename] = None\n+                    continue\n+\n+                logging.warning(\"Failed to read file '{}'. It seems to contain \"\n+                                'non-unicode characters. Leaving it out.'\n+                                .format(filename))\n+\n+            except (OSError, FileNameError) as exception:\n+                log_exception(\"Failed to read file '{}' because of an unknown \"\n+                              'error. Leaving it out.'.format(filename),\n+                              exception,\n+                              log_level=LOG_LEVEL.WARNING)\n+\n+        logging.debug('Files that will be checked:\\n' +","author":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4","name":"Kilari Teja"},"reactions":[],"createdAt":"2018-08-09T07:07:36Z","lastEditedAt":"2018-08-09T07:07:57Z","updatedAt":"2018-08-09T07:07:57Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwODgyNjAxOA==","url":"https://github.com/coala/coala/pull/5699#discussion_r208826018","bodyText":"I wanted to have a distinct error to denote bad file names. I will use ValueError instead.","diffHunk":"@@ -0,0 +1,363 @@\n+import logging\n+from os import path\n+\n+from coala_utils.FileUtils import detect_encoding\n+from coala_utils.decorators import (enforce_signature, generate_eq,)\n+\n+\n+class FileNameError(LookupError):\n+    def __init__(self, error_message):","author":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4","name":"Kilari Teja"},"reactions":[],"createdAt":"2018-08-09T07:09:12Z","lastEditedAt":null,"updatedAt":"2018-08-09T07:09:12Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQxNDQ0MQ==","url":"https://github.com/coala/coala/pull/5699#discussion_r209414441","bodyText":"I mean that the default get_file_dict(..) should also not log this message.\ninstantiate_processes can do that for all implementations.","diffHunk":"@@ -173,3 +178,137 @@ def get_uncached_files(self, files):\n                     for file in files\n                     if (file not in self.data or\n                         int(os.path.getmtime(file)) > self.data[file])}\n+\n+\n+class FileDictFileCache(FileCache, FileDictGenerator):\n+    \"\"\"\n+    FileDictFileCache extends a traditional FileCache\n+    to support generation of a complete file dict, this\n+    lets FileDictFileCache provide access to both file\n+    cache and contents of files from disk.\n+    \"\"\"\n+\n+    def __init__(self, *args, **kargs):\n+        \"\"\"\n+        This directly initializes the associated FileCache.\n+        \"\"\"\n+        super().__init__(*args, **kargs)\n+\n+    def get_file_dict(self, filename_list, allow_raw_files=False):\n+        \"\"\"\n+        Returns a file dictionary mapping from filename to lines of\n+        file. Uses coalib.processes.Processing.get_file_dict().\n+\n+        :param filename_list:   List of filenames as strings to build\n+                                the file dict.\n+        :param allow_raw_files: Indicates if the file could also be\n+                                read as a binary.\n+        :return:                Reads the content of each file into\n+                                dictionary with filenames as keys.\n+        \"\"\"\n+        return get_file_dict(filename_list,\n+                             allow_raw_files=allow_raw_files)\n+\n+\n+class ProxyMapFileCache(FileCache, FileDictGenerator):\n+    \"\"\"\n+    ProxyMapFileCache is a FileCache that also provides\n+    methods to produce a file dict from a FileProxyMap.\n+\n+    >>> import logging\n+    >>> import tempfile\n+    >>> import copy, time\n+    >>> logging.getLogger().setLevel(logging.CRITICAL)\n+\n+    >>> file = tempfile.NamedTemporaryFile(delete=False)\n+    >>> file.write(b'coala')\n+    5\n+    >>> file.close()\n+\n+    A new instance of ProxyMapFileCache can be instantited:\n+\n+    >>> proxycache = ProxyMapFileCache(None, \"test\")\n+\n+    Before any action on the associated proxy map is carried\n+    out, the proxymap needs to be initialized/set using:\n+\n+    >>> proxymap = FileProxyMap()\n+    >>> proxycache.set_proxymap(proxymap)\n+\n+    A file dict can now be build using the underlying proxy\n+    map using:\n+\n+    >>> proxy = FileProxy.from_file(file.name, None)\n+    >>> proxymap.add(proxy)\n+    True\n+\n+    >>> file_dict = proxycache.get_file_dict([file.name])\n+    >>> file_dict[file.name]\n+    ('coala',)\n+    \"\"\"\n+\n+    def __init__(self, *args, **kargs):\n+        \"\"\"\n+        This directly initializes the associated FileCache.\n+        \"\"\"\n+        super().__init__(*args, **kargs)\n+        self.__proxymap = None\n+\n+    @enforce_signature\n+    def set_proxymap(self, fileproxy_map: FileProxyMap):\n+        \"\"\"\n+        Used to assign a ProxyMap, this is separate from\n+        the instance initialization method to keep the\n+        concerns separate.\n+\n+        :param fileproxy_map:   FileProxyMap instance to build\n+                                the file dict from.\n+        \"\"\"\n+        self.__proxymap = fileproxy_map\n+\n+    def get_file_dict(self, filename_list, allow_raw_files=False):\n+        \"\"\"\n+        Builds a file dictionary from filename to lines of the file\n+        from an associated FileProxyMap.\n+\n+        :param filename_list:   List of files to get the contents of.\n+        :param allow_raw_files: Allow the usage of raw files (non text files),\n+                                disabled by default\n+        :return:                Reads the content of each file into dictionary\n+                                with filenames as keys.\n+        \"\"\"\n+        if self.__proxymap is None:\n+            raise ValueError('set_proxymap() should be called to set proxymap'\n+                             'of ProxyMapFileCache instance')\n+\n+        file_dict = {}\n+        for filename in filename_list:\n+            try:\n+                # Keep the binary mode turned off to maintain compatibility\n+                # with FileDictFileCache.get_file_dict().\n+                # filename is assumed to be normcased.\n+                proxy = self.__proxymap.resolve(filename,\n+                                                hard_sync=True,\n+                                                binary=False)\n+\n+                file_lines = proxy.lines()\n+                file_dict[filename] = tuple(file_lines)\n+            except UnicodeDecodeError:\n+                if allow_raw_files:\n+                    file_dict[filename] = None\n+                    continue\n+\n+                logging.warning(\"Failed to read file '{}'. It seems to contain \"\n+                                'non-unicode characters. Leaving it out.'\n+                                .format(filename))\n+\n+            except (OSError, FileNameError) as exception:\n+                log_exception(\"Failed to read file '{}' because of an unknown \"\n+                              'error. Leaving it out.'.format(filename),\n+                              exception,\n+                              log_level=LOG_LEVEL.WARNING)\n+\n+        logging.debug('Files that will be checked:\\n' +","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-11T03:00:27Z","lastEditedAt":"2018-08-11T03:00:43Z","updatedAt":"2018-08-11T03:00:43Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQxNDYzMA==","url":"https://github.com/coala/coala/pull/5699#discussion_r209414630","bodyText":"no trailing , if followed by )","diffHunk":"@@ -0,0 +1,358 @@\n+import logging\n+from os import path\n+\n+from coala_utils.FileUtils import detect_encoding\n+from coala_utils.decorators import (enforce_signature, generate_eq,)","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzc4MzUwNA==","createdAt":"2018-08-11T05:30:01Z","content":"THUMBS_UP","user":{"login":"ksdme","name":"Kilari Teja"}}],"createdAt":"2018-08-11T03:10:24Z","lastEditedAt":null,"updatedAt":"2018-08-11T03:10:24Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQxNDY5Mg==","url":"https://github.com/coala/coala/pull/5699#discussion_r209414692","bodyText":"strange indentation.\nfour space indent, from beginning of previous line.","diffHunk":"@@ -177,3 +182,102 @@ def test_caching_multi_results(self):\n             self.assertIn(\n                 'Implicit \\'Default\\' section inheritance is deprecated',\n                 stderr)\n+\n+\n+class FileDictFileCacheTest(unittest.TestCase):\n+\n+    def setUp(self):\n+        log_printer = LogPrinter(NullPrinter())\n+        self.cache = FileDictFileCache(\n+            log_printer, 'coala_test', flush_cache=True)\n+\n+    def test_build_as_file_cache(self):\n+        self.assertTrue(isinstance(self.cache, FileCache))\n+\n+        self.cache.track_files({'test.c', 'file.py'})\n+        self.assertEqual(self.cache.data, {'test.c': -1, 'file.py': -1})\n+\n+    def test_get_file_dict(self):\n+        with prepare_file(['line\\n'], None) as (_, file):\n+            self.assertEqual(self.cache.get_file_dict([file]),\n+                             get_file_dict([file]))\n+\n+\n+class ProxyMapFileCacheTest(unittest.TestCase):\n+\n+    def setUp(self):\n+        log_printer = LogPrinter(NullPrinter())\n+        self.cache = ProxyMapFileCache(\n+            log_printer, 'coala_test', flush_cache=True)\n+\n+    def test_build_as_file_cache(self):\n+        self.assertTrue(isinstance(self.cache, FileCache))\n+\n+    def test_get_dict_no_file_proxy_map(self):\n+        with self.assertRaises(ValueError) as context:\n+            self.cache.get_file_dict([])\n+\n+        self.assertIn('set_proxymap() should be called to set proxymap'\n+                      'of ProxyMapFileCache instance',\n+                      str(context.exception))\n+\n+    def test_get_file_dict_with_proxy_map(self):\n+        with prepare_file([], None) as (_, file):\n+            proxy = FileProxy(file, None, 'coala\\n')\n+            proxymap = FileProxyMap([proxy])\n+            self.cache.set_proxymap(proxymap)\n+\n+            file_dict = self.cache.get_file_dict([file])\n+            self.assertEqual(file_dict, {file: ('coala\\n',)})\n+\n+    def test_get_file_dict_unicode_error(self):\n+        with make_temp() as filename:\n+            with open(filename, 'wb') as file:\n+                file.write(bytearray([120, 3, 255, 0, 100]))\n+\n+            self.cache.set_proxymap(FileProxyMap())\n+            file_dict = self.cache.get_file_dict([filename])\n+\n+            self.assertEqual(len(file_dict), 0)\n+\n+            self.cache.set_proxymap(FileProxyMap())\n+            file_dict = self.cache.get_file_dict([filename],\n+                                                 allow_raw_files=True)\n+\n+            self.assertEqual(len(file_dict), 1)\n+            self.assertIn(filename, file_dict)\n+\n+    def test_get_file_dict_file_not_found(self):\n+        self.cache.set_proxymap(FileProxyMap())\n+\n+        file_dict = self.cache.get_file_dict(['nofile.pycoala'])\n+        self.assertEqual(len(file_dict), 0)\n+\n+    def test_file_cache_proxy_integration(self, debug=False):\n+        with bear_test_module(), \\\n+                prepare_file(['disk-copy\\n'], None) as (_, filename):\n+\n+            memory_data = 'in-memory\\n'\n+            proxy = FileProxy(filename, None, memory_data)\n+            proxymap = FileProxyMap([proxy])\n+            self.cache.set_proxymap(proxymap)\n+\n+            results, exitcode, file_dicts = run_coala(\n+                                    console_printer=ConsolePrinter(),","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-11T03:13:26Z","lastEditedAt":null,"updatedAt":"2018-08-11T03:13:26Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMTYyMzEyNQ==","url":"https://github.com/coala/coala/pull/5699#issuecomment-411623125","bodyText":"/cc @jayvdb","diffHunk":null,"author":{"login":"gaocegege","avatarUrl":"https://avatars3.githubusercontent.com/u/5100735?v=4","name":"Ce Gao"},"reactions":[],"createdAt":"2018-08-09T03:15:07Z","lastEditedAt":null,"updatedAt":"2018-08-09T03:15:07Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1533790471000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5700","number":5700,"title":"Diff.py: Modify docstring of split_diff function","body":"This changes condition of the third example in the docstring to\n'If -1 is given'.\nIt prevents bear developers from using any arbitrary negative value.\nCloses #5329\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":4,"createdAt":"2018-08-09T04:19:47Z","updatedAt":"2018-08-09T04:54:31Z","closedAt":"2018-08-09T04:54:31Z","state":"merged","user":{"login":"blindacai","avatarUrl":"https://avatars0.githubusercontent.com/u/7420826?v=4"},"owner":{"login":"blindacai","avatarUrl":"https://avatars0.githubusercontent.com/u/7420826?v=4"},"assignee":{"login":"blindacai","avatarUrl":"https://avatars0.githubusercontent.com/u/7420826?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5700","comments":[]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1533965490000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5701","number":5701,"title":"deprecate_settings: Support splitting setting","body":"Adds support for splitting deprecated arg into multiple new args.\nAdds test for it as well.\nCloses #5683\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":5,"createdAt":"2018-08-10T13:56:42Z","updatedAt":"2018-08-11T05:31:30Z","closedAt":"2018-08-11T05:31:11Z","state":"merged","user":{"login":"nalinbhardwaj","avatarUrl":"https://avatars3.githubusercontent.com/u/6984346?v=4"},"owner":{"login":"nalinbhardwaj","avatarUrl":"https://avatars3.githubusercontent.com/u/6984346?v=4"},"labels":[{"name":"size/XS","color":"00DE0F"},{"name":"type/feature","color":"0052cc"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5701","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQxMzkxMA==","url":"https://github.com/coala/coala/pull/5701#discussion_r209413910","bodyText":"Please use [xy] instead\n\nThis needs to be improved.\nAnd we also need a test to cover the other scenario:\n\n'The value of {} and {} are conflicting. {} will be used instead.","diffHunk":"@@ -10,8 +11,22 @@ def func(new):\n     \"\"\"\n \n \n+@deprecate_settings(x=('a', lambda a: a+1), y=('a', lambda a: a+2))\n+def func_2(x, y):\n+    return x+y\n+\n+\n class DeprecateSettingsTest(unittest.TestCase):\n \n     def test_docstring(self):\n         self.assertEqual(func.__doc__.strip(),\n                          'This docstring will not be lost.')\n+\n+    def test_multiple_args(self):\n+        logger = logging.getLogger()\n+\n+        with self.assertLogs(logger, 'WARNING') as cm:\n+            self.assertEqual(func_2(a=1), 5)\n+\n+            self.assertRegex(cm.output[0], 'WARNING:root:The setting `a` is '\n+                             r'deprecated. Please use `[xy]` instead.')","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-11T02:32:24Z","lastEditedAt":null,"updatedAt":"2018-08-11T02:32:24Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQxNDIyMA==","url":"https://github.com/coala/coala/pull/5701#discussion_r209414220","bodyText":"Please use [xy] instead\n\nThis needs to be improved.\n\nNot sure if you/I understand correctly, but this is a regex, so the actual error is \"Please use x instead\" or \"Please use y instead\". The reason this needs a regex is that the order of args seems to depend on the version of the py(py3.4 has the message with y, py3.5 with x). This test, therefore, passes both.","diffHunk":"@@ -10,8 +11,22 @@ def func(new):\n     \"\"\"\n \n \n+@deprecate_settings(x=('a', lambda a: a+1), y=('a', lambda a: a+2))\n+def func_2(x, y):\n+    return x+y\n+\n+\n class DeprecateSettingsTest(unittest.TestCase):\n \n     def test_docstring(self):\n         self.assertEqual(func.__doc__.strip(),\n                          'This docstring will not be lost.')\n+\n+    def test_multiple_args(self):\n+        logger = logging.getLogger()\n+\n+        with self.assertLogs(logger, 'WARNING') as cm:\n+            self.assertEqual(func_2(a=1), 5)\n+\n+            self.assertRegex(cm.output[0], 'WARNING:root:The setting `a` is '\n+                             r'deprecated. Please use `[xy]` instead.')","author":{"login":"nalinbhardwaj","avatarUrl":"https://avatars3.githubusercontent.com/u/6984346?v=4","name":"Nalin Bhardwaj"},"createdAt":"2018-08-11T02:46:06Z","lastEditedAt":"2018-08-11T02:46:26Z","updatedAt":"2018-08-11T02:46:26Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQxNDQxMA==","url":"https://github.com/coala/coala/pull/5701#discussion_r209414410","bodyText":"And we also need a test to cover the other scenario:\n\n'The value of {} and {} are conflicting. {} will be used instead.\n\n\nAdded.","diffHunk":"@@ -10,8 +11,22 @@ def func(new):\n     \"\"\"\n \n \n+@deprecate_settings(x=('a', lambda a: a+1), y=('a', lambda a: a+2))\n+def func_2(x, y):\n+    return x+y\n+\n+\n class DeprecateSettingsTest(unittest.TestCase):\n \n     def test_docstring(self):\n         self.assertEqual(func.__doc__.strip(),\n                          'This docstring will not be lost.')\n+\n+    def test_multiple_args(self):\n+        logger = logging.getLogger()\n+\n+        with self.assertLogs(logger, 'WARNING') as cm:\n+            self.assertEqual(func_2(a=1), 5)\n+\n+            self.assertRegex(cm.output[0], 'WARNING:root:The setting `a` is '\n+                             r'deprecated. Please use `[xy]` instead.')","author":{"login":"nalinbhardwaj","avatarUrl":"https://avatars3.githubusercontent.com/u/6984346?v=4","name":"Nalin Bhardwaj"},"createdAt":"2018-08-11T02:58:51Z","lastEditedAt":null,"updatedAt":"2018-08-11T02:58:51Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQxNDg5MA==","url":"https://github.com/coala/coala/pull/5701#discussion_r209414890","bodyText":"Does it give two error messages?\nIf it only gives one error message, it should say \"Please use x & y instead\"\nIf it gives two error messages, sort them and check both as you did for test_splitting_with_conflict","diffHunk":"@@ -10,8 +11,22 @@ def func(new):\n     \"\"\"\n \n \n+@deprecate_settings(x=('a', lambda a: a+1), y=('a', lambda a: a+2))\n+def func_2(x, y):\n+    return x+y\n+\n+\n class DeprecateSettingsTest(unittest.TestCase):\n \n     def test_docstring(self):\n         self.assertEqual(func.__doc__.strip(),\n                          'This docstring will not be lost.')\n+\n+    def test_multiple_args(self):\n+        logger = logging.getLogger()\n+\n+        with self.assertLogs(logger, 'WARNING') as cm:\n+            self.assertEqual(func_2(a=1), 5)\n+\n+            self.assertRegex(cm.output[0], 'WARNING:root:The setting `a` is '\n+                             r'deprecated. Please use `[xy]` instead.')","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-11T03:23:14Z","lastEditedAt":null,"updatedAt":"2018-08-11T03:23:14Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQxNTAwMg==","url":"https://github.com/coala/coala/pull/5701#discussion_r209415002","bodyText":"No, there's only a single error message. This seems to be a deliberate choice in a22ec25.","diffHunk":"@@ -10,8 +11,22 @@ def func(new):\n     \"\"\"\n \n \n+@deprecate_settings(x=('a', lambda a: a+1), y=('a', lambda a: a+2))\n+def func_2(x, y):\n+    return x+y\n+\n+\n class DeprecateSettingsTest(unittest.TestCase):\n \n     def test_docstring(self):\n         self.assertEqual(func.__doc__.strip(),\n                          'This docstring will not be lost.')\n+\n+    def test_multiple_args(self):\n+        logger = logging.getLogger()\n+\n+        with self.assertLogs(logger, 'WARNING') as cm:\n+            self.assertEqual(func_2(a=1), 5)\n+\n+            self.assertRegex(cm.output[0], 'WARNING:root:The setting `a` is '\n+                             r'deprecated. Please use `[xy]` instead.')","author":{"login":"nalinbhardwaj","avatarUrl":"https://avatars3.githubusercontent.com/u/6984346?v=4","name":"Nalin Bhardwaj"},"createdAt":"2018-08-11T03:29:55Z","lastEditedAt":"2018-08-11T03:32:42Z","updatedAt":"2018-08-11T03:32:42Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMjI1MTQxMA==","url":"https://github.com/coala/coala/pull/5701#issuecomment-412251410","bodyText":"reack 7122a12","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-11T05:07:50Z","lastEditedAt":null,"updatedAt":"2018-08-11T05:07:50Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1532801189000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5469","number":5469,"title":"TypeScript.py: Changes aliases variable to tuple","body":"This change changes alias to a tuple\nCloses #5389.","comments":4,"createdAt":"2018-05-17T15:41:59Z","updatedAt":"2018-07-28T18:06:29Z","closedAt":"2018-07-28T18:06:29Z","state":"closed","user":{"login":"jgarciabu","avatarUrl":"https://avatars2.githubusercontent.com/u/16855727?v=4"},"owner":{"login":"jgarciabu","avatarUrl":"https://avatars2.githubusercontent.com/u/16855727?v=4"},"assignee":{"login":"vishal3410","avatarUrl":"https://avatars0.githubusercontent.com/u/25561116?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"importance/medium","color":"fbca04"},{"name":"process/wip","color":"fbca04"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5469","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDM4OTk1OTQwNA==","url":"https://github.com/coala/coala/pull/5469#issuecomment-389959404","bodyText":"The period in your commit message needs to be removed.\nYou can do this with git commit --amend (edit the message) and then git push --force","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-05-17T18:12:37Z","lastEditedAt":null,"updatedAt":"2018-05-17T18:12:37Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM5MDA5OTI3NQ==","url":"https://github.com/coala/coala/pull/5469#issuecomment-390099275","bodyText":"@jgarciabu try to amend the commit message with your terminal this time.\nDo git commit --amend\nA screen with your commit message would open. Remove the period and then hit Ctrl + O then the return key and in the end Ctrl + X\nAfter this force push your changes.","diffHunk":null,"author":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4","name":"Palash Nigam"},"createdAt":"2018-05-18T05:33:41Z","lastEditedAt":null,"updatedAt":"2018-05-18T05:33:41Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM5NTMyMjI3NA==","url":"https://github.com/coala/coala/pull/5469#issuecomment-395322274","bodyText":"There is a duplicate PR for this by another newcomer. #5488\nShould this one be closed? Also the issue link mentioned in the PR description is wrong.","diffHunk":null,"author":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4","name":"Palash Nigam"},"createdAt":"2018-06-07T07:33:09Z","lastEditedAt":null,"updatedAt":"2018-06-07T07:33:09Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQwODYyNTMzNA==","url":"https://github.com/coala/coala/pull/5469#issuecomment-408625334","bodyText":"Duplicate of #5540","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-07-28T18:06:28Z","lastEditedAt":null,"updatedAt":"2018-07-28T18:06:28Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1531452120000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5470","number":5470,"title":"Development_Setup.rst: Update build instructions","body":"Specify that docs-requirements have to be installed\nbefore running the build command. Update instruction\nregarding the requirement to set the PYTHONPATH.\nFix #5449\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":4,"createdAt":"2018-05-19T08:40:27Z","updatedAt":"2018-07-13T03:22:00Z","closedAt":null,"state":"open","user":{"login":"bekicot","avatarUrl":"https://avatars0.githubusercontent.com/u/1826884?v=4"},"owner":{"login":"bekicot","avatarUrl":"https://avatars0.githubusercontent.com/u/1826884?v=4"},"assignee":{"login":"bekicot","avatarUrl":"https://avatars0.githubusercontent.com/u/1826884?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"},{"name":"importance/medium","color":"fbca04"},{"name":"process/wip","color":"fbca04"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5470","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4OTQzMTY2MA==","url":"https://github.com/coala/coala/pull/5470#discussion_r189431660","bodyText":"that wont work on Windows ... ?\nPlease do https://gitlab.com/coala/mobans/issues/8 instead.","diffHunk":"@@ -114,13 +114,18 @@ source in the future.\n Building Documentation\n ----------------------\n \n-You should run this command before trying to build the documentation:\n+You need to have the required dependencies, run this command to install the\n+required dependency:\n \n ::\n \n     (coala-venv)$ pip3 install -r docs-requirements.txt\n \n-Once you have done so, you can build the documentation by entering the docs\n-directory and running ``python3 setup.py docs``. The documentation\n-on the coala website is in\n-the ``coala`` (not ``coala-bears``) repository.\n+Once finished, run this command to build the documentation:\n+\n+::\n+\n+    (coala-venv)$ export PYTHONPATH=$(pwd) && python setup.py docs","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-05-19T10:56:58Z","lastEditedAt":null,"updatedAt":"2018-05-19T10:56:58Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MTY1ODMyNQ==","url":"https://github.com/coala/coala/pull/5470#discussion_r191658325","bodyText":"this line seems strange, may be add something small explaining how the documentations are built from the docstrings","diffHunk":"@@ -114,13 +114,18 @@ source in the future.\n Building Documentation\n ----------------------\n \n-You should run this command before trying to build the documentation:\n+You need to have the required dependencies installed, run this command to\n+install the required dependency:\n \n ::\n \n     (coala-venv)$ pip3 install -r docs-requirements.txt\n \n-Once you have done so, you can build the documentation by entering the docs\n-directory and running ``python3 setup.py docs``. The documentation\n-on the coala website is in\n-the ``coala`` (not ``coala-bears``) repository.\n+Once finished, run this command to build the documentation:\n+\n+::\n+\n+    (coala-venv)$ python3 setup.py docs\n+\n+The documentation on the coala website is in the ``coala`` (not ``coala-bears``)","author":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4","name":"Ishan Srivastava"},"createdAt":"2018-05-30T06:52:17Z","lastEditedAt":null,"updatedAt":"2018-05-30T06:52:17Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MTY1ODM4OQ==","url":"https://github.com/coala/coala/pull/5470#discussion_r191658389","bodyText":"and squash your commits","diffHunk":"@@ -114,13 +114,18 @@ source in the future.\n Building Documentation\n ----------------------\n \n-You should run this command before trying to build the documentation:\n+You need to have the required dependencies installed, run this command to\n+install the required dependency:\n \n ::\n \n     (coala-venv)$ pip3 install -r docs-requirements.txt\n \n-Once you have done so, you can build the documentation by entering the docs\n-directory and running ``python3 setup.py docs``. The documentation\n-on the coala website is in\n-the ``coala`` (not ``coala-bears``) repository.\n+Once finished, run this command to build the documentation:\n+\n+::\n+\n+    (coala-venv)$ python3 setup.py docs\n+\n+The documentation on the coala website is in the ``coala`` (not ``coala-bears``)","author":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4","name":"Ishan Srivastava"},"createdAt":"2018-05-30T06:52:36Z","lastEditedAt":null,"updatedAt":"2018-05-30T06:52:36Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMjIzMzgxOA==","url":"https://github.com/coala/coala/pull/5470#discussion_r202233818","bodyText":"unfortunately not. https://docs.coala.io/en/latest/ is in https://github.com/coala/documentation .\nhttps://api.coala.io/en/latest/ is in https://github.com/coala/coala .\nBoth sites link to each other , and link to github , etc.\nThis PR needs to talk about both repos/sites , as mentioned at #5449 (comment) .  I think you did see that as you mention below that most repos have generated docs, which is good, but the distinction between the two main sites is quite important.\nAnd then there is https://coala.io , which probably used to have some docs on it, but now doesnt, and that is in a different repo.  So it shouldnt be mentioned here.","diffHunk":"@@ -114,13 +114,19 @@ source in the future.\n Building Documentation\n ----------------------\n \n-You should run this command before trying to build the documentation:\n+You need to have the required dependencies installed, run this command to\n+install the required dependency:\n \n ::\n \n     (coala-venv)$ pip3 install -r docs-requirements.txt\n \n-Once you have done so, you can build the documentation by entering the docs\n-directory and running ``python3 setup.py docs``. The documentation\n-on the coala website is in\n-the ``coala`` (not ``coala-bears``) repository.\n+Once finished, run this command to build the documentation:\n+\n+::\n+\n+    (coala-venv)$ python3 setup.py docs\n+\n+The documentation on the https://docs.coala.io/en/latest/ is in the ``coala``","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-07-13T03:15:42Z","lastEditedAt":"2018-07-13T03:21:49Z","updatedAt":"2018-07-13T03:21:49Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM5MTc1NjE1Mg==","url":"https://github.com/coala/coala/pull/5470#issuecomment-391756152","bodyText":"Please dont update blocked PRs.  That puts them back into the review queue when they are not ready to be reviewed, which causes more work for maintainers.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-05-24T15:25:55Z","lastEditedAt":null,"updatedAt":"2018-05-24T15:25:55Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM5MTg3OTU1OQ==","url":"https://github.com/coala/coala/pull/5470#issuecomment-391879559","bodyText":"@jayvdb was updated before I realize that it is blocked already. No more update since then","diffHunk":null,"author":{"login":"bekicot","avatarUrl":"https://avatars0.githubusercontent.com/u/1826884?v=4","name":"Yana Agun Siswanto"},"createdAt":"2018-05-24T22:00:09Z","lastEditedAt":null,"updatedAt":"2018-05-24T22:00:09Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1526771333000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5471","number":5471,"title":"Remove line continuation and ban it in .coafile","body":"Removes all use of line continuation in python files and bans it in .coafile, python section, using KeywordBear.\nCloses #4552\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":3,"createdAt":"2018-05-19T22:41:38Z","updatedAt":"2018-05-19T23:08:53Z","closedAt":"2018-05-19T23:08:53Z","state":"closed","user":{"login":"raduklb","avatarUrl":"https://avatars2.githubusercontent.com/u/36372694?v=4"},"owner":{"login":"raduklb","avatarUrl":"https://avatars2.githubusercontent.com/u/36372694?v=4"},"assignee":{"login":"raduklb","avatarUrl":"https://avatars2.githubusercontent.com/u/36372694?v=4"},"labels":[{"name":"area/CLI","color":"006b75"},{"name":"area/aspects","color":"000000"},{"name":"area/tests","color":"bfd4f2"},{"name":"difficulty/low","color":"207de5"},{"name":"importance/medium","color":"fbca04"},{"name":"process/pending review","color":"bfe5bf"},{"name":"size/M","color":"eb6420"},{"name":"type/bug","color":"e11d21"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5471","comments":[]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1527544702000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5472","number":5472,"title":"Fix invalid escape sequence and remove W605 from ignore list","body":"For short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nhttps://github.com/coala/coala\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!\nCloses #5383","comments":15,"createdAt":"2018-05-20T12:26:56Z","updatedAt":"2018-05-28T21:58:22Z","closedAt":"2018-05-27T11:16:49Z","state":"merged","user":{"login":"seeeturtle","avatarUrl":"https://avatars3.githubusercontent.com/u/22187719?v=4"},"owner":{"login":"seeeturtle","avatarUrl":"https://avatars3.githubusercontent.com/u/22187719?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"},{"name":"importance/medium","color":"fbca04"},{"name":"size/XS","color":"00DE0F"},{"name":"type/bug","color":"e11d21"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5472","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDM5MTIxMDIxMQ==","url":"https://github.com/coala/coala/pull/5472#issuecomment-391210211","bodyText":"@seeeturtle please squash your commits into a single commit This might help http://gitready.com/advanced/2009/02/10/squashing-commits-with-rebase.html","diffHunk":null,"author":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4","name":"Palash Nigam"},"createdAt":"2018-05-23T03:38:11Z","lastEditedAt":null,"updatedAt":"2018-05-23T03:38:11Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM5MTM0Njc4MQ==","url":"https://github.com/coala/coala/pull/5472#issuecomment-391346781","bodyText":"sorry, i just squashed it.","diffHunk":null,"author":{"login":"seeeturtle","avatarUrl":"https://avatars3.githubusercontent.com/u/22187719?v=4","name":"Joshua Chung"},"createdAt":"2018-05-23T13:29:22Z","lastEditedAt":null,"updatedAt":"2018-05-23T13:29:22Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM5MTQxOTk0OA==","url":"https://github.com/coala/coala/pull/5472#issuecomment-391419948","bodyText":"@seeeturtle change it to something like\nRemove W605 and fix invalid escape sequence\nI hope thats 50 chars","diffHunk":null,"author":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4","name":"Palash Nigam"},"createdAt":"2018-05-23T16:48:55Z","lastEditedAt":null,"updatedAt":"2018-05-23T16:48:55Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1528546454000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5473","number":5473,"title":".moban.yaml: Sync Moban","body":"Related to https://gitlab.com/coala/mobans/merge_requests/13\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":4,"createdAt":"2018-05-20T13:51:37Z","updatedAt":"2018-06-09T12:14:14Z","closedAt":"2018-05-20T14:22:48Z","state":"merged","user":{"login":"virresh","avatarUrl":"https://avatars0.githubusercontent.com/u/10978108?v=4"},"owner":{"login":"virresh","avatarUrl":"https://avatars0.githubusercontent.com/u/10978108?v=4"},"labels":[{"name":"process/approved","color":"009800"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5473","comments":[]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1526834194000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5474","number":5474,"title":"Second Commit debugger","body":"Second Commit of debugger.","comments":2,"createdAt":"2018-05-20T16:33:36Z","updatedAt":"2018-05-20T16:36:34Z","closedAt":"2018-05-20T16:35:13Z","state":"closed","user":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4"},"owner":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4"},"labels":[{"name":"process/pending review","color":"bfe5bf"},{"name":"size/S","color":"B1CF0A"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5474","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDM5MDQ5NDUxNw==","url":"https://github.com/coala/coala/pull/5474#issuecomment-390494517","bodyText":"Opened on wrong repo.","diffHunk":null,"author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"createdAt":"2018-05-20T16:35:06Z","lastEditedAt":null,"updatedAt":"2018-05-20T16:35:06Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1533963947000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5475","number":5475,"title":"Formatting: Add tastes to `FileLength` aspect","body":"This adds min_file_length and include_blank_lines\nas tastes to FileLength aspect.\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":14,"createdAt":"2018-05-22T08:50:35Z","updatedAt":"2018-08-11T05:05:47Z","closedAt":"2018-08-11T05:05:47Z","state":"merged","user":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4"},"owner":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4"},"assignee":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4"},"labels":[{"name":"area/aspects","color":"000000"},{"name":"area/documentation","color":"bfe5bf"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5475","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDM5NDQwMzM4Mg==","url":"https://github.com/coala/coala/pull/5475#issuecomment-394403382","bodyText":"The description of minimum line length is not clear.\nIn some languages will it always return 1 since it is possible to combine multiple lines all into one line.\nFor example, what would the min line length be of this code sample?\nfunction fizzBuzz()\n{ \t\n   //for each number between 1 &100\n   for(var i=1;i<=100;i++)\n   {\n      //print Fizz if divisible by 3\n      if(i%3 === 0)\n      {\n         print('Fizz'); \t\n      }\n      //print Buzz if divisible by 5\n      if(i%5 === 0)\n      {\n         print('Buzz');\n      }\n      // otherwise print the number\n      if(i%3 !== 0 && i%5 !== 0)\n      {\n        print(i);\n      }\n   }\n }","diffHunk":null,"author":{"login":"jschwarzwalder","avatarUrl":"https://avatars0.githubusercontent.com/u/8946787?v=4","name":"Jami Schwarzwalder"},"reactions":[],"createdAt":"2018-06-04T15:47:16Z","lastEditedAt":"2018-06-04T21:08:49Z","updatedAt":"2018-06-04T21:08:49Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM5NTAwMTI5Mg==","url":"https://github.com/coala/coala/pull/5475#issuecomment-395001292","bodyText":"@jschwarzwalder you are exactly on point. This is the thing me and John have been debating on, all this time. Most probably, implementation of line-counting algorithms will be required to correctly predict the complexity of the code and accordingly show the number of lines.\nI had proposed min_line_length and include_blank_lines tastes as part of the FileLength aspect considering the current design of the bear (LineCountBear https://github.com/coala/coala-bears/blob/master/bears/general/LineCountBear.py) and it feels now that the bear itself needs a redesign on this plus supporting aspects on top of it.\nI think you should see coala/cEPs#148 (comment) and furthermore coala/cEPs#148 (comment) to know more.\nLay your opinions too on this.\nAnd IMO this PR needs to be closed.","diffHunk":null,"author":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4","name":"Pareksha Manchanda"},"reactions":[],"createdAt":"2018-06-06T09:12:24Z","lastEditedAt":null,"updatedAt":"2018-06-06T09:12:24Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM5NTk3MzAwNg==","url":"https://github.com/coala/coala/pull/5475#issuecomment-395973006","bodyText":"While these mins and maxs are not very well designed, I think it is worthwhile keeping min_file_length and discarding include_blank_lines.\nmin_file_length can be used to reject really short files, especially 0 line files.  It isnt an especially useful tool, but it isnt a bad concept, and has some limited usefulness.\nAlso this min only compliments the existing max, so we are not making the problem 'worse' that it already is.\nHowever as we've established, include_blank_lines creates new problems, and the user will want other tastes as include_blank_lines is fairly limited, and we can not implement them easily.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-06-09T14:21:11Z","lastEditedAt":null,"updatedAt":"2018-06-09T14:21:11Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM5NjAxODE0Ng==","url":"https://github.com/coala/coala/pull/5475#issuecomment-396018146","bodyText":"Yes, min_file_length is compatible with the present usability of the bear and so, it is ok for now. I also agree that include_blank_lines is sort of problematic for now. Once the bear is migrated, we can think of stretching its functionality.\nI have removed include_blank_lines. Please review 😃","diffHunk":null,"author":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4","name":"Pareksha Manchanda"},"reactions":[],"createdAt":"2018-06-10T03:55:33Z","lastEditedAt":null,"updatedAt":"2018-06-10T03:55:33Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM5NjU4Mjc0MA==","url":"https://github.com/coala/coala/pull/5475#issuecomment-396582740","bodyText":"@pareksha , please remove \"This is part of GSoC 2018 project.\" (or any other reference to GSoC) from commit message, and create issues for your PRs, and using them in your commit messages.\nThat information is not relevant to the reader of the commit.\nYour issues should refer to the cEP PR, or to the cEP once it is merged.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-06-12T13:07:59Z","lastEditedAt":null,"updatedAt":"2018-06-12T13:07:59Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM5Nzc5NTU2Mw==","url":"https://github.com/coala/coala/pull/5475#issuecomment-397795563","bodyText":"If the only use case currently is to detect if the file length is 0, then why not make a taste for is_empty?\nI would still have many questions about what min_file_length means. If we include it, it should qualify what would be counted.\nIf the min_file_length ignores comments and blank lines that can be helpful to know how many actual lines of code exist, but without both those qualifiers It might be too ambiguous for developers to use.\nDoes it minify the code? Does it simply count the current number of existing lines? Does it give suggestions for potential ways to reduce the number of lines with things the ternary operations?","diffHunk":null,"author":{"login":"jschwarzwalder","avatarUrl":"https://avatars0.githubusercontent.com/u/8946787?v=4","name":"Jami Schwarzwalder"},"reactions":[],"createdAt":"2018-06-16T07:59:16Z","lastEditedAt":null,"updatedAt":"2018-06-16T07:59:16Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM5Nzg0ODkzOQ==","url":"https://github.com/coala/coala/pull/5475#issuecomment-397848939","bodyText":"Python has a requirement of __init__.py files, and these files are often empty. c.f. #2821\nA min length of 1 will break coala repos, but we could fix that by adding a module docstring to every empty __init__.py.  c.f. #5359","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-06-17T01:44:49Z","lastEditedAt":null,"updatedAt":"2018-06-17T01:44:49Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM5Nzg0OTEzMg==","url":"https://github.com/coala/coala/pull/5475#issuecomment-397849132","bodyText":"max_file_length defines a rule for a hard physical line count maximum.\nThe LineCountBear would implement this taste by detecting files which exceed it, and producing an error.  That bear is a detection bear, not a fixing/suggestion bear.\nWe do not have any bear which attempts to fix files which exceed a maximum line count.  That would be difficult.\nWe do not have any bear which attempts to fix files which have insufficient line count.  However this is more feasible to implement.  We could have a bear which automatically fixed a minimum line count for Python, by automatically adding a dummy docstring.  It would also be possible to fix it for any scripting language by adding a 'hashbang', but that would be dumb as the otherwise empty file probably isn't runnable.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNTMzNDM0Mw==","createdAt":"2018-06-20T06:28:55Z","content":"THUMBS_UP","user":{"login":"pareksha","name":"Pareksha Manchanda"}}],"createdAt":"2018-06-17T01:52:16Z","lastEditedAt":"2018-06-17T01:52:51Z","updatedAt":"2018-06-17T01:52:51Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM5Nzg0OTE3OQ==","url":"https://github.com/coala/coala/pull/5475#issuecomment-397849179","bodyText":"Also please investigate the suggested_values.  What is it used for?  Why are you using this specific value for it.  It is not intuitive.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-06-17T01:54:03Z","lastEditedAt":null,"updatedAt":"2018-06-17T01:54:03Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM5OTMxMzY0MQ==","url":"https://github.com/coala/coala/pull/5475#issuecomment-399313641","bodyText":"suggested_values are more or less used to suggest values (not all values that the user can put, but what the user should put to get the desirable/better results) as I see here https://github.com/coala/coala/blob/master/coalib/bearlib/aspects/Formatting.py#L253 and at many other places too. What I meant here by (1,) was that the values can be 1 or any other int but now I am also feeling that there should be more than one suggested value (and not just the default value). So, I think suggested_values in both min_file_length and max_file_length need to be changed to have more integers.\nHow about (499, 999, 4999, 9999,) in max_file_length\nand (1, 50, 100,) in min_file_length as suggested_values?","diffHunk":null,"author":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4","name":"Pareksha Manchanda"},"reactions":[],"createdAt":"2018-06-22T03:58:11Z","lastEditedAt":null,"updatedAt":"2018-06-22T03:58:11Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1535861558000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5482","number":5482,"title":".ci/appveyor.yml: Add Python 3.6 jobs","body":"For short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":8,"createdAt":"2018-05-26T14:09:25Z","updatedAt":"2018-09-02T04:12:38Z","closedAt":"2018-09-02T04:12:38Z","state":"merged","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5482","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDM5Nzg1NTM0Mg==","url":"https://github.com/coala/coala/pull/5482#issuecomment-397855342","bodyText":"Ideally we do this with coala/coala-bears#2509 , but that is blocked.  If upstream PR pyupio/safety#36 doesnt get updated, we may want to put more effort into unblocking this situation.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-06-17T05:14:23Z","lastEditedAt":null,"updatedAt":"2018-06-17T05:14:23Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1528551578000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5483","number":5483,"title":"Testing_Bears.rst: Change check_validity docs","body":"This changes the description of check_validity in Example 2\nto avoid ambiguity and helps understand its behavior by\nshort explanations for both usages from example.\nCloses #5439\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":10,"createdAt":"2018-05-26T17:39:18Z","updatedAt":"2018-06-09T13:39:38Z","closedAt":"2018-06-09T13:39:18Z","state":"merged","user":{"login":"stobis","avatarUrl":"https://avatars1.githubusercontent.com/u/23073061?v=4"},"owner":{"login":"stobis","avatarUrl":"https://avatars1.githubusercontent.com/u/23073061?v=4"},"assignee":{"login":"stobis","avatarUrl":"https://avatars1.githubusercontent.com/u/23073061?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/low","color":"207de5"},{"name":"importance/medium","color":"fbca04"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5483","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MTI2MDYzMg==","url":"https://github.com/coala/coala/pull/5483#discussion_r191260632","bodyText":"asserts if your bear either yields or does not yield\n\nare you sure about this? if it does both then we can simply use it everywhere :P\nI will recommend it to try check_validity at least once locally, things get clear 😃 .\nAlso, this line is contradicting with line 103","diffHunk":"@@ -93,15 +93,17 @@ arguments.\n \n     ``bad_file`` here is same as ``bad_file`` in the above example.\n \n-``check_validity`` asserts if your bear yields any results for a particular\n-check with a list of strings. First a *Section* and your Bear\n-(in this case ``TooManyLinesBear``) is ``setUp``. Now your *Section* consists\n-by default *Settings*. You can append any *Setting* depending on your test.\n-Validate a check by passing your bear, lines to check as parameters\n-(pass a few other parameters if necessary) to ``check_validity``. The method\n-``self.check_validity(self.uut, [\"import os\"])`` asserts if your bear\n-``self.uut`` yields a result when a list of strings ``[\"import os\"]`` is\n-passed.\n+``check_validity`` asserts if your bear either yields or does not yield any","author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"createdAt":"2018-05-28T19:10:08Z","lastEditedAt":null,"updatedAt":"2018-05-28T19:10:08Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MTI2MTg0NA==","url":"https://github.com/coala/coala/pull/5483#discussion_r191261844","bodyText":"It's almost taken from \n  \n    \n      coala/coalib/testing/LocalBearTestHelper.py\n    \n    \n        Lines 146 to 147\n      in\n      454b565\n    \n    \n    \n    \n\n        \n          \n                   Asserts that a check of the given lines with the given local bear \n        \n\n        \n          \n                   either yields or does not yield any results. \n        \n    \n  \n\n\nI can agree that omitting information about valid flag leads to contradition and I should fix it :)","diffHunk":"@@ -93,15 +93,17 @@ arguments.\n \n     ``bad_file`` here is same as ``bad_file`` in the above example.\n \n-``check_validity`` asserts if your bear yields any results for a particular\n-check with a list of strings. First a *Section* and your Bear\n-(in this case ``TooManyLinesBear``) is ``setUp``. Now your *Section* consists\n-by default *Settings*. You can append any *Setting* depending on your test.\n-Validate a check by passing your bear, lines to check as parameters\n-(pass a few other parameters if necessary) to ``check_validity``. The method\n-``self.check_validity(self.uut, [\"import os\"])`` asserts if your bear\n-``self.uut`` yields a result when a list of strings ``[\"import os\"]`` is\n-passed.\n+``check_validity`` asserts if your bear either yields or does not yield any","author":{"login":"stobis","avatarUrl":"https://avatars1.githubusercontent.com/u/23073061?v=4","name":"Michal Stobierski"},"createdAt":"2018-05-28T19:22:16Z","lastEditedAt":null,"updatedAt":"2018-05-28T19:22:16Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MTI2NTY2OA==","url":"https://github.com/coala/coala/pull/5483#discussion_r191265668","bodyText":"I will suggest you make the line 96 to asserts if your bear does not yield any 😄","diffHunk":"@@ -93,15 +93,17 @@ arguments.\n \n     ``bad_file`` here is same as ``bad_file`` in the above example.\n \n-``check_validity`` asserts if your bear yields any results for a particular\n-check with a list of strings. First a *Section* and your Bear\n-(in this case ``TooManyLinesBear``) is ``setUp``. Now your *Section* consists\n-by default *Settings*. You can append any *Setting* depending on your test.\n-Validate a check by passing your bear, lines to check as parameters\n-(pass a few other parameters if necessary) to ``check_validity``. The method\n-``self.check_validity(self.uut, [\"import os\"])`` asserts if your bear\n-``self.uut`` yields a result when a list of strings ``[\"import os\"]`` is\n-passed.\n+``check_validity`` asserts if your bear either yields or does not yield any","author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"createdAt":"2018-05-28T20:00:22Z","lastEditedAt":"2018-05-28T20:00:44Z","updatedAt":"2018-05-28T20:00:44Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM5NTIwOTE5MQ==","url":"https://github.com/coala/coala/pull/5483#issuecomment-395209191","bodyText":"@jayvdb As you wish :)","diffHunk":null,"author":{"login":"stobis","avatarUrl":"https://avatars1.githubusercontent.com/u/23073061?v=4","name":"Michal Stobierski"},"createdAt":"2018-06-06T20:50:18Z","lastEditedAt":null,"updatedAt":"2018-06-06T20:50:18Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1528969609000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5484","number":5484,"title":"Moban test requirements","body":"For short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":8,"createdAt":"2018-05-27T09:58:30Z","updatedAt":"2018-06-14T09:46:49Z","closedAt":"2018-06-14T09:31:56Z","state":"merged","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"process/approved","color":"009800"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5484","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTM0Njk4MA==","url":"https://github.com/coala/coala/pull/5484#discussion_r195346980","bodyText":"This needs update.","diffHunk":"@@ -6,15 +6,15 @@ codecov~=2.0.5\n freezegun~=0.3.9\n moban~=0.0.9\n pytest~=3.1.1\n-pytest-cov~=2.2\n+pytest-cov~=2.4\n pytest-env~=0.6.0\n pytest-error-for-skips~=1.0\n pytest-instafail~=0.3.0\n pytest-mock~=1.1\n pytest-reorder~=0.1.0\n pytest-reqs~=0.0.6\n-pytest-timeout~=1.0\n-pytest-xdist~=1.14\n+pytest-timeout~=1.2","author":{"login":"sangamcse","avatarUrl":"https://avatars2.githubusercontent.com/u/26381717?v=4","name":"Sangam Kumar"},"createdAt":"2018-06-14T08:56:00Z","lastEditedAt":null,"updatedAt":"2018-06-14T08:56:00Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTM0NzU0Mw==","url":"https://github.com/coala/coala/pull/5484#discussion_r195347543","bodyText":"Rebase required for this change.","diffHunk":"@@ -6,15 +6,15 @@ codecov~=2.0.5\n freezegun~=0.3.9\n moban~=0.0.9\n pytest~=3.1.1\n-pytest-cov~=2.2\n+pytest-cov~=2.4\n pytest-env~=0.6.0\n pytest-error-for-skips~=1.0\n pytest-instafail~=0.3.0\n pytest-mock~=1.1\n pytest-reorder~=0.1.0\n pytest-reqs~=0.0.6\n-pytest-timeout~=1.0\n-pytest-xdist~=1.14\n+pytest-timeout~=1.2","author":{"login":"sangamcse","avatarUrl":"https://avatars2.githubusercontent.com/u/26381717?v=4","name":"Sangam Kumar"},"createdAt":"2018-06-14T08:57:58Z","lastEditedAt":null,"updatedAt":"2018-06-14T08:57:58Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM5NzIwOTg1Nw==","url":"https://github.com/coala/coala/pull/5484#issuecomment-397209857","bodyText":"This depends on #5506","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-06-14T08:11:28Z","lastEditedAt":null,"updatedAt":"2018-06-14T08:11:28Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM5NzIxMDA4Nw==","url":"https://github.com/coala/coala/pull/5484#issuecomment-397210087","bodyText":"See also coala/coala-bears#2528","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-06-14T08:12:15Z","lastEditedAt":null,"updatedAt":"2018-06-14T08:12:15Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM5NzIyMTAzMA==","url":"https://github.com/coala/coala/pull/5484#issuecomment-397221030","bodyText":"All PR have similar changes. I guess merging this first would make others redundant.","diffHunk":null,"author":{"login":"MacBox7","avatarUrl":"https://avatars0.githubusercontent.com/u/15063552?v=4","name":"Ankit Joshi"},"createdAt":"2018-06-14T08:50:40Z","lastEditedAt":null,"updatedAt":"2018-06-14T08:50:40Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM5NzIyNzE2OQ==","url":"https://github.com/coala/coala/pull/5484#issuecomment-397227169","bodyText":"Rebased.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-06-14T09:11:05Z","lastEditedAt":null,"updatedAt":"2018-06-14T09:11:05Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1529172112000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5485","number":5485,"title":"Add FileFactory.py","body":"This adds the FileFactory class. Objects of this\nclass will be used to represent files and\nreplace the file contents in the file dict.\nCloses #3530\ncc @Makman2 @fneu @shreyans800755\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":7,"createdAt":"2018-05-28T11:04:58Z","updatedAt":"2018-06-16T18:01:52Z","closedAt":"2018-06-16T16:01:26Z","state":"merged","user":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4"},"owner":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4"},"assignee":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4"},"labels":[{"name":"area/core","color":"eb6420"},{"name":"difficulty/high","color":"B319e7"},{"name":"process/approved","color":"009800"},{"name":"size/S","color":"B1CF0A"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5485","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MTI2MjkwNA==","url":"https://github.com/coala/coala/pull/5485#discussion_r191262904","bodyText":"It should expand to a full path, otherwise we can have the same FileProxy pointing to 2 different files, but they compare equal because the working directory is different ;)","diffHunk":"@@ -0,0 +1,120 @@\n+import linecache\n+import os\n+\n+from coala_utils.decorators import generate_eq\n+\n+\n+@generate_eq('_filename', '_stamp')\n+class FileFactory:\n+    \"\"\"\n+    The FileFactory is a wrapper object to replace the actual file contents\n+    from the file-dict. The object contains the following information about\n+    the file:\n+\n+        * The filename (absolute file path).\n+        * The parent directory the file is located in.\n+        * The modification timestamp of the file.\n+        * The file in the form of a string.\n+        * The file in the form of a list.\n+        * The file in binary format.\n+\n+    The equality of the object is checked just based on its filename and\n+    timestamp.\n+\n+    To initialize a FileFactory object for a file:\n+\n+    >>> fp = FileFactory(\"./tests/io/FileFactoryTestFiles/test.txt\")\n+\n+    Now we can get the filename:\n+\n+    >>> fp.name\n+    './tests/io/FileFactoryTestFiles/test.txt'","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-05-28T19:32:58Z","lastEditedAt":null,"updatedAt":"2018-05-28T19:32:58Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MTI2Mjk0MQ==","url":"https://github.com/coala/coala/pull/5485#discussion_r191262941","bodyText":"what's lines() doing here? :D","diffHunk":"@@ -0,0 +1,120 @@\n+import linecache\n+import os\n+\n+from coala_utils.decorators import generate_eq\n+\n+\n+@generate_eq('_filename', '_stamp')\n+class FileFactory:\n+    \"\"\"\n+    The FileFactory is a wrapper object to replace the actual file contents\n+    from the file-dict. The object contains the following information about\n+    the file:\n+\n+        * The filename (absolute file path).\n+        * The parent directory the file is located in.\n+        * The modification timestamp of the file.\n+        * The file in the form of a string.\n+        * The file in the form of a list.\n+        * The file in binary format.\n+\n+    The equality of the object is checked just based on its filename and\n+    timestamp.\n+\n+    To initialize a FileFactory object for a file:\n+\n+    >>> fp = FileFactory(\"./tests/io/FileFactoryTestFiles/test.txt\")\n+\n+    Now we can get the filename:\n+\n+    >>> fp.name\n+    './tests/io/FileFactoryTestFiles/test.txt'\n+\n+    Make the object into an iterable when required\n+\n+    >>> fp.lines()","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-05-28T19:33:21Z","lastEditedAt":null,"updatedAt":"2018-05-28T19:33:21Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MTI2MzEzNA==","url":"https://github.com/coala/coala/pull/5485#discussion_r191263134","bodyText":"Hm okay that makes the doctest not so reliable, but you find a solution 👍\n(you can maybe use tempfile)","diffHunk":"@@ -0,0 +1,120 @@\n+import linecache\n+import os\n+\n+from coala_utils.decorators import generate_eq\n+\n+\n+@generate_eq('_filename', '_stamp')\n+class FileFactory:\n+    \"\"\"\n+    The FileFactory is a wrapper object to replace the actual file contents\n+    from the file-dict. The object contains the following information about\n+    the file:\n+\n+        * The filename (absolute file path).\n+        * The parent directory the file is located in.\n+        * The modification timestamp of the file.\n+        * The file in the form of a string.\n+        * The file in the form of a list.\n+        * The file in binary format.\n+\n+    The equality of the object is checked just based on its filename and\n+    timestamp.\n+\n+    To initialize a FileFactory object for a file:\n+\n+    >>> fp = FileFactory(\"./tests/io/FileFactoryTestFiles/test.txt\")\n+\n+    Now we can get the filename:\n+\n+    >>> fp.name\n+    './tests/io/FileFactoryTestFiles/test.txt'","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-05-28T19:35:20Z","lastEditedAt":null,"updatedAt":"2018-05-28T19:35:20Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MTI2MzM1Nw==","url":"https://github.com/coala/coala/pull/5485#discussion_r191263357","bodyText":"Oh but below you don't call lines, and it returns some list. That doesn't look right :O","diffHunk":"@@ -0,0 +1,120 @@\n+import linecache\n+import os\n+\n+from coala_utils.decorators import generate_eq\n+\n+\n+@generate_eq('_filename', '_stamp')\n+class FileFactory:\n+    \"\"\"\n+    The FileFactory is a wrapper object to replace the actual file contents\n+    from the file-dict. The object contains the following information about\n+    the file:\n+\n+        * The filename (absolute file path).\n+        * The parent directory the file is located in.\n+        * The modification timestamp of the file.\n+        * The file in the form of a string.\n+        * The file in the form of a list.\n+        * The file in binary format.\n+\n+    The equality of the object is checked just based on its filename and\n+    timestamp.\n+\n+    To initialize a FileFactory object for a file:\n+\n+    >>> fp = FileFactory(\"./tests/io/FileFactoryTestFiles/test.txt\")\n+\n+    Now we can get the filename:\n+\n+    >>> fp.name\n+    './tests/io/FileFactoryTestFiles/test.txt'\n+\n+    Make the object into an iterable when required\n+\n+    >>> fp.lines()","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-05-28T19:37:26Z","lastEditedAt":null,"updatedAt":"2018-05-28T19:37:26Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MTI2MzM4Ng==","url":"https://github.com/coala/coala/pull/5485#discussion_r191263386","bodyText":"Rather return a tuple so nobody can modify it.","diffHunk":"@@ -0,0 +1,120 @@\n+import linecache\n+import os\n+\n+from coala_utils.decorators import generate_eq\n+\n+\n+@generate_eq('_filename', '_stamp')\n+class FileFactory:\n+    \"\"\"\n+    The FileFactory is a wrapper object to replace the actual file contents\n+    from the file-dict. The object contains the following information about\n+    the file:\n+\n+        * The filename (absolute file path).\n+        * The parent directory the file is located in.\n+        * The modification timestamp of the file.\n+        * The file in the form of a string.\n+        * The file in the form of a list.\n+        * The file in binary format.\n+\n+    The equality of the object is checked just based on its filename and\n+    timestamp.\n+\n+    To initialize a FileFactory object for a file:\n+\n+    >>> fp = FileFactory(\"./tests/io/FileFactoryTestFiles/test.txt\")\n+\n+    Now we can get the filename:\n+\n+    >>> fp.name\n+    './tests/io/FileFactoryTestFiles/test.txt'\n+\n+    Make the object into an iterable when required\n+\n+    >>> fp.lines()\n+    >>> for line in fp:\n+    ...     print(line)\n+    This is a test file.\n+    <BLANKLINE>\n+\n+    Retrieve a single line:\n+\n+    >>> fp.line(1)\n+    'This is a test file.\\\\n'\n+\n+    Get all the lines in the file as a list:\n+\n+    >>> fp.lines\n+    ['This is a test file.\\\\n']","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-05-28T19:37:44Z","lastEditedAt":null,"updatedAt":"2018-05-28T19:37:44Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MTI2MzUwMw==","url":"https://github.com/coala/coala/pull/5485#discussion_r191263503","bodyText":"We should expand it regardless what notation the user wants ;) That makes it way more convenient to use.","diffHunk":"@@ -0,0 +1,120 @@\n+import linecache\n+import os\n+\n+from coala_utils.decorators import generate_eq\n+\n+\n+@generate_eq('_filename', '_stamp')\n+class FileFactory:\n+    \"\"\"\n+    The FileFactory is a wrapper object to replace the actual file contents\n+    from the file-dict. The object contains the following information about\n+    the file:\n+\n+        * The filename (absolute file path).\n+        * The parent directory the file is located in.\n+        * The modification timestamp of the file.\n+        * The file in the form of a string.\n+        * The file in the form of a list.\n+        * The file in binary format.\n+\n+    The equality of the object is checked just based on its filename and\n+    timestamp.\n+\n+    To initialize a FileFactory object for a file:\n+\n+    >>> fp = FileFactory(\"./tests/io/FileFactoryTestFiles/test.txt\")\n+\n+    Now we can get the filename:\n+\n+    >>> fp.name\n+    './tests/io/FileFactoryTestFiles/test.txt'\n+\n+    Make the object into an iterable when required\n+\n+    >>> fp.lines()\n+    >>> for line in fp:\n+    ...     print(line)\n+    This is a test file.\n+    <BLANKLINE>\n+\n+    Retrieve a single line:\n+\n+    >>> fp.line(1)\n+    'This is a test file.\\\\n'\n+\n+    Get all the lines in the file as a list:\n+\n+    >>> fp.lines\n+    ['This is a test file.\\\\n']\n+    \"\"\"\n+\n+    def __init__(self, filename):\n+        \"\"\"\n+        :param filename:\n+            The absolute filepath.","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNDQ0NDIwNQ==","createdAt":"2018-05-31T21:36:28Z","content":"THUMBS_UP","user":{"login":"shreyans800755","name":"Shreyans"}}],"createdAt":"2018-05-28T19:38:43Z","lastEditedAt":null,"updatedAt":"2018-05-28T19:38:43Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MTI2NzE3Ng==","url":"https://github.com/coala/coala/pull/5485#discussion_r191267176","bodyText":"make it maybe a property?","diffHunk":"@@ -0,0 +1,120 @@\n+import linecache\n+import os\n+\n+from coala_utils.decorators import generate_eq\n+\n+\n+@generate_eq('_filename', '_stamp')\n+class FileFactory:\n+    \"\"\"\n+    The FileFactory is a wrapper object to replace the actual file contents\n+    from the file-dict. The object contains the following information about\n+    the file:\n+\n+        * The filename (absolute file path).\n+        * The parent directory the file is located in.\n+        * The modification timestamp of the file.\n+        * The file in the form of a string.\n+        * The file in the form of a list.\n+        * The file in binary format.\n+\n+    The equality of the object is checked just based on its filename and\n+    timestamp.\n+\n+    To initialize a FileFactory object for a file:\n+\n+    >>> fp = FileFactory(\"./tests/io/FileFactoryTestFiles/test.txt\")\n+\n+    Now we can get the filename:\n+\n+    >>> fp.name\n+    './tests/io/FileFactoryTestFiles/test.txt'\n+\n+    Make the object into an iterable when required\n+\n+    >>> fp.lines()\n+    >>> for line in fp:\n+    ...     print(line)\n+    This is a test file.\n+    <BLANKLINE>\n+\n+    Retrieve a single line:\n+\n+    >>> fp.line(1)\n+    'This is a test file.\\\\n'\n+\n+    Get all the lines in the file as a list:\n+\n+    >>> fp.lines\n+    ['This is a test file.\\\\n']\n+    \"\"\"\n+\n+    def __init__(self, filename):\n+        \"\"\"\n+        :param filename:\n+            The absolute filepath.\n+        \"\"\"\n+        self._filename = filename\n+        self._parent = os.path.abspath(os.path.dirname(self._filename))\n+        self._stamp = os.path.getmtime(self._filename)\n+\n+    def line(self, line):\n+        \"\"\"\n+        :param line:\n+            The line number from which the string is to be retrieved.\n+        :return:\n+            The retrieved string at the given line number from the file.\n+        \"\"\"\n+        return linecache.getline(self._filename, line)\n+\n+    def lines(self):","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-05-28T20:14:52Z","lastEditedAt":null,"updatedAt":"2018-05-28T20:14:52Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MTI2NzE5OA==","url":"https://github.com/coala/coala/pull/5485#discussion_r191267198","bodyText":"you don't return something ;)","diffHunk":"@@ -0,0 +1,120 @@\n+import linecache\n+import os\n+\n+from coala_utils.decorators import generate_eq\n+\n+\n+@generate_eq('_filename', '_stamp')\n+class FileFactory:\n+    \"\"\"\n+    The FileFactory is a wrapper object to replace the actual file contents\n+    from the file-dict. The object contains the following information about\n+    the file:\n+\n+        * The filename (absolute file path).\n+        * The parent directory the file is located in.\n+        * The modification timestamp of the file.\n+        * The file in the form of a string.\n+        * The file in the form of a list.\n+        * The file in binary format.\n+\n+    The equality of the object is checked just based on its filename and\n+    timestamp.\n+\n+    To initialize a FileFactory object for a file:\n+\n+    >>> fp = FileFactory(\"./tests/io/FileFactoryTestFiles/test.txt\")\n+\n+    Now we can get the filename:\n+\n+    >>> fp.name\n+    './tests/io/FileFactoryTestFiles/test.txt'\n+\n+    Make the object into an iterable when required\n+\n+    >>> fp.lines()\n+    >>> for line in fp:\n+    ...     print(line)\n+    This is a test file.\n+    <BLANKLINE>\n+\n+    Retrieve a single line:\n+\n+    >>> fp.line(1)\n+    'This is a test file.\\\\n'\n+\n+    Get all the lines in the file as a list:\n+\n+    >>> fp.lines\n+    ['This is a test file.\\\\n']\n+    \"\"\"\n+\n+    def __init__(self, filename):\n+        \"\"\"\n+        :param filename:\n+            The absolute filepath.\n+        \"\"\"\n+        self._filename = filename\n+        self._parent = os.path.abspath(os.path.dirname(self._filename))\n+        self._stamp = os.path.getmtime(self._filename)\n+\n+    def line(self, line):\n+        \"\"\"\n+        :param line:\n+            The line number from which the string is to be retrieved.\n+        :return:\n+            The retrieved string at the given line number from the file.\n+        \"\"\"\n+        return linecache.getline(self._filename, line)\n+\n+    def lines(self):\n+        \"\"\"\n+        To get all the lines in the file in form of a list.\n+        \"\"\"\n+        self.lines = linecache.getlines(self._filename)","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-05-28T20:15:03Z","lastEditedAt":null,"updatedAt":"2018-05-28T20:15:03Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MTI2NzM0NQ==","url":"https://github.com/coala/coala/pull/5485#discussion_r191267345","bodyText":"Ah wait, now I understand. You try to cache things here. However, this is highly inconsistent because the first time you have to call it (without a return value even), and next time you can't call it and must access it like a field. Please create consistent API ;)","diffHunk":"@@ -0,0 +1,120 @@\n+import linecache\n+import os\n+\n+from coala_utils.decorators import generate_eq\n+\n+\n+@generate_eq('_filename', '_stamp')\n+class FileFactory:\n+    \"\"\"\n+    The FileFactory is a wrapper object to replace the actual file contents\n+    from the file-dict. The object contains the following information about\n+    the file:\n+\n+        * The filename (absolute file path).\n+        * The parent directory the file is located in.\n+        * The modification timestamp of the file.\n+        * The file in the form of a string.\n+        * The file in the form of a list.\n+        * The file in binary format.\n+\n+    The equality of the object is checked just based on its filename and\n+    timestamp.\n+\n+    To initialize a FileFactory object for a file:\n+\n+    >>> fp = FileFactory(\"./tests/io/FileFactoryTestFiles/test.txt\")\n+\n+    Now we can get the filename:\n+\n+    >>> fp.name\n+    './tests/io/FileFactoryTestFiles/test.txt'\n+\n+    Make the object into an iterable when required\n+\n+    >>> fp.lines()\n+    >>> for line in fp:\n+    ...     print(line)\n+    This is a test file.\n+    <BLANKLINE>\n+\n+    Retrieve a single line:\n+\n+    >>> fp.line(1)\n+    'This is a test file.\\\\n'\n+\n+    Get all the lines in the file as a list:\n+\n+    >>> fp.lines\n+    ['This is a test file.\\\\n']\n+    \"\"\"\n+\n+    def __init__(self, filename):\n+        \"\"\"\n+        :param filename:\n+            The absolute filepath.\n+        \"\"\"\n+        self._filename = filename\n+        self._parent = os.path.abspath(os.path.dirname(self._filename))\n+        self._stamp = os.path.getmtime(self._filename)\n+\n+    def line(self, line):\n+        \"\"\"\n+        :param line:\n+            The line number from which the string is to be retrieved.\n+        :return:\n+            The retrieved string at the given line number from the file.\n+        \"\"\"\n+        return linecache.getline(self._filename, line)\n+\n+    def lines(self):\n+        \"\"\"\n+        To get all the lines in the file in form of a list.\n+        \"\"\"\n+        self.lines = linecache.getlines(self._filename)","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-05-28T20:16:16Z","lastEditedAt":null,"updatedAt":"2018-05-28T20:16:16Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MjI0NDcwOQ==","url":"https://github.com/coala/coala/pull/5485#discussion_r192244709","bodyText":"wrapper class","diffHunk":"@@ -0,0 +1,115 @@\n+import linecache\n+import os\n+\n+from coala_utils.decorators import generate_eq\n+\n+\n+@generate_eq('_filename', '_stamp')\n+class FileFactory:\n+    \"\"\"\n+    The FileFactory is a wrapper object to replace the actual file contents","author":{"login":"shreyans800755","avatarUrl":"https://avatars2.githubusercontent.com/u/3727351?v=4","name":"Shreyans"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNDQ3NDg3Mw==","createdAt":"2018-06-01T13:27:32Z","content":"THUMBS_UP","user":{"login":"Makman2","name":"Mischa Krüger"}}],"createdAt":"2018-05-31T21:34:07Z","lastEditedAt":null,"updatedAt":"2018-05-31T21:34:07Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MjI0NTEwNQ==","url":"https://github.com/coala/coala/pull/5485#discussion_r192245105","bodyText":"Are line indices starting with 1 ? If so, why ?","diffHunk":"@@ -0,0 +1,115 @@\n+import linecache\n+import os\n+\n+from coala_utils.decorators import generate_eq\n+\n+\n+@generate_eq('_filename', '_stamp')\n+class FileFactory:\n+    \"\"\"\n+    The FileFactory is a wrapper object to replace the actual file contents\n+    from the file-dict. The object contains the following information about\n+    the file:\n+\n+        * The filename (absolute file path).\n+        * The parent directory the file is located in.\n+        * The modification timestamp of the file.\n+        * The file in the form of a string.\n+        * The file in the form of a list.\n+        * The file in binary format.\n+\n+    The equality of the object is checked just based on its filename and\n+    timestamp.\n+\n+    To initialize a FileFactory object for a file:\n+\n+    >>> fp = FileFactory(\"./tests/io/FileFactoryTestFiles/test.txt\")\n+\n+    Make the object into an iterable when required\n+\n+    >>> for line in fp:\n+    ...     print(line)\n+    This is a test file.\n+    <BLANKLINE>\n+\n+    Retrieve a single line:\n+\n+    >>> fp.line(1)","author":{"login":"shreyans800755","avatarUrl":"https://avatars2.githubusercontent.com/u/3727351?v=4","name":"Shreyans"},"reactions":[],"createdAt":"2018-05-31T21:35:51Z","lastEditedAt":null,"updatedAt":"2018-05-31T21:35:51Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MjI0NTUwMw==","url":"https://github.com/coala/coala/pull/5485#discussion_r192245503","bodyText":"Do we really need this variable as data member ?\nThis is easily deducible whenever required.","diffHunk":"@@ -0,0 +1,115 @@\n+import linecache\n+import os\n+\n+from coala_utils.decorators import generate_eq\n+\n+\n+@generate_eq('_filename', '_stamp')\n+class FileFactory:\n+    \"\"\"\n+    The FileFactory is a wrapper object to replace the actual file contents\n+    from the file-dict. The object contains the following information about\n+    the file:\n+\n+        * The filename (absolute file path).\n+        * The parent directory the file is located in.\n+        * The modification timestamp of the file.\n+        * The file in the form of a string.\n+        * The file in the form of a list.\n+        * The file in binary format.\n+\n+    The equality of the object is checked just based on its filename and\n+    timestamp.\n+\n+    To initialize a FileFactory object for a file:\n+\n+    >>> fp = FileFactory(\"./tests/io/FileFactoryTestFiles/test.txt\")\n+\n+    Make the object into an iterable when required\n+\n+    >>> for line in fp:\n+    ...     print(line)\n+    This is a test file.\n+    <BLANKLINE>\n+\n+    Retrieve a single line:\n+\n+    >>> fp.line(1)\n+    'This is a test file.\\\\n'\n+\n+    Get all the lines in the file as a list:\n+\n+    >>> fp.lines\n+    ('This is a test file.\\\\n',)\n+    \"\"\"\n+\n+    def __init__(self, filename):\n+        \"\"\"\n+        :param filename:\n+            The absolute filepath.\n+        \"\"\"\n+        self._filename = os.path.abspath(filename)\n+        self._parent = os.path.abspath(os.path.dirname(self._filename))","author":{"login":"shreyans800755","avatarUrl":"https://avatars2.githubusercontent.com/u/3727351?v=4","name":"Shreyans"},"reactions":[],"createdAt":"2018-05-31T21:37:38Z","lastEditedAt":null,"updatedAt":"2018-05-31T21:37:38Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MjI0NTcyNg==","url":"https://github.com/coala/coala/pull/5485#discussion_r192245726","bodyText":"Why do we need this as data member ?\nThis might not be same when we want to fetch it. And we'll again have to call getmtime function.\nI don't see any point in storing this.","diffHunk":"@@ -0,0 +1,115 @@\n+import linecache\n+import os\n+\n+from coala_utils.decorators import generate_eq\n+\n+\n+@generate_eq('_filename', '_stamp')\n+class FileFactory:\n+    \"\"\"\n+    The FileFactory is a wrapper object to replace the actual file contents\n+    from the file-dict. The object contains the following information about\n+    the file:\n+\n+        * The filename (absolute file path).\n+        * The parent directory the file is located in.\n+        * The modification timestamp of the file.\n+        * The file in the form of a string.\n+        * The file in the form of a list.\n+        * The file in binary format.\n+\n+    The equality of the object is checked just based on its filename and\n+    timestamp.\n+\n+    To initialize a FileFactory object for a file:\n+\n+    >>> fp = FileFactory(\"./tests/io/FileFactoryTestFiles/test.txt\")\n+\n+    Make the object into an iterable when required\n+\n+    >>> for line in fp:\n+    ...     print(line)\n+    This is a test file.\n+    <BLANKLINE>\n+\n+    Retrieve a single line:\n+\n+    >>> fp.line(1)\n+    'This is a test file.\\\\n'\n+\n+    Get all the lines in the file as a list:\n+\n+    >>> fp.lines\n+    ('This is a test file.\\\\n',)\n+    \"\"\"\n+\n+    def __init__(self, filename):\n+        \"\"\"\n+        :param filename:\n+            The absolute filepath.\n+        \"\"\"\n+        self._filename = os.path.abspath(filename)\n+        self._parent = os.path.abspath(os.path.dirname(self._filename))\n+        self._stamp = os.path.getmtime(self._filename)","author":{"login":"shreyans800755","avatarUrl":"https://avatars2.githubusercontent.com/u/3727351?v=4","name":"Shreyans"},"reactions":[],"createdAt":"2018-05-31T21:38:45Z","lastEditedAt":null,"updatedAt":"2018-05-31T21:38:45Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MjI0NjA4Mg==","url":"https://github.com/coala/coala/pull/5485#discussion_r192246082","bodyText":"return value seems to be a tuple and not a list. I guess you don't mean python list, do you ?","diffHunk":"@@ -0,0 +1,115 @@\n+import linecache\n+import os\n+\n+from coala_utils.decorators import generate_eq\n+\n+\n+@generate_eq('_filename', '_stamp')\n+class FileFactory:\n+    \"\"\"\n+    The FileFactory is a wrapper object to replace the actual file contents\n+    from the file-dict. The object contains the following information about\n+    the file:\n+\n+        * The filename (absolute file path).\n+        * The parent directory the file is located in.\n+        * The modification timestamp of the file.\n+        * The file in the form of a string.\n+        * The file in the form of a list.\n+        * The file in binary format.\n+\n+    The equality of the object is checked just based on its filename and\n+    timestamp.\n+\n+    To initialize a FileFactory object for a file:\n+\n+    >>> fp = FileFactory(\"./tests/io/FileFactoryTestFiles/test.txt\")\n+\n+    Make the object into an iterable when required\n+\n+    >>> for line in fp:\n+    ...     print(line)\n+    This is a test file.\n+    <BLANKLINE>\n+\n+    Retrieve a single line:\n+\n+    >>> fp.line(1)\n+    'This is a test file.\\\\n'\n+\n+    Get all the lines in the file as a list:\n+\n+    >>> fp.lines\n+    ('This is a test file.\\\\n',)\n+    \"\"\"\n+\n+    def __init__(self, filename):\n+        \"\"\"\n+        :param filename:\n+            The absolute filepath.\n+        \"\"\"\n+        self._filename = os.path.abspath(filename)\n+        self._parent = os.path.abspath(os.path.dirname(self._filename))\n+        self._stamp = os.path.getmtime(self._filename)\n+\n+    def line(self, line):\n+        \"\"\"\n+        :param line:\n+            The line number from which the string is to be retrieved.\n+        :return:\n+            The retrieved string at the given line number from the file.\n+        \"\"\"\n+        return linecache.getline(self._filename, line)\n+\n+    @property\n+    def lines(self):\n+        \"\"\"\n+        To get all the lines in the file in form of a list.","author":{"login":"shreyans800755","avatarUrl":"https://avatars2.githubusercontent.com/u/3727351?v=4","name":"Shreyans"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNDUwODE5Nw==","createdAt":"2018-06-02T10:46:38Z","content":"THUMBS_UP","user":{"login":"palash25","name":"Palash Nigam"}}],"createdAt":"2018-05-31T21:40:20Z","lastEditedAt":null,"updatedAt":"2018-05-31T21:40:20Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MjI0NjU4OQ==","url":"https://github.com/coala/coala/pull/5485#discussion_r192246589","bodyText":"This doesn't really give file contents in binary format. It returns file contents in raw format.\nbinary doesn't seem to be the right word.","diffHunk":"@@ -0,0 +1,115 @@\n+import linecache\n+import os\n+\n+from coala_utils.decorators import generate_eq\n+\n+\n+@generate_eq('_filename', '_stamp')\n+class FileFactory:\n+    \"\"\"\n+    The FileFactory is a wrapper object to replace the actual file contents\n+    from the file-dict. The object contains the following information about\n+    the file:\n+\n+        * The filename (absolute file path).\n+        * The parent directory the file is located in.\n+        * The modification timestamp of the file.\n+        * The file in the form of a string.\n+        * The file in the form of a list.\n+        * The file in binary format.\n+\n+    The equality of the object is checked just based on its filename and\n+    timestamp.\n+\n+    To initialize a FileFactory object for a file:\n+\n+    >>> fp = FileFactory(\"./tests/io/FileFactoryTestFiles/test.txt\")\n+\n+    Make the object into an iterable when required\n+\n+    >>> for line in fp:\n+    ...     print(line)\n+    This is a test file.\n+    <BLANKLINE>\n+\n+    Retrieve a single line:\n+\n+    >>> fp.line(1)\n+    'This is a test file.\\\\n'\n+\n+    Get all the lines in the file as a list:\n+\n+    >>> fp.lines\n+    ('This is a test file.\\\\n',)\n+    \"\"\"\n+\n+    def __init__(self, filename):\n+        \"\"\"\n+        :param filename:\n+            The absolute filepath.\n+        \"\"\"\n+        self._filename = os.path.abspath(filename)\n+        self._parent = os.path.abspath(os.path.dirname(self._filename))\n+        self._stamp = os.path.getmtime(self._filename)\n+\n+    def line(self, line):\n+        \"\"\"\n+        :param line:\n+            The line number from which the string is to be retrieved.\n+        :return:\n+            The retrieved string at the given line number from the file.\n+        \"\"\"\n+        return linecache.getline(self._filename, line)\n+\n+    @property\n+    def lines(self):\n+        \"\"\"\n+        To get all the lines in the file in form of a list.\n+        \"\"\"\n+        return tuple(linecache.getlines(self._filename))\n+\n+    def binary(self):\n+        \"\"\"\n+        :return:\n+            The file contents in binary format.\n+        \"\"\"\n+        with open(self._filename, 'rb') as fp:\n+            return fp.read()","author":{"login":"shreyans800755","avatarUrl":"https://avatars2.githubusercontent.com/u/3727351?v=4","name":"Shreyans"},"reactions":[],"createdAt":"2018-05-31T21:42:36Z","lastEditedAt":null,"updatedAt":"2018-05-31T21:42:36Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MjI0NzAwNQ==","url":"https://github.com/coala/coala/pull/5485#discussion_r192247005","bodyText":"We should take file name in any format - relative/absolute. And then convert it to absolute if its relative while storing it in self._filename","diffHunk":"@@ -0,0 +1,115 @@\n+import linecache\n+import os\n+\n+from coala_utils.decorators import generate_eq\n+\n+\n+@generate_eq('_filename', '_stamp')\n+class FileFactory:\n+    \"\"\"\n+    The FileFactory is a wrapper object to replace the actual file contents\n+    from the file-dict. The object contains the following information about\n+    the file:\n+\n+        * The filename (absolute file path).\n+        * The parent directory the file is located in.\n+        * The modification timestamp of the file.\n+        * The file in the form of a string.\n+        * The file in the form of a list.\n+        * The file in binary format.\n+\n+    The equality of the object is checked just based on its filename and\n+    timestamp.\n+\n+    To initialize a FileFactory object for a file:\n+\n+    >>> fp = FileFactory(\"./tests/io/FileFactoryTestFiles/test.txt\")\n+\n+    Make the object into an iterable when required\n+\n+    >>> for line in fp:\n+    ...     print(line)\n+    This is a test file.\n+    <BLANKLINE>\n+\n+    Retrieve a single line:\n+\n+    >>> fp.line(1)\n+    'This is a test file.\\\\n'\n+\n+    Get all the lines in the file as a list:\n+\n+    >>> fp.lines\n+    ('This is a test file.\\\\n',)\n+    \"\"\"\n+\n+    def __init__(self, filename):\n+        \"\"\"\n+        :param filename:\n+            The absolute filepath.\n+        \"\"\"\n+        self._filename = os.path.abspath(filename)","author":{"login":"shreyans800755","avatarUrl":"https://avatars2.githubusercontent.com/u/3727351?v=4","name":"Shreyans"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNDQ3NDY5NQ==","createdAt":"2018-06-01T13:24:22Z","content":"THUMBS_UP","user":{"login":"Makman2","name":"Mischa Krüger"}}],"createdAt":"2018-05-31T21:44:25Z","lastEditedAt":null,"updatedAt":"2018-05-31T21:44:25Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MjI4ODA4NA==","url":"https://github.com/coala/coala/pull/5485#discussion_r192288084","bodyText":"I see your point but @Makman2 wanted to compare factory objects based on their filename and timestamp both\nIf we are going to compare the object based on the timestamp then we would need this as a data member.\nMaybe I can move this to this data member to its own function that way whenever it is called it will store the most recent time stamp but I wonder whether moving this out of the __init__ method would still make the @generate_eq(_stamp) work or not.","diffHunk":"@@ -0,0 +1,115 @@\n+import linecache\n+import os\n+\n+from coala_utils.decorators import generate_eq\n+\n+\n+@generate_eq('_filename', '_stamp')\n+class FileFactory:\n+    \"\"\"\n+    The FileFactory is a wrapper object to replace the actual file contents\n+    from the file-dict. The object contains the following information about\n+    the file:\n+\n+        * The filename (absolute file path).\n+        * The parent directory the file is located in.\n+        * The modification timestamp of the file.\n+        * The file in the form of a string.\n+        * The file in the form of a list.\n+        * The file in binary format.\n+\n+    The equality of the object is checked just based on its filename and\n+    timestamp.\n+\n+    To initialize a FileFactory object for a file:\n+\n+    >>> fp = FileFactory(\"./tests/io/FileFactoryTestFiles/test.txt\")\n+\n+    Make the object into an iterable when required\n+\n+    >>> for line in fp:\n+    ...     print(line)\n+    This is a test file.\n+    <BLANKLINE>\n+\n+    Retrieve a single line:\n+\n+    >>> fp.line(1)\n+    'This is a test file.\\\\n'\n+\n+    Get all the lines in the file as a list:\n+\n+    >>> fp.lines\n+    ('This is a test file.\\\\n',)\n+    \"\"\"\n+\n+    def __init__(self, filename):\n+        \"\"\"\n+        :param filename:\n+            The absolute filepath.\n+        \"\"\"\n+        self._filename = os.path.abspath(filename)\n+        self._parent = os.path.abspath(os.path.dirname(self._filename))\n+        self._stamp = os.path.getmtime(self._filename)","author":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4","name":"Palash Nigam"},"reactions":[],"createdAt":"2018-06-01T02:51:22Z","lastEditedAt":"2018-06-01T02:51:38Z","updatedAt":"2018-06-01T02:51:38Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MjI4ODI2MA==","url":"https://github.com/coala/coala/pull/5485#discussion_r192288260","bodyText":"It was a list before but after the review I changed it to tuple and forgot to update the docstring. Will update it thanks.","diffHunk":"@@ -0,0 +1,115 @@\n+import linecache\n+import os\n+\n+from coala_utils.decorators import generate_eq\n+\n+\n+@generate_eq('_filename', '_stamp')\n+class FileFactory:\n+    \"\"\"\n+    The FileFactory is a wrapper object to replace the actual file contents\n+    from the file-dict. The object contains the following information about\n+    the file:\n+\n+        * The filename (absolute file path).\n+        * The parent directory the file is located in.\n+        * The modification timestamp of the file.\n+        * The file in the form of a string.\n+        * The file in the form of a list.\n+        * The file in binary format.\n+\n+    The equality of the object is checked just based on its filename and\n+    timestamp.\n+\n+    To initialize a FileFactory object for a file:\n+\n+    >>> fp = FileFactory(\"./tests/io/FileFactoryTestFiles/test.txt\")\n+\n+    Make the object into an iterable when required\n+\n+    >>> for line in fp:\n+    ...     print(line)\n+    This is a test file.\n+    <BLANKLINE>\n+\n+    Retrieve a single line:\n+\n+    >>> fp.line(1)\n+    'This is a test file.\\\\n'\n+\n+    Get all the lines in the file as a list:\n+\n+    >>> fp.lines\n+    ('This is a test file.\\\\n',)\n+    \"\"\"\n+\n+    def __init__(self, filename):\n+        \"\"\"\n+        :param filename:\n+            The absolute filepath.\n+        \"\"\"\n+        self._filename = os.path.abspath(filename)\n+        self._parent = os.path.abspath(os.path.dirname(self._filename))\n+        self._stamp = os.path.getmtime(self._filename)\n+\n+    def line(self, line):\n+        \"\"\"\n+        :param line:\n+            The line number from which the string is to be retrieved.\n+        :return:\n+            The retrieved string at the given line number from the file.\n+        \"\"\"\n+        return linecache.getline(self._filename, line)\n+\n+    @property\n+    def lines(self):\n+        \"\"\"\n+        To get all the lines in the file in form of a list.","author":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4","name":"Palash Nigam"},"reactions":[],"createdAt":"2018-06-01T02:53:02Z","lastEditedAt":null,"updatedAt":"2018-06-01T02:53:02Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MjI5MDAzMw==","url":"https://github.com/coala/coala/pull/5485#discussion_r192290033","bodyText":"I think its because of linecache's functions it counts lines from 1\nlinecache.getline(0) would return an empty string","diffHunk":"@@ -0,0 +1,115 @@\n+import linecache\n+import os\n+\n+from coala_utils.decorators import generate_eq\n+\n+\n+@generate_eq('_filename', '_stamp')\n+class FileFactory:\n+    \"\"\"\n+    The FileFactory is a wrapper object to replace the actual file contents\n+    from the file-dict. The object contains the following information about\n+    the file:\n+\n+        * The filename (absolute file path).\n+        * The parent directory the file is located in.\n+        * The modification timestamp of the file.\n+        * The file in the form of a string.\n+        * The file in the form of a list.\n+        * The file in binary format.\n+\n+    The equality of the object is checked just based on its filename and\n+    timestamp.\n+\n+    To initialize a FileFactory object for a file:\n+\n+    >>> fp = FileFactory(\"./tests/io/FileFactoryTestFiles/test.txt\")\n+\n+    Make the object into an iterable when required\n+\n+    >>> for line in fp:\n+    ...     print(line)\n+    This is a test file.\n+    <BLANKLINE>\n+\n+    Retrieve a single line:\n+\n+    >>> fp.line(1)","author":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4","name":"Palash Nigam"},"reactions":[],"createdAt":"2018-06-01T03:12:39Z","lastEditedAt":"2018-06-01T11:59:19Z","updatedAt":"2018-06-01T11:59:19Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MjI5MDE3Mg==","url":"https://github.com/coala/coala/pull/5485#discussion_r192290172","bodyText":"We might need it in phase 2 for the ignore directory functionality though I'm still not sure as I need to have a lot of discussion about its design with Makman so I was thinking about letting it stay there and if we don't need it in phase 2 then I will remove it.","diffHunk":"@@ -0,0 +1,115 @@\n+import linecache\n+import os\n+\n+from coala_utils.decorators import generate_eq\n+\n+\n+@generate_eq('_filename', '_stamp')\n+class FileFactory:\n+    \"\"\"\n+    The FileFactory is a wrapper object to replace the actual file contents\n+    from the file-dict. The object contains the following information about\n+    the file:\n+\n+        * The filename (absolute file path).\n+        * The parent directory the file is located in.\n+        * The modification timestamp of the file.\n+        * The file in the form of a string.\n+        * The file in the form of a list.\n+        * The file in binary format.\n+\n+    The equality of the object is checked just based on its filename and\n+    timestamp.\n+\n+    To initialize a FileFactory object for a file:\n+\n+    >>> fp = FileFactory(\"./tests/io/FileFactoryTestFiles/test.txt\")\n+\n+    Make the object into an iterable when required\n+\n+    >>> for line in fp:\n+    ...     print(line)\n+    This is a test file.\n+    <BLANKLINE>\n+\n+    Retrieve a single line:\n+\n+    >>> fp.line(1)\n+    'This is a test file.\\\\n'\n+\n+    Get all the lines in the file as a list:\n+\n+    >>> fp.lines\n+    ('This is a test file.\\\\n',)\n+    \"\"\"\n+\n+    def __init__(self, filename):\n+        \"\"\"\n+        :param filename:\n+            The absolute filepath.\n+        \"\"\"\n+        self._filename = os.path.abspath(filename)\n+        self._parent = os.path.abspath(os.path.dirname(self._filename))","author":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4","name":"Palash Nigam"},"reactions":[],"createdAt":"2018-06-01T03:14:07Z","lastEditedAt":null,"updatedAt":"2018-06-01T03:14:07Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MjM4MDE4Ng==","url":"https://github.com/coala/coala/pull/5485#discussion_r192380186","bodyText":"I just tested moving the timestamp to its own function and it causes problems with generate_eq('_filename', '_stamp') because it cannot find _stamp in the __init__ method","diffHunk":"@@ -0,0 +1,115 @@\n+import linecache\n+import os\n+\n+from coala_utils.decorators import generate_eq\n+\n+\n+@generate_eq('_filename', '_stamp')\n+class FileFactory:\n+    \"\"\"\n+    The FileFactory is a wrapper object to replace the actual file contents\n+    from the file-dict. The object contains the following information about\n+    the file:\n+\n+        * The filename (absolute file path).\n+        * The parent directory the file is located in.\n+        * The modification timestamp of the file.\n+        * The file in the form of a string.\n+        * The file in the form of a list.\n+        * The file in binary format.\n+\n+    The equality of the object is checked just based on its filename and\n+    timestamp.\n+\n+    To initialize a FileFactory object for a file:\n+\n+    >>> fp = FileFactory(\"./tests/io/FileFactoryTestFiles/test.txt\")\n+\n+    Make the object into an iterable when required\n+\n+    >>> for line in fp:\n+    ...     print(line)\n+    This is a test file.\n+    <BLANKLINE>\n+\n+    Retrieve a single line:\n+\n+    >>> fp.line(1)\n+    'This is a test file.\\\\n'\n+\n+    Get all the lines in the file as a list:\n+\n+    >>> fp.lines\n+    ('This is a test file.\\\\n',)\n+    \"\"\"\n+\n+    def __init__(self, filename):\n+        \"\"\"\n+        :param filename:\n+            The absolute filepath.\n+        \"\"\"\n+        self._filename = os.path.abspath(filename)\n+        self._parent = os.path.abspath(os.path.dirname(self._filename))\n+        self._stamp = os.path.getmtime(self._filename)","author":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4","name":"Palash Nigam"},"reactions":[],"createdAt":"2018-06-01T12:29:27Z","lastEditedAt":null,"updatedAt":"2018-06-01T12:29:27Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MjM5MTIyOQ==","url":"https://github.com/coala/coala/pull/5485#discussion_r192391229","bodyText":"The timestamp is essential to caching. It effectively encodes information if a file has been changed or not.\ntimestamp might not be up-to-date, but it will be at least the earliest state we can access. We can always have external programs modifying the file in the meanwhile, and by using the timestamp as early as possible, we have a safety measure that automatically causes our caches to revalidate.","diffHunk":"@@ -0,0 +1,115 @@\n+import linecache\n+import os\n+\n+from coala_utils.decorators import generate_eq\n+\n+\n+@generate_eq('_filename', '_stamp')\n+class FileFactory:\n+    \"\"\"\n+    The FileFactory is a wrapper object to replace the actual file contents\n+    from the file-dict. The object contains the following information about\n+    the file:\n+\n+        * The filename (absolute file path).\n+        * The parent directory the file is located in.\n+        * The modification timestamp of the file.\n+        * The file in the form of a string.\n+        * The file in the form of a list.\n+        * The file in binary format.\n+\n+    The equality of the object is checked just based on its filename and\n+    timestamp.\n+\n+    To initialize a FileFactory object for a file:\n+\n+    >>> fp = FileFactory(\"./tests/io/FileFactoryTestFiles/test.txt\")\n+\n+    Make the object into an iterable when required\n+\n+    >>> for line in fp:\n+    ...     print(line)\n+    This is a test file.\n+    <BLANKLINE>\n+\n+    Retrieve a single line:\n+\n+    >>> fp.line(1)\n+    'This is a test file.\\\\n'\n+\n+    Get all the lines in the file as a list:\n+\n+    >>> fp.lines\n+    ('This is a test file.\\\\n',)\n+    \"\"\"\n+\n+    def __init__(self, filename):\n+        \"\"\"\n+        :param filename:\n+            The absolute filepath.\n+        \"\"\"\n+        self._filename = os.path.abspath(filename)\n+        self._parent = os.path.abspath(os.path.dirname(self._filename))\n+        self._stamp = os.path.getmtime(self._filename)","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-06-01T13:13:14Z","lastEditedAt":null,"updatedAt":"2018-06-01T13:13:14Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MjM5MTM2NA==","url":"https://github.com/coala/coala/pull/5485#discussion_r192391364","bodyText":"@palash25 regarding generate_eq: Just use the property names, I guess that works better","diffHunk":"@@ -0,0 +1,115 @@\n+import linecache\n+import os\n+\n+from coala_utils.decorators import generate_eq\n+\n+\n+@generate_eq('_filename', '_stamp')\n+class FileFactory:\n+    \"\"\"\n+    The FileFactory is a wrapper object to replace the actual file contents\n+    from the file-dict. The object contains the following information about\n+    the file:\n+\n+        * The filename (absolute file path).\n+        * The parent directory the file is located in.\n+        * The modification timestamp of the file.\n+        * The file in the form of a string.\n+        * The file in the form of a list.\n+        * The file in binary format.\n+\n+    The equality of the object is checked just based on its filename and\n+    timestamp.\n+\n+    To initialize a FileFactory object for a file:\n+\n+    >>> fp = FileFactory(\"./tests/io/FileFactoryTestFiles/test.txt\")\n+\n+    Make the object into an iterable when required\n+\n+    >>> for line in fp:\n+    ...     print(line)\n+    This is a test file.\n+    <BLANKLINE>\n+\n+    Retrieve a single line:\n+\n+    >>> fp.line(1)\n+    'This is a test file.\\\\n'\n+\n+    Get all the lines in the file as a list:\n+\n+    >>> fp.lines\n+    ('This is a test file.\\\\n',)\n+    \"\"\"\n+\n+    def __init__(self, filename):\n+        \"\"\"\n+        :param filename:\n+            The absolute filepath.\n+        \"\"\"\n+        self._filename = os.path.abspath(filename)\n+        self._parent = os.path.abspath(os.path.dirname(self._filename))\n+        self._stamp = os.path.getmtime(self._filename)","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-06-01T13:13:45Z","lastEditedAt":null,"updatedAt":"2018-06-01T13:13:45Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MjM5NDA5NA==","url":"https://github.com/coala/coala/pull/5485#discussion_r192394094","bodyText":"Python calls it \"binary mode\" (https://docs.python.org/3/library/functions.html#open)\nI also rather like \"raw\" (binary makes me think too much of real executable binaries), but that's stdlib Python terminology. @palash25 your call here what wording we choose :)","diffHunk":"@@ -0,0 +1,115 @@\n+import linecache\n+import os\n+\n+from coala_utils.decorators import generate_eq\n+\n+\n+@generate_eq('_filename', '_stamp')\n+class FileFactory:\n+    \"\"\"\n+    The FileFactory is a wrapper object to replace the actual file contents\n+    from the file-dict. The object contains the following information about\n+    the file:\n+\n+        * The filename (absolute file path).\n+        * The parent directory the file is located in.\n+        * The modification timestamp of the file.\n+        * The file in the form of a string.\n+        * The file in the form of a list.\n+        * The file in binary format.\n+\n+    The equality of the object is checked just based on its filename and\n+    timestamp.\n+\n+    To initialize a FileFactory object for a file:\n+\n+    >>> fp = FileFactory(\"./tests/io/FileFactoryTestFiles/test.txt\")\n+\n+    Make the object into an iterable when required\n+\n+    >>> for line in fp:\n+    ...     print(line)\n+    This is a test file.\n+    <BLANKLINE>\n+\n+    Retrieve a single line:\n+\n+    >>> fp.line(1)\n+    'This is a test file.\\\\n'\n+\n+    Get all the lines in the file as a list:\n+\n+    >>> fp.lines\n+    ('This is a test file.\\\\n',)\n+    \"\"\"\n+\n+    def __init__(self, filename):\n+        \"\"\"\n+        :param filename:\n+            The absolute filepath.\n+        \"\"\"\n+        self._filename = os.path.abspath(filename)\n+        self._parent = os.path.abspath(os.path.dirname(self._filename))\n+        self._stamp = os.path.getmtime(self._filename)\n+\n+    def line(self, line):\n+        \"\"\"\n+        :param line:\n+            The line number from which the string is to be retrieved.\n+        :return:\n+            The retrieved string at the given line number from the file.\n+        \"\"\"\n+        return linecache.getline(self._filename, line)\n+\n+    @property\n+    def lines(self):\n+        \"\"\"\n+        To get all the lines in the file in form of a list.\n+        \"\"\"\n+        return tuple(linecache.getlines(self._filename))\n+\n+    def binary(self):\n+        \"\"\"\n+        :return:\n+            The file contents in binary format.\n+        \"\"\"\n+        with open(self._filename, 'rb') as fp:\n+            return fp.read()","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-06-01T13:24:04Z","lastEditedAt":null,"updatedAt":"2018-06-01T13:24:04Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MjM5NDYzMg==","url":"https://github.com/coala/coala/pull/5485#discussion_r192394632","bodyText":"Maybe for simplicity we can remove it for now. As users have access to the path, they can do that manually. We can add it again when we are actually using the FileFactory in bears and see that this is practically useful :)","diffHunk":"@@ -0,0 +1,115 @@\n+import linecache\n+import os\n+\n+from coala_utils.decorators import generate_eq\n+\n+\n+@generate_eq('_filename', '_stamp')\n+class FileFactory:\n+    \"\"\"\n+    The FileFactory is a wrapper object to replace the actual file contents\n+    from the file-dict. The object contains the following information about\n+    the file:\n+\n+        * The filename (absolute file path).\n+        * The parent directory the file is located in.\n+        * The modification timestamp of the file.\n+        * The file in the form of a string.\n+        * The file in the form of a list.\n+        * The file in binary format.\n+\n+    The equality of the object is checked just based on its filename and\n+    timestamp.\n+\n+    To initialize a FileFactory object for a file:\n+\n+    >>> fp = FileFactory(\"./tests/io/FileFactoryTestFiles/test.txt\")\n+\n+    Make the object into an iterable when required\n+\n+    >>> for line in fp:\n+    ...     print(line)\n+    This is a test file.\n+    <BLANKLINE>\n+\n+    Retrieve a single line:\n+\n+    >>> fp.line(1)\n+    'This is a test file.\\\\n'\n+\n+    Get all the lines in the file as a list:\n+\n+    >>> fp.lines\n+    ('This is a test file.\\\\n',)\n+    \"\"\"\n+\n+    def __init__(self, filename):\n+        \"\"\"\n+        :param filename:\n+            The absolute filepath.\n+        \"\"\"\n+        self._filename = os.path.abspath(filename)\n+        self._parent = os.path.abspath(os.path.dirname(self._filename))","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNDUwODE4NA==","createdAt":"2018-06-02T10:45:36Z","content":"THUMBS_UP","user":{"login":"palash25","name":"Palash Nigam"}}],"createdAt":"2018-06-01T13:25:54Z","lastEditedAt":null,"updatedAt":"2018-06-01T13:25:54Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MjM5NTA3MQ==","url":"https://github.com/coala/coala/pull/5485#discussion_r192395071","bodyText":"Choose a convention that you think makes sense. coala's Results have a one-based convention, but usually lists, tuples, array-like-things are zero-based due to technical reasons (e.g. see for-loops).\nDocument it! :) This is extremely important for the user to know.\n\nMy feeling: I tend to zero-based notation.","diffHunk":"@@ -0,0 +1,115 @@\n+import linecache\n+import os\n+\n+from coala_utils.decorators import generate_eq\n+\n+\n+@generate_eq('_filename', '_stamp')\n+class FileFactory:\n+    \"\"\"\n+    The FileFactory is a wrapper object to replace the actual file contents\n+    from the file-dict. The object contains the following information about\n+    the file:\n+\n+        * The filename (absolute file path).\n+        * The parent directory the file is located in.\n+        * The modification timestamp of the file.\n+        * The file in the form of a string.\n+        * The file in the form of a list.\n+        * The file in binary format.\n+\n+    The equality of the object is checked just based on its filename and\n+    timestamp.\n+\n+    To initialize a FileFactory object for a file:\n+\n+    >>> fp = FileFactory(\"./tests/io/FileFactoryTestFiles/test.txt\")\n+\n+    Make the object into an iterable when required\n+\n+    >>> for line in fp:\n+    ...     print(line)\n+    This is a test file.\n+    <BLANKLINE>\n+\n+    Retrieve a single line:\n+\n+    >>> fp.line(1)","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-06-01T13:27:18Z","lastEditedAt":null,"updatedAt":"2018-06-01T13:27:18Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MzE5MDA0Mg==","url":"https://github.com/coala/coala/pull/5485#discussion_r193190042","bodyText":"-> @property","diffHunk":"@@ -0,0 +1,111 @@\n+import linecache\n+import os\n+\n+from coala_utils.decorators import generate_eq\n+\n+\n+@generate_eq('name', 'timestamp')\n+class FileFactory:\n+    \"\"\"\n+    The FileFactory is a wrapper class to replace the actual file contents\n+    from the file-dict. The object contains the following information about\n+    the file:\n+\n+        * The filename (absolute file path).\n+        * The modification timestamp of the file.\n+        * The file in the form of a string.\n+        * The file in the form of a list.\n+        * The file in raw format.\n+\n+    The equality of the object is checked just based on its filename and\n+    timestamp.\n+\n+    To initialize a FileFactory object for a file:\n+\n+    >>> fp = FileFactory(\"./tests/io/FileFactoryTestFiles/test.txt\")\n+\n+    Make the object into an iterable when required\n+\n+    >>> for line in fp:\n+    ...     print(line)\n+    This is a test file.\n+    <BLANKLINE>\n+\n+    File indicies start with zero in case of\n+    FileFactory objects. To retrieve a single line:\n+\n+    >>> fp.line(0)\n+    'This is a test file.\\\\n'\n+\n+    Get all the lines in the file as a list:\n+\n+    >>> fp.lines\n+    ('This is a test file.\\\\n',)\n+\n+    Get the file contents in raw mode:\n+\n+    >>> fp.raw()\n+    b'This is a test file.'\n+    \"\"\"\n+\n+    def __init__(self, filename):\n+        \"\"\"\n+        :param filename:\n+            The filepath.\n+        \"\"\"\n+        self._filename = os.path.abspath(filename)\n+        self._stamp = os.path.getmtime(self._filename)\n+\n+    def line(self, line):\n+        \"\"\"\n+        :param line:\n+            The line number from which the string is to be retrieved.\n+        :return:\n+            The retrieved string at the given line number from the file.\n+        \"\"\"\n+        return linecache.getline(self._filename, line+1)\n+\n+    @property\n+    def lines(self):\n+        \"\"\"\n+        To get all the lines in the file in form of a tuple.\n+        \"\"\"\n+        return tuple(linecache.getlines(self._filename))\n+\n+    def raw(self):\n+        \"\"\"\n+        :return:\n+            Opens the file in binary mode and returns its contents.\n+        \"\"\"\n+        with open(self._filename, 'rb') as fp:\n+            return fp.read()\n+\n+    def string(self):","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNDY0NTQ3MA==","createdAt":"2018-06-05T19:37:31Z","content":"THUMBS_UP","user":{"login":"palash25","name":"Palash Nigam"}}],"createdAt":"2018-06-05T19:17:50Z","lastEditedAt":null,"updatedAt":"2018-06-05T19:17:50Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MzE5MDEyNA==","url":"https://github.com/coala/coala/pull/5485#discussion_r193190124","bodyText":"Be consistent with documentation, use :return: as well","diffHunk":"@@ -0,0 +1,111 @@\n+import linecache\n+import os\n+\n+from coala_utils.decorators import generate_eq\n+\n+\n+@generate_eq('name', 'timestamp')\n+class FileFactory:\n+    \"\"\"\n+    The FileFactory is a wrapper class to replace the actual file contents\n+    from the file-dict. The object contains the following information about\n+    the file:\n+\n+        * The filename (absolute file path).\n+        * The modification timestamp of the file.\n+        * The file in the form of a string.\n+        * The file in the form of a list.\n+        * The file in raw format.\n+\n+    The equality of the object is checked just based on its filename and\n+    timestamp.\n+\n+    To initialize a FileFactory object for a file:\n+\n+    >>> fp = FileFactory(\"./tests/io/FileFactoryTestFiles/test.txt\")\n+\n+    Make the object into an iterable when required\n+\n+    >>> for line in fp:\n+    ...     print(line)\n+    This is a test file.\n+    <BLANKLINE>\n+\n+    File indicies start with zero in case of\n+    FileFactory objects. To retrieve a single line:\n+\n+    >>> fp.line(0)\n+    'This is a test file.\\\\n'\n+\n+    Get all the lines in the file as a list:\n+\n+    >>> fp.lines\n+    ('This is a test file.\\\\n',)\n+\n+    Get the file contents in raw mode:\n+\n+    >>> fp.raw()\n+    b'This is a test file.'\n+    \"\"\"\n+\n+    def __init__(self, filename):\n+        \"\"\"\n+        :param filename:\n+            The filepath.\n+        \"\"\"\n+        self._filename = os.path.abspath(filename)\n+        self._stamp = os.path.getmtime(self._filename)\n+\n+    def line(self, line):\n+        \"\"\"\n+        :param line:\n+            The line number from which the string is to be retrieved.\n+        :return:\n+            The retrieved string at the given line number from the file.\n+        \"\"\"\n+        return linecache.getline(self._filename, line+1)\n+\n+    @property\n+    def lines(self):\n+        \"\"\"\n+        To get all the lines in the file in form of a tuple.","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNDY0NTQ2NA==","createdAt":"2018-06-05T19:37:24Z","content":"THUMBS_UP","user":{"login":"palash25","name":"Palash Nigam"}}],"createdAt":"2018-06-05T19:18:10Z","lastEditedAt":null,"updatedAt":"2018-06-05T19:18:10Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MzE5MDE1Ng==","url":"https://github.com/coala/coala/pull/5485#discussion_r193190156","bodyText":"-> @property","diffHunk":"@@ -0,0 +1,111 @@\n+import linecache\n+import os\n+\n+from coala_utils.decorators import generate_eq\n+\n+\n+@generate_eq('name', 'timestamp')\n+class FileFactory:\n+    \"\"\"\n+    The FileFactory is a wrapper class to replace the actual file contents\n+    from the file-dict. The object contains the following information about\n+    the file:\n+\n+        * The filename (absolute file path).\n+        * The modification timestamp of the file.\n+        * The file in the form of a string.\n+        * The file in the form of a list.\n+        * The file in raw format.\n+\n+    The equality of the object is checked just based on its filename and\n+    timestamp.\n+\n+    To initialize a FileFactory object for a file:\n+\n+    >>> fp = FileFactory(\"./tests/io/FileFactoryTestFiles/test.txt\")\n+\n+    Make the object into an iterable when required\n+\n+    >>> for line in fp:\n+    ...     print(line)\n+    This is a test file.\n+    <BLANKLINE>\n+\n+    File indicies start with zero in case of\n+    FileFactory objects. To retrieve a single line:\n+\n+    >>> fp.line(0)\n+    'This is a test file.\\\\n'\n+\n+    Get all the lines in the file as a list:\n+\n+    >>> fp.lines\n+    ('This is a test file.\\\\n',)\n+\n+    Get the file contents in raw mode:\n+\n+    >>> fp.raw()\n+    b'This is a test file.'\n+    \"\"\"\n+\n+    def __init__(self, filename):\n+        \"\"\"\n+        :param filename:\n+            The filepath.\n+        \"\"\"\n+        self._filename = os.path.abspath(filename)\n+        self._stamp = os.path.getmtime(self._filename)\n+\n+    def line(self, line):\n+        \"\"\"\n+        :param line:\n+            The line number from which the string is to be retrieved.\n+        :return:\n+            The retrieved string at the given line number from the file.\n+        \"\"\"\n+        return linecache.getline(self._filename, line+1)\n+\n+    @property\n+    def lines(self):\n+        \"\"\"\n+        To get all the lines in the file in form of a tuple.\n+        \"\"\"\n+        return tuple(linecache.getlines(self._filename))\n+\n+    def raw(self):","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNDY0NTQ2OA==","createdAt":"2018-06-05T19:37:28Z","content":"THUMBS_UP","user":{"login":"palash25","name":"Palash Nigam"}}],"createdAt":"2018-06-05T19:18:18Z","lastEditedAt":null,"updatedAt":"2018-06-05T19:18:18Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MzE5MDc4NA==","url":"https://github.com/coala/coala/pull/5485#discussion_r193190784","bodyText":"Maybe call it getline, like linecache?","diffHunk":"@@ -0,0 +1,111 @@\n+import linecache\n+import os\n+\n+from coala_utils.decorators import generate_eq\n+\n+\n+@generate_eq('name', 'timestamp')\n+class FileFactory:\n+    \"\"\"\n+    The FileFactory is a wrapper class to replace the actual file contents\n+    from the file-dict. The object contains the following information about\n+    the file:\n+\n+        * The filename (absolute file path).\n+        * The modification timestamp of the file.\n+        * The file in the form of a string.\n+        * The file in the form of a list.\n+        * The file in raw format.\n+\n+    The equality of the object is checked just based on its filename and\n+    timestamp.\n+\n+    To initialize a FileFactory object for a file:\n+\n+    >>> fp = FileFactory(\"./tests/io/FileFactoryTestFiles/test.txt\")\n+\n+    Make the object into an iterable when required\n+\n+    >>> for line in fp:\n+    ...     print(line)\n+    This is a test file.\n+    <BLANKLINE>\n+\n+    File indicies start with zero in case of\n+    FileFactory objects. To retrieve a single line:\n+\n+    >>> fp.line(0)\n+    'This is a test file.\\\\n'\n+\n+    Get all the lines in the file as a list:\n+\n+    >>> fp.lines\n+    ('This is a test file.\\\\n',)\n+\n+    Get the file contents in raw mode:\n+\n+    >>> fp.raw()\n+    b'This is a test file.'\n+    \"\"\"\n+\n+    def __init__(self, filename):\n+        \"\"\"\n+        :param filename:\n+            The filepath.\n+        \"\"\"\n+        self._filename = os.path.abspath(filename)\n+        self._stamp = os.path.getmtime(self._filename)\n+\n+    def line(self, line):","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-06-05T19:20:32Z","lastEditedAt":null,"updatedAt":"2018-06-05T19:20:32Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MzE5MTY5MA==","url":"https://github.com/coala/coala/pull/5485#discussion_r193191690","bodyText":"not tuple? ;)\nBtw, I would also add that it's UTF-8 decoded, that's the difference between strings/lists and raw format ;)","diffHunk":"@@ -0,0 +1,111 @@\n+import linecache\n+import os\n+\n+from coala_utils.decorators import generate_eq\n+\n+\n+@generate_eq('name', 'timestamp')\n+class FileFactory:\n+    \"\"\"\n+    The FileFactory is a wrapper class to replace the actual file contents\n+    from the file-dict. The object contains the following information about\n+    the file:\n+\n+        * The filename (absolute file path).\n+        * The modification timestamp of the file.\n+        * The file in the form of a string.\n+        * The file in the form of a list.","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNDY0NTM0OQ==","createdAt":"2018-06-05T19:35:04Z","content":"THUMBS_UP","user":{"login":"palash25","name":"Palash Nigam"}}],"createdAt":"2018-06-05T19:23:48Z","lastEditedAt":null,"updatedAt":"2018-06-05T19:23:48Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MzE5MTg5Nw==","url":"https://github.com/coala/coala/pull/5485#discussion_r193191897","bodyText":"Enclose code terms like FileFactory into double backticks so they get rendered as code 👍","diffHunk":"@@ -0,0 +1,111 @@\n+import linecache\n+import os\n+\n+from coala_utils.decorators import generate_eq\n+\n+\n+@generate_eq('name', 'timestamp')\n+class FileFactory:\n+    \"\"\"\n+    The FileFactory is a wrapper class to replace the actual file contents\n+    from the file-dict. The object contains the following information about\n+    the file:\n+\n+        * The filename (absolute file path).\n+        * The modification timestamp of the file.\n+        * The file in the form of a string.\n+        * The file in the form of a list.\n+        * The file in raw format.\n+\n+    The equality of the object is checked just based on its filename and\n+    timestamp.\n+\n+    To initialize a FileFactory object for a file:","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNDY0NTM4Mw==","createdAt":"2018-06-05T19:35:41Z","content":"THUMBS_UP","user":{"login":"palash25","name":"Palash Nigam"}}],"createdAt":"2018-06-05T19:24:30Z","lastEditedAt":null,"updatedAt":"2018-06-05T19:24:30Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MzE5MjA0OA==","url":"https://github.com/coala/coala/pull/5485#discussion_r193192048","bodyText":"Use single quotes, that's the preferred quotation for strings that don't contain single backticks","diffHunk":"@@ -0,0 +1,111 @@\n+import linecache\n+import os\n+\n+from coala_utils.decorators import generate_eq\n+\n+\n+@generate_eq('name', 'timestamp')\n+class FileFactory:\n+    \"\"\"\n+    The FileFactory is a wrapper class to replace the actual file contents\n+    from the file-dict. The object contains the following information about\n+    the file:\n+\n+        * The filename (absolute file path).\n+        * The modification timestamp of the file.\n+        * The file in the form of a string.\n+        * The file in the form of a list.\n+        * The file in raw format.\n+\n+    The equality of the object is checked just based on its filename and\n+    timestamp.\n+\n+    To initialize a FileFactory object for a file:\n+\n+    >>> fp = FileFactory(\"./tests/io/FileFactoryTestFiles/test.txt\")","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNDY0NTM5MQ==","createdAt":"2018-06-05T19:35:47Z","content":"THUMBS_UP","user":{"login":"palash25","name":"Palash Nigam"}}],"createdAt":"2018-06-05T19:24:58Z","lastEditedAt":null,"updatedAt":"2018-06-05T19:24:58Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MzE5MjkxNg==","url":"https://github.com/coala/coala/pull/5485#discussion_r193192916","bodyText":"eh single quotes* :3","diffHunk":"@@ -0,0 +1,111 @@\n+import linecache\n+import os\n+\n+from coala_utils.decorators import generate_eq\n+\n+\n+@generate_eq('name', 'timestamp')\n+class FileFactory:\n+    \"\"\"\n+    The FileFactory is a wrapper class to replace the actual file contents\n+    from the file-dict. The object contains the following information about\n+    the file:\n+\n+        * The filename (absolute file path).\n+        * The modification timestamp of the file.\n+        * The file in the form of a string.\n+        * The file in the form of a list.\n+        * The file in raw format.\n+\n+    The equality of the object is checked just based on its filename and\n+    timestamp.\n+\n+    To initialize a FileFactory object for a file:\n+\n+    >>> fp = FileFactory(\"./tests/io/FileFactoryTestFiles/test.txt\")","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-06-05T19:27:58Z","lastEditedAt":null,"updatedAt":"2018-06-05T19:27:58Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM5NjAwODQxMA==","url":"https://github.com/coala/coala/pull/5485#issuecomment-396008410","bodyText":"Failure in AppVeyor.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-06-10T00:15:05Z","lastEditedAt":null,"updatedAt":"2018-06-10T00:15:05Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM5NjAzODI5OA==","url":"https://github.com/coala/coala/pull/5485#issuecomment-396038298","bodyText":"@Makman2 appveyor is failing due to some permission error while accessing the temporary file created in the docstring. Is there a work around for this? I have been tweaking the dir path of the temp file but couldn't get it to pass.","diffHunk":null,"author":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4","name":"Palash Nigam"},"reactions":[],"createdAt":"2018-06-10T10:32:16Z","lastEditedAt":null,"updatedAt":"2018-06-10T10:32:16Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM5NzMwMTkxNw==","url":"https://github.com/coala/coala/pull/5485#issuecomment-397301917","bodyText":"Failures on all CI","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-06-14T13:47:35Z","lastEditedAt":null,"updatedAt":"2018-06-14T13:47:35Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1527599835000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5486","number":5486,"title":"TypeScript.py:Change aliases to type tuple","body":"closes #5463\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":16,"createdAt":"2018-05-29T04:53:07Z","updatedAt":"2018-05-29T13:17:15Z","closedAt":"2018-05-29T13:17:15Z","state":"closed","user":{"login":"ananyaarun","avatarUrl":"https://avatars2.githubusercontent.com/u/32260628?v=4"},"owner":{"login":"ananyaarun","avatarUrl":"https://avatars2.githubusercontent.com/u/32260628?v=4"},"assignee":{"login":"ananyaarun","avatarUrl":"https://avatars2.githubusercontent.com/u/32260628?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5486","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDM5MjY4MTY1OA==","url":"https://github.com/coala/coala/pull/5486#issuecomment-392681658","bodyText":"@sks444 Thanks !! I tried those commands but they don't seem to work as i have made my commits through GUI actually. How do i go about it now ? Shall i make another commit with a proper commit message this time ?","diffHunk":null,"author":{"login":"ananyaarun","avatarUrl":"https://avatars2.githubusercontent.com/u/32260628?v=4","name":"Ananya Arun"},"reactions":[],"createdAt":"2018-05-29T07:37:28Z","lastEditedAt":null,"updatedAt":"2018-05-29T07:37:28Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM5MjY4Mzg1MQ==","url":"https://github.com/coala/coala/pull/5486#issuecomment-392683851","bodyText":"Almost all GUIs let you use the command line git as well.  After you use git, the GUI should update automatically, or maybe it has a \"refresh\" button.\nCome onto https://coala.io/chat to get customised help.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-05-29T07:46:32Z","lastEditedAt":"2018-05-29T07:46:57Z","updatedAt":"2018-05-29T07:46:57Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM5MjY4Mzk4MA==","url":"https://github.com/coala/coala/pull/5486#issuecomment-392683980","bodyText":"No, why another commit? That would make it 3 commits, and only one is acceptable. Please follow the steps, I suggested with git and describe the problems you are facing.","diffHunk":null,"author":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4","name":"Shrikrishna Singh"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNDI3Mzk2Mw==","createdAt":"2018-05-29T08:22:09Z","content":"THUMBS_UP","user":{"login":"ananyaarun","name":"Ananya Arun"}}],"createdAt":"2018-05-29T07:47:07Z","lastEditedAt":"2018-05-29T07:48:26Z","updatedAt":"2018-05-29T07:48:26Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM5Mjc0MjQ3OQ==","url":"https://github.com/coala/coala/pull/5486#issuecomment-392742479","bodyText":"Great, you have done a good job on squashing the commits. But why are you pushing unrelated files?","diffHunk":null,"author":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4","name":"Shrikrishna Singh"},"reactions":[],"createdAt":"2018-05-29T11:23:51Z","lastEditedAt":null,"updatedAt":"2018-05-29T11:23:51Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM5Mjc0NzI1NA==","url":"https://github.com/coala/coala/pull/5486#issuecomment-392747254","bodyText":"@sks444 I am so sorry ! I deleted the unwanted files.","diffHunk":null,"author":{"login":"ananyaarun","avatarUrl":"https://avatars2.githubusercontent.com/u/32260628?v=4","name":"Ananya Arun"},"reactions":[],"createdAt":"2018-05-29T11:44:23Z","lastEditedAt":null,"updatedAt":"2018-05-29T11:44:23Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM5Mjc1MTQ5Mw==","url":"https://github.com/coala/coala/pull/5486#issuecomment-392751493","bodyText":"Hey @ananyaarun, Nothing to be sorry about. Come on Gitter before doing another push, we will discuss it further.","diffHunk":null,"author":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4","name":"Shrikrishna Singh"},"reactions":[],"createdAt":"2018-05-29T12:02:20Z","lastEditedAt":null,"updatedAt":"2018-05-29T12:02:20Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM5Mjc2MjE4OQ==","url":"https://github.com/coala/coala/pull/5486#issuecomment-392762189","bodyText":"Great, you have learned the basics of git now, but I just realized you have made this PR from your master;\nNow, sadly you have to close it, and make a new PR from another branch.\n(But, please read the docs properly from now on, before creating a PR)","diffHunk":null,"author":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4","name":"Shrikrishna Singh"},"reactions":[],"createdAt":"2018-05-29T12:43:41Z","lastEditedAt":null,"updatedAt":"2018-05-29T12:43:41Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM5Mjc3MTk5OQ==","url":"https://github.com/coala/coala/pull/5486#issuecomment-392771999","bodyText":"okay sure.","diffHunk":null,"author":{"login":"ananyaarun","avatarUrl":"https://avatars2.githubusercontent.com/u/32260628?v=4","name":"Ananya Arun"},"reactions":[],"createdAt":"2018-05-29T13:17:15Z","lastEditedAt":null,"updatedAt":"2018-05-29T13:17:15Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1529090905000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5487","number":5487,"title":"Newcomers.rst: Add a command pytest to the guide","body":"This command helps to run tests locally\nafter installing dependencies.\nCloses #5404\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":14,"createdAt":"2018-05-29T13:45:37Z","updatedAt":"2018-06-15T19:28:25Z","closedAt":"2018-06-15T18:43:42Z","state":"merged","user":{"login":"dorothykiz1","avatarUrl":"https://avatars3.githubusercontent.com/u/30805504?v=4"},"owner":{"login":"dorothykiz1","avatarUrl":"https://avatars3.githubusercontent.com/u/30805504?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"process/approved","color":"009800"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5487","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDIyODQ1MA==","url":"https://github.com/coala/coala/pull/5487#discussion_r194228450","bodyText":"Add a space after $ and before pytest","diffHunk":"@@ -295,6 +295,20 @@ coala project directory:\n \n     $ pip3 install -r test-requirements.txt -r requirements.txt\n \n+\n+After the test dependencies have been installed\n+run pytest to test your changes locally:\n+\n+::\n+\n+    $pytest","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-06-09T14:00:34Z","lastEditedAt":null,"updatedAt":"2018-06-09T14:00:34Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM5Mjc5OTU5NA==","url":"https://github.com/coala/coala/pull/5487#issuecomment-392799594","bodyText":"@dorothykiz1 you already have a PR open for this issue then why this? #5411\nWe do not like duplicate PRs. You should close one of them.","diffHunk":null,"author":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4","name":"Palash Nigam"},"reactions":[],"createdAt":"2018-05-29T14:35:10Z","lastEditedAt":null,"updatedAt":"2018-05-29T14:35:10Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM5MjgwMDk2Mg==","url":"https://github.com/coala/coala/pull/5487#issuecomment-392800962","bodyText":"@palash25 i had no way of editing the other after working on my reviews  , thats why i created this, let me close the former","diffHunk":null,"author":{"login":"dorothykiz1","avatarUrl":"https://avatars3.githubusercontent.com/u/30805504?v=4","name":null},"reactions":[{"id":"MDg6UmVhY3Rpb24yNDI5NDc0Mw==","createdAt":"2018-05-29T14:47:53Z","content":"THUMBS_DOWN","user":{"login":"palash25","name":"Palash Nigam"}},{"id":"MDg6UmVhY3Rpb24yNDM0MzYxNw==","createdAt":"2018-05-30T10:29:50Z","content":"CONFUSED","user":{"login":"dorothykiz1","name":null}}],"createdAt":"2018-05-29T14:39:05Z","lastEditedAt":null,"updatedAt":"2018-05-29T14:39:05Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM5MjgwMzQ3Nw==","url":"https://github.com/coala/coala/pull/5487#issuecomment-392803477","bodyText":"Have successfully closed the other , no more duplication.","diffHunk":null,"author":{"login":"dorothykiz1","avatarUrl":"https://avatars3.githubusercontent.com/u/30805504?v=4","name":null},"reactions":[],"createdAt":"2018-05-29T14:45:49Z","lastEditedAt":null,"updatedAt":"2018-05-29T14:45:49Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM5MjgwNDEwOA==","url":"https://github.com/coala/coala/pull/5487#issuecomment-392804108","bodyText":"You did have a way of editing the last one. Its a simple command called git commit --amend\nIf you had referred to the docs or ask for help on gitter instead of deciding it for yourself (that it can't be edited) then you would have learnt a new command.\nYou better learn how to amend your commits because we have to do it for every PR and if you keep making multiple PRs for every little amend a maintainer will have to ban you from contributing till you learn git.\nThis has happened to a newcomer before.","diffHunk":null,"author":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4","name":"Palash Nigam"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNDQ1NjU0MQ==","createdAt":"2018-06-01T06:13:25Z","content":"THUMBS_UP","user":{"login":"pareksha","name":"Pareksha Manchanda"}}],"createdAt":"2018-05-29T14:47:36Z","lastEditedAt":null,"updatedAt":"2018-05-29T14:47:36Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM5MjgwNDU1MA==","url":"https://github.com/coala/coala/pull/5487#issuecomment-392804550","bodyText":"Have successfully closed the other , no more duplication.\n\nThe duplication always stays there in the PR queue. So please don't make that mistake again and read the docs thoroughly","diffHunk":null,"author":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4","name":"Palash Nigam"},"reactions":[],"createdAt":"2018-05-29T14:48:43Z","lastEditedAt":null,"updatedAt":"2018-05-29T14:48:43Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM5MjgwNDc5NQ==","url":"https://github.com/coala/coala/pull/5487#issuecomment-392804795","bodyText":"Thank You","diffHunk":null,"author":{"login":"dorothykiz1","avatarUrl":"https://avatars3.githubusercontent.com/u/30805504?v=4","name":null},"reactions":[{"id":"MDg6UmVhY3Rpb24yNDI5NDk1MA==","createdAt":"2018-05-29T14:50:46Z","content":"THUMBS_UP","user":{"login":"palash25","name":"Palash Nigam"}}],"createdAt":"2018-05-29T14:49:19Z","lastEditedAt":null,"updatedAt":"2018-05-29T14:49:19Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM5NzcwODAxMg==","url":"https://github.com/coala/coala/pull/5487#issuecomment-397708012","bodyText":"reack ac56dbc","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-06-15T18:37:03Z","lastEditedAt":null,"updatedAt":"2018-06-15T18:37:03Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM5NzcyMDM3Nw==","url":"https://github.com/coala/coala/pull/5487#issuecomment-397720377","bodyText":"@jayvdb Thank you for merging my pull request looking forward to getting another issue. Am delighted 😊","diffHunk":null,"author":{"login":"dorothykiz1","avatarUrl":"https://avatars3.githubusercontent.com/u/30805504?v=4","name":null},"reactions":[],"createdAt":"2018-06-15T19:28:25Z","lastEditedAt":"2018-06-15T19:32:29Z","updatedAt":"2018-06-15T19:32:29Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1529398718000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5488","number":5488,"title":"TypeScript.py: Change aliases to type tuple","body":"aliases = 'ts' --> aliases = ('ts',).\nCloses #5463\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":3,"createdAt":"2018-05-29T13:54:09Z","updatedAt":"2018-06-19T08:58:38Z","closedAt":"2018-06-18T11:17:19Z","state":"closed","user":{"login":"ananyaarun","avatarUrl":"https://avatars2.githubusercontent.com/u/32260628?v=4"},"owner":{"login":"ananyaarun","avatarUrl":"https://avatars2.githubusercontent.com/u/32260628?v=4"},"assignee":{"login":"ananyaarun","avatarUrl":"https://avatars2.githubusercontent.com/u/32260628?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"process/wip","color":"fbca04"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5488","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDM5Mjk4Njk3MA==","url":"https://github.com/coala/coala/pull/5488#issuecomment-392986970","bodyText":"Your commit body doesn't need to show the exact change that you made to the code. Git already diffs it so writing aliases = 'ts' --> aliases = ('ts',) doesn't help us understand this commit. You should either find out the reasoning for why this change needed to be made (maybe ask for help in chat)  or just don't include a body. See documentation for Commit Body","diffHunk":null,"author":{"login":"jsecrest","avatarUrl":"https://avatars2.githubusercontent.com/u/16362983?v=4","name":"Jason Secrest"},"createdAt":"2018-05-30T00:00:03Z","lastEditedAt":"2018-05-30T00:00:53Z","updatedAt":"2018-05-30T00:00:53Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM5ODAyMTUzMA==","url":"https://github.com/coala/coala/pull/5488#issuecomment-398021530","bodyText":"There were a few errors in my PR (regarding the branch i was using) will be closing this and sending another one.","diffHunk":null,"author":{"login":"ananyaarun","avatarUrl":"https://avatars2.githubusercontent.com/u/32260628?v=4","name":"Ananya Arun"},"createdAt":"2018-06-18T11:17:19Z","lastEditedAt":null,"updatedAt":"2018-06-18T11:17:19Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM5ODMyNjk1OA==","url":"https://github.com/coala/coala/pull/5488#issuecomment-398326958","bodyText":"@ananyaarun Please be aware that we really hate closing pull requests. Normally everyone is strongly encouraged to fix whatever the problem is via the existing PR.\nI'm not sure what the best way would have been to resolve your branch issue, but any time you think you should close a PR and open a new one it's much better to present the problem and then ask how the maintainers wanted you to fix it. Questions like that are really great for asking in the gitter chat - usually you can get an answer pretty quickly.","diffHunk":null,"author":{"login":"jsecrest","avatarUrl":"https://avatars2.githubusercontent.com/u/16362983?v=4","name":"Jason Secrest"},"createdAt":"2018-06-19T08:58:38Z","lastEditedAt":null,"updatedAt":"2018-06-19T08:58:38Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1528545716000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5491","number":5491,"title":"coala-lassi","body":"For short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":2,"createdAt":"2018-06-02T17:04:31Z","updatedAt":"2018-06-09T12:01:56Z","closedAt":"2018-06-09T12:01:43Z","state":"closed","user":{"login":"mhraza95","avatarUrl":"https://avatars0.githubusercontent.com/u/11434324?v=4"},"owner":{"login":"mhraza95","avatarUrl":"https://avatars0.githubusercontent.com/u/11434324?v=4"},"assignee":{"login":"adhikasp","avatarUrl":"https://avatars2.githubusercontent.com/u/6151302?v=4"},"labels":[{"name":"area/CI","color":"eb6420"},{"name":"area/CLI","color":"006b75"},{"name":"area/actions","color":"207de5"},{"name":"area/aspects","color":"000000"},{"name":"area/bears","color":"eb6420"},{"name":"area/config","color":"fbca04"},{"name":"area/core","color":"eb6420"},{"name":"area/documentation","color":"bfe5bf"},{"name":"area/languages","color":"d4c5f9"},{"name":"area/lintbears","color":"ededed"},{"name":"area/results","color":"eb6420"},{"name":"area/tests","color":"bfd4f2"},{"name":"area/upstream","color":"5319e7"},{"name":"area/usability","color":"d4c5f9"},{"name":"difficulty/high","color":"B319e7"},{"name":"difficulty/low","color":"207de5"},{"name":"difficulty/medium","color":"0052cc"},{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"importance/critical","color":"e11d21"},{"name":"importance/high","color":"eb6420"},{"name":"importance/low","color":"70E870"},{"name":"importance/medium","color":"fbca04"},{"name":"initiatives/gci","color":"e99695"},{"name":"platform/windows","color":"0052cc"},{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XXL","color":"AA0000"},{"name":"status/blocked","color":"e11d21"},{"name":"status/needs info","color":"006b75"},{"name":"status/stale","color":"fbca04"},{"name":"type/bug","color":"e11d21"},{"name":"type/codestyle","color":"d4c5f9"},{"name":"type/feature","color":"0052cc"},{"name":"type/performance","color":"fef2c0"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5491","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDM5NDk2MTMzNA==","url":"https://github.com/coala/coala/pull/5491#issuecomment-394961334","bodyText":"😲 What is this for? @mhraza95","diffHunk":null,"author":{"login":"sangamcse","avatarUrl":"https://avatars2.githubusercontent.com/u/26381717?v=4","name":"Sangam Kumar"},"reactions":[],"createdAt":"2018-06-06T06:57:39Z","lastEditedAt":null,"updatedAt":"2018-06-06T06:57:39Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM5NTk2Mzg4Nw==","url":"https://github.com/coala/coala/pull/5491#issuecomment-395963887","bodyText":"Gitmate testing ... ;-)","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNDg1NDY1OQ==","createdAt":"2018-06-09T12:21:15Z","content":"THUMBS_UP","user":{"login":"anctartica","name":""}},{"id":"MDg6UmVhY3Rpb24yNDg1NDY2MA==","createdAt":"2018-06-09T12:21:22Z","content":"LAUGH","user":{"login":"anctartica","name":""}}],"createdAt":"2018-06-09T12:01:56Z","lastEditedAt":null,"updatedAt":"2018-06-09T12:01:56Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1529637612000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5492","number":5492,"title":"aspects: Create `map_ambiguous_setting_to_aspect`","body":"Create decorator map_ambiguous_setting_to_aspect for\nmapping bear settings to aspects in cases where data_types\nand values are different in bear settings and aspects.\nA typical example is use_spaces (bear setting) and\nindent_type (taste of Indentation aspect).\nThis is part of Convert Bear To Aspects GSoC 2018 project.\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":13,"createdAt":"2018-06-03T11:04:36Z","updatedAt":"2018-06-22T03:20:12Z","closedAt":"2018-06-21T04:32:27Z","state":"merged","user":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4"},"owner":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4"},"assignee":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4"},"labels":[{"name":"area/aspects","color":"000000"},{"name":"size/S","color":"B1CF0A"},{"name":"type/feature","color":"0052cc"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5492","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDY3NjYxNg==","url":"https://github.com/coala/coala/pull/5492#discussion_r194676616","bodyText":"why are you renaming this?","diffHunk":"@@ -15,9 +15,9 @@ class Root(aspectbase, metaclass=aspectclass):\n     >>> from coalib.bearlib.aspects import Taste\n \n     >>> @Root.subaspect\n-    ... class Formatting:\n+    ... class Format:","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-06-12T09:43:29Z","lastEditedAt":null,"updatedAt":"2018-06-12T09:43:29Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDY4MzI2OA==","url":"https://github.com/coala/coala/pull/5492#discussion_r194683268","bodyText":"related to #5492 (comment)","diffHunk":"@@ -15,9 +15,9 @@ class Root(aspectbase, metaclass=aspectclass):\n     >>> from coalib.bearlib.aspects import Taste\n \n     >>> @Root.subaspect\n-    ... class Formatting:\n+    ... class Format:","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-06-12T10:07:01Z","lastEditedAt":null,"updatedAt":"2018-06-12T10:07:01Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDY4Njg2OA==","url":"https://github.com/coala/coala/pull/5492#discussion_r194686868","bodyText":"I am pretty confident with your summary of the problem there.\nWhat I suspect is that the doctests are not cleaning up after themselves.\nPlease create a new branch for investigating this.  Revert this rename so the problem re-occurs, and then change the pytest configuration to disable doctests.\nIf the error goes away when the doctests are disabled, we have 100% confirmed the doctest are polluting the Root aspect.\nThen you can create an issue about this.\nIt is a multi-faceted issue.\nOne part to investigate is what happens when two subaspects are registered with the same name..?\nWhy isnt there an error when the second one (i.e. doctests and the real one) is registered?\nThe real solution should include for the doctest in this module to delete the Formatting that they created. (I am not sure how that can be done -- deleting aspects may not have been planned, so you may need to delete objects from a dictionary somewhere.)\nThen we know how to un-do damage caused by doctest.\nBut a workaround is to create a separate PR \"related to\" the issue , which gives this subaspect a different name.  Format isnt a good new name.  Give it a crazy name, so we will always recognise it when it appears in logs unexpectedly. ;-)","diffHunk":"@@ -15,9 +15,9 @@ class Root(aspectbase, metaclass=aspectclass):\n     >>> from coalib.bearlib.aspects import Taste\n \n     >>> @Root.subaspect\n-    ... class Formatting:\n+    ... class Format:","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-06-12T10:22:31Z","lastEditedAt":null,"updatedAt":"2018-06-12T10:22:31Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTAyNzM4OQ==","url":"https://github.com/coala/coala/pull/5492#discussion_r195027389","bodyText":"@jayvdb error goes away when the doctests are disabled in pytest. Now the tests are passing (although ultimately failing due to incomplete coverage).\nI have created the issue here #5518.\nAbout the multi-aspect part, I think you need to see \n  \n    \n      coala/coalib/bearlib/aspects/__init__.py\n    \n    \n         Line 99\n      in\n      936a5d8\n    \n    \n    \n    \n\n        \n          \n           raise MultipleAspectFoundError(aspectname, matches) \n        \n    \n  \n\n. We already have MultipleAspectFoundError but it's worth noting that it's not raised for the two Formatting aspects (one of doctests and the actual one). This needs to be investigated.\nI like the idea of the workaround, issue lies here https://github.com/coala/coala/blob/master/coalib/bearlib/aspects/root.py#L18","diffHunk":"@@ -15,9 +15,9 @@ class Root(aspectbase, metaclass=aspectclass):\n     >>> from coalib.bearlib.aspects import Taste\n \n     >>> @Root.subaspect\n-    ... class Formatting:\n+    ... class Format:","author":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4","name":"Pareksha Manchanda"},"reactions":[],"createdAt":"2018-06-13T10:12:19Z","lastEditedAt":null,"updatedAt":"2018-06-13T10:12:19Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NjYyNTkxMg==","url":"https://github.com/coala/coala/pull/5492#discussion_r196625912","bodyText":"blanklines != newline token.  They are orthogonal.  They can not be mapped sensibly, and doing it in your test code makes the test logic confusing.\nA newline token at EOL is terminating the last line with a newline token.\nThe meaning of that newline token varies between context and GUI editors, but it is not a blank line.","diffHunk":"@@ -16,11 +17,20 @@ class RunDecoratedBear(LocalBear):\n         remove_unreachable_code=get_aspect('UnreachableCode'),\n         minimum_clone_tokens=get_aspect('Clone').min_clone_tokens,\n     )\n+    @map_ambiguous_setting_to_aspect(\n+        use_spaces=(get_aspect('Indentation').indent_type,\n+                    [('space', True), ('tab', False)]),\n+        blanklines_at_EOF=(get_aspect('NewlineAtEOF').newline_at_EOF,","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNTMzMDkyNA==","createdAt":"2018-06-20T04:15:18Z","content":"THUMBS_UP","user":{"login":"pareksha","name":"Pareksha Manchanda"}}],"createdAt":"2018-06-20T01:30:34Z","lastEditedAt":null,"updatedAt":"2018-06-20T01:30:34Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NjYyNjIzNA==","url":"https://github.com/coala/coala/pull/5492#discussion_r196626234","bodyText":"return a dict of these, so that the tests become more self explanatory.","diffHunk":"@@ -16,11 +17,20 @@ class RunDecoratedBear(LocalBear):\n         remove_unreachable_code=get_aspect('UnreachableCode'),\n         minimum_clone_tokens=get_aspect('Clone').min_clone_tokens,\n     )\n+    @map_ambiguous_setting_to_aspect(\n+        use_spaces=(get_aspect('Indentation').indent_type,\n+                    [('space', True), ('tab', False)]),\n+        blanklines_at_EOF=(get_aspect('NewlineAtEOF').newline_at_EOF,\n+                           [(True, 1), (False, 0)]),\n+    )\n     def run(self,\n             remove_unreachable_code: bool = False,\n             minimum_clone_tokens: int = 10,\n+            use_spaces: bool = True,\n+            blanklines_at_EOF: int = 1,\n             ):\n-        return [remove_unreachable_code, minimum_clone_tokens]\n+        return [remove_unreachable_code, minimum_clone_tokens,","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNTMzMTQ0Ng==","createdAt":"2018-06-20T04:41:16Z","content":"THUMBS_UP","user":{"login":"pareksha","name":"Pareksha Manchanda"}}],"createdAt":"2018-06-20T01:33:12Z","lastEditedAt":null,"updatedAt":"2018-06-20T01:33:12Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NjYyNjM1OQ==","url":"https://github.com/coala/coala/pull/5492#discussion_r196626359","bodyText":"this needs to be one the next line ??","diffHunk":"@@ -47,21 +57,60 @@ def test_setting_priority(self):\n         self.section.append(\n             Setting('minimum_clone_tokens', 40))\n         result = self.bear.execute()\n-        self.assertEqual([False, 40], result)\n+        self.assertEqual([False, 40, True, 1], result)\n \n     def test_partial_mapping(self):\n         self.section.aspects = AspectList([\n             get_aspect('UnreachableCode')('py'),\n         ])\n         result = self.bear.execute()\n-        self.assertEqual([True, 10], result)\n+        self.assertEqual([True, 10, True, 1], result)\n+\n+    def test_no_mapping(self):\n+        self.section.aspects = AspectList([])\n+        result = self.bear.execute()\n+        self.assertEqual([False, 10, True, 1], result)\n+\n+    def test_skip_mapping(self):\n+        self.section.aspects = None\n+        result = self.bear.execute()\n+        self.assertEqual([False, 10, True, 1], result)\n+\n+\n+class MapAmbiguousSettingToAspectTest(unittest.TestCase):\n+\n+    def setUp(self):\n+        self.section = Section('aspect section')\n+        self.bear = RunDecoratedBear(self.section, None)\n+\n+    def test_mapping(self):\n+        self.section.aspects = AspectList([\n+            get_aspect('Indentation')('py', indent_type='tab'),\n+            get_aspect('NewlineAtEOF')('py', newline_at_EOF=True)\n+        ])\n+        result = self.bear.execute()\n+        self.assertEqual([False, 10, False, 1], result)\n+\n+    def test_setting_priority(self):\n+        self.section.aspects = AspectList([\n+            get_aspect('Indentation')('py', indent_type='tab'),\n+            get_aspect('NewlineAtEOF')('py', newline_at_EOF=False)\n+        ])\n+        self.section.append(\n+            Setting('use_spaces', False))\n+        result = self.bear.execute()\n+        self.assertEqual([False, 10, False, 0], result)\n \n     def test_no_mapping(self):\n         self.section.aspects = AspectList([])\n         result = self.bear.execute()\n-        self.assertEqual([False, 10], result)\n+        self.assertEqual([False, 10, True, 1], result)\n \n     def test_skip_mapping(self):\n         self.section.aspects = None\n+        self.section.append(\n+            Setting('use_spaces', False))","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-06-20T01:34:06Z","lastEditedAt":null,"updatedAt":"2018-06-20T01:34:06Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NjYyNjY3MQ==","url":"https://github.com/coala/coala/pull/5492#discussion_r196626671","bodyText":"class MapAmbiguousSettingToAspectTest doesnt need no_mapping or skip_mapping tests :/","diffHunk":"@@ -47,21 +57,60 @@ def test_setting_priority(self):\n         self.section.append(\n             Setting('minimum_clone_tokens', 40))\n         result = self.bear.execute()\n-        self.assertEqual([False, 40], result)\n+        self.assertEqual([False, 40, True, 1], result)\n \n     def test_partial_mapping(self):\n         self.section.aspects = AspectList([\n             get_aspect('UnreachableCode')('py'),\n         ])\n         result = self.bear.execute()\n-        self.assertEqual([True, 10], result)\n+        self.assertEqual([True, 10, True, 1], result)\n+\n+    def test_no_mapping(self):\n+        self.section.aspects = AspectList([])\n+        result = self.bear.execute()\n+        self.assertEqual([False, 10, True, 1], result)\n+\n+    def test_skip_mapping(self):\n+        self.section.aspects = None\n+        result = self.bear.execute()\n+        self.assertEqual([False, 10, True, 1], result)\n+\n+\n+class MapAmbiguousSettingToAspectTest(unittest.TestCase):\n+\n+    def setUp(self):\n+        self.section = Section('aspect section')\n+        self.bear = RunDecoratedBear(self.section, None)\n+\n+    def test_mapping(self):\n+        self.section.aspects = AspectList([\n+            get_aspect('Indentation')('py', indent_type='tab'),\n+            get_aspect('NewlineAtEOF')('py', newline_at_EOF=True)\n+        ])\n+        result = self.bear.execute()\n+        self.assertEqual([False, 10, False, 1], result)\n+\n+    def test_setting_priority(self):\n+        self.section.aspects = AspectList([\n+            get_aspect('Indentation')('py', indent_type='tab'),\n+            get_aspect('NewlineAtEOF')('py', newline_at_EOF=False)\n+        ])\n+        self.section.append(\n+            Setting('use_spaces', False))\n+        result = self.bear.execute()\n+        self.assertEqual([False, 10, False, 0], result)\n \n     def test_no_mapping(self):","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-06-20T01:36:30Z","lastEditedAt":null,"updatedAt":"2018-06-20T01:36:30Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NjY0NDg3MQ==","url":"https://github.com/coala/coala/pull/5492#discussion_r196644871","bodyText":"Thanks for clarifying that. :). I will remove it.","diffHunk":"@@ -16,11 +17,20 @@ class RunDecoratedBear(LocalBear):\n         remove_unreachable_code=get_aspect('UnreachableCode'),\n         minimum_clone_tokens=get_aspect('Clone').min_clone_tokens,\n     )\n+    @map_ambiguous_setting_to_aspect(\n+        use_spaces=(get_aspect('Indentation').indent_type,\n+                    [('space', True), ('tab', False)]),\n+        blanklines_at_EOF=(get_aspect('NewlineAtEOF').newline_at_EOF,","author":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4","name":"Pareksha Manchanda"},"reactions":[],"createdAt":"2018-06-20T04:23:59Z","lastEditedAt":"2018-06-20T05:49:56Z","updatedAt":"2018-06-20T05:49:56Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NjY0NTE0Nw==","url":"https://github.com/coala/coala/pull/5492#discussion_r196645147","bodyText":"Oh, I will remove these two.","diffHunk":"@@ -47,21 +57,60 @@ def test_setting_priority(self):\n         self.section.append(\n             Setting('minimum_clone_tokens', 40))\n         result = self.bear.execute()\n-        self.assertEqual([False, 40], result)\n+        self.assertEqual([False, 40, True, 1], result)\n \n     def test_partial_mapping(self):\n         self.section.aspects = AspectList([\n             get_aspect('UnreachableCode')('py'),\n         ])\n         result = self.bear.execute()\n-        self.assertEqual([True, 10], result)\n+        self.assertEqual([True, 10, True, 1], result)\n+\n+    def test_no_mapping(self):\n+        self.section.aspects = AspectList([])\n+        result = self.bear.execute()\n+        self.assertEqual([False, 10, True, 1], result)\n+\n+    def test_skip_mapping(self):\n+        self.section.aspects = None\n+        result = self.bear.execute()\n+        self.assertEqual([False, 10, True, 1], result)\n+\n+\n+class MapAmbiguousSettingToAspectTest(unittest.TestCase):\n+\n+    def setUp(self):\n+        self.section = Section('aspect section')\n+        self.bear = RunDecoratedBear(self.section, None)\n+\n+    def test_mapping(self):\n+        self.section.aspects = AspectList([\n+            get_aspect('Indentation')('py', indent_type='tab'),\n+            get_aspect('NewlineAtEOF')('py', newline_at_EOF=True)\n+        ])\n+        result = self.bear.execute()\n+        self.assertEqual([False, 10, False, 1], result)\n+\n+    def test_setting_priority(self):\n+        self.section.aspects = AspectList([\n+            get_aspect('Indentation')('py', indent_type='tab'),\n+            get_aspect('NewlineAtEOF')('py', newline_at_EOF=False)\n+        ])\n+        self.section.append(\n+            Setting('use_spaces', False))\n+        result = self.bear.execute()\n+        self.assertEqual([False, 10, False, 0], result)\n \n     def test_no_mapping(self):","author":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4","name":"Pareksha Manchanda"},"reactions":[],"createdAt":"2018-06-20T04:27:11Z","lastEditedAt":null,"updatedAt":"2018-06-20T04:27:11Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NjY3OTc1Mw==","url":"https://github.com/coala/coala/pull/5492#discussion_r196679753","bodyText":"closing ] on the next line so more can be added easily","diffHunk":"@@ -16,15 +17,28 @@ class RunDecoratedBear(LocalBear):\n         remove_unreachable_code=get_aspect('UnreachableCode'),\n         minimum_clone_tokens=get_aspect('Clone').min_clone_tokens,\n     )\n+    @map_ambiguous_setting_to_aspect(\n+        use_spaces=(get_aspect('Indentation').indent_type,\n+                    [('space', True), ('tab', False)]),\n+    )\n     def run(self,\n             remove_unreachable_code: bool = False,\n             minimum_clone_tokens: int = 10,\n+            use_spaces: bool = True,\n             ):\n-        return [remove_unreachable_code, minimum_clone_tokens]\n+        return [('remove_unreachable_code', remove_unreachable_code),\n+                ('minimum_clone_tokens', minimum_clone_tokens),\n+                ('use_spaces', use_spaces)]","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-06-20T07:56:30Z","lastEditedAt":null,"updatedAt":"2018-06-20T07:56:30Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NjY3OTg2OQ==","url":"https://github.com/coala/coala/pull/5492#discussion_r196679869","bodyText":"this doesnt use self so it should be a module level function, not inside the class","diffHunk":"@@ -16,15 +17,28 @@ class RunDecoratedBear(LocalBear):\n         remove_unreachable_code=get_aspect('UnreachableCode'),\n         minimum_clone_tokens=get_aspect('Clone').min_clone_tokens,\n     )\n+    @map_ambiguous_setting_to_aspect(\n+        use_spaces=(get_aspect('Indentation').indent_type,\n+                    [('space', True), ('tab', False)]),\n+    )\n     def run(self,\n             remove_unreachable_code: bool = False,\n             minimum_clone_tokens: int = 10,\n+            use_spaces: bool = True,\n             ):\n-        return [remove_unreachable_code, minimum_clone_tokens]\n+        return [('remove_unreachable_code', remove_unreachable_code),\n+                ('minimum_clone_tokens', minimum_clone_tokens),\n+                ('use_spaces', use_spaces)]\n \n \n class MapSettingToAspectTest(unittest.TestCase):\n \n+    def list_to_dict(self, tuple_list):","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-06-20T07:56:59Z","lastEditedAt":null,"updatedAt":"2018-06-20T07:56:59Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NjY3OTk4NQ==","url":"https://github.com/coala/coala/pull/5492#discussion_r196679985","bodyText":"closing } on the next line so it is easy to add more","diffHunk":"@@ -34,8 +48,10 @@ def test_mapping(self):\n             get_aspect('UnreachableCode')('py'),\n             get_aspect('Clone')('py', min_clone_tokens=30),\n         ])\n-        result = self.bear.execute()\n-        self.assertEqual([True, 30], result)\n+        result = self.list_to_dict(self.bear.execute())\n+        self.assertEqual({'remove_unreachable_code': True,\n+                          'minimum_clone_tokens': 30,\n+                          'use_spaces': True}, result)","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-06-20T07:57:28Z","lastEditedAt":null,"updatedAt":"2018-06-20T07:57:28Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NjY4MDI5OA==","url":"https://github.com/coala/coala/pull/5492#discussion_r196680298","bodyText":"no need to modify the original line.\nresult = list_to_dict(result)","diffHunk":"@@ -46,22 +62,63 @@ def test_setting_priority(self):\n             Setting('remove_unreachable_code', 'False'))\n         self.section.append(\n             Setting('minimum_clone_tokens', 40))\n-        result = self.bear.execute()\n-        self.assertEqual([False, 40], result)\n+        result = self.list_to_dict(self.bear.execute())\n+        self.assertEqual({'remove_unreachable_code': False,\n+                          'minimum_clone_tokens': 40,\n+                          'use_spaces': True}, result)\n \n     def test_partial_mapping(self):\n         self.section.aspects = AspectList([\n             get_aspect('UnreachableCode')('py'),\n         ])\n-        result = self.bear.execute()\n-        self.assertEqual([True, 10], result)\n+        result = self.list_to_dict(self.bear.execute())\n+        self.assertEqual({'remove_unreachable_code': True,\n+                          'minimum_clone_tokens': 10,\n+                          'use_spaces': True}, result)\n \n     def test_no_mapping(self):\n         self.section.aspects = AspectList([])\n-        result = self.bear.execute()\n-        self.assertEqual([False, 10], result)\n+        result = self.list_to_dict(self.bear.execute())\n+        self.assertEqual({'remove_unreachable_code': False,\n+                          'minimum_clone_tokens': 10,\n+                          'use_spaces': True}, result)\n \n     def test_skip_mapping(self):\n         self.section.aspects = None\n-        result = self.bear.execute()\n-        self.assertEqual([False, 10], result)\n+        result = self.list_to_dict(self.bear.execute())","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-06-20T07:58:37Z","lastEditedAt":null,"updatedAt":"2018-06-20T07:58:37Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NjY4MDk0Mw==","url":"https://github.com/coala/coala/pull/5492#discussion_r196680943","bodyText":"this should be a CONSTANT in the class, used to initialise the expected test results.\nEXPECTED = {'remove_unreachable_code': True,\n 'minimum_clone_tokens': 10,\n 'use_spaces': True,\n }\n...\n\nexpected = EXPECTED.copy()\nexpected['blah'] = override\nself.assertEqual(expected, results)","diffHunk":"@@ -46,22 +62,63 @@ def test_setting_priority(self):\n             Setting('remove_unreachable_code', 'False'))\n         self.section.append(\n             Setting('minimum_clone_tokens', 40))\n-        result = self.bear.execute()\n-        self.assertEqual([False, 40], result)\n+        result = self.list_to_dict(self.bear.execute())\n+        self.assertEqual({'remove_unreachable_code': False,\n+                          'minimum_clone_tokens': 40,\n+                          'use_spaces': True}, result)\n \n     def test_partial_mapping(self):\n         self.section.aspects = AspectList([\n             get_aspect('UnreachableCode')('py'),\n         ])\n-        result = self.bear.execute()\n-        self.assertEqual([True, 10], result)\n+        result = self.list_to_dict(self.bear.execute())\n+        self.assertEqual({'remove_unreachable_code': True,","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-06-20T08:01:05Z","lastEditedAt":null,"updatedAt":"2018-06-20T08:01:05Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NjY4MTE1OQ==","url":"https://github.com/coala/coala/pull/5492#discussion_r196681159","bodyText":"why split this line?","diffHunk":"@@ -46,22 +62,63 @@ def test_setting_priority(self):\n             Setting('remove_unreachable_code', 'False'))\n         self.section.append(\n             Setting('minimum_clone_tokens', 40))\n-        result = self.bear.execute()\n-        self.assertEqual([False, 40], result)\n+        result = self.list_to_dict(self.bear.execute())\n+        self.assertEqual({'remove_unreachable_code': False,\n+                          'minimum_clone_tokens': 40,\n+                          'use_spaces': True}, result)\n \n     def test_partial_mapping(self):\n         self.section.aspects = AspectList([\n             get_aspect('UnreachableCode')('py'),\n         ])\n-        result = self.bear.execute()\n-        self.assertEqual([True, 10], result)\n+        result = self.list_to_dict(self.bear.execute())\n+        self.assertEqual({'remove_unreachable_code': True,\n+                          'minimum_clone_tokens': 10,\n+                          'use_spaces': True}, result)\n \n     def test_no_mapping(self):\n         self.section.aspects = AspectList([])\n-        result = self.bear.execute()\n-        self.assertEqual([False, 10], result)\n+        result = self.list_to_dict(self.bear.execute())\n+        self.assertEqual({'remove_unreachable_code': False,\n+                          'minimum_clone_tokens': 10,\n+                          'use_spaces': True}, result)\n \n     def test_skip_mapping(self):\n         self.section.aspects = None\n-        result = self.bear.execute()\n-        self.assertEqual([False, 10], result)\n+        result = self.list_to_dict(self.bear.execute())\n+        self.assertEqual({'remove_unreachable_code': False,\n+                          'minimum_clone_tokens': 10,\n+                          'use_spaces': True}, result)\n+\n+\n+class MapAmbiguousSettingToAspectTest(unittest.TestCase):\n+\n+    def list_to_dict(self, tuple_list):\n+        result_dict = {}\n+        for pair in tuple_list:\n+            result_dict[pair[0]] = pair[1]\n+        return result_dict\n+\n+    def setUp(self):\n+        self.section = Section('aspect section')\n+        self.bear = RunDecoratedBear(self.section, None)\n+\n+    def test_mapping(self):\n+        self.section.aspects = AspectList([\n+            get_aspect('Indentation')('py', indent_type='tab'),\n+        ])\n+        result = self.list_to_dict(self.bear.execute())\n+        self.assertEqual({'remove_unreachable_code': False,\n+                          'minimum_clone_tokens': 10,\n+                          'use_spaces': False}, result)\n+\n+    def test_setting_priority(self):\n+        self.section.aspects = AspectList([\n+            get_aspect('Indentation')('py', indent_type='tab'),\n+        ])\n+        self.section.append(","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-06-20T08:01:49Z","lastEditedAt":null,"updatedAt":"2018-06-20T08:01:49Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NjY4MTcwOQ==","url":"https://github.com/coala/coala/pull/5492#discussion_r196681709","bodyText":"you could even create a helper\ndef assertResult(self, expected, result):\n    self.assertEqual(expected, list_to_dict(result))","diffHunk":"@@ -46,22 +62,63 @@ def test_setting_priority(self):\n             Setting('remove_unreachable_code', 'False'))\n         self.section.append(\n             Setting('minimum_clone_tokens', 40))\n-        result = self.bear.execute()\n-        self.assertEqual([False, 40], result)\n+        result = self.list_to_dict(self.bear.execute())\n+        self.assertEqual({'remove_unreachable_code': False,\n+                          'minimum_clone_tokens': 40,\n+                          'use_spaces': True}, result)\n \n     def test_partial_mapping(self):\n         self.section.aspects = AspectList([\n             get_aspect('UnreachableCode')('py'),\n         ])\n-        result = self.bear.execute()\n-        self.assertEqual([True, 10], result)\n+        result = self.list_to_dict(self.bear.execute())\n+        self.assertEqual({'remove_unreachable_code': True,\n+                          'minimum_clone_tokens': 10,\n+                          'use_spaces': True}, result)\n \n     def test_no_mapping(self):\n         self.section.aspects = AspectList([])\n-        result = self.bear.execute()\n-        self.assertEqual([False, 10], result)\n+        result = self.list_to_dict(self.bear.execute())\n+        self.assertEqual({'remove_unreachable_code': False,\n+                          'minimum_clone_tokens': 10,\n+                          'use_spaces': True}, result)\n \n     def test_skip_mapping(self):\n         self.section.aspects = None\n-        result = self.bear.execute()\n-        self.assertEqual([False, 10], result)\n+        result = self.list_to_dict(self.bear.execute())","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-06-20T08:04:04Z","lastEditedAt":"2018-06-20T08:04:13Z","updatedAt":"2018-06-20T08:04:13Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NjcxMjYzOQ==","url":"https://github.com/coala/coala/pull/5492#discussion_r196712639","bodyText":"Good idea.\nI am changing 'remove_unreachable_code' to False to be consistent with the bear defaults.","diffHunk":"@@ -46,22 +62,63 @@ def test_setting_priority(self):\n             Setting('remove_unreachable_code', 'False'))\n         self.section.append(\n             Setting('minimum_clone_tokens', 40))\n-        result = self.bear.execute()\n-        self.assertEqual([False, 40], result)\n+        result = self.list_to_dict(self.bear.execute())\n+        self.assertEqual({'remove_unreachable_code': False,\n+                          'minimum_clone_tokens': 40,\n+                          'use_spaces': True}, result)\n \n     def test_partial_mapping(self):\n         self.section.aspects = AspectList([\n             get_aspect('UnreachableCode')('py'),\n         ])\n-        result = self.bear.execute()\n-        self.assertEqual([True, 10], result)\n+        result = self.list_to_dict(self.bear.execute())\n+        self.assertEqual({'remove_unreachable_code': True,","author":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4","name":"Pareksha Manchanda"},"reactions":[],"createdAt":"2018-06-20T09:45:36Z","lastEditedAt":null,"updatedAt":"2018-06-20T09:45:36Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NjcxMzU3Nw==","url":"https://github.com/coala/coala/pull/5492#discussion_r196713577","bodyText":"Sorry, I just saw that you asked the same on the previous review too. Will be even more careful next time. :)\nI will remove the split.","diffHunk":"@@ -46,22 +62,63 @@ def test_setting_priority(self):\n             Setting('remove_unreachable_code', 'False'))\n         self.section.append(\n             Setting('minimum_clone_tokens', 40))\n-        result = self.bear.execute()\n-        self.assertEqual([False, 40], result)\n+        result = self.list_to_dict(self.bear.execute())\n+        self.assertEqual({'remove_unreachable_code': False,\n+                          'minimum_clone_tokens': 40,\n+                          'use_spaces': True}, result)\n \n     def test_partial_mapping(self):\n         self.section.aspects = AspectList([\n             get_aspect('UnreachableCode')('py'),\n         ])\n-        result = self.bear.execute()\n-        self.assertEqual([True, 10], result)\n+        result = self.list_to_dict(self.bear.execute())\n+        self.assertEqual({'remove_unreachable_code': True,\n+                          'minimum_clone_tokens': 10,\n+                          'use_spaces': True}, result)\n \n     def test_no_mapping(self):\n         self.section.aspects = AspectList([])\n-        result = self.bear.execute()\n-        self.assertEqual([False, 10], result)\n+        result = self.list_to_dict(self.bear.execute())\n+        self.assertEqual({'remove_unreachable_code': False,\n+                          'minimum_clone_tokens': 10,\n+                          'use_spaces': True}, result)\n \n     def test_skip_mapping(self):\n         self.section.aspects = None\n-        result = self.bear.execute()\n-        self.assertEqual([False, 10], result)\n+        result = self.list_to_dict(self.bear.execute())\n+        self.assertEqual({'remove_unreachable_code': False,\n+                          'minimum_clone_tokens': 10,\n+                          'use_spaces': True}, result)\n+\n+\n+class MapAmbiguousSettingToAspectTest(unittest.TestCase):\n+\n+    def list_to_dict(self, tuple_list):\n+        result_dict = {}\n+        for pair in tuple_list:\n+            result_dict[pair[0]] = pair[1]\n+        return result_dict\n+\n+    def setUp(self):\n+        self.section = Section('aspect section')\n+        self.bear = RunDecoratedBear(self.section, None)\n+\n+    def test_mapping(self):\n+        self.section.aspects = AspectList([\n+            get_aspect('Indentation')('py', indent_type='tab'),\n+        ])\n+        result = self.list_to_dict(self.bear.execute())\n+        self.assertEqual({'remove_unreachable_code': False,\n+                          'minimum_clone_tokens': 10,\n+                          'use_spaces': False}, result)\n+\n+    def test_setting_priority(self):\n+        self.section.aspects = AspectList([\n+            get_aspect('Indentation')('py', indent_type='tab'),\n+        ])\n+        self.section.append(","author":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4","name":"Pareksha Manchanda"},"reactions":[],"createdAt":"2018-06-20T09:48:12Z","lastEditedAt":"2018-06-20T09:48:43Z","updatedAt":"2018-06-20T09:48:43Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5Njc1NDAxOA==","url":"https://github.com/coala/coala/pull/5492#discussion_r196754018","bodyText":"for key, value in ...","diffHunk":"@@ -4,27 +4,52 @@\n     AspectList,\n     get as get_aspect,\n     map_setting_to_aspect,\n+    map_ambiguous_setting_to_aspect,\n )\n from coalib.bears.LocalBear import LocalBear\n from coalib.settings.Section import Section\n from coalib.settings.Setting import Setting\n \n \n+def list_to_dict(tuple_list):\n+    # Converts list of tuples to dict\n+    result_dict = {}\n+    for pair in tuple_list:","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-06-20T12:23:43Z","lastEditedAt":null,"updatedAt":"2018-06-20T12:23:43Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5Njc1NTAyOA==","url":"https://github.com/coala/coala/pull/5492#discussion_r196755028","bodyText":"These lines are not part of your change. Do not modify their style unless you need to improve their functionality as well.\nIt just makes your patch large and 'steals' git blame","diffHunk":"@@ -35,33 +60,73 @@ def test_mapping(self):\n             get_aspect('Clone')('py', min_clone_tokens=30),\n         ])\n         result = self.bear.execute()\n-        self.assertEqual([True, 30], result)\n+        expected = self.EXPECTED.copy()\n+        expected['minimum_clone_tokens'] = 30\n+        expected['remove_unreachable_code'] = True\n+        self.assertResult(expected, result)\n \n     def test_setting_priority(self):\n         self.section.aspects = AspectList([\n             get_aspect('UnreachableCode')('py'),\n             get_aspect('Clone')('py', min_clone_tokens=30),\n         ])\n-        self.section.append(\n-            Setting('remove_unreachable_code', 'False'))\n-        self.section.append(\n-            Setting('minimum_clone_tokens', 40))\n+        self.section.append(Setting('remove_unreachable_code', 'False'))\n+        self.section.append(Setting('minimum_clone_tokens', 40))","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNTM2MjczMw==","createdAt":"2018-06-20T15:23:09Z","content":"THUMBS_UP","user":{"login":"pareksha","name":"Pareksha Manchanda"}}],"createdAt":"2018-06-20T12:26:14Z","lastEditedAt":null,"updatedAt":"2018-06-20T12:26:14Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5Njc1Nzc2NQ==","url":"https://github.com/coala/coala/pull/5492#discussion_r196757765","bodyText":"this one should go first to be consistent","diffHunk":"@@ -35,33 +60,73 @@ def test_mapping(self):\n             get_aspect('Clone')('py', min_clone_tokens=30),\n         ])\n         result = self.bear.execute()\n-        self.assertEqual([True, 30], result)\n+        expected = self.EXPECTED.copy()\n+        expected['minimum_clone_tokens'] = 30\n+        expected['remove_unreachable_code'] = True","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-06-20T12:33:11Z","lastEditedAt":null,"updatedAt":"2018-06-20T12:33:11Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NjgyNTYyMA==","url":"https://github.com/coala/coala/pull/5492#discussion_r196825620","bodyText":"Yeah, I guess this will make a good newcomer issue :)","diffHunk":"@@ -35,33 +60,73 @@ def test_mapping(self):\n             get_aspect('Clone')('py', min_clone_tokens=30),\n         ])\n         result = self.bear.execute()\n-        self.assertEqual([True, 30], result)\n+        expected = self.EXPECTED.copy()\n+        expected['minimum_clone_tokens'] = 30\n+        expected['remove_unreachable_code'] = True\n+        self.assertResult(expected, result)\n \n     def test_setting_priority(self):\n         self.section.aspects = AspectList([\n             get_aspect('UnreachableCode')('py'),\n             get_aspect('Clone')('py', min_clone_tokens=30),\n         ])\n-        self.section.append(\n-            Setting('remove_unreachable_code', 'False'))\n-        self.section.append(\n-            Setting('minimum_clone_tokens', 40))\n+        self.section.append(Setting('remove_unreachable_code', 'False'))\n+        self.section.append(Setting('minimum_clone_tokens', 40))","author":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4","name":"Pareksha Manchanda"},"reactions":[],"createdAt":"2018-06-20T15:23:35Z","lastEditedAt":null,"updatedAt":"2018-06-20T15:23:35Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5Njk0MTQxNA==","url":"https://github.com/coala/coala/pull/5492#discussion_r196941414","bodyText":"Consider \"Specify aspects to use instead of the default bear settings where there is some ambiguity.","diffHunk":"@@ -49,3 +49,51 @@ def _new_func(self, *args, **kwargs):\n         return _new_func\n \n     return _func_decorator\n+\n+\n+def map_ambiguous_setting_to_aspect(**aspectable_setting):\n+    \"\"\"\n+    Map those bear settings to aspects in which there is some ambiguity.","author":{"login":"jschwarzwalder","avatarUrl":"https://avatars0.githubusercontent.com/u/8946787?v=4","name":"Jami Schwarzwalder"},"reactions":[],"createdAt":"2018-06-20T21:02:22Z","lastEditedAt":null,"updatedAt":"2018-06-20T21:02:22Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5Njk0MTUzMw==","url":"https://github.com/coala/coala/pull/5492#discussion_r196941533","bodyText":"This decorator is used by Bear.run() to override the value in the bear setting with an equivalent taste as provided in the parameter.","diffHunk":"@@ -49,3 +49,51 @@ def _new_func(self, *args, **kwargs):\n         return _new_func\n \n     return _func_decorator\n+\n+\n+def map_ambiguous_setting_to_aspect(**aspectable_setting):\n+    \"\"\"\n+    Map those bear settings to aspects in which there is some ambiguity.\n+    The ambiguity is because of differing values (maybe either name or even\n+    data-types) in bear settings and their corresponding aspect tastes.\n+\n+    This decorator can be used by ``Bear.run()`` to automatically map and\n+    override value of bear settings with their equivalent taste.","author":{"login":"jschwarzwalder","avatarUrl":"https://avatars0.githubusercontent.com/u/8946787?v=4","name":"Jami Schwarzwalder"},"reactions":[],"createdAt":"2018-06-20T21:02:46Z","lastEditedAt":null,"updatedAt":"2018-06-20T21:02:46Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5Njk0MTcxNw==","url":"https://github.com/coala/coala/pull/5492#discussion_r196941717","bodyText":"The order of setting override would be clearer if the order is reversed to :\nThe order of setting override from the highest to lowest is:\nExplicit setting\nExplicit aspect/taste default (if an aspect is activated in Section)\nAspect/taste default (if an aspect is activated in Section)\nSetting default (in bear's run argument)","diffHunk":"@@ -49,3 +49,51 @@ def _new_func(self, *args, **kwargs):\n         return _new_func\n \n     return _func_decorator\n+\n+\n+def map_ambiguous_setting_to_aspect(**aspectable_setting):\n+    \"\"\"\n+    Map those bear settings to aspects in which there is some ambiguity.\n+    The ambiguity is because of differing values (maybe either name or even\n+    data-types) in bear settings and their corresponding aspect tastes.\n+\n+    This decorator can be used by ``Bear.run()`` to automatically map and\n+    override value of bear settings with their equivalent taste.\n+\n+    The order of setting override from the lowest to highest is:\n+    - Setting default (in bear's run argument)\n+    - Aspect/taste default (if aspect is activated in Section)\n+    - Explicit aspect/taste default (if aspect is activated in Section)\n+    - Explicit setting","author":{"login":"jschwarzwalder","avatarUrl":"https://avatars0.githubusercontent.com/u/8946787?v=4","name":"Jami Schwarzwalder"},"reactions":[],"createdAt":"2018-06-20T21:03:24Z","lastEditedAt":null,"updatedAt":"2018-06-20T21:03:24Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5Njk0MTg2Nw==","url":"https://github.com/coala/coala/pull/5492#discussion_r196941867","bodyText":"A dictionary in which keys are a bear settings and the corresponding value","diffHunk":"@@ -49,3 +49,51 @@ def _new_func(self, *args, **kwargs):\n         return _new_func\n \n     return _func_decorator\n+\n+\n+def map_ambiguous_setting_to_aspect(**aspectable_setting):\n+    \"\"\"\n+    Map those bear settings to aspects in which there is some ambiguity.\n+    The ambiguity is because of differing values (maybe either name or even\n+    data-types) in bear settings and their corresponding aspect tastes.\n+\n+    This decorator can be used by ``Bear.run()`` to automatically map and\n+    override value of bear settings with their equivalent taste.\n+\n+    The order of setting override from the lowest to highest is:\n+    - Setting default (in bear's run argument)\n+    - Aspect/taste default (if aspect is activated in Section)\n+    - Explicit aspect/taste default (if aspect is activated in Section)\n+    - Explicit setting\n+\n+    :param aspectable_setting:\n+        A dictionary in which keys are bear settings and corresponding value","author":{"login":"jschwarzwalder","avatarUrl":"https://avatars0.githubusercontent.com/u/8946787?v=4","name":"Jami Schwarzwalder"},"reactions":[],"createdAt":"2018-06-20T21:03:56Z","lastEditedAt":null,"updatedAt":"2018-06-20T21:03:56Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5Njk0MTk0Ng==","url":"https://github.com/coala/coala/pull/5492#discussion_r196941946","bodyText":"for each key is a tuple containing an equivalent taste as the first value and","diffHunk":"@@ -49,3 +49,51 @@ def _new_func(self, *args, **kwargs):\n         return _new_func\n \n     return _func_decorator\n+\n+\n+def map_ambiguous_setting_to_aspect(**aspectable_setting):\n+    \"\"\"\n+    Map those bear settings to aspects in which there is some ambiguity.\n+    The ambiguity is because of differing values (maybe either name or even\n+    data-types) in bear settings and their corresponding aspect tastes.\n+\n+    This decorator can be used by ``Bear.run()`` to automatically map and\n+    override value of bear settings with their equivalent taste.\n+\n+    The order of setting override from the lowest to highest is:\n+    - Setting default (in bear's run argument)\n+    - Aspect/taste default (if aspect is activated in Section)\n+    - Explicit aspect/taste default (if aspect is activated in Section)\n+    - Explicit setting\n+\n+    :param aspectable_setting:\n+        A dictionary in which keys are bear settings and corresponding value\n+        for each key is a tuple containing equivalent taste as first value and","author":{"login":"jschwarzwalder","avatarUrl":"https://avatars0.githubusercontent.com/u/8946787?v=4","name":"Jami Schwarzwalder"},"reactions":[],"createdAt":"2018-06-20T21:04:14Z","lastEditedAt":null,"updatedAt":"2018-06-20T21:04:14Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5Njk4NjEyNQ==","url":"https://github.com/coala/coala/pull/5492#discussion_r196986125","bodyText":"I don't think it's relevant to add here as ambiguity is purely because of differing values (maybe either name or even data-types) in bear settings and their corresponding aspect tastes.\nBear settings itself are not ambiguous. :)","diffHunk":"@@ -49,3 +49,51 @@ def _new_func(self, *args, **kwargs):\n         return _new_func\n \n     return _func_decorator\n+\n+\n+def map_ambiguous_setting_to_aspect(**aspectable_setting):\n+    \"\"\"\n+    Map those bear settings to aspects in which there is some ambiguity.","author":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4","name":"Pareksha Manchanda"},"reactions":[],"createdAt":"2018-06-21T01:10:45Z","lastEditedAt":null,"updatedAt":"2018-06-21T01:10:45Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM5NTk3NDg1MQ==","url":"https://github.com/coala/coala/pull/5492#issuecomment-395974851","bodyText":"tests are failing.  See Circle CI logs.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-06-09T14:46:46Z","lastEditedAt":null,"updatedAt":"2018-06-09T14:46:46Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM5NjA2Mjc0MQ==","url":"https://github.com/coala/coala/pull/5492#issuecomment-396062741","bodyText":"Spent two days looking into the failing tests, I found that tests were considering Formatting aspect as in the docstring here https://github.com/coala/coala/pull/5492/files#diff-5c296e616e678d90af0811c1971749c4L18 not the actual ones defined in Formatting.py which was the reason tests were failing with AspectNotFound error. It's a relief that I was able to detect the problem here, else it would have worried me while migrating bears.\nAs the docstring is nothing but an example to illustrate the design and structure of aspects (the concept of aspects and subaspects), so I think changing the name won't be an issue here.\nTests are passing but I am not able to reach 100% test coverage yet and I am not able to figure out why (I think I included all possibilities). Anyways, I'll see to it.","diffHunk":null,"author":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4","name":"Pareksha Manchanda"},"reactions":[],"createdAt":"2018-06-10T16:36:53Z","lastEditedAt":null,"updatedAt":"2018-06-10T16:36:53Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM5ODE4Mzc5MQ==","url":"https://github.com/coala/coala/pull/5492#issuecomment-398183791","bodyText":"@jayvdb It looks like the additions to decorators are creating the test coverage to fail.\nDoes she need to add a test to pytest for the map_ambiguous_setting_to_aspect function?\ncoalib/bearlib/aspects/decorators.py 43 0 26 2 97% 85->79, 89->79","diffHunk":null,"author":{"login":"jschwarzwalder","avatarUrl":"https://avatars0.githubusercontent.com/u/8946787?v=4","name":"Jami Schwarzwalder"},"reactions":[],"createdAt":"2018-06-18T20:24:57Z","lastEditedAt":null,"updatedAt":"2018-06-18T20:24:57Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM5ODU5NjU3Mw==","url":"https://github.com/coala/coala/pull/5492#issuecomment-398596573","bodyText":"commit message should be aspects: ..","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-06-20T01:37:23Z","lastEditedAt":null,"updatedAt":"2018-06-20T01:37:23Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM5ODc3NTM3Mg==","url":"https://github.com/coala/coala/pull/5492#issuecomment-398775372","bodyText":"I am not sure what actions are being taken here.\nIt looks like it returns a dictionary of tuples that include a string from bear and a string from a taste.\nAs the developer do I need to take an action to select the value I want as output? Or will a change be selected for me?","diffHunk":null,"author":{"login":"jschwarzwalder","avatarUrl":"https://avatars0.githubusercontent.com/u/8946787?v=4","name":"Jami Schwarzwalder"},"reactions":[],"createdAt":"2018-06-20T14:40:59Z","lastEditedAt":null,"updatedAt":"2018-06-20T14:40:59Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM5ODc5MzQ0MQ==","url":"https://github.com/coala/coala/pull/5492#issuecomment-398793441","bodyText":"@jschwarzwalder this function is to map bear setting to aspects. The aspects will be provided by the user and the linting will be done as per the provided aspect. Mapping functions make the migration of bear settings to aspects much easier. You can view the commit message and the issue description about why this mapping function was required after all.\nAnd as for the dictionary of tuples part, I have explained it in the docstring as well as the commit message, so basically in the tuple, first value is the taste setting and the second value is the bear setting. That way aspects can be mapped to bear settings easily.\nYou just have to pass the aspect and the taste value for the bear to take the action.","diffHunk":null,"author":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4","name":"Pareksha Manchanda"},"reactions":[],"createdAt":"2018-06-20T15:29:48Z","lastEditedAt":"2018-06-20T15:53:18Z","updatedAt":"2018-06-20T15:53:18Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1528555296000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5493","number":5493,"title":"Update TypeScript keywords","body":"TypeScript.py: Update TypeScript keywords\nThis fix ensures that coala discovers all TypeScript\nkeywords.\nCloses #5490\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":10,"createdAt":"2018-06-03T19:16:46Z","updatedAt":"2018-06-09T14:41:36Z","closedAt":"2018-06-09T14:41:26Z","state":"merged","user":{"login":"notemissary","avatarUrl":"https://avatars1.githubusercontent.com/u/25188402?v=4"},"owner":{"login":"notemissary","avatarUrl":"https://avatars1.githubusercontent.com/u/25188402?v=4"},"assignee":{"login":"JonathanVillordo","avatarUrl":"https://avatars0.githubusercontent.com/u/23108443?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5493","comments":[]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1528550284000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5494","number":5494,"title":"Shell: Use sys.executable in doctest","body":"... instead of python which is not availabe on Linux systems without\nhaving Python 2 installed (Python 3 is called python3 on command\nline). Now Python 2 is not necessary for the modified doctest\nto execute.","comments":7,"createdAt":"2018-06-04T21:45:58Z","updatedAt":"2018-06-09T13:18:04Z","closedAt":"2018-06-09T12:58:26Z","state":"merged","user":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"owner":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"labels":[{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5494","comments":[]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1528927533000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5496","number":5496,"title":"BaseTestHelper.py: Add `BaseTestHelper` class","body":"observed_result is result generated from a bear and expected_result is tester's expected result from the bears.\nRelated to https://gitlab.com/coala/GSoC/GSoC-2018/issues/307\nCloses #3676","comments":15,"createdAt":"2018-06-05T14:24:58Z","updatedAt":"2018-06-13T22:05:33Z","closedAt":"2018-06-10T19:18:20Z","state":"merged","user":{"login":"sangamcse","avatarUrl":"https://avatars2.githubusercontent.com/u/26381717?v=4"},"owner":{"login":"sangamcse","avatarUrl":"https://avatars2.githubusercontent.com/u/26381717?v=4"},"assignee":{"login":"sangamcse","avatarUrl":"https://avatars2.githubusercontent.com/u/26381717?v=4"},"labels":[{"name":"difficulty/medium","color":"0052cc"},{"name":"size/XS","color":"00DE0F"},{"name":"status/needs design","color":"5319e7"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5496","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MzM2ODA4Mw==","url":"https://github.com/coala/coala/pull/5496#discussion_r193368083","bodyText":"for all tests Bears","diffHunk":"@@ -0,0 +1,64 @@\n+from coala_utils.Comparable import Comparable\n+\n+\n+class BaseTestHelper:\n+    \"\"\"\n+    This is a base class for all tests of coala's testing API.","author":{"login":"NiklasMM","avatarUrl":"https://avatars1.githubusercontent.com/u/1924002?v=4","name":"Niklas"},"reactions":[],"createdAt":"2018-06-06T10:47:08Z","lastEditedAt":null,"updatedAt":"2018-06-06T10:47:08Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MzU0MTU3MA==","url":"https://github.com/coala/coala/pull/5496#discussion_r193541570","bodyText":"You can write maybe like\nif not len(observed_result) == len(expected_result): This would eliminate one level of indentation atleast. There are so many nested if and for loops.","diffHunk":"@@ -0,0 +1,36 @@\n+from coala_utils.Comparable import Comparable\n+\n+\n+class BaseTestHelper:\n+    \"\"\"\n+    This is a base class for all Bears' tests of coala's testing API.\n+    \"\"\"\n+\n+    def assertComparableObjectsEqual(self, observed_result, expected_result):\n+        \"\"\"\n+        Compares individual fields of the Result object and yields messages in\n+        case of an attribute mismatch.\n+        \"\"\"\n+        if len(observed_result) == len(expected_result):\n+            messages = ''\n+            for observed, expected in zip(observed_result, expected_result):\n+                if (isinstance(observed, Comparable)\n+                        and isinstance(expected, Comparable)) \\\n+                        and (type(observed) is type(expected)):\n+                    for attribute in type(observed).__compare_fields__:\n+                        try:\n+                            assert getattr(observed, attribute) == \\\n+                                getattr(expected, attribute), \\\n+                                '{} mismatch: {}, {} != {}, {}'.format(\n+                                    attribute,\n+                                    observed.origin, observed.message,\n+                                    expected.origin, observed.message)\n+                        except AssertionError as ex:\n+                            messages += (str(ex) + '\\n\\n')\n+                else:\n+                    assert observed_result == expected_result, '%s != %s' % \\\n+                        (observed_result, expected_result)\n+            if messages:\n+                raise AssertionError(messages)\n+        else:","author":{"login":"kriti21","avatarUrl":"https://avatars3.githubusercontent.com/u/19872082?v=4","name":"Kriti Rohilla"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNDcxOTEzNg==","createdAt":"2018-06-06T20:54:19Z","content":"THUMBS_UP","user":{"login":"sangamcse","name":"Sangam Kumar"}}],"createdAt":"2018-06-06T20:04:42Z","lastEditedAt":null,"updatedAt":"2018-06-06T20:04:42Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MzU0MTc2Nw==","url":"https://github.com/coala/coala/pull/5496#discussion_r193541767","bodyText":"I might be wrong here but line breaking using \\ is not recommended.","diffHunk":"@@ -0,0 +1,36 @@\n+from coala_utils.Comparable import Comparable\n+\n+\n+class BaseTestHelper:\n+    \"\"\"\n+    This is a base class for all Bears' tests of coala's testing API.\n+    \"\"\"\n+\n+    def assertComparableObjectsEqual(self, observed_result, expected_result):\n+        \"\"\"\n+        Compares individual fields of the Result object and yields messages in\n+        case of an attribute mismatch.\n+        \"\"\"\n+        if len(observed_result) == len(expected_result):\n+            messages = ''\n+            for observed, expected in zip(observed_result, expected_result):\n+                if (isinstance(observed, Comparable)\n+                        and isinstance(expected, Comparable)) \\","author":{"login":"kriti21","avatarUrl":"https://avatars3.githubusercontent.com/u/19872082?v=4","name":"Kriti Rohilla"},"reactions":[],"createdAt":"2018-06-06T20:05:23Z","lastEditedAt":null,"updatedAt":"2018-06-06T20:05:23Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MzU0NTMxNg==","url":"https://github.com/coala/coala/pull/5496#discussion_r193545316","bodyText":"That gives syntax error","diffHunk":"@@ -0,0 +1,36 @@\n+from coala_utils.Comparable import Comparable\n+\n+\n+class BaseTestHelper:\n+    \"\"\"\n+    This is a base class for all Bears' tests of coala's testing API.\n+    \"\"\"\n+\n+    def assertComparableObjectsEqual(self, observed_result, expected_result):\n+        \"\"\"\n+        Compares individual fields of the Result object and yields messages in\n+        case of an attribute mismatch.\n+        \"\"\"\n+        if len(observed_result) == len(expected_result):\n+            messages = ''\n+            for observed, expected in zip(observed_result, expected_result):\n+                if (isinstance(observed, Comparable)\n+                        and isinstance(expected, Comparable)) \\","author":{"login":"sangamcse","avatarUrl":"https://avatars2.githubusercontent.com/u/26381717?v=4","name":"Sangam Kumar"},"reactions":[],"createdAt":"2018-06-06T20:18:34Z","lastEditedAt":null,"updatedAt":"2018-06-06T20:18:34Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MzYyODU5Ng==","url":"https://github.com/coala/coala/pull/5496#discussion_r193628596","bodyText":"please no \\ , maintainer will pick this part 😛","diffHunk":"@@ -0,0 +1,41 @@\n+from coala_utils.Comparable import Comparable\n+\n+\n+class BaseTestHelper:\n+    \"\"\"\n+    This is a base class for all Bears' tests of coala's testing API.\n+    \"\"\"\n+\n+    def assertComparableObjectsEqual(self, observed_result, expected_result):\n+        \"\"\"\n+        Compares individual fields of the Result object and yields messages in\n+        case of an attribute mismatch.\n+\n+        :param observed_result: The observed result from a bear\n+        :param expected_result: The expected result from a bear\n+        \"\"\"\n+        if not len(observed_result) == len(expected_result):\n+            assert observed_result == expected_result, '%s != %s' % (\n+                observed_result, expected_result)\n+\n+        messages = ''\n+        for observed, expected in zip(observed_result, expected_result):\n+            if (isinstance(observed, Comparable) and\n+                isinstance(expected, Comparable)) and (type(observed) is\n+                                                       type(expected)):\n+                for attribute in type(observed).__compare_fields__:\n+                    try:\n+                        assert getattr(observed, attribute) == getattr(\n+                            expected, attribute), \\","author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"reactions":[],"createdAt":"2018-06-07T05:23:53Z","lastEditedAt":null,"updatedAt":"2018-06-07T05:23:53Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MzYyODcwMA==","url":"https://github.com/coala/coala/pull/5496#discussion_r193628700","bodyText":"same ;)","diffHunk":"@@ -0,0 +1,32 @@\n+import pytest\n+\n+from coalib.results.Result import Result\n+from coalib.testing.BaseTestHelper import BaseTestHelper\n+\n+\n+@pytest.mark.testthis\n+class BaseTestHelperTest(BaseTestHelper):\n+    def test_good_assertComparableObjectsEqual(self):\n+        self.assertComparableObjectsEqual(['a', 'b'], ['a', 'b'])\n+\n+    def test_inequality_assertComparableObjectsEqual(self):\n+        with pytest.raises(AssertionError) as ex:\n+            self.assertComparableObjectsEqual(['a', 'b'], ['a', 'b', None])\n+        assert '[\\'a\\', \\'b\\'] != [\\'a\\', \\'b\\', None]' in str(ex.value)\n+\n+    def test_not_comparable_assertComparableObjectsEqual(self):\n+        with pytest.raises(AssertionError) as ex:\n+            self.assertComparableObjectsEqual(['a', 'b'], ['a', 'c'])\n+        assert '[\\'a\\', \\'b\\'] != [\\'a\\', \\'c\\']' in str(ex.value)\n+\n+    def test_comparable_assertComparableObjectsEqual(self):\n+        expected = [Result.from_values(origin='AnyBea',\n+                                       message='This file has 2 lines.',\n+                                       file='anyfile')]\n+        observed = [Result.from_values(origin='AnyBear',\n+                                       message='This file has 2 lines.',\n+                                       file='anyfile')]\n+        with pytest.raises(AssertionError) as ex:\n+            self.assertComparableObjectsEqual(expected, observed)\n+        assert 'origin mismatch: AnyBea, This file has 2 lines. != AnyBear, ' \\","author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"reactions":[],"createdAt":"2018-06-07T05:24:38Z","lastEditedAt":null,"updatedAt":"2018-06-07T05:24:38Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MzgyMzk2Mw==","url":"https://github.com/coala/coala/pull/5496#discussion_r193823963","bodyText":"Perhaps you could use snake case for the method name, to ensure consistency. assert_comparable_objects_equal","diffHunk":"@@ -0,0 +1,41 @@\n+from coala_utils.Comparable import Comparable\n+\n+\n+class BaseTestHelper:\n+    \"\"\"\n+    This is a base class for all Bears' tests of coala's testing API.\n+    \"\"\"\n+\n+    def assertComparableObjectsEqual(self, observed_result, expected_result):","author":{"login":"IpshitaC","avatarUrl":"https://avatars0.githubusercontent.com/u/18362353?v=4","name":"Ipshita Chatterjee"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNDc3NDk5OA==","createdAt":"2018-06-07T17:54:23Z","content":"CONFUSED","user":{"login":"RaiVaibhav","name":"Vaibhav Rai"}}],"createdAt":"2018-06-07T17:10:45Z","lastEditedAt":null,"updatedAt":"2018-06-07T17:10:45Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MzgyNDE1OQ==","url":"https://github.com/coala/coala/pull/5496#discussion_r193824159","bodyText":"A uniform case would be a lot better. test_good_assert_comparable_objects_equal","diffHunk":"@@ -0,0 +1,31 @@\n+import pytest\n+\n+from coalib.results.Result import Result\n+from coalib.testing.BaseTestHelper import BaseTestHelper\n+\n+\n+class BaseTestHelperTest(BaseTestHelper):\n+    def test_good_assertComparableObjectsEqual(self):","author":{"login":"IpshitaC","avatarUrl":"https://avatars0.githubusercontent.com/u/18362353?v=4","name":"Ipshita Chatterjee"},"reactions":[],"createdAt":"2018-06-07T17:11:33Z","lastEditedAt":null,"updatedAt":"2018-06-07T17:11:33Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MzgyNDM4NA==","url":"https://github.com/coala/coala/pull/5496#discussion_r193824384","bodyText":"Change to result objects","diffHunk":"@@ -0,0 +1,41 @@\n+from coala_utils.Comparable import Comparable\n+\n+\n+class BaseTestHelper:\n+    \"\"\"\n+    This is a base class for all Bears' tests of coala's testing API.\n+    \"\"\"\n+\n+    def assertComparableObjectsEqual(self, observed_result, expected_result):\n+        \"\"\"\n+        Compares individual fields of the Result object and yields messages in","author":{"login":"IpshitaC","avatarUrl":"https://avatars0.githubusercontent.com/u/18362353?v=4","name":"Ipshita Chatterjee"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNDc3NDg1OQ==","createdAt":"2018-06-07T17:51:59Z","content":"THUMBS_UP","user":{"login":"sangamcse","name":"Sangam Kumar"}}],"createdAt":"2018-06-07T17:12:27Z","lastEditedAt":null,"updatedAt":"2018-06-07T17:12:27Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MzgyNDY1OA==","url":"https://github.com/coala/coala/pull/5496#discussion_r193824658","bodyText":"Same. A uniform snake case for this method name would be a lot better","diffHunk":"@@ -0,0 +1,31 @@\n+import pytest\n+\n+from coalib.results.Result import Result\n+from coalib.testing.BaseTestHelper import BaseTestHelper\n+\n+\n+class BaseTestHelperTest(BaseTestHelper):\n+    def test_good_assertComparableObjectsEqual(self):\n+        self.assertComparableObjectsEqual(['a', 'b'], ['a', 'b'])\n+\n+    def test_inequality_assertComparableObjectsEqual(self):","author":{"login":"IpshitaC","avatarUrl":"https://avatars0.githubusercontent.com/u/18362353?v=4","name":"Ipshita Chatterjee"},"reactions":[],"createdAt":"2018-06-07T17:13:24Z","lastEditedAt":null,"updatedAt":"2018-06-07T17:13:24Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MzgyNDg3MQ==","url":"https://github.com/coala/coala/pull/5496#discussion_r193824871","bodyText":"Same here. Case of the method name","diffHunk":"@@ -0,0 +1,31 @@\n+import pytest\n+\n+from coalib.results.Result import Result\n+from coalib.testing.BaseTestHelper import BaseTestHelper\n+\n+\n+class BaseTestHelperTest(BaseTestHelper):\n+    def test_good_assertComparableObjectsEqual(self):\n+        self.assertComparableObjectsEqual(['a', 'b'], ['a', 'b'])\n+\n+    def test_inequality_assertComparableObjectsEqual(self):\n+        with pytest.raises(AssertionError) as ex:\n+            self.assertComparableObjectsEqual(['a', 'b'], ['a', 'b', None])\n+        assert '[\\'a\\', \\'b\\'] != [\\'a\\', \\'b\\', None]' in str(ex.value)\n+\n+    def test_not_comparable_assertComparableObjectsEqual(self):","author":{"login":"IpshitaC","avatarUrl":"https://avatars0.githubusercontent.com/u/18362353?v=4","name":"Ipshita Chatterjee"},"reactions":[],"createdAt":"2018-06-07T17:14:04Z","lastEditedAt":null,"updatedAt":"2018-06-07T17:14:04Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MzgyNTMwMA==","url":"https://github.com/coala/coala/pull/5496#discussion_r193825300","bodyText":"Here too","diffHunk":"@@ -0,0 +1,31 @@\n+import pytest\n+\n+from coalib.results.Result import Result\n+from coalib.testing.BaseTestHelper import BaseTestHelper\n+\n+\n+class BaseTestHelperTest(BaseTestHelper):\n+    def test_good_assertComparableObjectsEqual(self):\n+        self.assertComparableObjectsEqual(['a', 'b'], ['a', 'b'])\n+\n+    def test_inequality_assertComparableObjectsEqual(self):\n+        with pytest.raises(AssertionError) as ex:\n+            self.assertComparableObjectsEqual(['a', 'b'], ['a', 'b', None])\n+        assert '[\\'a\\', \\'b\\'] != [\\'a\\', \\'b\\', None]' in str(ex.value)\n+\n+    def test_not_comparable_assertComparableObjectsEqual(self):\n+        with pytest.raises(AssertionError) as ex:\n+            self.assertComparableObjectsEqual(['a', 'b'], ['a', 'c'])\n+        assert '[\\'a\\', \\'b\\'] != [\\'a\\', \\'c\\']' in str(ex.value)\n+\n+    def test_comparable_assertComparableObjectsEqual(self):","author":{"login":"IpshitaC","avatarUrl":"https://avatars0.githubusercontent.com/u/18362353?v=4","name":"Ipshita Chatterjee"},"reactions":[],"createdAt":"2018-06-07T17:15:45Z","lastEditedAt":null,"updatedAt":"2018-06-07T17:15:45Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MzgyNjQ2MA==","url":"https://github.com/coala/coala/pull/5496#discussion_r193826460","bodyText":"The method name sounds a bit complicated. Is there some way it can be made a bit more intuitive perhaps?","diffHunk":"@@ -0,0 +1,41 @@\n+from coala_utils.Comparable import Comparable\n+\n+\n+class BaseTestHelper:\n+    \"\"\"\n+    This is a base class for all Bears' tests of coala's testing API.\n+    \"\"\"\n+\n+    def assertComparableObjectsEqual(self, observed_result, expected_result):","author":{"login":"IpshitaC","avatarUrl":"https://avatars0.githubusercontent.com/u/18362353?v=4","name":"Ipshita Chatterjee"},"reactions":[],"createdAt":"2018-06-07T17:19:59Z","lastEditedAt":null,"updatedAt":"2018-06-07T17:19:59Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MzgzNTQ2MQ==","url":"https://github.com/coala/coala/pull/5496#discussion_r193835461","bodyText":"I just gone through the yash Nishar commit of assertComparableObjectsEqual and I didn't find any review by John or Makman on name casing, btw for me assertComparableObjectsEqual is ok here.\nSorry for nitpicking the comment 😛","diffHunk":"@@ -0,0 +1,41 @@\n+from coala_utils.Comparable import Comparable\n+\n+\n+class BaseTestHelper:\n+    \"\"\"\n+    This is a base class for all Bears' tests of coala's testing API.\n+    \"\"\"\n+\n+    def assertComparableObjectsEqual(self, observed_result, expected_result):","author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"reactions":[],"createdAt":"2018-06-07T17:50:40Z","lastEditedAt":null,"updatedAt":"2018-06-07T17:50:40Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MzgzNjQwOA==","url":"https://github.com/coala/coala/pull/5496#discussion_r193836408","bodyText":"same for me it should be test_good_assertComparableObjectsEqual as IMO assertComparableObjectsEqual is a method name which together means something ;)","diffHunk":"@@ -0,0 +1,31 @@\n+import pytest\n+\n+from coalib.results.Result import Result\n+from coalib.testing.BaseTestHelper import BaseTestHelper\n+\n+\n+class BaseTestHelperTest(BaseTestHelper):\n+    def test_good_assertComparableObjectsEqual(self):","author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"reactions":[],"createdAt":"2018-06-07T17:53:50Z","lastEditedAt":"2018-06-07T17:54:01Z","updatedAt":"2018-06-07T17:54:01Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MzgzNzMzNg==","url":"https://github.com/coala/coala/pull/5496#discussion_r193837336","bodyText":"@RaiVaibhav, it is not necessary to keep same thing in the base class. We can think of better method name here as you can see the previous method name is similar to unittest method name type. But in this project, we are moving towards pytest.","diffHunk":"@@ -0,0 +1,41 @@\n+from coala_utils.Comparable import Comparable\n+\n+\n+class BaseTestHelper:\n+    \"\"\"\n+    This is a base class for all Bears' tests of coala's testing API.\n+    \"\"\"\n+\n+    def assertComparableObjectsEqual(self, observed_result, expected_result):","author":{"login":"sangamcse","avatarUrl":"https://avatars2.githubusercontent.com/u/26381717?v=4","name":"Sangam Kumar"},"reactions":[],"createdAt":"2018-06-07T17:56:51Z","lastEditedAt":null,"updatedAt":"2018-06-07T17:56:51Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5Mzk4Njc0Nw==","url":"https://github.com/coala/coala/pull/5496#discussion_r193986747","bodyText":"I think this is good enough.","diffHunk":"@@ -0,0 +1,44 @@\n+from coala_utils.Comparable import Comparable\n+\n+\n+class BaseTestHelper:\n+    \"\"\"\n+    This is a base class for all Bears' tests of coala's testing API.\n+    \"\"\"\n+\n+    def assert_comparable_objects(self,\n+                                  observed_result,\n+                                  expected_result):\n+        \"\"\"\n+        Compares individual fields of the result objects and yields messages\n+        in case of an attribute mismatch.\n+\n+        :param observed_result: The observed result from a bear\n+        :param expected_result: The expected result from a bear\n+        \"\"\"\n+\n+        if not len(observed_result) == len(expected_result):\n+            assert observed_result == expected_result, '%s != %s' % (\n+                observed_result, expected_result)\n+\n+        messages = ''\n+        for observed, expected in zip(observed_result, expected_result):\n+            if (isinstance(observed, Comparable) and\n+                isinstance(expected, Comparable)) and (type(observed) is\n+                                                       type(expected)):\n+                for attribute in type(observed).__compare_fields__:\n+                    try:\n+                        assert getattr(observed, attribute) == getattr(\n+                            expected, attribute), (\n+                            '{} mismatch: {}, {} != {}, {}'.format(\n+                                attribute,\n+                                observed.origin, observed.message,\n+                                expected.origin, expected.message))\n+                    except AssertionError as ex:\n+                        messages += (str(ex) + '\\n\\n')\n+            else:\n+                assert observed_result == expected_result, '%s != %s' % (","author":{"login":"IpshitaC","avatarUrl":"https://avatars0.githubusercontent.com/u/18362353?v=4","name":"Ipshita Chatterjee"},"reactions":[],"createdAt":"2018-06-08T08:28:41Z","lastEditedAt":null,"updatedAt":"2018-06-08T08:28:41Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDIyNjg4Mw==","url":"https://github.com/coala/coala/pull/5496#discussion_r194226883","bodyText":"so no unittest style asserts any more?","diffHunk":"@@ -0,0 +1,44 @@\n+from coala_utils.Comparable import Comparable\n+\n+\n+class BaseTestHelper:\n+    \"\"\"\n+    This is a base class for all Bears' tests of coala's testing API.\n+    \"\"\"\n+\n+    def assert_comparable_objects(self,\n+                                  observed_result,\n+                                  expected_result):\n+        \"\"\"\n+        Compares individual fields of the result objects and yields messages\n+        in case of an attribute mismatch.\n+\n+        :param observed_result: The observed result from a bear\n+        :param expected_result: The expected result from a bear\n+        \"\"\"\n+\n+        if not len(observed_result) == len(expected_result):\n+            assert observed_result == expected_result, '%s != %s' % (\n+                observed_result, expected_result)\n+\n+        messages = ''\n+        for observed, expected in zip(observed_result, expected_result):\n+            if (isinstance(observed, Comparable) and\n+                isinstance(expected, Comparable)) and (type(observed) is\n+                                                       type(expected)):\n+                for attribute in type(observed).__compare_fields__:\n+                    try:\n+                        assert getattr(observed, attribute) == getattr(\n+                            expected, attribute), (\n+                            '{} mismatch: {}, {} != {}, {}'.format(\n+                                attribute,\n+                                observed.origin, observed.message,\n+                                expected.origin, expected.message))\n+                    except AssertionError as ex:\n+                        messages += (str(ex) + '\\n\\n')\n+            else:\n+                assert observed_result == expected_result, '%s != %s' % (","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-06-09T13:11:03Z","lastEditedAt":null,"updatedAt":"2018-06-09T13:11:03Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDIzMDg1Mw==","url":"https://github.com/coala/coala/pull/5496#discussion_r194230853","bodyText":"Yes 😅","diffHunk":"@@ -0,0 +1,44 @@\n+from coala_utils.Comparable import Comparable\n+\n+\n+class BaseTestHelper:\n+    \"\"\"\n+    This is a base class for all Bears' tests of coala's testing API.\n+    \"\"\"\n+\n+    def assert_comparable_objects(self,\n+                                  observed_result,\n+                                  expected_result):\n+        \"\"\"\n+        Compares individual fields of the result objects and yields messages\n+        in case of an attribute mismatch.\n+\n+        :param observed_result: The observed result from a bear\n+        :param expected_result: The expected result from a bear\n+        \"\"\"\n+\n+        if not len(observed_result) == len(expected_result):\n+            assert observed_result == expected_result, '%s != %s' % (\n+                observed_result, expected_result)\n+\n+        messages = ''\n+        for observed, expected in zip(observed_result, expected_result):\n+            if (isinstance(observed, Comparable) and\n+                isinstance(expected, Comparable)) and (type(observed) is\n+                                                       type(expected)):\n+                for attribute in type(observed).__compare_fields__:\n+                    try:\n+                        assert getattr(observed, attribute) == getattr(\n+                            expected, attribute), (\n+                            '{} mismatch: {}, {} != {}, {}'.format(\n+                                attribute,\n+                                observed.origin, observed.message,\n+                                expected.origin, expected.message))\n+                    except AssertionError as ex:\n+                        messages += (str(ex) + '\\n\\n')\n+            else:\n+                assert observed_result == expected_result, '%s != %s' % (","author":{"login":"sangamcse","avatarUrl":"https://avatars2.githubusercontent.com/u/26381717?v=4","name":"Sangam Kumar"},"reactions":[],"createdAt":"2018-06-09T15:20:33Z","lastEditedAt":null,"updatedAt":"2018-06-09T15:20:33Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDI0MTU2OA==","url":"https://github.com/coala/coala/pull/5496#discussion_r194241568","bodyText":"'attribute mismatch' is unclear.\nIs it attribute type mismatch, or attribute value mismatch?\nWhen I read assert_comparable_objects, I assume it means it checks that the types are comparable, but does not check that they are the same.\nIf it is about the values, then the name should include they key word equals, like assertCountEqual\nHowever, by reading the code I can see that comparable here refers to coala_utils.Comparable.  That needs to be described in the docstring.\nfwiw, most of this logic should be put into Comparable.__eq__, and similar methods.\nThen the code here would simple use != , and raise asserts accordingly.","diffHunk":"@@ -0,0 +1,44 @@\n+from coala_utils.Comparable import Comparable\n+\n+\n+class BaseTestHelper:\n+    \"\"\"\n+    This is a base class for all Bears' tests of coala's testing API.\n+    \"\"\"\n+\n+    def assert_comparable_objects(self,\n+                                  observed_result,\n+                                  expected_result):\n+        \"\"\"\n+        Compares individual fields of the result objects and yields messages\n+        in case of an attribute mismatch.","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-06-09T23:47:39Z","lastEditedAt":null,"updatedAt":"2018-06-09T23:47:39Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDI2MTA0Mg==","url":"https://github.com/coala/coala/pull/5496#discussion_r194261042","bodyText":"Both 😄\n\nIs it attribute type mismatch, or attribute value mismatch?\n\nWhat if its about both?\n\nIf it is about the values, then the name should include they key word equals, like assertCountEqual\n\nI don't know much about this method. I took help from #4310\n\nfwiw, most of this logic should be put into Comparable.__eq__, and similar methods.","diffHunk":"@@ -0,0 +1,44 @@\n+from coala_utils.Comparable import Comparable\n+\n+\n+class BaseTestHelper:\n+    \"\"\"\n+    This is a base class for all Bears' tests of coala's testing API.\n+    \"\"\"\n+\n+    def assert_comparable_objects(self,\n+                                  observed_result,\n+                                  expected_result):\n+        \"\"\"\n+        Compares individual fields of the result objects and yields messages\n+        in case of an attribute mismatch.","author":{"login":"sangamcse","avatarUrl":"https://avatars2.githubusercontent.com/u/26381717?v=4","name":"Sangam Kumar"},"reactions":[],"createdAt":"2018-06-10T15:25:02Z","lastEditedAt":"2018-06-10T16:26:17Z","updatedAt":"2018-06-10T16:26:17Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM5NTA1NTE0Nw==","url":"https://github.com/coala/coala/pull/5496#issuecomment-395055147","bodyText":"Updated:\n\nDocs on line 6.\nRemoved setUp, tearDown, setUpClass and tearDownClass.\n\ncc @NiklasMM","diffHunk":null,"author":{"login":"sangamcse","avatarUrl":"https://avatars2.githubusercontent.com/u/26381717?v=4","name":"Sangam Kumar"},"reactions":[],"createdAt":"2018-06-06T12:44:20Z","lastEditedAt":null,"updatedAt":"2018-06-06T12:44:20Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM5NTUxMTY4Ng==","url":"https://github.com/coala/coala/pull/5496#issuecomment-395511686","bodyText":"Try restarting your Travis build too\n\nRebuilding will mot help IMO it's failing on whole coala/coala repo","diffHunk":null,"author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"reactions":[],"createdAt":"2018-06-07T18:02:01Z","lastEditedAt":"2018-06-07T18:02:11Z","updatedAt":"2018-06-07T18:02:11Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM5NTUzMTQ3Mg==","url":"https://github.com/coala/coala/pull/5496#issuecomment-395531472","bodyText":"Ok, 👍\n\n…\nOn Thu, 7 Jun 2018, 11:26 p.m. Sangam Kumar, ***@***.***> wrote:\n ***@***.**** commented on this pull request.\n ------------------------------\n\n In coalib/testing/BaseTestHelper.py\n <#5496 (comment)>:\n\n > @@ -0,0 +1,41 @@\n +from coala_utils.Comparable import Comparable\n +\n +\n +class BaseTestHelper:\n +    \"\"\"\n +    This is a base class for all Bears' tests of coala's testing API.\n +    \"\"\"\n +\n +    def assertComparableObjectsEqual(self, observed_result, expected_result):\n\n @RaiVaibhav <https://github.com/RaiVaibhav>, it is not necessary to keep\n same thing in the base class. We can think of better method name here as\n you can see the previous method name is similar to unittest method name\n type. But in this project, we are moving towards pytest.\n\n —\n You are receiving this because you were mentioned.\n Reply to this email directly, view it on GitHub\n <#5496 (comment)>, or mute\n the thread\n <https://github.com/notifications/unsubscribe-auth/AVPxJlchCvT1VEfLbw_Q206SnA2I108vks5t6WlmgaJpZM4Ua7p3>\n .","diffHunk":null,"author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"reactions":[],"createdAt":"2018-06-07T19:07:36Z","lastEditedAt":null,"updatedAt":"2018-06-07T19:07:36Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM5NTY3MzMxNA==","url":"https://github.com/coala/coala/pull/5496#issuecomment-395673314","bodyText":"@IpshitaC, @NiklasMM, Changes in this push:\n\nMade snake case for method name\nChanged Result object to result objects","diffHunk":null,"author":{"login":"sangamcse","avatarUrl":"https://avatars2.githubusercontent.com/u/26381717?v=4","name":"Sangam Kumar"},"reactions":[],"createdAt":"2018-06-08T07:24:44Z","lastEditedAt":null,"updatedAt":"2018-06-08T07:24:44Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1529172904000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5498","number":5498,"title":"Add Directory class","body":"Directory class will act as an interface\nto directories providing useful information\nabout them. The objects of this class can be\nused by bears that operate only on directories\nand perform analysis based on the things like\ndirectory structure\nCloses #4999\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":5,"createdAt":"2018-06-07T07:29:10Z","updatedAt":"2018-06-16T18:15:04Z","closedAt":"2018-06-16T17:59:43Z","state":"merged","user":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4"},"owner":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4"},"labels":[{"name":"area/core","color":"eb6420"},{"name":"difficulty/high","color":"B319e7"},{"name":"process/approved","color":"009800"},{"name":"size/S","color":"B1CF0A"},{"name":"status/needs design","color":"5319e7"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5498","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5Mzg4MjM3MQ==","url":"https://github.com/coala/coala/pull/5498#discussion_r193882371","bodyText":"children = [e for e in relative_recursive_glob(self._path, '**')]\nreturn children[1:]\n\nOr may be just:\nreturn [e for e in relative_recursive_glob(self._path, '**')][1:]","diffHunk":"@@ -0,0 +1,28 @@\n+import os\n+\n+from coalib.parsing.Globbing import relative_recursive_glob\n+from coala_utils.decorators import generate_eq\n+\n+\n+@generate_eq('path')\n+class Directory:\n+    def __init__(self, path):\n+        self._path = os.path.abspath(path)\n+        self._parent = os.path.abspath(os.path.dirname(self._path))\n+\n+    def children(self):\n+        elements = relative_recursive_glob(self._path, '**')\n+        children = []\n+\n+        for e in elements:\n+            children.append(e)\n+\n+        return children[1:]\n+","author":{"login":"shreyans800755","avatarUrl":"https://avatars2.githubusercontent.com/u/3727351?v=4","name":"Shreyans"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNDg1NDU2Ng==","createdAt":"2018-06-09T12:13:12Z","content":"THUMBS_UP","user":{"login":"Makman2","name":"Mischa Krüger"}}],"createdAt":"2018-06-07T20:40:14Z","lastEditedAt":null,"updatedAt":"2018-06-07T20:40:14Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDIyNTE4MQ==","url":"https://github.com/coala/coala/pull/5498#discussion_r194225181","bodyText":"can't we use os.listdir? I assume that's way faster because it's not evaluating globs^^","diffHunk":"@@ -0,0 +1,28 @@\n+import os\n+\n+from coalib.parsing.Globbing import relative_recursive_glob\n+from coala_utils.decorators import generate_eq\n+\n+\n+@generate_eq('path')\n+class Directory:\n+    def __init__(self, path):\n+        self._path = os.path.abspath(path)\n+        self._parent = os.path.abspath(os.path.dirname(self._path))\n+\n+    def children(self):\n+        elements = relative_recursive_glob(self._path, '**')","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-06-09T12:12:55Z","lastEditedAt":null,"updatedAt":"2018-06-09T12:12:55Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDIyNTIxNA==","url":"https://github.com/coala/coala/pull/5498#discussion_r194225214","bodyText":"Is it possible to maybe add a timestamp here as well? Since Directorys will be cached too.","diffHunk":"@@ -0,0 +1,28 @@\n+import os\n+\n+from coalib.parsing.Globbing import relative_recursive_glob\n+from coala_utils.decorators import generate_eq\n+\n+\n+@generate_eq('path')\n+class Directory:\n+    def __init__(self, path):\n+        self._path = os.path.abspath(path)\n+        self._parent = os.path.abspath(os.path.dirname(self._path))","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-06-09T12:13:53Z","lastEditedAt":null,"updatedAt":"2018-06-09T12:13:53Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDIyNTU3Ng==","url":"https://github.com/coala/coala/pull/5498#discussion_r194225576","bodyText":"Sure will add it in the next push 👍","diffHunk":"@@ -0,0 +1,28 @@\n+import os\n+\n+from coalib.parsing.Globbing import relative_recursive_glob\n+from coala_utils.decorators import generate_eq\n+\n+\n+@generate_eq('path')\n+class Directory:\n+    def __init__(self, path):\n+        self._path = os.path.abspath(path)\n+        self._parent = os.path.abspath(os.path.dirname(self._path))","author":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4","name":"Palash Nigam"},"reactions":[],"createdAt":"2018-06-09T12:26:00Z","lastEditedAt":null,"updatedAt":"2018-06-09T12:26:00Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDI1NTE1MQ==","url":"https://github.com/coala/coala/pull/5498#discussion_r194255151","bodyText":"os.listdir only gives us the children contained in the parent directories and does not go down into the sub directories.\nSince the directory caching strategy is not clear I'm not sure whether to get all the children recursively or just the ones one level down the parent.\nWhat do you think? Should I still change it to listdir or keep the current code as it is or have two different methods one recursive and one non-recursive?","diffHunk":"@@ -0,0 +1,28 @@\n+import os\n+\n+from coalib.parsing.Globbing import relative_recursive_glob\n+from coala_utils.decorators import generate_eq\n+\n+\n+@generate_eq('path')\n+class Directory:\n+    def __init__(self, path):\n+        self._path = os.path.abspath(path)\n+        self._parent = os.path.abspath(os.path.dirname(self._path))\n+\n+    def children(self):\n+        elements = relative_recursive_glob(self._path, '**')","author":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4","name":"Palash Nigam"},"reactions":[],"createdAt":"2018-06-10T12:07:21Z","lastEditedAt":null,"updatedAt":"2018-06-10T12:07:21Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDI2OTIwNw==","url":"https://github.com/coala/coala/pull/5498#discussion_r194269207","bodyText":"Ahh you recurse. Definitely make it top-level only right now, always recursing into subdirs is a performance penalty. I'm not sure how much our globbing is caching directory contents, but I wouldn't rely on that^^","diffHunk":"@@ -0,0 +1,28 @@\n+import os\n+\n+from coalib.parsing.Globbing import relative_recursive_glob\n+from coala_utils.decorators import generate_eq\n+\n+\n+@generate_eq('path')\n+class Directory:\n+    def __init__(self, path):\n+        self._path = os.path.abspath(path)\n+        self._parent = os.path.abspath(os.path.dirname(self._path))\n+\n+    def children(self):\n+        elements = relative_recursive_glob(self._path, '**')","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-06-10T20:20:45Z","lastEditedAt":null,"updatedAt":"2018-06-10T20:20:45Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDI2OTI5MQ==","url":"https://github.com/coala/coala/pull/5498#discussion_r194269291","bodyText":"So yeah I would then do two different methods, but not sure if we should support children being searched recursively. Your choice to keep it.","diffHunk":"@@ -0,0 +1,28 @@\n+import os\n+\n+from coalib.parsing.Globbing import relative_recursive_glob\n+from coala_utils.decorators import generate_eq\n+\n+\n+@generate_eq('path')\n+class Directory:\n+    def __init__(self, path):\n+        self._path = os.path.abspath(path)\n+        self._parent = os.path.abspath(os.path.dirname(self._path))\n+\n+    def children(self):\n+        elements = relative_recursive_glob(self._path, '**')","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-06-10T20:23:33Z","lastEditedAt":null,"updatedAt":"2018-06-10T20:23:33Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDI2OTM2NQ==","url":"https://github.com/coala/coala/pull/5498#discussion_r194269365","bodyText":"will add it for now and if we don't need it after phase 2 then we can depracate it","diffHunk":"@@ -0,0 +1,28 @@\n+import os\n+\n+from coalib.parsing.Globbing import relative_recursive_glob\n+from coala_utils.decorators import generate_eq\n+\n+\n+@generate_eq('path')\n+class Directory:\n+    def __init__(self, path):\n+        self._path = os.path.abspath(path)\n+        self._parent = os.path.abspath(os.path.dirname(self._path))\n+\n+    def children(self):\n+        elements = relative_recursive_glob(self._path, '**')","author":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4","name":"Palash Nigam"},"reactions":[],"createdAt":"2018-06-10T20:25:42Z","lastEditedAt":null,"updatedAt":"2018-06-10T20:25:42Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDg4MTkwMg==","url":"https://github.com/coala/coala/pull/5498#discussion_r194881902","bodyText":"-->\nlist(relative_recursive_glob(self._path, '**'))[1:]\nwhen we are on it, we can again use a tuple ;)","diffHunk":"@@ -0,0 +1,89 @@\n+import os\n+\n+from coalib.parsing.Globbing import relative_recursive_glob\n+from coala_utils.decorators import generate_eq\n+\n+\n+@generate_eq('path', 'timestamp')\n+class Directory:\n+    \"\"\"\n+    The `Directory` class acts as an interface to directories and\n+    provides useful information about them such as:\n+\n+        * The directory path.\n+        * The parent directory path.\n+        * The last modified timestamp of the directory.\n+        * The number of children contained inside a directory.\n+\n+    >>> import os\n+    >>> d = Directory('tests/io/DirectoryTestDir/')\n+\n+    Get the number of files and sub-directories at the top level:\n+\n+    >>> len(d.get_children())\n+    3\n+\n+    Get the number of all the files and sub-directories recursively:\n+    >>> len(d.get_children_recursively())\n+    5\n+\n+    Get the path of the `Directory` object:\n+\n+    >>> os.path.relpath(d.path).endswith('DirectoryTestDir')\n+    True\n+\n+    Get the parent directory:\n+\n+    >>> os.path.relpath(d.parent).endswith('io')\n+    True\n+\n+    Get the last modified timestamp of the directory:\n+\n+    >>> d.timestamp == os.path.getmtime(d.path)\n+    True\n+    \"\"\"\n+\n+    def __init__(self, path):\n+        self._path = os.path.abspath(path)\n+        self._parent = os.path.abspath(os.path.dirname(self._path))\n+        self._timestamp = os.path.getmtime(self._path)\n+\n+    def get_children(self):\n+        \"\"\"\n+        :return:\n+            A list of all the files and sub-directories cotained at the\n+            top level of the directory.\n+        \"\"\"\n+        return os.listdir(self._path)\n+\n+    def get_children_recursively(self):\n+        \"\"\"\n+        :return:\n+            A list of all the files and sub-directories contained\n+            inside a directory.\n+        \"\"\"\n+        return [e for e in relative_recursive_glob(self._path, '**')][1:]","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNDk5MTkwOA==","createdAt":"2018-06-12T21:17:24Z","content":"THUMBS_UP","user":{"login":"palash25","name":"Palash Nigam"}}],"createdAt":"2018-06-12T20:43:01Z","lastEditedAt":null,"updatedAt":"2018-06-12T20:43:01Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDg4MjAxMw==","url":"https://github.com/coala/coala/pull/5498#discussion_r194882013","bodyText":"What is actually [1:] for? Is the first element something like .. or the directory itself?","diffHunk":"@@ -0,0 +1,89 @@\n+import os\n+\n+from coalib.parsing.Globbing import relative_recursive_glob\n+from coala_utils.decorators import generate_eq\n+\n+\n+@generate_eq('path', 'timestamp')\n+class Directory:\n+    \"\"\"\n+    The `Directory` class acts as an interface to directories and\n+    provides useful information about them such as:\n+\n+        * The directory path.\n+        * The parent directory path.\n+        * The last modified timestamp of the directory.\n+        * The number of children contained inside a directory.\n+\n+    >>> import os\n+    >>> d = Directory('tests/io/DirectoryTestDir/')\n+\n+    Get the number of files and sub-directories at the top level:\n+\n+    >>> len(d.get_children())\n+    3\n+\n+    Get the number of all the files and sub-directories recursively:\n+    >>> len(d.get_children_recursively())\n+    5\n+\n+    Get the path of the `Directory` object:\n+\n+    >>> os.path.relpath(d.path).endswith('DirectoryTestDir')\n+    True\n+\n+    Get the parent directory:\n+\n+    >>> os.path.relpath(d.parent).endswith('io')\n+    True\n+\n+    Get the last modified timestamp of the directory:\n+\n+    >>> d.timestamp == os.path.getmtime(d.path)\n+    True\n+    \"\"\"\n+\n+    def __init__(self, path):\n+        self._path = os.path.abspath(path)\n+        self._parent = os.path.abspath(os.path.dirname(self._path))\n+        self._timestamp = os.path.getmtime(self._path)\n+\n+    def get_children(self):\n+        \"\"\"\n+        :return:\n+            A list of all the files and sub-directories cotained at the\n+            top level of the directory.\n+        \"\"\"\n+        return os.listdir(self._path)\n+\n+    def get_children_recursively(self):\n+        \"\"\"\n+        :return:\n+            A list of all the files and sub-directories contained\n+            inside a directory.\n+        \"\"\"\n+        return [e for e in relative_recursive_glob(self._path, '**')][1:]","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-06-12T20:43:29Z","lastEditedAt":null,"updatedAt":"2018-06-12T20:43:29Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDg4MjgwMA==","url":"https://github.com/coala/coala/pull/5498#discussion_r194882800","bodyText":"double backticks, it's RST ;)","diffHunk":"@@ -0,0 +1,89 @@\n+import os\n+\n+from coalib.parsing.Globbing import relative_recursive_glob\n+from coala_utils.decorators import generate_eq\n+\n+\n+@generate_eq('path', 'timestamp')\n+class Directory:\n+    \"\"\"\n+    The `Directory` class acts as an interface to directories and","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNDk5MTg4Mw==","createdAt":"2018-06-12T21:16:55Z","content":"THUMBS_UP","user":{"login":"palash25","name":"Palash Nigam"}}],"createdAt":"2018-06-12T20:45:51Z","lastEditedAt":null,"updatedAt":"2018-06-12T20:45:51Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDg4MzE1MQ==","url":"https://github.com/coala/coala/pull/5498#discussion_r194883151","bodyText":"Not just the number, the children itself ;)\n--> \"The children contained inside a the directory\"","diffHunk":"@@ -0,0 +1,89 @@\n+import os\n+\n+from coalib.parsing.Globbing import relative_recursive_glob\n+from coala_utils.decorators import generate_eq\n+\n+\n+@generate_eq('path', 'timestamp')\n+class Directory:\n+    \"\"\"\n+    The `Directory` class acts as an interface to directories and\n+    provides useful information about them such as:\n+\n+        * The directory path.\n+        * The parent directory path.\n+        * The last modified timestamp of the directory.\n+        * The number of children contained inside a directory.","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNDk5MTkzMA==","createdAt":"2018-06-12T21:17:42Z","content":"THUMBS_UP","user":{"login":"palash25","name":"Palash Nigam"}}],"createdAt":"2018-06-12T20:47:04Z","lastEditedAt":null,"updatedAt":"2018-06-12T20:47:04Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDg4MzIwOA==","url":"https://github.com/coala/coala/pull/5498#discussion_r194883208","bodyText":"Again temporary files/directories? ;)","diffHunk":"@@ -0,0 +1,89 @@\n+import os\n+\n+from coalib.parsing.Globbing import relative_recursive_glob\n+from coala_utils.decorators import generate_eq\n+\n+\n+@generate_eq('path', 'timestamp')\n+class Directory:\n+    \"\"\"\n+    The `Directory` class acts as an interface to directories and\n+    provides useful information about them such as:\n+\n+        * The directory path.\n+        * The parent directory path.\n+        * The last modified timestamp of the directory.\n+        * The number of children contained inside a directory.\n+\n+    >>> import os\n+    >>> d = Directory('tests/io/DirectoryTestDir/')","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-06-12T20:47:18Z","lastEditedAt":null,"updatedAt":"2018-06-12T20:47:18Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDg4MzQ1OQ==","url":"https://github.com/coala/coala/pull/5498#discussion_r194883459","bodyText":"do you have to do relpath?","diffHunk":"@@ -0,0 +1,89 @@\n+import os\n+\n+from coalib.parsing.Globbing import relative_recursive_glob\n+from coala_utils.decorators import generate_eq\n+\n+\n+@generate_eq('path', 'timestamp')\n+class Directory:\n+    \"\"\"\n+    The `Directory` class acts as an interface to directories and\n+    provides useful information about them such as:\n+\n+        * The directory path.\n+        * The parent directory path.\n+        * The last modified timestamp of the directory.\n+        * The number of children contained inside a directory.\n+\n+    >>> import os\n+    >>> d = Directory('tests/io/DirectoryTestDir/')\n+\n+    Get the number of files and sub-directories at the top level:\n+\n+    >>> len(d.get_children())\n+    3\n+\n+    Get the number of all the files and sub-directories recursively:\n+    >>> len(d.get_children_recursively())\n+    5\n+\n+    Get the path of the `Directory` object:\n+\n+    >>> os.path.relpath(d.path).endswith('DirectoryTestDir')","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-06-12T20:48:13Z","lastEditedAt":null,"updatedAt":"2018-06-12T20:48:13Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDg4MzcyMQ==","url":"https://github.com/coala/coala/pull/5498#discussion_r194883721","bodyText":"Maybe you can use splitext or similar os.path functions to get the last file path component. You can reuse the same below 👍","diffHunk":"@@ -0,0 +1,89 @@\n+import os\n+\n+from coalib.parsing.Globbing import relative_recursive_glob\n+from coala_utils.decorators import generate_eq\n+\n+\n+@generate_eq('path', 'timestamp')\n+class Directory:\n+    \"\"\"\n+    The `Directory` class acts as an interface to directories and\n+    provides useful information about them such as:\n+\n+        * The directory path.\n+        * The parent directory path.\n+        * The last modified timestamp of the directory.\n+        * The number of children contained inside a directory.\n+\n+    >>> import os\n+    >>> d = Directory('tests/io/DirectoryTestDir/')\n+\n+    Get the number of files and sub-directories at the top level:\n+\n+    >>> len(d.get_children())\n+    3\n+\n+    Get the number of all the files and sub-directories recursively:\n+    >>> len(d.get_children_recursively())\n+    5\n+\n+    Get the path of the `Directory` object:\n+\n+    >>> os.path.relpath(d.path).endswith('DirectoryTestDir')","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-06-12T20:49:01Z","lastEditedAt":null,"updatedAt":"2018-06-12T20:49:01Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDg4NTk5MQ==","url":"https://github.com/coala/coala/pull/5498#discussion_r194885991","bodyText":"What is actually [1:] for? Is the first element something like .. or the directory itself?\n\nYep its the current directory itself","diffHunk":"@@ -0,0 +1,89 @@\n+import os\n+\n+from coalib.parsing.Globbing import relative_recursive_glob\n+from coala_utils.decorators import generate_eq\n+\n+\n+@generate_eq('path', 'timestamp')\n+class Directory:\n+    \"\"\"\n+    The `Directory` class acts as an interface to directories and\n+    provides useful information about them such as:\n+\n+        * The directory path.\n+        * The parent directory path.\n+        * The last modified timestamp of the directory.\n+        * The number of children contained inside a directory.\n+\n+    >>> import os\n+    >>> d = Directory('tests/io/DirectoryTestDir/')\n+\n+    Get the number of files and sub-directories at the top level:\n+\n+    >>> len(d.get_children())\n+    3\n+\n+    Get the number of all the files and sub-directories recursively:\n+    >>> len(d.get_children_recursively())\n+    5\n+\n+    Get the path of the `Directory` object:\n+\n+    >>> os.path.relpath(d.path).endswith('DirectoryTestDir')\n+    True\n+\n+    Get the parent directory:\n+\n+    >>> os.path.relpath(d.parent).endswith('io')\n+    True\n+\n+    Get the last modified timestamp of the directory:\n+\n+    >>> d.timestamp == os.path.getmtime(d.path)\n+    True\n+    \"\"\"\n+\n+    def __init__(self, path):\n+        self._path = os.path.abspath(path)\n+        self._parent = os.path.abspath(os.path.dirname(self._path))\n+        self._timestamp = os.path.getmtime(self._path)\n+\n+    def get_children(self):\n+        \"\"\"\n+        :return:\n+            A list of all the files and sub-directories cotained at the\n+            top level of the directory.\n+        \"\"\"\n+        return os.listdir(self._path)\n+\n+    def get_children_recursively(self):\n+        \"\"\"\n+        :return:\n+            A list of all the files and sub-directories contained\n+            inside a directory.\n+        \"\"\"\n+        return [e for e in relative_recursive_glob(self._path, '**')][1:]","author":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4","name":"Palash Nigam"},"reactions":[],"createdAt":"2018-06-12T20:55:48Z","lastEditedAt":null,"updatedAt":"2018-06-12T20:55:48Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDg4ODEyOQ==","url":"https://github.com/coala/coala/pull/5498#discussion_r194888129","bodyText":"I wanted to show the different outputs given by the get_children and get_children_recursively methods.\nI'm not sure if we can set up directories and files inside temporary  directories since they are all random. Even if we can do that using tempfile I would have to create more at least more than 2 temp files/dirs, I'm not sure if creating so many tempfiles or dirs would look good in the docstrings .\nUsing an already existing directory structure lets us avoid that and show that difference between different methods too.\nStill if you want me to change that let me know.","diffHunk":"@@ -0,0 +1,89 @@\n+import os\n+\n+from coalib.parsing.Globbing import relative_recursive_glob\n+from coala_utils.decorators import generate_eq\n+\n+\n+@generate_eq('path', 'timestamp')\n+class Directory:\n+    \"\"\"\n+    The `Directory` class acts as an interface to directories and\n+    provides useful information about them such as:\n+\n+        * The directory path.\n+        * The parent directory path.\n+        * The last modified timestamp of the directory.\n+        * The number of children contained inside a directory.\n+\n+    >>> import os\n+    >>> d = Directory('tests/io/DirectoryTestDir/')","author":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4","name":"Palash Nigam"},"reactions":[],"createdAt":"2018-06-12T21:02:48Z","lastEditedAt":null,"updatedAt":"2018-06-12T21:02:48Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDg5NDg0MA==","url":"https://github.com/coala/coala/pull/5498#discussion_r194894840","bodyText":"You can create a top-level directory, and then create inside the structure you need. But that's definitely more cumbersome. I'm also not sure if we should support executing pytest from different directories^^ Ideally yes, better than not, though makes things certainly harder.","diffHunk":"@@ -0,0 +1,89 @@\n+import os\n+\n+from coalib.parsing.Globbing import relative_recursive_glob\n+from coala_utils.decorators import generate_eq\n+\n+\n+@generate_eq('path', 'timestamp')\n+class Directory:\n+    \"\"\"\n+    The `Directory` class acts as an interface to directories and\n+    provides useful information about them such as:\n+\n+        * The directory path.\n+        * The parent directory path.\n+        * The last modified timestamp of the directory.\n+        * The number of children contained inside a directory.\n+\n+    >>> import os\n+    >>> d = Directory('tests/io/DirectoryTestDir/')","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-06-12T21:28:29Z","lastEditedAt":null,"updatedAt":"2018-06-12T21:28:29Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTI0MzU1NA==","url":"https://github.com/coala/coala/pull/5498#discussion_r195243554","bodyText":"maybe 'tests/io'","diffHunk":"@@ -0,0 +1,89 @@\n+import os\n+\n+from coalib.parsing.Globbing import relative_recursive_glob\n+from coala_utils.decorators import generate_eq\n+\n+\n+@generate_eq('path', 'timestamp')\n+class Directory:\n+    \"\"\"\n+    The ``Directory`` class acts as an interface to directories and\n+    provides useful information about them such as:\n+\n+        * The directory path.\n+        * The parent directory path.\n+        * The last modified timestamp of the directory.\n+        * The children contained inside a directory.\n+\n+    >>> import os\n+    >>> d = Directory('tests/io/DirectoryTestDir/')\n+\n+    Get the number of files and sub-directories at the top level:\n+\n+    >>> len(d.get_children())\n+    3\n+\n+    Get the number of all the files and sub-directories recursively:\n+    >>> len(d.get_children_recursively())\n+    5\n+\n+    Get the path of the ``Directory`` object:\n+\n+    >>> os.path.basename(d.path).endswith('DirectoryTestDir')\n+    True\n+\n+    Get the parent directory:\n+\n+    >>> os.path.basename(d.parent).endswith('io')","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-06-13T21:34:33Z","lastEditedAt":null,"updatedAt":"2018-06-13T21:34:33Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTI0NDk5OA==","url":"https://github.com/coala/coala/pull/5498#discussion_r195244998","bodyText":"you can use os.path.dirname for os.path.split(...)[0]","diffHunk":"@@ -0,0 +1,31 @@\n+import os\n+import unittest\n+\n+from coalib.io.Directory import Directory\n+\n+\n+class DirectoryTest(unittest.TestCase):\n+\n+    def setUp(self):\n+        self.test_dir_path = os.path.join(os.path.split(__file__)[0],","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNTA2OTczNg==","createdAt":"2018-06-14T06:01:00Z","content":"THUMBS_UP","user":{"login":"palash25","name":"Palash Nigam"}}],"createdAt":"2018-06-13T21:40:13Z","lastEditedAt":null,"updatedAt":"2018-06-13T21:40:13Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTI0NTM3Ng==","url":"https://github.com/coala/coala/pull/5498#discussion_r195245376","bodyText":"test also inequality","diffHunk":"@@ -0,0 +1,31 @@\n+import os\n+import unittest\n+\n+from coalib.io.Directory import Directory\n+\n+\n+class DirectoryTest(unittest.TestCase):\n+\n+    def setUp(self):\n+        self.test_dir_path = os.path.join(os.path.split(__file__)[0],\n+                                          'DirectoryTestDir')\n+        self.uut = Directory(self.test_dir_path)\n+\n+    def test_equal(self):\n+        self.assertEqual(self.uut, Directory(self.test_dir_path))","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-06-13T21:41:46Z","lastEditedAt":null,"updatedAt":"2018-06-13T21:41:46Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTMwOTM2OQ==","url":"https://github.com/coala/coala/pull/5498#discussion_r195309369","bodyText":"cant do that or it would fail on windows","diffHunk":"@@ -0,0 +1,89 @@\n+import os\n+\n+from coalib.parsing.Globbing import relative_recursive_glob\n+from coala_utils.decorators import generate_eq\n+\n+\n+@generate_eq('path', 'timestamp')\n+class Directory:\n+    \"\"\"\n+    The ``Directory`` class acts as an interface to directories and\n+    provides useful information about them such as:\n+\n+        * The directory path.\n+        * The parent directory path.\n+        * The last modified timestamp of the directory.\n+        * The children contained inside a directory.\n+\n+    >>> import os\n+    >>> d = Directory('tests/io/DirectoryTestDir/')\n+\n+    Get the number of files and sub-directories at the top level:\n+\n+    >>> len(d.get_children())\n+    3\n+\n+    Get the number of all the files and sub-directories recursively:\n+    >>> len(d.get_children_recursively())\n+    5\n+\n+    Get the path of the ``Directory`` object:\n+\n+    >>> os.path.basename(d.path).endswith('DirectoryTestDir')\n+    True\n+\n+    Get the parent directory:\n+\n+    >>> os.path.basename(d.parent).endswith('io')","author":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4","name":"Palash Nigam"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNTE3NTUwNw==","createdAt":"2018-06-15T23:27:03Z","content":"THUMBS_UP","user":{"login":"Makman2","name":"Mischa Krüger"}}],"createdAt":"2018-06-14T06:00:15Z","lastEditedAt":null,"updatedAt":"2018-06-14T06:00:15Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTg4NjYzNA==","url":"https://github.com/coala/coala/pull/5498#discussion_r195886634","bodyText":"you should compare it against another Directory ;)","diffHunk":"@@ -0,0 +1,34 @@\n+import os\n+import unittest\n+\n+from coalib.io.Directory import Directory\n+\n+\n+class DirectoryTest(unittest.TestCase):\n+\n+    def setUp(self):\n+        self.test_dir_path = os.path.join(os.path.dirname(__file__),\n+                                          'DirectoryTestDir')\n+        self.another_test_dir_path = os.path.join(os.path.dirname(__file__),\n+                                                  'DirectoryTestDir/Dir1')\n+        self.uut = Directory(self.test_dir_path)\n+\n+    def test_equal(self):\n+        self.assertEqual(self.uut, Directory(self.test_dir_path))\n+        self.assertNotEqual(self.uut, self.another_test_dir_path)","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-06-16T00:10:53Z","lastEditedAt":null,"updatedAt":"2018-06-16T00:10:53Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTkwNTIyNg==","url":"https://github.com/coala/coala/pull/5498#discussion_r195905226","bodyText":"-->\nos.path.join(os.path.dirname(__file__), 'DirectoryTestDir', 'Dir1')\nThe / inside the path isn't platform independent ;) Let os.path.join do the task ;)","diffHunk":"@@ -0,0 +1,34 @@\n+import os\n+import unittest\n+\n+from coalib.io.Directory import Directory\n+\n+\n+class DirectoryTest(unittest.TestCase):\n+\n+    def setUp(self):\n+        self.test_dir_path = os.path.join(os.path.dirname(__file__),\n+                                          'DirectoryTestDir')\n+        self.another_test_dir_path = os.path.join(os.path.dirname(__file__),\n+                                                  'DirectoryTestDir/Dir1')","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-06-16T15:21:10Z","lastEditedAt":null,"updatedAt":"2018-06-16T15:21:10Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM5NTM3MjA3OQ==","url":"https://github.com/coala/coala/pull/5498#issuecomment-395372079","bodyText":"Copied from @Makman2 review on my fork\n\nOne problematic point here (we can ignore for now) is the children-compliance with the files/directory glob provided in a coafile: Consider I do\n\n\nfiles = mydir, **.json\n\n\nAnd mydir contains not only json-files, our directory view shows something different than \"coala would show us\". Just you are aware, I don't know myself how to make things consistent here really, but I tend to do it like you. Maybe it's not required at all, it could be desired for bears to not filter out coafile-files from this view.\nAn example: A bear that checks a certain project structure, like a Python project having a requirements.txt or a Pipfile and Pipfile.lock. Allowing to exclude such files via files = , **.py would be very weird behaviour and also a sneaky one (nobody would think that the bear doesn't work correctly because your glob excludes such files due to not matching the file-endings).","diffHunk":null,"author":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4","name":"Palash Nigam"},"reactions":[],"createdAt":"2018-06-07T10:26:08Z","lastEditedAt":null,"updatedAt":"2018-06-07T10:26:08Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1529724218000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5500","number":5500,"title":".travis.yml: Add man page test","body":"Adds test to Travis CI to verify that man can load man page\ncorrectly.\nCloses #5321\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":13,"createdAt":"2018-06-07T09:53:04Z","updatedAt":"2018-06-23T03:23:38Z","closedAt":"2018-06-17T08:03:01Z","state":"merged","user":{"login":"nikitavbv","avatarUrl":"https://avatars1.githubusercontent.com/u/24596921?v=4"},"owner":{"login":"nikitavbv","avatarUrl":"https://avatars1.githubusercontent.com/u/24596921?v=4"},"assignee":{"login":"nikitavbv","avatarUrl":"https://avatars1.githubusercontent.com/u/24596921?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"area/install","color":"bfdadc"},{"name":"area/tests","color":"bfd4f2"},{"name":"difficulty/medium","color":"0052cc"},{"name":"importance/medium","color":"fbca04"},{"name":"process/approved","color":"009800"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5500","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MzcwOTgwOA==","url":"https://github.com/coala/coala/pull/5500#discussion_r193709808","bodyText":"for missing manpages, I see exit code 16, so this looks good.\nalternatively/additionally we could check the output for some string we know will exist if it is our manpage.\nI suggest you move this to .ci/check_man.sh (with set -e), and also get it working under Circle CI (which should be green, while Travis is red atm.","diffHunk":"@@ -84,6 +84,7 @@ script:\n     fi\n   - coala --non-interactive\n   - python setup.py docs\n+  - man $VIRTUAL_ENV/man/man1/coala.1 > /dev/null 2>&1","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-06-07T11:16:13Z","lastEditedAt":"2018-06-07T11:16:32Z","updatedAt":"2018-06-07T11:16:32Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MzkwMDY3OA==","url":"https://github.com/coala/coala/pull/5500#discussion_r193900678","bodyText":"Thank you for review!\nCircle CI test is added now, check itself moved to .ci/check_man.sh, output check added (checks if output contains https://coala.io)","diffHunk":"@@ -84,6 +84,7 @@ script:\n     fi\n   - coala --non-interactive\n   - python setup.py docs\n+  - man $VIRTUAL_ENV/man/man1/coala.1 > /dev/null 2>&1","author":{"login":"nikitavbv","avatarUrl":"https://avatars1.githubusercontent.com/u/24596921?v=4","name":"Nikita Volobuev"},"createdAt":"2018-06-07T21:55:27Z","lastEditedAt":"2018-06-07T21:56:15Z","updatedAt":"2018-06-07T21:56:15Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDIyNzAzNw==","url":"https://github.com/coala/coala/pull/5500#discussion_r194227037","bodyText":"to know it is installed correctly, the command needs to be man coala without an explicit path, or a .1 suffix.\nIf that isnt possible, I guess setting MANPATH is a bit better, but then we need to tell users to also set MANPATH, and that gets complicated when they have different OS, venvs, etc.","diffHunk":"@@ -0,0 +1,14 @@\n+#!/bin/bash\n+\n+set -e\n+\n+if [ $CIRCLECI ]; then\n+    sudo apt install man\n+    pagepath=~/.local/man/man1/coala.1\n+elif [ $TRAVIS ]; then\n+    pagepath=$VIRTUAL_ENV/man/man1/coala.1\n+else\n+    pagepath=coala\n+fi\n+\n+man $pagepath | grep \"https://coala.io\" > /dev/null 2>&1","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-06-09T13:16:37Z","lastEditedAt":null,"updatedAt":"2018-06-09T13:16:37Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDIyNzExMA==","url":"https://github.com/coala/coala/pull/5500#discussion_r194227110","bodyText":"make the script executable so you dont need to do sh ..","diffHunk":"@@ -106,6 +106,7 @@ script:\n     fi\n   - coala --non-interactive\n   - python setup.py docs\n+  - sh .ci/check_man.sh","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-06-09T13:19:25Z","lastEditedAt":null,"updatedAt":"2018-06-09T13:19:25Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDI1NTU5Nw==","url":"https://github.com/coala/coala/pull/5500#discussion_r194255597","bodyText":"Unluckily, it looks like the only option here is to set MANPATH","diffHunk":"@@ -0,0 +1,14 @@\n+#!/bin/bash\n+\n+set -e\n+\n+if [ $CIRCLECI ]; then\n+    sudo apt install man\n+    pagepath=~/.local/man/man1/coala.1\n+elif [ $TRAVIS ]; then\n+    pagepath=$VIRTUAL_ENV/man/man1/coala.1\n+else\n+    pagepath=coala\n+fi\n+\n+man $pagepath | grep \"https://coala.io\" > /dev/null 2>&1","author":{"login":"nikitavbv","avatarUrl":"https://avatars1.githubusercontent.com/u/24596921?v=4","name":"Nikita Volobuev"},"createdAt":"2018-06-10T12:23:16Z","lastEditedAt":null,"updatedAt":"2018-06-10T12:23:16Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDI1NTYwNg==","url":"https://github.com/coala/coala/pull/5500#discussion_r194255606","bodyText":"You are right. Fixed.","diffHunk":"@@ -106,6 +106,7 @@ script:\n     fi\n   - coala --non-interactive\n   - python setup.py docs\n+  - sh .ci/check_man.sh","author":{"login":"nikitavbv","avatarUrl":"https://avatars1.githubusercontent.com/u/24596921?v=4","name":"Nikita Volobuev"},"createdAt":"2018-06-10T12:23:53Z","lastEditedAt":null,"updatedAt":"2018-06-10T12:23:53Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDY5NjY5MQ==","url":"https://github.com/coala/coala/pull/5500#discussion_r194696691","bodyText":"You've verified it produces a correct manpage which can be read by man (this might even be a good addition to the real test suite, for the man page building command), but you've also verified that it can not be found by man.\nThe problem with this is that man coala does not actually work by default for users.\nWe would have to also add documentation for users to add this line somewhere in the startup scripts, or add a different line depending on how they installed coala.\nBefore adding documentation, ideally we find a better way so that it 'just works'.\nalso c.f. https://gitlab.com/coala/mobans/issues/1#note_80986917","diffHunk":"@@ -0,0 +1,12 @@\n+#!/bin/bash\n+\n+set -e\n+\n+if [ $CIRCLECI ]; then\n+    sudo apt install man\n+    export MANPATH=$MANPATH:~/.local/man","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-06-12T11:01:48Z","lastEditedAt":null,"updatedAt":"2018-06-12T11:01:48Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDc5OTEyNw==","url":"https://github.com/coala/coala/pull/5500#discussion_r194799127","bodyText":"So apparently we are using two space indents, but it isnt enforced yet.","diffHunk":"@@ -0,0 +1,12 @@\n+#!/bin/bash\n+\n+set -e\n+\n+if [ $CIRCLECI ]; then\n+    sudo apt install man\n+    export MANPATH=$MANPATH:~/.local/man","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-06-12T16:07:44Z","lastEditedAt":null,"updatedAt":"2018-06-12T16:07:44Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDgxNDYxMg==","url":"https://github.com/coala/coala/pull/5500#discussion_r194814612","bodyText":"We would have to also add documentation for users to add this line somewhere in the startup scripts, or add a different line depending on how they installed coala.\n\nActually, if virtualenv is not used then man pages are installed correctly. In case it is - then yes, users need to add directory in virtualenv to MANPATH. Do we need to create a separate issue for that? If so, I can work on adding required information to the docs.\nAlternatively, we can think of a way to add required directory to MANPATH automatically, but I don't think it is a good idea.\n\nBefore adding documentation, ideally we find a better way so that it 'just works'.\n\nUnluckily, there is no way to specify absolute paths in data_files. So, if virtualenv is used, man files are placed relatively to virtualenv root.\n\nalso c.f. https://gitlab.com/coala/mobans/issues/1#note_80986917\n\nYes, I am going to leave some short comment there as soon as Gitlab goes up again.\n\nSo apparently we are using two space indents, but it isnt enforced yet.\n\nOkay, I will change indentation now.","diffHunk":"@@ -0,0 +1,12 @@\n+#!/bin/bash\n+\n+set -e\n+\n+if [ $CIRCLECI ]; then\n+    sudo apt install man\n+    export MANPATH=$MANPATH:~/.local/man","author":{"login":"nikitavbv","avatarUrl":"https://avatars1.githubusercontent.com/u/24596921?v=4","name":"Nikita Volobuev"},"createdAt":"2018-06-12T16:56:10Z","lastEditedAt":null,"updatedAt":"2018-06-12T16:56:10Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDkzNTYwMA==","url":"https://github.com/coala/coala/pull/5500#discussion_r194935600","bodyText":"Actually, if virtualenv is not used then man pages are installed correctly.\n\nWe need a test which proves this ;-)\nPlease change the commit message to \"Related to #5321\" and we'll merge this as an interim measure, as it does show what happens with a ~/.local install and with a virtualenv install.  But we need a test of non-virtual-env, real install.\nUntil we have that verified by CI, this issue isnt completely resolved.\n\nUnluckily, there is no way to specify absolute paths in data_files.\n\nHave you looked at what they are doing in https://github.com/wkentaro/wstool/blob/68003a95c2bde7b26101a9621de814ff82a73b64/setup.py#L21 ?\nDoes it work?","diffHunk":"@@ -0,0 +1,12 @@\n+#!/bin/bash\n+\n+set -e\n+\n+if [ $CIRCLECI ]; then\n+    sudo apt install man\n+    export MANPATH=$MANPATH:~/.local/man","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-06-13T01:44:39Z","lastEditedAt":"2018-06-13T01:45:51Z","updatedAt":"2018-06-13T01:45:51Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTI0OTgzMw==","url":"https://github.com/coala/coala/pull/5500#discussion_r195249833","bodyText":"We need a test which proves this ;-)\n\nHm, I took a fresh look at this and noticed that I was wrong before. If we use /usr/share/man/man1 as data files path, then man pages are installed correctly and no changes to MANPATH are needed. So if we use that, we can remove export MANPATH=... for CircleCI, as it does not use virtualenv. There is permission problem though. If we use /usr/share/man/man1 then man page can be only installed if running as root. If not - there will be Permission denied error during pip install. To solve that we need to run the whole CI job as root (not a good solution) or to use hack like sudo chown $(whoami) -R /usr/share (which I don't like at all) to make installation possible without root access.\nAs for Travis - as I said there is no way to go outside virtualenv. If we need to install man pages correctly there, we will need to change CI job / add a separate so it does not use virtualenv.\nWhat are your thoughts on this?\n\nBut we need a test of non-virtual-env, real install.\n\nSure, as I said this can be done on CircleCI, but a bit problematic on Travis.\n\nHave you looked at what they are doing in https://github.com/wkentaro/wstool/blob/68003a95c2bde7b26101a9621de814ff82a73b64/setup.py#L21 ?\n\nYes, I have. They use /usr/share prefix for man page installation. That prefix allows to install man pages to /usr/share/man/man1. However, virtualenv users still need to add path to MANPATH.","diffHunk":"@@ -0,0 +1,12 @@\n+#!/bin/bash\n+\n+set -e\n+\n+if [ $CIRCLECI ]; then\n+    sudo apt install man\n+    export MANPATH=$MANPATH:~/.local/man","author":{"login":"nikitavbv","avatarUrl":"https://avatars1.githubusercontent.com/u/24596921?v=4","name":"Nikita Volobuev"},"createdAt":"2018-06-13T22:01:48Z","lastEditedAt":"2018-06-13T22:04:14Z","updatedAt":"2018-06-13T22:04:14Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NzYwMDkyMg==","url":"https://github.com/coala/coala/pull/5500#discussion_r197600922","bodyText":"We need a test which proves this ;-)\n\nI removed addition to $MAHPATH for CircleCI in #5558","diffHunk":"@@ -0,0 +1,12 @@\n+#!/bin/bash\n+\n+set -e\n+\n+if [ $CIRCLECI ]; then\n+    sudo apt install man\n+    export MANPATH=$MANPATH:~/.local/man","author":{"login":"nikitavbv","avatarUrl":"https://avatars1.githubusercontent.com/u/24596921?v=4","name":"Nikita Volobuev"},"createdAt":"2018-06-23T03:23:38Z","lastEditedAt":null,"updatedAt":"2018-06-23T03:23:38Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1530829369000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5502","number":5502,"title":"Debug_Bears.rst: Add Debug bears docs","body":"Related to #1101","comments":6,"createdAt":"2018-06-07T19:43:46Z","updatedAt":"2018-07-05T22:22:49Z","closedAt":"2018-07-04T12:23:00Z","state":"merged","user":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4"},"owner":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4"},"assignee":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4"},"labels":[{"name":"area/bears","color":"eb6420"},{"name":"difficulty/medium","color":"0052cc"},{"name":"importance/low","color":"70E870"},{"name":"process/approved","color":"009800"},{"name":"size/S","color":"B1CF0A"},{"name":"type/feature","color":"0052cc"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5502","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDIyNTQzMw==","url":"https://github.com/coala/coala/pull/5502#discussion_r194225433","bodyText":"Rather make a header with \"Usage\", instead of this sentence.\n+\nTypo in Debgger (please be careful with typos, you make them quite often, I don't want to fix typos all the time)","diffHunk":"@@ -0,0 +1,52 @@\n+Debug Bears\n+===========\n+\n+This document provide a brief overview of coala's Debugging Interface.\n+Debugging Interface will help user to debug the Bear code and move through\n+it using ``pdb`` Interface\n+\n+There are two way to invoke the coala's Debgger","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNDg1ODQzMg==","createdAt":"2018-06-09T16:46:35Z","content":"THUMBS_UP","user":{"login":"RaiVaibhav","name":"Vaibhav Rai"}}],"createdAt":"2018-06-09T12:21:51Z","lastEditedAt":null,"updatedAt":"2018-06-09T12:21:51Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDIyNTQ0MA==","url":"https://github.com/coala/coala/pull/5502#discussion_r194225440","bodyText":"Users. Either A user or multiple Users.","diffHunk":"@@ -0,0 +1,52 @@\n+Debug Bears\n+===========\n+\n+This document provide a brief overview of coala's Debugging Interface.\n+Debugging Interface will help user to debug the Bear code and move through\n+it using ``pdb`` Interface\n+\n+There are two way to invoke the coala's Debgger\n+\n+Command Line Interface\n+----------------------\n+\n+User can specify the bear they want to debug using ``--debug-bears`` i.e.,","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-06-09T12:22:09Z","lastEditedAt":null,"updatedAt":"2018-06-09T12:22:09Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDIyNTQ1Mw==","url":"https://github.com/coala/coala/pull/5502#discussion_r194225453","bodyText":"-->\n, i.e.","diffHunk":"@@ -0,0 +1,52 @@\n+Debug Bears\n+===========\n+\n+This document provide a brief overview of coala's Debugging Interface.\n+Debugging Interface will help user to debug the Bear code and move through\n+it using ``pdb`` Interface\n+\n+There are two way to invoke the coala's Debgger\n+\n+Command Line Interface\n+----------------------\n+\n+User can specify the bear they want to debug using ``--debug-bears`` i.e.,","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-06-09T12:22:21Z","lastEditedAt":null,"updatedAt":"2018-06-09T12:22:21Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDIyNTUxNA==","url":"https://github.com/coala/coala/pull/5502#discussion_r194225514","bodyText":"Actually I would propose you write MyBear, and give a snippet of a small and simple bear. Nobody external wants to debug our bears as they are usually quite complex.","diffHunk":"@@ -0,0 +1,52 @@\n+Debug Bears\n+===========\n+\n+This document provide a brief overview of coala's Debugging Interface.\n+Debugging Interface will help user to debug the Bear code and move through\n+it using ``pdb`` Interface\n+\n+There are two way to invoke the coala's Debgger\n+\n+Command Line Interface\n+----------------------\n+\n+User can specify the bear they want to debug using ``--debug-bears`` i.e.,\n+\n+.. code:: shell\n+\n+    $ coala -b PEP8Bear,MypyBear -f <filename> --debug-bears PEP8Bear","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNDg1Njk5MQ==","createdAt":"2018-06-09T15:06:34Z","content":"THUMBS_UP","user":{"login":"RaiVaibhav","name":"Vaibhav Rai"}}],"createdAt":"2018-06-09T12:23:56Z","lastEditedAt":null,"updatedAt":"2018-06-09T12:23:56Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDIyNTUzMg==","url":"https://github.com/coala/coala/pull/5502#discussion_r194225532","bodyText":"If bear names is are not specified for --debug-bears argument","diffHunk":"@@ -0,0 +1,52 @@\n+Debug Bears\n+===========\n+\n+This document provide a brief overview of coala's Debugging Interface.\n+Debugging Interface will help user to debug the Bear code and move through\n+it using ``pdb`` Interface\n+\n+There are two way to invoke the coala's Debgger\n+\n+Command Line Interface\n+----------------------\n+\n+User can specify the bear they want to debug using ``--debug-bears`` i.e.,\n+\n+.. code:: shell\n+\n+    $ coala -b PEP8Bear,MypyBear -f <filename> --debug-bears PEP8Bear\n+\n+If bear name is not specified in ``--debug-bears`` argument then it will by","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-06-09T12:24:39Z","lastEditedAt":null,"updatedAt":"2018-06-09T12:24:39Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDIyNTUzNg==","url":"https://github.com/coala/coala/pull/5502#discussion_r194225536","bodyText":"Don't make this bold","diffHunk":"@@ -0,0 +1,52 @@\n+Debug Bears\n+===========\n+\n+This document provide a brief overview of coala's Debugging Interface.\n+Debugging Interface will help user to debug the Bear code and move through\n+it using ``pdb`` Interface\n+\n+There are two way to invoke the coala's Debgger\n+\n+Command Line Interface\n+----------------------\n+\n+User can specify the bear they want to debug using ``--debug-bears`` i.e.,\n+\n+.. code:: shell\n+\n+    $ coala -b PEP8Bear,MypyBear -f <filename> --debug-bears PEP8Bear\n+\n+If bear name is not specified in ``--debug-bears`` argument then it will by\n+default debug all the bears passed through ``--bears`` or ``-b`` argument\n+**i.e.,**","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-06-09T12:24:48Z","lastEditedAt":null,"updatedAt":"2018-06-09T12:24:48Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDIyNTU1Nw==","url":"https://github.com/coala/coala/pull/5502#discussion_r194225557","bodyText":"Why i.e. before? I thought you explain something now, but this is just another command^^","diffHunk":"@@ -0,0 +1,52 @@\n+Debug Bears\n+===========\n+\n+This document provide a brief overview of coala's Debugging Interface.\n+Debugging Interface will help user to debug the Bear code and move through\n+it using ``pdb`` Interface\n+\n+There are two way to invoke the coala's Debgger\n+\n+Command Line Interface\n+----------------------\n+\n+User can specify the bear they want to debug using ``--debug-bears`` i.e.,\n+\n+.. code:: shell\n+\n+    $ coala -b PEP8Bear,MypyBear -f <filename> --debug-bears PEP8Bear\n+\n+If bear name is not specified in ``--debug-bears`` argument then it will by\n+default debug all the bears passed through ``--bears`` or ``-b`` argument\n+**i.e.,**\n+\n+.. code:: shell\n+\n+    $ coala -b PEP8Bear,MypyBear -f <filename> --debug-bears","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-06-09T12:25:31Z","lastEditedAt":null,"updatedAt":"2018-06-09T12:25:31Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDIyNTU2Mw==","url":"https://github.com/coala/coala/pull/5502#discussion_r194225563","bodyText":"Very important: It will also debug dependency bears!","diffHunk":"@@ -0,0 +1,52 @@\n+Debug Bears\n+===========\n+\n+This document provide a brief overview of coala's Debugging Interface.\n+Debugging Interface will help user to debug the Bear code and move through\n+it using ``pdb`` Interface\n+\n+There are two way to invoke the coala's Debgger\n+\n+Command Line Interface\n+----------------------\n+\n+User can specify the bear they want to debug using ``--debug-bears`` i.e.,\n+\n+.. code:: shell\n+\n+    $ coala -b PEP8Bear,MypyBear -f <filename> --debug-bears PEP8Bear\n+\n+If bear name is not specified in ``--debug-bears`` argument then it will by\n+default debug all the bears passed through ``--bears`` or ``-b`` argument\n+**i.e.,**","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNDg1Njg0NA==","createdAt":"2018-06-09T14:58:30Z","content":"THUMBS_UP","user":{"login":"RaiVaibhav","name":"Vaibhav Rai"}}],"createdAt":"2018-06-09T12:25:46Z","lastEditedAt":null,"updatedAt":"2018-06-09T12:25:46Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDIyNTU3Nw==","url":"https://github.com/coala/coala/pull/5502#discussion_r194225577","bodyText":"Just coafile.","diffHunk":"@@ -0,0 +1,52 @@\n+Debug Bears\n+===========\n+\n+This document provide a brief overview of coala's Debugging Interface.\n+Debugging Interface will help user to debug the Bear code and move through\n+it using ``pdb`` Interface\n+\n+There are two way to invoke the coala's Debgger\n+\n+Command Line Interface\n+----------------------\n+\n+User can specify the bear they want to debug using ``--debug-bears`` i.e.,\n+\n+.. code:: shell\n+\n+    $ coala -b PEP8Bear,MypyBear -f <filename> --debug-bears PEP8Bear\n+\n+If bear name is not specified in ``--debug-bears`` argument then it will by\n+default debug all the bears passed through ``--bears`` or ``-b`` argument\n+**i.e.,**\n+\n+.. code:: shell\n+\n+    $ coala -b PEP8Bear,MypyBear -f <filename> --debug-bears\n+\n+Configuration Files - coafiles","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-06-09T12:26:02Z","lastEditedAt":null,"updatedAt":"2018-06-09T12:26:02Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDIyNTU4NA==","url":"https://github.com/coala/coala/pull/5502#discussion_r194225584","bodyText":"Users","diffHunk":"@@ -0,0 +1,52 @@\n+Debug Bears\n+===========\n+\n+This document provide a brief overview of coala's Debugging Interface.\n+Debugging Interface will help user to debug the Bear code and move through\n+it using ``pdb`` Interface\n+\n+There are two way to invoke the coala's Debgger\n+\n+Command Line Interface\n+----------------------\n+\n+User can specify the bear they want to debug using ``--debug-bears`` i.e.,\n+\n+.. code:: shell\n+\n+    $ coala -b PEP8Bear,MypyBear -f <filename> --debug-bears PEP8Bear\n+\n+If bear name is not specified in ``--debug-bears`` argument then it will by\n+default debug all the bears passed through ``--bears`` or ``-b`` argument\n+**i.e.,**\n+\n+.. code:: shell\n+\n+    $ coala -b PEP8Bear,MypyBear -f <filename> --debug-bears\n+\n+Configuration Files - coafiles\n+------------------------------\n+\n+User can debug the bears using ``.coafile`` **i.e.,**","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-06-09T12:26:09Z","lastEditedAt":null,"updatedAt":"2018-06-09T12:26:09Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDIyNTU5MQ==","url":"https://github.com/coala/coala/pull/5502#discussion_r194225591","bodyText":"the bears\nYou mean bears in general, not specific bears, so no \"the\".","diffHunk":"@@ -0,0 +1,52 @@\n+Debug Bears\n+===========\n+\n+This document provide a brief overview of coala's Debugging Interface.\n+Debugging Interface will help user to debug the Bear code and move through\n+it using ``pdb`` Interface\n+\n+There are two way to invoke the coala's Debgger\n+\n+Command Line Interface\n+----------------------\n+\n+User can specify the bear they want to debug using ``--debug-bears`` i.e.,\n+\n+.. code:: shell\n+\n+    $ coala -b PEP8Bear,MypyBear -f <filename> --debug-bears PEP8Bear\n+\n+If bear name is not specified in ``--debug-bears`` argument then it will by\n+default debug all the bears passed through ``--bears`` or ``-b`` argument\n+**i.e.,**\n+\n+.. code:: shell\n+\n+    $ coala -b PEP8Bear,MypyBear -f <filename> --debug-bears\n+\n+Configuration Files - coafiles\n+------------------------------\n+\n+User can debug the bears using ``.coafile`` **i.e.,**","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-06-09T12:26:29Z","lastEditedAt":null,"updatedAt":"2018-06-09T12:26:29Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDIyNTYwNQ==","url":"https://github.com/coala/coala/pull/5502#discussion_r194225605","bodyText":"Don't make it bold. Bold and italics are reserved for important keywords. \"or\" is not a keyword ;)","diffHunk":"@@ -0,0 +1,52 @@\n+Debug Bears\n+===========\n+\n+This document provide a brief overview of coala's Debugging Interface.\n+Debugging Interface will help user to debug the Bear code and move through\n+it using ``pdb`` Interface\n+\n+There are two way to invoke the coala's Debgger\n+\n+Command Line Interface\n+----------------------\n+\n+User can specify the bear they want to debug using ``--debug-bears`` i.e.,\n+\n+.. code:: shell\n+\n+    $ coala -b PEP8Bear,MypyBear -f <filename> --debug-bears PEP8Bear\n+\n+If bear name is not specified in ``--debug-bears`` argument then it will by\n+default debug all the bears passed through ``--bears`` or ``-b`` argument\n+**i.e.,**\n+\n+.. code:: shell\n+\n+    $ coala -b PEP8Bear,MypyBear -f <filename> --debug-bears\n+\n+Configuration Files - coafiles\n+------------------------------\n+\n+User can debug the bears using ``.coafile`` **i.e.,**\n+\n+::\n+\n+    [<section name>]\n+    bears = PEP8Bear,MypyBear\n+    files = <filename>\n+    debug_bears = PEP8Bear\n+\n+**or**","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-06-09T12:26:50Z","lastEditedAt":null,"updatedAt":"2018-06-09T12:26:50Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDIyNTYyMQ==","url":"https://github.com/coala/coala/pull/5502#discussion_r194225621","bodyText":"Nobody knows do_q, that's implementation detail.","diffHunk":"@@ -0,0 +1,52 @@\n+Debug Bears\n+===========\n+\n+This document provide a brief overview of coala's Debugging Interface.\n+Debugging Interface will help user to debug the Bear code and move through\n+it using ``pdb`` Interface\n+\n+There are two way to invoke the coala's Debgger\n+\n+Command Line Interface\n+----------------------\n+\n+User can specify the bear they want to debug using ``--debug-bears`` i.e.,\n+\n+.. code:: shell\n+\n+    $ coala -b PEP8Bear,MypyBear -f <filename> --debug-bears PEP8Bear\n+\n+If bear name is not specified in ``--debug-bears`` argument then it will by\n+default debug all the bears passed through ``--bears`` or ``-b`` argument\n+**i.e.,**\n+\n+.. code:: shell\n+\n+    $ coala -b PEP8Bear,MypyBear -f <filename> --debug-bears\n+\n+Configuration Files - coafiles\n+------------------------------\n+\n+User can debug the bears using ``.coafile`` **i.e.,**\n+\n+::\n+\n+    [<section name>]\n+    bears = PEP8Bear,MypyBear\n+    files = <filename>\n+    debug_bears = PEP8Bear\n+\n+**or**\n+\n+::\n+\n+    [<section name>]\n+    bears = PEP8Bear,MypyBear\n+    files = <filename>\n+    debug_bears = True\n+\n+.. note::\n+\n+    ``Pdb`` ``do_q`` (quit) has been remapped so that coala can continue its","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-06-09T12:27:26Z","lastEditedAt":null,"updatedAt":"2018-06-09T12:27:26Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDIyNTY3MA==","url":"https://github.com/coala/coala/pull/5502#discussion_r194225670","bodyText":"So -->\nPdb's quit-command (q) has been remapped to coala continues its normal execution without aborting.\n(note also: in this case arguable, but I wouldn't wrap Pdb into backticks, since Pdb is also referred to as a name for Python's debugging capabilities. This is indeed a blurry border, but imo it fits better without backticks.)","diffHunk":"@@ -0,0 +1,52 @@\n+Debug Bears\n+===========\n+\n+This document provide a brief overview of coala's Debugging Interface.\n+Debugging Interface will help user to debug the Bear code and move through\n+it using ``pdb`` Interface\n+\n+There are two way to invoke the coala's Debgger\n+\n+Command Line Interface\n+----------------------\n+\n+User can specify the bear they want to debug using ``--debug-bears`` i.e.,\n+\n+.. code:: shell\n+\n+    $ coala -b PEP8Bear,MypyBear -f <filename> --debug-bears PEP8Bear\n+\n+If bear name is not specified in ``--debug-bears`` argument then it will by\n+default debug all the bears passed through ``--bears`` or ``-b`` argument\n+**i.e.,**\n+\n+.. code:: shell\n+\n+    $ coala -b PEP8Bear,MypyBear -f <filename> --debug-bears\n+\n+Configuration Files - coafiles\n+------------------------------\n+\n+User can debug the bears using ``.coafile`` **i.e.,**\n+\n+::\n+\n+    [<section name>]\n+    bears = PEP8Bear,MypyBear\n+    files = <filename>\n+    debug_bears = PEP8Bear\n+\n+**or**\n+\n+::\n+\n+    [<section name>]\n+    bears = PEP8Bear,MypyBear\n+    files = <filename>\n+    debug_bears = True\n+\n+.. note::\n+\n+    ``Pdb`` ``do_q`` (quit) has been remapped so that coala can continue its","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-06-09T12:29:18Z","lastEditedAt":null,"updatedAt":"2018-06-09T12:29:18Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDIyNTY3Ng==","url":"https://github.com/coala/coala/pull/5502#discussion_r194225676","bodyText":"Hm... Not sure that's too much implementation detail. But let's keep it for now, I'll revise it again when the other stuff is in place ;)","diffHunk":"@@ -0,0 +1,52 @@\n+Debug Bears\n+===========\n+\n+This document provide a brief overview of coala's Debugging Interface.\n+Debugging Interface will help user to debug the Bear code and move through\n+it using ``pdb`` Interface\n+\n+There are two way to invoke the coala's Debgger\n+\n+Command Line Interface\n+----------------------\n+\n+User can specify the bear they want to debug using ``--debug-bears`` i.e.,\n+\n+.. code:: shell\n+\n+    $ coala -b PEP8Bear,MypyBear -f <filename> --debug-bears PEP8Bear\n+\n+If bear name is not specified in ``--debug-bears`` argument then it will by\n+default debug all the bears passed through ``--bears`` or ``-b`` argument\n+**i.e.,**\n+\n+.. code:: shell\n+\n+    $ coala -b PEP8Bear,MypyBear -f <filename> --debug-bears\n+\n+Configuration Files - coafiles\n+------------------------------\n+\n+User can debug the bears using ``.coafile`` **i.e.,**\n+\n+::\n+\n+    [<section name>]\n+    bears = PEP8Bear,MypyBear\n+    files = <filename>\n+    debug_bears = PEP8Bear\n+\n+**or**\n+\n+::\n+\n+    [<section name>]\n+    bears = PEP8Bear,MypyBear\n+    files = <filename>\n+    debug_bears = True\n+\n+.. note::\n+\n+    ``Pdb`` ``do_q`` (quit) has been remapped so that coala can continue its\n+    normal execution without any error. So, ``quit`` or `q` will first clear\n+    all the breakspoints then continue ( ``c`` or ``continue`` ) execution.","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-06-09T12:29:36Z","lastEditedAt":null,"updatedAt":"2018-06-09T12:29:36Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTI0OTcxOQ==","url":"https://github.com/coala/coala/pull/5502#discussion_r195249719","bodyText":"The Debugging Interface will help users to debug the Bear code and move step through it using the pdb  interface Pdb Interface.","diffHunk":"@@ -0,0 +1,75 @@\n+Debug Bears\n+===========\n+\n+This document provide a brief overview of coala's Debugging Interface.\n+Debugging Interface will help user to debug the Bear code and move through","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-06-13T22:01:12Z","lastEditedAt":null,"updatedAt":"2018-06-13T22:01:12Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTI1MDIyNQ==","url":"https://github.com/coala/coala/pull/5502#discussion_r195250225","bodyText":"That should be a heading as well^^","diffHunk":"@@ -0,0 +1,75 @@\n+Debug Bears\n+===========\n+\n+This document provide a brief overview of coala's Debugging Interface.\n+Debugging Interface will help user to debug the Bear code and move through\n+it using Pdb Interface\n+\n+Usage of coala's Debugger.","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-06-13T22:03:35Z","lastEditedAt":null,"updatedAt":"2018-06-13T22:03:35Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTI1MDI4Nw==","url":"https://github.com/coala/coala/pull/5502#discussion_r195250287","bodyText":"And the pargraphs below would become sub-headings.","diffHunk":"@@ -0,0 +1,75 @@\n+Debug Bears\n+===========\n+\n+This document provide a brief overview of coala's Debugging Interface.\n+Debugging Interface will help user to debug the Bear code and move through\n+it using Pdb Interface\n+\n+Usage of coala's Debugger.","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-06-13T22:03:52Z","lastEditedAt":null,"updatedAt":"2018-06-13T22:03:52Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTI1MDQzNA==","url":"https://github.com/coala/coala/pull/5502#discussion_r195250434","bodyText":"see comma spacing","diffHunk":"@@ -0,0 +1,75 @@\n+Debug Bears\n+===========\n+\n+This document provide a brief overview of coala's Debugging Interface.\n+Debugging Interface will help user to debug the Bear code and move through\n+it using Pdb Interface\n+\n+Usage of coala's Debugger.\n+\n+Command Line Interface\n+----------------------\n+\n+Users can specify the bear they want to debug using ``--debug-bears`` ,i.e.","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-06-13T22:04:39Z","lastEditedAt":null,"updatedAt":"2018-06-13T22:04:39Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTI1MDg2Mw==","url":"https://github.com/coala/coala/pull/5502#discussion_r195250863","bodyText":"if possible, write out arguments, that makes them easier to understand, note everyone is familiar with our shortcuts","diffHunk":"@@ -0,0 +1,75 @@\n+Debug Bears\n+===========\n+\n+This document provide a brief overview of coala's Debugging Interface.\n+Debugging Interface will help user to debug the Bear code and move through\n+it using Pdb Interface\n+\n+Usage of coala's Debugger.\n+\n+Command Line Interface\n+----------------------\n+\n+Users can specify the bear they want to debug using ``--debug-bears`` ,i.e.\n+\n+.. code:: shell\n+\n+    $ coala -b PEP8Bear,HelloWorldBear -f <file> --debug-bears HelloWorldBear","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-06-13T22:06:37Z","lastEditedAt":null,"updatedAt":"2018-06-13T22:06:37Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTI1MTY3NQ==","url":"https://github.com/coala/coala/pull/5502#discussion_r195251675","bodyText":"redundant empty line","diffHunk":"@@ -0,0 +1,75 @@\n+Debug Bears\n+===========\n+\n+This document provide a brief overview of coala's Debugging Interface.\n+Debugging Interface will help user to debug the Bear code and move through\n+it using Pdb Interface\n+\n+Usage of coala's Debugger.\n+\n+Command Line Interface\n+----------------------\n+\n+Users can specify the bear they want to debug using ``--debug-bears`` ,i.e.\n+\n+.. code:: shell\n+\n+    $ coala -b PEP8Bear,HelloWorldBear -f <file> --debug-bears HelloWorldBear\n+\n+","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-06-13T22:10:26Z","lastEditedAt":null,"updatedAt":"2018-06-13T22:10:26Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTI1MTc5MQ==","url":"https://github.com/coala/coala/pull/5502#discussion_r195251791","bodyText":"sends -> prints","diffHunk":"@@ -0,0 +1,75 @@\n+Debug Bears\n+===========\n+\n+This document provide a brief overview of coala's Debugging Interface.\n+Debugging Interface will help user to debug the Bear code and move through\n+it using Pdb Interface\n+\n+Usage of coala's Debugger.\n+\n+Command Line Interface\n+----------------------\n+\n+Users can specify the bear they want to debug using ``--debug-bears`` ,i.e.\n+\n+.. code:: shell\n+\n+    $ coala -b PEP8Bear,HelloWorldBear -f <file> --debug-bears HelloWorldBear\n+\n+\n+Below is the code given for a simple ``HelloWorldBear`` that sends a debug","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-06-13T22:10:58Z","lastEditedAt":null,"updatedAt":"2018-06-13T22:10:58Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTI1MjUxNw==","url":"https://github.com/coala/coala/pull/5502#discussion_r195252517","bodyText":"Relevance of the code example? What you want to tell the reader? When writing things, explain them. 👍","diffHunk":"@@ -0,0 +1,75 @@\n+Debug Bears\n+===========\n+\n+This document provide a brief overview of coala's Debugging Interface.\n+Debugging Interface will help user to debug the Bear code and move through\n+it using Pdb Interface\n+\n+Usage of coala's Debugger.\n+\n+Command Line Interface\n+----------------------\n+\n+Users can specify the bear they want to debug using ``--debug-bears`` ,i.e.\n+\n+.. code:: shell\n+\n+    $ coala -b PEP8Bear,HelloWorldBear -f <file> --debug-bears HelloWorldBear\n+\n+\n+Below is the code given for a simple ``HelloWorldBear`` that sends a debug\n+message for each file:\n+\n+.. code:: python\n+\n+    import logging\n+\n+    from coalib.bears.LocalBear import LocalBear\n+\n+\n+    class HelloWorldBear(LocalBear):\n+        def run(self,\n+                filename,\n+                file):\n+            logging.info('Please follow newcomer guide.')\n+            logging.debug('Hello World! Checking file {0}.'.format(filename))","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-06-13T22:14:25Z","lastEditedAt":null,"updatedAt":"2018-06-13T22:14:25Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTI1Mjg0OQ==","url":"https://github.com/coala/coala/pull/5502#discussion_r195252849","bodyText":"Be consistent with the placeholder: <file> vs <filename>","diffHunk":"@@ -0,0 +1,75 @@\n+Debug Bears\n+===========\n+\n+This document provide a brief overview of coala's Debugging Interface.\n+Debugging Interface will help user to debug the Bear code and move through\n+it using Pdb Interface\n+\n+Usage of coala's Debugger.\n+\n+Command Line Interface\n+----------------------\n+\n+Users can specify the bear they want to debug using ``--debug-bears`` ,i.e.\n+\n+.. code:: shell\n+\n+    $ coala -b PEP8Bear,HelloWorldBear -f <file> --debug-bears HelloWorldBear\n+\n+\n+Below is the code given for a simple ``HelloWorldBear`` that sends a debug\n+message for each file:\n+\n+.. code:: python\n+\n+    import logging\n+\n+    from coalib.bears.LocalBear import LocalBear\n+\n+\n+    class HelloWorldBear(LocalBear):\n+        def run(self,\n+                filename,\n+                file):\n+            logging.info('Please follow newcomer guide.')\n+            logging.debug('Hello World! Checking file {0}.'.format(filename))\n+\n+If bear names are not specified for ``--debug-bears`` then it will by\n+default debug all the bears passed through ``--bears`` or ``-b`` argument.\n+\n+.. code:: shell\n+\n+    $ coala -b HelloWorldBear -f <filename> --debug-bears","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-06-13T22:15:49Z","lastEditedAt":null,"updatedAt":"2018-06-13T22:15:49Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTI1NDM5MA==","url":"https://github.com/coala/coala/pull/5502#discussion_r195254390","bodyText":"... from a different bears. The debugger will debug all those bears on which a bear is dependent on as well. or say, Debugger will debug all those dependency bears.","diffHunk":"@@ -0,0 +1,75 @@\n+Debug Bears\n+===========\n+\n+This document provide a brief overview of coala's Debugging Interface.\n+Debugging Interface will help user to debug the Bear code and move through\n+it using Pdb Interface\n+\n+Usage of coala's Debugger.\n+\n+Command Line Interface\n+----------------------\n+\n+Users can specify the bear they want to debug using ``--debug-bears`` ,i.e.\n+\n+.. code:: shell\n+\n+    $ coala -b PEP8Bear,HelloWorldBear -f <file> --debug-bears HelloWorldBear\n+\n+\n+Below is the code given for a simple ``HelloWorldBear`` that sends a debug\n+message for each file:\n+\n+.. code:: python\n+\n+    import logging\n+\n+    from coalib.bears.LocalBear import LocalBear\n+\n+\n+    class HelloWorldBear(LocalBear):\n+        def run(self,\n+                filename,\n+                file):\n+            logging.info('Please follow newcomer guide.')\n+            logging.debug('Hello World! Checking file {0}.'.format(filename))\n+\n+If bear names are not specified for ``--debug-bears`` then it will by\n+default debug all the bears passed through ``--bears`` or ``-b`` argument.\n+\n+.. code:: shell\n+\n+    $ coala -b HelloWorldBear -f <filename> --debug-bears\n+\n+.. note::\n+\n+    A bear may depend on results from a different bears. Debugger will debug","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-06-13T22:22:47Z","lastEditedAt":null,"updatedAt":"2018-06-13T22:22:47Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTI1NDU2MA==","url":"https://github.com/coala/coala/pull/5502#discussion_r195254560","bodyText":"i.e., --> :\n\nUsers can debug bears using .coafile:","diffHunk":"@@ -0,0 +1,75 @@\n+Debug Bears\n+===========\n+\n+This document provide a brief overview of coala's Debugging Interface.\n+Debugging Interface will help user to debug the Bear code and move through\n+it using Pdb Interface\n+\n+Usage of coala's Debugger.\n+\n+Command Line Interface\n+----------------------\n+\n+Users can specify the bear they want to debug using ``--debug-bears`` ,i.e.\n+\n+.. code:: shell\n+\n+    $ coala -b PEP8Bear,HelloWorldBear -f <file> --debug-bears HelloWorldBear\n+\n+\n+Below is the code given for a simple ``HelloWorldBear`` that sends a debug\n+message for each file:\n+\n+.. code:: python\n+\n+    import logging\n+\n+    from coalib.bears.LocalBear import LocalBear\n+\n+\n+    class HelloWorldBear(LocalBear):\n+        def run(self,\n+                filename,\n+                file):\n+            logging.info('Please follow newcomer guide.')\n+            logging.debug('Hello World! Checking file {0}.'.format(filename))\n+\n+If bear names are not specified for ``--debug-bears`` then it will by\n+default debug all the bears passed through ``--bears`` or ``-b`` argument.\n+\n+.. code:: shell\n+\n+    $ coala -b HelloWorldBear -f <filename> --debug-bears\n+\n+.. note::\n+\n+    A bear may depend on results from a different bears. Debugger will debug\n+    all those bears on which a bear is dependent or say, Debugger will debug\n+    all those dependency bears.\n+\n+coafile\n+-------\n+\n+Users can debug bears using ``.coafile`` i.e.,","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-06-13T22:23:39Z","lastEditedAt":null,"updatedAt":"2018-06-13T22:23:39Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTI1NDcxMw==","url":"https://github.com/coala/coala/pull/5502#discussion_r195254713","bodyText":"call the section all, this is our default convention for the topmost section.","diffHunk":"@@ -0,0 +1,75 @@\n+Debug Bears\n+===========\n+\n+This document provide a brief overview of coala's Debugging Interface.\n+Debugging Interface will help user to debug the Bear code and move through\n+it using Pdb Interface\n+\n+Usage of coala's Debugger.\n+\n+Command Line Interface\n+----------------------\n+\n+Users can specify the bear they want to debug using ``--debug-bears`` ,i.e.\n+\n+.. code:: shell\n+\n+    $ coala -b PEP8Bear,HelloWorldBear -f <file> --debug-bears HelloWorldBear\n+\n+\n+Below is the code given for a simple ``HelloWorldBear`` that sends a debug\n+message for each file:\n+\n+.. code:: python\n+\n+    import logging\n+\n+    from coalib.bears.LocalBear import LocalBear\n+\n+\n+    class HelloWorldBear(LocalBear):\n+        def run(self,\n+                filename,\n+                file):\n+            logging.info('Please follow newcomer guide.')\n+            logging.debug('Hello World! Checking file {0}.'.format(filename))\n+\n+If bear names are not specified for ``--debug-bears`` then it will by\n+default debug all the bears passed through ``--bears`` or ``-b`` argument.\n+\n+.. code:: shell\n+\n+    $ coala -b HelloWorldBear -f <filename> --debug-bears\n+\n+.. note::\n+\n+    A bear may depend on results from a different bears. Debugger will debug\n+    all those bears on which a bear is dependent or say, Debugger will debug\n+    all those dependency bears.\n+\n+coafile\n+-------\n+\n+Users can debug bears using ``.coafile`` i.e.,\n+\n+::\n+\n+    [<section name>]\n+    bears = PEP8Bear,MypyBear\n+    files = <filename>\n+    debug_bears = PEP8Bear\n+\n+or\n+\n+::\n+\n+    [<section name>]","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-06-13T22:24:27Z","lastEditedAt":null,"updatedAt":"2018-06-13T22:24:27Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTI1NDgzNg==","url":"https://github.com/coala/coala/pull/5502#discussion_r195254836","bodyText":"continues","diffHunk":"@@ -0,0 +1,75 @@\n+Debug Bears\n+===========\n+\n+This document provide a brief overview of coala's Debugging Interface.\n+Debugging Interface will help user to debug the Bear code and move through\n+it using Pdb Interface\n+\n+Usage of coala's Debugger.\n+\n+Command Line Interface\n+----------------------\n+\n+Users can specify the bear they want to debug using ``--debug-bears`` ,i.e.\n+\n+.. code:: shell\n+\n+    $ coala -b PEP8Bear,HelloWorldBear -f <file> --debug-bears HelloWorldBear\n+\n+\n+Below is the code given for a simple ``HelloWorldBear`` that sends a debug\n+message for each file:\n+\n+.. code:: python\n+\n+    import logging\n+\n+    from coalib.bears.LocalBear import LocalBear\n+\n+\n+    class HelloWorldBear(LocalBear):\n+        def run(self,\n+                filename,\n+                file):\n+            logging.info('Please follow newcomer guide.')\n+            logging.debug('Hello World! Checking file {0}.'.format(filename))\n+\n+If bear names are not specified for ``--debug-bears`` then it will by\n+default debug all the bears passed through ``--bears`` or ``-b`` argument.\n+\n+.. code:: shell\n+\n+    $ coala -b HelloWorldBear -f <filename> --debug-bears\n+\n+.. note::\n+\n+    A bear may depend on results from a different bears. Debugger will debug\n+    all those bears on which a bear is dependent or say, Debugger will debug\n+    all those dependency bears.\n+\n+coafile\n+-------\n+\n+Users can debug bears using ``.coafile`` i.e.,\n+\n+::\n+\n+    [<section name>]\n+    bears = PEP8Bear,MypyBear\n+    files = <filename>\n+    debug_bears = PEP8Bear\n+\n+or\n+\n+::\n+\n+    [<section name>]\n+    bears = PEP8Bear,MypyBear\n+    files = <filename>\n+    debug_bears = True\n+\n+.. note::\n+\n+    Pdb's quit-command (``q``) has been remapped so coala continue its","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-06-13T22:25:01Z","lastEditedAt":null,"updatedAt":"2018-06-13T22:25:01Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTQwMjA3MQ==","url":"https://github.com/coala/coala/pull/5502#discussion_r195402071","bodyText":"actually LineLengthBear was failing, so I changed to shortcuts","diffHunk":"@@ -0,0 +1,75 @@\n+Debug Bears\n+===========\n+\n+This document provide a brief overview of coala's Debugging Interface.\n+Debugging Interface will help user to debug the Bear code and move through\n+it using Pdb Interface\n+\n+Usage of coala's Debugger.\n+\n+Command Line Interface\n+----------------------\n+\n+Users can specify the bear they want to debug using ``--debug-bears`` ,i.e.\n+\n+.. code:: shell\n+\n+    $ coala -b PEP8Bear,HelloWorldBear -f <file> --debug-bears HelloWorldBear","author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"reactions":[],"createdAt":"2018-06-14T12:26:57Z","lastEditedAt":null,"updatedAt":"2018-06-14T12:26:57Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTkwNjM2Ng==","url":"https://github.com/coala/coala/pull/5502#discussion_r195906366","bodyText":"missing period.","diffHunk":"@@ -0,0 +1,77 @@\n+Debug Bears\n+===========\n+\n+This document provide a brief overview of coala's Debugging Interface.\n+The Debugging Interface will help users to debug Bear code and step through\n+it using pdb interface","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-06-16T16:12:08Z","lastEditedAt":null,"updatedAt":"2018-06-16T16:12:08Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTkwNjM3NQ==","url":"https://github.com/coala/coala/pull/5502#discussion_r195906375","bodyText":"\"using the pdb interface\"","diffHunk":"@@ -0,0 +1,77 @@\n+Debug Bears\n+===========\n+\n+This document provide a brief overview of coala's Debugging Interface.\n+The Debugging Interface will help users to debug Bear code and step through\n+it using pdb interface","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-06-16T16:12:21Z","lastEditedAt":null,"updatedAt":"2018-06-16T16:12:21Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTkwNjQxMA==","url":"https://github.com/coala/coala/pull/5502#discussion_r195906410","bodyText":"--> def run(self, filename, file)","diffHunk":"@@ -0,0 +1,77 @@\n+Debug Bears\n+===========\n+\n+This document provide a brief overview of coala's Debugging Interface.\n+The Debugging Interface will help users to debug Bear code and step through\n+it using pdb interface\n+\n+Usage of coala's Debugger\n+=========================\n+\n+Command Line Interface\n+----------------------\n+\n+Users can specify the bear they want to debug using ``--debug-bears``, i.e.\n+\n+.. code:: shell\n+\n+    $coala -b PEP8Bear,HelloWorldBear -f <filename> --debug-bears HelloWorldBear\n+\n+Below is the code given for a simple ``HelloWorldBear`` that prints a debug\n+message for each file:\n+\n+.. code:: python\n+\n+    import logging\n+\n+    from coalib.bears.LocalBear import LocalBear\n+\n+\n+    class HelloWorldBear(LocalBear):\n+        def run(self,\n+                filename,\n+                file):","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-06-16T16:13:16Z","lastEditedAt":null,"updatedAt":"2018-06-16T16:13:16Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTkwNjQ1MQ==","url":"https://github.com/coala/coala/pull/5502#discussion_r195906451","bodyText":"Would remove that, one log message is sufficient :)","diffHunk":"@@ -0,0 +1,77 @@\n+Debug Bears\n+===========\n+\n+This document provide a brief overview of coala's Debugging Interface.\n+The Debugging Interface will help users to debug Bear code and step through\n+it using pdb interface\n+\n+Usage of coala's Debugger\n+=========================\n+\n+Command Line Interface\n+----------------------\n+\n+Users can specify the bear they want to debug using ``--debug-bears``, i.e.\n+\n+.. code:: shell\n+\n+    $coala -b PEP8Bear,HelloWorldBear -f <filename> --debug-bears HelloWorldBear\n+\n+Below is the code given for a simple ``HelloWorldBear`` that prints a debug\n+message for each file:\n+\n+.. code:: python\n+\n+    import logging\n+\n+    from coalib.bears.LocalBear import LocalBear\n+\n+\n+    class HelloWorldBear(LocalBear):\n+        def run(self,\n+                filename,\n+                file):\n+            logging.info('Please follow newcomer guide.')","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-06-16T16:15:14Z","lastEditedAt":null,"updatedAt":"2018-06-16T16:15:14Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTkwNjUwNw==","url":"https://github.com/coala/coala/pull/5502#discussion_r195906507","bodyText":"the coala's debugger","diffHunk":"@@ -0,0 +1,77 @@\n+Debug Bears\n+===========\n+\n+This document provide a brief overview of coala's Debugging Interface.\n+The Debugging Interface will help users to debug Bear code and step through\n+it using pdb interface\n+\n+Usage of coala's Debugger\n+=========================\n+\n+Command Line Interface\n+----------------------\n+\n+Users can specify the bear they want to debug using ``--debug-bears``, i.e.\n+\n+.. code:: shell\n+\n+    $coala -b PEP8Bear,HelloWorldBear -f <filename> --debug-bears HelloWorldBear\n+\n+Below is the code given for a simple ``HelloWorldBear`` that prints a debug\n+message for each file:\n+\n+.. code:: python\n+\n+    import logging\n+\n+    from coalib.bears.LocalBear import LocalBear\n+\n+\n+    class HelloWorldBear(LocalBear):\n+        def run(self,\n+                filename,\n+                file):\n+            logging.info('Please follow newcomer guide.')\n+            logging.debug('Hello World! Checking file {}.'.format(filename))\n+\n+After invoking the coala's debugger it will step into the ``run()`` method of a","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-06-16T16:18:17Z","lastEditedAt":null,"updatedAt":"2018-06-16T16:18:17Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTkwNjUyOA==","url":"https://github.com/coala/coala/pull/5502#discussion_r195906528","bodyText":"method of a","diffHunk":"@@ -0,0 +1,77 @@\n+Debug Bears\n+===========\n+\n+This document provide a brief overview of coala's Debugging Interface.\n+The Debugging Interface will help users to debug Bear code and step through\n+it using pdb interface\n+\n+Usage of coala's Debugger\n+=========================\n+\n+Command Line Interface\n+----------------------\n+\n+Users can specify the bear they want to debug using ``--debug-bears``, i.e.\n+\n+.. code:: shell\n+\n+    $coala -b PEP8Bear,HelloWorldBear -f <filename> --debug-bears HelloWorldBear\n+\n+Below is the code given for a simple ``HelloWorldBear`` that prints a debug\n+message for each file:\n+\n+.. code:: python\n+\n+    import logging\n+\n+    from coalib.bears.LocalBear import LocalBear\n+\n+\n+    class HelloWorldBear(LocalBear):\n+        def run(self,\n+                filename,\n+                file):\n+            logging.info('Please follow newcomer guide.')\n+            logging.debug('Hello World! Checking file {}.'.format(filename))\n+\n+After invoking the coala's debugger it will step into the ``run()`` method of a","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-06-16T16:19:03Z","lastEditedAt":null,"updatedAt":"2018-06-16T16:19:03Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTkwNjUzMg==","url":"https://github.com/coala/coala/pull/5502#discussion_r195906532","bodyText":"code term -> enclose in double backticks","diffHunk":"@@ -0,0 +1,77 @@\n+Debug Bears\n+===========\n+\n+This document provide a brief overview of coala's Debugging Interface.\n+The Debugging Interface will help users to debug Bear code and step through\n+it using pdb interface\n+\n+Usage of coala's Debugger\n+=========================\n+\n+Command Line Interface\n+----------------------\n+\n+Users can specify the bear they want to debug using ``--debug-bears``, i.e.\n+\n+.. code:: shell\n+\n+    $coala -b PEP8Bear,HelloWorldBear -f <filename> --debug-bears HelloWorldBear\n+\n+Below is the code given for a simple ``HelloWorldBear`` that prints a debug\n+message for each file:\n+\n+.. code:: python\n+\n+    import logging\n+\n+    from coalib.bears.LocalBear import LocalBear\n+\n+\n+    class HelloWorldBear(LocalBear):\n+        def run(self,\n+                filename,\n+                file):\n+            logging.info('Please follow newcomer guide.')\n+            logging.debug('Hello World! Checking file {}.'.format(filename))\n+\n+After invoking the coala's debugger it will step into the ``run()`` method of a\n+HelloWorldBear and help users to debug Bear code with passed settings.","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-06-16T16:19:15Z","lastEditedAt":null,"updatedAt":"2018-06-16T16:19:15Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTkwNjUzOA==","url":"https://github.com/coala/coala/pull/5502#discussion_r195906538","bodyText":"helps","diffHunk":"@@ -0,0 +1,77 @@\n+Debug Bears\n+===========\n+\n+This document provide a brief overview of coala's Debugging Interface.\n+The Debugging Interface will help users to debug Bear code and step through\n+it using pdb interface\n+\n+Usage of coala's Debugger\n+=========================\n+\n+Command Line Interface\n+----------------------\n+\n+Users can specify the bear they want to debug using ``--debug-bears``, i.e.\n+\n+.. code:: shell\n+\n+    $coala -b PEP8Bear,HelloWorldBear -f <filename> --debug-bears HelloWorldBear\n+\n+Below is the code given for a simple ``HelloWorldBear`` that prints a debug\n+message for each file:\n+\n+.. code:: python\n+\n+    import logging\n+\n+    from coalib.bears.LocalBear import LocalBear\n+\n+\n+    class HelloWorldBear(LocalBear):\n+        def run(self,\n+                filename,\n+                file):\n+            logging.info('Please follow newcomer guide.')\n+            logging.debug('Hello World! Checking file {}.'.format(filename))\n+\n+After invoking the coala's debugger it will step into the ``run()`` method of a\n+HelloWorldBear and help users to debug Bear code with passed settings.","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-06-16T16:19:27Z","lastEditedAt":null,"updatedAt":"2018-06-16T16:19:27Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTkwNjU4Ng==","url":"https://github.com/coala/coala/pull/5502#discussion_r195906586","bodyText":"But actually, the \"help users to debug Bear code\" part. It's not only helping, it's debugging 100%ly :) I would omit the sentence. You can explain that it will step into your code regardless using yield or not.","diffHunk":"@@ -0,0 +1,77 @@\n+Debug Bears\n+===========\n+\n+This document provide a brief overview of coala's Debugging Interface.\n+The Debugging Interface will help users to debug Bear code and step through\n+it using pdb interface\n+\n+Usage of coala's Debugger\n+=========================\n+\n+Command Line Interface\n+----------------------\n+\n+Users can specify the bear they want to debug using ``--debug-bears``, i.e.\n+\n+.. code:: shell\n+\n+    $coala -b PEP8Bear,HelloWorldBear -f <filename> --debug-bears HelloWorldBear\n+\n+Below is the code given for a simple ``HelloWorldBear`` that prints a debug\n+message for each file:\n+\n+.. code:: python\n+\n+    import logging\n+\n+    from coalib.bears.LocalBear import LocalBear\n+\n+\n+    class HelloWorldBear(LocalBear):\n+        def run(self,\n+                filename,\n+                file):\n+            logging.info('Please follow newcomer guide.')\n+            logging.debug('Hello World! Checking file {}.'.format(filename))\n+\n+After invoking the coala's debugger it will step into the ``run()`` method of a\n+HelloWorldBear and help users to debug Bear code with passed settings.","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-06-16T16:21:11Z","lastEditedAt":null,"updatedAt":"2018-06-16T16:21:11Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTkwNjYwOQ==","url":"https://github.com/coala/coala/pull/5502#discussion_r195906609","bodyText":"I'm not sure if we should clarify, that it depends on how you use --debug-bears. Without arguments, everything is debugged, but if you write specific bears (e.g. --debug-bears MyBear), then dependencies won't be debugged.","diffHunk":"@@ -0,0 +1,77 @@\n+Debug Bears\n+===========\n+\n+This document provide a brief overview of coala's Debugging Interface.\n+The Debugging Interface will help users to debug Bear code and step through\n+it using pdb interface\n+\n+Usage of coala's Debugger\n+=========================\n+\n+Command Line Interface\n+----------------------\n+\n+Users can specify the bear they want to debug using ``--debug-bears``, i.e.\n+\n+.. code:: shell\n+\n+    $coala -b PEP8Bear,HelloWorldBear -f <filename> --debug-bears HelloWorldBear\n+\n+Below is the code given for a simple ``HelloWorldBear`` that prints a debug\n+message for each file:\n+\n+.. code:: python\n+\n+    import logging\n+\n+    from coalib.bears.LocalBear import LocalBear\n+\n+\n+    class HelloWorldBear(LocalBear):\n+        def run(self,\n+                filename,\n+                file):\n+            logging.info('Please follow newcomer guide.')\n+            logging.debug('Hello World! Checking file {}.'.format(filename))\n+\n+After invoking the coala's debugger it will step into the ``run()`` method of a\n+HelloWorldBear and help users to debug Bear code with passed settings.\n+\n+If bear names are not specified for ``--debug-bears`` then it will by\n+default debug all the bears passed through ``--bears`` or ``-b`` argument.\n+\n+.. code:: shell\n+\n+    $ coala --bears HelloWorldBear -files <filename> --debug-bears\n+\n+.. note::\n+\n+    A bear may depend on results from different bears. The debugger will debug\n+    all bears on which a bear is dependent on as well.","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-06-16T16:22:09Z","lastEditedAt":null,"updatedAt":"2018-06-16T16:22:09Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTkwNjY1MQ==","url":"https://github.com/coala/coala/pull/5502#discussion_r195906651","bodyText":"Can you try to move the explanation part (describing how debugging exactly works) above \"Usage\" paragraph? In some different paragraph like \"Details\" or \"Behaviour\" (or any name you like that shows that we want to describe what the idea is and how things work :) ).\nSo the usage part in the end only concentrates on invoking the debugger.\nThat would make texts more consistent across different usage patterns (CLI vs coafile).","diffHunk":"@@ -0,0 +1,77 @@\n+Debug Bears\n+===========\n+\n+This document provide a brief overview of coala's Debugging Interface.\n+The Debugging Interface will help users to debug Bear code and step through\n+it using pdb interface\n+\n+Usage of coala's Debugger\n+=========================\n+\n+Command Line Interface\n+----------------------\n+\n+Users can specify the bear they want to debug using ``--debug-bears``, i.e.\n+\n+.. code:: shell\n+\n+    $coala -b PEP8Bear,HelloWorldBear -f <filename> --debug-bears HelloWorldBear\n+\n+Below is the code given for a simple ``HelloWorldBear`` that prints a debug\n+message for each file:\n+\n+.. code:: python\n+\n+    import logging\n+\n+    from coalib.bears.LocalBear import LocalBear\n+\n+\n+    class HelloWorldBear(LocalBear):\n+        def run(self,\n+                filename,\n+                file):\n+            logging.info('Please follow newcomer guide.')\n+            logging.debug('Hello World! Checking file {}.'.format(filename))\n+\n+After invoking the coala's debugger it will step into the ``run()`` method of a\n+HelloWorldBear and help users to debug Bear code with passed settings.","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-06-16T16:24:14Z","lastEditedAt":null,"updatedAt":"2018-06-16T16:24:14Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTkwNjY2NQ==","url":"https://github.com/coala/coala/pull/5502#discussion_r195906665","bodyText":"Okay I am sure, we should clarify that 😅","diffHunk":"@@ -0,0 +1,77 @@\n+Debug Bears\n+===========\n+\n+This document provide a brief overview of coala's Debugging Interface.\n+The Debugging Interface will help users to debug Bear code and step through\n+it using pdb interface\n+\n+Usage of coala's Debugger\n+=========================\n+\n+Command Line Interface\n+----------------------\n+\n+Users can specify the bear they want to debug using ``--debug-bears``, i.e.\n+\n+.. code:: shell\n+\n+    $coala -b PEP8Bear,HelloWorldBear -f <filename> --debug-bears HelloWorldBear\n+\n+Below is the code given for a simple ``HelloWorldBear`` that prints a debug\n+message for each file:\n+\n+.. code:: python\n+\n+    import logging\n+\n+    from coalib.bears.LocalBear import LocalBear\n+\n+\n+    class HelloWorldBear(LocalBear):\n+        def run(self,\n+                filename,\n+                file):\n+            logging.info('Please follow newcomer guide.')\n+            logging.debug('Hello World! Checking file {}.'.format(filename))\n+\n+After invoking the coala's debugger it will step into the ``run()`` method of a\n+HelloWorldBear and help users to debug Bear code with passed settings.\n+\n+If bear names are not specified for ``--debug-bears`` then it will by\n+default debug all the bears passed through ``--bears`` or ``-b`` argument.\n+\n+.. code:: shell\n+\n+    $ coala --bears HelloWorldBear -files <filename> --debug-bears\n+\n+.. note::\n+\n+    A bear may depend on results from different bears. The debugger will debug\n+    all bears on which a bear is dependent on as well.","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-06-16T16:24:47Z","lastEditedAt":null,"updatedAt":"2018-06-16T16:24:47Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTkwNjY4NA==","url":"https://github.com/coala/coala/pull/5502#discussion_r195906684","bodyText":"Users can specify to debug bears using a .coafile\n\nI think that sounds a bit better, otherwise that sounds like ./.coafile debug is possible :P","diffHunk":"@@ -0,0 +1,77 @@\n+Debug Bears\n+===========\n+\n+This document provide a brief overview of coala's Debugging Interface.\n+The Debugging Interface will help users to debug Bear code and step through\n+it using pdb interface\n+\n+Usage of coala's Debugger\n+=========================\n+\n+Command Line Interface\n+----------------------\n+\n+Users can specify the bear they want to debug using ``--debug-bears``, i.e.\n+\n+.. code:: shell\n+\n+    $coala -b PEP8Bear,HelloWorldBear -f <filename> --debug-bears HelloWorldBear\n+\n+Below is the code given for a simple ``HelloWorldBear`` that prints a debug\n+message for each file:\n+\n+.. code:: python\n+\n+    import logging\n+\n+    from coalib.bears.LocalBear import LocalBear\n+\n+\n+    class HelloWorldBear(LocalBear):\n+        def run(self,\n+                filename,\n+                file):\n+            logging.info('Please follow newcomer guide.')\n+            logging.debug('Hello World! Checking file {}.'.format(filename))\n+\n+After invoking the coala's debugger it will step into the ``run()`` method of a\n+HelloWorldBear and help users to debug Bear code with passed settings.\n+\n+If bear names are not specified for ``--debug-bears`` then it will by\n+default debug all the bears passed through ``--bears`` or ``-b`` argument.\n+\n+.. code:: shell\n+\n+    $ coala --bears HelloWorldBear -files <filename> --debug-bears\n+\n+.. note::\n+\n+    A bear may depend on results from different bears. The debugger will debug\n+    all bears on which a bear is dependent on as well.\n+\n+coafile\n+-------\n+\n+Users can debug bears using ``.coafile``:","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-06-16T16:25:37Z","lastEditedAt":null,"updatedAt":"2018-06-16T16:25:37Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTkwNzU3Nw==","url":"https://github.com/coala/coala/pull/5502#discussion_r195907577","bodyText":"This should go into the above proposed \"Details\" paragraph, as it's not directly related to the invocation of the debugger within a coafile;)","diffHunk":"@@ -0,0 +1,77 @@\n+Debug Bears\n+===========\n+\n+This document provide a brief overview of coala's Debugging Interface.\n+The Debugging Interface will help users to debug Bear code and step through\n+it using pdb interface\n+\n+Usage of coala's Debugger\n+=========================\n+\n+Command Line Interface\n+----------------------\n+\n+Users can specify the bear they want to debug using ``--debug-bears``, i.e.\n+\n+.. code:: shell\n+\n+    $coala -b PEP8Bear,HelloWorldBear -f <filename> --debug-bears HelloWorldBear\n+\n+Below is the code given for a simple ``HelloWorldBear`` that prints a debug\n+message for each file:\n+\n+.. code:: python\n+\n+    import logging\n+\n+    from coalib.bears.LocalBear import LocalBear\n+\n+\n+    class HelloWorldBear(LocalBear):\n+        def run(self,\n+                filename,\n+                file):\n+            logging.info('Please follow newcomer guide.')\n+            logging.debug('Hello World! Checking file {}.'.format(filename))\n+\n+After invoking the coala's debugger it will step into the ``run()`` method of a\n+HelloWorldBear and help users to debug Bear code with passed settings.\n+\n+If bear names are not specified for ``--debug-bears`` then it will by\n+default debug all the bears passed through ``--bears`` or ``-b`` argument.\n+\n+.. code:: shell\n+\n+    $ coala --bears HelloWorldBear -files <filename> --debug-bears\n+\n+.. note::\n+\n+    A bear may depend on results from different bears. The debugger will debug\n+    all bears on which a bear is dependent on as well.\n+\n+coafile\n+-------\n+\n+Users can debug bears using ``.coafile``:\n+\n+::\n+\n+    [all]\n+    bears = PEP8Bear,MypyBear\n+    files = <filename>\n+    debug_bears = PEP8Bear\n+\n+or\n+\n+::\n+\n+    [all]\n+    bears = PEP8Bear,MypyBear\n+    files = <filename>\n+    debug_bears = True\n+\n+.. note::\n+\n+    Pdb's quit-command (``q``) has been remapped so coala continues its\n+    normal execution without aborting. So, ``quit`` or `q` will first clear\n+    all the breakspoints then continue ( ``c`` or ``continue`` ) execution.","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNTU4NDY0MA==","createdAt":"2018-06-25T21:27:35Z","content":"THUMBS_UP","user":{"login":"RaiVaibhav","name":"Vaibhav Rai"}}],"createdAt":"2018-06-16T17:03:34Z","lastEditedAt":null,"updatedAt":"2018-06-16T17:03:34Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTkyNTc2MQ==","url":"https://github.com/coala/coala/pull/5502#discussion_r195925761","bodyText":"I have added that also in my code in the case where --debug-bears MyBear then Debugger will also debug the dependency Bear of MyBear. :P so for both the case it will debug :P","diffHunk":"@@ -0,0 +1,77 @@\n+Debug Bears\n+===========\n+\n+This document provide a brief overview of coala's Debugging Interface.\n+The Debugging Interface will help users to debug Bear code and step through\n+it using pdb interface\n+\n+Usage of coala's Debugger\n+=========================\n+\n+Command Line Interface\n+----------------------\n+\n+Users can specify the bear they want to debug using ``--debug-bears``, i.e.\n+\n+.. code:: shell\n+\n+    $coala -b PEP8Bear,HelloWorldBear -f <filename> --debug-bears HelloWorldBear\n+\n+Below is the code given for a simple ``HelloWorldBear`` that prints a debug\n+message for each file:\n+\n+.. code:: python\n+\n+    import logging\n+\n+    from coalib.bears.LocalBear import LocalBear\n+\n+\n+    class HelloWorldBear(LocalBear):\n+        def run(self,\n+                filename,\n+                file):\n+            logging.info('Please follow newcomer guide.')\n+            logging.debug('Hello World! Checking file {}.'.format(filename))\n+\n+After invoking the coala's debugger it will step into the ``run()`` method of a\n+HelloWorldBear and help users to debug Bear code with passed settings.\n+\n+If bear names are not specified for ``--debug-bears`` then it will by\n+default debug all the bears passed through ``--bears`` or ``-b`` argument.\n+\n+.. code:: shell\n+\n+    $ coala --bears HelloWorldBear -files <filename> --debug-bears\n+\n+.. note::\n+\n+    A bear may depend on results from different bears. The debugger will debug\n+    all bears on which a bear is dependent on as well.","author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNTY0NTc3NA==","createdAt":"2018-06-26T21:12:19Z","content":"THUMBS_UP","user":{"login":"Makman2","name":"Mischa Krüger"}}],"createdAt":"2018-06-17T11:08:09Z","lastEditedAt":null,"updatedAt":"2018-06-17T11:08:09Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5ODI5NjczNQ==","url":"https://github.com/coala/coala/pull/5502#discussion_r198296735","bodyText":"provides","diffHunk":"@@ -0,0 +1,78 @@\n+Debug Bears\n+===========\n+\n+This document provide a brief overview of coala's Debugging Interface.","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-06-26T21:02:59Z","lastEditedAt":null,"updatedAt":"2018-06-26T21:02:59Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5ODI5Njc3OQ==","url":"https://github.com/coala/coala/pull/5502#discussion_r198296779","bodyText":"brief :)","diffHunk":"@@ -0,0 +1,78 @@\n+Debug Bears\n+===========\n+\n+This document provide a brief overview of coala's Debugging Interface.","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-06-26T21:03:09Z","lastEditedAt":null,"updatedAt":"2018-06-26T21:03:09Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5ODI5Njk4Mg==","url":"https://github.com/coala/coala/pull/5502#discussion_r198296982","bodyText":"of a bear\nas soon as a bear","diffHunk":"@@ -0,0 +1,78 @@\n+Debug Bears\n+===========\n+\n+This document provide a brief overview of coala's Debugging Interface.\n+The Debugging Interface will help users to debug Bear code and step through\n+it using the pdb interface.\n+\n+Details\n+-------\n+\n+After invoking coala's debugger it will step into the ``run()`` method of\n+bear regardless of using ``yield`` or not and will step out as soon as bear","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-06-26T21:04:02Z","lastEditedAt":null,"updatedAt":"2018-06-26T21:04:02Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5ODI5NzA3Ng==","url":"https://github.com/coala/coala/pull/5502#discussion_r198297076","bodyText":"double backticks for q","diffHunk":"@@ -0,0 +1,78 @@\n+Debug Bears\n+===========\n+\n+This document provide a brief overview of coala's Debugging Interface.\n+The Debugging Interface will help users to debug Bear code and step through\n+it using the pdb interface.\n+\n+Details\n+-------\n+\n+After invoking coala's debugger it will step into the ``run()`` method of\n+bear regardless of using ``yield`` or not and will step out as soon as bear\n+finish analysis.\n+\n+.. note::\n+\n+    Pdb's quit-command (``q``) has been remapped so coala continues its\n+    normal execution without aborting. So, ``quit`` or `q` will first clear","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-06-26T21:04:21Z","lastEditedAt":null,"updatedAt":"2018-06-26T21:04:21Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5ODI5NzgwOQ==","url":"https://github.com/coala/coala/pull/5502#discussion_r198297809","bodyText":"--> breakspoints\n--> all the breakpoints and then continue execution\nI would also remove the \"(c or continue)\" part, you are describing the q command, and suddenly you are mentioning the c command :)","diffHunk":"@@ -0,0 +1,78 @@\n+Debug Bears\n+===========\n+\n+This document provide a brief overview of coala's Debugging Interface.\n+The Debugging Interface will help users to debug Bear code and step through\n+it using the pdb interface.\n+\n+Details\n+-------\n+\n+After invoking coala's debugger it will step into the ``run()`` method of\n+bear regardless of using ``yield`` or not and will step out as soon as bear\n+finish analysis.\n+\n+.. note::\n+\n+    Pdb's quit-command (``q``) has been remapped so coala continues its\n+    normal execution without aborting. So, ``quit`` or `q` will first clear\n+    all the breakspoints then continue ( ``c`` or ``continue`` ) execution.","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-06-26T21:06:40Z","lastEditedAt":null,"updatedAt":"2018-06-26T21:06:40Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5ODI5ODk3OQ==","url":"https://github.com/coala/coala/pull/5502#discussion_r198298979","bodyText":"hm earlier that looked like that there would be more information here 😅 So the text isn't really worth the \"Details\" paragraph :P Just remove this paragraph header completely, so the overview text above flows directly into your \"details\" here :P","diffHunk":"@@ -0,0 +1,78 @@\n+Debug Bears\n+===========\n+\n+This document provide a brief overview of coala's Debugging Interface.\n+The Debugging Interface will help users to debug Bear code and step through\n+it using the pdb interface.\n+\n+Details\n+-------","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-06-26T21:10:41Z","lastEditedAt":null,"updatedAt":"2018-06-26T21:10:41Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5ODI5OTAzMg==","url":"https://github.com/coala/coala/pull/5502#discussion_r198299032","bodyText":"maybe just \"Usage\"?","diffHunk":"@@ -0,0 +1,78 @@\n+Debug Bears\n+===========\n+\n+This document provide a brief overview of coala's Debugging Interface.\n+The Debugging Interface will help users to debug Bear code and step through\n+it using the pdb interface.\n+\n+Details\n+-------\n+\n+After invoking coala's debugger it will step into the ``run()`` method of\n+bear regardless of using ``yield`` or not and will step out as soon as bear\n+finish analysis.\n+\n+.. note::\n+\n+    Pdb's quit-command (``q``) has been remapped so coala continues its\n+    normal execution without aborting. So, ``quit`` or `q` will first clear\n+    all the breakspoints then continue ( ``c`` or ``continue`` ) execution.\n+\n+Usage of coala's Debugger","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-06-26T21:10:48Z","lastEditedAt":null,"updatedAt":"2018-06-26T21:10:48Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5ODI5OTM1MQ==","url":"https://github.com/coala/coala/pull/5502#discussion_r198299351","bodyText":"yield or return something. I believe I already mentioned that I consider bears returning None to be invalid / buggy bears :) The nextgen core will enforce that bugginess-attitude for bears that don't return iterables :)","diffHunk":"@@ -0,0 +1,78 @@\n+Debug Bears\n+===========\n+\n+This document provide a brief overview of coala's Debugging Interface.\n+The Debugging Interface will help users to debug Bear code and step through\n+it using the pdb interface.\n+\n+Details\n+-------\n+\n+After invoking coala's debugger it will step into the ``run()`` method of\n+bear regardless of using ``yield`` or not and will step out as soon as bear\n+finish analysis.\n+\n+.. note::\n+\n+    Pdb's quit-command (``q``) has been remapped so coala continues its\n+    normal execution without aborting. So, ``quit`` or `q` will first clear\n+    all the breakspoints then continue ( ``c`` or ``continue`` ) execution.\n+\n+Usage of coala's Debugger\n+=========================\n+\n+Command Line Interface\n+----------------------\n+\n+Users can specify the bear they want to debug using ``--debug-bears``, i.e.\n+\n+.. code:: shell\n+\n+    $coala -b PEP8Bear,HelloWorldBear -f <filename> --debug-bears HelloWorldBear\n+\n+Below is the code given for a simple ``HelloWorldBear`` that prints a debug\n+message for each file:\n+\n+.. code:: python\n+\n+    import logging\n+\n+    from coalib.bears.LocalBear import LocalBear\n+\n+\n+    class HelloWorldBear(LocalBear):\n+        def run(self, filename, file):\n+            logging.debug('Hello World! Checking file {}.'.format(filename))","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-06-26T21:12:00Z","lastEditedAt":null,"updatedAt":"2018-06-26T21:12:00Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5ODI5OTczNg==","url":"https://github.com/coala/coala/pull/5502#discussion_r198299736","bodyText":"And maybe move it to the paragraph above, and maybe \"simulate\" a debug session, by explaining where the bear is exactly entered, and how it steps through code. This example one is not immediately related to the usage via CLI 👍","diffHunk":"@@ -0,0 +1,78 @@\n+Debug Bears\n+===========\n+\n+This document provide a brief overview of coala's Debugging Interface.\n+The Debugging Interface will help users to debug Bear code and step through\n+it using the pdb interface.\n+\n+Details\n+-------\n+\n+After invoking coala's debugger it will step into the ``run()`` method of\n+bear regardless of using ``yield`` or not and will step out as soon as bear\n+finish analysis.\n+\n+.. note::\n+\n+    Pdb's quit-command (``q``) has been remapped so coala continues its\n+    normal execution without aborting. So, ``quit`` or `q` will first clear\n+    all the breakspoints then continue ( ``c`` or ``continue`` ) execution.\n+\n+Usage of coala's Debugger\n+=========================\n+\n+Command Line Interface\n+----------------------\n+\n+Users can specify the bear they want to debug using ``--debug-bears``, i.e.\n+\n+.. code:: shell\n+\n+    $coala -b PEP8Bear,HelloWorldBear -f <filename> --debug-bears HelloWorldBear\n+\n+Below is the code given for a simple ``HelloWorldBear`` that prints a debug\n+message for each file:\n+\n+.. code:: python\n+\n+    import logging\n+\n+    from coalib.bears.LocalBear import LocalBear\n+\n+\n+    class HelloWorldBear(LocalBear):\n+        def run(self, filename, file):\n+            logging.debug('Hello World! Checking file {}.'.format(filename))","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-06-26T21:13:14Z","lastEditedAt":null,"updatedAt":"2018-06-26T21:13:14Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5ODQzNzIyOQ==","url":"https://github.com/coala/coala/pull/5502#discussion_r198437229","bodyText":"I think moving it above will become more confusing as I am telling how to enable debugger on HelloWorldBear through CLI i.e.,\n$coala -b PEP8Bear,HelloWorldBear -f <filename> --debug-bears HelloWorldBear but If I moved the code of HelloWorldBear to above para then I first have to tell how to enable debugger and then tell how it will work or move through it.\nI think it will better If I add more detail below 👍","diffHunk":"@@ -0,0 +1,78 @@\n+Debug Bears\n+===========\n+\n+This document provide a brief overview of coala's Debugging Interface.\n+The Debugging Interface will help users to debug Bear code and step through\n+it using the pdb interface.\n+\n+Details\n+-------\n+\n+After invoking coala's debugger it will step into the ``run()`` method of\n+bear regardless of using ``yield`` or not and will step out as soon as bear\n+finish analysis.\n+\n+.. note::\n+\n+    Pdb's quit-command (``q``) has been remapped so coala continues its\n+    normal execution without aborting. So, ``quit`` or `q` will first clear\n+    all the breakspoints then continue ( ``c`` or ``continue`` ) execution.\n+\n+Usage of coala's Debugger\n+=========================\n+\n+Command Line Interface\n+----------------------\n+\n+Users can specify the bear they want to debug using ``--debug-bears``, i.e.\n+\n+.. code:: shell\n+\n+    $coala -b PEP8Bear,HelloWorldBear -f <filename> --debug-bears HelloWorldBear\n+\n+Below is the code given for a simple ``HelloWorldBear`` that prints a debug\n+message for each file:\n+\n+.. code:: python\n+\n+    import logging\n+\n+    from coalib.bears.LocalBear import LocalBear\n+\n+\n+    class HelloWorldBear(LocalBear):\n+        def run(self, filename, file):\n+            logging.debug('Hello World! Checking file {}.'.format(filename))","author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"reactions":[],"createdAt":"2018-06-27T10:02:46Z","lastEditedAt":"2018-06-27T10:04:10Z","updatedAt":"2018-06-27T10:04:10Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5OTk0NTM1Ng==","url":"https://github.com/coala/coala/pull/5502#discussion_r199945356","bodyText":"an overview","diffHunk":"@@ -0,0 +1,123 @@\n+Debug Bears\n+===========\n+\n+This document provides a overview of coala's Debugging Interface.","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-07-03T20:47:22Z","lastEditedAt":null,"updatedAt":"2018-07-03T20:47:22Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5OTk0NTY1Ng==","url":"https://github.com/coala/coala/pull/5502#discussion_r199945656","bodyText":"and then","diffHunk":"@@ -0,0 +1,123 @@\n+Debug Bears\n+===========\n+\n+This document provides a overview of coala's Debugging Interface.\n+The Debugging Interface will help users to debug Bear code and step through\n+it using the pdb interface.\n+\n+After invoking coala's debugger it will step into the ``run()`` method of a\n+bear regardless of using ``yield`` or not and will step out as soon as a bear\n+finish analysis.\n+\n+.. note::\n+\n+    Pdb's quit-command (``q``) has been remapped so coala continues its\n+    normal execution without aborting. So, ``quit`` or ``q`` will first clear\n+    all breakpoints then continue execution.","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-07-03T20:48:44Z","lastEditedAt":null,"updatedAt":"2018-07-03T20:48:44Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5OTk0NzI0MA==","url":"https://github.com/coala/coala/pull/5502#discussion_r199947240","bodyText":"I told you to move those parts that show how the debugger itself behaves to the main section above^^ That shouldn't stay inside Usage -> Command Line Interface.","diffHunk":"@@ -0,0 +1,123 @@\n+Debug Bears\n+===========\n+\n+This document provides a overview of coala's Debugging Interface.\n+The Debugging Interface will help users to debug Bear code and step through\n+it using the pdb interface.\n+\n+After invoking coala's debugger it will step into the ``run()`` method of a\n+bear regardless of using ``yield`` or not and will step out as soon as a bear\n+finish analysis.\n+\n+.. note::\n+\n+    Pdb's quit-command (``q``) has been remapped so coala continues its\n+    normal execution without aborting. So, ``quit`` or ``q`` will first clear\n+    all breakpoints then continue execution.\n+\n+Usage\n+-----\n+\n+Command Line Interface\n+^^^^^^^^^^^^^^^^^^^^^^\n+\n+Users can specify the bear they want to debug using ``--debug-bears``, i.e.\n+\n+.. code:: shell\n+\n+    $coala -b PEP8Bear,HelloWorldBear -f <filename> --debug-bears HelloWorldBear\n+\n+Below is the code given for a simple ``HelloWorldBear`` that prints a debug\n+message for each file and display the passed information i.e.,\n+\"A HelloworldBear.\" message.\n+\n+.. code:: python\n+\n+    import logging\n+\n+    from coalib.bears.LocalBear import LocalBear\n+\n+\n+    class HelloWorldBear(LocalBear):\n+        def run(self, filename, file):\n+            logging.debug('Hello World! Checking file {}.'.\n+                          format(filename))\n+\n+            yield self.new_result(message=\"A HelloworldBear.\",\n+                                  file=filename)\n+\n+After invoking debugger will step into ``run()`` method using\n+pdb ``runcall()`` i.e.,\n+\n+::\n+\n+    [DEBUG][15:58:27] Platform Linux -- Python 3.6.5, coalib\n+    0.12.0.dev99999999999999\n+    Executing section cli...\n+    [DEBUG][15:58:27] Files that will be checked:\n+    /home/Voldemort/test/mytest.py\n+    [DEBUG][15:58:27] coala is run only on changed files, bears' log messages\n+    from previous runs may not appear. You may use the `--flush-cache` flag to\n+    see them.\n+    [DEBUG][15:58:27] Running bear HelloWorldBear...\n+    > /home/Voldemort/coala-bears/bears/general/HelloWorldBear.py(8)run()\n+    -> logging.debug('Hello World! Checking file {}.'.\n+    (Pdb) l\n+    3   from coalib.bears.LocalBear import LocalBear\n+    4\n+    5\n+    6   class HelloWorldBear(LocalBear):\n+    7       def run(self, filename, file):\n+    8  ->           logging.debug('Hello World! Checking file {}.'.\n+    9                         format(filename))\n+    10\n+    11              yield self.new_result(message=\"A HelloworldBear.\",\n+    12                                    file=filename)\n+    [EOF]\n+    (Pdb) c\n+    [DEBUG][15:58:30] Hello World! Checking file /home/Voldemort/test/mytest.py.\n+    --Return--\n+    > /home/Voldemort/coala-bears/bears/general/HelloWorldBear.py(8)run()->None\n+    -> logging.debug('Hello World! Checking file {}.'.\n+    (Pdb) c\n+\n+    mytest.py\n+    **** HelloWorldBear [Section: cli | Severity: NORMAL] ****\n+    !    ! A HelloworldBear.\n+    [    ] *0. Do (N)othing\n+    [    ]  1. (O)pen file\n+    [    ]  2. Add (I)gnore comment\n+    [    ] Enter number (Ctrl-D to exit):","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNTk2NDI3NQ==","createdAt":"2018-07-03T21:59:15Z","content":"THUMBS_UP","user":{"login":"RaiVaibhav","name":"Vaibhav Rai"}}],"createdAt":"2018-07-03T20:55:57Z","lastEditedAt":null,"updatedAt":"2018-07-03T20:55:57Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5OTk1NzM1Mg==","url":"https://github.com/coala/coala/pull/5502#discussion_r199957352","bodyText":"Yaa I have also there #5502 (comment)","diffHunk":"@@ -0,0 +1,123 @@\n+Debug Bears\n+===========\n+\n+This document provides a overview of coala's Debugging Interface.\n+The Debugging Interface will help users to debug Bear code and step through\n+it using the pdb interface.\n+\n+After invoking coala's debugger it will step into the ``run()`` method of a\n+bear regardless of using ``yield`` or not and will step out as soon as a bear\n+finish analysis.\n+\n+.. note::\n+\n+    Pdb's quit-command (``q``) has been remapped so coala continues its\n+    normal execution without aborting. So, ``quit`` or ``q`` will first clear\n+    all breakpoints then continue execution.\n+\n+Usage\n+-----\n+\n+Command Line Interface\n+^^^^^^^^^^^^^^^^^^^^^^\n+\n+Users can specify the bear they want to debug using ``--debug-bears``, i.e.\n+\n+.. code:: shell\n+\n+    $coala -b PEP8Bear,HelloWorldBear -f <filename> --debug-bears HelloWorldBear\n+\n+Below is the code given for a simple ``HelloWorldBear`` that prints a debug\n+message for each file and display the passed information i.e.,\n+\"A HelloworldBear.\" message.\n+\n+.. code:: python\n+\n+    import logging\n+\n+    from coalib.bears.LocalBear import LocalBear\n+\n+\n+    class HelloWorldBear(LocalBear):\n+        def run(self, filename, file):\n+            logging.debug('Hello World! Checking file {}.'.\n+                          format(filename))\n+\n+            yield self.new_result(message=\"A HelloworldBear.\",\n+                                  file=filename)\n+\n+After invoking debugger will step into ``run()`` method using\n+pdb ``runcall()`` i.e.,\n+\n+::\n+\n+    [DEBUG][15:58:27] Platform Linux -- Python 3.6.5, coalib\n+    0.12.0.dev99999999999999\n+    Executing section cli...\n+    [DEBUG][15:58:27] Files that will be checked:\n+    /home/Voldemort/test/mytest.py\n+    [DEBUG][15:58:27] coala is run only on changed files, bears' log messages\n+    from previous runs may not appear. You may use the `--flush-cache` flag to\n+    see them.\n+    [DEBUG][15:58:27] Running bear HelloWorldBear...\n+    > /home/Voldemort/coala-bears/bears/general/HelloWorldBear.py(8)run()\n+    -> logging.debug('Hello World! Checking file {}.'.\n+    (Pdb) l\n+    3   from coalib.bears.LocalBear import LocalBear\n+    4\n+    5\n+    6   class HelloWorldBear(LocalBear):\n+    7       def run(self, filename, file):\n+    8  ->           logging.debug('Hello World! Checking file {}.'.\n+    9                         format(filename))\n+    10\n+    11              yield self.new_result(message=\"A HelloworldBear.\",\n+    12                                    file=filename)\n+    [EOF]\n+    (Pdb) c\n+    [DEBUG][15:58:30] Hello World! Checking file /home/Voldemort/test/mytest.py.\n+    --Return--\n+    > /home/Voldemort/coala-bears/bears/general/HelloWorldBear.py(8)run()->None\n+    -> logging.debug('Hello World! Checking file {}.'.\n+    (Pdb) c\n+\n+    mytest.py\n+    **** HelloWorldBear [Section: cli | Severity: NORMAL] ****\n+    !    ! A HelloworldBear.\n+    [    ] *0. Do (N)othing\n+    [    ]  1. (O)pen file\n+    [    ]  2. Add (I)gnore comment\n+    [    ] Enter number (Ctrl-D to exit):","author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"reactions":[],"createdAt":"2018-07-03T21:37:09Z","lastEditedAt":null,"updatedAt":"2018-07-03T21:37:09Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5OTk1NzUwMg==","url":"https://github.com/coala/coala/pull/5502#discussion_r199957502","bodyText":"Nvm I will move this part above 👍","diffHunk":"@@ -0,0 +1,123 @@\n+Debug Bears\n+===========\n+\n+This document provides a overview of coala's Debugging Interface.\n+The Debugging Interface will help users to debug Bear code and step through\n+it using the pdb interface.\n+\n+After invoking coala's debugger it will step into the ``run()`` method of a\n+bear regardless of using ``yield`` or not and will step out as soon as a bear\n+finish analysis.\n+\n+.. note::\n+\n+    Pdb's quit-command (``q``) has been remapped so coala continues its\n+    normal execution without aborting. So, ``quit`` or ``q`` will first clear\n+    all breakpoints then continue execution.\n+\n+Usage\n+-----\n+\n+Command Line Interface\n+^^^^^^^^^^^^^^^^^^^^^^\n+\n+Users can specify the bear they want to debug using ``--debug-bears``, i.e.\n+\n+.. code:: shell\n+\n+    $coala -b PEP8Bear,HelloWorldBear -f <filename> --debug-bears HelloWorldBear\n+\n+Below is the code given for a simple ``HelloWorldBear`` that prints a debug\n+message for each file and display the passed information i.e.,\n+\"A HelloworldBear.\" message.\n+\n+.. code:: python\n+\n+    import logging\n+\n+    from coalib.bears.LocalBear import LocalBear\n+\n+\n+    class HelloWorldBear(LocalBear):\n+        def run(self, filename, file):\n+            logging.debug('Hello World! Checking file {}.'.\n+                          format(filename))\n+\n+            yield self.new_result(message=\"A HelloworldBear.\",\n+                                  file=filename)\n+\n+After invoking debugger will step into ``run()`` method using\n+pdb ``runcall()`` i.e.,\n+\n+::\n+\n+    [DEBUG][15:58:27] Platform Linux -- Python 3.6.5, coalib\n+    0.12.0.dev99999999999999\n+    Executing section cli...\n+    [DEBUG][15:58:27] Files that will be checked:\n+    /home/Voldemort/test/mytest.py\n+    [DEBUG][15:58:27] coala is run only on changed files, bears' log messages\n+    from previous runs may not appear. You may use the `--flush-cache` flag to\n+    see them.\n+    [DEBUG][15:58:27] Running bear HelloWorldBear...\n+    > /home/Voldemort/coala-bears/bears/general/HelloWorldBear.py(8)run()\n+    -> logging.debug('Hello World! Checking file {}.'.\n+    (Pdb) l\n+    3   from coalib.bears.LocalBear import LocalBear\n+    4\n+    5\n+    6   class HelloWorldBear(LocalBear):\n+    7       def run(self, filename, file):\n+    8  ->           logging.debug('Hello World! Checking file {}.'.\n+    9                         format(filename))\n+    10\n+    11              yield self.new_result(message=\"A HelloworldBear.\",\n+    12                                    file=filename)\n+    [EOF]\n+    (Pdb) c\n+    [DEBUG][15:58:30] Hello World! Checking file /home/Voldemort/test/mytest.py.\n+    --Return--\n+    > /home/Voldemort/coala-bears/bears/general/HelloWorldBear.py(8)run()->None\n+    -> logging.debug('Hello World! Checking file {}.'.\n+    (Pdb) c\n+\n+    mytest.py\n+    **** HelloWorldBear [Section: cli | Severity: NORMAL] ****\n+    !    ! A HelloworldBear.\n+    [    ] *0. Do (N)othing\n+    [    ]  1. (O)pen file\n+    [    ]  2. Add (I)gnore comment\n+    [    ] Enter number (Ctrl-D to exit):","author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"reactions":[],"createdAt":"2018-07-03T21:37:54Z","lastEditedAt":null,"updatedAt":"2018-07-03T21:37:54Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMDA5NTI2Ng==","url":"https://github.com/coala/coala/pull/5502#discussion_r200095266","bodyText":"the debugger, the bear.","diffHunk":"@@ -0,0 +1,122 @@\n+Debug Bears\n+===========\n+\n+This document provides an overview of coala's Debugging Interface.\n+The Debugging Interface will help users to debug Bear code and step through\n+it using the pdb interface.\n+\n+After invoking coala's debugger it will step into the ``run()`` method of a\n+bear regardless of using ``yield`` or not and will step out as soon as a bear\n+finish analysis.\n+\n+Below is the code given for a simple ``HelloWorldBear`` that prints a debug\n+message for each file and yield out a message \"A HelloworldBear\".\n+\n+.. code:: python\n+\n+    import logging\n+\n+    from coalib.bears.LocalBear import LocalBear\n+\n+\n+    class HelloWorldBear(LocalBear):\n+        def run(self, filename, file):\n+            logging.debug('Hello World! Checking file {}.'.\n+                          format(filename))\n+\n+            yield self.new_result(message=\"A HelloworldBear\",\n+                                  file=filename)\n+\n+After invoking, debugger will step into ``run()`` method of bear using pdb","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-07-04T11:20:02Z","lastEditedAt":null,"updatedAt":"2018-07-04T11:20:02Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMDA5NTM1OA==","url":"https://github.com/coala/coala/pull/5502#discussion_r200095358","bodyText":"Implementation detail ;) I would rather mention that it also exits again as soon as run() is left.","diffHunk":"@@ -0,0 +1,122 @@\n+Debug Bears\n+===========\n+\n+This document provides an overview of coala's Debugging Interface.\n+The Debugging Interface will help users to debug Bear code and step through\n+it using the pdb interface.\n+\n+After invoking coala's debugger it will step into the ``run()`` method of a\n+bear regardless of using ``yield`` or not and will step out as soon as a bear\n+finish analysis.\n+\n+Below is the code given for a simple ``HelloWorldBear`` that prints a debug\n+message for each file and yield out a message \"A HelloworldBear\".\n+\n+.. code:: python\n+\n+    import logging\n+\n+    from coalib.bears.LocalBear import LocalBear\n+\n+\n+    class HelloWorldBear(LocalBear):\n+        def run(self, filename, file):\n+            logging.debug('Hello World! Checking file {}.'.\n+                          format(filename))\n+\n+            yield self.new_result(message=\"A HelloworldBear\",\n+                                  file=filename)\n+\n+After invoking, debugger will step into ``run()`` method of bear using pdb\n+``runcall()`` method i.e.","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-07-04T11:20:21Z","lastEditedAt":null,"updatedAt":"2018-07-04T11:20:21Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMDA5NTc3Nw==","url":"https://github.com/coala/coala/pull/5502#discussion_r200095777","bodyText":"Instead of \"i.e.\", I would finish the sentence, and put below a sentence like\n... method.\n\nFor example, a debug session looks like this:","diffHunk":"@@ -0,0 +1,122 @@\n+Debug Bears\n+===========\n+\n+This document provides an overview of coala's Debugging Interface.\n+The Debugging Interface will help users to debug Bear code and step through\n+it using the pdb interface.\n+\n+After invoking coala's debugger it will step into the ``run()`` method of a\n+bear regardless of using ``yield`` or not and will step out as soon as a bear\n+finish analysis.\n+\n+Below is the code given for a simple ``HelloWorldBear`` that prints a debug\n+message for each file and yield out a message \"A HelloworldBear\".\n+\n+.. code:: python\n+\n+    import logging\n+\n+    from coalib.bears.LocalBear import LocalBear\n+\n+\n+    class HelloWorldBear(LocalBear):\n+        def run(self, filename, file):\n+            logging.debug('Hello World! Checking file {}.'.\n+                          format(filename))\n+\n+            yield self.new_result(message=\"A HelloworldBear\",\n+                                  file=filename)\n+\n+After invoking, debugger will step into ``run()`` method of bear using pdb\n+``runcall()`` method i.e.","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-07-04T11:21:35Z","lastEditedAt":null,"updatedAt":"2018-07-04T11:21:35Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMDA5NjAzMQ==","url":"https://github.com/coala/coala/pull/5502#discussion_r200096031","bodyText":"Not sure, maybe we should put that above your big example? Then it's not missed by people so easily^^","diffHunk":"@@ -0,0 +1,122 @@\n+Debug Bears\n+===========\n+\n+This document provides an overview of coala's Debugging Interface.\n+The Debugging Interface will help users to debug Bear code and step through\n+it using the pdb interface.\n+\n+After invoking coala's debugger it will step into the ``run()`` method of a\n+bear regardless of using ``yield`` or not and will step out as soon as a bear\n+finish analysis.\n+\n+Below is the code given for a simple ``HelloWorldBear`` that prints a debug\n+message for each file and yield out a message \"A HelloworldBear\".\n+\n+.. code:: python\n+\n+    import logging\n+\n+    from coalib.bears.LocalBear import LocalBear\n+\n+\n+    class HelloWorldBear(LocalBear):\n+        def run(self, filename, file):\n+            logging.debug('Hello World! Checking file {}.'.\n+                          format(filename))\n+\n+            yield self.new_result(message=\"A HelloworldBear\",\n+                                  file=filename)\n+\n+After invoking, debugger will step into ``run()`` method of bear using pdb\n+``runcall()`` method i.e.\n+\n+::\n+\n+    [DEBUG][15:58:27] Platform Linux -- Python 3.6.5, coalib\n+    0.12.0.dev99999999999999\n+    Executing section cli...\n+    [DEBUG][15:58:27] Files that will be checked:\n+    /home/Voldemort/test/mytest.py\n+    [DEBUG][15:58:27] coala is run only on changed files, bears' log messages\n+    from previous runs may not appear. You may use the `--flush-cache` flag to\n+    see them.\n+    [DEBUG][15:58:27] Running bear HelloWorldBear...\n+    > /home/Voldemort/coala-bears/bears/general/HelloWorldBear.py(8)run()\n+    -> logging.debug('Hello World! Checking file {}.'.\n+    (Pdb) l\n+    3   from coalib.bears.LocalBear import LocalBear\n+    4\n+    5\n+    6   class HelloWorldBear(LocalBear):\n+    7       def run(self, filename, file):\n+    8  ->           logging.debug('Hello World! Checking file {}.'.\n+    9                         format(filename))\n+    10\n+    11              yield self.new_result(message=\"A HelloworldBear.\",\n+    12                                    file=filename)\n+    [EOF]\n+    (Pdb) c\n+    [DEBUG][15:58:30] Hello World! Checking file /home/Voldemort/test/mytest.py.\n+    --Return--\n+    > /home/Voldemort/coala-bears/bears/general/HelloWorldBear.py(8)run()->None\n+    -> logging.debug('Hello World! Checking file {}.'.\n+    (Pdb) c\n+\n+    mytest.py\n+    **** HelloWorldBear [Section: cli | Severity: NORMAL] ****\n+    !    ! A HelloworldBear\n+    [    ] *0. Do (N)othing\n+    [    ]  1. (O)pen file\n+    [    ]  2. Add (I)gnore comment\n+    [    ] Enter number (Ctrl-D to exit):\n+\n+.. note::\n+\n+    Pdb's quit-command (``q``) has been remapped so coala continues its\n+    normal execution without aborting. So, ``quit`` or ``q`` will first clear\n+    all breakpoints and then continue execution.","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-07-04T11:22:33Z","lastEditedAt":null,"updatedAt":"2018-07-04T11:22:33Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMDA5OTUzMw==","url":"https://github.com/coala/coala/pull/5502#discussion_r200099533","bodyText":"I would phrase it out so people immediately understand what effect debug_bears = True has ;) Like\nOr to debug all bears specified by ``bears`` setting:","diffHunk":"@@ -0,0 +1,122 @@\n+Debug Bears\n+===========\n+\n+This document provides an overview of coala's Debugging Interface.\n+The Debugging Interface will help users to debug Bear code and step through\n+it using the pdb interface.\n+\n+After invoking coala's debugger it will step into the ``run()`` method of a\n+bear regardless of using ``yield`` or not and will step out as soon as a bear\n+finish analysis.\n+\n+Below is the code given for a simple ``HelloWorldBear`` that prints a debug\n+message for each file and yield out a message \"A HelloworldBear\".\n+\n+.. code:: python\n+\n+    import logging\n+\n+    from coalib.bears.LocalBear import LocalBear\n+\n+\n+    class HelloWorldBear(LocalBear):\n+        def run(self, filename, file):\n+            logging.debug('Hello World! Checking file {}.'.\n+                          format(filename))\n+\n+            yield self.new_result(message=\"A HelloworldBear\",\n+                                  file=filename)\n+\n+After invoking, debugger will step into ``run()`` method of bear using pdb\n+``runcall()`` method i.e.\n+\n+::\n+\n+    [DEBUG][15:58:27] Platform Linux -- Python 3.6.5, coalib\n+    0.12.0.dev99999999999999\n+    Executing section cli...\n+    [DEBUG][15:58:27] Files that will be checked:\n+    /home/Voldemort/test/mytest.py\n+    [DEBUG][15:58:27] coala is run only on changed files, bears' log messages\n+    from previous runs may not appear. You may use the `--flush-cache` flag to\n+    see them.\n+    [DEBUG][15:58:27] Running bear HelloWorldBear...\n+    > /home/Voldemort/coala-bears/bears/general/HelloWorldBear.py(8)run()\n+    -> logging.debug('Hello World! Checking file {}.'.\n+    (Pdb) l\n+    3   from coalib.bears.LocalBear import LocalBear\n+    4\n+    5\n+    6   class HelloWorldBear(LocalBear):\n+    7       def run(self, filename, file):\n+    8  ->           logging.debug('Hello World! Checking file {}.'.\n+    9                         format(filename))\n+    10\n+    11              yield self.new_result(message=\"A HelloworldBear.\",\n+    12                                    file=filename)\n+    [EOF]\n+    (Pdb) c\n+    [DEBUG][15:58:30] Hello World! Checking file /home/Voldemort/test/mytest.py.\n+    --Return--\n+    > /home/Voldemort/coala-bears/bears/general/HelloWorldBear.py(8)run()->None\n+    -> logging.debug('Hello World! Checking file {}.'.\n+    (Pdb) c\n+\n+    mytest.py\n+    **** HelloWorldBear [Section: cli | Severity: NORMAL] ****\n+    !    ! A HelloworldBear\n+    [    ] *0. Do (N)othing\n+    [    ]  1. (O)pen file\n+    [    ]  2. Add (I)gnore comment\n+    [    ] Enter number (Ctrl-D to exit):\n+\n+.. note::\n+\n+    Pdb's quit-command (``q``) has been remapped so coala continues its\n+    normal execution without aborting. So, ``quit`` or ``q`` will first clear\n+    all breakpoints and then continue execution.\n+\n+Usage\n+-----\n+\n+Command Line Interface\n+^^^^^^^^^^^^^^^^^^^^^^\n+\n+Users can specify the bear they want to debug using ``--debug-bears``, i.e.\n+\n+.. code:: shell\n+\n+    $coala -b PEP8Bear,HelloWorldBear -f <filename> --debug-bears HelloWorldBear\n+\n+If bear names are not specified for ``--debug-bears`` then it will by\n+default debug all the bears passed through ``--bears`` or ``-b`` argument.\n+\n+.. code:: shell\n+\n+    $ coala --bears HelloWorldBear -files <filename> --debug-bears\n+\n+.. note::\n+\n+    A bear may depend on results from different bears. The debugger will debug\n+    all bears on which a bear is dependent on as well.\n+\n+coafile\n+^^^^^^^\n+\n+Users can specify to debug bears using a ``.coafile``:\n+\n+::\n+\n+    [all]\n+    bears = PEP8Bear,MypyBear\n+    files = <filename>\n+    debug_bears = PEP8Bear\n+\n+or","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-07-04T11:38:38Z","lastEditedAt":null,"updatedAt":"2018-07-04T11:38:38Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMDA5OTk5Mw==","url":"https://github.com/coala/coala/pull/5502#discussion_r200099993","bodyText":"I would put that below Testing Bears :)","diffHunk":"@@ -54,6 +54,7 @@ If you're trying to **use** coala, you should have a look at our\n    Writing Documentation <Developers/Writing_Documentation>\n    Executing Tests <Developers/Executing_Tests>\n    Useful Links <Developers/Useful_Links>\n+   Debug Bears <Developers/Debug_Bears>","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-07-04T11:40:59Z","lastEditedAt":null,"updatedAt":"2018-07-04T11:40:59Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM5NjAwODAzNg==","url":"https://github.com/coala/coala/pull/5502#issuecomment-396008036","bodyText":"This obviously should not be merged until the things in this document have been merged, like --debug-bears.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNDg2NDYyNw==","createdAt":"2018-06-10T03:41:31Z","content":"THUMBS_UP","user":{"login":"RaiVaibhav","name":"Vaibhav Rai"}}],"createdAt":"2018-06-10T00:08:10Z","lastEditedAt":null,"updatedAt":"2018-06-10T00:08:10Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM5Nzg0NjAyNQ==","url":"https://github.com/coala/coala/pull/5502#issuecomment-397846025","bodyText":"Note we have #4353 which is related to this type of docs.  Assigned.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-06-17T00:13:24Z","lastEditedAt":null,"updatedAt":"2018-06-17T00:13:24Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1528543802000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5503","number":5503,"title":".travis.yml: Add separate moban job","body":"Remove cloning of upstream setupmobans.\nUse stages, and allow moban to fail except\npushes to master.\nRelated to https://gitlab.com/coala/mobans/merge_requests/25\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":5,"createdAt":"2018-06-08T07:14:21Z","updatedAt":"2018-06-09T11:30:02Z","closedAt":"2018-06-09T11:29:49Z","state":"merged","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5503","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDM5NTkyODY0Mg==","url":"https://github.com/coala/coala/pull/5503#issuecomment-395928642","bodyText":"coala/coala-bears#2525 is the same change for bears repo.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNDg0NzY3MA==","createdAt":"2018-06-09T01:21:06Z","content":"THUMBS_UP","user":{"login":"sangamcse","name":"Sangam Kumar"}}],"createdAt":"2018-06-09T01:11:39Z","lastEditedAt":null,"updatedAt":"2018-06-09T01:11:39Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1533997044000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5504","number":5504,"title":"language: Add `string_delimiter_escape` to language definitions","body":"This adds characters used to escape delimiters/quotes\nfor each language in their respective language\ndefinitions.\nThis is part of Convert Bear To Aspects GSoC project.\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":10,"createdAt":"2018-06-08T10:08:14Z","updatedAt":"2018-08-11T14:17:24Z","closedAt":"2018-08-11T14:17:11Z","state":"merged","user":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4"},"owner":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4"},"assignee":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4"},"labels":[{"name":"area/aspects","color":"000000"},{"name":"area/documentation","color":"bfe5bf"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5504","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQxNjMzNw==","url":"https://github.com/coala/coala/pull/5504#discussion_r209416337","bodyText":"We can merge this if they all change to being dictionaries which describe how to escape each of the items in string_delimiters\nstring_delimiter_escape = {'\"': '\\\\\"'}","diffHunk":"@@ -19,3 +19,4 @@ class C:\n         '#undef', '#ifdef', '#ifndef', '#if', '#endif', '#else', '#elif',\n         '#line', '#pragma']\n     special_chars = list(r'+-*/.;\\,()[]{}\\=<>|&^~?%!')\n+    escape_quotes = '\\\"',","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzc4MzIzMQ==","createdAt":"2018-08-11T04:52:28Z","content":"THUMBS_UP","user":{"login":"pareksha","name":"Pareksha Manchanda"}}],"createdAt":"2018-08-11T04:44:32Z","lastEditedAt":"2018-08-11T05:08:35Z","updatedAt":"2018-08-11T05:08:35Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM5NjEzNDU0NQ==","url":"https://github.com/coala/coala/pull/5504#issuecomment-396134545","bodyText":"@jayvdb what I want this field to have is the escape_quotes by which I literally mean escaping the quote. Best illustrated with the example where printing \"This is \\\"cool\\\" in python and \"This is \"\"cool\"\"\" in Fortran both output This is \"cool\". So, basically \\\" in Python and \"\" both are used for escaping \" quotes. This is how both fields relate. Do let me now if you agree with me so that I can proceed or the design needs to change.\nOne more question, where to add the documentation for escape_quotes (Also let me know whether the name feels right to you)?","diffHunk":null,"author":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4","name":"Pareksha Manchanda"},"reactions":[],"createdAt":"2018-06-11T06:22:22Z","lastEditedAt":"2018-06-11T06:23:27Z","updatedAt":"2018-06-11T06:23:27Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQwMDIwMTA4NQ==","url":"https://github.com/coala/coala/pull/5504#issuecomment-400201085","bodyText":"Documentation should be done according to pep 257","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-06-26T07:00:31Z","lastEditedAt":null,"updatedAt":"2018-06-26T07:00:31Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQwMTAwNjkyMg==","url":"https://github.com/coala/coala/pull/5504#issuecomment-401006922","bodyText":"Blocked on a decent language definition for at least Tcl, possibly m4 and VB #5578 , so that we can better see how escaping works.  Also we're finding lots of implicit limitations, which maybe can not be solved easily, but we can make them explicit limitations so we know we cant support certain languages due to properties of the language. (And this will also help the quickstart green project, as they can skip relevant bears for languages which it is unable to parse at all)","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-06-28T11:43:27Z","lastEditedAt":null,"updatedAt":"2018-06-28T11:43:27Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1534562396000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5505","number":5505,"title":"LocalBearTestHelper.py: Inherit from `BaseTestHelper`","body":"This adds BaseTestHelper class, base class of all bears'\ntests, to the LocalBearTestHelper.\nRelated to https://gitlab.com/coala/GSoC/GSoC-2018/issues/332\nCloses #5501","comments":3,"createdAt":"2018-06-08T18:31:22Z","updatedAt":"2018-08-18T03:19:56Z","closedAt":null,"state":"open","user":{"login":"sangamcse","avatarUrl":"https://avatars2.githubusercontent.com/u/26381717?v=4"},"owner":{"login":"sangamcse","avatarUrl":"https://avatars2.githubusercontent.com/u/26381717?v=4"},"assignee":{"login":"sangamcse","avatarUrl":"https://avatars2.githubusercontent.com/u/26381717?v=4"},"labels":[{"name":"area/tests","color":"bfd4f2"},{"name":"process/wip","color":"fbca04"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5505","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDc4NzAwMw==","url":"https://github.com/coala/coala/pull/5505#discussion_r194787003","bodyText":"this is a backwards incompatible change.\nall test classes in the bears, and anywhere else that has used LocalBearTestHelper, become broken if this is merged.  They all need to be rewritten, just like LocalBearTestHelper in this patch has needed to be completely rewritten.\nMost features of pytest that we want to use co-exist nicely with unittest classes.\nhttps://github.com/pytest-dev/pytest/blob/master/doc/en/unittest.rst#pytest-features-in-unittesttestcase-subclasses\nhttps://pypi.org/project/pytest-restrict/ explicitly supports unittest classes; that is what it is used for ... enforcing unittest classes when Django developers are using pytest, and should be using their customised Django unittest sub-classes.\nThat said, it is in the cEP (https://github.com/coala/cEPs/pull/149/files#diff-f29c16068974a5d9aff2fdeb6295bfdeR51), and we can deal with bears being broken while it is being patched, so this is feasible, but it is not desirable IMO without a good reason for why we are unnecessarily creating a breakage.","diffHunk":"@@ -101,7 +100,7 @@ def get_results(local_bear,\n         return bear_output\n \n \n-class LocalBearTestHelper(unittest.TestCase):\n+class LocalBearTestHelper(BaseTestHelper):","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-06-12T15:35:18Z","lastEditedAt":"2018-06-12T15:40:19Z","updatedAt":"2018-06-12T15:40:19Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDc5MjM0Mw==","url":"https://github.com/coala/coala/pull/5505#discussion_r194792343","bodyText":"Two of the features I find most useful, namely parametrization and fixtures, do not work with unittest. That's why we want to get rid of it.\nBut I see the difficulty of introducing this change into an existing test suite. @sangamcse do you think it's feasible to keep the unittest dependency for now and still use the base class?","diffHunk":"@@ -101,7 +100,7 @@ def get_results(local_bear,\n         return bear_output\n \n \n-class LocalBearTestHelper(unittest.TestCase):\n+class LocalBearTestHelper(BaseTestHelper):","author":{"login":"NiklasMM","avatarUrl":"https://avatars1.githubusercontent.com/u/1924002?v=4","name":"Niklas"},"reactions":[],"createdAt":"2018-06-12T15:49:09Z","lastEditedAt":null,"updatedAt":"2018-06-12T15:49:09Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDg1NTc5Mw==","url":"https://github.com/coala/coala/pull/5505#discussion_r194855793","bodyText":"In this case, only class name has changed which is done by adding Test as suffix to the class name. And all bears' tests has Test as suffix to their test class name\n\nThey all need to be rewritten, just like LocalBearTestHelper in this patch has needed to be completely rewritten.","diffHunk":"@@ -101,7 +100,7 @@ def get_results(local_bear,\n         return bear_output\n \n \n-class LocalBearTestHelper(unittest.TestCase):\n+class LocalBearTestHelper(BaseTestHelper):","author":{"login":"sangamcse","avatarUrl":"https://avatars2.githubusercontent.com/u/26381717?v=4","name":"Sangam Kumar"},"reactions":[],"createdAt":"2018-06-12T19:08:49Z","lastEditedAt":"2018-06-12T19:11:43Z","updatedAt":"2018-06-12T19:11:43Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDg1OTQwMw==","url":"https://github.com/coala/coala/pull/5505#discussion_r194859403","bodyText":"I tried testing coala-bears locally. All tests passed except MarkdownBear.\n\nall test classes in the bears, and anywhere else that has used LocalBearTestHelper, become broken if this is merged.","diffHunk":"@@ -101,7 +100,7 @@ def get_results(local_bear,\n         return bear_output\n \n \n-class LocalBearTestHelper(unittest.TestCase):\n+class LocalBearTestHelper(BaseTestHelper):","author":{"login":"sangamcse","avatarUrl":"https://avatars2.githubusercontent.com/u/26381717?v=4","name":"Sangam Kumar"},"reactions":[],"createdAt":"2018-06-12T19:22:24Z","lastEditedAt":null,"updatedAt":"2018-06-12T19:22:24Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDk2MjY2NA==","url":"https://github.com/coala/coala/pull/5505#discussion_r194962664","bodyText":"Another idea would be to deprecate the existing LocalBearTestHelper, leave it as it is now and create a new one, which is based on the new base class and can be rolled out step by step.","diffHunk":"@@ -101,7 +100,7 @@ def get_results(local_bear,\n         return bear_output\n \n \n-class LocalBearTestHelper(unittest.TestCase):\n+class LocalBearTestHelper(BaseTestHelper):","author":{"login":"NiklasMM","avatarUrl":"https://avatars1.githubusercontent.com/u/1924002?v=4","name":"Niklas"},"reactions":[],"createdAt":"2018-06-13T05:53:38Z","lastEditedAt":null,"updatedAt":"2018-06-13T05:53:38Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTAwMjI2Nw==","url":"https://github.com/coala/coala/pull/5505#discussion_r195002267","bodyText":"@jayvdb, you are right. I tried to test coala-bears by cloning this branch in another venv in my system. It collected 212 test items instead of 856 test items. So it will break coala-bears test if we go on directly with this changes.\n\nall test classes in the bears, and anywhere else that has used LocalBearTestHelper, become broken if this is merged.\n\nI agree with @NiklasMM. We can go on by creating new one, deprecating the existing LocalBearTestHelper if you all agree.","diffHunk":"@@ -101,7 +100,7 @@ def get_results(local_bear,\n         return bear_output\n \n \n-class LocalBearTestHelper(unittest.TestCase):\n+class LocalBearTestHelper(BaseTestHelper):","author":{"login":"sangamcse","avatarUrl":"https://avatars2.githubusercontent.com/u/26381717?v=4","name":"Sangam Kumar"},"reactions":[],"createdAt":"2018-06-13T08:52:19Z","lastEditedAt":null,"updatedAt":"2018-06-13T08:52:19Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTAxMDkzNA==","url":"https://github.com/coala/coala/pull/5505#discussion_r195010934","bodyText":"@Makman2, your opinion?","diffHunk":"@@ -101,7 +100,7 @@ def get_results(local_bear,\n         return bear_output\n \n \n-class LocalBearTestHelper(unittest.TestCase):\n+class LocalBearTestHelper(BaseTestHelper):","author":{"login":"sangamcse","avatarUrl":"https://avatars2.githubusercontent.com/u/26381717?v=4","name":"Sangam Kumar"},"reactions":[],"createdAt":"2018-06-13T09:17:25Z","lastEditedAt":null,"updatedAt":"2018-06-13T09:17:25Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTAxOTE2MQ==","url":"https://github.com/coala/coala/pull/5505#discussion_r195019161","bodyText":"@NiklasMM , fixtures do work, with a slightly different mechanism for some types of fixtures.\nsee https://github.com/pytest-dev/pytest/blob/master/doc/en/unittest.rst#mixing-pytest-fixtures-into-unittesttestcase-subclasses-using-marks\nand git grep fixture tests in coala-core repo.\nwrt parameterisation, and even fixtures, I didnt see the rationale given in the cEP for how those will be used to improve bear testing.  I would argue that https://github.com/wolever/parameterized is as good a solution which works well for all test frameworks.  We already have a complex set of pytest plugins, and already use testfixtures, so an additional test dependency isnt a new complexity problem.\nAnyway, my intention isnt to re-litigate that.  I am only commenting because of the huge breakage.\nLeaving the existing unittest class as-is, and deprecating it, will reduce the risk substantially.  And then at the end of the project the huge rewrite of bear tests can happen, and it wont matter if there are some bear tests which are not migrated to pytest-only style for reasons not yet predicted.\nIf the immediate goal is only to enforce a common test base class, that can be achieved by changing this class to inherit from both:\nclass LocalBearTestHelper(BaseTestHelper, unittest.TestCase):\n    ...","diffHunk":"@@ -101,7 +100,7 @@ def get_results(local_bear,\n         return bear_output\n \n \n-class LocalBearTestHelper(unittest.TestCase):\n+class LocalBearTestHelper(BaseTestHelper):","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNTA0MDc1MQ==","createdAt":"2018-06-13T16:42:36Z","content":"THUMBS_UP","user":{"login":"sangamcse","name":"Sangam Kumar"}}],"createdAt":"2018-06-13T09:43:44Z","lastEditedAt":null,"updatedAt":"2018-06-13T09:43:44Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTE4NzkwNA==","url":"https://github.com/coala/coala/pull/5505#discussion_r195187904","bodyText":"Due to pytest's assertion introspection we already get very good failure reports. This eliminates the need for custom messages in these assert statements.\nI'm not entirely sure, if that feature is enabled for unittest.TestCases. That's something you'll need to verify first.","diffHunk":"@@ -193,13 +171,12 @@ def check_invalidity(self,\n         :param create_tempfile:  Whether to save lines in tempfile if needed.\n         :param tempfile_kwargs:  Kwargs passed to tempfile.mkstemp().\n         \"\"\"\n+        assert isinstance(self, BaseTestHelper)\n         assert isinstance(self, unittest.TestCase)\n-        self.assertIsInstance(local_bear,\n-                              LocalBear,\n-                              msg='The given bear is not a local bear.')\n-        self.assertIsInstance(lines,\n-                              (list, tuple),\n-                              msg='The given lines are not a list.')\n+        assert isinstance(\n+            local_bear, LocalBear), 'The given bear is not a local bear.'\n+        assert isinstance(\n+            lines, (list, tuple)), 'The given lines are not a list.'","author":{"login":"NiklasMM","avatarUrl":"https://avatars1.githubusercontent.com/u/1924002?v=4","name":"Niklas"},"reactions":[],"createdAt":"2018-06-13T18:21:56Z","lastEditedAt":null,"updatedAt":"2018-06-13T18:21:56Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTE4ODAxNA==","url":"https://github.com/coala/coala/pull/5505#discussion_r195188014","bodyText":"assert len(bear_output) != 0","diffHunk":"@@ -210,7 +187,7 @@ def check_invalidity(self,\n                                   )\n         msg = (\"The local bear '{}' yields no result although it \"\n                'should.'.format(local_bear.__class__.__name__))\n-        self.assertNotEqual(len(bear_output), 0, msg=msg)\n+        assert not len(bear_output) == 0, msg","author":{"login":"NiklasMM","avatarUrl":"https://avatars1.githubusercontent.com/u/1924002?v=4","name":"Niklas"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNTA2MDU2OA==","createdAt":"2018-06-13T23:49:49Z","content":"THUMBS_UP","user":{"login":"jayvdb","name":"John Vandenberg"}}],"createdAt":"2018-06-13T18:22:17Z","lastEditedAt":null,"updatedAt":"2018-06-13T18:22:17Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTI2NzAzOQ==","url":"https://github.com/coala/coala/pull/5505#discussion_r195267039","bodyText":"just noting this was unused by bears repo, so no problem removing this.","diffHunk":"@@ -111,28 +111,6 @@ class LocalBearTestHelper(unittest.TestCase):\n     If you miss some methods, get in contact with us, we'll be happy to help!\n     \"\"\"\n \n-    def assertComparableObjectsEqual(self, observed_result, expected_result):","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-06-13T23:35:46Z","lastEditedAt":null,"updatedAt":"2018-06-13T23:35:46Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTI2NzUyMg==","url":"https://github.com/coala/coala/pull/5505#discussion_r195267522","bodyText":"please put message_base ... on a new line, so it is slightly easier to read.\nthis message change looks like it is harder to understand that the previous assertion message.","diffHunk":"@@ -78,19 +78,11 @@ def test_bad_assertComparableObjectsEqual(self):\n                                     file=fname)],\n                                    filename=fname,\n                                    create_tempfile=False)\n-        self.assertEqual('\\'LineCountTestBear\\' != \\'LineCountTestBea\\'\\n'\n-                         '- LineCountTestBear\\n'\n-                         '?                 -\\n'\n-                         '+ LineCountTestBea\\n'\n-                         ' : origin mismatch.\\n\\n'\n-                         '\\'This file has 3 lines.\\' != \\'This file has 2 '\n-                         'lines.\\'\\n'\n-                         '- This file has 3 lines.\\n'\n-                         '?               ^\\n'\n-                         '+ This file has 2 lines.\\n'\n-                         '?               ^\\n'\n-                         ' : message_base mismatch.\\n\\n',\n-                         str(cm.exception))\n+        self.assertEqual('origin mismatch: LineCountTestBear, This file has '\n+                         '3 lines. != LineCountTestBea, This file has 2 '\n+                         'lines.\\n\\nmessage_base mismatch: LineCountTestBear,'","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-06-13T23:39:32Z","lastEditedAt":null,"updatedAt":"2018-06-13T23:39:32Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTI2ODkwNw==","url":"https://github.com/coala/coala/pull/5505#discussion_r195268907","bodyText":"changing these to using assert ... is not part of \"Inherit from ...\" if this class also inherits from unittest.TestCase.\nSo you can investigate whether these are needed later.\nAlso rather than having custom asserts here, we can and should use arg annotations and our decororator which enforces those.  Also noted this in #5522 (comment)\nBut again, changes to these assertions is a functional change which doesnt need to be in the same commit as \"Inherit from ...\", and it does need a separate issue created where you show that the output can be improved.  As Niklas has said, pytest already gives very detailed information about any failures, and pytest does that even for unittest.TestCase subclasses, so any custom type error messages need to be better than pytest's output.","diffHunk":"@@ -193,13 +171,12 @@ def check_invalidity(self,\n         :param create_tempfile:  Whether to save lines in tempfile if needed.\n         :param tempfile_kwargs:  Kwargs passed to tempfile.mkstemp().\n         \"\"\"\n+        assert isinstance(self, BaseTestHelper)\n         assert isinstance(self, unittest.TestCase)\n-        self.assertIsInstance(local_bear,\n-                              LocalBear,\n-                              msg='The given bear is not a local bear.')\n-        self.assertIsInstance(lines,\n-                              (list, tuple),\n-                              msg='The given lines are not a list.')\n+        assert isinstance(\n+            local_bear, LocalBear), 'The given bear is not a local bear.'\n+        assert isinstance(\n+            lines, (list, tuple)), 'The given lines are not a list.'","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-06-13T23:49:40Z","lastEditedAt":null,"updatedAt":"2018-06-13T23:49:40Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTI2ODk5Nw==","url":"https://github.com/coala/coala/pull/5505#discussion_r195268997","bodyText":"as above.  the way to improve these is via annotations.","diffHunk":"@@ -242,16 +219,14 @@ def check_results(self,\n                                  from which settings will be created that will\n                                  be made available for the tested bear.\n         \"\"\"\n+        assert isinstance(self, BaseTestHelper)\n         assert isinstance(self, unittest.TestCase)\n-        self.assertIsInstance(local_bear,\n-                              LocalBear,\n-                              msg='The given bear is not a local bear.')\n-        self.assertIsInstance(lines,\n-                              (list, tuple),\n-                              msg='The given lines are not a list.')\n-        self.assertIsInstance(results,\n-                              list,\n-                              msg='The given results are not a list.')\n+        assert isinstance(","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-06-13T23:50:24Z","lastEditedAt":null,"updatedAt":"2018-06-13T23:50:24Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTI3OTc2NQ==","url":"https://github.com/coala/coala/pull/5505#discussion_r195279765","bodyText":"@NiklasMM, when I removed the custom message, unittest's self.assertIsInstance(..) gave\nE   AssertionError: '' is not an instance of (<class 'list'>, <class 'tuple'>)\nbut pytest's assert gave\nE       AssertionError","diffHunk":"@@ -193,13 +171,12 @@ def check_invalidity(self,\n         :param create_tempfile:  Whether to save lines in tempfile if needed.\n         :param tempfile_kwargs:  Kwargs passed to tempfile.mkstemp().\n         \"\"\"\n+        assert isinstance(self, BaseTestHelper)\n         assert isinstance(self, unittest.TestCase)\n-        self.assertIsInstance(local_bear,\n-                              LocalBear,\n-                              msg='The given bear is not a local bear.')\n-        self.assertIsInstance(lines,\n-                              (list, tuple),\n-                              msg='The given lines are not a list.')\n+        assert isinstance(\n+            local_bear, LocalBear), 'The given bear is not a local bear.'\n+        assert isinstance(\n+            lines, (list, tuple)), 'The given lines are not a list.'","author":{"login":"sangamcse","avatarUrl":"https://avatars2.githubusercontent.com/u/26381717?v=4","name":"Sangam Kumar"},"reactions":[],"createdAt":"2018-06-14T01:15:45Z","lastEditedAt":null,"updatedAt":"2018-06-14T01:15:45Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTI4MzE4MQ==","url":"https://github.com/coala/coala/pull/5505#discussion_r195283181","bodyText":"This assertion message change was done in the base class https://github.com/coala/coala/blob/master/coalib/testing/BaseTestHelper.py#L24","diffHunk":"@@ -78,19 +78,11 @@ def test_bad_assertComparableObjectsEqual(self):\n                                     file=fname)],\n                                    filename=fname,\n                                    create_tempfile=False)\n-        self.assertEqual('\\'LineCountTestBear\\' != \\'LineCountTestBea\\'\\n'\n-                         '- LineCountTestBear\\n'\n-                         '?                 -\\n'\n-                         '+ LineCountTestBea\\n'\n-                         ' : origin mismatch.\\n\\n'\n-                         '\\'This file has 3 lines.\\' != \\'This file has 2 '\n-                         'lines.\\'\\n'\n-                         '- This file has 3 lines.\\n'\n-                         '?               ^\\n'\n-                         '+ This file has 2 lines.\\n'\n-                         '?               ^\\n'\n-                         ' : message_base mismatch.\\n\\n',\n-                         str(cm.exception))\n+        self.assertEqual('origin mismatch: LineCountTestBear, This file has '\n+                         '3 lines. != LineCountTestBea, This file has 2 '\n+                         'lines.\\n\\nmessage_base mismatch: LineCountTestBear,'","author":{"login":"sangamcse","avatarUrl":"https://avatars2.githubusercontent.com/u/26381717?v=4","name":"Sangam Kumar"},"reactions":[],"createdAt":"2018-06-14T01:45:33Z","lastEditedAt":null,"updatedAt":"2018-06-14T01:45:33Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTg5NjA1MQ==","url":"https://github.com/coala/coala/pull/5505#discussion_r195896051","bodyText":"this is a bug somewhere, and a regression.\n\n\norigin mismatch & message_base mismatch both say the same thing. that is confusing.  something needs to be improved.\n\n\nthe pre-existing shows the line differences, and your change doesnt.  That is a regression, making it more difficult for bear writers to see the problem, not more easy which your project was supposed to do.","diffHunk":"@@ -78,19 +78,12 @@ def test_bad_assertComparableObjectsEqual(self):\n                                     file=fname)],\n                                    filename=fname,\n                                    create_tempfile=False)\n-        self.assertEqual('\\'LineCountTestBear\\' != \\'LineCountTestBea\\'\\n'\n-                         '- LineCountTestBear\\n'\n-                         '?                 -\\n'\n-                         '+ LineCountTestBea\\n'\n-                         ' : origin mismatch.\\n\\n'\n-                         '\\'This file has 3 lines.\\' != \\'This file has 2 '\n-                         'lines.\\'\\n'\n-                         '- This file has 3 lines.\\n'\n-                         '?               ^\\n'\n-                         '+ This file has 2 lines.\\n'\n-                         '?               ^\\n'\n-                         ' : message_base mismatch.\\n\\n',\n-                         str(cm.exception))\n+        self.assertEqual('origin mismatch: LineCountTestBear, This file '\n+                         'has 3 lines. != LineCountTestBea, This file '\n+                         'has 2 lines.\\n\\n'\n+                         'message_base mismatch: LineCountTestBear, This '","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-06-16T06:41:53Z","lastEditedAt":null,"updatedAt":"2018-06-16T06:41:53Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMzM2MjI0OA==","url":"https://github.com/coala/coala/pull/5505#discussion_r203362248","bodyText":"Done in PR #5564","diffHunk":"@@ -78,19 +78,12 @@ def test_bad_assertComparableObjectsEqual(self):\n                                     file=fname)],\n                                    filename=fname,\n                                    create_tempfile=False)\n-        self.assertEqual('\\'LineCountTestBear\\' != \\'LineCountTestBea\\'\\n'\n-                         '- LineCountTestBear\\n'\n-                         '?                 -\\n'\n-                         '+ LineCountTestBea\\n'\n-                         ' : origin mismatch.\\n\\n'\n-                         '\\'This file has 3 lines.\\' != \\'This file has 2 '\n-                         'lines.\\'\\n'\n-                         '- This file has 3 lines.\\n'\n-                         '?               ^\\n'\n-                         '+ This file has 2 lines.\\n'\n-                         '?               ^\\n'\n-                         ' : message_base mismatch.\\n\\n',\n-                         str(cm.exception))\n+        self.assertEqual('origin mismatch: LineCountTestBear, This file '\n+                         'has 3 lines. != LineCountTestBea, This file '\n+                         'has 2 lines.\\n\\n'\n+                         'message_base mismatch: LineCountTestBear, This '","author":{"login":"sangamcse","avatarUrl":"https://avatars2.githubusercontent.com/u/26381717?v=4","name":"Sangam Kumar"},"reactions":[],"createdAt":"2018-07-18T12:41:10Z","lastEditedAt":null,"updatedAt":"2018-07-18T12:41:10Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMTA2MzQ4OQ==","url":"https://github.com/coala/coala/pull/5505#discussion_r211063489","bodyText":"Noting here that this PR is blocked by that PR -- we need useful error messages coming out of these helpers when used with test scenarios covering multiple Result objects.  And the implementation of the comparison logic should not be inside the test helpers , as it should be possible to do comparisons of Result objects any time, not just in tests.","diffHunk":"@@ -78,19 +78,12 @@ def test_bad_assertComparableObjectsEqual(self):\n                                     file=fname)],\n                                    filename=fname,\n                                    create_tempfile=False)\n-        self.assertEqual('\\'LineCountTestBear\\' != \\'LineCountTestBea\\'\\n'\n-                         '- LineCountTestBear\\n'\n-                         '?                 -\\n'\n-                         '+ LineCountTestBea\\n'\n-                         ' : origin mismatch.\\n\\n'\n-                         '\\'This file has 3 lines.\\' != \\'This file has 2 '\n-                         'lines.\\'\\n'\n-                         '- This file has 3 lines.\\n'\n-                         '?               ^\\n'\n-                         '+ This file has 2 lines.\\n'\n-                         '?               ^\\n'\n-                         ' : message_base mismatch.\\n\\n',\n-                         str(cm.exception))\n+        self.assertEqual('origin mismatch: LineCountTestBear, This file '\n+                         'has 3 lines. != LineCountTestBea, This file '\n+                         'has 2 lines.\\n\\n'\n+                         'message_base mismatch: LineCountTestBear, This '","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-18T03:19:56Z","lastEditedAt":null,"updatedAt":"2018-08-18T03:19:56Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM5NjQ1MjY2OA==","url":"https://github.com/coala/coala/pull/5505#issuecomment-396452668","bodyText":"Oops, I forgot to run coala.","diffHunk":null,"author":{"login":"sangamcse","avatarUrl":"https://avatars2.githubusercontent.com/u/26381717?v=4","name":"Sangam Kumar"},"reactions":[],"createdAt":"2018-06-12T03:16:10Z","lastEditedAt":null,"updatedAt":"2018-06-12T03:16:10Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1528967269000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5506","number":5506,"title":"setup.py: Sync moban template","body":"For short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":8,"createdAt":"2018-06-09T13:36:57Z","updatedAt":"2018-06-14T09:07:49Z","closedAt":"2018-06-14T09:07:49Z","state":"merged","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"process/pending review","color":"bfe5bf"},{"name":"size/S","color":"B1CF0A"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5506","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTM0MjM4MQ==","url":"https://github.com/coala/coala/pull/5506#discussion_r195342381","bodyText":"Why double braces?","diffHunk":"@@ -57,21 +69,48 @@ def run_tests(self):\n         sys.exit(errno)\n \n \n+SETUP_COMMANDS['test'] = PyTestCommand\n+\n+\n class BuildDocsCommand(setuptools.command.build_py.build_py):\n-    apidoc_command = (\n-        'sphinx-apidoc', '-f', '-o', 'docs',\n-        '--no-toc',\n-        'coalib'\n-    )\n-    make_command = ('make', '-C', 'docs', 'html', 'SPHINXOPTS=-W')\n+\n+    def initialize_options(self):\n+        setup_dir = os.path.join(os.getcwd(), __dir__)\n+        docs_dir = os.path.join(setup_dir, 'docs')\n+        source_docs_dir = os.path.join(setup_dir, 'docs')\n+\n+        set_python_path(setup_dir)\n+\n+        self.apidoc_commands = list()\n+\n+        self.apidoc_commands.append((\n+            'sphinx-apidoc', '-f', '-o', source_docs_dir,\n+            '--no-toc',\n+            os.path.join(setup_dir, 'coalib')\n+        ))","author":{"login":"sangamcse","avatarUrl":"https://avatars2.githubusercontent.com/u/26381717?v=4","name":"Sangam Kumar"},"createdAt":"2018-06-14T08:39:41Z","lastEditedAt":null,"updatedAt":"2018-06-14T08:39:41Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTM0MzM1OA==","url":"https://github.com/coala/coala/pull/5506#discussion_r195343358","bodyText":"Got it 😄","diffHunk":"@@ -57,21 +69,48 @@ def run_tests(self):\n         sys.exit(errno)\n \n \n+SETUP_COMMANDS['test'] = PyTestCommand\n+\n+\n class BuildDocsCommand(setuptools.command.build_py.build_py):\n-    apidoc_command = (\n-        'sphinx-apidoc', '-f', '-o', 'docs',\n-        '--no-toc',\n-        'coalib'\n-    )\n-    make_command = ('make', '-C', 'docs', 'html', 'SPHINXOPTS=-W')\n+\n+    def initialize_options(self):\n+        setup_dir = os.path.join(os.getcwd(), __dir__)\n+        docs_dir = os.path.join(setup_dir, 'docs')\n+        source_docs_dir = os.path.join(setup_dir, 'docs')\n+\n+        set_python_path(setup_dir)\n+\n+        self.apidoc_commands = list()\n+\n+        self.apidoc_commands.append((\n+            'sphinx-apidoc', '-f', '-o', source_docs_dir,\n+            '--no-toc',\n+            os.path.join(setup_dir, 'coalib')\n+        ))","author":{"login":"sangamcse","avatarUrl":"https://avatars2.githubusercontent.com/u/26381717?v=4","name":"Sangam Kumar"},"createdAt":"2018-06-14T08:43:16Z","lastEditedAt":null,"updatedAt":"2018-06-14T08:43:16Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTM0MzQ0MQ==","url":"https://github.com/coala/coala/pull/5506#discussion_r195343441","bodyText":"the inner braces are a tuple.","diffHunk":"@@ -57,21 +69,48 @@ def run_tests(self):\n         sys.exit(errno)\n \n \n+SETUP_COMMANDS['test'] = PyTestCommand\n+\n+\n class BuildDocsCommand(setuptools.command.build_py.build_py):\n-    apidoc_command = (\n-        'sphinx-apidoc', '-f', '-o', 'docs',\n-        '--no-toc',\n-        'coalib'\n-    )\n-    make_command = ('make', '-C', 'docs', 'html', 'SPHINXOPTS=-W')\n+\n+    def initialize_options(self):\n+        setup_dir = os.path.join(os.getcwd(), __dir__)\n+        docs_dir = os.path.join(setup_dir, 'docs')\n+        source_docs_dir = os.path.join(setup_dir, 'docs')\n+\n+        set_python_path(setup_dir)\n+\n+        self.apidoc_commands = list()\n+\n+        self.apidoc_commands.append((\n+            'sphinx-apidoc', '-f', '-o', source_docs_dir,\n+            '--no-toc',\n+            os.path.join(setup_dir, 'coalib')\n+        ))","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-06-14T08:43:36Z","lastEditedAt":null,"updatedAt":"2018-06-14T08:43:36Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTM0MzkyNQ==","url":"https://github.com/coala/coala/pull/5506#discussion_r195343925","bodyText":"also, this is an imported template.  CI already verifies that it doesnt break somethings, but setup.py isnt extensively tested in CI.\nIf there is a problem with the template , raise a bug in the source repo.","diffHunk":"@@ -57,21 +69,48 @@ def run_tests(self):\n         sys.exit(errno)\n \n \n+SETUP_COMMANDS['test'] = PyTestCommand\n+\n+\n class BuildDocsCommand(setuptools.command.build_py.build_py):\n-    apidoc_command = (\n-        'sphinx-apidoc', '-f', '-o', 'docs',\n-        '--no-toc',\n-        'coalib'\n-    )\n-    make_command = ('make', '-C', 'docs', 'html', 'SPHINXOPTS=-W')\n+\n+    def initialize_options(self):\n+        setup_dir = os.path.join(os.getcwd(), __dir__)\n+        docs_dir = os.path.join(setup_dir, 'docs')\n+        source_docs_dir = os.path.join(setup_dir, 'docs')\n+\n+        set_python_path(setup_dir)\n+\n+        self.apidoc_commands = list()\n+\n+        self.apidoc_commands.append((\n+            'sphinx-apidoc', '-f', '-o', source_docs_dir,\n+            '--no-toc',\n+            os.path.join(setup_dir, 'coalib')\n+        ))","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-06-14T08:45:11Z","lastEditedAt":null,"updatedAt":"2018-06-14T08:45:11Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM5NzIyMTkxNQ==","url":"https://github.com/coala/coala/pull/5506#issuecomment-397221915","bodyText":"I am not familiar with the windows setup. So I just took a look there but rest changes LGTM.","diffHunk":null,"author":{"login":"sangamcse","avatarUrl":"https://avatars2.githubusercontent.com/u/26381717?v=4","name":"Sangam Kumar"},"createdAt":"2018-06-14T08:53:42Z","lastEditedAt":null,"updatedAt":"2018-06-14T08:53:42Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1529360080000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5507","number":5507,"title":".gitignore: Use moban template","body":"For short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":7,"createdAt":"2018-06-09T15:05:31Z","updatedAt":"2018-06-18T22:14:40Z","closedAt":"2018-06-17T10:47:48Z","state":"merged","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"process/approved","color":"009800"},{"name":"size/L","color":"FF8888"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5507","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDIzMDUwMA==","url":"https://github.com/coala/coala/pull/5507#discussion_r194230500","bodyText":"added in 2fe6b33, and should have been removed in 2c1130f","diffHunk":"@@ -1,46 +1,523 @@\n-.DS_Store\n-.directory\n-.idea\n-.kdev4\n-__pycache__\n-*~\n-build\n-*.mo\n-dist\n+# moban hashes\n+.moban.hashes\n+\n+# Extra rules from https://github.com/github/gitignore/\n+# Python rules\n+# Byte-compiled / optimized / DLL files\n+__pycache__/\n+*.py[cod]\n+*$py.class\n+\n+# C extensions\n+*.so\n+\n+# Distribution / packaging\n+.Python\n+build/\n+develop-eggs/\n+dist/\n+downloads/\n+eggs/\n+.eggs/\n+lib/\n+lib64/\n+parts/\n+sdist/\n+var/\n+wheels/\n+*.egg-info/\n+.installed.cfg\n+*.egg\n MANIFEST\n-*.pyc\n+\n+# PyInstaller\n+#  Usually these files are written by a python script from a template\n+#  before PyInstaller builds the exe, so as to inject date/other infos into it.\n+*.manifest\n+*.spec\n+\n+# Installer logs\n+pip-log.txt\n+pip-delete-this-directory.txt\n+\n+# Unit test / coverage reports\n+htmlcov/\n+.tox/\n .coverage\n-*.patch\n-_build\n-coverage.xml\n-htmlcov\n-*.orig\n-*.diff\n-*.kdev4\n-*.patch\n-*.sublime-project\n-*.sublime-workspace\n-.python-version\n-coala.egg-info\n .coverage.*\n-coala.1\n-src\n-site\n-.zanata-cache\n-*.exe\n .cache\n-*.eggs\n-node_modules\n+nosetests.xml\n+coverage.xml\n+*.cover\n+.hypothesis/\n+.pytest_cache/\n+\n+# Translations\n+*.mo\n+*.pot\n+\n+# Django stuff:\n *.log\n-*.jar\n-.vendor\n-Goopfile.lock","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-06-09T15:06:36Z","lastEditedAt":null,"updatedAt":"2018-06-09T15:06:36Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDIzMDUzOA==","url":"https://github.com/coala/coala/pull/5507#discussion_r194230538","bodyText":"Added in c492d5b , and should have been removed in f2a9610","diffHunk":"@@ -1,46 +1,523 @@\n-.DS_Store\n-.directory\n-.idea\n-.kdev4\n-__pycache__\n-*~\n-build\n-*.mo\n-dist\n+# moban hashes\n+.moban.hashes\n+\n+# Extra rules from https://github.com/github/gitignore/\n+# Python rules\n+# Byte-compiled / optimized / DLL files\n+__pycache__/\n+*.py[cod]\n+*$py.class\n+\n+# C extensions\n+*.so\n+\n+# Distribution / packaging\n+.Python\n+build/\n+develop-eggs/\n+dist/\n+downloads/\n+eggs/\n+.eggs/\n+lib/\n+lib64/\n+parts/\n+sdist/\n+var/\n+wheels/\n+*.egg-info/\n+.installed.cfg\n+*.egg\n MANIFEST\n-*.pyc\n+\n+# PyInstaller\n+#  Usually these files are written by a python script from a template\n+#  before PyInstaller builds the exe, so as to inject date/other infos into it.\n+*.manifest\n+*.spec\n+\n+# Installer logs\n+pip-log.txt\n+pip-delete-this-directory.txt\n+\n+# Unit test / coverage reports\n+htmlcov/\n+.tox/\n .coverage\n-*.patch\n-_build\n-coverage.xml\n-htmlcov\n-*.orig\n-*.diff\n-*.kdev4\n-*.patch\n-*.sublime-project\n-*.sublime-workspace\n-.python-version\n-coala.egg-info\n .coverage.*\n-coala.1\n-src\n-site\n-.zanata-cache","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-06-09T15:08:07Z","lastEditedAt":null,"updatedAt":"2018-06-09T15:08:07Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDIzMDYzMw==","url":"https://github.com/coala/coala/pull/5507#discussion_r194230633","bodyText":"This comes from #1412 .\nAll that has moved to coala-bears, and only some docs in this repo refer .jar","diffHunk":"@@ -1,46 +1,523 @@\n-.DS_Store\n-.directory\n-.idea\n-.kdev4\n-__pycache__\n-*~\n-build\n-*.mo\n-dist\n+# moban hashes\n+.moban.hashes\n+\n+# Extra rules from https://github.com/github/gitignore/\n+# Python rules\n+# Byte-compiled / optimized / DLL files\n+__pycache__/\n+*.py[cod]\n+*$py.class\n+\n+# C extensions\n+*.so\n+\n+# Distribution / packaging\n+.Python\n+build/\n+develop-eggs/\n+dist/\n+downloads/\n+eggs/\n+.eggs/\n+lib/\n+lib64/\n+parts/\n+sdist/\n+var/\n+wheels/\n+*.egg-info/\n+.installed.cfg\n+*.egg\n MANIFEST\n-*.pyc\n+\n+# PyInstaller\n+#  Usually these files are written by a python script from a template\n+#  before PyInstaller builds the exe, so as to inject date/other infos into it.\n+*.manifest\n+*.spec\n+\n+# Installer logs\n+pip-log.txt\n+pip-delete-this-directory.txt\n+\n+# Unit test / coverage reports\n+htmlcov/\n+.tox/\n .coverage\n-*.patch\n-_build\n-coverage.xml\n-htmlcov\n-*.orig\n-*.diff\n-*.kdev4\n-*.patch\n-*.sublime-project\n-*.sublime-workspace\n-.python-version\n-coala.egg-info\n .coverage.*\n-coala.1\n-src\n-site\n-.zanata-cache\n-*.exe\n .cache\n-*.eggs\n-node_modules\n+nosetests.xml\n+coverage.xml\n+*.cover\n+.hypothesis/\n+.pytest_cache/\n+\n+# Translations\n+*.mo\n+*.pot\n+\n+# Django stuff:\n *.log\n-*.jar","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-06-09T15:11:38Z","lastEditedAt":null,"updatedAt":"2018-06-09T15:11:38Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1530483595000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5511","number":5511,"title":"Add: Debugging Interface","body":"Moved from RaiVaibhav#5\nRelated to #1101","comments":19,"createdAt":"2018-06-10T10:43:44Z","updatedAt":"2018-07-01T22:19:55Z","closedAt":"2018-06-29T15:33:33Z","state":"merged","user":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4"},"owner":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4"},"labels":[{"name":"process/approved","color":"009800"},{"name":"size/M","color":"eb6420"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5511","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDI2NjMxNA==","url":"https://github.com/coala/coala/pull/5511#discussion_r194266314","bodyText":"Better help please ;) Should contain:\n\nWhat debugging means\nIt uses pdb\nWhat arguments can be supplied? What do no additional arguments mean?","diffHunk":"@@ -241,6 +241,9 @@ def default_arg_parser(formatter_class=None):\n         '-r', '--relpath', nargs='?', const=True,\n         help='return relative paths for files (must be called with --json)')\n \n+    outputs_group.add_argument(\n+        '--debug-bears', nargs='?', const=True, help='Debug Bears')","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-06-10T18:41:01Z","lastEditedAt":null,"updatedAt":"2018-06-10T18:41:01Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDI2NjQ5OQ==","url":"https://github.com/coala/coala/pull/5511#discussion_r194266499","bodyText":"What I would recommend that would ease review and simplify structure a lot, is to do the pure inlining part of filter_raising_callables in a separate commit. It would just inline the code for all occurrences, and also modify tests respectively. That would move also the test-complexity away into this separate commit.\nThe commit of your debug-feature would have an easier to understand diff, since we then see what we actually modify for the filter_raising_callables part.","diffHunk":"@@ -291,22 +292,15 @@ def get_file_dict(filename_list, log_printer=None, allow_raw_files=False):\n     return file_dict\n \n \n-def filter_raising_callables(it, exception, *args, debug=False, **kwargs):\n-    \"\"\"\n-    Filters all callable items inside the given iterator that raise the\n-    given exceptions.\n-\n-    :param it:        The iterator to filter.\n-    :param exception: The (tuple of) exception(s) to filter for.\n-    :param args:      Positional arguments to pass to the callable.\n-    :param kwargs:    Keyword arguments to pass to the callable.\n-    \"\"\"\n-    for elem in it:\n-        try:\n-            yield elem(*args, **kwargs)\n-        except exception:\n-            if debug:\n-                raise","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-06-10T18:48:05Z","lastEditedAt":null,"updatedAt":"2018-06-10T18:48:05Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDI2NjUzMg==","url":"https://github.com/coala/coala/pull/5511#discussion_r194266532","bodyText":"See old PR comment.","diffHunk":"@@ -291,22 +292,15 @@ def get_file_dict(filename_list, log_printer=None, allow_raw_files=False):\n     return file_dict\n \n \n-def filter_raising_callables(it, exception, *args, debug=False, **kwargs):\n-    \"\"\"\n-    Filters all callable items inside the given iterator that raise the\n-    given exceptions.\n-\n-    :param it:        The iterator to filter.\n-    :param exception: The (tuple of) exception(s) to filter for.\n-    :param args:      Positional arguments to pass to the callable.\n-    :param kwargs:    Keyword arguments to pass to the callable.\n-    \"\"\"\n-    for elem in it:\n-        try:\n-            yield elem(*args, **kwargs)\n-        except exception:\n-            if debug:\n-                raise\n+def debug_flag_checker(bear, debug_bears=False):\n+    if debug_bears is False:\n+        debugger = False\n+    elif ((str(debug_bears[0]).lower().strip()) == 'true') or (\n+            (bear.__name__) in debug_bears):\n+        debugger = True\n+    else:\n+        debugger = False\n+    return debugger","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-06-10T18:49:04Z","lastEditedAt":null,"updatedAt":"2018-06-10T18:49:04Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDI2NjY2MQ==","url":"https://github.com/coala/coala/pull/5511#discussion_r194266661","bodyText":"indentation only on this line: 4 spaces back","diffHunk":"@@ -751,7 +755,12 @@ def execute_section(section,\n                              results (bear names are key) as well as the\n                              file dictionary.\n     \"\"\"\n-    if debug:\n+    debug_bears = (False\n+                   if 'debug_bears' not in section or (\n+                       section['debug_bears'].value == 'False') else (\n+                       typed_list(str)(section['debug_bears'])))","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNDg4NjM0NQ==","createdAt":"2018-06-11T06:50:11Z","content":"THUMBS_UP","user":{"login":"RaiVaibhav","name":"Vaibhav Rai"}}],"createdAt":"2018-06-10T18:53:41Z","lastEditedAt":null,"updatedAt":"2018-06-10T18:53:41Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDI2NjY2NA==","url":"https://github.com/coala/coala/pull/5511#discussion_r194266664","bodyText":"the inner braces aren't needed","diffHunk":"@@ -751,7 +755,12 @@ def execute_section(section,\n                              results (bear names are key) as well as the\n                              file dictionary.\n     \"\"\"\n-    if debug:\n+    debug_bears = (False\n+                   if 'debug_bears' not in section or (\n+                       section['debug_bears'].value == 'False') else (\n+                       typed_list(str)(section['debug_bears'])))","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-06-10T18:53:50Z","lastEditedAt":null,"updatedAt":"2018-06-10T18:53:50Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDI2NjcwMw==","url":"https://github.com/coala/coala/pull/5511#discussion_r194266703","bodyText":"So we re-raise the RuntimeError if debug is specified? Why not doing the same like without debug == True?","diffHunk":"@@ -329,26 +324,32 @@ def instantiate_bears(section,\n     :param console_printer:  Object to print messages on the console.\n     :return:                 The local and global bear instance lists.\n     \"\"\"\n-    local_bear_list = [bear\n-                       for bear in filter_raising_callables(\n-                           local_bear_list,\n-                           RuntimeError,\n-                           section,\n-                           message_queue,\n-                           timeout=0.1,\n-                           debug=debug)]\n-\n-    global_bear_list = [bear\n-                        for bear in filter_raising_callables(\n-                            global_bear_list,\n-                            RuntimeError,\n-                            file_dict,\n-                            section,\n-                            message_queue,\n-                            timeout=0.1,\n-                            debug=debug)]\n-\n-    return local_bear_list, global_bear_list\n+    instantiated_local_bear_list = []\n+    instantiated_global_bear_list = []\n+    for bear in local_bear_list:\n+        try:\n+            debugger = debug_flag_checker(bear, debug_bears=debug_bears)\n+            instantiated_local_bear_list.append(bear(section,\n+                                                     message_queue,\n+                                                     timeout=0.1,\n+                                                     debugger=debugger))\n+        except RuntimeError:\n+            if debug:\n+                raise","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-06-10T18:55:18Z","lastEditedAt":null,"updatedAt":"2018-06-10T18:55:18Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDI2NzEwNw==","url":"https://github.com/coala/coala/pull/5511#discussion_r194267107","bodyText":"We have to change the name, if possible we should try to look at the pdb naming. Since we use runcall heavily, something similar would be nice. However, since we aren't in the context of pdb, it should include debug as a word.\nMaybe debug_collect_iterable? Nah not so good... or maybe just debug_run? meh... 😅","diffHunk":"@@ -22,6 +24,34 @@\n from .meta import bearclass\n \n \n+class db(pdb.Pdb):\n+    def do_continue(self, arg):\n+        self.clear_all_breaks()\n+        super().do_continue(arg)\n+        return(1)\n+\n+\n+dbg = db()\n+dbg.do_q = dbg.do_continue\n+dbg.do_quit = dbg.do_continue\n+dbg.do_exit = dbg.do_continue\n+\n+\n+def debug_mode_function(func, dbg, *args, **kwargs):","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNDg4NjYyNw==","createdAt":"2018-06-11T06:58:07Z","content":"THUMBS_UP","user":{"login":"RaiVaibhav","name":"Vaibhav Rai"}}],"createdAt":"2018-06-10T19:09:01Z","lastEditedAt":null,"updatedAt":"2018-06-10T19:09:01Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDI2NzEzMQ==","url":"https://github.com/coala/coala/pull/5511#discussion_r194267131","bodyText":"wait a second shouldn't it be bear_results?","diffHunk":"@@ -22,6 +24,34 @@\n from .meta import bearclass\n \n \n+class db(pdb.Pdb):\n+    def do_continue(self, arg):\n+        self.clear_all_breaks()\n+        super().do_continue(arg)\n+        return(1)\n+\n+\n+dbg = db()\n+dbg.do_q = dbg.do_continue\n+dbg.do_quit = dbg.do_continue\n+dbg.do_exit = dbg.do_continue\n+\n+\n+def debug_mode_function(func, dbg, *args, **kwargs):\n+    results = []\n+    bear_results = dbg.runcall(func, *args, **kwargs)\n+    if isinstance(bear_results, collections.Iterable):\n+        try:\n+            iterator = iter(bear_results)\n+            while True:\n+                result = dbg.runcall(next, iterator)\n+                results.append(result)\n+        except StopIteration:\n+            return results\n+    else:\n+        return results","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNDg4MzA3Nw==","createdAt":"2018-06-11T04:29:08Z","content":"THUMBS_UP","user":{"login":"RaiVaibhav","name":"Vaibhav Rai"}}],"createdAt":"2018-06-10T19:09:55Z","lastEditedAt":null,"updatedAt":"2018-06-10T19:09:55Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDI2NzIxMQ==","url":"https://github.com/coala/coala/pull/5511#discussion_r194267211","bodyText":"So -->\nbear_results = dbg.runcall(func, *args, **kwargs)\nif isinstance(bear_results, collections.Iterable):\n    results = []\n    iterator = iter(bear_results)\n    try:\n        while True:\n            result = dbg.runcall(next, iterator)\n            results.append(result)\n    except StopIteration:\n        return results\nelse:\n    return bear_results\nPS: I moved the iter part out of the try block as well, since that shouldn't throw a StopIteration. If it does, it's a serious Python bug, and we should let coala crash :P","diffHunk":"@@ -22,6 +24,34 @@\n from .meta import bearclass\n \n \n+class db(pdb.Pdb):\n+    def do_continue(self, arg):\n+        self.clear_all_breaks()\n+        super().do_continue(arg)\n+        return(1)\n+\n+\n+dbg = db()\n+dbg.do_q = dbg.do_continue\n+dbg.do_quit = dbg.do_continue\n+dbg.do_exit = dbg.do_continue\n+\n+\n+def debug_mode_function(func, dbg, *args, **kwargs):\n+    results = []\n+    bear_results = dbg.runcall(func, *args, **kwargs)\n+    if isinstance(bear_results, collections.Iterable):\n+        try:\n+            iterator = iter(bear_results)\n+            while True:\n+                result = dbg.runcall(next, iterator)\n+                results.append(result)\n+        except StopIteration:\n+            return results\n+    else:\n+        return results","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNDg4MzA3OQ==","createdAt":"2018-06-11T04:29:15Z","content":"THUMBS_UP","user":{"login":"RaiVaibhav","name":"Vaibhav Rai"}},{"id":"MDg6UmVhY3Rpb24yNDg4NzA1NA==","createdAt":"2018-06-11T07:11:27Z","content":"LAUGH","user":{"login":"RaiVaibhav","name":"Vaibhav Rai"}}],"createdAt":"2018-06-10T19:12:29Z","lastEditedAt":null,"updatedAt":"2018-06-10T19:12:29Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDI2NzQ0NA==","url":"https://github.com/coala/coala/pull/5511#discussion_r194267444","bodyText":"I would provide dbg with a default argument:\ndef debug_mode_function(func, dbg=pdb.Pdb(), *args, **kwargs):","diffHunk":"@@ -22,6 +24,34 @@\n from .meta import bearclass\n \n \n+class db(pdb.Pdb):\n+    def do_continue(self, arg):\n+        self.clear_all_breaks()\n+        super().do_continue(arg)\n+        return(1)\n+\n+\n+dbg = db()\n+dbg.do_q = dbg.do_continue\n+dbg.do_quit = dbg.do_continue\n+dbg.do_exit = dbg.do_continue\n+\n+\n+def debug_mode_function(func, dbg, *args, **kwargs):","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNDg4Njk4MQ==","createdAt":"2018-06-11T07:08:55Z","content":"THUMBS_UP","user":{"login":"RaiVaibhav","name":"Vaibhav Rai"}}],"createdAt":"2018-06-10T19:18:50Z","lastEditedAt":null,"updatedAt":"2018-06-10T19:18:50Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDI2OTAxMA==","url":"https://github.com/coala/coala/pull/5511#discussion_r194269010","bodyText":"return 1, redundant braces","diffHunk":"@@ -22,6 +24,34 @@\n from .meta import bearclass\n \n \n+class db(pdb.Pdb):\n+    def do_continue(self, arg):\n+        self.clear_all_breaks()\n+        super().do_continue(arg)\n+        return(1)","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNDg4MzU5NA==","createdAt":"2018-06-11T04:58:46Z","content":"THUMBS_UP","user":{"login":"RaiVaibhav","name":"Vaibhav Rai"}}],"createdAt":"2018-06-10T20:13:19Z","lastEditedAt":null,"updatedAt":"2018-06-10T20:13:19Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDI2OTAzMw==","url":"https://github.com/coala/coala/pull/5511#discussion_r194269033","bodyText":"what about assigning those to db?\nclass dbg(pdb.Pdb):\n    def __init__(self, ...):\n        self.do_q = self.do_continue\n        ...\n    def do_continue(self, arg):\n        self.clear_all_breaks()\n        super().do_continue(arg)\n        return 1","diffHunk":"@@ -22,6 +24,34 @@\n from .meta import bearclass\n \n \n+class db(pdb.Pdb):\n+    def do_continue(self, arg):\n+        self.clear_all_breaks()\n+        super().do_continue(arg)\n+        return(1)\n+\n+\n+dbg = db()\n+dbg.do_q = dbg.do_continue\n+dbg.do_quit = dbg.do_continue\n+dbg.do_exit = dbg.do_continue","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNDg4NDM2OQ==","createdAt":"2018-06-11T05:35:26Z","content":"THUMBS_UP","user":{"login":"RaiVaibhav","name":"Vaibhav Rai"}}],"createdAt":"2018-06-10T20:13:56Z","lastEditedAt":null,"updatedAt":"2018-06-10T20:13:56Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDI2OTA1OQ==","url":"https://github.com/coala/coala/pull/5511#discussion_r194269059","bodyText":"Shouldn't it be called somehow differently? Otherwise you override do_c / do_continue implicitly, and it will now always clear breakpoints, regardless of doing q or c.","diffHunk":"@@ -22,6 +24,34 @@\n from .meta import bearclass\n \n \n+class db(pdb.Pdb):\n+    def do_continue(self, arg):","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNDg4NzA1OA==","createdAt":"2018-06-11T07:11:36Z","content":"THUMBS_UP","user":{"login":"RaiVaibhav","name":"Vaibhav Rai"}}],"createdAt":"2018-06-10T20:14:50Z","lastEditedAt":null,"updatedAt":"2018-06-10T20:14:50Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDI2OTE1NQ==","url":"https://github.com/coala/coala/pull/5511#discussion_r194269155","bodyText":"please read my comments on the old PR.","diffHunk":"@@ -463,6 +473,30 @@ def test_bear_with_specific_language(self):\n         self.assertEqual(str(result), 'Hypertext Markup Language 5.1')\n         self.check_message(LOG_LEVEL.DEBUG)\n \n+    @patch('pdb.Pdb.do_continue')\n+    def test_do_continue(self, do_continue):\n+        arg = {}\n+        self.assertEqual(dbg.do_continue(arg), 1)\n+\n+    @patch('coalib.bears.Bear.dbg.runcall', side_effect=((1, 2), 3, 4))\n+    def test_debug_mode_func_with_return(self, runcall):\n+        section = Section('name')\n+        my_bear = TestOneBear(section, self.queue, debugger=True)\n+        args = {}\n+        kwargs = {}","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNDg5Njk2MA==","createdAt":"2018-06-11T10:44:07Z","content":"THUMBS_UP","user":{"login":"RaiVaibhav","name":"Vaibhav Rai"}}],"createdAt":"2018-06-10T20:18:41Z","lastEditedAt":null,"updatedAt":"2018-06-10T20:18:41Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDI4NjY4MA==","url":"https://github.com/coala/coala/pull/5511#discussion_r194286680","bodyText":"No not re-raising the RuntimeError it will be raised only when debug will set True. (If there is any RuntimeError then only)\nBy default debug is False. If user passed the arg --debug then this debug will set True and after that, it will catch the RuntimeError and raise the RuntimeError and ipdb will gets raised. If I removed the debug == True and let the exception gets rasied directly, then it will break the coala every time if any bear raises RuntimeError during its initialization, and why RuntimeError as the same process was happening on previously also.\nAnd don't want to remove debug==True completely because here I like the concept of @userzimmermann  to raise a ipdb only when --debug is getting called.","diffHunk":"@@ -329,26 +324,32 @@ def instantiate_bears(section,\n     :param console_printer:  Object to print messages on the console.\n     :return:                 The local and global bear instance lists.\n     \"\"\"\n-    local_bear_list = [bear\n-                       for bear in filter_raising_callables(\n-                           local_bear_list,\n-                           RuntimeError,\n-                           section,\n-                           message_queue,\n-                           timeout=0.1,\n-                           debug=debug)]\n-\n-    global_bear_list = [bear\n-                        for bear in filter_raising_callables(\n-                            global_bear_list,\n-                            RuntimeError,\n-                            file_dict,\n-                            section,\n-                            message_queue,\n-                            timeout=0.1,\n-                            debug=debug)]\n-\n-    return local_bear_list, global_bear_list\n+    instantiated_local_bear_list = []\n+    instantiated_global_bear_list = []\n+    for bear in local_bear_list:\n+        try:\n+            debugger = debug_flag_checker(bear, debug_bears=debug_bears)\n+            instantiated_local_bear_list.append(bear(section,\n+                                                     message_queue,\n+                                                     timeout=0.1,\n+                                                     debugger=debugger))\n+        except RuntimeError:\n+            if debug:\n+                raise","author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"reactions":[],"createdAt":"2018-06-11T03:33:30Z","lastEditedAt":"2018-06-11T03:33:48Z","updatedAt":"2018-06-11T03:33:48Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDI4Njk1OA==","url":"https://github.com/coala/coala/pull/5511#discussion_r194286958","bodyText":"I think I have already explained here RaiVaibhav#5 (comment)\nplease take a look, why this function is needed, you didn't reply so I thought you understand my point.","diffHunk":"@@ -291,22 +292,15 @@ def get_file_dict(filename_list, log_printer=None, allow_raw_files=False):\n     return file_dict\n \n \n-def filter_raising_callables(it, exception, *args, debug=False, **kwargs):\n-    \"\"\"\n-    Filters all callable items inside the given iterator that raise the\n-    given exceptions.\n-\n-    :param it:        The iterator to filter.\n-    :param exception: The (tuple of) exception(s) to filter for.\n-    :param args:      Positional arguments to pass to the callable.\n-    :param kwargs:    Keyword arguments to pass to the callable.\n-    \"\"\"\n-    for elem in it:\n-        try:\n-            yield elem(*args, **kwargs)\n-        except exception:\n-            if debug:\n-                raise\n+def debug_flag_checker(bear, debug_bears=False):\n+    if debug_bears is False:\n+        debugger = False\n+    elif ((str(debug_bears[0]).lower().strip()) == 'true') or (\n+            (bear.__name__) in debug_bears):\n+        debugger = True\n+    else:\n+        debugger = False\n+    return debugger","author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"reactions":[],"createdAt":"2018-06-11T03:37:27Z","lastEditedAt":"2018-06-11T04:24:05Z","updatedAt":"2018-06-11T04:24:05Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDI4NzIyMg==","url":"https://github.com/coala/coala/pull/5511#discussion_r194287222","bodyText":"I am using this function only to initialize the debugger flag to True and this function checks whether  name of bears is in --debug-bears argument and accordinly it set the debbuger flag and return the debugger flag to instantiate_bears which will initalize the bear with debugger flag","diffHunk":"@@ -291,22 +292,15 @@ def get_file_dict(filename_list, log_printer=None, allow_raw_files=False):\n     return file_dict\n \n \n-def filter_raising_callables(it, exception, *args, debug=False, **kwargs):\n-    \"\"\"\n-    Filters all callable items inside the given iterator that raise the\n-    given exceptions.\n-\n-    :param it:        The iterator to filter.\n-    :param exception: The (tuple of) exception(s) to filter for.\n-    :param args:      Positional arguments to pass to the callable.\n-    :param kwargs:    Keyword arguments to pass to the callable.\n-    \"\"\"\n-    for elem in it:\n-        try:\n-            yield elem(*args, **kwargs)\n-        except exception:\n-            if debug:\n-                raise\n+def debug_flag_checker(bear, debug_bears=False):\n+    if debug_bears is False:\n+        debugger = False\n+    elif ((str(debug_bears[0]).lower().strip()) == 'true') or (\n+            (bear.__name__) in debug_bears):\n+        debugger = True\n+    else:\n+        debugger = False\n+    return debugger","author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"reactions":[],"createdAt":"2018-06-11T03:41:32Z","lastEditedAt":null,"updatedAt":"2018-06-11T03:41:32Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDI4NzMwNg==","url":"https://github.com/coala/coala/pull/5511#discussion_r194287306","bodyText":"then above if-else clause places accordingly to prevent any error during checking the condition :)\nThis function was previously in Bear.py file which I removed because  debugger flag have to be initialized for both arguments --debug-bear and --debug-bear ABear i.e., when when some Bear name passed and when no bear name passed, this make the whole Interface working with the shorter code.","diffHunk":"@@ -291,22 +292,15 @@ def get_file_dict(filename_list, log_printer=None, allow_raw_files=False):\n     return file_dict\n \n \n-def filter_raising_callables(it, exception, *args, debug=False, **kwargs):\n-    \"\"\"\n-    Filters all callable items inside the given iterator that raise the\n-    given exceptions.\n-\n-    :param it:        The iterator to filter.\n-    :param exception: The (tuple of) exception(s) to filter for.\n-    :param args:      Positional arguments to pass to the callable.\n-    :param kwargs:    Keyword arguments to pass to the callable.\n-    \"\"\"\n-    for elem in it:\n-        try:\n-            yield elem(*args, **kwargs)\n-        except exception:\n-            if debug:\n-                raise\n+def debug_flag_checker(bear, debug_bears=False):\n+    if debug_bears is False:\n+        debugger = False\n+    elif ((str(debug_bears[0]).lower().strip()) == 'true') or (\n+            (bear.__name__) in debug_bears):\n+        debugger = True\n+    else:\n+        debugger = False\n+    return debugger","author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"reactions":[],"createdAt":"2018-06-11T03:42:58Z","lastEditedAt":"2018-06-11T06:54:06Z","updatedAt":"2018-06-11T06:54:06Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDI5Mzg3MQ==","url":"https://github.com/coala/coala/pull/5511#discussion_r194293871","bodyText":"I didn't get  If I don't do something like typed_list(str)(section['debug_bears']) then it will throw error 😅","diffHunk":"@@ -751,7 +755,12 @@ def execute_section(section,\n                              results (bear names are key) as well as the\n                              file dictionary.\n     \"\"\"\n-    if debug:\n+    debug_bears = (False\n+                   if 'debug_bears' not in section or (\n+                       section['debug_bears'].value == 'False') else (\n+                       typed_list(str)(section['debug_bears'])))","author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"reactions":[],"createdAt":"2018-06-11T05:15:34Z","lastEditedAt":null,"updatedAt":"2018-06-11T05:15:34Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDI5NDI2OQ==","url":"https://github.com/coala/coala/pull/5511#discussion_r194294269","bodyText":"Actually do_c or do_cont will not but ya do_continue will, so making it custom_quit","diffHunk":"@@ -22,6 +24,34 @@\n from .meta import bearclass\n \n \n+class db(pdb.Pdb):\n+    def do_continue(self, arg):","author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"reactions":[],"createdAt":"2018-06-11T05:19:52Z","lastEditedAt":null,"updatedAt":"2018-06-11T05:19:52Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDMwNDc5MQ==","url":"https://github.com/coala/coala/pull/5511#discussion_r194304791","bodyText":"As debug_bears in Processing.py can contain Bool Value i.e, False aslo it can contain a list like ['True'], ['ABear', 'BBear', 'CBear'] after that these value will be used by this fucntion to set the debugger flag for each bear in debug_bears list, (if it a list)","diffHunk":"@@ -291,22 +292,15 @@ def get_file_dict(filename_list, log_printer=None, allow_raw_files=False):\n     return file_dict\n \n \n-def filter_raising_callables(it, exception, *args, debug=False, **kwargs):\n-    \"\"\"\n-    Filters all callable items inside the given iterator that raise the\n-    given exceptions.\n-\n-    :param it:        The iterator to filter.\n-    :param exception: The (tuple of) exception(s) to filter for.\n-    :param args:      Positional arguments to pass to the callable.\n-    :param kwargs:    Keyword arguments to pass to the callable.\n-    \"\"\"\n-    for elem in it:\n-        try:\n-            yield elem(*args, **kwargs)\n-        except exception:\n-            if debug:\n-                raise\n+def debug_flag_checker(bear, debug_bears=False):\n+    if debug_bears is False:\n+        debugger = False\n+    elif ((str(debug_bears[0]).lower().strip()) == 'true') or (\n+            (bear.__name__) in debug_bears):\n+        debugger = True\n+    else:\n+        debugger = False\n+    return debugger","author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"reactions":[],"createdAt":"2018-06-11T06:51:54Z","lastEditedAt":"2018-06-11T06:55:26Z","updatedAt":"2018-06-11T06:55:26Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDMwOTQ4MQ==","url":"https://github.com/coala/coala/pull/5511#discussion_r194309481","bodyText":"It now will be difficult 😅 , ahh... it now soo messy for me to repaste all 😅","diffHunk":"@@ -291,22 +292,15 @@ def get_file_dict(filename_list, log_printer=None, allow_raw_files=False):\n     return file_dict\n \n \n-def filter_raising_callables(it, exception, *args, debug=False, **kwargs):\n-    \"\"\"\n-    Filters all callable items inside the given iterator that raise the\n-    given exceptions.\n-\n-    :param it:        The iterator to filter.\n-    :param exception: The (tuple of) exception(s) to filter for.\n-    :param args:      Positional arguments to pass to the callable.\n-    :param kwargs:    Keyword arguments to pass to the callable.\n-    \"\"\"\n-    for elem in it:\n-        try:\n-            yield elem(*args, **kwargs)\n-        except exception:\n-            if debug:\n-                raise","author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"reactions":[],"createdAt":"2018-06-11T07:18:28Z","lastEditedAt":null,"updatedAt":"2018-06-11T07:18:28Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDM0MDQyNQ==","url":"https://github.com/coala/coala/pull/5511#discussion_r194340425","bodyText":"I know you said arg is a tuple and you said -->Do you know you are passing empty dictionary but on the gitter channel :P, actually these arg and kwargs will not get used as I am using mock.patch.","diffHunk":"@@ -463,6 +473,30 @@ def test_bear_with_specific_language(self):\n         self.assertEqual(str(result), 'Hypertext Markup Language 5.1')\n         self.check_message(LOG_LEVEL.DEBUG)\n \n+    @patch('pdb.Pdb.do_continue')\n+    def test_do_continue(self, do_continue):\n+        arg = {}\n+        self.assertEqual(dbg.do_continue(arg), 1)\n+\n+    @patch('coalib.bears.Bear.dbg.runcall', side_effect=((1, 2), 3, 4))\n+    def test_debug_mode_func_with_return(self, runcall):\n+        section = Section('name')\n+        my_bear = TestOneBear(section, self.queue, debugger=True)\n+        args = {}\n+        kwargs = {}","author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"reactions":[],"createdAt":"2018-06-11T09:23:01Z","lastEditedAt":"2018-06-11T09:23:30Z","updatedAt":"2018-06-11T09:23:30Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDM0MTM5OQ==","url":"https://github.com/coala/coala/pull/5511#discussion_r194341399","bodyText":"btw I am removing debug_flag_checker function and doing something like this","diffHunk":"@@ -291,22 +292,15 @@ def get_file_dict(filename_list, log_printer=None, allow_raw_files=False):\n     return file_dict\n \n \n-def filter_raising_callables(it, exception, *args, debug=False, **kwargs):\n-    \"\"\"\n-    Filters all callable items inside the given iterator that raise the\n-    given exceptions.\n-\n-    :param it:        The iterator to filter.\n-    :param exception: The (tuple of) exception(s) to filter for.\n-    :param args:      Positional arguments to pass to the callable.\n-    :param kwargs:    Keyword arguments to pass to the callable.\n-    \"\"\"\n-    for elem in it:\n-        try:\n-            yield elem(*args, **kwargs)\n-        except exception:\n-            if debug:\n-                raise\n+def debug_flag_checker(bear, debug_bears=False):\n+    if debug_bears is False:\n+        debugger = False\n+    elif ((str(debug_bears[0]).lower().strip()) == 'true') or (\n+            (bear.__name__) in debug_bears):\n+        debugger = True\n+    else:\n+        debugger = False\n+    return debugger","author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"reactions":[],"createdAt":"2018-06-11T09:26:20Z","lastEditedAt":null,"updatedAt":"2018-06-11T09:26:20Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDM2MjQ5NA==","url":"https://github.com/coala/coala/pull/5511#discussion_r194362494","bodyText":"debug_run is best, a small one :P","diffHunk":"@@ -22,6 +24,34 @@\n from .meta import bearclass\n \n \n+class db(pdb.Pdb):\n+    def do_continue(self, arg):\n+        self.clear_all_breaks()\n+        super().do_continue(arg)\n+        return(1)\n+\n+\n+dbg = db()\n+dbg.do_q = dbg.do_continue\n+dbg.do_quit = dbg.do_continue\n+dbg.do_exit = dbg.do_continue\n+\n+\n+def debug_mode_function(func, dbg, *args, **kwargs):","author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"reactions":[],"createdAt":"2018-06-11T10:47:05Z","lastEditedAt":null,"updatedAt":"2018-06-11T10:47:05Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTkwNjkyMg==","url":"https://github.com/coala/coala/pull/5511#discussion_r195906922","bodyText":"A bit rephrasing to make it more clear.\n\nEnable bear debugging with pdb, that can help to identify and correct errors in bear code. Steps into bear code as soon as being executed.\nTo specify which bears to debug, supply bear names as additional arguments.\nIf used without arguments, all bears specified with --bears will be debugged (even implicit dependency bears).\n\n\nFirst explaining what the flag actually does, not what it is for.\nExplain shortly why that's useful.\nThen explain how to use the flag. :)\nIt seems the file uses the term \"bear\" lower case, so I would do that too.","diffHunk":"@@ -241,6 +241,14 @@ def default_arg_parser(formatter_class=None):\n         '-r', '--relpath', nargs='?', const=True,\n         help='return relative paths for files (must be called with --json)')\n \n+    outputs_group.add_argument(\n+        '--debug-bears', nargs='?', const=True, help='Debugging Bears will'\n+        'help user in identifying and removing errors from  Bear code'\n+        'with the help of Pdb interface, additionally user can pass'\n+        'bear name as a additional argument to debug those specific bear,'\n+        'if no additional arguments passed then it will debug all the bears'\n+        'passed to a --bears or -b argument')","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-06-16T16:35:32Z","lastEditedAt":null,"updatedAt":"2018-06-16T16:35:32Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTkwNzAzNQ==","url":"https://github.com/coala/coala/pull/5511#discussion_r195907035","bodyText":"redundant braces after else","diffHunk":"@@ -751,7 +755,12 @@ def execute_section(section,\n                              results (bear names are key) as well as the\n                              file dictionary.\n     \"\"\"\n-    if debug:\n+    debug_bears = (False\n+                   if 'debug_bears' not in section or (\n+                       section['debug_bears'].value == 'False') else (","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-06-16T16:41:33Z","lastEditedAt":null,"updatedAt":"2018-06-16T16:41:33Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTkwNzA0MQ==","url":"https://github.com/coala/coala/pull/5511#discussion_r195907041","bodyText":"Indentation: 8 spaces back","diffHunk":"@@ -751,7 +755,12 @@ def execute_section(section,\n                              results (bear names are key) as well as the\n                              file dictionary.\n     \"\"\"\n-    if debug:\n+    debug_bears = (False\n+                   if 'debug_bears' not in section or (\n+                       section['debug_bears'].value == 'False') else (\n+                            typed_list(str)(section['debug_bears'])))","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-06-16T16:41:51Z","lastEditedAt":null,"updatedAt":"2018-06-16T16:41:51Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTkwNzI2OA==","url":"https://github.com/coala/coala/pull/5511#discussion_r195907268","bodyText":"Interactive rebase\nmark this commit as edit\ngit reset HEAD~1\ngit add -p and stage only things belonging to removing filter_raising_callables\ncreate commit\ngit add -p and stage remaining code\ncreate commit\nContinue rebase: git rebase --continue\n\nThen you have split up the commit.","diffHunk":"@@ -291,22 +292,15 @@ def get_file_dict(filename_list, log_printer=None, allow_raw_files=False):\n     return file_dict\n \n \n-def filter_raising_callables(it, exception, *args, debug=False, **kwargs):\n-    \"\"\"\n-    Filters all callable items inside the given iterator that raise the\n-    given exceptions.\n-\n-    :param it:        The iterator to filter.\n-    :param exception: The (tuple of) exception(s) to filter for.\n-    :param args:      Positional arguments to pass to the callable.\n-    :param kwargs:    Keyword arguments to pass to the callable.\n-    \"\"\"\n-    for elem in it:\n-        try:\n-            yield elem(*args, **kwargs)\n-        except exception:\n-            if debug:\n-                raise","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-06-16T16:50:40Z","lastEditedAt":null,"updatedAt":"2018-06-16T16:50:40Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTkwNzMxOQ==","url":"https://github.com/coala/coala/pull/5511#discussion_r195907319","bodyText":"__init__ of superclasses should be invoked at top if possible.","diffHunk":"@@ -22,6 +24,34 @@\n from .meta import bearclass\n \n \n+class db(pdb.Pdb):\n+    def __init__(self, *args, **kwargs):\n+        self.do_q = self.custom_quit\n+        self.do_quit = self.custom_quit\n+        self.do_exit = self.custom_quit\n+        super(db, self).__init__(*args, **kwargs)","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-06-16T16:52:47Z","lastEditedAt":null,"updatedAt":"2018-06-16T16:52:47Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTkwNzM2NA==","url":"https://github.com/coala/coala/pull/5511#discussion_r195907364","bodyText":"I think you change this per-instance-patching to a per-class-patching (then you can completely leave out __init__, as you've nothing more to do there):\nclass db(pdb.Pdb):\n    def do_quit(self, arg):\n        self.clear_all_bears()\n        super().do_continue(arg)  # <-- super is actually redundant, but you can keep it since it makes the intention clear that we want to use the old, known \"continue\"\n        return 1\n\n    do_q = do_quit\n    do_exit = do_quit","diffHunk":"@@ -22,6 +24,34 @@\n from .meta import bearclass\n \n \n+class db(pdb.Pdb):\n+    def __init__(self, *args, **kwargs):\n+        self.do_q = self.custom_quit\n+        self.do_quit = self.custom_quit\n+        self.do_exit = self.custom_quit","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-06-16T16:55:04Z","lastEditedAt":null,"updatedAt":"2018-06-16T16:55:04Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTkwNzQ1Mg==","url":"https://github.com/coala/coala/pull/5511#discussion_r195907452","bodyText":"We keep that, it's definitely good, but I've thought about the scenario of setting breakpoints across bears or utilities. Imagine this:\nSome bear fails. You now want to debug. You step into code, experiment around, and you have set some breakpoints. The bear that failed is a local bear, so you step each time a new file arises into run. But since runcall has ended already for the last run, breakpoints you've set are gone.\nIt would be cool to disable breakpoints on exit, but remember them until the complete coala session ends (or some other point we thing breakpoints shall be kept alive).\nBut: We do that after merge, that's something to discuss later since it requires more design work.","diffHunk":"@@ -22,6 +24,34 @@\n from .meta import bearclass\n \n \n+class db(pdb.Pdb):\n+    def __init__(self, *args, **kwargs):\n+        self.do_q = self.custom_quit\n+        self.do_quit = self.custom_quit\n+        self.do_exit = self.custom_quit\n+        super(db, self).__init__(*args, **kwargs)\n+\n+    def custom_quit(self, arg):\n+        self.clear_all_breaks()","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-06-16T16:58:54Z","lastEditedAt":null,"updatedAt":"2018-06-16T16:58:54Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTkwNzQ2OQ==","url":"https://github.com/coala/coala/pull/5511#discussion_r195907469","bodyText":"ah sorry, I meant db as a default value for dbg, my bad 😅","diffHunk":"@@ -22,6 +24,34 @@\n from .meta import bearclass\n \n \n+class db(pdb.Pdb):\n+    def __init__(self, *args, **kwargs):\n+        self.do_q = self.custom_quit\n+        self.do_quit = self.custom_quit\n+        self.do_exit = self.custom_quit\n+        super(db, self).__init__(*args, **kwargs)\n+\n+    def custom_quit(self, arg):\n+        self.clear_all_breaks()\n+        super().do_continue(arg)\n+        return 1\n+\n+\n+def debug_run(func, dbg=pdb.Pdb(), *args, **kwargs):","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-06-16T16:59:33Z","lastEditedAt":null,"updatedAt":"2018-06-16T16:59:33Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTkwNzUxNg==","url":"https://github.com/coala/coala/pull/5511#discussion_r195907516","bodyText":"Maybe call the script tests.sh instead?","diffHunk":"@@ -36,7 +36,7 @@ jobs:\n       - run:\n           name: pytest\n           when: always\n-          command: python -m pytest\n+          command: bash .misc/pytest_run.sh","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNTE4Njc2Mw==","createdAt":"2018-06-16T17:31:01Z","content":"THUMBS_UP","user":{"login":"RaiVaibhav","name":"Vaibhav Rai"}}],"createdAt":"2018-06-16T17:01:11Z","lastEditedAt":null,"updatedAt":"2018-06-16T17:01:11Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTkwNzY3Nw==","url":"https://github.com/coala/coala/pull/5511#discussion_r195907677","bodyText":"section offers a defaulted get function, so you can shorten code here I believe.\ntyped_list(str)(section(...))\nif bool(section.get('debug_bears', False)) else\nFalse","diffHunk":"@@ -751,7 +755,12 @@ def execute_section(section,\n                              results (bear names are key) as well as the\n                              file dictionary.\n     \"\"\"\n-    if debug:\n+    debug_bears = (False\n+                   if 'debug_bears' not in section or (\n+                       section['debug_bears'].value == 'False') else (","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-06-16T17:08:40Z","lastEditedAt":null,"updatedAt":"2018-06-16T17:08:40Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTkwNzY4Mw==","url":"https://github.com/coala/coala/pull/5511#discussion_r195907683","bodyText":"Does it have to be a typed_list? That's intended for bear-use only^^","diffHunk":"@@ -751,7 +755,12 @@ def execute_section(section,\n                              results (bear names are key) as well as the\n                              file dictionary.\n     \"\"\"\n-    if debug:\n+    debug_bears = (False\n+                   if 'debug_bears' not in section or (\n+                       section['debug_bears'].value == 'False') else (\n+                            typed_list(str)(section['debug_bears'])))","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-06-16T17:08:51Z","lastEditedAt":null,"updatedAt":"2018-06-16T17:08:51Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTkwNzY4Nw==","url":"https://github.com/coala/coala/pull/5511#discussion_r195907687","bodyText":"Just thinking, what if you now specify debug-bears = True in a coafile. Won't you now get a typed list with ['True'] as value?","diffHunk":"@@ -751,7 +755,12 @@ def execute_section(section,\n                              results (bear names are key) as well as the\n                              file dictionary.\n     \"\"\"\n-    if debug:\n+    debug_bears = (False\n+                   if 'debug_bears' not in section or (\n+                       section['debug_bears'].value == 'False') else (\n+                            typed_list(str)(section['debug_bears'])))","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-06-16T17:09:18Z","lastEditedAt":null,"updatedAt":"2018-06-16T17:09:18Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTkwODE2OQ==","url":"https://github.com/coala/coala/pull/5511#discussion_r195908169","bodyText":"No as far as I know it will split it up like ['T', 'r', 'u', 'e'] Sorry Yes will get the ['True'] as value but it is helping on both case --debug-bears ABear, BBear  and --debug-bears without expanding the code","diffHunk":"@@ -751,7 +755,12 @@ def execute_section(section,\n                              results (bear names are key) as well as the\n                              file dictionary.\n     \"\"\"\n-    if debug:\n+    debug_bears = (False\n+                   if 'debug_bears' not in section or (\n+                       section['debug_bears'].value == 'False') else (\n+                            typed_list(str)(section['debug_bears'])))","author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"reactions":[],"createdAt":"2018-06-16T17:33:50Z","lastEditedAt":"2018-06-16T17:41:31Z","updatedAt":"2018-06-16T17:41:31Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTkwODIxNw==","url":"https://github.com/coala/coala/pull/5511#discussion_r195908217","bodyText":"Yes typed_list is used for the case like --debug-bears ABear, BBear.. it will split up the the value like ['ABear' 'BBear']","diffHunk":"@@ -751,7 +755,12 @@ def execute_section(section,\n                              results (bear names are key) as well as the\n                              file dictionary.\n     \"\"\"\n-    if debug:\n+    debug_bears = (False\n+                   if 'debug_bears' not in section or (\n+                       section['debug_bears'].value == 'False') else (\n+                            typed_list(str)(section['debug_bears'])))","author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"reactions":[],"createdAt":"2018-06-16T17:36:08Z","lastEditedAt":null,"updatedAt":"2018-06-16T17:36:08Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTkxOTE5OA==","url":"https://github.com/coala/coala/pull/5511#discussion_r195919198","bodyText":"I think I have already make it as a different commit","diffHunk":"@@ -291,22 +292,15 @@ def get_file_dict(filename_list, log_printer=None, allow_raw_files=False):\n     return file_dict\n \n \n-def filter_raising_callables(it, exception, *args, debug=False, **kwargs):\n-    \"\"\"\n-    Filters all callable items inside the given iterator that raise the\n-    given exceptions.\n-\n-    :param it:        The iterator to filter.\n-    :param exception: The (tuple of) exception(s) to filter for.\n-    :param args:      Positional arguments to pass to the callable.\n-    :param kwargs:    Keyword arguments to pass to the callable.\n-    \"\"\"\n-    for elem in it:\n-        try:\n-            yield elem(*args, **kwargs)\n-        except exception:\n-            if debug:\n-                raise","author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNTE5MzYzOQ==","createdAt":"2018-06-17T07:25:32Z","content":"THUMBS_DOWN","user":{"login":"RaiVaibhav","name":"Vaibhav Rai"}}],"createdAt":"2018-06-17T06:12:05Z","lastEditedAt":null,"updatedAt":"2018-06-17T06:12:05Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTkxOTg5NA==","url":"https://github.com/coala/coala/pull/5511#discussion_r195919894","bodyText":"bool(section.get('debug_bears', False)) will throw ValueError for the case --debug-bears ABear and If I do something like bool(section.get('debug_bears', False).value) then for the case --debug-bears False it will set the debug_bears value to ['False'] then in above code  I will have to check this case also. 😅","diffHunk":"@@ -751,7 +755,12 @@ def execute_section(section,\n                              results (bear names are key) as well as the\n                              file dictionary.\n     \"\"\"\n-    if debug:\n+    debug_bears = (False\n+                   if 'debug_bears' not in section or (\n+                       section['debug_bears'].value == 'False') else (","author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"reactions":[],"createdAt":"2018-06-17T06:57:04Z","lastEditedAt":null,"updatedAt":"2018-06-17T06:57:04Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTkyMTI5NQ==","url":"https://github.com/coala/coala/pull/5511#discussion_r195921295","bodyText":"Every time I am trying to make the 8 spaces back  PEP8Bear made the change during running coala  😅","diffHunk":"@@ -751,7 +755,12 @@ def execute_section(section,\n                              results (bear names are key) as well as the\n                              file dictionary.\n     \"\"\"\n-    if debug:\n+    debug_bears = (False\n+                   if 'debug_bears' not in section or (\n+                       section['debug_bears'].value == 'False') else (\n+                            typed_list(str)(section['debug_bears'])))","author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"reactions":[],"createdAt":"2018-06-17T08:00:20Z","lastEditedAt":null,"updatedAt":"2018-06-17T08:00:20Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTkyMTgwNw==","url":"https://github.com/coala/coala/pull/5511#discussion_r195921807","bodyText":"Point noted Bookmarking this comment. 👍","diffHunk":"@@ -22,6 +24,34 @@\n from .meta import bearclass\n \n \n+class db(pdb.Pdb):\n+    def __init__(self, *args, **kwargs):\n+        self.do_q = self.custom_quit\n+        self.do_quit = self.custom_quit\n+        self.do_exit = self.custom_quit\n+        super(db, self).__init__(*args, **kwargs)\n+\n+    def custom_quit(self, arg):\n+        self.clear_all_breaks()","author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"reactions":[],"createdAt":"2018-06-17T08:20:09Z","lastEditedAt":null,"updatedAt":"2018-06-17T08:20:09Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQwMDQwMjQ2Nw==","url":"https://github.com/coala/coala/pull/5511#issuecomment-400402467","bodyText":"Rebased using gitmate because settings toolset commit is on top of this PR.","diffHunk":null,"author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"reactions":[],"createdAt":"2018-06-26T17:42:17Z","lastEditedAt":null,"updatedAt":"2018-06-26T17:42:17Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1532873415000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5514","number":5514,"title":"Meta-review.rst: Add meta-review docs","body":"Closes #5513\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":4,"createdAt":"2018-06-11T04:25:05Z","updatedAt":"2018-07-29T14:10:15Z","closedAt":"2018-07-29T14:10:05Z","state":"merged","user":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4"},"owner":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4"},"assignee":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/medium","color":"0052cc"},{"name":"process/pending review","color":"bfe5bf"},{"name":"size/S","color":"B1CF0A"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5514","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDcwMjIwMA==","url":"https://github.com/coala/coala/pull/5514#discussion_r194702200","bodyText":"\"score people\" is a bit off-putting, when simplified like that.\nwe use that information to  ..\n\nimprove our process,\nimprove the quality of reviews being done.\n\netc\nWe are giving a score to their reviews.","diffHunk":"@@ -0,0 +1,140 @@\n+Meta-Reviewing\n+==============\n+\n+This document is a guide to coala's meta-review process.\n+\n+What is Meta-review?\n+--------------------\n+\n+People respond to review comments on pull requests by giving feedback. Emoji\n+make it much easier to give and receive feedback without a long comment thread.\n+Those emoji are called\n+`reactions <https://developer.github.com/v4/enum/reactioncontent/>`__ on GitHub\n+or `award emoji <https://docs.gitlab.com/ee/user/award_emojis.html>`__ on GitLab.\n+They are used by people to publicly express their feelings about review\n+comments, which provides feedback to comment authors and all other members.\n+\n+There are 6 types of reactions on GitHub:\n+\n+============  =============  =======  =====\n+ Name         Markdown       Unicode  Emoji\n+============  =============  =======  =====\n+ THUMBS_UP    ``:+1:``       U+1F44D  👍\n+ THUMBS_DOWN  ``:-1:``       U+1F44E  👎\n+ LAUGH        ``:smile:``    U+1F604  😄\n+ HOORAY       ``:tada:``     U+1F389  🎉\n+ CONFUSED     ``:confused``  U+1F615  😕\n+ HEART        ``:heart:``    U+FE0F   ❤️\n+============  =============  =======  =====\n+\n+These reactions are reviews to reviews, thus we call them meta-reviews. To\n+encourage people to do meta-reviews, we build a meta-review system, which\n+collects reactions, analyze them, and use that information to score people.","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-06-12T11:25:51Z","lastEditedAt":null,"updatedAt":"2018-06-12T11:25:51Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDcwMjI5OA==","url":"https://github.com/coala/coala/pull/5514#discussion_r194702298","bodyText":"If this isnt done yet, IMO we skip this and add it later.","diffHunk":"@@ -0,0 +1,140 @@\n+Meta-Reviewing\n+==============\n+\n+This document is a guide to coala's meta-review process.\n+\n+What is Meta-review?\n+--------------------\n+\n+People respond to review comments on pull requests by giving feedback. Emoji\n+make it much easier to give and receive feedback without a long comment thread.\n+Those emoji are called\n+`reactions <https://developer.github.com/v4/enum/reactioncontent/>`__ on GitHub\n+or `award emoji <https://docs.gitlab.com/ee/user/award_emojis.html>`__ on GitLab.\n+They are used by people to publicly express their feelings about review\n+comments, which provides feedback to comment authors and all other members.\n+\n+There are 6 types of reactions on GitHub:\n+\n+============  =============  =======  =====\n+ Name         Markdown       Unicode  Emoji\n+============  =============  =======  =====\n+ THUMBS_UP    ``:+1:``       U+1F44D  👍\n+ THUMBS_DOWN  ``:-1:``       U+1F44E  👎\n+ LAUGH        ``:smile:``    U+1F604  😄\n+ HOORAY       ``:tada:``     U+1F389  🎉\n+ CONFUSED     ``:confused``  U+1F615  😕\n+ HEART        ``:heart:``    U+FE0F   ❤️\n+============  =============  =======  =====\n+\n+These reactions are reviews to reviews, thus we call them meta-reviews. To\n+encourage people to do meta-reviews, we build a meta-review system, which\n+collects reactions, analyze them, and use that information to score people.\n+After scoring, a ranking list is shown on coala community website.","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-06-12T11:26:17Z","lastEditedAt":null,"updatedAt":"2018-06-12T11:26:17Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDcwMjQ1MA==","url":"https://github.com/coala/coala/pull/5514#discussion_r194702450","bodyText":"needs commas\nAnyone, especially author, of the pull request ..","diffHunk":"@@ -0,0 +1,140 @@\n+Meta-Reviewing\n+==============\n+\n+This document is a guide to coala's meta-review process.\n+\n+What is Meta-review?\n+--------------------\n+\n+People respond to review comments on pull requests by giving feedback. Emoji\n+make it much easier to give and receive feedback without a long comment thread.\n+Those emoji are called\n+`reactions <https://developer.github.com/v4/enum/reactioncontent/>`__ on GitHub\n+or `award emoji <https://docs.gitlab.com/ee/user/award_emojis.html>`__ on GitLab.\n+They are used by people to publicly express their feelings about review\n+comments, which provides feedback to comment authors and all other members.\n+\n+There are 6 types of reactions on GitHub:\n+\n+============  =============  =======  =====\n+ Name         Markdown       Unicode  Emoji\n+============  =============  =======  =====\n+ THUMBS_UP    ``:+1:``       U+1F44D  👍\n+ THUMBS_DOWN  ``:-1:``       U+1F44E  👎\n+ LAUGH        ``:smile:``    U+1F604  😄\n+ HOORAY       ``:tada:``     U+1F389  🎉\n+ CONFUSED     ``:confused``  U+1F615  😕\n+ HEART        ``:heart:``    U+FE0F   ❤️\n+============  =============  =======  =====\n+\n+These reactions are reviews to reviews, thus we call them meta-reviews. To\n+encourage people to do meta-reviews, we build a meta-review system, which\n+collects reactions, analyze them, and use that information to score people.\n+After scoring, a ranking list is shown on coala community website.\n+\n+At the moment, only THUMBS_UP and THUMBS_DOWN are collected and analyzed,\n+as they are most commonly used and express strong and clear feelings:\n+THUMBS_UP means the review comment is well-written and helpful, while\n+THUMBS_DOWN means the review comment is misleading, or even worse, violates\n+`coala Community Code of Conduct <https://github.com/coala/cEPs/blob/master/cEP-0006.md>`__.\n+\n+Meta-review Process\n+-------------------\n+\n+The meta-review process for coala is as follows:\n+\n+1. Reviewers create their reviews.\n+\n+2. Anyone especially author of the pull request can do meta-review (THUMBS_UP,","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-06-12T11:26:59Z","lastEditedAt":null,"updatedAt":"2018-06-12T11:26:59Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDcwMjcwMA==","url":"https://github.com/coala/coala/pull/5514#discussion_r194702700","bodyText":"\"on GitHub\"\nwell we want meta-review to be done on GitLab to.\nPerhaps instead note somewhere that only GitHub is being analysed at the moment.\nThis should also include the very important information about where people should put their PR review comments in order to be meta-reviewable due to limitations on GitHub.  i.e. PR approval comments not being meta-reviewable.  And any other usage best-practise we have found out.\nMaybe some of this should be in the Review guide, and/or links between them.","diffHunk":"@@ -0,0 +1,140 @@\n+Meta-Reviewing\n+==============\n+\n+This document is a guide to coala's meta-review process.\n+\n+What is Meta-review?\n+--------------------\n+\n+People respond to review comments on pull requests by giving feedback. Emoji\n+make it much easier to give and receive feedback without a long comment thread.\n+Those emoji are called\n+`reactions <https://developer.github.com/v4/enum/reactioncontent/>`__ on GitHub\n+or `award emoji <https://docs.gitlab.com/ee/user/award_emojis.html>`__ on GitLab.\n+They are used by people to publicly express their feelings about review\n+comments, which provides feedback to comment authors and all other members.\n+\n+There are 6 types of reactions on GitHub:\n+\n+============  =============  =======  =====\n+ Name         Markdown       Unicode  Emoji\n+============  =============  =======  =====\n+ THUMBS_UP    ``:+1:``       U+1F44D  👍\n+ THUMBS_DOWN  ``:-1:``       U+1F44E  👎\n+ LAUGH        ``:smile:``    U+1F604  😄\n+ HOORAY       ``:tada:``     U+1F389  🎉\n+ CONFUSED     ``:confused``  U+1F615  😕\n+ HEART        ``:heart:``    U+FE0F   ❤️\n+============  =============  =======  =====\n+\n+These reactions are reviews to reviews, thus we call them meta-reviews. To\n+encourage people to do meta-reviews, we build a meta-review system, which\n+collects reactions, analyze them, and use that information to score people.\n+After scoring, a ranking list is shown on coala community website.\n+\n+At the moment, only THUMBS_UP and THUMBS_DOWN are collected and analyzed,\n+as they are most commonly used and express strong and clear feelings:\n+THUMBS_UP means the review comment is well-written and helpful, while\n+THUMBS_DOWN means the review comment is misleading, or even worse, violates\n+`coala Community Code of Conduct <https://github.com/coala/cEPs/blob/master/cEP-0006.md>`__.\n+\n+Meta-review Process\n+-------------------\n+\n+The meta-review process for coala is as follows:\n+\n+1. Reviewers create their reviews.\n+\n+2. Anyone especially author of the pull request can do meta-review (THUMBS_UP,\n+   THUMBS_DOWN) via reactions on GitHub.","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNTAyMjI5MQ==","createdAt":"2018-06-13T11:45:45Z","content":"THUMBS_UP","user":{"login":"li-boxuan","name":"Boxuan Li"}}],"createdAt":"2018-06-12T11:28:14Z","lastEditedAt":null,"updatedAt":"2018-06-12T11:28:14Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDcwMzA3MQ==","url":"https://github.com/coala/coala/pull/5514#discussion_r194703071","bodyText":"as it will probably change, it is better for this document to not include the score calculation details; links to the .py code and the cEP are much more useful and much more maintainable.\nIf your detailed explanation here is better than in the cEP, update the cEP ;-)","diffHunk":"@@ -0,0 +1,140 @@\n+Meta-Reviewing\n+==============\n+\n+This document is a guide to coala's meta-review process.\n+\n+What is Meta-review?\n+--------------------\n+\n+People respond to review comments on pull requests by giving feedback. Emoji\n+make it much easier to give and receive feedback without a long comment thread.\n+Those emoji are called\n+`reactions <https://developer.github.com/v4/enum/reactioncontent/>`__ on GitHub\n+or `award emoji <https://docs.gitlab.com/ee/user/award_emojis.html>`__ on GitLab.\n+They are used by people to publicly express their feelings about review\n+comments, which provides feedback to comment authors and all other members.\n+\n+There are 6 types of reactions on GitHub:\n+\n+============  =============  =======  =====\n+ Name         Markdown       Unicode  Emoji\n+============  =============  =======  =====\n+ THUMBS_UP    ``:+1:``       U+1F44D  👍\n+ THUMBS_DOWN  ``:-1:``       U+1F44E  👎\n+ LAUGH        ``:smile:``    U+1F604  😄\n+ HOORAY       ``:tada:``     U+1F389  🎉\n+ CONFUSED     ``:confused``  U+1F615  😕\n+ HEART        ``:heart:``    U+FE0F   ❤️\n+============  =============  =======  =====\n+\n+These reactions are reviews to reviews, thus we call them meta-reviews. To\n+encourage people to do meta-reviews, we build a meta-review system, which\n+collects reactions, analyze them, and use that information to score people.\n+After scoring, a ranking list is shown on coala community website.\n+\n+At the moment, only THUMBS_UP and THUMBS_DOWN are collected and analyzed,\n+as they are most commonly used and express strong and clear feelings:\n+THUMBS_UP means the review comment is well-written and helpful, while\n+THUMBS_DOWN means the review comment is misleading, or even worse, violates\n+`coala Community Code of Conduct <https://github.com/coala/cEPs/blob/master/cEP-0006.md>`__.\n+\n+Meta-review Process\n+-------------------\n+\n+The meta-review process for coala is as follows:\n+\n+1. Reviewers create their reviews.\n+\n+2. Anyone especially author of the pull request can do meta-review (THUMBS_UP,\n+   THUMBS_DOWN) via reactions on GitHub.\n+\n+3. Meta-review information will be collected and analyzed automatically:\n+\n+   * Meta-reviewers will be given bonus points to encourage such behaviour\n+\n+   * Meta-reviewees will be given positive points (on receiving THUMBS_UP) or\n+     negative points (on receiving THUMBS_DOWN). Those points are weighted\n+     according to score of meta-reviewers. Those who have higher score in\n+     the meta-review system will have more impacts on others, so please do\n+     meta-reviews carefully.\n+\n+.. note::\n+\n+    Don't edit or even delete your review after it has been meta-reviewed.\n+    If you do that, you are destroying feedback from the community. This\n+    is considered as an improper behaviour and a negative score will be\n+    given to you.\n+\n+Automated Scoring Process\n+-------------------------\n+\n+A complete ranking list can be found on\n+`Meta-review score ranking list <https://deploy-preview-143--coala-community.netlify.com/meta-review/>`__.\n+Score is based on number of positive (THUMBS_UP) & negative (THUMBS_DOWN)\n+reactions one receives, and number of positive & negative reactions one gives\n+away. Calculation details can be found in\n+`meta_review/handler.py <https://github.com/li-boxuan/community/blob/2143fbcf925beb1ffe5ab1d9dd4d177e827dece2/meta_review/handler.py>`__.\n+\n+Briefly, score is calculated based on formulas as follows:","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNTAyNzYyMQ==","createdAt":"2018-06-13T13:26:53Z","content":"HOORAY","user":{"login":"li-boxuan","name":"Boxuan Li"}}],"createdAt":"2018-06-12T11:30:00Z","lastEditedAt":null,"updatedAt":"2018-06-12T11:30:00Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDcwMzIzMg==","url":"https://github.com/coala/coala/pull/5514#discussion_r194703232","bodyText":"the PR needs to have WIP: in the title until this is merged, ... or\nyou need to remove these if you want it merged sooner...","diffHunk":"@@ -0,0 +1,140 @@\n+Meta-Reviewing\n+==============\n+\n+This document is a guide to coala's meta-review process.\n+\n+What is Meta-review?\n+--------------------\n+\n+People respond to review comments on pull requests by giving feedback. Emoji\n+make it much easier to give and receive feedback without a long comment thread.\n+Those emoji are called\n+`reactions <https://developer.github.com/v4/enum/reactioncontent/>`__ on GitHub\n+or `award emoji <https://docs.gitlab.com/ee/user/award_emojis.html>`__ on GitLab.\n+They are used by people to publicly express their feelings about review\n+comments, which provides feedback to comment authors and all other members.\n+\n+There are 6 types of reactions on GitHub:\n+\n+============  =============  =======  =====\n+ Name         Markdown       Unicode  Emoji\n+============  =============  =======  =====\n+ THUMBS_UP    ``:+1:``       U+1F44D  👍\n+ THUMBS_DOWN  ``:-1:``       U+1F44E  👎\n+ LAUGH        ``:smile:``    U+1F604  😄\n+ HOORAY       ``:tada:``     U+1F389  🎉\n+ CONFUSED     ``:confused``  U+1F615  😕\n+ HEART        ``:heart:``    U+FE0F   ❤️\n+============  =============  =======  =====\n+\n+These reactions are reviews to reviews, thus we call them meta-reviews. To\n+encourage people to do meta-reviews, we build a meta-review system, which\n+collects reactions, analyze them, and use that information to score people.\n+After scoring, a ranking list is shown on coala community website.\n+\n+At the moment, only THUMBS_UP and THUMBS_DOWN are collected and analyzed,\n+as they are most commonly used and express strong and clear feelings:\n+THUMBS_UP means the review comment is well-written and helpful, while\n+THUMBS_DOWN means the review comment is misleading, or even worse, violates\n+`coala Community Code of Conduct <https://github.com/coala/cEPs/blob/master/cEP-0006.md>`__.\n+\n+Meta-review Process\n+-------------------\n+\n+The meta-review process for coala is as follows:\n+\n+1. Reviewers create their reviews.\n+\n+2. Anyone especially author of the pull request can do meta-review (THUMBS_UP,\n+   THUMBS_DOWN) via reactions on GitHub.\n+\n+3. Meta-review information will be collected and analyzed automatically:\n+\n+   * Meta-reviewers will be given bonus points to encourage such behaviour\n+\n+   * Meta-reviewees will be given positive points (on receiving THUMBS_UP) or\n+     negative points (on receiving THUMBS_DOWN). Those points are weighted\n+     according to score of meta-reviewers. Those who have higher score in\n+     the meta-review system will have more impacts on others, so please do\n+     meta-reviews carefully.\n+\n+.. note::\n+\n+    Don't edit or even delete your review after it has been meta-reviewed.\n+    If you do that, you are destroying feedback from the community. This\n+    is considered as an improper behaviour and a negative score will be\n+    given to you.\n+\n+Automated Scoring Process\n+-------------------------\n+\n+A complete ranking list can be found on\n+`Meta-review score ranking list <https://deploy-preview-143--coala-community.netlify.com/meta-review/>`__.","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-06-12T11:30:43Z","lastEditedAt":null,"updatedAt":"2018-06-12T11:30:43Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDgwMDMyNA==","url":"https://github.com/coala/coala/pull/5514#discussion_r194800324","bodyText":"full stop in the end for consistency","diffHunk":"@@ -0,0 +1,140 @@\n+Meta-Reviewing\n+==============\n+\n+This document is a guide to coala's meta-review process.\n+\n+What is Meta-review?\n+--------------------\n+\n+People respond to review comments on pull requests by giving feedback. Emoji\n+make it much easier to give and receive feedback without a long comment thread.\n+Those emoji are called\n+`reactions <https://developer.github.com/v4/enum/reactioncontent/>`__ on GitHub\n+or `award emoji <https://docs.gitlab.com/ee/user/award_emojis.html>`__ on GitLab.\n+They are used by people to publicly express their feelings about review\n+comments, which provides feedback to comment authors and all other members.\n+\n+There are 6 types of reactions on GitHub:\n+\n+============  =============  =======  =====\n+ Name         Markdown       Unicode  Emoji\n+============  =============  =======  =====\n+ THUMBS_UP    ``:+1:``       U+1F44D  👍\n+ THUMBS_DOWN  ``:-1:``       U+1F44E  👎\n+ LAUGH        ``:smile:``    U+1F604  😄\n+ HOORAY       ``:tada:``     U+1F389  🎉\n+ CONFUSED     ``:confused``  U+1F615  😕\n+ HEART        ``:heart:``    U+FE0F   ❤️\n+============  =============  =======  =====\n+\n+These reactions are reviews to reviews, thus we call them meta-reviews. To\n+encourage people to do meta-reviews, we build a meta-review system, which\n+collects reactions, analyze them, and use that information to score people.\n+After scoring, a ranking list is shown on coala community website.\n+\n+At the moment, only THUMBS_UP and THUMBS_DOWN are collected and analyzed,\n+as they are most commonly used and express strong and clear feelings:\n+THUMBS_UP means the review comment is well-written and helpful, while\n+THUMBS_DOWN means the review comment is misleading, or even worse, violates\n+`coala Community Code of Conduct <https://github.com/coala/cEPs/blob/master/cEP-0006.md>`__.\n+\n+Meta-review Process\n+-------------------\n+\n+The meta-review process for coala is as follows:\n+\n+1. Reviewers create their reviews.\n+\n+2. Anyone especially author of the pull request can do meta-review (THUMBS_UP,\n+   THUMBS_DOWN) via reactions on GitHub.\n+\n+3. Meta-review information will be collected and analyzed automatically:\n+\n+   * Meta-reviewers will be given bonus points to encourage such behaviour","author":{"login":"hemangsk","avatarUrl":"https://avatars3.githubusercontent.com/u/13018570?v=4","name":"Hemang Kumar"},"reactions":[],"createdAt":"2018-06-12T16:11:10Z","lastEditedAt":null,"updatedAt":"2018-06-12T16:11:10Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDgwMDcwNw==","url":"https://github.com/coala/coala/pull/5514#discussion_r194800707","bodyText":"I think you can just say 'Don't edit or delete ' with \"edit\" and \"delete\" in italics or bold. No need for the \"even\"","diffHunk":"@@ -0,0 +1,140 @@\n+Meta-Reviewing\n+==============\n+\n+This document is a guide to coala's meta-review process.\n+\n+What is Meta-review?\n+--------------------\n+\n+People respond to review comments on pull requests by giving feedback. Emoji\n+make it much easier to give and receive feedback without a long comment thread.\n+Those emoji are called\n+`reactions <https://developer.github.com/v4/enum/reactioncontent/>`__ on GitHub\n+or `award emoji <https://docs.gitlab.com/ee/user/award_emojis.html>`__ on GitLab.\n+They are used by people to publicly express their feelings about review\n+comments, which provides feedback to comment authors and all other members.\n+\n+There are 6 types of reactions on GitHub:\n+\n+============  =============  =======  =====\n+ Name         Markdown       Unicode  Emoji\n+============  =============  =======  =====\n+ THUMBS_UP    ``:+1:``       U+1F44D  👍\n+ THUMBS_DOWN  ``:-1:``       U+1F44E  👎\n+ LAUGH        ``:smile:``    U+1F604  😄\n+ HOORAY       ``:tada:``     U+1F389  🎉\n+ CONFUSED     ``:confused``  U+1F615  😕\n+ HEART        ``:heart:``    U+FE0F   ❤️\n+============  =============  =======  =====\n+\n+These reactions are reviews to reviews, thus we call them meta-reviews. To\n+encourage people to do meta-reviews, we build a meta-review system, which\n+collects reactions, analyze them, and use that information to score people.\n+After scoring, a ranking list is shown on coala community website.\n+\n+At the moment, only THUMBS_UP and THUMBS_DOWN are collected and analyzed,\n+as they are most commonly used and express strong and clear feelings:\n+THUMBS_UP means the review comment is well-written and helpful, while\n+THUMBS_DOWN means the review comment is misleading, or even worse, violates\n+`coala Community Code of Conduct <https://github.com/coala/cEPs/blob/master/cEP-0006.md>`__.\n+\n+Meta-review Process\n+-------------------\n+\n+The meta-review process for coala is as follows:\n+\n+1. Reviewers create their reviews.\n+\n+2. Anyone especially author of the pull request can do meta-review (THUMBS_UP,\n+   THUMBS_DOWN) via reactions on GitHub.\n+\n+3. Meta-review information will be collected and analyzed automatically:\n+\n+   * Meta-reviewers will be given bonus points to encourage such behaviour\n+\n+   * Meta-reviewees will be given positive points (on receiving THUMBS_UP) or\n+     negative points (on receiving THUMBS_DOWN). Those points are weighted\n+     according to score of meta-reviewers. Those who have higher score in\n+     the meta-review system will have more impacts on others, so please do\n+     meta-reviews carefully.\n+\n+.. note::\n+\n+    Don't edit or even delete your review after it has been meta-reviewed.","author":{"login":"hemangsk","avatarUrl":"https://avatars3.githubusercontent.com/u/13018570?v=4","name":"Hemang Kumar"},"reactions":[],"createdAt":"2018-06-12T16:12:13Z","lastEditedAt":null,"updatedAt":"2018-06-12T16:12:13Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDgwMDg5MA==","url":"https://github.com/coala/coala/pull/5514#discussion_r194800890","bodyText":"c1 to* be smaller","diffHunk":"@@ -0,0 +1,140 @@\n+Meta-Reviewing\n+==============\n+\n+This document is a guide to coala's meta-review process.\n+\n+What is Meta-review?\n+--------------------\n+\n+People respond to review comments on pull requests by giving feedback. Emoji\n+make it much easier to give and receive feedback without a long comment thread.\n+Those emoji are called\n+`reactions <https://developer.github.com/v4/enum/reactioncontent/>`__ on GitHub\n+or `award emoji <https://docs.gitlab.com/ee/user/award_emojis.html>`__ on GitLab.\n+They are used by people to publicly express their feelings about review\n+comments, which provides feedback to comment authors and all other members.\n+\n+There are 6 types of reactions on GitHub:\n+\n+============  =============  =======  =====\n+ Name         Markdown       Unicode  Emoji\n+============  =============  =======  =====\n+ THUMBS_UP    ``:+1:``       U+1F44D  👍\n+ THUMBS_DOWN  ``:-1:``       U+1F44E  👎\n+ LAUGH        ``:smile:``    U+1F604  😄\n+ HOORAY       ``:tada:``     U+1F389  🎉\n+ CONFUSED     ``:confused``  U+1F615  😕\n+ HEART        ``:heart:``    U+FE0F   ❤️\n+============  =============  =======  =====\n+\n+These reactions are reviews to reviews, thus we call them meta-reviews. To\n+encourage people to do meta-reviews, we build a meta-review system, which\n+collects reactions, analyze them, and use that information to score people.\n+After scoring, a ranking list is shown on coala community website.\n+\n+At the moment, only THUMBS_UP and THUMBS_DOWN are collected and analyzed,\n+as they are most commonly used and express strong and clear feelings:\n+THUMBS_UP means the review comment is well-written and helpful, while\n+THUMBS_DOWN means the review comment is misleading, or even worse, violates\n+`coala Community Code of Conduct <https://github.com/coala/cEPs/blob/master/cEP-0006.md>`__.\n+\n+Meta-review Process\n+-------------------\n+\n+The meta-review process for coala is as follows:\n+\n+1. Reviewers create their reviews.\n+\n+2. Anyone especially author of the pull request can do meta-review (THUMBS_UP,\n+   THUMBS_DOWN) via reactions on GitHub.\n+\n+3. Meta-review information will be collected and analyzed automatically:\n+\n+   * Meta-reviewers will be given bonus points to encourage such behaviour\n+\n+   * Meta-reviewees will be given positive points (on receiving THUMBS_UP) or\n+     negative points (on receiving THUMBS_DOWN). Those points are weighted\n+     according to score of meta-reviewers. Those who have higher score in\n+     the meta-review system will have more impacts on others, so please do\n+     meta-reviews carefully.\n+\n+.. note::\n+\n+    Don't edit or even delete your review after it has been meta-reviewed.\n+    If you do that, you are destroying feedback from the community. This\n+    is considered as an improper behaviour and a negative score will be\n+    given to you.\n+\n+Automated Scoring Process\n+-------------------------\n+\n+A complete ranking list can be found on\n+`Meta-review score ranking list <https://deploy-preview-143--coala-community.netlify.com/meta-review/>`__.\n+Score is based on number of positive (THUMBS_UP) & negative (THUMBS_DOWN)\n+reactions one receives, and number of positive & negative reactions one gives\n+away. Calculation details can be found in\n+`meta_review/handler.py <https://github.com/li-boxuan/community/blob/2143fbcf925beb1ffe5ab1d9dd4d177e827dece2/meta_review/handler.py>`__.\n+\n+Briefly, score is calculated based on formulas as follows:\n+\n+Define:\n+\n+P1 = total points (weighted) of THUMBS_UP a person gets for all\n+reviews he did.\n+\n+P2 = total number of THUMBS_UP a person gives to other\n+people for their reviews.\n+\n+N1 = total points (weighted) of THUMBS_DOWN a person gets for all\n+reviews he did.\n+\n+N2 = total number of THUMBS_DOWN a person gives to other people for\n+their reviews.\n+\n+Then final score, denote by S, is as follows:\n+\n+S =  P1 - N1 + c1 * P2 + c2 * N2\n+\n+where c1 = 0.05, c2 = 0.2. One will get at least 0.1 point for a\n+positive reaction they received, so we want c1 be smaller than that.","author":{"login":"hemangsk","avatarUrl":"https://avatars3.githubusercontent.com/u/13018570?v=4","name":"Hemang Kumar"},"reactions":[],"createdAt":"2018-06-12T16:12:43Z","lastEditedAt":null,"updatedAt":"2018-06-12T16:12:43Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDgwMTI1Nw==","url":"https://github.com/coala/coala/pull/5514#discussion_r194801257","bodyText":"Gender neutral, 'his/her' or 'their'","diffHunk":"@@ -0,0 +1,140 @@\n+Meta-Reviewing\n+==============\n+\n+This document is a guide to coala's meta-review process.\n+\n+What is Meta-review?\n+--------------------\n+\n+People respond to review comments on pull requests by giving feedback. Emoji\n+make it much easier to give and receive feedback without a long comment thread.\n+Those emoji are called\n+`reactions <https://developer.github.com/v4/enum/reactioncontent/>`__ on GitHub\n+or `award emoji <https://docs.gitlab.com/ee/user/award_emojis.html>`__ on GitLab.\n+They are used by people to publicly express their feelings about review\n+comments, which provides feedback to comment authors and all other members.\n+\n+There are 6 types of reactions on GitHub:\n+\n+============  =============  =======  =====\n+ Name         Markdown       Unicode  Emoji\n+============  =============  =======  =====\n+ THUMBS_UP    ``:+1:``       U+1F44D  👍\n+ THUMBS_DOWN  ``:-1:``       U+1F44E  👎\n+ LAUGH        ``:smile:``    U+1F604  😄\n+ HOORAY       ``:tada:``     U+1F389  🎉\n+ CONFUSED     ``:confused``  U+1F615  😕\n+ HEART        ``:heart:``    U+FE0F   ❤️\n+============  =============  =======  =====\n+\n+These reactions are reviews to reviews, thus we call them meta-reviews. To\n+encourage people to do meta-reviews, we build a meta-review system, which\n+collects reactions, analyze them, and use that information to score people.\n+After scoring, a ranking list is shown on coala community website.\n+\n+At the moment, only THUMBS_UP and THUMBS_DOWN are collected and analyzed,\n+as they are most commonly used and express strong and clear feelings:\n+THUMBS_UP means the review comment is well-written and helpful, while\n+THUMBS_DOWN means the review comment is misleading, or even worse, violates\n+`coala Community Code of Conduct <https://github.com/coala/cEPs/blob/master/cEP-0006.md>`__.\n+\n+Meta-review Process\n+-------------------\n+\n+The meta-review process for coala is as follows:\n+\n+1. Reviewers create their reviews.\n+\n+2. Anyone especially author of the pull request can do meta-review (THUMBS_UP,\n+   THUMBS_DOWN) via reactions on GitHub.\n+\n+3. Meta-review information will be collected and analyzed automatically:\n+\n+   * Meta-reviewers will be given bonus points to encourage such behaviour\n+\n+   * Meta-reviewees will be given positive points (on receiving THUMBS_UP) or\n+     negative points (on receiving THUMBS_DOWN). Those points are weighted\n+     according to score of meta-reviewers. Those who have higher score in\n+     the meta-review system will have more impacts on others, so please do\n+     meta-reviews carefully.\n+\n+.. note::\n+\n+    Don't edit or even delete your review after it has been meta-reviewed.\n+    If you do that, you are destroying feedback from the community. This\n+    is considered as an improper behaviour and a negative score will be\n+    given to you.\n+\n+Automated Scoring Process\n+-------------------------\n+\n+A complete ranking list can be found on\n+`Meta-review score ranking list <https://deploy-preview-143--coala-community.netlify.com/meta-review/>`__.\n+Score is based on number of positive (THUMBS_UP) & negative (THUMBS_DOWN)\n+reactions one receives, and number of positive & negative reactions one gives\n+away. Calculation details can be found in\n+`meta_review/handler.py <https://github.com/li-boxuan/community/blob/2143fbcf925beb1ffe5ab1d9dd4d177e827dece2/meta_review/handler.py>`__.\n+\n+Briefly, score is calculated based on formulas as follows:\n+\n+Define:\n+\n+P1 = total points (weighted) of THUMBS_UP a person gets for all\n+reviews he did.\n+\n+P2 = total number of THUMBS_UP a person gives to other\n+people for their reviews.\n+\n+N1 = total points (weighted) of THUMBS_DOWN a person gets for all\n+reviews he did.\n+\n+N2 = total number of THUMBS_DOWN a person gives to other people for\n+their reviews.\n+\n+Then final score, denote by S, is as follows:\n+\n+S =  P1 - N1 + c1 * P2 + c2 * N2\n+\n+where c1 = 0.05, c2 = 0.2. One will get at least 0.1 point for a\n+positive reaction they received, so we want c1 be smaller than that.\n+c2 is larger because people are reluctant to give negative reactions.\n+In all, bonus points (P2 and N2) aim to encourage people to do\n+meta-reviews, but we don't want them to dominate.\n+\n+.. note::\n+\n+    The scoring process is automated, and will be polished from time to\n+    time. As a meta-reviewer, you don't need to care too much about the\n+    details of meta-review system. Just make sure you follow the meta-review\n+    process!\n+\n+Iterative Weighting Factor\n+--------------------------\n+\n+As mentioned in the last section, P1 and P2 are weighted. They are updated\n+iteratively, everytime when meta-review system runs. This section explains\n+how the weight factor is calculated.\n+\n+The higher score a person has, the more impacts he has, thus his","author":{"login":"hemangsk","avatarUrl":"https://avatars3.githubusercontent.com/u/13018570?v=4","name":"Hemang Kumar"},"reactions":[],"createdAt":"2018-06-12T16:13:48Z","lastEditedAt":null,"updatedAt":"2018-06-12T16:13:48Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDgwMTY4OQ==","url":"https://github.com/coala/coala/pull/5514#discussion_r194801689","bodyText":"similarly instead of \"he / she has\", you can opt for 'they have'.","diffHunk":"@@ -0,0 +1,140 @@\n+Meta-Reviewing\n+==============\n+\n+This document is a guide to coala's meta-review process.\n+\n+What is Meta-review?\n+--------------------\n+\n+People respond to review comments on pull requests by giving feedback. Emoji\n+make it much easier to give and receive feedback without a long comment thread.\n+Those emoji are called\n+`reactions <https://developer.github.com/v4/enum/reactioncontent/>`__ on GitHub\n+or `award emoji <https://docs.gitlab.com/ee/user/award_emojis.html>`__ on GitLab.\n+They are used by people to publicly express their feelings about review\n+comments, which provides feedback to comment authors and all other members.\n+\n+There are 6 types of reactions on GitHub:\n+\n+============  =============  =======  =====\n+ Name         Markdown       Unicode  Emoji\n+============  =============  =======  =====\n+ THUMBS_UP    ``:+1:``       U+1F44D  👍\n+ THUMBS_DOWN  ``:-1:``       U+1F44E  👎\n+ LAUGH        ``:smile:``    U+1F604  😄\n+ HOORAY       ``:tada:``     U+1F389  🎉\n+ CONFUSED     ``:confused``  U+1F615  😕\n+ HEART        ``:heart:``    U+FE0F   ❤️\n+============  =============  =======  =====\n+\n+These reactions are reviews to reviews, thus we call them meta-reviews. To\n+encourage people to do meta-reviews, we build a meta-review system, which\n+collects reactions, analyze them, and use that information to score people.\n+After scoring, a ranking list is shown on coala community website.\n+\n+At the moment, only THUMBS_UP and THUMBS_DOWN are collected and analyzed,\n+as they are most commonly used and express strong and clear feelings:\n+THUMBS_UP means the review comment is well-written and helpful, while\n+THUMBS_DOWN means the review comment is misleading, or even worse, violates\n+`coala Community Code of Conduct <https://github.com/coala/cEPs/blob/master/cEP-0006.md>`__.\n+\n+Meta-review Process\n+-------------------\n+\n+The meta-review process for coala is as follows:\n+\n+1. Reviewers create their reviews.\n+\n+2. Anyone especially author of the pull request can do meta-review (THUMBS_UP,\n+   THUMBS_DOWN) via reactions on GitHub.\n+\n+3. Meta-review information will be collected and analyzed automatically:\n+\n+   * Meta-reviewers will be given bonus points to encourage such behaviour\n+\n+   * Meta-reviewees will be given positive points (on receiving THUMBS_UP) or\n+     negative points (on receiving THUMBS_DOWN). Those points are weighted\n+     according to score of meta-reviewers. Those who have higher score in\n+     the meta-review system will have more impacts on others, so please do\n+     meta-reviews carefully.\n+\n+.. note::\n+\n+    Don't edit or even delete your review after it has been meta-reviewed.\n+    If you do that, you are destroying feedback from the community. This\n+    is considered as an improper behaviour and a negative score will be\n+    given to you.\n+\n+Automated Scoring Process\n+-------------------------\n+\n+A complete ranking list can be found on\n+`Meta-review score ranking list <https://deploy-preview-143--coala-community.netlify.com/meta-review/>`__.\n+Score is based on number of positive (THUMBS_UP) & negative (THUMBS_DOWN)\n+reactions one receives, and number of positive & negative reactions one gives\n+away. Calculation details can be found in\n+`meta_review/handler.py <https://github.com/li-boxuan/community/blob/2143fbcf925beb1ffe5ab1d9dd4d177e827dece2/meta_review/handler.py>`__.\n+\n+Briefly, score is calculated based on formulas as follows:\n+\n+Define:\n+\n+P1 = total points (weighted) of THUMBS_UP a person gets for all\n+reviews he did.\n+\n+P2 = total number of THUMBS_UP a person gives to other\n+people for their reviews.\n+\n+N1 = total points (weighted) of THUMBS_DOWN a person gets for all\n+reviews he did.\n+\n+N2 = total number of THUMBS_DOWN a person gives to other people for\n+their reviews.\n+\n+Then final score, denote by S, is as follows:\n+\n+S =  P1 - N1 + c1 * P2 + c2 * N2\n+\n+where c1 = 0.05, c2 = 0.2. One will get at least 0.1 point for a\n+positive reaction they received, so we want c1 be smaller than that.\n+c2 is larger because people are reluctant to give negative reactions.\n+In all, bonus points (P2 and N2) aim to encourage people to do\n+meta-reviews, but we don't want them to dominate.\n+\n+.. note::\n+\n+    The scoring process is automated, and will be polished from time to\n+    time. As a meta-reviewer, you don't need to care too much about the\n+    details of meta-review system. Just make sure you follow the meta-review\n+    process!\n+\n+Iterative Weighting Factor\n+--------------------------\n+\n+As mentioned in the last section, P1 and P2 are weighted. They are updated\n+iteratively, everytime when meta-review system runs. This section explains\n+how the weight factor is calculated.\n+\n+The higher score a person has, the more impacts he has, thus his","author":{"login":"hemangsk","avatarUrl":"https://avatars3.githubusercontent.com/u/13018570?v=4","name":"Hemang Kumar"},"reactions":[],"createdAt":"2018-06-12T16:15:10Z","lastEditedAt":null,"updatedAt":"2018-06-12T16:15:10Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDg1Mjk5Mg==","url":"https://github.com/coala/coala/pull/5514#discussion_r194852992","bodyText":"Remove second space after =","diffHunk":"@@ -0,0 +1,140 @@\n+Meta-Reviewing\n+==============\n+\n+This document is a guide to coala's meta-review process.\n+\n+What is Meta-review?\n+--------------------\n+\n+People respond to review comments on pull requests by giving feedback. Emoji\n+make it much easier to give and receive feedback without a long comment thread.\n+Those emoji are called\n+`reactions <https://developer.github.com/v4/enum/reactioncontent/>`__ on GitHub\n+or `award emoji <https://docs.gitlab.com/ee/user/award_emojis.html>`__ on GitLab.\n+They are used by people to publicly express their feelings about review\n+comments, which provides feedback to comment authors and all other members.\n+\n+There are 6 types of reactions on GitHub:\n+\n+============  =============  =======  =====\n+ Name         Markdown       Unicode  Emoji\n+============  =============  =======  =====\n+ THUMBS_UP    ``:+1:``       U+1F44D  👍\n+ THUMBS_DOWN  ``:-1:``       U+1F44E  👎\n+ LAUGH        ``:smile:``    U+1F604  😄\n+ HOORAY       ``:tada:``     U+1F389  🎉\n+ CONFUSED     ``:confused``  U+1F615  😕\n+ HEART        ``:heart:``    U+FE0F   ❤️\n+============  =============  =======  =====\n+\n+These reactions are reviews to reviews, thus we call them meta-reviews. To\n+encourage people to do meta-reviews, we build a meta-review system, which\n+collects reactions, analyze them, and use that information to score people.\n+After scoring, a ranking list is shown on coala community website.\n+\n+At the moment, only THUMBS_UP and THUMBS_DOWN are collected and analyzed,\n+as they are most commonly used and express strong and clear feelings:\n+THUMBS_UP means the review comment is well-written and helpful, while\n+THUMBS_DOWN means the review comment is misleading, or even worse, violates\n+`coala Community Code of Conduct <https://github.com/coala/cEPs/blob/master/cEP-0006.md>`__.\n+\n+Meta-review Process\n+-------------------\n+\n+The meta-review process for coala is as follows:\n+\n+1. Reviewers create their reviews.\n+\n+2. Anyone especially author of the pull request can do meta-review (THUMBS_UP,\n+   THUMBS_DOWN) via reactions on GitHub.\n+\n+3. Meta-review information will be collected and analyzed automatically:\n+\n+   * Meta-reviewers will be given bonus points to encourage such behaviour\n+\n+   * Meta-reviewees will be given positive points (on receiving THUMBS_UP) or\n+     negative points (on receiving THUMBS_DOWN). Those points are weighted\n+     according to score of meta-reviewers. Those who have higher score in\n+     the meta-review system will have more impacts on others, so please do\n+     meta-reviews carefully.\n+\n+.. note::\n+\n+    Don't edit or even delete your review after it has been meta-reviewed.\n+    If you do that, you are destroying feedback from the community. This\n+    is considered as an improper behaviour and a negative score will be\n+    given to you.\n+\n+Automated Scoring Process\n+-------------------------\n+\n+A complete ranking list can be found on\n+`Meta-review score ranking list <https://deploy-preview-143--coala-community.netlify.com/meta-review/>`__.\n+Score is based on number of positive (THUMBS_UP) & negative (THUMBS_DOWN)\n+reactions one receives, and number of positive & negative reactions one gives\n+away. Calculation details can be found in\n+`meta_review/handler.py <https://github.com/li-boxuan/community/blob/2143fbcf925beb1ffe5ab1d9dd4d177e827dece2/meta_review/handler.py>`__.\n+\n+Briefly, score is calculated based on formulas as follows:\n+\n+Define:\n+\n+P1 = total points (weighted) of THUMBS_UP a person gets for all\n+reviews he did.\n+\n+P2 = total number of THUMBS_UP a person gives to other\n+people for their reviews.\n+\n+N1 = total points (weighted) of THUMBS_DOWN a person gets for all\n+reviews he did.\n+\n+N2 = total number of THUMBS_DOWN a person gives to other people for\n+their reviews.\n+\n+Then final score, denote by S, is as follows:\n+\n+S =  P1 - N1 + c1 * P2 + c2 * N2","author":{"login":"andrewda","avatarUrl":"https://avatars1.githubusercontent.com/u/10191084?v=4","name":"Andrew Dassonville"},"reactions":[],"createdAt":"2018-06-12T18:59:03Z","lastEditedAt":null,"updatedAt":"2018-06-12T18:59:03Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTA4MDYzOQ==","url":"https://github.com/coala/coala/pull/5514#discussion_r195080639","bodyText":"I'll update the cEP after coala/community#143 is merged ;)","diffHunk":"@@ -0,0 +1,140 @@\n+Meta-Reviewing\n+==============\n+\n+This document is a guide to coala's meta-review process.\n+\n+What is Meta-review?\n+--------------------\n+\n+People respond to review comments on pull requests by giving feedback. Emoji\n+make it much easier to give and receive feedback without a long comment thread.\n+Those emoji are called\n+`reactions <https://developer.github.com/v4/enum/reactioncontent/>`__ on GitHub\n+or `award emoji <https://docs.gitlab.com/ee/user/award_emojis.html>`__ on GitLab.\n+They are used by people to publicly express their feelings about review\n+comments, which provides feedback to comment authors and all other members.\n+\n+There are 6 types of reactions on GitHub:\n+\n+============  =============  =======  =====\n+ Name         Markdown       Unicode  Emoji\n+============  =============  =======  =====\n+ THUMBS_UP    ``:+1:``       U+1F44D  👍\n+ THUMBS_DOWN  ``:-1:``       U+1F44E  👎\n+ LAUGH        ``:smile:``    U+1F604  😄\n+ HOORAY       ``:tada:``     U+1F389  🎉\n+ CONFUSED     ``:confused``  U+1F615  😕\n+ HEART        ``:heart:``    U+FE0F   ❤️\n+============  =============  =======  =====\n+\n+These reactions are reviews to reviews, thus we call them meta-reviews. To\n+encourage people to do meta-reviews, we build a meta-review system, which\n+collects reactions, analyze them, and use that information to score people.\n+After scoring, a ranking list is shown on coala community website.\n+\n+At the moment, only THUMBS_UP and THUMBS_DOWN are collected and analyzed,\n+as they are most commonly used and express strong and clear feelings:\n+THUMBS_UP means the review comment is well-written and helpful, while\n+THUMBS_DOWN means the review comment is misleading, or even worse, violates\n+`coala Community Code of Conduct <https://github.com/coala/cEPs/blob/master/cEP-0006.md>`__.\n+\n+Meta-review Process\n+-------------------\n+\n+The meta-review process for coala is as follows:\n+\n+1. Reviewers create their reviews.\n+\n+2. Anyone especially author of the pull request can do meta-review (THUMBS_UP,\n+   THUMBS_DOWN) via reactions on GitHub.\n+\n+3. Meta-review information will be collected and analyzed automatically:\n+\n+   * Meta-reviewers will be given bonus points to encourage such behaviour\n+\n+   * Meta-reviewees will be given positive points (on receiving THUMBS_UP) or\n+     negative points (on receiving THUMBS_DOWN). Those points are weighted\n+     according to score of meta-reviewers. Those who have higher score in\n+     the meta-review system will have more impacts on others, so please do\n+     meta-reviews carefully.\n+\n+.. note::\n+\n+    Don't edit or even delete your review after it has been meta-reviewed.\n+    If you do that, you are destroying feedback from the community. This\n+    is considered as an improper behaviour and a negative score will be\n+    given to you.\n+\n+Automated Scoring Process\n+-------------------------\n+\n+A complete ranking list can be found on\n+`Meta-review score ranking list <https://deploy-preview-143--coala-community.netlify.com/meta-review/>`__.\n+Score is based on number of positive (THUMBS_UP) & negative (THUMBS_DOWN)\n+reactions one receives, and number of positive & negative reactions one gives\n+away. Calculation details can be found in\n+`meta_review/handler.py <https://github.com/li-boxuan/community/blob/2143fbcf925beb1ffe5ab1d9dd4d177e827dece2/meta_review/handler.py>`__.\n+\n+Briefly, score is calculated based on formulas as follows:","author":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4","name":"Boxuan Li"},"reactions":[],"createdAt":"2018-06-13T13:28:26Z","lastEditedAt":null,"updatedAt":"2018-06-13T13:28:26Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTA4MzYyNw==","url":"https://github.com/coala/coala/pull/5514#discussion_r195083627","bodyText":"I am going to remove this part, but this review still helps as I made the same error in coala/community#143 ;)","diffHunk":"@@ -0,0 +1,140 @@\n+Meta-Reviewing\n+==============\n+\n+This document is a guide to coala's meta-review process.\n+\n+What is Meta-review?\n+--------------------\n+\n+People respond to review comments on pull requests by giving feedback. Emoji\n+make it much easier to give and receive feedback without a long comment thread.\n+Those emoji are called\n+`reactions <https://developer.github.com/v4/enum/reactioncontent/>`__ on GitHub\n+or `award emoji <https://docs.gitlab.com/ee/user/award_emojis.html>`__ on GitLab.\n+They are used by people to publicly express their feelings about review\n+comments, which provides feedback to comment authors and all other members.\n+\n+There are 6 types of reactions on GitHub:\n+\n+============  =============  =======  =====\n+ Name         Markdown       Unicode  Emoji\n+============  =============  =======  =====\n+ THUMBS_UP    ``:+1:``       U+1F44D  👍\n+ THUMBS_DOWN  ``:-1:``       U+1F44E  👎\n+ LAUGH        ``:smile:``    U+1F604  😄\n+ HOORAY       ``:tada:``     U+1F389  🎉\n+ CONFUSED     ``:confused``  U+1F615  😕\n+ HEART        ``:heart:``    U+FE0F   ❤️\n+============  =============  =======  =====\n+\n+These reactions are reviews to reviews, thus we call them meta-reviews. To\n+encourage people to do meta-reviews, we build a meta-review system, which\n+collects reactions, analyze them, and use that information to score people.\n+After scoring, a ranking list is shown on coala community website.\n+\n+At the moment, only THUMBS_UP and THUMBS_DOWN are collected and analyzed,\n+as they are most commonly used and express strong and clear feelings:\n+THUMBS_UP means the review comment is well-written and helpful, while\n+THUMBS_DOWN means the review comment is misleading, or even worse, violates\n+`coala Community Code of Conduct <https://github.com/coala/cEPs/blob/master/cEP-0006.md>`__.\n+\n+Meta-review Process\n+-------------------\n+\n+The meta-review process for coala is as follows:\n+\n+1. Reviewers create their reviews.\n+\n+2. Anyone especially author of the pull request can do meta-review (THUMBS_UP,\n+   THUMBS_DOWN) via reactions on GitHub.\n+\n+3. Meta-review information will be collected and analyzed automatically:\n+\n+   * Meta-reviewers will be given bonus points to encourage such behaviour\n+\n+   * Meta-reviewees will be given positive points (on receiving THUMBS_UP) or\n+     negative points (on receiving THUMBS_DOWN). Those points are weighted\n+     according to score of meta-reviewers. Those who have higher score in\n+     the meta-review system will have more impacts on others, so please do\n+     meta-reviews carefully.\n+\n+.. note::\n+\n+    Don't edit or even delete your review after it has been meta-reviewed.\n+    If you do that, you are destroying feedback from the community. This\n+    is considered as an improper behaviour and a negative score will be\n+    given to you.\n+\n+Automated Scoring Process\n+-------------------------\n+\n+A complete ranking list can be found on\n+`Meta-review score ranking list <https://deploy-preview-143--coala-community.netlify.com/meta-review/>`__.\n+Score is based on number of positive (THUMBS_UP) & negative (THUMBS_DOWN)\n+reactions one receives, and number of positive & negative reactions one gives\n+away. Calculation details can be found in\n+`meta_review/handler.py <https://github.com/li-boxuan/community/blob/2143fbcf925beb1ffe5ab1d9dd4d177e827dece2/meta_review/handler.py>`__.\n+\n+Briefly, score is calculated based on formulas as follows:\n+\n+Define:\n+\n+P1 = total points (weighted) of THUMBS_UP a person gets for all\n+reviews he did.\n+\n+P2 = total number of THUMBS_UP a person gives to other\n+people for their reviews.\n+\n+N1 = total points (weighted) of THUMBS_DOWN a person gets for all\n+reviews he did.\n+\n+N2 = total number of THUMBS_DOWN a person gives to other people for\n+their reviews.\n+\n+Then final score, denote by S, is as follows:\n+\n+S =  P1 - N1 + c1 * P2 + c2 * N2\n+\n+where c1 = 0.05, c2 = 0.2. One will get at least 0.1 point for a\n+positive reaction they received, so we want c1 be smaller than that.","author":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4","name":"Boxuan Li"},"reactions":[],"createdAt":"2018-06-13T13:36:34Z","lastEditedAt":null,"updatedAt":"2018-06-13T13:36:34Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTA4NDE4NA==","url":"https://github.com/coala/coala/pull/5514#discussion_r195084184","bodyText":"I am going to remove this part, but this review still helps as I made the same error in coala/community#143 ;)","diffHunk":"@@ -0,0 +1,140 @@\n+Meta-Reviewing\n+==============\n+\n+This document is a guide to coala's meta-review process.\n+\n+What is Meta-review?\n+--------------------\n+\n+People respond to review comments on pull requests by giving feedback. Emoji\n+make it much easier to give and receive feedback without a long comment thread.\n+Those emoji are called\n+`reactions <https://developer.github.com/v4/enum/reactioncontent/>`__ on GitHub\n+or `award emoji <https://docs.gitlab.com/ee/user/award_emojis.html>`__ on GitLab.\n+They are used by people to publicly express their feelings about review\n+comments, which provides feedback to comment authors and all other members.\n+\n+There are 6 types of reactions on GitHub:\n+\n+============  =============  =======  =====\n+ Name         Markdown       Unicode  Emoji\n+============  =============  =======  =====\n+ THUMBS_UP    ``:+1:``       U+1F44D  👍\n+ THUMBS_DOWN  ``:-1:``       U+1F44E  👎\n+ LAUGH        ``:smile:``    U+1F604  😄\n+ HOORAY       ``:tada:``     U+1F389  🎉\n+ CONFUSED     ``:confused``  U+1F615  😕\n+ HEART        ``:heart:``    U+FE0F   ❤️\n+============  =============  =======  =====\n+\n+These reactions are reviews to reviews, thus we call them meta-reviews. To\n+encourage people to do meta-reviews, we build a meta-review system, which\n+collects reactions, analyze them, and use that information to score people.\n+After scoring, a ranking list is shown on coala community website.\n+\n+At the moment, only THUMBS_UP and THUMBS_DOWN are collected and analyzed,\n+as they are most commonly used and express strong and clear feelings:\n+THUMBS_UP means the review comment is well-written and helpful, while\n+THUMBS_DOWN means the review comment is misleading, or even worse, violates\n+`coala Community Code of Conduct <https://github.com/coala/cEPs/blob/master/cEP-0006.md>`__.\n+\n+Meta-review Process\n+-------------------\n+\n+The meta-review process for coala is as follows:\n+\n+1. Reviewers create their reviews.\n+\n+2. Anyone especially author of the pull request can do meta-review (THUMBS_UP,\n+   THUMBS_DOWN) via reactions on GitHub.\n+\n+3. Meta-review information will be collected and analyzed automatically:\n+\n+   * Meta-reviewers will be given bonus points to encourage such behaviour\n+\n+   * Meta-reviewees will be given positive points (on receiving THUMBS_UP) or\n+     negative points (on receiving THUMBS_DOWN). Those points are weighted\n+     according to score of meta-reviewers. Those who have higher score in\n+     the meta-review system will have more impacts on others, so please do\n+     meta-reviews carefully.\n+\n+.. note::\n+\n+    Don't edit or even delete your review after it has been meta-reviewed.\n+    If you do that, you are destroying feedback from the community. This\n+    is considered as an improper behaviour and a negative score will be\n+    given to you.\n+\n+Automated Scoring Process\n+-------------------------\n+\n+A complete ranking list can be found on\n+`Meta-review score ranking list <https://deploy-preview-143--coala-community.netlify.com/meta-review/>`__.\n+Score is based on number of positive (THUMBS_UP) & negative (THUMBS_DOWN)\n+reactions one receives, and number of positive & negative reactions one gives\n+away. Calculation details can be found in\n+`meta_review/handler.py <https://github.com/li-boxuan/community/blob/2143fbcf925beb1ffe5ab1d9dd4d177e827dece2/meta_review/handler.py>`__.\n+\n+Briefly, score is calculated based on formulas as follows:\n+\n+Define:\n+\n+P1 = total points (weighted) of THUMBS_UP a person gets for all\n+reviews he did.\n+\n+P2 = total number of THUMBS_UP a person gives to other\n+people for their reviews.\n+\n+N1 = total points (weighted) of THUMBS_DOWN a person gets for all\n+reviews he did.\n+\n+N2 = total number of THUMBS_DOWN a person gives to other people for\n+their reviews.\n+\n+Then final score, denote by S, is as follows:\n+\n+S =  P1 - N1 + c1 * P2 + c2 * N2","author":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4","name":"Boxuan Li"},"reactions":[],"createdAt":"2018-06-13T13:38:19Z","lastEditedAt":null,"updatedAt":"2018-06-13T13:38:19Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNTk2MDI0Ng==","url":"https://github.com/coala/coala/pull/5514#discussion_r205960246","bodyText":"It is live!\nURL needs updating","diffHunk":"@@ -0,0 +1,140 @@\n+Meta-Reviewing\n+==============\n+\n+This document is a guide to coala's meta-review process.\n+\n+What is Meta-review?\n+--------------------\n+\n+People respond to review comments on pull requests by giving feedback. Emoji\n+make it much easier to give and receive feedback without a long comment thread.\n+Those emoji are called\n+`reactions <https://developer.github.com/v4/enum/reactioncontent/>`__ on GitHub\n+or `award emoji <https://docs.gitlab.com/ee/user/award_emojis.html>`__ on GitLab.\n+They are used by people to publicly express their feelings about review\n+comments, which provides feedback to comment authors and all other members.\n+\n+There are 6 types of reactions on GitHub:\n+\n+============  =============  =======  =====\n+ Name         Markdown       Unicode  Emoji\n+============  =============  =======  =====\n+ THUMBS_UP    ``:+1:``       U+1F44D  👍\n+ THUMBS_DOWN  ``:-1:``       U+1F44E  👎\n+ LAUGH        ``:smile:``    U+1F604  😄\n+ HOORAY       ``:tada:``     U+1F389  🎉\n+ CONFUSED     ``:confused``  U+1F615  😕\n+ HEART        ``:heart:``    U+FE0F   ❤️\n+============  =============  =======  =====\n+\n+These reactions are reviews to reviews, thus we call them meta-reviews. To\n+encourage people to do meta-reviews, we build a meta-review system, which\n+collects reactions, analyze them, and use that information to score people.\n+After scoring, a ranking list is shown on coala community website.\n+\n+At the moment, only THUMBS_UP and THUMBS_DOWN are collected and analyzed,\n+as they are most commonly used and express strong and clear feelings:\n+THUMBS_UP means the review comment is well-written and helpful, while\n+THUMBS_DOWN means the review comment is misleading, or even worse, violates\n+`coala Community Code of Conduct <https://github.com/coala/cEPs/blob/master/cEP-0006.md>`__.\n+\n+Meta-review Process\n+-------------------\n+\n+The meta-review process for coala is as follows:\n+\n+1. Reviewers create their reviews.\n+\n+2. Anyone especially author of the pull request can do meta-review (THUMBS_UP,\n+   THUMBS_DOWN) via reactions on GitHub.\n+\n+3. Meta-review information will be collected and analyzed automatically:\n+\n+   * Meta-reviewers will be given bonus points to encourage such behaviour\n+\n+   * Meta-reviewees will be given positive points (on receiving THUMBS_UP) or\n+     negative points (on receiving THUMBS_DOWN). Those points are weighted\n+     according to score of meta-reviewers. Those who have higher score in\n+     the meta-review system will have more impacts on others, so please do\n+     meta-reviews carefully.\n+\n+.. note::\n+\n+    Don't edit or even delete your review after it has been meta-reviewed.\n+    If you do that, you are destroying feedback from the community. This\n+    is considered as an improper behaviour and a negative score will be\n+    given to you.\n+\n+Automated Scoring Process\n+-------------------------\n+\n+A complete ranking list can be found on\n+`Meta-review score ranking list <https://deploy-preview-143--coala-community.netlify.com/meta-review/>`__.","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-07-29T04:08:50Z","lastEditedAt":null,"updatedAt":"2018-07-29T04:08:50Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNTk2MDI2Mg==","url":"https://github.com/coala/coala/pull/5514#discussion_r205960262","bodyText":"avoid mentioning P1 and P2.\nJust use a high level textual description of the algorithm's intent.","diffHunk":"@@ -0,0 +1,132 @@\n+Meta-Reviewing\n+==============\n+\n+This document is a guide to coala's meta-review process.\n+\n+What is Meta-review?\n+--------------------\n+\n+People respond to review comments on pull requests by giving feedback. Emoji\n+make it much easier to give and receive feedback without a long comment thread.\n+Those emoji are called\n+`reactions <https://developer.github.com/v4/enum/reactioncontent/>`__ on GitHub\n+or `award emoji <https://docs.gitlab.com/ee/user/award_emojis.html>`__ on GitLab.\n+They are used by people to publicly express their feelings about review\n+comments, which provides feedback to comment authors and all other members.\n+\n+There are 6 types of reactions on GitHub:\n+\n+============  =============  =======  =====\n+ Name         Markdown       Unicode  Emoji\n+============  =============  =======  =====\n+ THUMBS_UP    ``:+1:``       U+1F44D  👍\n+ THUMBS_DOWN  ``:-1:``       U+1F44E  👎\n+ LAUGH        ``:smile:``    U+1F604  😄\n+ HOORAY       ``:tada:``     U+1F389  🎉\n+ CONFUSED     ``:confused``  U+1F615  😕\n+ HEART        ``:heart:``    U+FE0F   ❤️\n+============  =============  =======  =====\n+\n+These reactions are reviews to reviews, thus we call them meta-reviews. To\n+encourage people to do meta-reviews, we build a meta-review system, which\n+collects reactions, analyze them, and use that information to improve our\n+review process and the quality of reviews. We give a score to people's\n+reviews based on reactions they receive. After scoring, a ranking list\n+is shown on coala community website.\n+\n+At the moment, only THUMBS_UP and THUMBS_DOWN are collected and analyzed,\n+as they are most commonly used and express strong and clear feelings:\n+THUMBS_UP means the review comment is well-written and helpful, while\n+THUMBS_DOWN means the review comment is misleading, or even worse, violates\n+`coala Community Code of Conduct <https://github.com/coala/cEPs/blob/master/cEP-0006.md>`__.\n+\n+.. note::\n+\n+    Only GitHub is being analyzed at the moment. Support for GitLab will\n+    be available in the future.\n+\n+Meta-review Process\n+-------------------\n+\n+The meta-review process for coala is as follows:\n+\n+1. Reviewers create their reviews.\n+\n+2. Anyone, especially author of the pull request, can do meta-review (THUMBS_UP,\n+   THUMBS_DOWN) via reactions on GitHub.\n+\n+3. Meta-review information will be collected and analyzed automatically:\n+\n+   * Meta-reviewers will be given bonus points to encourage such behaviour.\n+\n+   * Meta-reviewees will be given positive points (on receiving THUMBS_UP) or\n+     negative points (on receiving THUMBS_DOWN). Those points are weighted\n+     according to score of meta-reviewers. Those who have higher score in\n+     the meta-review system will have more impacts on others, so please do\n+     meta-reviews carefully.\n+\n+.. note::\n+\n+    Due to limitations on GitHub, review summary\n+    (`example <https://github.com/coala/coala-bears/pull/2517#pullrequestreview-125039346>`__)\n+    is not able to be meta-reviewed. If your review is not related to any\n+    particular line, leaving a comment\n+    (`example <https://github.com/coala/coala-bears/pull/2517#issuecomment-393678689>`__)\n+    is encouraged.\n+\n+.. caution::\n+\n+    Don't **edit** or **delete** your review after it has been meta-reviewed.\n+    If you do that, you are destroying feedback from the community. This\n+    is considered as an improper behaviour and a negative score will be\n+    given to you.\n+\n+Automated Scoring Process\n+-------------------------\n+\n+A complete ranking list can be found on\n+`Meta-review score ranking list <https://deploy-preview-143--coala-community.netlify.com/meta-review/>`__.\n+Score is based on number of positive (THUMBS_UP) & negative (THUMBS_DOWN)\n+reactions one receives, and number of positive & negative reactions one gives\n+away. The formula can be found in\n+`cEP-0019.md <https://github.com/coala/cEPs/blob/master/cEP-0019.md#ranking-list>`__.\n+Calculation details can be found in\n+`meta_review/handler.py <https://github.com/li-boxuan/community/blob/2143fbcf925beb1ffe5ab1d9dd4d177e827dece2/meta_review/handler.py>`__.\n+\n+.. note::\n+\n+    The scoring process is automated, and will be polished from time to\n+    time. As a meta-reviewer, you don't need to care too much about the\n+    details of meta-review system. Just make sure you follow the meta-review\n+    process!\n+\n+Iterative Weighting Factor\n+--------------------------\n+\n+As mentioned in the last section, P1 and P2 are weighted. They are updated","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-07-29T04:10:24Z","lastEditedAt":null,"updatedAt":"2018-07-29T04:10:24Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1529595691000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5521","number":5521,"title":"Fixing typo review.rst","body":"fixing typo Github to GitHub in Review.rst file\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":4,"createdAt":"2018-06-13T15:37:21Z","updatedAt":"2018-06-21T15:41:31Z","closedAt":null,"state":"open","user":{"login":"hemanthsavasere","avatarUrl":"https://avatars0.githubusercontent.com/u/11555217?v=4"},"owner":{"login":"hemanthsavasere","avatarUrl":"https://avatars0.githubusercontent.com/u/11555217?v=4"},"labels":[{"name":"process/wip","color":"fbca04"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5521","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDM5ODYzNzE3MA==","url":"https://github.com/coala/coala/pull/5521#issuecomment-398637170","bodyText":"See the CI logs, they are failing because you are using fixing which is a bad word here. Read the commit guidelines and amend your commit message as stated by @sangamcse :)","diffHunk":null,"author":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4","name":"Pareksha Manchanda"},"reactions":[],"createdAt":"2018-06-20T06:20:34Z","lastEditedAt":"2018-06-20T06:21:06Z","updatedAt":"2018-06-20T06:21:06Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM5ODY1ODcxNw==","url":"https://github.com/coala/coala/pull/5521#issuecomment-398658717","bodyText":"http://coala.io/commit","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-06-20T07:54:58Z","lastEditedAt":null,"updatedAt":"2018-06-20T07:54:58Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM5OTE0ODgxNQ==","url":"https://github.com/coala/coala/pull/5521#issuecomment-399148815","bodyText":"This PR has a duplicate here #5528\nAlso this work wasn't assigned to @hemanthsavasere  see the issue link #5512\nSomeone has already asked for assignment unlike the other two newcomers. @jayvdb maybe we should assign this to this newcomer #5512 (comment) and close the two PRs since they didn't ask for assignement","diffHunk":null,"author":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4","name":"Palash Nigam"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNTQyNzg2MA==","createdAt":"2018-06-21T15:50:06Z","content":"THUMBS_UP","user":{"login":"jayvdb","name":"John Vandenberg"}}],"createdAt":"2018-06-21T15:41:31Z","lastEditedAt":null,"updatedAt":"2018-06-21T15:41:31Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1534524700000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5522","number":5522,"title":"[WIP] GlobalBearTestHelper.py: Add support","body":"Closes #4884","comments":3,"createdAt":"2018-06-13T15:40:49Z","updatedAt":"2018-08-17T16:51:40Z","closedAt":"2018-08-17T16:51:17Z","state":"closed","user":{"login":"sangamcse","avatarUrl":"https://avatars2.githubusercontent.com/u/26381717?v=4"},"owner":{"login":"sangamcse","avatarUrl":"https://avatars2.githubusercontent.com/u/26381717?v=4"},"assignee":{"login":"sangamcse","avatarUrl":"https://avatars2.githubusercontent.com/u/26381717?v=4"},"labels":[{"name":"area/tests","color":"bfd4f2"},{"name":"difficulty/medium","color":"0052cc"},{"name":"process/wip","color":"fbca04"},{"name":"size/S","color":"B1CF0A"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5522","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTE0MzMzMA==","url":"https://github.com/coala/coala/pull/5522#discussion_r195143330","bodyText":"not defined","diffHunk":"@@ -0,0 +1,66 @@\n+import os.path\n+\n+from contextlib import contextmanager\n+\n+from coalib.bears.GlobalBear import GlobalBear\n+from coalib.testing.BaseTestHelper import BaseTestHelper\n+\n+\n+@contextmanager\n+def execute_bear(bear, *args, **kwargs):\n+    try:\n+        bear_output_generator = bear.execute(*args, **kwargs)\n+        assert (bear_output_generator is not None\n+                ), 'Bear returned None on execution\\n'\n+        yield bear_output_generator\n+    except Exception as err:\n+        msg = []\n+        while not bear.message_queue.empty():\n+            msg.append(bear.message_queue.get().message)\n+        raise AssertionError(str(err) + ' \\n' + '\\n'.join(msg))\n+    return list(bear_output_generator)\n+\n+\n+def get_test_path(test_dir,\n+                  file):\n+    return os.path.join(os.path.dirname(__file__),\n+                        test_dir, file)\n+\n+\n+def get_results(global_bear,\n+                test_dir,\n+                file_dict,\n+                settings={}):\n+    for file in file_dict:\n+        with get_test_path(test_dir, file) as fname, \\\n+            execute_bear(global_bear, fname, **settings\n+                         ) as bear_output:\n+            return bear_output\n+\n+\n+class GlobalBearTestHelper(BaseTestHelper):\n+    \"\"\"\n+    \"\"\"\n+\n+    def check_results(self,\n+                      global_bear,\n+                      results,\n+                      filename=None,\n+                      settings={}):\n+\n+        assert isinstance(self, BaseTestHelper)\n+        assert isinstance(\n+            global_bear, GlobalBear), 'The given bear is not a global bear.'\n+        assert isinstance(\n+            results, list), 'The given results are not a list.'\n+\n+        bear_output = get_results(global_bear,\n+                                  filename=filename,\n+                                  settings=settings)\n+        if not check_order:","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-06-13T16:03:40Z","lastEditedAt":null,"updatedAt":"2018-06-13T16:03:40Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTE0MzYyNA==","url":"https://github.com/coala/coala/pull/5522#discussion_r195143624","bodyText":"use Python 3 annotations on the method arguments, and we have a decorator which will automatically do type checking of them.","diffHunk":"@@ -0,0 +1,66 @@\n+import os.path\n+\n+from contextlib import contextmanager\n+\n+from coalib.bears.GlobalBear import GlobalBear\n+from coalib.testing.BaseTestHelper import BaseTestHelper\n+\n+\n+@contextmanager\n+def execute_bear(bear, *args, **kwargs):\n+    try:\n+        bear_output_generator = bear.execute(*args, **kwargs)\n+        assert (bear_output_generator is not None\n+                ), 'Bear returned None on execution\\n'\n+        yield bear_output_generator\n+    except Exception as err:\n+        msg = []\n+        while not bear.message_queue.empty():\n+            msg.append(bear.message_queue.get().message)\n+        raise AssertionError(str(err) + ' \\n' + '\\n'.join(msg))\n+    return list(bear_output_generator)\n+\n+\n+def get_test_path(test_dir,\n+                  file):\n+    return os.path.join(os.path.dirname(__file__),\n+                        test_dir, file)\n+\n+\n+def get_results(global_bear,\n+                test_dir,\n+                file_dict,\n+                settings={}):\n+    for file in file_dict:\n+        with get_test_path(test_dir, file) as fname, \\\n+            execute_bear(global_bear, fname, **settings\n+                         ) as bear_output:\n+            return bear_output\n+\n+\n+class GlobalBearTestHelper(BaseTestHelper):\n+    \"\"\"\n+    \"\"\"\n+\n+    def check_results(self,\n+                      global_bear,\n+                      results,\n+                      filename=None,\n+                      settings={}):\n+\n+        assert isinstance(self, BaseTestHelper)\n+        assert isinstance(","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-06-13T16:04:39Z","lastEditedAt":null,"updatedAt":"2018-06-13T16:04:39Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTUyMzE1Mw==","url":"https://github.com/coala/coala/pull/5522#discussion_r195523153","bodyText":"@NiklasMM, I am facing issue with this method. My requirement is the file path of that directory from where this method is called but obviously this written method returns coalib/testing* directory.","diffHunk":"@@ -0,0 +1,58 @@\n+import os.path\n+\n+from queue import Queue\n+\n+from coalib.bears.GlobalBear import GlobalBear\n+from coalib.settings.Section import Section\n+from coalib.testing.BaseTestHelper import BaseTestHelper\n+\n+\n+def _get_test_path(test_dir,\n+                   file):\n+    return os.path.join(os.path.dirname(__file__),","author":{"login":"sangamcse","avatarUrl":"https://avatars2.githubusercontent.com/u/26381717?v=4","name":"Sangam Kumar"},"createdAt":"2018-06-14T18:17:44Z","lastEditedAt":null,"updatedAt":"2018-06-14T18:17:44Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM5Njk5NDQxMQ==","url":"https://github.com/coala/coala/pull/5522#issuecomment-396994411","bodyText":"Regarding commit message, please create an issue here describing the enhancement, referring to the cEP, etc.\nDo not refer to GSoC in your commit message.  That is irrelevant to the content of the change.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-06-13T16:05:59Z","lastEditedAt":null,"updatedAt":"2018-06-13T16:05:59Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM5Njk5OTkyNA==","url":"https://github.com/coala/coala/pull/5522#issuecomment-396999924","bodyText":"Still in the process @jayvdb. I will try to cover all the methods and tests and update it asap. Thank you 😄","diffHunk":null,"author":{"login":"sangamcse","avatarUrl":"https://avatars2.githubusercontent.com/u/26381717?v=4","name":"Sangam Kumar"},"createdAt":"2018-06-13T16:22:51Z","lastEditedAt":null,"updatedAt":"2018-06-13T16:22:51Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMzkyNTI2Ng==","url":"https://github.com/coala/coala/pull/5522#issuecomment-413925266","bodyText":"No longer working on this.","diffHunk":null,"author":{"login":"sangamcse","avatarUrl":"https://avatars2.githubusercontent.com/u/26381717?v=4","name":"Sangam Kumar"},"createdAt":"2018-08-17T16:51:17Z","lastEditedAt":null,"updatedAt":"2018-08-17T16:51:17Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1534237874000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5523","number":5523,"title":"Add decorator add_value_checks","body":"The decorator may work on any function but made for the\nspecific use of the bears' run() methods or the\ncreate_arguments() methods. This decorator compares the value\ngiven to the bear setting against a list of acceptable values\nprovided by the bear writer. The decorator accepts a list of\ntuples with each tuple containing two values, the bear setting\nname as a string and a list of acceptable values.","comments":3,"createdAt":"2018-06-13T23:34:10Z","updatedAt":"2018-08-14T09:11:14Z","closedAt":"2018-08-14T09:11:14Z","state":"closed","user":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4"},"owner":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4"},"labels":[{"name":"size/S","color":"B1CF0A"},{"name":"status/blocked","color":"e11d21"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5523","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTI2OTUwMg==","url":"https://github.com/coala/coala/pull/5523#discussion_r195269502","bodyText":"this information should not be stored in the bear like this.\nit needs to be per setting, and using type annotations.  This was already discussed in the cEP.\nthat allows re-use of the type annotation.","diffHunk":"@@ -188,6 +188,8 @@ class Bear(Printer, LogPrinterMixin, metaclass=bearclass):\n     SEE_MORE = ''\n     BEAR_DEPS = set()\n     USE_RAW_FILES = False\n+    ACCEPTABLE_VALUES_FOR_SETTINGS = []","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-06-13T23:53:46Z","lastEditedAt":null,"updatedAt":"2018-06-13T23:53:46Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTI2OTc5OQ==","url":"https://github.com/coala/coala/pull/5523#discussion_r195269799","bodyText":"can't find an elegant way to use type annotations for value checks coala/coala-bears#2532","diffHunk":"@@ -188,6 +188,8 @@ class Bear(Printer, LogPrinterMixin, metaclass=bearclass):\n     SEE_MORE = ''\n     BEAR_DEPS = set()\n     USE_RAW_FILES = False\n+    ACCEPTABLE_VALUES_FOR_SETTINGS = []","author":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4","name":"Ishan Srivastava"},"createdAt":"2018-06-13T23:55:58Z","lastEditedAt":null,"updatedAt":"2018-06-13T23:55:58Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTI2OTk3NQ==","url":"https://github.com/coala/coala/pull/5523#discussion_r195269975","bodyText":"if what you mean by this:\n\nit needs to be per setting,\n\nis\n\nAlternate approach could have been the bear writer populating a field else where and calling the decorator with those fields that quickstart can utilise directly but it just felt inelegant and contradicting the process of making bear development easier and easier by making changes at two different places to achieve a single task\n\nThen I can make the necessary changes","diffHunk":"@@ -188,6 +188,8 @@ class Bear(Printer, LogPrinterMixin, metaclass=bearclass):\n     SEE_MORE = ''\n     BEAR_DEPS = set()\n     USE_RAW_FILES = False\n+    ACCEPTABLE_VALUES_FOR_SETTINGS = []","author":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4","name":"Ishan Srivastava"},"createdAt":"2018-06-13T23:57:13Z","lastEditedAt":null,"updatedAt":"2018-06-13T23:57:13Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTI3MDU4OQ==","url":"https://github.com/coala/coala/pull/5523#discussion_r195270589","bodyText":"this information should not be stored in the bear like this.\n\nwhere exactly do you want it to be stored?","diffHunk":"@@ -188,6 +188,8 @@ class Bear(Printer, LogPrinterMixin, metaclass=bearclass):\n     SEE_MORE = ''\n     BEAR_DEPS = set()\n     USE_RAW_FILES = False\n+    ACCEPTABLE_VALUES_FOR_SETTINGS = []","author":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4","name":"Ishan Srivastava"},"createdAt":"2018-06-14T00:01:54Z","lastEditedAt":"2018-06-14T00:02:28Z","updatedAt":"2018-06-14T00:02:28Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTI3MjU1OQ==","url":"https://github.com/coala/coala/pull/5523#discussion_r195272559","bodyText":"where exactly do you want it to be stored?\n\ninside the annotation!\nAn annotation can be a class, with any amount of logic and data inside it.","diffHunk":"@@ -188,6 +188,8 @@ class Bear(Printer, LogPrinterMixin, metaclass=bearclass):\n     SEE_MORE = ''\n     BEAR_DEPS = set()\n     USE_RAW_FILES = False\n+    ACCEPTABLE_VALUES_FOR_SETTINGS = []","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-06-14T00:16:02Z","lastEditedAt":null,"updatedAt":"2018-06-14T00:16:02Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTI3MjY4Ng==","url":"https://github.com/coala/coala/pull/5523#discussion_r195272686","bodyText":"but we can't use that unless coala is used with the mypy package loaded","diffHunk":"@@ -188,6 +188,8 @@ class Bear(Printer, LogPrinterMixin, metaclass=bearclass):\n     SEE_MORE = ''\n     BEAR_DEPS = set()\n     USE_RAW_FILES = False\n+    ACCEPTABLE_VALUES_FOR_SETTINGS = []","author":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4","name":"Ishan Srivastava"},"createdAt":"2018-06-14T00:17:06Z","lastEditedAt":null,"updatedAt":"2018-06-14T00:17:06Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTI3MjcxOA==","url":"https://github.com/coala/coala/pull/5523#discussion_r195272718","bodyText":"#5523 (comment)","diffHunk":"@@ -188,6 +188,8 @@ class Bear(Printer, LogPrinterMixin, metaclass=bearclass):\n     SEE_MORE = ''\n     BEAR_DEPS = set()\n     USE_RAW_FILES = False\n+    ACCEPTABLE_VALUES_FOR_SETTINGS = []","author":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4","name":"Ishan Srivastava"},"createdAt":"2018-06-14T00:17:23Z","lastEditedAt":null,"updatedAt":"2018-06-14T00:17:23Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTY0MDYxOQ==","url":"https://github.com/coala/coala/pull/5523#discussion_r195640619","bodyText":"have you seen my comment at coala/coala-bears#2532 ?","diffHunk":"@@ -188,6 +188,8 @@ class Bear(Printer, LogPrinterMixin, metaclass=bearclass):\n     SEE_MORE = ''\n     BEAR_DEPS = set()\n     USE_RAW_FILES = False\n+    ACCEPTABLE_VALUES_FOR_SETTINGS = []","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-06-15T06:11:48Z","lastEditedAt":null,"updatedAt":"2018-06-15T06:11:48Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTY4ODc1NQ==","url":"https://github.com/coala/coala/pull/5523#discussion_r195688755","bodyText":"yes","diffHunk":"@@ -188,6 +188,8 @@ class Bear(Printer, LogPrinterMixin, metaclass=bearclass):\n     SEE_MORE = ''\n     BEAR_DEPS = set()\n     USE_RAW_FILES = False\n+    ACCEPTABLE_VALUES_FOR_SETTINGS = []","author":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4","name":"Ishan Srivastava"},"createdAt":"2018-06-15T10:07:18Z","lastEditedAt":null,"updatedAt":"2018-06-15T10:07:18Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM5NzEyMzc3Mw==","url":"https://github.com/coala/coala/pull/5523#issuecomment-397123773","bodyText":"A little bit of explanation: the Green Mode Project requires to differentiate between settings which can attain a specific set of values. A type of these setting which can have some discrete set of values is tackled in the PR.\nMost of the additions are self explanatory except for the variable CALL_FROM_QUICKSTART. The Green Mode project requires the valid values of these settings so that it can run coala over and over again by giving the bears all these values. Since we are also adding value checks in this PR, the field ACCEPTABLE_VALUES_FOR_SETTINGS won't get populated until the call to run method is made which contradicts the fact that we still don't have the acceptable values. The introduced variable uses the fact that even an incomplete call to the decorator populates the variable and thus saves execution time and running into errors.\nAlternate approach could have been the bear writer populating a field else where and calling the decorator with those fields that quickstart can utilise directly but it just felt inelegant and contradicting the process of making bear development easier and easier by making changes at two different places to achieve a single task.","diffHunk":null,"author":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4","name":"Ishan Srivastava"},"createdAt":"2018-06-13T23:53:55Z","lastEditedAt":null,"updatedAt":"2018-06-13T23:53:55Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM5Nzk1MjAyMw==","url":"https://github.com/coala/coala/pull/5523#issuecomment-397952023","bodyText":"An interesting solution, but argument type annotations are the way that the Settings module works.  Not working with the Settings module will result in lots of other parts of coala being unable to understand these, and needing to be rewritten to use this functionality, when the capacity to do it already exists in the Settings module.\nExample shown at coala/coala-bears#2532 .  If it doesnt work with only minor implementation issues, I will implement it myself as a demo.\nIf I cant get it to work, we may revisit this decorator approach.\nNote also that this decorator would not be usable in coala-bears repo until we do a release of coala, and that is a huge risk to take for any project, especially given that I uncovered that there are ~20 bears tests broken when using coala master (and @sangamcse has reproduced it, and was going to investigate further; https://gitter.im/coala/coala?at=5b274d604755974910317329), so that is another task someone needs to do before we can do a pre-release and use anything in coalib from coala-bears.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-06-18T06:14:54Z","lastEditedAt":null,"updatedAt":"2018-06-18T06:14:54Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMjgwNjk5Nw==","url":"https://github.com/coala/coala/pull/5523#issuecomment-412806997","bodyText":"It was demostrated Settings do work, even if a bit ugly without a bit of extra glue in StringConverter.\nhttps://gitlab.com/coala/coala-utils/issues/73 is highly desirable and https://gitlab.com/coala/coala-utils/issues/77 also avoids many problems with the current __path__ approach.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-14T09:11:14Z","lastEditedAt":null,"updatedAt":"2018-08-14T09:11:14Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1529087051000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5524","number":5524,"title":"Corrects syntax error in Writing_Native_Bears.rst","body":"Writing_Native_Bears.rst: fixed incorrect syntax\nCorrected the incorrect syntax in docs/Developers/Writing_Native_Bears.rst regarding HelloWorldBear\nCloses #5509\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":18,"createdAt":"2018-06-14T05:30:29Z","updatedAt":"2018-06-15T18:24:11Z","closedAt":"2018-06-15T18:24:11Z","state":"merged","user":{"login":"SubbulakshmiRS","avatarUrl":"https://avatars3.githubusercontent.com/u/32260751?v=4"},"owner":{"login":"SubbulakshmiRS","avatarUrl":"https://avatars3.githubusercontent.com/u/32260751?v=4"},"assignee":{"login":"SubbulakshmiRS","avatarUrl":"https://avatars3.githubusercontent.com/u/32260751?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5524","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDM5NzMyODg1OQ==","url":"https://github.com/coala/coala/pull/5524#issuecomment-397328859","bodyText":"You need to write all these\nWriting_Native_Bears.rst: fix incorrect syntax\n\ncommit body\n\nCloses #5509\n\nin the commit message and not in here","diffHunk":null,"author":{"login":"sangamcse","avatarUrl":"https://avatars2.githubusercontent.com/u/26381717?v=4","name":"Sangam Kumar"},"reactions":[],"createdAt":"2018-06-14T15:05:09Z","lastEditedAt":"2018-06-14T15:05:25Z","updatedAt":"2018-06-14T15:05:25Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM5NzMyOTI1OQ==","url":"https://github.com/coala/coala/pull/5524#issuecomment-397329259","bodyText":"Go through https://api.coala.io/en/latest/Developers/Writing_Good_Commits.html#how-to-write-good-commit-messages first.","diffHunk":null,"author":{"login":"sangamcse","avatarUrl":"https://avatars2.githubusercontent.com/u/26381717?v=4","name":"Sangam Kumar"},"reactions":[],"createdAt":"2018-06-14T15:06:21Z","lastEditedAt":null,"updatedAt":"2018-06-14T15:06:21Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM5NzM1MDkxNQ==","url":"https://github.com/coala/coala/pull/5524#issuecomment-397350915","bodyText":"is it correct now ?","diffHunk":null,"author":{"login":"SubbulakshmiRS","avatarUrl":"https://avatars3.githubusercontent.com/u/32260751?v=4","name":"R S Subbulakshmi"},"reactions":[],"createdAt":"2018-06-14T16:11:03Z","lastEditedAt":null,"updatedAt":"2018-06-14T16:11:03Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM5NzM1NjY2OQ==","url":"https://github.com/coala/coala/pull/5524#issuecomment-397356669","bodyText":"We don't use past tense in commit.\nWrite as\nWriting_Native_Bears.rst: Fix incorrect syntax\n\nThis fixes the incorrect syntax by using  `{}.\".format(filename)`.\n\nCloses #5509\n\nThis can be achieved by using git commit --amend in your terminal. It will your default editor, edit the commit message there and save it and then force push it by using git push -f.","diffHunk":null,"author":{"login":"sangamcse","avatarUrl":"https://avatars2.githubusercontent.com/u/26381717?v=4","name":"Sangam Kumar"},"reactions":[],"createdAt":"2018-06-14T16:27:48Z","lastEditedAt":null,"updatedAt":"2018-06-14T16:27:48Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM5NzM3OTY4MA==","url":"https://github.com/coala/coala/pull/5524#issuecomment-397379680","bodyText":"Remove Fixed syntax error in Writing_Native_Bears.rst from shortlog of your commit. Don't forget to use git commit --amend command. 😉\nThis is almost done.","diffHunk":null,"author":{"login":"sangamcse","avatarUrl":"https://avatars2.githubusercontent.com/u/26381717?v=4","name":"Sangam Kumar"},"reactions":[],"createdAt":"2018-06-14T17:43:05Z","lastEditedAt":null,"updatedAt":"2018-06-14T17:43:05Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM5NzYwNDAzOQ==","url":"https://github.com/coala/coala/pull/5524#issuecomment-397604039","bodyText":"@sangamcse are the spaces fully removed now ?","diffHunk":null,"author":{"login":"SubbulakshmiRS","avatarUrl":"https://avatars3.githubusercontent.com/u/32260751?v=4","name":"R S Subbulakshmi"},"reactions":[],"createdAt":"2018-06-15T12:22:00Z","lastEditedAt":null,"updatedAt":"2018-06-15T12:22:00Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM5NzYwNjExOQ==","url":"https://github.com/coala/coala/pull/5524#issuecomment-397606119","bodyText":"No, @SubbulakshmiRS. Please read the commit guidelines carefully. I have shared the link twice. That guideline is made especially for newcomers. There are few mistakes to improve in your commit body and issue reference. Also, Correct incorrect syntax is little odd to me, make it Add correct syntax.","diffHunk":null,"author":{"login":"sangamcse","avatarUrl":"https://avatars2.githubusercontent.com/u/26381717?v=4","name":"Sangam Kumar"},"reactions":[],"createdAt":"2018-06-15T12:31:42Z","lastEditedAt":null,"updatedAt":"2018-06-15T12:31:42Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM5NzY2MjM5Nw==","url":"https://github.com/coala/coala/pull/5524#issuecomment-397662397","bodyText":"There should be a new line between the shortlog and body and that between the body and issue reference , right ?\n@sangamcse","diffHunk":null,"author":{"login":"SubbulakshmiRS","avatarUrl":"https://avatars3.githubusercontent.com/u/32260751?v=4","name":"R S Subbulakshmi"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNTE1ODUwOQ==","createdAt":"2018-06-15T15:49:15Z","content":"THUMBS_UP","user":{"login":"sangamcse","name":"Sangam Kumar"}}],"createdAt":"2018-06-15T15:45:35Z","lastEditedAt":"2018-06-15T15:55:05Z","updatedAt":"2018-06-15T15:55:05Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM5NzY3MjA4Nw==","url":"https://github.com/coala/coala/pull/5524#issuecomment-397672087","bodyText":"@jayvdb please merge this commit","diffHunk":null,"author":{"login":"SubbulakshmiRS","avatarUrl":"https://avatars3.githubusercontent.com/u/32260751?v=4","name":"R S Subbulakshmi"},"reactions":[],"createdAt":"2018-06-15T16:20:31Z","lastEditedAt":null,"updatedAt":"2018-06-15T16:20:31Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1528963029000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5526","number":5526,"title":"test-requirements.txt: Pin pytest-timeout to <1.3","body":"pytest-timeout 1.3.0 requires pytest>3.6 and pinning\npytest will create other plugins to break. So, this pins\npytest-timeout to <1.3.\nCloses #5525\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":4,"createdAt":"2018-06-14T07:00:08Z","updatedAt":"2018-06-14T07:57:09Z","closedAt":"2018-06-14T07:57:02Z","state":"merged","user":{"login":"sangamcse","avatarUrl":"https://avatars2.githubusercontent.com/u/26381717?v=4"},"owner":{"login":"sangamcse","avatarUrl":"https://avatars2.githubusercontent.com/u/26381717?v=4"},"labels":[],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5526","comments":[]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1529326075000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5527","number":5527,"title":"aspects.root: Override `Formatting` aspect","body":"This deletes the doctest dummy Formatting aspect and\noverrides it with the actual Formatting aspect so that\ndoctests do not interfere with the actual aspects.\nFixes #5518\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":4,"createdAt":"2018-06-15T04:56:24Z","updatedAt":"2018-06-18T12:47:55Z","closedAt":"2018-06-15T16:26:11Z","state":"merged","user":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4"},"owner":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4"},"assignee":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4"},"labels":[{"name":"area/aspects","color":"000000"},{"name":"area/documentation","color":"bfe5bf"},{"name":"process/approved","color":"009800"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5527","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTY4MzAzMg==","url":"https://github.com/coala/coala/pull/5527#discussion_r195683032","bodyText":"This would go into our documentation which is confusing and may be unnecessary.\nPlease try to add an extra doctest to the very bottom this file, not attached to a function, so it doesnt appear in our documentation.","diffHunk":"@@ -113,6 +113,15 @@ class Root(aspectbase, metaclass=aspectclass):\n       ...\n     coalib.bearlib.aspects.taste.TasteError:\n     Root.Formatting.Greatness.min_greatness is not available ...\n+\n+    Replace the dummy `Formatting` aspect made in the doctests\n+    above, with the actual functional `Formatting` aspect. ","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-06-15T09:43:31Z","lastEditedAt":null,"updatedAt":"2018-06-15T09:43:31Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTY4NDc5OA==","url":"https://github.com/coala/coala/pull/5527#discussion_r195684798","bodyText":"Okay I am trying, meanwhile could you please review the comment as well (to make things a bit fast :) ).","diffHunk":"@@ -113,6 +113,15 @@ class Root(aspectbase, metaclass=aspectclass):\n       ...\n     coalib.bearlib.aspects.taste.TasteError:\n     Root.Formatting.Greatness.min_greatness is not available ...\n+\n+    Replace the dummy `Formatting` aspect made in the doctests\n+    above, with the actual functional `Formatting` aspect. ","author":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4","name":"Pareksha Manchanda"},"createdAt":"2018-06-15T09:50:36Z","lastEditedAt":null,"updatedAt":"2018-06-15T09:50:36Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1529595526000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5528","number":5528,"title":"Update Review.rst","body":"referring to this issue #5512\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":2,"createdAt":"2018-06-15T05:03:11Z","updatedAt":"2018-06-21T15:38:46Z","closedAt":null,"state":"open","user":{"login":"gautam1858","avatarUrl":"https://avatars3.githubusercontent.com/u/4949778?v=4"},"owner":{"login":"gautam1858","avatarUrl":"https://avatars3.githubusercontent.com/u/4949778?v=4"},"labels":[{"name":"process/wip","color":"fbca04"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5528","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDM5NzUxNzU5OA==","url":"https://github.com/coala/coala/pull/5528#issuecomment-397517598","bodyText":"@gautam1858 Pls, read the  commit guidelines carefully. Your shortlog, and your commit message do not correspond to the format specified.\nChecklist specifically tells you to go through the commit guidelines, but you seem to have skipped that part altogether.\nYou're commit message should be something like this:\nReview.rst: Typo Github->GitHub\nCloses #5512\nThis format makes sure, that the issue is closed automatically when the pull request is merged. Filename is important because when you see your repository, it displays you're last commit in that directory, and it's much easier to know where the change was made when the filename is specified in the commit shortlog.\nPlease update your PR, and DO NOT FORGET TO SQUASH YOU'RE COMMITS into one. If you have trouble squashing commits, let me know.","diffHunk":null,"author":{"login":"EverWinter23","avatarUrl":"https://avatars0.githubusercontent.com/u/21227016?v=4","name":"rishabh"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNTE4MzU0Mw==","createdAt":"2018-06-16T13:09:02Z","content":"THUMBS_UP","user":{"login":"li-boxuan","name":"Boxuan Li"}},{"id":"MDg6UmVhY3Rpb24yNTQyNzcwNw==","createdAt":"2018-06-21T15:48:01Z","content":"THUMBS_UP","user":{"login":"jayvdb","name":"John Vandenberg"}}],"createdAt":"2018-06-15T05:28:20Z","lastEditedAt":"2018-06-15T05:29:05Z","updatedAt":"2018-06-15T05:29:05Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM5OTE0Nzg0Nw==","url":"https://github.com/coala/coala/pull/5528#issuecomment-399147847","bodyText":"This issue has no assignees and there is a duplicate PR for it here #5521\n@gautam1858 always ask for assignment before working on an issue.","diffHunk":null,"author":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4","name":"Palash Nigam"},"reactions":[],"createdAt":"2018-06-21T15:38:39Z","lastEditedAt":null,"updatedAt":"2018-06-21T15:38:39Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1529087385000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5530","number":5530,"title":"config.yml: Hide coala-cache directory","body":"Hides 'nltk_data' cache directory.\nCloses #5529\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n[ x] I read the commit guidelines and I've followed\nthem.\n[ x] I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":1,"createdAt":"2018-06-15T05:19:49Z","updatedAt":"2018-06-15T18:29:45Z","closedAt":"2018-06-15T18:29:45Z","state":"closed","user":{"login":"EverWinter23","avatarUrl":"https://avatars0.githubusercontent.com/u/21227016?v=4"},"owner":{"login":"EverWinter23","avatarUrl":"https://avatars0.githubusercontent.com/u/21227016?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"area/upstream","color":"5319e7"},{"name":"importance/low","color":"70E870"},{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"00DE0F"},{"name":"status/invalid","color":"000000"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5530","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDM5NzcwNjE3OQ==","url":"https://github.com/coala/coala/pull/5530#issuecomment-397706179","bodyText":"This changes the Circle CI cache config, which only records the location where ntlk installs this data.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-06-15T18:29:42Z","lastEditedAt":null,"updatedAt":"2018-06-15T18:29:42Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1534238069000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5538","number":5538,"title":"__init__.py: Add module docstring which confirm to PEP 257","body":"Closes #5536 (comment)\n\nMulti-line docstrings consist of a summary line just like a one-line docstring, followed by a blank line, followed by a more elaborate description. The summary line may be used by automatic indexing tools; it is important that it fits on one line and is separated from the rest of the docstring by a blank line. The summary line may be on the same line as the opening quotes or on the next line. The entire docstring is indented the same as the quotes at its first line (see example below).\nThe docstring for a module should generally list the classes, exceptions and functions (and any other objects) that are exported by the module, with a one-line summary of each. (These summaries generally give less detail than the summary line in the object's docstring.)","comments":3,"createdAt":"2018-06-17T07:40:12Z","updatedAt":"2018-08-14T09:14:29Z","closedAt":null,"state":"open","user":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4"},"owner":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4"},"assignee":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4"},"labels":[{"name":"area/aspects","color":"000000"},{"name":"area/documentation","color":"bfe5bf"},{"name":"process/wip","color":"fbca04"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5538","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTkyNDk2Nw==","url":"https://github.com/coala/coala/pull/5538#discussion_r195924967","bodyText":"It must be prose. High level summary. See pep 257. It is hard .. ;)","diffHunk":"@@ -0,0 +1,8 @@\n+\"\"\"\n+Has Setting, Section class; indexing tools; input checks; loads bears, files.","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNTE5NTUzOQ==","createdAt":"2018-06-17T10:39:55Z","content":"CONFUSED","user":{"login":"ishanSrt","name":"Ishan Srivastava"}}],"createdAt":"2018-06-17T10:36:16Z","lastEditedAt":null,"updatedAt":"2018-06-17T10:36:16Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTkyNDk4OQ==","url":"https://github.com/coala/coala/pull/5538#discussion_r195924989","bodyText":"No listing members. That is redundant to the TOC autogenerated from members, and it gets out of date quickly","diffHunk":"@@ -0,0 +1,8 @@\n+\"\"\"\n+Has Setting, Section class; indexing tools; input checks; loads bears, files.\n+\n+- **class Setting:** Aggregates the settings passed to coala.","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-06-17T10:37:43Z","lastEditedAt":null,"updatedAt":"2018-06-17T10:37:43Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTkyNTAzNw==","url":"https://github.com/coala/coala/pull/5538#discussion_r195925037","bodyText":"So remove the listing?","diffHunk":"@@ -0,0 +1,8 @@\n+\"\"\"\n+Has Setting, Section class; indexing tools; input checks; loads bears, files.\n+\n+- **class Setting:** Aggregates the settings passed to coala.","author":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4","name":"Ishan Srivastava"},"reactions":[],"createdAt":"2018-06-17T10:39:32Z","lastEditedAt":null,"updatedAt":"2018-06-17T10:39:32Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTkyNTA3NQ==","url":"https://github.com/coala/coala/pull/5538#discussion_r195925075","bodyText":"if it is prose then it is not detailed","diffHunk":"@@ -0,0 +1,8 @@\n+\"\"\"\n+Has Setting, Section class; indexing tools; input checks; loads bears, files.","author":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4","name":"Ishan Srivastava"},"reactions":[],"createdAt":"2018-06-17T10:40:42Z","lastEditedAt":null,"updatedAt":"2018-06-17T10:40:42Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTk3NjI5Mg==","url":"https://github.com/coala/coala/pull/5538#discussion_r195976292","bodyText":"The first line should not be detailed.  It is a summary.\nAfter the blank line, you add as many lines of prose as you want, where it can be quite detailed.","diffHunk":"@@ -0,0 +1,8 @@\n+\"\"\"\n+Has Setting, Section class; indexing tools; input checks; loads bears, files.","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-06-18T06:46:24Z","lastEditedAt":null,"updatedAt":"2018-06-18T06:46:24Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTk3NjMxNg==","url":"https://github.com/coala/coala/pull/5538#discussion_r195976316","bodyText":"yes, replace with prose","diffHunk":"@@ -0,0 +1,8 @@\n+\"\"\"\n+Has Setting, Section class; indexing tools; input checks; loads bears, files.\n+\n+- **class Setting:** Aggregates the settings passed to coala.","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-06-18T06:46:35Z","lastEditedAt":null,"updatedAt":"2018-06-18T06:46:35Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NjAyMjI2NA==","url":"https://github.com/coala/coala/pull/5538#discussion_r196022264","bodyText":"ok I get you","diffHunk":"@@ -0,0 +1,8 @@\n+\"\"\"\n+Has Setting, Section class; indexing tools; input checks; loads bears, files.","author":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4","name":"Ishan Srivastava"},"reactions":[],"createdAt":"2018-06-18T09:52:58Z","lastEditedAt":null,"updatedAt":"2018-06-18T09:52:58Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTg4MTE0MA==","url":"https://github.com/coala/coala/pull/5538#discussion_r209881140","bodyText":"this is not correct.  This has all the stuff needed to make bear arg annotation work","diffHunk":"@@ -0,0 +1,8 @@\n+\"\"\"\n+Has Setting, Section class; indexing tools; input checks; loads bears, files.\n+\n+- **class Setting:** Aggregates the settings passed to coala.\n+- **class Section:** Parses the Settings given in each section in config file.\n+- **class FunctionMetadata:** Provides indexing tools from python docstrings.","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-14T09:14:23Z","lastEditedAt":null,"updatedAt":"2018-08-14T09:14:23Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM5Nzg2ODk4NQ==","url":"https://github.com/coala/coala/pull/5538#issuecomment-397868985","bodyText":"ping @jayvdb I have tried to follow the PEP 257, but one line description means fuzzy explanations, also following the line lengths.","diffHunk":null,"author":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4","name":"Ishan Srivastava"},"reactions":[],"createdAt":"2018-06-17T10:19:15Z","lastEditedAt":"2018-06-17T10:24:50Z","updatedAt":"2018-06-17T10:24:50Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM5Nzg2OTAzMw==","url":"https://github.com/coala/coala/pull/5538#issuecomment-397869033","bodyText":"not added the functions as their docstrings have short and precise explanation there itself","diffHunk":null,"author":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4","name":"Ishan Srivastava"},"reactions":[],"createdAt":"2018-06-17T10:20:15Z","lastEditedAt":null,"updatedAt":"2018-06-17T10:20:15Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1529532860000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5540","number":5540,"title":"TypeScript.py: Change aliases to type tuple","body":"Closes #5463\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":11,"createdAt":"2018-06-18T11:29:15Z","updatedAt":"2018-06-20T22:14:20Z","closedAt":"2018-06-19T12:00:15Z","state":"merged","user":{"login":"ananyaarun","avatarUrl":"https://avatars2.githubusercontent.com/u/32260628?v=4"},"owner":{"login":"ananyaarun","avatarUrl":"https://avatars2.githubusercontent.com/u/32260628?v=4"},"assignee":{"login":"ananyaarun","avatarUrl":"https://avatars2.githubusercontent.com/u/32260628?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"process/approved","color":"009800"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5540","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDM5ODA0Mjc4Nw==","url":"https://github.com/coala/coala/pull/5540#issuecomment-398042787","bodyText":"We have another bug which you have uncovered.\nI'll get that fixed.\n#5541","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNTIyOTY5Mg==","createdAt":"2018-06-18T13:40:04Z","content":"THUMBS_UP","user":{"login":"ananyaarun","name":"Ananya Arun"}}],"createdAt":"2018-06-18T12:49:04Z","lastEditedAt":null,"updatedAt":"2018-06-18T12:49:04Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1529407237000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5542","number":5542,"title":".travis.yml: Add sentinel job","body":"This makes Python 3.6 the sentinel job,\nso it runs by itself initially and causes\nall other jobs to be cancelled if it fails.\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":8,"createdAt":"2018-06-19T04:01:58Z","updatedAt":"2018-06-19T11:20:37Z","closedAt":"2018-06-19T08:18:05Z","state":"merged","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5542","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDM5ODI2ODg1Mg==","url":"https://github.com/coala/coala/pull/5542#issuecomment-398268852","bodyText":"Matrix at https://travis-ci.org/coala/coala/builds/393939619 showed the 3.4 & 3.5 jobs start after 3.6 finished.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-06-19T04:12:56Z","lastEditedAt":null,"updatedAt":"2018-06-19T04:12:56Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM5ODI3MzEyNw==","url":"https://github.com/coala/coala/pull/5542#issuecomment-398273127","bodyText":"Ugh ... fast_finish may not be needed with sentinel job, and will cause master pushes to not do a complete build.  Testing without it, and removing.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-06-19T04:48:31Z","lastEditedAt":"2018-06-19T04:59:33Z","updatedAt":"2018-06-19T04:59:33Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM5ODI4NTQzMQ==","url":"https://github.com/coala/coala/pull/5542#issuecomment-398285431","bodyText":"It doesnt appear possible to fast finish conditionally.\ntravis-ci/beta-features#28 (comment)\nOn the other hand, caching seems to work.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-06-19T06:11:00Z","lastEditedAt":null,"updatedAt":"2018-06-19T06:11:00Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM5ODM2NDU3Mg==","url":"https://github.com/coala/coala/pull/5542#issuecomment-398364572","bodyText":"On the master build of this PR, py344 & py36 jobs kept their cache\nhttps://travis-ci.org/coala/coala/jobs/393996271#L502\nhttps://travis-ci.org/coala/coala/jobs/393996273#L501\nOn the first build of a PR after this, sentinel and normal builds kept their cache\nhttps://travis-ci.org/coala/coala/jobs/394053243#L522\nhttps://travis-ci.org/coala/coala/jobs/394053246#L523","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-06-19T11:20:37Z","lastEditedAt":null,"updatedAt":"2018-06-19T11:20:37Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1529467804000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5544","number":5544,"title":"Language: Change `TrumpScript` aliases","body":"This changes aliases of TrumpScript in the\ndoctests so that TypeScript and TrumpScript\nhave different aliases and so do not collide.\nFixes #5541\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":7,"createdAt":"2018-06-19T08:48:09Z","updatedAt":"2018-06-20T04:10:04Z","closedAt":"2018-06-19T11:01:50Z","state":"merged","user":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4"},"owner":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4"},"assignee":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"},{"name":"importance/high","color":"eb6420"},{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"00DE0F"},{"name":"type/bug","color":"e11d21"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5544","comments":[]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1529834281000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5547","number":5547,"title":"Use Pytest 3.6","body":"pytest 3.3 fails to replicate the prior behaviour\nwith regards to doctest which use logging.\nRelated to #5543","comments":13,"createdAt":"2018-06-20T03:19:13Z","updatedAt":"2018-06-24T09:58:01Z","closedAt":"2018-06-24T09:58:01Z","state":"merged","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5547","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDM5ODYyODIzNQ==","url":"https://github.com/coala/coala/pull/5547#issuecomment-398628235","bodyText":"(Note a separate build was done disabling the plugin first, to show that this change doesnt break pytest 3.1)\ncoala/coala-bears#2542\ncoala/coala-quickstart#259\nhttps://gitlab.com/coala/coala-utils/merge_requests/68 (red CI is mobans job)\nhttps://gitlab.com/coala/package_manager/merge_requests/129","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-06-20T05:26:19Z","lastEditedAt":null,"updatedAt":"2018-06-20T05:26:19Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM5OTE4MTExMA==","url":"https://github.com/coala/coala/pull/5547#issuecomment-399181110","bodyText":"One job of coala/coala-bears#2542 is constantly failing for unrelated reasons because its build is uncached.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-06-21T17:24:09Z","lastEditedAt":null,"updatedAt":"2018-06-21T17:24:09Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1529592508000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5548","number":5548,"title":"Add pytest-profiling","body":"See https://travis-ci.org/jayvdb/coala/jobs/394414992#L814","comments":11,"createdAt":"2018-06-20T10:38:52Z","updatedAt":"2018-06-21T14:48:28Z","closedAt":"2018-06-21T14:48:21Z","state":"merged","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5548","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDM5ODcwOTE0OA==","url":"https://github.com/coala/coala/pull/5548#issuecomment-398709148","bodyText":"Aaa.., One question why does we need it 😅 ,one disadvantage it that pytest-pofiling display only first 20 profiled data on the basis of cumulative time, the only reason I see to use the pytest-profiling is because of its --profile-svg feature which I find very useful but we can add something which store some image during every run.","diffHunk":null,"author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"reactions":[],"createdAt":"2018-06-20T10:56:26Z","lastEditedAt":"2018-06-20T10:57:08Z","updatedAt":"2018-06-20T10:57:08Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM5ODcwOTU1NQ==","url":"https://github.com/coala/coala/pull/5548#issuecomment-398709555","bodyText":"Although changes looks good 👍","diffHunk":null,"author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"reactions":[],"createdAt":"2018-06-20T10:58:02Z","lastEditedAt":null,"updatedAt":"2018-06-20T10:58:02Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM5ODcwOTYxNg==","url":"https://github.com/coala/coala/pull/5548#issuecomment-398709616","bodyText":",one disadvantage it that pytest-pofiling display only first 20 profiled data on the basis of cumulative time\n\nsofixit","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNTM0NzQ3Mw==","createdAt":"2018-06-20T10:59:01Z","content":"LAUGH","user":{"login":"RaiVaibhav","name":"Vaibhav Rai"}}],"createdAt":"2018-06-20T10:58:16Z","lastEditedAt":"2018-06-20T10:59:25Z","updatedAt":"2018-06-20T10:59:25Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM5ODcxMDE1OA==","url":"https://github.com/coala/coala/pull/5548#issuecomment-398710158","bodyText":"got it 😆","diffHunk":null,"author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"reactions":[],"createdAt":"2018-06-20T11:00:20Z","lastEditedAt":null,"updatedAt":"2018-06-20T11:00:20Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM5ODcxNTA3OA==","url":"https://github.com/coala/coala/pull/5548#issuecomment-398715078","bodyText":"Sorry I didn't see the mail 👍","diffHunk":null,"author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"reactions":[],"createdAt":"2018-06-20T11:21:07Z","lastEditedAt":null,"updatedAt":"2018-06-20T11:21:07Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM5ODk0OTcxMQ==","url":"https://github.com/coala/coala/pull/5548#issuecomment-398949711","bodyText":"@RaiVaibhav , please approve the moban patch.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-06-21T01:43:00Z","lastEditedAt":null,"updatedAt":"2018-06-21T01:43:00Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM5OTEzMDEwOA==","url":"https://github.com/coala/coala/pull/5548#issuecomment-399130108","bodyText":"reack 909853f","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-06-21T14:47:24Z","lastEditedAt":null,"updatedAt":"2018-06-21T14:47:24Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1530137866000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5551","number":5551,"title":"Review.rst: Rename `Github` to `GitHub`","body":"Github -> GitHub\nCloses #5512\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":16,"createdAt":"2018-06-21T20:46:46Z","updatedAt":"2018-06-27T22:17:46Z","closedAt":"2018-06-26T18:25:19Z","state":"merged","user":{"login":"harvipan","avatarUrl":"https://avatars1.githubusercontent.com/u/40180746?v=4"},"owner":{"login":"harvipan","avatarUrl":"https://avatars1.githubusercontent.com/u/40180746?v=4"},"assignee":{"login":"harvipan","avatarUrl":"https://avatars1.githubusercontent.com/u/40180746?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"process/approved","color":"009800"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5551","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDM5OTI5ODYyNw==","url":"https://github.com/coala/coala/pull/5551#issuecomment-399298627","bodyText":"@harvipan Update your commit message Renamed -> Rename","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-06-22T02:08:28Z","lastEditedAt":null,"updatedAt":"2018-06-22T02:08:28Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM5OTMxMjY0Ng==","url":"https://github.com/coala/coala/pull/5551#issuecomment-399312646","bodyText":"@harvipan see https://api.coala.io/en/latest/Developers/Writing_Good_Commits.html#shortlog","diffHunk":null,"author":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4","name":"Pareksha Manchanda"},"createdAt":"2018-06-22T03:50:13Z","lastEditedAt":null,"updatedAt":"2018-06-22T03:50:13Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM5OTQ4MDQzMQ==","url":"https://github.com/coala/coala/pull/5551#issuecomment-399480431","bodyText":"@jayvdb , I have updated my commit message. @pareksha thank you for the help. I should have been more thorough.","diffHunk":null,"author":{"login":"harvipan","avatarUrl":"https://avatars1.githubusercontent.com/u/40180746?v=4","name":"Harsh Pandya"},"createdAt":"2018-06-22T15:27:33Z","lastEditedAt":null,"updatedAt":"2018-06-22T15:27:33Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM5OTYyOTg2Mw==","url":"https://github.com/coala/coala/pull/5551#issuecomment-399629863","bodyText":"Hey. I have just seen your commit message and I think it still can be improved . Like in your commit body you must tell what have it done (Eg. This fixes the typo and changes\nit from wether --> whether.).\nAlso I suggest you to use Fixes instead of Closes because you are dealing with a bug issue.","diffHunk":null,"author":{"login":"chhabrabhishek","avatarUrl":"https://avatars3.githubusercontent.com/u/25299400?v=4","name":"Abhishek Chhabra"},"createdAt":"2018-06-23T04:26:39Z","lastEditedAt":null,"updatedAt":"2018-06-23T04:26:39Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQwMDI4NDE3MA==","url":"https://github.com/coala/coala/pull/5551#issuecomment-400284170","bodyText":"@chhabrabhishek , I have made the changes. Thank you for the tips.","diffHunk":null,"author":{"login":"harvipan","avatarUrl":"https://avatars1.githubusercontent.com/u/40180746?v=4","name":"Harsh Pandya"},"createdAt":"2018-06-26T12:10:04Z","lastEditedAt":null,"updatedAt":"2018-06-26T12:10:04Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1529634098000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5552","number":5552,"title":"Replace range variable with different name","body":"Linter.py: replace range variable with different name\nResult.py: replace range variable with different name\nThis fixes the issue of using range as a variable name\nFixes #3398\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":10,"createdAt":"2018-06-21T22:20:36Z","updatedAt":"2018-06-22T02:21:38Z","closedAt":"2018-06-22T02:20:28Z","state":"merged","user":{"login":"schafle","avatarUrl":"https://avatars3.githubusercontent.com/u/5341407?v=4"},"owner":{"login":"schafle","avatarUrl":"https://avatars3.githubusercontent.com/u/5341407?v=4"},"assignee":{"login":"kirankonduru","avatarUrl":"https://avatars3.githubusercontent.com/u/13452436?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"00DE0F"},{"name":"type/codestyle","color":"d4c5f9"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5552","comments":[]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1529792269000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5553","number":5553,"title":"ResultAction.py: Fix docstring typo","body":"This fixes the typo and changes\nit from :result --> :result:\nFixes #5223\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":7,"createdAt":"2018-06-22T07:11:36Z","updatedAt":"2018-06-23T22:17:49Z","closedAt":"2018-06-22T08:15:45Z","state":"merged","user":{"login":"ChetanKhanna","avatarUrl":"https://avatars0.githubusercontent.com/u/31681374?v=4"},"owner":{"login":"ChetanKhanna","avatarUrl":"https://avatars0.githubusercontent.com/u/31681374?v=4"},"assignee":{"login":"ChetanKhanna","avatarUrl":"https://avatars0.githubusercontent.com/u/31681374?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"process/approved","color":"009800"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5553","comments":[]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1530190356000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5557","number":5557,"title":"Development_Setup.rst: Fix Broken Links","body":"This fix Broken Links in venv and\nvirtualenv section.\nFixes #5556\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":13,"createdAt":"2018-06-22T23:09:43Z","updatedAt":"2018-06-28T12:52:36Z","closedAt":"2018-06-28T12:52:36Z","state":"merged","user":{"login":"starkblaze01","avatarUrl":"https://avatars3.githubusercontent.com/u/22374162?v=4"},"owner":{"login":"starkblaze01","avatarUrl":"https://avatars3.githubusercontent.com/u/22374162?v=4"},"assignee":{"login":"starkblaze01","avatarUrl":"https://avatars3.githubusercontent.com/u/22374162?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"size/XS","color":"00DE0F"},{"name":"type/bug","color":"e11d21"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5557","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDM5OTYyOTU0NQ==","url":"https://github.com/coala/coala/pull/5557#issuecomment-399629545","bodyText":"Hey! I think your code is quite satisfying but your commit message is incorrect based on the community commit guidelines. So I suggest you to please change your commit message.\nYou can refer to http://api.coala.io/en/latest/Developers/Writing_Good_Commits.html for correcting your commit. Also use Fixes/Fix instead of closes because you are dealing with a bug issue.","diffHunk":null,"author":{"login":"chhabrabhishek","avatarUrl":"https://avatars3.githubusercontent.com/u/25299400?v=4","name":"Abhishek Chhabra"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNTUwNzEyMw==","createdAt":"2018-06-23T06:56:10Z","content":"THUMBS_UP","user":{"login":"starkblaze01","name":"MAYANK PATHELA"}}],"createdAt":"2018-06-23T04:19:42Z","lastEditedAt":null,"updatedAt":"2018-06-23T04:19:42Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM5OTY0MzM1NA==","url":"https://github.com/coala/coala/pull/5557#issuecomment-399643354","bodyText":"Hello, thanks for pointing this out.\nI have replaced closes - - > fixes in comment.\nAlso, I have gone through the link which you provided.\nCan you please suggest any more changes if needed.","diffHunk":null,"author":{"login":"starkblaze01","avatarUrl":"https://avatars3.githubusercontent.com/u/22374162?v=4","name":"MAYANK PATHELA"},"reactions":[],"createdAt":"2018-06-23T07:02:06Z","lastEditedAt":null,"updatedAt":"2018-06-23T07:02:06Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM5OTY0NDY2NA==","url":"https://github.com/coala/coala/pull/5557#issuecomment-399644664","bodyText":"You don't have a commit message body like shown in the examples provided in the link.\nAnd nor you have added which issue you have closed in your commit message.\nPlease note that the commit messages here are multiline.\nFirst you have to add the file name with changes.\nSecond you must add description of the changes\nThird you must add which issue you have fixed.\nI suggest you to check how to add multiline commit messages.\nYou must add \"This fix Broken Links in venv and\nvirtualenv section.\nFixes #5556\"\nin your commit message.","diffHunk":null,"author":{"login":"chhabrabhishek","avatarUrl":"https://avatars3.githubusercontent.com/u/25299400?v=4","name":"Abhishek Chhabra"},"reactions":[],"createdAt":"2018-06-23T07:14:15Z","lastEditedAt":"2018-06-23T07:16:25Z","updatedAt":"2018-06-23T07:16:25Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM5OTY2Njc2Mw==","url":"https://github.com/coala/coala/pull/5557#issuecomment-399666763","bodyText":"@chhabrabhishek, Thanks for the guidance, I have made necessary changes, please review it.\nCan you also please help me with why one test is failing, the one ci/circleci:python-3.5?","diffHunk":null,"author":{"login":"starkblaze01","avatarUrl":"https://avatars3.githubusercontent.com/u/22374162?v=4","name":"MAYANK PATHELA"},"reactions":[],"createdAt":"2018-06-23T11:11:20Z","lastEditedAt":"2018-06-23T11:12:09Z","updatedAt":"2018-06-23T11:12:09Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQwMTAwNzI3OA==","url":"https://github.com/coala/coala/pull/5557#issuecomment-401007278","bodyText":"That was a transient error - a timeout in installation.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNTc0MDA1Mw==","createdAt":"2018-06-28T12:55:49Z","content":"THUMBS_UP","user":{"login":"starkblaze01","name":"MAYANK PATHELA"}}],"createdAt":"2018-06-28T11:44:57Z","lastEditedAt":null,"updatedAt":"2018-06-28T11:44:57Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1530191894000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5558","number":5558,"title":"CI: Check man page without altering $MANPATH","body":"This removes unneeded addition to $MANPATH for CircleCI.\nAlso, wheel is built and installed with root privileges, so man\npage gets placed under the proper path.\nCloses #5321\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":10,"createdAt":"2018-06-23T03:06:29Z","updatedAt":"2018-06-28T13:18:14Z","closedAt":"2018-06-28T13:18:14Z","state":"merged","user":{"login":"nikitavbv","avatarUrl":"https://avatars1.githubusercontent.com/u/24596921?v=4"},"owner":{"login":"nikitavbv","avatarUrl":"https://avatars1.githubusercontent.com/u/24596921?v=4"},"assignee":{"login":"nikitavbv","avatarUrl":"https://avatars1.githubusercontent.com/u/24596921?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"area/install","color":"bfdadc"},{"name":"area/tests","color":"bfd4f2"},{"name":"difficulty/medium","color":"0052cc"},{"name":"importance/medium","color":"fbca04"},{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5558","comments":[]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1529738647000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5560","number":5560,"title":".gitignore: Add prof","body":"sync only .gitignore list","comments":3,"createdAt":"2018-06-23T06:41:26Z","updatedAt":"2018-06-23T07:24:07Z","closedAt":"2018-06-23T07:24:07Z","state":"closed","user":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4"},"owner":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4"},"labels":[{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5560","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDM5OTY0NTUyNg==","url":"https://github.com/coala/coala/pull/5560#issuecomment-399645526","bodyText":"As @jayvdb mentioned 2 more MR will get merged by today. So we should have an overall moban sync incorporating all changes.","diffHunk":null,"author":{"login":"MacBox7","avatarUrl":"https://avatars0.githubusercontent.com/u/15063552?v=4","name":"Ankit Joshi"},"createdAt":"2018-06-23T07:21:59Z","lastEditedAt":null,"updatedAt":"2018-06-23T07:21:59Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM5OTY0NTY5MQ==","url":"https://github.com/coala/coala/pull/5560#issuecomment-399645691","bodyText":"oh okay 👍 , I thought it was related to some other patch","diffHunk":null,"author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"createdAt":"2018-06-23T07:23:19Z","lastEditedAt":"2018-06-23T07:24:59Z","updatedAt":"2018-06-23T07:24:59Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM5OTY0NTc2NQ==","url":"https://github.com/coala/coala/pull/5560#issuecomment-399645765","bodyText":"Closing refer to https://gitter.im/coala/2018-gsoc-all?at=5b2db4af467bd7268c2be085","diffHunk":null,"author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"createdAt":"2018-06-23T07:24:07Z","lastEditedAt":"2018-06-23T07:26:05Z","updatedAt":"2018-06-23T07:26:05Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1529838298000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5561","number":5561,"title":"Sync moban","body":"For short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":5,"createdAt":"2018-06-23T10:03:07Z","updatedAt":"2018-06-24T11:04:58Z","closedAt":"2018-06-24T11:04:58Z","state":"merged","user":{"login":"MacBox7","avatarUrl":"https://avatars0.githubusercontent.com/u/15063552?v=4"},"owner":{"login":"MacBox7","avatarUrl":"https://avatars0.githubusercontent.com/u/15063552?v=4"},"labels":[{"name":"process/pending review","color":"bfe5bf"},{"name":"size/S","color":"B1CF0A"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5561","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDM5OTczODk5OQ==","url":"https://github.com/coala/coala/pull/5561#issuecomment-399738999","bodyText":"Blocked because #5547 hasnt been merged yet","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-06-24T08:26:55Z","lastEditedAt":null,"updatedAt":"2018-06-24T08:26:55Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1531077625000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5562","number":5562,"title":"Add memoization to FileFactory","body":"For short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":8,"createdAt":"2018-06-23T18:54:15Z","updatedAt":"2018-07-08T19:20:25Z","closedAt":"2018-07-08T19:20:12Z","state":"merged","user":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4"},"owner":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4"},"labels":[{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5562","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NzgwNDc3Mw==","url":"https://github.com/coala/coala/pull/5562#discussion_r197804773","bodyText":"This seemed to have done the trick. Now instead of a list the file contents are stored as bytes.","diffHunk":"@@ -0,0 +1,137 @@\n+import functools\n+import sys\n+import os\n+import tokenize\n+\n+__all__ = [\"get_content\", \"clearcache\", \"checkcache\"]\n+\n+\n+# The cache. Maps filenames to either a thunk which will provide source code,\n+# or a tuple (size, mtime, contents, fullname) once loaded.\n+cache = {}\n+\n+\n+def clearcache():\n+    \"\"\"\n+    Clear the cache entirely.\n+    \"\"\"\n+    global cache\n+    cache = {}\n+\n+\n+def get_content(filename, module_globals=None):\n+    \"\"\"\n+    Get the raw contents of a file from the cache.\n+    Update the cache if it doesn't contain an entry for this file already.\n+    \"\"\"\n+    if filename in cache:\n+        entry = cache[filename]\n+        if len(entry) != 1:\n+            return cache[filename][2]\n+\n+    try:\n+        return updatecache(filename, module_globals)\n+    except MemoryError:\n+        clearcache()\n+        return None\n+\n+\n+def checkcache(filename=None):\n+    \"\"\"\n+    Discard cache entries that are out of date.\n+    (This is not checked upon each call!)\n+    \"\"\"\n+\n+    if filename is None:\n+        filenames = list(cache.keys())\n+    else:\n+        if filename in cache:\n+            filenames = [filename]\n+        else:\n+            return\n+\n+    for filename in filenames:\n+        entry = cache[filename]\n+        if len(entry) == 1:\n+            # lazy cache entry, leave it lazy.\n+            continue\n+        size, mtime, lines, fullname = entry\n+        if mtime is None:\n+            continue   # no-op for files loaded via a __loader__\n+        try:\n+            stat = os.stat(fullname)\n+        except OSError:\n+            del cache[filename]\n+            continue\n+        if size != stat.st_size or mtime != stat.st_mtime:\n+            del cache[filename]\n+\n+\n+def updatecache(filename, module_globals=None):\n+    \"\"\"\n+    Update a cache entry and return its list of lines.\n+    If something's wrong, print a message, discard the cache entry,\n+    and return an empty list.\n+    \"\"\"\n+\n+    if filename in cache:\n+        if len(cache[filename]) != 1:\n+            del cache[filename]\n+    if not filename or (filename.startswith('<') and filename.endswith('>')):\n+        return None\n+\n+    fullname = filename\n+    try:\n+        stat = os.stat(fullname)\n+    except OSError:\n+        basename = filename\n+\n+        # Realise a lazy loader based lookup if there is one\n+        # otherwise try to lookup right now.\n+        if lazycache(filename, module_globals):\n+            try:\n+                data = cache[filename][0]()\n+            except (ImportError, OSError):\n+                pass\n+            else:\n+                if data is None:\n+                    # No luck, the PEP302 loader cannot find the source\n+                    # for this module.\n+                    return None\n+                cache[filename] = (\n+                    len(data), None,\n+                    data, fullname\n+                )\n+                return cache[filename][2]\n+\n+    try:\n+        with open(fullname, 'rb') as fp:","author":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4","name":"Palash Nigam"},"reactions":[],"createdAt":"2018-06-25T13:55:20Z","lastEditedAt":null,"updatedAt":"2018-06-25T13:55:20Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5ODMwMDcyOQ==","url":"https://github.com/coala/coala/pull/5562#discussion_r198300729","bodyText":"not UTF-8 for all cases? ;)","diffHunk":"@@ -96,16 +98,15 @@ def raw(self):\n         :return:\n             The file contents as a byte sequence.\n         \"\"\"\n-        with open(self._filename, 'rb') as fp:\n-            return fp.read()\n+        return get_content(self._filename)\n \n     @property\n     def string(self):\n         \"\"\"\n         :return:\n             The file contents as a string UTF-8 decoded.\n         \"\"\"\n-        return self.raw.decode()\n+        return self.raw.decode(encoding=detect_encoding(self._filename))","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-06-26T21:17:04Z","lastEditedAt":null,"updatedAt":"2018-06-26T21:17:04Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5ODMwMTM4Ng==","url":"https://github.com/coala/coala/pull/5562#discussion_r198301386","bodyText":"The cache should be tied to a FileFactory object, and not stay in global scope. That makes the cache cleaning up easier because it automatically cleans up as soon as the file factories are destructed. If someone wants to keep the cache alive, the relvant  file factory objects should be kept alive.","diffHunk":"@@ -0,0 +1,137 @@\n+import functools\n+import sys\n+import os\n+import tokenize\n+\n+__all__ = [\"get_content\", \"clearcache\", \"checkcache\"]\n+\n+\n+# The cache. Maps filenames to either a thunk which will provide source code,\n+# or a tuple (size, mtime, contents, fullname) once loaded.\n+cache = {}","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-06-26T21:19:39Z","lastEditedAt":null,"updatedAt":"2018-06-26T21:19:39Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5ODk3MTA2NA==","url":"https://github.com/coala/coala/pull/5562#discussion_r198971064","bodyText":"So do you want a self.cache in FileFactory to tie it to a Factory object?","diffHunk":"@@ -0,0 +1,137 @@\n+import functools\n+import sys\n+import os\n+import tokenize\n+\n+__all__ = [\"get_content\", \"clearcache\", \"checkcache\"]\n+\n+\n+# The cache. Maps filenames to either a thunk which will provide source code,\n+# or a tuple (size, mtime, contents, fullname) once loaded.\n+cache = {}","author":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4","name":"Palash Nigam"},"reactions":[],"createdAt":"2018-06-28T20:15:01Z","lastEditedAt":null,"updatedAt":"2018-06-28T20:15:01Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5ODk3Njk0Mw==","url":"https://github.com/coala/coala/pull/5562#discussion_r198976943","bodyText":"I forgot to edit this comment will do it in the next push","diffHunk":"@@ -0,0 +1,41 @@\n+import os\n+\n+__all__ = ['get_content', 'clearcache']\n+\n+\n+# The cache. Maps filenames to either a thunk which will provide source code,","author":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4","name":"Palash Nigam"},"reactions":[],"createdAt":"2018-06-28T20:35:15Z","lastEditedAt":null,"updatedAt":"2018-06-28T20:35:15Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5OTA4ODM2MA==","url":"https://github.com/coala/coala/pull/5562#discussion_r199088360","bodyText":"Yes","diffHunk":"@@ -0,0 +1,137 @@\n+import functools\n+import sys\n+import os\n+import tokenize\n+\n+__all__ = [\"get_content\", \"clearcache\", \"checkcache\"]\n+\n+\n+# The cache. Maps filenames to either a thunk which will provide source code,\n+# or a tuple (size, mtime, contents, fullname) once loaded.\n+cache = {}","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-06-29T08:25:33Z","lastEditedAt":null,"updatedAt":"2018-06-29T08:25:33Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5OTkzNDA2Mg==","url":"https://github.com/coala/coala/pull/5562#discussion_r199934062","bodyText":"We should move that asap to coala-utils ;) Maybe even extend it to something like cached_property:\n@cached_property\ndef myprop(self):\n    ...","diffHunk":"@@ -0,0 +1,69 @@\n+import os\n+\n+__all__ = ['get_content', 'clear_cache']\n+\n+\n+# The cache. Maps filenames to either a thunk which will provide source code,\n+# or a tuple (size, mtime, contents, fullname) once loaded.\n+cache = {}\n+\n+\n+def clear_cache():\n+    \"\"\"\n+    Clear the cache entirely.\n+    \"\"\"\n+    global cache\n+    cache = {}\n+\n+\n+def get_content(filename):\n+    \"\"\"\n+    Get the raw contents of a file from the cache.\n+    Update the cache if it doesn't contain an entry for this file already.\n+    \"\"\"\n+    if filename in cache:\n+        return cache[filename][2]\n+    return update_cache(filename)\n+\n+\n+def update_cache(filename):\n+    \"\"\"\n+    Update a cache entry and return its list of lines.\n+    If something's wrong, print a message, discard the cache entry,\n+    and return an empty list.\n+    \"\"\"\n+    stat = os.stat(filename)\n+\n+    with open(filename, 'rb') as fp:\n+        lines = fp.read()\n+    size, mtime = stat.st_size, stat.st_mtime\n+    cache[filename] = size, mtime, lines, filename\n+    return lines\n+\n+\n+class Memoize:\n+    \"\"\"\n+    ``Memoize`` serves as a decorator for the properties\n+    of ``FileFactory`` and caches the results of the property\n+    for a particular ``FileFactory`` object.\n+    \"\"\"","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNTk3NTYyNQ==","createdAt":"2018-07-04T06:07:34Z","content":"THUMBS_UP","user":{"login":"palash25","name":"Palash Nigam"}}],"createdAt":"2018-07-03T20:02:42Z","lastEditedAt":null,"updatedAt":"2018-07-03T20:02:42Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5OTkzNDY5NA==","url":"https://github.com/coala/coala/pull/5562#discussion_r199934694","bodyText":"Can we add here\nfunctools.update_wrapper(self, func)\n\nthen the signatures look a bit nicer ;)","diffHunk":"@@ -0,0 +1,69 @@\n+import os\n+\n+__all__ = ['get_content', 'clear_cache']\n+\n+\n+# The cache. Maps filenames to either a thunk which will provide source code,\n+# or a tuple (size, mtime, contents, fullname) once loaded.\n+cache = {}\n+\n+\n+def clear_cache():\n+    \"\"\"\n+    Clear the cache entirely.\n+    \"\"\"\n+    global cache\n+    cache = {}\n+\n+\n+def get_content(filename):\n+    \"\"\"\n+    Get the raw contents of a file from the cache.\n+    Update the cache if it doesn't contain an entry for this file already.\n+    \"\"\"\n+    if filename in cache:\n+        return cache[filename][2]\n+    return update_cache(filename)\n+\n+\n+def update_cache(filename):\n+    \"\"\"\n+    Update a cache entry and return its list of lines.\n+    If something's wrong, print a message, discard the cache entry,\n+    and return an empty list.\n+    \"\"\"\n+    stat = os.stat(filename)\n+\n+    with open(filename, 'rb') as fp:\n+        lines = fp.read()\n+    size, mtime = stat.st_size, stat.st_mtime\n+    cache[filename] = size, mtime, lines, filename\n+    return lines\n+\n+\n+class Memoize:\n+    \"\"\"\n+    ``Memoize`` serves as a decorator for the properties\n+    of ``FileFactory`` and caches the results of the property\n+    for a particular ``FileFactory`` object.\n+    \"\"\"\n+\n+    def __init__(self, method):\n+        self._method = method","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNTk5ODI5Mw==","createdAt":"2018-07-04T14:10:28Z","content":"THUMBS_UP","user":{"login":"palash25","name":"Palash Nigam"}}],"createdAt":"2018-07-03T20:05:24Z","lastEditedAt":null,"updatedAt":"2018-07-03T20:05:24Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5OTkzNDg5Mw==","url":"https://github.com/coala/coala/pull/5562#discussion_r199934893","bodyText":"Did you copy parts of this class from somewhere? In case you did, please include a link 👍","diffHunk":"@@ -0,0 +1,69 @@\n+import os\n+\n+__all__ = ['get_content', 'clear_cache']\n+\n+\n+# The cache. Maps filenames to either a thunk which will provide source code,\n+# or a tuple (size, mtime, contents, fullname) once loaded.\n+cache = {}\n+\n+\n+def clear_cache():\n+    \"\"\"\n+    Clear the cache entirely.\n+    \"\"\"\n+    global cache\n+    cache = {}\n+\n+\n+def get_content(filename):\n+    \"\"\"\n+    Get the raw contents of a file from the cache.\n+    Update the cache if it doesn't contain an entry for this file already.\n+    \"\"\"\n+    if filename in cache:\n+        return cache[filename][2]\n+    return update_cache(filename)\n+\n+\n+def update_cache(filename):\n+    \"\"\"\n+    Update a cache entry and return its list of lines.\n+    If something's wrong, print a message, discard the cache entry,\n+    and return an empty list.\n+    \"\"\"\n+    stat = os.stat(filename)\n+\n+    with open(filename, 'rb') as fp:\n+        lines = fp.read()\n+    size, mtime = stat.st_size, stat.st_mtime\n+    cache[filename] = size, mtime, lines, filename\n+    return lines\n+\n+\n+class Memoize:","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-07-03T20:06:15Z","lastEditedAt":null,"updatedAt":"2018-07-03T20:06:15Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5OTkzNzQ3NQ==","url":"https://github.com/coala/coala/pull/5562#discussion_r199937475","bodyText":"do we still need all that?","diffHunk":"@@ -0,0 +1,69 @@\n+import os\n+\n+__all__ = ['get_content', 'clear_cache']\n+\n+\n+# The cache. Maps filenames to either a thunk which will provide source code,\n+# or a tuple (size, mtime, contents, fullname) once loaded.\n+cache = {}\n+\n+\n+def clear_cache():\n+    \"\"\"\n+    Clear the cache entirely.\n+    \"\"\"\n+    global cache\n+    cache = {}\n+\n+\n+def get_content(filename):\n+    \"\"\"\n+    Get the raw contents of a file from the cache.\n+    Update the cache if it doesn't contain an entry for this file already.\n+    \"\"\"\n+    if filename in cache:\n+        return cache[filename][2]\n+    return update_cache(filename)\n+\n+\n+def update_cache(filename):\n+    \"\"\"\n+    Update a cache entry and return its list of lines.\n+    If something's wrong, print a message, discard the cache entry,\n+    and return an empty list.\n+    \"\"\"\n+    stat = os.stat(filename)\n+\n+    with open(filename, 'rb') as fp:\n+        lines = fp.read()\n+    size, mtime = stat.st_size, stat.st_mtime\n+    cache[filename] = size, mtime, lines, filename\n+    return lines","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNTk3NTYwMA==","createdAt":"2018-07-04T06:06:51Z","content":"THUMBS_UP","user":{"login":"palash25","name":"Palash Nigam"}}],"createdAt":"2018-07-03T20:16:37Z","lastEditedAt":null,"updatedAt":"2018-07-03T20:16:37Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5OTk0MjI2NA==","url":"https://github.com/coala/coala/pull/5562#discussion_r199942264","bodyText":"use type(self._instance)","diffHunk":"@@ -0,0 +1,69 @@\n+import os\n+\n+__all__ = ['get_content', 'clear_cache']\n+\n+\n+# The cache. Maps filenames to either a thunk which will provide source code,\n+# or a tuple (size, mtime, contents, fullname) once loaded.\n+cache = {}\n+\n+\n+def clear_cache():\n+    \"\"\"\n+    Clear the cache entirely.\n+    \"\"\"\n+    global cache\n+    cache = {}\n+\n+\n+def get_content(filename):\n+    \"\"\"\n+    Get the raw contents of a file from the cache.\n+    Update the cache if it doesn't contain an entry for this file already.\n+    \"\"\"\n+    if filename in cache:\n+        return cache[filename][2]\n+    return update_cache(filename)\n+\n+\n+def update_cache(filename):\n+    \"\"\"\n+    Update a cache entry and return its list of lines.\n+    If something's wrong, print a message, discard the cache entry,\n+    and return an empty list.\n+    \"\"\"\n+    stat = os.stat(filename)\n+\n+    with open(filename, 'rb') as fp:\n+        lines = fp.read()\n+    size, mtime = stat.st_size, stat.st_mtime\n+    cache[filename] = size, mtime, lines, filename\n+    return lines\n+\n+\n+class Memoize:\n+    \"\"\"\n+    ``Memoize`` serves as a decorator for the properties\n+    of ``FileFactory`` and caches the results of the property\n+    for a particular ``FileFactory`` object.\n+    \"\"\"\n+\n+    def __init__(self, method):\n+        self._method = method\n+\n+    def __call__(self, instance):\n+        self._instance = instance\n+        return self.__get__(self._instance, self._instance.__class__)","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNTk3NTYyMQ==","createdAt":"2018-07-04T06:07:26Z","content":"THUMBS_UP","user":{"login":"palash25","name":"Palash Nigam"}}],"createdAt":"2018-07-03T20:33:59Z","lastEditedAt":null,"updatedAt":"2018-07-03T20:33:59Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5OTk0MzMyOQ==","url":"https://github.com/coala/coala/pull/5562#discussion_r199943329","bodyText":"actually, do you need to override __get__? Can you explain me how it works exactly? I believe __get__ will be invoked when you do self.memoized_func.attribute_you_want_to_access (and that will only happen if it's not a property, as a property will always call the Memoize class).","diffHunk":"@@ -0,0 +1,69 @@\n+import os\n+\n+__all__ = ['get_content', 'clear_cache']\n+\n+\n+# The cache. Maps filenames to either a thunk which will provide source code,\n+# or a tuple (size, mtime, contents, fullname) once loaded.\n+cache = {}\n+\n+\n+def clear_cache():\n+    \"\"\"\n+    Clear the cache entirely.\n+    \"\"\"\n+    global cache\n+    cache = {}\n+\n+\n+def get_content(filename):\n+    \"\"\"\n+    Get the raw contents of a file from the cache.\n+    Update the cache if it doesn't contain an entry for this file already.\n+    \"\"\"\n+    if filename in cache:\n+        return cache[filename][2]\n+    return update_cache(filename)\n+\n+\n+def update_cache(filename):\n+    \"\"\"\n+    Update a cache entry and return its list of lines.\n+    If something's wrong, print a message, discard the cache entry,\n+    and return an empty list.\n+    \"\"\"\n+    stat = os.stat(filename)\n+\n+    with open(filename, 'rb') as fp:\n+        lines = fp.read()\n+    size, mtime = stat.st_size, stat.st_mtime\n+    cache[filename] = size, mtime, lines, filename\n+    return lines\n+\n+\n+class Memoize:\n+    \"\"\"\n+    ``Memoize`` serves as a decorator for the properties\n+    of ``FileFactory`` and caches the results of the property\n+    for a particular ``FileFactory`` object.\n+    \"\"\"\n+\n+    def __init__(self, method):\n+        self._method = method\n+\n+    def __call__(self, instance):\n+        self._instance = instance\n+        return self.__get__(self._instance, self._instance.__class__)\n+\n+    def __get__(self, instance, owner):","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-07-03T20:38:38Z","lastEditedAt":null,"updatedAt":"2018-07-03T20:38:38Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5OTk0ODYwNg==","url":"https://github.com/coala/coala/pull/5562#discussion_r199948606","bodyText":"Yup, its an edited version of cached_property. I will include the link.","diffHunk":"@@ -0,0 +1,69 @@\n+import os\n+\n+__all__ = ['get_content', 'clear_cache']\n+\n+\n+# The cache. Maps filenames to either a thunk which will provide source code,\n+# or a tuple (size, mtime, contents, fullname) once loaded.\n+cache = {}\n+\n+\n+def clear_cache():\n+    \"\"\"\n+    Clear the cache entirely.\n+    \"\"\"\n+    global cache\n+    cache = {}\n+\n+\n+def get_content(filename):\n+    \"\"\"\n+    Get the raw contents of a file from the cache.\n+    Update the cache if it doesn't contain an entry for this file already.\n+    \"\"\"\n+    if filename in cache:\n+        return cache[filename][2]\n+    return update_cache(filename)\n+\n+\n+def update_cache(filename):\n+    \"\"\"\n+    Update a cache entry and return its list of lines.\n+    If something's wrong, print a message, discard the cache entry,\n+    and return an empty list.\n+    \"\"\"\n+    stat = os.stat(filename)\n+\n+    with open(filename, 'rb') as fp:\n+        lines = fp.read()\n+    size, mtime = stat.st_size, stat.st_mtime\n+    cache[filename] = size, mtime, lines, filename\n+    return lines\n+\n+\n+class Memoize:","author":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4","name":"Palash Nigam"},"reactions":[],"createdAt":"2018-07-03T21:01:50Z","lastEditedAt":"2018-07-03T21:09:49Z","updatedAt":"2018-07-03T21:09:49Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQwMzA3MzQ5MQ==","url":"https://github.com/coala/coala/pull/5562#issuecomment-403073491","bodyText":"Actually, have you seen this? --> https://pypi.org/project/cached-property/\n\nI have seen something similar but not this package 😆 . But if I had just copy pasted this I wouldn't get to learn so much about the dunder functions, so I'm glad I missed this.","diffHunk":null,"author":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4","name":"Palash Nigam"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNjE0MzU1NA==","createdAt":"2018-07-08T13:09:12Z","content":"HOORAY","user":{"login":"Makman2","name":"Mischa Krüger"}},{"id":"MDg6UmVhY3Rpb24yNjE0MzU1NQ==","createdAt":"2018-07-08T13:09:14Z","content":"LAUGH","user":{"login":"Makman2","name":"Mischa Krüger"}}],"createdAt":"2018-07-06T15:51:51Z","lastEditedAt":null,"updatedAt":"2018-07-06T15:51:51Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQwMzI4NjczOA==","url":"https://github.com/coala/coala/pull/5562#issuecomment-403286738","bodyText":"So do we want to use this package?","diffHunk":null,"author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-07-08T13:09:32Z","lastEditedAt":null,"updatedAt":"2018-07-08T13:09:32Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1530191204000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5563","number":5563,"title":"Syntax fixed for GitBasics.rst","body":"The sample conventions have been bulleted\nThe  suggestion has been demarcated","comments":1,"createdAt":"2018-06-24T13:16:58Z","updatedAt":"2018-06-28T13:06:44Z","closedAt":null,"state":"open","user":{"login":"Satyabrat35","avatarUrl":"https://avatars2.githubusercontent.com/u/26750197?v=4"},"owner":{"login":"Satyabrat35","avatarUrl":"https://avatars2.githubusercontent.com/u/26750197?v=4"},"labels":[{"name":"process/wip","color":"fbca04"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5563","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDQwMTAyNzc5Mw==","url":"https://github.com/coala/coala/pull/5563#issuecomment-401027793","bodyText":"Squash your commits.  See http://coala.io/commit and http://coala.io/git","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-06-28T13:06:37Z","lastEditedAt":null,"updatedAt":"2018-06-28T13:06:37Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1534521029000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5564","number":5564,"title":"BaseTestHelper.py: Improve AssertionError message","body":"This improves the AssertionError message generated from\nassert_result_equal(...) method by inheriting unittest\nin BaseTestHelper class.\nCloses #5533","comments":2,"createdAt":"2018-06-24T13:21:17Z","updatedAt":"2018-08-17T15:50:29Z","closedAt":null,"state":"open","user":{"login":"sangamcse","avatarUrl":"https://avatars2.githubusercontent.com/u/26381717?v=4"},"owner":{"login":"sangamcse","avatarUrl":"https://avatars2.githubusercontent.com/u/26381717?v=4"},"assignee":{"login":"sangamcse","avatarUrl":"https://avatars2.githubusercontent.com/u/26381717?v=4"},"labels":[{"name":"process/wip","color":"fbca04"},{"name":"size/S","color":"B1CF0A"},{"name":"type/bug","color":"e11d21"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5564","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5ODgxNDEzNQ==","url":"https://github.com/coala/coala/pull/5564#discussion_r198814135","bodyText":"why was this removed?  the assertion might change slightly, but we need to check the assertion message still.\nfyi, see #3374 and #3808\nYou can also add Related to https://github.com/coala/coala/issues/3808 in your commit message as that is what this PR is also doing","diffHunk":"@@ -9,23 +7,38 @@ def test_good_assert_result_equal(self):\n         self.assert_result_equal(['a', 'b'], ['a', 'b'])\n \n     def test_inequality_assert_result_equal(self):\n-        with pytest.raises(AssertionError) as ex:\n+        with self.assertRaises(AssertionError) as ex:\n             self.assert_result_equal(['a', 'b'], ['a', 'b', None])\n-        assert '[\\'a\\', \\'b\\'] != [\\'a\\', \\'b\\', None]' in str(ex.value)\n+        self.assertEqual(\"Lists differ: ['a', 'b'] != ['a', 'b', None]\\n\\n\"\n+                         'Second list contains 1 additional elements.\\n'\n+                         'First extra element 2:\\n'\n+                         'None\\n\\n'\n+                         \"- ['a', 'b']\\n\"\n+                         \"+ ['a', 'b', None]\\n\"\n+                         '?          ++++++\\n', str(ex.exception))\n \n     def test_not_comparable_assert_result_equal(self):\n-        with pytest.raises(AssertionError) as ex:\n+        with self.assertRaises(AssertionError):\n             self.assert_result_equal(['a', 'b'], ['a', 'c'])\n-        assert '[\\'a\\', \\'b\\'] != [\\'a\\', \\'c\\']' in str(ex.value)","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-06-28T11:59:12Z","lastEditedAt":null,"updatedAt":"2018-06-28T11:59:12Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5ODg3MjY2OA==","url":"https://github.com/coala/coala/pull/5564#discussion_r198872668","bodyText":"It was differing in different python version. I tried here. Still, I am trying it once again.\n\nwhy was this removed? the assertion might change slightly, but we need to check the assertion message still.\n\nI will do that. 😄\n\nYou can also add Related to https://github.com/coala/coala/issues/3808 in your commit message as that is what this PR is also doing","diffHunk":"@@ -9,23 +7,38 @@ def test_good_assert_result_equal(self):\n         self.assert_result_equal(['a', 'b'], ['a', 'b'])\n \n     def test_inequality_assert_result_equal(self):\n-        with pytest.raises(AssertionError) as ex:\n+        with self.assertRaises(AssertionError) as ex:\n             self.assert_result_equal(['a', 'b'], ['a', 'b', None])\n-        assert '[\\'a\\', \\'b\\'] != [\\'a\\', \\'b\\', None]' in str(ex.value)\n+        self.assertEqual(\"Lists differ: ['a', 'b'] != ['a', 'b', None]\\n\\n\"\n+                         'Second list contains 1 additional elements.\\n'\n+                         'First extra element 2:\\n'\n+                         'None\\n\\n'\n+                         \"- ['a', 'b']\\n\"\n+                         \"+ ['a', 'b', None]\\n\"\n+                         '?          ++++++\\n', str(ex.exception))\n \n     def test_not_comparable_assert_result_equal(self):\n-        with pytest.raises(AssertionError) as ex:\n+        with self.assertRaises(AssertionError):\n             self.assert_result_equal(['a', 'b'], ['a', 'c'])\n-        assert '[\\'a\\', \\'b\\'] != [\\'a\\', \\'c\\']' in str(ex.value)","author":{"login":"sangamcse","avatarUrl":"https://avatars2.githubusercontent.com/u/26381717?v=4","name":"Sangam Kumar"},"reactions":[],"createdAt":"2018-06-28T14:55:28Z","lastEditedAt":null,"updatedAt":"2018-06-28T14:55:28Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5ODkwMzY3NQ==","url":"https://github.com/coala/coala/pull/5564#discussion_r198903675","bodyText":"It is done now @jayvdb. Take a look. Thanks.","diffHunk":"@@ -9,23 +7,38 @@ def test_good_assert_result_equal(self):\n         self.assert_result_equal(['a', 'b'], ['a', 'b'])\n \n     def test_inequality_assert_result_equal(self):\n-        with pytest.raises(AssertionError) as ex:\n+        with self.assertRaises(AssertionError) as ex:\n             self.assert_result_equal(['a', 'b'], ['a', 'b', None])\n-        assert '[\\'a\\', \\'b\\'] != [\\'a\\', \\'b\\', None]' in str(ex.value)\n+        self.assertEqual(\"Lists differ: ['a', 'b'] != ['a', 'b', None]\\n\\n\"\n+                         'Second list contains 1 additional elements.\\n'\n+                         'First extra element 2:\\n'\n+                         'None\\n\\n'\n+                         \"- ['a', 'b']\\n\"\n+                         \"+ ['a', 'b', None]\\n\"\n+                         '?          ++++++\\n', str(ex.exception))\n \n     def test_not_comparable_assert_result_equal(self):\n-        with pytest.raises(AssertionError) as ex:\n+        with self.assertRaises(AssertionError):\n             self.assert_result_equal(['a', 'b'], ['a', 'c'])\n-        assert '[\\'a\\', \\'b\\'] != [\\'a\\', \\'c\\']' in str(ex.value)","author":{"login":"sangamcse","avatarUrl":"https://avatars2.githubusercontent.com/u/26381717?v=4","name":"Sangam Kumar"},"reactions":[],"createdAt":"2018-06-28T16:22:48Z","lastEditedAt":null,"updatedAt":"2018-06-28T16:22:48Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5OTkwMjEwOA==","url":"https://github.com/coala/coala/pull/5564#discussion_r199902108","bodyText":"yields?  -> raises ...","diffHunk":"@@ -1,45 +1,43 @@\n-from coala_utils.Comparable import Comparable\n+import unittest\n \n+from coala_utils.Comparable import Comparable\n \n-def _assert_comparable_equal(observed_result, expected_result):\n-    \"\"\"\n-    Compares individual fields of the result objects using\n-    `__compare_fields__` of `coala_utils.Comparable` class\n-    and yields messages in case of an attribute mismatch.\n-    \"\"\"\n \n-    if not len(observed_result) == len(expected_result):\n-        assert observed_result == expected_result, '%s != %s' % (\n-            observed_result, expected_result)\n-\n-    messages = ''\n-    for observed, expected in zip(observed_result, expected_result):\n-        if (isinstance(observed, Comparable) and\n-            isinstance(expected, Comparable)) and (type(observed) is\n-                                                   type(expected)):\n-            for attribute in type(observed).__compare_fields__:\n-                try:\n-                    assert getattr(observed, attribute) == getattr(\n-                        expected, attribute), (\n-                        '{} mismatch: {}, {} != {}, {}'.format(\n-                            attribute,\n-                            observed.origin, observed.message,\n-                            expected.origin, expected.message))\n-                except AssertionError as ex:\n-                    messages += (str(ex) + '\\n\\n')\n-        else:\n-            assert observed_result == expected_result, '%s != %s' % (\n-                observed_result, expected_result)\n-\n-    if messages:\n-        raise AssertionError(messages)\n-\n-\n-class BaseTestHelper:\n+class BaseTestHelper(unittest.TestCase):\n     \"\"\"\n     This is a base class for all Bears' tests of coala's testing API.\n     \"\"\"\n \n+    def _assert_comparable_equal(self,\n+                                 observed_result,\n+                                 expected_result):\n+        \"\"\"\n+        Compares individual fields of the result objects using\n+        `__compare_fields__` of `coala_utils.Comparable` class\n+        and yields messages in case of an attribute mismatch.","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-07-03T18:04:43Z","lastEditedAt":null,"updatedAt":"2018-07-03T18:04:43Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5OTkwMjYwMw==","url":"https://github.com/coala/coala/pull/5564#discussion_r199902603","bodyText":"put them into an array, and then format them at the end when raising the exception","diffHunk":"@@ -1,45 +1,43 @@\n-from coala_utils.Comparable import Comparable\n+import unittest\n \n+from coala_utils.Comparable import Comparable\n \n-def _assert_comparable_equal(observed_result, expected_result):\n-    \"\"\"\n-    Compares individual fields of the result objects using\n-    `__compare_fields__` of `coala_utils.Comparable` class\n-    and yields messages in case of an attribute mismatch.\n-    \"\"\"\n \n-    if not len(observed_result) == len(expected_result):\n-        assert observed_result == expected_result, '%s != %s' % (\n-            observed_result, expected_result)\n-\n-    messages = ''\n-    for observed, expected in zip(observed_result, expected_result):\n-        if (isinstance(observed, Comparable) and\n-            isinstance(expected, Comparable)) and (type(observed) is\n-                                                   type(expected)):\n-            for attribute in type(observed).__compare_fields__:\n-                try:\n-                    assert getattr(observed, attribute) == getattr(\n-                        expected, attribute), (\n-                        '{} mismatch: {}, {} != {}, {}'.format(\n-                            attribute,\n-                            observed.origin, observed.message,\n-                            expected.origin, expected.message))\n-                except AssertionError as ex:\n-                    messages += (str(ex) + '\\n\\n')\n-        else:\n-            assert observed_result == expected_result, '%s != %s' % (\n-                observed_result, expected_result)\n-\n-    if messages:\n-        raise AssertionError(messages)\n-\n-\n-class BaseTestHelper:\n+class BaseTestHelper(unittest.TestCase):\n     \"\"\"\n     This is a base class for all Bears' tests of coala's testing API.\n     \"\"\"\n \n+    def _assert_comparable_equal(self,\n+                                 observed_result,\n+                                 expected_result):\n+        \"\"\"\n+        Compares individual fields of the result objects using\n+        `__compare_fields__` of `coala_utils.Comparable` class\n+        and yields messages in case of an attribute mismatch.\n+        \"\"\"\n+\n+        if not len(observed_result) == len(expected_result):\n+            self.assertEqual(observed_result, expected_result)\n+\n+        messages = ''","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNjEyODM5Mg==","createdAt":"2018-07-07T09:45:40Z","content":"THUMBS_UP","user":{"login":"sangamcse","name":"Sangam Kumar"}}],"createdAt":"2018-07-03T18:06:32Z","lastEditedAt":null,"updatedAt":"2018-07-03T18:06:32Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMDgwNzg5MA==","url":"https://github.com/coala/coala/pull/5564#discussion_r200807890","bodyText":"Changes are done @jayvdb","diffHunk":"@@ -1,45 +1,43 @@\n-from coala_utils.Comparable import Comparable\n+import unittest\n \n+from coala_utils.Comparable import Comparable\n \n-def _assert_comparable_equal(observed_result, expected_result):\n-    \"\"\"\n-    Compares individual fields of the result objects using\n-    `__compare_fields__` of `coala_utils.Comparable` class\n-    and yields messages in case of an attribute mismatch.\n-    \"\"\"\n \n-    if not len(observed_result) == len(expected_result):\n-        assert observed_result == expected_result, '%s != %s' % (\n-            observed_result, expected_result)\n-\n-    messages = ''\n-    for observed, expected in zip(observed_result, expected_result):\n-        if (isinstance(observed, Comparable) and\n-            isinstance(expected, Comparable)) and (type(observed) is\n-                                                   type(expected)):\n-            for attribute in type(observed).__compare_fields__:\n-                try:\n-                    assert getattr(observed, attribute) == getattr(\n-                        expected, attribute), (\n-                        '{} mismatch: {}, {} != {}, {}'.format(\n-                            attribute,\n-                            observed.origin, observed.message,\n-                            expected.origin, expected.message))\n-                except AssertionError as ex:\n-                    messages += (str(ex) + '\\n\\n')\n-        else:\n-            assert observed_result == expected_result, '%s != %s' % (\n-                observed_result, expected_result)\n-\n-    if messages:\n-        raise AssertionError(messages)\n-\n-\n-class BaseTestHelper:\n+class BaseTestHelper(unittest.TestCase):\n     \"\"\"\n     This is a base class for all Bears' tests of coala's testing API.\n     \"\"\"\n \n+    def _assert_comparable_equal(self,\n+                                 observed_result,\n+                                 expected_result):\n+        \"\"\"\n+        Compares individual fields of the result objects using\n+        `__compare_fields__` of `coala_utils.Comparable` class\n+        and yields messages in case of an attribute mismatch.","author":{"login":"sangamcse","avatarUrl":"https://avatars2.githubusercontent.com/u/26381717?v=4","name":"Sangam Kumar"},"reactions":[],"createdAt":"2018-07-07T09:45:30Z","lastEditedAt":null,"updatedAt":"2018-07-07T09:45:30Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMDk1MDUyOA==","url":"https://github.com/coala/coala/pull/5564#discussion_r210950528","bodyText":"When running test_jinja2_templating (due to coala/coala-bears#2678) which isnt the best of test approaches, but far from the worst, here are my error results\n>               raise AssertionError(messages)\nE               AssertionError: 'Usin[68 chars]o XSS. Ensure autoescape=True to mitigate XSS vulnerabilities.' != 'Usin[68 chars]o XSS. Use autoescape=True to mitigate XSS vulnerabilities.'\nE               - Using jinja2 templates with autoescape=False is dangerous and can lead to XSS. Ensure autoescape=True to mitigate XSS vulnerabilities.\nE               ?                                                                                ^^ --\nE               + Using jinja2 templates with autoescape=False is dangerous and can lead to XSS. Use autoescape=True to mitigate XSS vulnerabilities.\nE               ?                                                                                ^\nE                : message_base mismatch.\n\n../coala/coalib/testing/LocalBearTestHelper.py:136: AssertionError\n\nNow how can I work out which of the five Result that was about?\nThis entire test system is fundamentally flawed.\ntest helpers should help diagose, not help write tests which are unable to be diagnosed.\nIf I change it to assert sorted(bear_output) == sorted(results), I see nothing because these Comparable objects are impossible for pytest to automatically inspect dynamically.  And self.assertCountEqual has also been busted: the output is a mess.  We are breaking the standard Python testing tools, and replacing them with something less helpful.\nSo at the moment, with pytest and unittest builtin systems not working on Result objects, we are reliant on this Comparable class and this helper to actually help decode the problem.  It doesnt do that before this patch, and this patch doesnt make it much better.","diffHunk":"@@ -1,45 +1,43 @@\n-from coala_utils.Comparable import Comparable\n+import unittest\n \n+from coala_utils.Comparable import Comparable\n \n-def _assert_comparable_equal(observed_result, expected_result):\n-    \"\"\"\n-    Compares individual fields of the result objects using\n-    `__compare_fields__` of `coala_utils.Comparable` class\n-    and yields messages in case of an attribute mismatch.\n-    \"\"\"\n \n-    if not len(observed_result) == len(expected_result):\n-        assert observed_result == expected_result, '%s != %s' % (\n-            observed_result, expected_result)\n-\n-    messages = ''\n-    for observed, expected in zip(observed_result, expected_result):\n-        if (isinstance(observed, Comparable) and\n-            isinstance(expected, Comparable)) and (type(observed) is\n-                                                   type(expected)):\n-            for attribute in type(observed).__compare_fields__:\n-                try:\n-                    assert getattr(observed, attribute) == getattr(\n-                        expected, attribute), (\n-                        '{} mismatch: {}, {} != {}, {}'.format(\n-                            attribute,\n-                            observed.origin, observed.message,\n-                            expected.origin, expected.message))\n-                except AssertionError as ex:\n-                    messages += (str(ex) + '\\n\\n')\n-        else:\n-            assert observed_result == expected_result, '%s != %s' % (\n-                observed_result, expected_result)\n-\n-    if messages:\n-        raise AssertionError(messages)\n-\n-\n-class BaseTestHelper:\n+class BaseTestHelper(unittest.TestCase):\n     \"\"\"\n     This is a base class for all Bears' tests of coala's testing API.\n     \"\"\"\n \n+    def _assert_comparable_equal(self,\n+                                 observed_result,\n+                                 expected_result):\n+        \"\"\"\n+        Compares individual fields of the result objects using\n+        `__compare_fields__` of `coala_utils.Comparable` class\n+        and raises messages in case of an attribute mismatch.\n+        \"\"\"\n+\n+        if not len(observed_result) == len(expected_result):\n+            self.assertEqual(observed_result, expected_result)\n+\n+        messages = []\n+        for observed, expected in zip(observed_result, expected_result):\n+            if (isinstance(observed, Comparable) and\n+                isinstance(expected, Comparable)) and (\n+                    Comparable.__eq__(expected, observed)):\n+                for attribute in observed.__compare_fields__:\n+                    try:\n+                        self.assertEqual(getattr(observed, attribute),\n+                                         getattr(expected, attribute),\n+                                         msg='{} mismatch.'.format(attribute))\n+                    except AssertionError as ex:\n+                        messages.append(str(ex))\n+            else:\n+                self.assertEqual(observed, expected)\n+\n+        if messages:\n+            raise AssertionError('\\n\\n'.join(message for message in messages))","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-17T15:39:27Z","lastEditedAt":null,"updatedAt":"2018-08-17T15:39:27Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMDk1MTA4MQ==","url":"https://github.com/coala/coala/pull/5564#discussion_r210951081","bodyText":"this makes the test suite reliant on pytest output, which differs whenever pytest finds a way to improve their messages.","diffHunk":"@@ -1,45 +1,43 @@\n-from coala_utils.Comparable import Comparable\n+import unittest\n \n+from coala_utils.Comparable import Comparable\n \n-def _assert_comparable_equal(observed_result, expected_result):\n-    \"\"\"\n-    Compares individual fields of the result objects using\n-    `__compare_fields__` of `coala_utils.Comparable` class\n-    and yields messages in case of an attribute mismatch.\n-    \"\"\"\n \n-    if not len(observed_result) == len(expected_result):\n-        assert observed_result == expected_result, '%s != %s' % (\n-            observed_result, expected_result)\n-\n-    messages = ''\n-    for observed, expected in zip(observed_result, expected_result):\n-        if (isinstance(observed, Comparable) and\n-            isinstance(expected, Comparable)) and (type(observed) is\n-                                                   type(expected)):\n-            for attribute in type(observed).__compare_fields__:\n-                try:\n-                    assert getattr(observed, attribute) == getattr(\n-                        expected, attribute), (\n-                        '{} mismatch: {}, {} != {}, {}'.format(\n-                            attribute,\n-                            observed.origin, observed.message,\n-                            expected.origin, expected.message))\n-                except AssertionError as ex:\n-                    messages += (str(ex) + '\\n\\n')\n-        else:\n-            assert observed_result == expected_result, '%s != %s' % (\n-                observed_result, expected_result)\n-\n-    if messages:\n-        raise AssertionError(messages)\n-\n-\n-class BaseTestHelper:\n+class BaseTestHelper(unittest.TestCase):\n     \"\"\"\n     This is a base class for all Bears' tests of coala's testing API.\n     \"\"\"\n \n+    def _assert_comparable_equal(self,\n+                                 observed_result,\n+                                 expected_result):\n+        \"\"\"\n+        Compares individual fields of the result objects using\n+        `__compare_fields__` of `coala_utils.Comparable` class\n+        and raises messages in case of an attribute mismatch.\n+        \"\"\"\n+\n+        if not len(observed_result) == len(expected_result):\n+            self.assertEqual(observed_result, expected_result)\n+\n+        messages = []\n+        for observed, expected in zip(observed_result, expected_result):\n+            if (isinstance(observed, Comparable) and\n+                isinstance(expected, Comparable)) and (\n+                    Comparable.__eq__(expected, observed)):\n+                for attribute in observed.__compare_fields__:\n+                    try:\n+                        self.assertEqual(getattr(observed, attribute),\n+                                         getattr(expected, attribute),\n+                                         msg='{} mismatch.'.format(attribute))\n+                    except AssertionError as ex:\n+                        messages.append(str(ex))","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-17T15:40:50Z","lastEditedAt":null,"updatedAt":"2018-08-17T15:40:50Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMDk1Mjc1NQ==","url":"https://github.com/coala/coala/pull/5564#discussion_r210952755","bodyText":"use textwrap.dedent to make this more readable.","diffHunk":"@@ -9,23 +7,41 @@ def test_good_assert_result_equal(self):\n         self.assert_result_equal(['a', 'b'], ['a', 'b'])\n \n     def test_inequality_assert_result_equal(self):\n-        with pytest.raises(AssertionError) as ex:\n+        with self.assertRaises(AssertionError) as ex:\n             self.assert_result_equal(['a', 'b'], ['a', 'b', None])\n-        assert '[\\'a\\', \\'b\\'] != [\\'a\\', \\'b\\', None]' in str(ex.value)\n+        self.assertEqual(\"Lists differ: ['a', 'b'] != ['a', 'b', None]\\n\\n\"\n+                         'Second list contains 1 additional elements.\\n'\n+                         'First extra element 2:\\n'\n+                         'None\\n\\n'\n+                         \"- ['a', 'b']\\n\"\n+                         \"+ ['a', 'b', None]\\n\"\n+                         '?          ++++++\\n', str(ex.exception))\n \n     def test_not_comparable_assert_result_equal(self):\n-        with pytest.raises(AssertionError) as ex:\n+        with self.assertRaises(AssertionError) as ex:\n             self.assert_result_equal(['a', 'b'], ['a', 'c'])\n-        assert '[\\'a\\', \\'b\\'] != [\\'a\\', \\'c\\']' in str(ex.value)\n+        self.assertEqual(\"'b' != 'c'\\n\"\n+                         '- b\\n'\n+                         '+ c\\n', str(ex.exception))\n \n     def test_comparable_assert_result_equal(self):\n         expected = [Result.from_values(origin='AnyBea',\n                                        message='This file has 2 lines.',\n                                        file='anyfile')]\n         observed = [Result.from_values(origin='AnyBear',\n-                                       message='This file has 2 lines.',\n+                                       message='This file has 3 lines.',\n                                        file='anyfile')]\n-        with pytest.raises(AssertionError) as ex:\n+        with self.assertRaises(AssertionError) as ex:\n             self.assert_result_equal(expected, observed)\n-        assert ('origin mismatch: AnyBea, This file has 2 lines. != AnyBear, '\n-                'This file has 2 lines.\\n\\n') == str(ex.value)\n+        self.assertEqual(\"'AnyBea' != 'AnyBear'\\n\"","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-17T15:46:01Z","lastEditedAt":null,"updatedAt":"2018-08-17T15:46:01Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMDk1Mjg2OA==","url":"https://github.com/coala/coala/pull/5564#discussion_r210952868","bodyText":"these tests now rely on the output of pytest - see note above about capturing the assertion and converting it into a string.\nThat isnt helpful.\nAnd these test cases are not helpful.\nWhat we need are tests of multiple complicated Result objects, and showing that the error message is helpful for real scenarios.\nAnd our messages should not use pytest's messages, because they are dumb -- they are automatic and can not know the context of the situation, or know what the bear debugger needs to see in order to be able to diagnose the problem.","diffHunk":"@@ -9,23 +7,41 @@ def test_good_assert_result_equal(self):\n         self.assert_result_equal(['a', 'b'], ['a', 'b'])\n \n     def test_inequality_assert_result_equal(self):\n-        with pytest.raises(AssertionError) as ex:\n+        with self.assertRaises(AssertionError) as ex:\n             self.assert_result_equal(['a', 'b'], ['a', 'b', None])\n-        assert '[\\'a\\', \\'b\\'] != [\\'a\\', \\'b\\', None]' in str(ex.value)\n+        self.assertEqual(\"Lists differ: ['a', 'b'] != ['a', 'b', None]\\n\\n\"","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-17T15:46:25Z","lastEditedAt":null,"updatedAt":"2018-08-17T15:46:25Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQwMjI0MDk5Mw==","url":"https://github.com/coala/coala/pull/5564#issuecomment-402240993","bodyText":"Ping @jayvdb, need your review.","diffHunk":null,"author":{"login":"sangamcse","avatarUrl":"https://avatars2.githubusercontent.com/u/26381717?v=4","name":"Sangam Kumar"},"reactions":[],"createdAt":"2018-07-03T17:50:59Z","lastEditedAt":null,"updatedAt":"2018-07-03T17:50:59Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQwNTAyNzk3Nw==","url":"https://github.com/coala/coala/pull/5564#issuecomment-405027977","bodyText":"@jayvdb, I think all the changes are done. Have a look, please. 😄","diffHunk":null,"author":{"login":"sangamcse","avatarUrl":"https://avatars2.githubusercontent.com/u/26381717?v=4","name":"Sangam Kumar"},"reactions":[],"createdAt":"2018-07-14T14:45:35Z","lastEditedAt":null,"updatedAt":"2018-07-14T14:45:35Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1531121893000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5566","number":5566,"title":"Git_Basics.rst : Add Bullets","body":"This entrypoint ensures that Git_Basics.rst\ndisplays bullets on a part of documentation\nclearly.\nCloses #5549\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":20,"createdAt":"2018-06-25T16:16:34Z","updatedAt":"2018-07-09T07:38:13Z","closedAt":null,"state":"open","user":{"login":"0110G","avatarUrl":"https://avatars1.githubusercontent.com/u/39427377?v=4"},"owner":{"login":"0110G","avatarUrl":"https://avatars1.githubusercontent.com/u/39427377?v=4"},"assignee":{"login":"0110G","avatarUrl":"https://avatars1.githubusercontent.com/u/39427377?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"process/wip","color":"fbca04"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5566","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5ODIzOTYwNA==","url":"https://github.com/coala/coala/pull/5566#discussion_r198239604","bodyText":"How are these changes relevant ? Please explain.","diffHunk":"@@ -1,18 +1,9 @@\n-[Default]\n-files = *.py, coalib/**/*.py, ./coala, tests/**/*.py, docs/conf.py\n-ignore =\n-    tests/bearlib/languages/documentation/documentation_extraction_testdata/*.py,\n-    tests/collecting/collectors_test_dir/bears/incorrect_bear.py,\n-\n-max_line_length = 80\n-use_spaces = True\n-\n [python]\n # Patches may conflict with autopep8 so putting them in own section so they\n # will be executed sequentially; also we need the LineLengthBear to double\n # check the line length because PEP8Bear sometimes isn't able to correct the\n # linelength.\n-bears = SpaceConsistencyBear, QuotesBear","author":{"login":"kriti21","avatarUrl":"https://avatars3.githubusercontent.com/u/19872082?v=4","name":"Kriti Rohilla"},"createdAt":"2018-06-26T17:48:14Z","lastEditedAt":"2018-06-26T17:50:01Z","updatedAt":"2018-06-26T17:50:01Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5ODI0MTY5NQ==","url":"https://github.com/coala/coala/pull/5566#discussion_r198241695","bodyText":"I didnt mean to change .coafile but it somehow changed when i ran coala.","diffHunk":"@@ -1,18 +1,9 @@\n-[Default]\n-files = *.py, coalib/**/*.py, ./coala, tests/**/*.py, docs/conf.py\n-ignore =\n-    tests/bearlib/languages/documentation/documentation_extraction_testdata/*.py,\n-    tests/collecting/collectors_test_dir/bears/incorrect_bear.py,\n-\n-max_line_length = 80\n-use_spaces = True\n-\n [python]\n # Patches may conflict with autopep8 so putting them in own section so they\n # will be executed sequentially; also we need the LineLengthBear to double\n # check the line length because PEP8Bear sometimes isn't able to correct the\n # linelength.\n-bears = SpaceConsistencyBear, QuotesBear","author":{"login":"0110G","avatarUrl":"https://avatars1.githubusercontent.com/u/39427377?v=4","name":null},"createdAt":"2018-06-26T17:55:00Z","lastEditedAt":null,"updatedAt":"2018-06-26T17:55:00Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQwMDE4ODQ0NQ==","url":"https://github.com/coala/coala/pull/5566#issuecomment-400188445","bodyText":"@virresh  do you mean to run coala on rst file ?","diffHunk":null,"author":{"login":"0110G","avatarUrl":"https://avatars1.githubusercontent.com/u/39427377?v=4","name":null},"createdAt":"2018-06-26T05:59:48Z","lastEditedAt":null,"updatedAt":"2018-06-26T05:59:48Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQwMDIxNzUzMw==","url":"https://github.com/coala/coala/pull/5566#issuecomment-400217533","bodyText":"@virresh do you mean to run coala on rst file ?\n\nRun coala from the base directory of coala source that you have locally\n(Recall the step 0 in the newcomers guide, just use coala source instead of a project of your own)","diffHunk":null,"author":{"login":"virresh","avatarUrl":"https://avatars0.githubusercontent.com/u/10978108?v=4","name":"Viresh Gupta"},"createdAt":"2018-06-26T08:02:08Z","lastEditedAt":null,"updatedAt":"2018-06-26T08:02:08Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQwMDQwNTk2Nw==","url":"https://github.com/coala/coala/pull/5566#issuecomment-400405967","bodyText":"I ran","diffHunk":null,"author":{"login":"0110G","avatarUrl":"https://avatars1.githubusercontent.com/u/39427377?v=4","name":null},"createdAt":"2018-06-26T17:53:29Z","lastEditedAt":null,"updatedAt":"2018-06-26T17:53:29Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQwMDQwODI3Mw==","url":"https://github.com/coala/coala/pull/5566#issuecomment-400408273","bodyText":"@0110G You must be getting some warnings about how you can improve your changes. Please make those till coala runs without any warning and then push your final change.","diffHunk":null,"author":{"login":"kriti21","avatarUrl":"https://avatars3.githubusercontent.com/u/19872082?v=4","name":"Kriti Rohilla"},"createdAt":"2018-06-26T18:00:30Z","lastEditedAt":null,"updatedAt":"2018-06-26T18:00:30Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQwMDUzMTIyMQ==","url":"https://github.com/coala/coala/pull/5566#issuecomment-400531221","bodyText":"It says  Line is longer than allowed. (80 > 79)","diffHunk":null,"author":{"login":"0110G","avatarUrl":"https://avatars1.githubusercontent.com/u/39427377?v=4","name":null},"createdAt":"2018-06-27T03:26:06Z","lastEditedAt":null,"updatedAt":"2018-06-27T03:26:06Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQwMDU1MzQ1Mw==","url":"https://github.com/coala/coala/pull/5566#issuecomment-400553453","bodyText":"@0110G run coala on your local system and correct the warnings you get. If it says line is longer then either split the line or shorten its length.\nThis time you amend your commit, make sure coafile is as it was before. Next time onwards make sure you add only those files in which you have made the changes.","diffHunk":null,"author":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4","name":"Pareksha Manchanda"},"createdAt":"2018-06-27T06:06:58Z","lastEditedAt":null,"updatedAt":"2018-06-27T06:06:58Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQwMTAzNjk0MA==","url":"https://github.com/coala/coala/pull/5566#issuecomment-401036940","bodyText":"Look at https://github.com/coala/coala/pull/5566/files -- see all those changes which are not related to Git_Basics -- they have to be reverted (reset) to how they were before you changed them.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-06-28T13:36:01Z","lastEditedAt":null,"updatedAt":"2018-06-28T13:36:01Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQwMjQ5OTYyNQ==","url":"https://github.com/coala/coala/pull/5566#issuecomment-402499625","bodyText":"If this isnt fixed soon, it will need to be rejected.  Please come onto https://coala.io/chat and ask for help to fix this.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-07-04T14:45:51Z","lastEditedAt":null,"updatedAt":"2018-07-04T14:45:51Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1530021299000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5568","number":5568,"title":"Shell: Fix run_shell_command() for shell=True","body":"Fix run_shell_command() precisely in run_interactive_shell_command()\nwhen running it with a str as the command argument, and shell=True.\nFixes #5565\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":0,"createdAt":"2018-06-26T07:02:04Z","updatedAt":"2018-06-26T13:54:59Z","closedAt":null,"state":"open","user":{"login":"refeed","avatarUrl":"https://avatars1.githubusercontent.com/u/20320125?v=4"},"owner":{"login":"refeed","avatarUrl":"https://avatars1.githubusercontent.com/u/20320125?v=4"},"assignee":{"login":"refeed","avatarUrl":"https://avatars1.githubusercontent.com/u/20320125?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"process/wip","color":"fbca04"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5568","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5ODE0NTg2OQ==","url":"https://github.com/coala/coala/pull/5568#discussion_r198145869","bodyText":"dont use cat for this -- it relies on msys cat which not everyone has installed.\necho is on all windows by default iirc, but pls make sure this is not executing msys echo which iirc acts slightly differently than windows builtin echo","diffHunk":"@@ -91,3 +92,13 @@ def test_run_shell_command_with_stdin(self):\n     def test_run_shell_command_kwargs_delegation(self):\n         with self.assertRaises(TypeError):\n             run_shell_command('super-cool-command', weird_parameter2='abc')\n+\n+    def test_run_shell_command_with_shell_True(self):\n+        run_shell_command('echo \"test\" > test_shell_True.txt', shell=True)\n+        stdout = run_shell_command('cat test_shell_True.txt')[0]","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-06-26T13:38:08Z","lastEditedAt":null,"updatedAt":"2018-06-26T13:38:08Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5ODE1MTY1Mw==","url":"https://github.com/coala/coala/pull/5568#discussion_r198151653","bodyText":"wow... not ... need to have coverage!","diffHunk":"@@ -94,14 +94,16 @@ def run_interactive_shell_command(command, **kwargs):\n     :return:        A context manager yielding the process started from the\n                     command.\n     \"\"\"\n-    if not kwargs.get('shell', False) and isinstance(command, str):\n+    if kwargs.get('shell', False):\n+        command = command\n+    elif isinstance(command, str):\n         command = shlex.split(command)\n-    else:\n-        command = list(command)\n \n-    if platform.system() == 'Windows':  # pragma: no cover\n+    if (platform.system() == 'Windows' and\n+            isinstance(command, (list, tuple))):  # pragma: no cover","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-06-26T13:53:30Z","lastEditedAt":null,"updatedAt":"2018-06-26T13:53:30Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5ODE1MjI4NQ==","url":"https://github.com/coala/coala/pull/5568#discussion_r198152285","bodyText":"(if you cant figure out tests without msys, add skip decorators for if these msys binaries do not exist on the test host).","diffHunk":"@@ -91,3 +92,13 @@ def test_run_shell_command_with_stdin(self):\n     def test_run_shell_command_kwargs_delegation(self):\n         with self.assertRaises(TypeError):\n             run_shell_command('super-cool-command', weird_parameter2='abc')\n+\n+    def test_run_shell_command_with_shell_True(self):\n+        run_shell_command('echo \"test\" > test_shell_True.txt', shell=True)\n+        stdout = run_shell_command('cat test_shell_True.txt')[0]","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-06-26T13:54:59Z","lastEditedAt":null,"updatedAt":"2018-06-26T13:54:59Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1531503038000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5575","number":5575,"title":"[WIP] Ruby.py: Add ruby definition","body":"add aliases, versions, extensions, comment_delimiter\nmultiline_comment_delimiters, string_delimiters, and encapsulators\nCloses #5572\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":4,"createdAt":"2018-06-27T20:16:30Z","updatedAt":"2018-07-13T17:30:38Z","closedAt":null,"state":"open","user":{"login":"bekicot","avatarUrl":"https://avatars0.githubusercontent.com/u/1826884?v=4"},"owner":{"login":"bekicot","avatarUrl":"https://avatars0.githubusercontent.com/u/1826884?v=4"},"assignee":{"login":"bekicot","avatarUrl":"https://avatars0.githubusercontent.com/u/1826884?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"},{"name":"importance/low","color":"70E870"},{"name":"process/wip","color":"fbca04"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5575","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5ODcyODcwMA==","url":"https://github.com/coala/coala/pull/5575#discussion_r198728700","bodyText":"Why is this blank line here?","diffHunk":"@@ -3,4 +3,10 @@\n \n @Language\n class Ruby:\n-    pass\n+    aliases = 'rb',\n+","author":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4","name":"Pareksha Manchanda"},"reactions":[],"createdAt":"2018-06-28T07:14:21Z","lastEditedAt":null,"updatedAt":"2018-06-28T07:14:21Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5ODczNTYwNw==","url":"https://github.com/coala/coala/pull/5575#discussion_r198735607","bodyText":"I use the python as a template.  i also saw it in cpp, and I though it was for readability. So i kept it.\nIs it bad?","diffHunk":"@@ -3,4 +3,10 @@\n \n @Language\n class Ruby:\n-    pass\n+    aliases = 'rb',\n+","author":{"login":"bekicot","avatarUrl":"https://avatars0.githubusercontent.com/u/1826884?v=4","name":"Yana Agun Siswanto"},"reactions":[],"createdAt":"2018-06-28T07:42:31Z","lastEditedAt":null,"updatedAt":"2018-06-28T07:42:31Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5ODc2MDM3Mg==","url":"https://github.com/coala/coala/pull/5575#discussion_r198760372","bodyText":"I think you can remove this (as I saw in other templates).","diffHunk":"@@ -3,4 +3,10 @@\n \n @Language\n class Ruby:\n-    pass\n+    aliases = 'rb',\n+","author":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4","name":"Pareksha Manchanda"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNjM4MzExMA==","createdAt":"2018-07-12T17:41:07Z","content":"THUMBS_UP","user":{"login":"jayvdb","name":"John Vandenberg"}}],"createdAt":"2018-06-28T08:53:30Z","lastEditedAt":null,"updatedAt":"2018-06-28T08:53:30Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMjEyMDU4OQ==","url":"https://github.com/coala/coala/pull/5575#discussion_r202120589","bodyText":"I dont know why it is in the Python one.\nIMO it isnt very useful.","diffHunk":"@@ -3,4 +3,10 @@\n \n @Language\n class Ruby:\n-    pass\n+    aliases = 'rb',\n+","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-07-12T17:41:41Z","lastEditedAt":null,"updatedAt":"2018-07-12T17:41:41Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMjM4Mjk0MQ==","url":"https://github.com/coala/coala/pull/5575#discussion_r202382941","bodyText":"Needs to be comment_delimiters now and be a tuple , like aliases","diffHunk":"@@ -3,4 +3,9 @@\n \n @Language\n class Ruby:\n-    pass\n+    aliases = 'rb',\n+    extensions = '.rb',\n+    comment_delimiter = '#'","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-07-13T15:14:00Z","lastEditedAt":null,"updatedAt":"2018-07-13T15:14:00Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMjM4ODUyMA==","url":"https://github.com/coala/coala/pull/5575#discussion_r202388520","bodyText":"%( ) is not correct here.\nAs mentioned on #5572 , Ruby was selected because it uses balanced string literals.\ni.e. in %( ... ( .... ) ...) , the first ) is not the end of the string.\nWe dont have a property for balanced delimiters yet, and we need the Ruby language file to exist in order to add that feature to our Ruby lang file, along with others.","diffHunk":"@@ -3,4 +3,9 @@\n \n @Language\n class Ruby:\n-    pass\n+    aliases = 'rb',\n+    extensions = '.rb',\n+    comment_delimiter = '#'\n+    multiline_comment_delimiters = {'=begin': '=end'}\n+    string_delimiters = {'\"': '\"', \"'\": \"'\", '%q(': ')', '%Q(': ')', '%(': ')'}","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-07-13T15:31:36Z","lastEditedAt":null,"updatedAt":"2018-07-13T15:31:36Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMjM4ODk0Mg==","url":"https://github.com/coala/coala/pull/5575#discussion_r202388942","bodyText":"adding only %w(... is misleading.  There is also %w[... etc.  Either we list them all, or we need another way to express these.","diffHunk":"@@ -3,4 +3,9 @@\n \n @Language\n class Ruby:\n-    pass\n+    aliases = 'rb',\n+    extensions = '.rb',\n+    comment_delimiter = '#'\n+    multiline_comment_delimiters = {'=begin': '=end'}\n+    string_delimiters = {'\"': '\"', \"'\": \"'\", '%q(': ')', '%Q(': ')', '%(': ')'}\n+    encapsulators = {'[': ']', '{': '}', '%w(': ')', '%W(': ')'}","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-07-13T15:32:57Z","lastEditedAt":null,"updatedAt":"2018-07-13T15:32:57Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMjQyMTU1MQ==","url":"https://github.com/coala/coala/pull/5575#discussion_r202421551","bodyText":"Still not understand it. Is removin the %() string delimiters from it, will solve?","diffHunk":"@@ -3,4 +3,9 @@\n \n @Language\n class Ruby:\n-    pass\n+    aliases = 'rb',\n+    extensions = '.rb',\n+    comment_delimiter = '#'\n+    multiline_comment_delimiters = {'=begin': '=end'}\n+    string_delimiters = {'\"': '\"', \"'\": \"'\", '%q(': ')', '%Q(': ')', '%(': ')'}","author":{"login":"bekicot","avatarUrl":"https://avatars0.githubusercontent.com/u/1826884?v=4","name":"Yana Agun Siswanto"},"reactions":[],"createdAt":"2018-07-13T17:30:37Z","lastEditedAt":null,"updatedAt":"2018-07-13T17:30:37Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQwMDkzNjk3OQ==","url":"https://github.com/coala/coala/pull/5575#issuecomment-400936979","bodyText":"https://commandercoriander.net/blog/2014/11/09/a-multiline-string-cheatsheet-for-ruby/ might help you adding multiline_comment_delimiters","diffHunk":null,"author":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4","name":"Pareksha Manchanda"},"reactions":[],"createdAt":"2018-06-28T07:18:35Z","lastEditedAt":null,"updatedAt":"2018-06-28T07:18:35Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQwMDkzNzQyNg==","url":"https://github.com/coala/coala/pull/5575#issuecomment-400937426","bodyText":"You can add versions as well","diffHunk":null,"author":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4","name":"Pareksha Manchanda"},"reactions":[],"createdAt":"2018-06-28T07:20:35Z","lastEditedAt":null,"updatedAt":"2018-06-28T07:20:35Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQwMDk0MjY5Ng==","url":"https://github.com/coala/coala/pull/5575#issuecomment-400942696","bodyText":"@pareksha  The link is not about multiline comment, it is about multiline string. The first solution is considered hacky, and the other solutions are already added to string_delimiters","diffHunk":null,"author":{"login":"bekicot","avatarUrl":"https://avatars0.githubusercontent.com/u/1826884?v=4","name":"Yana Agun Siswanto"},"reactions":[],"createdAt":"2018-06-28T07:41:12Z","lastEditedAt":"2018-06-28T07:42:53Z","updatedAt":"2018-06-28T07:42:53Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQwMDk2MzI2Ng==","url":"https://github.com/coala/coala/pull/5575#issuecomment-400963266","bodyText":"@bekicot sorry i wrote multiline_comment_delimiters by mistake (my bad). I meant multiline_string_delimiters. See the other language definitions. They have this one (plus ofcourse string_delimiters no matter if they are repeated). And yes, I am talking about the last ones only.","diffHunk":null,"author":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4","name":"Pareksha Manchanda"},"reactions":[],"createdAt":"2018-06-28T08:55:47Z","lastEditedAt":"2018-06-28T08:56:10Z","updatedAt":"2018-06-28T08:56:10Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1530251756000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5576","number":5576,"title":"Tcl: Create basic language file for tcl","body":"This creates a basic language file for tcl in\ncoala language definitions.\nCloses #5570\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":7,"createdAt":"2018-06-28T07:11:57Z","updatedAt":"2018-06-29T05:55:56Z","closedAt":"2018-06-29T05:55:56Z","state":"merged","user":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4"},"owner":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4"},"assignee":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5576","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5ODc4OTc1Mw==","url":"https://github.com/coala/coala/pull/5576#discussion_r198789753","bodyText":"as with m4, I dont feel we're in a good position to define language versions at this stage.\nIn this case, Tcl the program and Tcl the language were quite closely tied together, but we dont know which program releases included language syntax changes.","diffHunk":"@@ -0,0 +1,12 @@\n+from coalib.bearlib.languages.Language import Language\n+\n+\n+@Language\n+class Tcl:\n+    aliases = 'Tcl/Tk',\n+    versions = 8.0, 8.1, 8.2, 8.3, 8.4, 8.5, 8.6","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-06-28T10:15:50Z","lastEditedAt":null,"updatedAt":"2018-06-28T10:15:50Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5ODc5MTcyMQ==","url":"https://github.com/coala/coala/pull/5576#discussion_r198791721","bodyText":"what is the meaning of [[ ... ]] ?","diffHunk":"@@ -0,0 +1,12 @@\n+from coalib.bearlib.languages.Language import Language\n+\n+\n+@Language\n+class Tcl:\n+    aliases = 'Tcl/Tk',\n+    versions = 8.0, 8.1, 8.2, 8.3, 8.4, 8.5, 8.6\n+    extensions = '.tcl',\n+    comment_delimiter = '#'\n+    string_delimiters = {'\"': '\"'}\n+    multiline_string_delimiters = {'\"': '\"'}\n+    encapsulators = {'(': ')', '[': ']', '{': '}', '[[': ']]'}","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-06-28T10:23:33Z","lastEditedAt":null,"updatedAt":"2018-06-28T10:23:33Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5ODc5NTI3NQ==","url":"https://github.com/coala/coala/pull/5576#discussion_r198795275","bodyText":"not quite..\n'#' only works at the beginning of a command, which is conceptually incompatible with the other usages ofcomment_delimiter` which assume a comment delimiter has a high precedence.\nTypically this means in Tcl, ; # is needed to be a comment occurring in the middle of a line.\nThis difference is quite small, and quite achievable to support, but is getting further from your project scope of quotes, so I think discard this from the MR, and please create an issue about supporting Tcl comments.","diffHunk":"@@ -0,0 +1,12 @@\n+from coalib.bearlib.languages.Language import Language\n+\n+\n+@Language\n+class Tcl:\n+    aliases = 'Tcl/Tk',\n+    versions = 8.0, 8.1, 8.2, 8.3, 8.4, 8.5, 8.6\n+    extensions = '.tcl',\n+    comment_delimiter = '#'","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNTc3OTkwNA==","createdAt":"2018-06-29T04:40:39Z","content":"THUMBS_UP","user":{"login":"pareksha","name":"Pareksha Manchanda"}}],"createdAt":"2018-06-28T10:37:37Z","lastEditedAt":null,"updatedAt":"2018-06-28T10:37:37Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5OTA1MTcwOA==","url":"https://github.com/coala/coala/pull/5576#discussion_r199051708","bodyText":"oops, mistakenly took nested ones as encapsulators, will remove this.","diffHunk":"@@ -0,0 +1,12 @@\n+from coalib.bearlib.languages.Language import Language\n+\n+\n+@Language\n+class Tcl:\n+    aliases = 'Tcl/Tk',\n+    versions = 8.0, 8.1, 8.2, 8.3, 8.4, 8.5, 8.6\n+    extensions = '.tcl',\n+    comment_delimiter = '#'\n+    string_delimiters = {'\"': '\"'}\n+    multiline_string_delimiters = {'\"': '\"'}\n+    encapsulators = {'(': ')', '[': ']', '{': '}', '[[': ']]'}","author":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4","name":"Pareksha Manchanda"},"reactions":[],"createdAt":"2018-06-29T04:41:43Z","lastEditedAt":null,"updatedAt":"2018-06-29T04:41:43Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5OTA1MjE0Mg==","url":"https://github.com/coala/coala/pull/5576#discussion_r199052142","bodyText":"Right, I better remove versions","diffHunk":"@@ -0,0 +1,12 @@\n+from coalib.bearlib.languages.Language import Language\n+\n+\n+@Language\n+class Tcl:\n+    aliases = 'Tcl/Tk',\n+    versions = 8.0, 8.1, 8.2, 8.3, 8.4, 8.5, 8.6","author":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4","name":"Pareksha Manchanda"},"reactions":[],"createdAt":"2018-06-29T04:45:30Z","lastEditedAt":null,"updatedAt":"2018-06-29T04:45:30Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5OTA1Mjg0MA==","url":"https://github.com/coala/coala/pull/5576#discussion_r199052840","bodyText":"I have created an issue regarding this here #5580.\nFor now, I have removed comment_delimiter from this PR.","diffHunk":"@@ -0,0 +1,12 @@\n+from coalib.bearlib.languages.Language import Language\n+\n+\n+@Language\n+class Tcl:\n+    aliases = 'Tcl/Tk',\n+    versions = 8.0, 8.1, 8.2, 8.3, 8.4, 8.5, 8.6\n+    extensions = '.tcl',\n+    comment_delimiter = '#'","author":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4","name":"Pareksha Manchanda"},"reactions":[],"createdAt":"2018-06-29T04:52:47Z","lastEditedAt":null,"updatedAt":"2018-06-29T04:52:47Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1530253713000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5577","number":5577,"title":"m4: Create language file for m4","body":"This creates a basic language file for m4 in\ncoala language definitions.\nCloses #5569\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":7,"createdAt":"2018-06-28T07:33:00Z","updatedAt":"2018-06-29T06:28:33Z","closedAt":"2018-06-29T06:28:33Z","state":"merged","user":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4"},"owner":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4"},"assignee":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4"},"labels":[{"name":"difficulty/medium","color":"0052cc"},{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5577","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5ODc4MTI0Mg==","url":"https://github.com/coala/coala/pull/5577#discussion_r198781242","bodyText":"1.4 is a version of one program called \"GNU m4\", and isnt a version of the language.\nSome of the history of the language can be found on Wikipedia and https://www.gnu.org/savannah-checkouts/gnu/m4/manual/m4-1.4.18/html_node/Compatibility.html\nDue to incompatibilities mentioned in the above, we could say there is one version of the language called \"GNU m4 1.4\", and a different one being \"System V m4\", etc.\nHowever unless/until we know about some clear differences for these variations, and notice that users are supplying .m4 files with those differences, I think it is best to avoid defining versions.","diffHunk":"@@ -0,0 +1,11 @@\n+from coalib.bearlib.languages.Language import Language\n+\n+\n+@Language\n+class m4:\n+    versions = 1.4,","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNTc4MDIzNQ==","createdAt":"2018-06-29T04:58:09Z","content":"THUMBS_UP","user":{"login":"pareksha","name":"Pareksha Manchanda"}}],"createdAt":"2018-06-28T09:47:06Z","lastEditedAt":null,"updatedAt":"2018-06-28T09:47:06Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5ODc4MzAzNg==","url":"https://github.com/coala/coala/pull/5577#discussion_r198783036","bodyText":"this one is quite tricky.\n# is the comment character, but the commented text is emitted to the output, which is very different from being ignored like comments in other languages.\nAlso dnl is a macro which implements 'ignore rest of line' and do not include in output, so it is effectively the comment sequence which acts most like comments in other languages.\nBut lets not include dnl here, as use of dnl is invoking m4 macros, so it isnt strictly a native comment that is part of the language itself.\n(and then there is changecom, which changes the comment character at runtime, which is not something coalib can support at the moment.)","diffHunk":"@@ -0,0 +1,11 @@\n+from coalib.bearlib.languages.Language import Language\n+\n+\n+@Language\n+class m4:\n+    versions = 1.4,\n+    extensions = '.m4',\n+    comment_delimiter = '#'","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-06-28T09:51:52Z","lastEditedAt":null,"updatedAt":"2018-06-28T09:51:52Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5ODc4NDU3Nw==","url":"https://github.com/coala/coala/pull/5577#discussion_r198784577","bodyText":"nope.  See https://www.gnu.org/savannah-checkouts/gnu/m4/manual/m4-1.4.18/html_node/Comments.html\nchangecom can be used to set /*...*/ as a multiline comment, but that isnt the default of the m4 language.","diffHunk":"@@ -0,0 +1,11 @@\n+from coalib.bearlib.languages.Language import Language\n+\n+\n+@Language\n+class m4:\n+    versions = 1.4,\n+    extensions = '.m4',\n+    comment_delimiter = '#'\n+    multiline_comment_delimiters = {'/*': '*/'}","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-06-28T09:56:42Z","lastEditedAt":null,"updatedAt":"2018-06-28T09:56:42Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5ODc4NjU5OQ==","url":"https://github.com/coala/coala/pull/5577#discussion_r198786599","bodyText":"only \"backtick,single-quote\" are default start/end, and they are nested.\nSo that cant be stored in this property until we have a solution for #5573\nhttps://www.gnu.org/savannah-checkouts/gnu/m4/manual/m4-1.4.18/html_node/Quoted-strings.html","diffHunk":"@@ -0,0 +1,11 @@\n+from coalib.bearlib.languages.Language import Language\n+\n+\n+@Language\n+class m4:\n+    versions = 1.4,\n+    extensions = '.m4',\n+    comment_delimiter = '#'\n+    multiline_comment_delimiters = {'/*': '*/'}\n+    string_delimiters = {'`': \"'\", '\"': '\"'}","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-06-28T10:03:45Z","lastEditedAt":null,"updatedAt":"2018-06-28T10:03:45Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5ODc4NzQ1NA==","url":"https://github.com/coala/coala/pull/5577#discussion_r198787454","bodyText":"what are {': '} ?  I dont recall them having a meaning in m4 language","diffHunk":"@@ -0,0 +1,11 @@\n+from coalib.bearlib.languages.Language import Language\n+\n+\n+@Language\n+class m4:\n+    versions = 1.4,\n+    extensions = '.m4',\n+    comment_delimiter = '#'\n+    multiline_comment_delimiters = {'/*': '*/'}\n+    string_delimiters = {'`': \"'\", '\"': '\"'}\n+    encapsulators = {'(': ')', '{': '}', '[': ']'}","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-06-28T10:06:34Z","lastEditedAt":null,"updatedAt":"2018-06-28T10:06:34Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5OTA1Mzc2MQ==","url":"https://github.com/coala/coala/pull/5577#discussion_r199053761","bodyText":"Oh I see, seems like string_delimiters too needs to be removed atm.","diffHunk":"@@ -0,0 +1,11 @@\n+from coalib.bearlib.languages.Language import Language\n+\n+\n+@Language\n+class m4:\n+    versions = 1.4,\n+    extensions = '.m4',\n+    comment_delimiter = '#'\n+    multiline_comment_delimiters = {'/*': '*/'}\n+    string_delimiters = {'`': \"'\", '\"': '\"'}","author":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4","name":"Pareksha Manchanda"},"reactions":[],"createdAt":"2018-06-29T05:03:33Z","lastEditedAt":null,"updatedAt":"2018-06-29T05:03:33Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1531136347000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5581","number":5581,"title":"VisualBasic: Create language file for Visual Basic","body":"This creates a basic language file for visual basic in\ncoala language definitions.\nCloses #5578\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":9,"createdAt":"2018-06-29T05:26:12Z","updatedAt":"2018-07-09T11:39:07Z","closedAt":"2018-07-09T11:39:07Z","state":"merged","user":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4"},"owner":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4"},"assignee":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4"},"labels":[{"name":"area/languages","color":"d4c5f9"},{"name":"difficulty/low","color":"207de5"},{"name":"importance/low","color":"70E870"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5581","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5OTA2MDAxMg==","url":"https://github.com/coala/coala/pull/5581#discussion_r199060012","bodyText":"Use VisualBasic","diffHunk":"@@ -0,0 +1,12 @@\n+from coalib.bearlib.languages.Language import Language\n+\n+\n+@Language\n+class VB:","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-06-29T06:01:44Z","lastEditedAt":null,"updatedAt":"2018-06-29T06:01:44Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5OTA2MDYwMw==","url":"https://github.com/coala/coala/pull/5581#discussion_r199060603","bodyText":"Eh? Wrong.","diffHunk":"@@ -0,0 +1,12 @@\n+from coalib.bearlib.languages.Language import Language\n+\n+\n+@Language\n+class VB:\n+    aliases = 'vb',\n+    extensions = '.vb',","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-06-29T06:05:41Z","lastEditedAt":null,"updatedAt":"2018-06-29T06:05:41Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5OTM0NDc3MA==","url":"https://github.com/coala/coala/pull/5581#discussion_r199344770","bodyText":"escape_quotes is not a property for language files yet, and very likely is not designed correctly.\nI already rejected other patches previously because you included unaccepted properties to language files.","diffHunk":"@@ -0,0 +1,12 @@\n+from coalib.bearlib.languages.Language import Language\n+\n+\n+@Language\n+class VB:\n+    aliases = 'vb',\n+    extensions = '.vb',\n+    comment_delimiter = \"'\"\n+    string_delimiters = {'\"': '\"'}\n+    multiline_string_delimiters = {'\"': '\"'}\n+    encapsulators = {'(': ')', '{': '}'}\n+    escape_quotes = '\"\"',","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-07-01T10:34:23Z","lastEditedAt":null,"updatedAt":"2018-07-01T10:34:23Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5OTM0ODU3NA==","url":"https://github.com/coala/coala/pull/5581#discussion_r199348574","bodyText":"Oops sorry, I copy pasted it, didn't realize this came with it. We probably can design it better. I'll remove this for now.","diffHunk":"@@ -0,0 +1,12 @@\n+from coalib.bearlib.languages.Language import Language\n+\n+\n+@Language\n+class VB:\n+    aliases = 'vb',\n+    extensions = '.vb',\n+    comment_delimiter = \"'\"\n+    string_delimiters = {'\"': '\"'}\n+    multiline_string_delimiters = {'\"': '\"'}\n+    encapsulators = {'(': ')', '{': '}'}\n+    escape_quotes = '\"\"',","author":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4","name":"Pareksha Manchanda"},"reactions":[],"createdAt":"2018-07-01T12:53:43Z","lastEditedAt":null,"updatedAt":"2018-07-01T12:53:43Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5OTQwNjAzMg==","url":"https://github.com/coala/coala/pull/5581#discussion_r199406032","bodyText":"REM is another one.\nhttps://docs.microsoft.com/en-us/dotnet/visual-basic/programming-guide/program-structure/comments-in-code\nWe need to enhance coalib to allow multiple delimiters.  Create an issue please","diffHunk":"@@ -0,0 +1,11 @@\n+from coalib.bearlib.languages.Language import Language\n+\n+\n+@Language\n+class VisualBasic:\n+    aliases = 'vb',\n+    extensions = '.vb', '.bas'\n+    comment_delimiter = \"'\"","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNTk4NDYzOA==","createdAt":"2018-07-04T09:25:07Z","content":"THUMBS_UP","user":{"login":"pareksha","name":"Pareksha Manchanda"}}],"createdAt":"2018-07-02T07:32:30Z","lastEditedAt":null,"updatedAt":"2018-07-02T07:32:30Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5OTQxMjU3NQ==","url":"https://github.com/coala/coala/pull/5581#discussion_r199412575","bodyText":"Add a comment above this that multiline strings are only possible from Visual Basic 14.0 and above.\nand then multiline_string_delimiters = string_delimiters\n(and .. not worth even thinking about now , but .. omg .. #5587 )","diffHunk":"@@ -0,0 +1,11 @@\n+from coalib.bearlib.languages.Language import Language\n+\n+\n+@Language\n+class VisualBasic:\n+    aliases = 'vb',\n+    extensions = '.vb', '.bas'\n+    comment_delimiter = \"'\"\n+    string_delimiters = {'\"': '\"'}\n+    multiline_string_delimiters = {'\"': '\"'}","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-07-02T08:01:04Z","lastEditedAt":null,"updatedAt":"2018-07-02T08:01:04Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMDY4OTU2MQ==","url":"https://github.com/coala/coala/pull/5581#discussion_r200689561","bodyText":"Enhancement done with #5595","diffHunk":"@@ -0,0 +1,11 @@\n+from coalib.bearlib.languages.Language import Language\n+\n+\n+@Language\n+class VisualBasic:\n+    aliases = 'vb',\n+    extensions = '.vb', '.bas'\n+    comment_delimiter = \"'\"","author":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4","name":"Pareksha Manchanda"},"reactions":[],"createdAt":"2018-07-06T15:30:42Z","lastEditedAt":null,"updatedAt":"2018-07-06T15:30:42Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQwMTUzNDgzNg==","url":"https://github.com/coala/coala/pull/5581#issuecomment-401534836","bodyText":"@kriti21 this is a basic language file. Amendments for that can be made later on. Moreover, this file is not of any use as for now. Creating this language file was necessary for me to see the possibilities of defining tastes for the Quotation aspect.","diffHunk":null,"author":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4","name":"Pareksha Manchanda"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNTg0Mzg1MA==","createdAt":"2018-07-01T05:58:05Z","content":"THUMBS_UP","user":{"login":"kriti21","name":"Kriti Rohilla"}},{"id":"MDg6UmVhY3Rpb24yNTg2NzQyNA==","createdAt":"2018-07-02T08:54:49Z","content":"THUMBS_UP","user":{"login":"jayvdb","name":"John Vandenberg"}}],"createdAt":"2018-06-30T11:22:14Z","lastEditedAt":null,"updatedAt":"2018-06-30T11:22:14Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1531866411000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5583","number":5583,"title":"requirements.txt: Remove testfixtures","body":"testfixtures is moved to test-requirement.txt\nso that coala does not depend on specific versions\nof testing libraries which may conflict with versions\ncoala users need installed for their own project.\nFixes #5335\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":7,"createdAt":"2018-07-01T18:27:07Z","updatedAt":"2018-07-17T22:26:51Z","closedAt":"2018-07-16T12:54:09Z","state":"merged","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"},{"name":"importance/critical","color":"e11d21"},{"name":"process/approved","color":"009800"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5583","comments":[]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1535714203000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5585","number":5585,"title":"core/__init__.py: Add module docstrings","body":"Closes #5537\ncc @jayvdb @Makman2\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":11,"createdAt":"2018-07-01T21:40:05Z","updatedAt":"2018-08-31T11:16:43Z","closedAt":"2018-08-31T09:34:03Z","state":"merged","user":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4"},"owner":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4"},"assignee":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4"},"labels":[{"name":"area/core","color":"eb6420"},{"name":"area/documentation","color":"bfe5bf"},{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5585","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMzk1MTY5OA==","url":"https://github.com/coala/coala/pull/5585#discussion_r203951698","bodyText":"Run pydocstyle on this.  I believe it will complain about the Provides and lack of trailing . .","diffHunk":"@@ -0,0 +1,16 @@\n+\"\"\"\n+Provides an API for coala's NextGen-Core","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-07-20T06:49:06Z","lastEditedAt":null,"updatedAt":"2018-07-20T06:49:06Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMzk1MjM0MQ==","url":"https://github.com/coala/coala/pull/5585#discussion_r203952341","bodyText":"As a module docstring doesnt need to be a listing of components, these should be ordered to help the reader understand the module.\nAnd more prose used to help the reader understand what it is.\nI feel Core should be first, or the description of Core should mention it is about execution of bears.\nis Core about tasks or bears?\nIf bears are just a type of task, and other tasks could also be performed using Core, then the concept of a task should be mentioned in prose before mentioning any bears.","diffHunk":"@@ -0,0 +1,16 @@\n+\"\"\"\n+Provides an API for coala's NextGen-Core\n+\n+- ``Bear``: Base class for all the NextGen Bears.\n+- ``Core``: Maintains sessions for coala's execution.","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-07-20T06:53:02Z","lastEditedAt":null,"updatedAt":"2018-07-20T06:53:02Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNjA3MzYxNA==","url":"https://github.com/coala/coala/pull/5585#discussion_r206073614","bodyText":"It's both, it runs tasks offloaded by bears","diffHunk":"@@ -0,0 +1,16 @@\n+\"\"\"\n+Provides an API for coala's NextGen-Core\n+\n+- ``Bear``: Base class for all the NextGen Bears.\n+- ``Core``: Maintains sessions for coala's execution.","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzQ0ODUyOQ==","createdAt":"2018-08-04T08:06:22Z","content":"THUMBS_UP","user":{"login":"jayvdb","name":"John Vandenberg"}}],"createdAt":"2018-07-30T09:48:26Z","lastEditedAt":null,"updatedAt":"2018-07-30T09:48:26Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMTA0MjMxOA==","url":"https://github.com/coala/coala/pull/5585#discussion_r211042318","bodyText":"Please put DependencyBear on new line","diffHunk":"@@ -0,0 +1,21 @@\n+\"\"\"\n+The core package provides an API for coala's NextGen-Core.\n+\n+The ``Core`` module is responsible for maintaining sessions for coala's\n+execution and also running the tasks offloaded by the bears. The ``Bear``\n+module provides a base class for all the NextGen Bears.\n+\n+``FileBear`` provides a Bear base class to parallelize tasks for each file.\n+``ProjectBear`` on the other hand provides a base class for bears that run on\n+the whole codebase. ``DependencyBear`` is a Bear base class that parallelizes","author":{"login":"shreyans800755","avatarUrl":"https://avatars2.githubusercontent.com/u/3727351?v=4","name":"Shreyans"},"reactions":[],"createdAt":"2018-08-17T21:59:21Z","lastEditedAt":null,"updatedAt":"2018-08-17T21:59:21Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMTA0MjUyNQ==","url":"https://github.com/coala/coala/pull/5585#discussion_r211042525","bodyText":"It can then be used for caching results.","diffHunk":"@@ -0,0 +1,21 @@\n+\"\"\"\n+The core package provides an API for coala's NextGen-Core.\n+\n+The ``Core`` module is responsible for maintaining sessions for coala's\n+execution and also running the tasks offloaded by the bears. The ``Bear``\n+module provides a base class for all the NextGen Bears.\n+\n+``FileBear`` provides a Bear base class to parallelize tasks for each file.\n+``ProjectBear`` on the other hand provides a base class for bears that run on\n+the whole codebase. ``DependencyBear`` is a Bear base class that parallelizes\n+tasks for dependency results.\n+\n+The ``DependencyTracker`` module registers and\n+manages dependencies between objects. The circular dependency errors are\n+handled by ``CircularDependencyError``. The ``Graphs`` detects cyclicity\n+in dependency graphs and raises ``CircularDependencyError`` if found.\n+\n+``PersistentHash`` module generates a unique hash for every task object\n+first by pickling them and then using the pickled object to generate a sha1\n+hash. These persistent hashes can then be used for caching results.","author":{"login":"shreyans800755","avatarUrl":"https://avatars2.githubusercontent.com/u/3727351?v=4","name":"Shreyans"},"reactions":[],"createdAt":"2018-08-17T22:00:39Z","lastEditedAt":null,"updatedAt":"2018-08-17T22:00:39Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMzk4MzY2NQ==","url":"https://github.com/coala/coala/pull/5585#issuecomment-413983665","bodyText":"@jayvdb updated.\nNot sure why appveyor is failing though. I also don't see a rebuild button on appveyor is there no way to re run appveyor jobs except for a force push?","diffHunk":null,"author":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4","name":"Palash Nigam"},"reactions":[],"createdAt":"2018-08-17T20:46:13Z","lastEditedAt":"2018-08-17T20:47:09Z","updatedAt":"2018-08-17T20:47:09Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMzk5OTEwOQ==","url":"https://github.com/coala/coala/pull/5585#issuecomment-413999109","bodyText":"Not sure why appveyor is failing though. I also don't see a rebuild button on appveyor is there no way to re run appveyor jobs except for a force push?\n\nOnly admins have access to rebuild button. Go for force push.","diffHunk":null,"author":{"login":"shreyans800755","avatarUrl":"https://avatars2.githubusercontent.com/u/3727351?v=4","name":"Shreyans"},"reactions":[{"id":"MDg6UmVhY3Rpb24yODEwODQxMw==","createdAt":"2018-08-18T06:53:16Z","content":"THUMBS_UP","user":{"login":"palash25","name":"Palash Nigam"}}],"createdAt":"2018-08-17T22:02:08Z","lastEditedAt":null,"updatedAt":"2018-08-17T22:02:08Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxNDAxMjMxMA==","url":"https://github.com/coala/coala/pull/5585#issuecomment-414012310","bodyText":"Any time you see timeout is the log , assume it is our intermittent timeout problem, which is complicated by #5674 .  On AppVeyor, force push is all you can do until we get corobo back online and implement job restart commands in corobo.  But dont feel like you have to keep force pushing to get it green - if travis or circle pass, a note that appveyor timeouted is enough for us to keep the PR in the review queue even if appveyor is red.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yODEwODM5Mw==","createdAt":"2018-08-18T06:50:03Z","content":"THUMBS_UP","user":{"login":"palash25","name":"Palash Nigam"}}],"createdAt":"2018-08-17T23:31:56Z","lastEditedAt":null,"updatedAt":"2018-08-17T23:31:56Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxNDAzOTEwOQ==","url":"https://github.com/coala/coala/pull/5585#issuecomment-414039109","bodyText":"Updated @shreyans800755 @jayvdb","diffHunk":null,"author":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4","name":"Palash Nigam"},"reactions":[],"createdAt":"2018-08-18T07:38:44Z","lastEditedAt":null,"updatedAt":"2018-08-18T07:38:44Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1530519420000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5586","number":5586,"title":"PowerShell: Create language file for PowerShell","body":"This creates a basic language file for PowerShell in\ncoala language definitions.\nCloses #5582\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":4,"createdAt":"2018-07-02T04:35:51Z","updatedAt":"2018-07-02T08:17:00Z","closedAt":"2018-07-02T08:17:00Z","state":"merged","user":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4"},"owner":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4"},"assignee":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4"},"labels":[{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5586","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5OTM5MDE0Ng==","url":"https://github.com/coala/coala/pull/5586#discussion_r199390146","bodyText":"can you show me some info about these being multiline ?","diffHunk":"@@ -0,0 +1,11 @@\n+from coalib.bearlib.languages.Language import Language\n+\n+\n+@Language\n+class PowerShell:\n+    extensions = '.ps1',\n+    comment_delimiter = '#'\n+    multiline_comment_delimiters = {'<#': '#>'}\n+    string_delimiters = {'\"': '\"', \"'\": \"'\"}\n+    multiline_string_delimiters = {'\"': '\"', \"'\": \"'\"}","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-07-02T05:53:23Z","lastEditedAt":null,"updatedAt":"2018-07-02T05:53:23Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5OTM5NjI3NA==","url":"https://github.com/coala/coala/pull/5586#discussion_r199396274","bodyText":"Sure, I found some info at https://www.sconstantinou.com/powershell-quotes/","diffHunk":"@@ -0,0 +1,11 @@\n+from coalib.bearlib.languages.Language import Language\n+\n+\n+@Language\n+class PowerShell:\n+    extensions = '.ps1',\n+    comment_delimiter = '#'\n+    multiline_comment_delimiters = {'<#': '#>'}\n+    string_delimiters = {'\"': '\"', \"'\": \"'\"}\n+    multiline_string_delimiters = {'\"': '\"', \"'\": \"'\"}","author":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4","name":"Pareksha Manchanda"},"createdAt":"2018-07-02T06:40:49Z","lastEditedAt":null,"updatedAt":"2018-07-02T06:40:49Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5OTQwMDAyNg==","url":"https://github.com/coala/coala/pull/5586#discussion_r199400026","bodyText":"Great.\nThen you can do multiline_string_delimiters = string_delimiters to make it more clear they are identical.","diffHunk":"@@ -0,0 +1,11 @@\n+from coalib.bearlib.languages.Language import Language\n+\n+\n+@Language\n+class PowerShell:\n+    extensions = '.ps1',\n+    comment_delimiter = '#'\n+    multiline_comment_delimiters = {'<#': '#>'}\n+    string_delimiters = {'\"': '\"', \"'\": \"'\"}\n+    multiline_string_delimiters = {'\"': '\"', \"'\": \"'\"}","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-07-02T07:01:05Z","lastEditedAt":null,"updatedAt":"2018-07-02T07:01:05Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1530656469000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5588","number":5588,"title":"Newcomers_Guide.rst: Add GitLab newcomers group","body":"This add mention of GitLab newcomers group.\nCloses #5546\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":4,"createdAt":"2018-07-02T13:48:19Z","updatedAt":"2018-07-03T22:21:09Z","closedAt":"2018-07-02T18:17:13Z","state":"merged","user":{"login":"Simda93","avatarUrl":"https://avatars2.githubusercontent.com/u/6503066?v=4"},"owner":{"login":"Simda93","avatarUrl":"https://avatars2.githubusercontent.com/u/6503066?v=4"},"assignee":{"login":"Simda93","avatarUrl":"https://avatars2.githubusercontent.com/u/6503066?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"importance/medium","color":"fbca04"},{"name":"process/approved","color":"009800"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5588","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5OTUxOTc3OA==","url":"https://github.com/coala/coala/pull/5588#discussion_r199519778","bodyText":"I think they need to request to join.","diffHunk":"@@ -34,6 +34,8 @@ Once you've completed all five tasks, please fill our\n `promotion request form <https://docs.google.com/forms/d/e/1FAIpQLSevrkrJga23GySFUdngrTEo0CdjXcqjHBHqX2z_JF2Z61YNmw/viewform?usp=sf_link>`_\n to get promoted to the role of developer. GitLab contributions also\n count to the promotion of a newcomer to developer.\n+In order to work on GitLab issues, you should join","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-07-02T14:40:02Z","lastEditedAt":null,"updatedAt":"2018-07-02T14:40:02Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5OTUyODI1Nw==","url":"https://github.com/coala/coala/pull/5588#discussion_r199528257","bodyText":"By requesting access to single GitLab repository, or is there some better way ?","diffHunk":"@@ -34,6 +34,8 @@ Once you've completed all five tasks, please fill our\n `promotion request form <https://docs.google.com/forms/d/e/1FAIpQLSevrkrJga23GySFUdngrTEo0CdjXcqjHBHqX2z_JF2Z61YNmw/viewform?usp=sf_link>`_\n to get promoted to the role of developer. GitLab contributions also\n count to the promotion of a newcomer to developer.\n+In order to work on GitLab issues, you should join","author":{"login":"Simda93","avatarUrl":"https://avatars2.githubusercontent.com/u/6503066?v=4","name":"David Simeunovic"},"createdAt":"2018-07-02T15:05:02Z","lastEditedAt":null,"updatedAt":"2018-07-02T15:05:02Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5OTUzMDQwOA==","url":"https://github.com/coala/coala/pull/5588#discussion_r199530408","bodyText":"I think what @jayvdb is saying is that the sentence should be like:\nIn order to work on GitLab issues, you should be a member of GitLab newcomers group. You can send a request to join this group [here](link to GitLab group)","diffHunk":"@@ -34,6 +34,8 @@ Once you've completed all five tasks, please fill our\n `promotion request form <https://docs.google.com/forms/d/e/1FAIpQLSevrkrJga23GySFUdngrTEo0CdjXcqjHBHqX2z_JF2Z61YNmw/viewform?usp=sf_link>`_\n to get promoted to the role of developer. GitLab contributions also\n count to the promotion of a newcomer to developer.\n+In order to work on GitLab issues, you should join","author":{"login":"kriti21","avatarUrl":"https://avatars3.githubusercontent.com/u/19872082?v=4","name":"Kriti Rohilla"},"createdAt":"2018-07-02T15:12:09Z","lastEditedAt":null,"updatedAt":"2018-07-02T15:12:09Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5OTU1NjI1Nw==","url":"https://github.com/coala/coala/pull/5588#discussion_r199556257","bodyText":"I'm asking, because i don't see any central \"request access\" button at https://gitlab.com/coala/roles/newcomers.\nI can see informations about group being public, and can set notifications but to request access i have to select repository(Project).\nThere is no request access for the group, like in https://docs.gitlab.com/ee/user/group/#request-access-to-a-group","diffHunk":"@@ -34,6 +34,8 @@ Once you've completed all five tasks, please fill our\n `promotion request form <https://docs.google.com/forms/d/e/1FAIpQLSevrkrJga23GySFUdngrTEo0CdjXcqjHBHqX2z_JF2Z61YNmw/viewform?usp=sf_link>`_\n to get promoted to the role of developer. GitLab contributions also\n count to the promotion of a newcomer to developer.\n+In order to work on GitLab issues, you should join","author":{"login":"Simda93","avatarUrl":"https://avatars2.githubusercontent.com/u/6503066?v=4","name":"David Simeunovic"},"createdAt":"2018-07-02T16:41:03Z","lastEditedAt":null,"updatedAt":"2018-07-02T16:41:03Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1531056450000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5590","number":5590,"title":".gitignore: Sync moban","body":"Closes #5589\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":5,"createdAt":"2018-07-03T10:36:43Z","updatedAt":"2018-07-08T13:27:30Z","closedAt":"2018-07-08T13:27:09Z","state":"merged","user":{"login":"anctartica","avatarUrl":"https://avatars0.githubusercontent.com/u/7020962?v=4"},"owner":{"login":"anctartica","avatarUrl":"https://avatars0.githubusercontent.com/u/7020962?v=4"},"labels":[{"name":"platform/windows","color":"0052cc"},{"name":"size/XS","color":"00DE0F"},{"name":"type/bug","color":"e11d21"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5590","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDQwMjE4MDYzNQ==","url":"https://github.com/coala/coala/pull/5590#issuecomment-402180635","bodyText":"There should also be appveyor.yml enhancements being pulled in.\n(especially after https://gitlab.com/coala/mobans/issues/53 and https://gitlab.com/coala/mobans/merge_requests/46 are finished)","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-07-03T14:38:52Z","lastEditedAt":null,"updatedAt":"2018-07-03T14:38:52Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1530889248000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5595","number":5595,"title":"languages: Allow more than one comment delimiter","body":"This changes comment_delimiter to comment_delimiters\nand uses tuple for it, in order to support languages having\nmultiple comment delimiters.\nCloses #5591\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":4,"createdAt":"2018-07-04T08:43:08Z","updatedAt":"2018-07-06T15:00:48Z","closedAt":"2018-07-06T15:00:48Z","state":"merged","user":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4"},"owner":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4"},"assignee":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"size/S","color":"B1CF0A"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5595","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMDM5NTk0MA==","url":"https://github.com/coala/coala/pull/5595#discussion_r200395940","bodyText":"Use your width wisely.\nPut message on next line & indent only four spaces.","diffHunk":"@@ -162,8 +163,21 @@ class SubLanguageMeta(type(cls)):\n \n                 def __getattr__(self, item):\n                     try:\n+                        if item is 'comment_delimiter':\n+                            # Providing backward compatibility for\n+                            # `comment_delimiter`\n+                            logging.warning('The property `comment_delimiter` '\n+                                            'of Language module is deprecated '","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNjA1Mjk2Nw==","createdAt":"2018-07-05T16:13:49Z","content":"THUMBS_UP","user":{"login":"pareksha","name":"Pareksha Manchanda"}}],"createdAt":"2018-07-05T15:30:09Z","lastEditedAt":null,"updatedAt":"2018-07-05T15:30:09Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1531223974000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5596","number":5596,"title":"IO.rst: Add FileFactory docs","body":"This adds a new doc IO.rst that describes the\nuse of FileFactory objects and the caching\nmechanism involved for IO operations and also\nupdates the NextGen docs.\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":6,"createdAt":"2018-07-04T20:09:05Z","updatedAt":"2018-07-10T11:59:34Z","closedAt":"2018-07-10T11:59:34Z","state":"merged","user":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4"},"owner":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4"},"labels":[{"name":"process/approved","color":"009800"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5596","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMDgzOTU2Nw==","url":"https://github.com/coala/coala/pull/5596#discussion_r200839567","bodyText":"no periods, since those aren't full sentences :)","diffHunk":"@@ -310,12 +310,23 @@ in case of code clone detection).\n Superior Caching\n ----------------\n \n-The NextGen-Core's caching mechanism is based on task objects. Bears can offload\n-tasks via `generate_tasks()` which get executed by a Python pool. Structure wise\n-the cache is a dictionary-like-object with bear types and cache-tables as key\n-value pairs. The cache-tables themselves are dictionary-like-objects that map\n-the hash values of the task objects (generated by\n-``PersistentHash.persistent_hash``) to the bear results.\n+NextGen-Core's caching can be broken up into two parts:\n+\n+- Memoization of ``FileFactory`` objects.\n+- Caching of task objects.","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-07-08T12:52:34Z","lastEditedAt":null,"updatedAt":"2018-07-08T12:52:34Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMDgzOTU4Mg==","url":"https://github.com/coala/coala/pull/5596#discussion_r200839582","bodyText":"rather\ncoala -> bears","diffHunk":"@@ -310,12 +310,23 @@ in case of code clone detection).\n Superior Caching\n ----------------\n \n-The NextGen-Core's caching mechanism is based on task objects. Bears can offload\n-tasks via `generate_tasks()` which get executed by a Python pool. Structure wise\n-the cache is a dictionary-like-object with bear types and cache-tables as key\n-value pairs. The cache-tables themselves are dictionary-like-objects that map\n-the hash values of the task objects (generated by\n-``PersistentHash.persistent_hash``) to the bear results.\n+NextGen-Core's caching can be broken up into two parts:\n+\n+- Memoization of ``FileFactory`` objects.\n+- Caching of task objects.\n+\n+Since NextGen-Core provides coala to interface with the files using the","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-07-08T12:53:15Z","lastEditedAt":null,"updatedAt":"2018-07-08T12:53:15Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMDgzOTc0Mw==","url":"https://github.com/coala/coala/pull/5596#discussion_r200839743","bodyText":"Hm the sentence doesn't read so well imo, maybe\nNextGen-Core passes bears `FileFactory` objects to interface with files. `FileFactory` uses its own caching ...","diffHunk":"@@ -310,12 +310,23 @@ in case of code clone detection).\n Superior Caching\n ----------------\n \n-The NextGen-Core's caching mechanism is based on task objects. Bears can offload\n-tasks via `generate_tasks()` which get executed by a Python pool. Structure wise\n-the cache is a dictionary-like-object with bear types and cache-tables as key\n-value pairs. The cache-tables themselves are dictionary-like-objects that map\n-the hash values of the task objects (generated by\n-``PersistentHash.persistent_hash``) to the bear results.\n+NextGen-Core's caching can be broken up into two parts:\n+\n+- Memoization of ``FileFactory`` objects.\n+- Caching of task objects.\n+\n+Since NextGen-Core provides coala to interface with the files using the","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-07-08T12:59:53Z","lastEditedAt":null,"updatedAt":"2018-07-08T12:59:53Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMDgzOTc1MQ==","url":"https://github.com/coala/coala/pull/5596#discussion_r200839751","bodyText":"a bit reordering makes it easier to read:\nso that whenever these properties are accessed the cached results are returned instead of loading the files again.","diffHunk":"@@ -310,12 +310,23 @@ in case of code clone detection).\n Superior Caching\n ----------------\n \n-The NextGen-Core's caching mechanism is based on task objects. Bears can offload\n-tasks via `generate_tasks()` which get executed by a Python pool. Structure wise\n-the cache is a dictionary-like-object with bear types and cache-tables as key\n-value pairs. The cache-tables themselves are dictionary-like-objects that map\n-the hash values of the task objects (generated by\n-``PersistentHash.persistent_hash``) to the bear results.\n+NextGen-Core's caching can be broken up into two parts:\n+\n+- Memoization of ``FileFactory`` objects.\n+- Caching of task objects.\n+\n+Since NextGen-Core provides coala to interface with the files using the\n+``FileFactory``, ``FileFactory`` uses its own caching mechanism to ensure\n+high performance I/O operations. The file contents are accessed using\n+properties which are memoized so that whenever these properties are accessed\n+instead of loading the files again the cached results are returned.","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-07-08T13:00:15Z","lastEditedAt":null,"updatedAt":"2018-07-08T13:00:15Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMDgzOTg1Mw==","url":"https://github.com/coala/coala/pull/5596#discussion_r200839853","bodyText":"For raw I would definitely mention the idea to easily deploy analysis that works on raw files only. As long as you don't use string, the contents will be never decoded, and you never run into problems. No quirky USE_RAW_FILES any more.","diffHunk":"@@ -0,0 +1,35 @@\n+coala's IO Mechanism\n+====================\n+\n+The interface\n+-------------\n+\n+Instead of directly loading files from a project directory coala uses a\n+class called ``FileFactory`` that provides an interface for dealing with\n+files.\n+\n+``FileFactory`` provides the following advantages as compared to simple file\n+loading.\n+\n+- Lazy-loading of files: Files don't have to be immediately loaded into the\n+  memory, instead coala collects all the ``FileFactory`` objects first which\n+  are in turn used to access the file contents when needed.\n+- Various modes to access contents: ``FileFactory`` provides three modes to\n+  access the file contents. As a string using ``FileFactory.string``, as a\n+  list using ``FileFactory.lines`` and in raw format using ``FileFactory.raw``.\n+  To access a particular line in the file one can use\n+  ``FileFactory.line(line_number)``.","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-07-08T13:03:25Z","lastEditedAt":"2018-07-08T13:08:50Z","updatedAt":"2018-07-08T13:08:50Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMDgzOTk1MA==","url":"https://github.com/coala/coala/pull/5596#discussion_r200839950","bodyText":"maybe repetitivie function calls -> unnecessary load ? Not sure... But \"repetitive function calls\" do also apply from user's perspective. If the user invokes string thousand times, then I would call that repetitive function calls :P","diffHunk":"@@ -0,0 +1,35 @@\n+coala's IO Mechanism\n+====================\n+\n+The interface\n+-------------\n+\n+Instead of directly loading files from a project directory coala uses a\n+class called ``FileFactory`` that provides an interface for dealing with\n+files.\n+\n+``FileFactory`` provides the following advantages as compared to simple file\n+loading.\n+\n+- Lazy-loading of files: Files don't have to be immediately loaded into the\n+  memory, instead coala collects all the ``FileFactory`` objects first which\n+  are in turn used to access the file contents when needed.\n+- Various modes to access contents: ``FileFactory`` provides three modes to\n+  access the file contents. As a string using ``FileFactory.string``, as a\n+  list using ``FileFactory.lines`` and in raw format using ``FileFactory.raw``.\n+  To access a particular line in the file one can use\n+  ``FileFactory.line(line_number)``.\n+- High Performance: ``FileFactory``'s properties are cached to reduce\n+  repetitive function calls for the same ``FileFactory`` objects.","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-07-08T13:05:29Z","lastEditedAt":null,"updatedAt":"2018-07-08T13:05:29Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMDgzOTk1Nw==","url":"https://github.com/coala/coala/pull/5596#discussion_r200839957","bodyText":"Maybe just \"Interface\"? :)","diffHunk":"@@ -0,0 +1,35 @@\n+coala's IO Mechanism\n+====================\n+\n+The interface","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-07-08T13:05:39Z","lastEditedAt":null,"updatedAt":"2018-07-08T13:05:39Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMDgzOTk3OQ==","url":"https://github.com/coala/coala/pull/5596#discussion_r200839979","bodyText":"Could be maybe emitted completely, since what follows is a general description of the IO features^^","diffHunk":"@@ -0,0 +1,35 @@\n+coala's IO Mechanism\n+====================\n+\n+The interface","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-07-08T13:06:13Z","lastEditedAt":null,"updatedAt":"2018-07-08T13:06:13Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMDg0MTI3Ng==","url":"https://github.com/coala/coala/pull/5596#discussion_r200841276","bodyText":"Oh forgot: Definitely put a link/reference to your IO docs :D If you like in a new commit, since you haven't introduced IO.rst yet.","diffHunk":"@@ -310,12 +310,22 @@ in case of code clone detection).\n Superior Caching\n ----------------\n \n-The NextGen-Core's caching mechanism is based on task objects. Bears can offload\n-tasks via `generate_tasks()` which get executed by a Python pool. Structure wise\n-the cache is a dictionary-like-object with bear types and cache-tables as key\n-value pairs. The cache-tables themselves are dictionary-like-objects that map\n-the hash values of the task objects (generated by\n-``PersistentHash.persistent_hash``) to the bear results.\n+NextGen-Core's caching can be broken up into two parts:\n+\n+- Memoization of ``FileFactory`` objects\n+- Caching of task objects\n+\n+Since NextGen-Core passes bears ``FileFactory`` objects to interface with\n+files, ``FileFactory`` uses its own caching mechanism to ensure\n+high performance I/O operations. Whenever a property is accessed the cached\n+results are returned instead of loading the files again.","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-07-08T13:49:42Z","lastEditedAt":null,"updatedAt":"2018-07-08T13:49:42Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMDg0MTUzMg==","url":"https://github.com/coala/coala/pull/5596#discussion_r200841532","bodyText":"\"mode\" is confusing here, since you are describing a mode right now (\"Various modes to access contents:\").","diffHunk":"@@ -0,0 +1,37 @@\n+coala's IO Mechanism\n+====================\n+\n+Instead of directly loading files from a project directory coala uses a\n+class called ``FileFactory`` that provides an interface for dealing with\n+files.\n+\n+``FileFactory`` provides the following advantages as compared to simple file\n+loading.\n+\n+- Lazy-loading of files: Files don't have to be immediately loaded into the\n+  memory, instead coala collects all the ``FileFactory`` objects first which\n+  are in turn used to access the file contents when needed.\n+- Various modes to access contents: ``FileFactory`` provides three modes to\n+  access the file contents. As a string using ``FileFactory.string``, as a\n+  list using ``FileFactory.lines`` and in raw format using ``FileFactory.raw``.\n+  To access a particular line in the file one can use\n+  ``FileFactory.line(line_number)``. Another benefit of storing the raw file\n+  contents is the ability to easily deploy analysis that works on raw files\n+  only. Since the contents are not decoded as long as ``FileFactory.string``\n+  is not called we don't need to have a separate mode for using raw files","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-07-08T13:58:46Z","lastEditedAt":null,"updatedAt":"2018-07-08T13:58:46Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMDg0MTU3NQ==","url":"https://github.com/coala/coala/pull/5596#discussion_r200841575","bodyText":"accessing the same property multiple times for a FileFactory objects.","diffHunk":"@@ -0,0 +1,37 @@\n+coala's IO Mechanism\n+====================\n+\n+Instead of directly loading files from a project directory coala uses a\n+class called ``FileFactory`` that provides an interface for dealing with\n+files.\n+\n+``FileFactory`` provides the following advantages as compared to simple file\n+loading.\n+\n+- Lazy-loading of files: Files don't have to be immediately loaded into the\n+  memory, instead coala collects all the ``FileFactory`` objects first which\n+  are in turn used to access the file contents when needed.\n+- Various modes to access contents: ``FileFactory`` provides three modes to\n+  access the file contents. As a string using ``FileFactory.string``, as a\n+  list using ``FileFactory.lines`` and in raw format using ``FileFactory.raw``.\n+  To access a particular line in the file one can use\n+  ``FileFactory.line(line_number)``. Another benefit of storing the raw file\n+  contents is the ability to easily deploy analysis that works on raw files\n+  only. Since the contents are not decoded as long as ``FileFactory.string``\n+  is not called we don't need to have a separate mode for using raw files\n+  anymore.\n+- High Performance: ``FileFactory``'s properties are cached to reduce\n+  unnecessary load caused by accessing the same property for a\n+  ``FileFactory`` objects.","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNjE0NDQ4OA==","createdAt":"2018-07-08T14:33:26Z","content":"THUMBS_UP","user":{"login":"palash25","name":"Palash Nigam"}}],"createdAt":"2018-07-08T14:00:27Z","lastEditedAt":null,"updatedAt":"2018-07-08T14:00:27Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMDg0MjM4OQ==","url":"https://github.com/coala/coala/pull/5596#discussion_r200842389","bodyText":"is it a module, or a decorator? ;)","diffHunk":"@@ -0,0 +1,37 @@\n+coala's IO Mechanism\n+====================\n+\n+Instead of directly loading files from a project directory coala uses a\n+class called ``FileFactory`` that provides an interface for dealing with\n+files.\n+\n+``FileFactory`` provides the following advantages as compared to simple file\n+loading.\n+\n+- Lazy-loading of files: Files don't have to be immediately loaded into the\n+  memory, instead coala collects all the ``FileFactory`` objects first which\n+  are in turn used to access the file contents when needed.\n+- Various modes to access contents: ``FileFactory`` provides three modes to\n+  access the file contents. As a string using ``FileFactory.string``, as a\n+  list using ``FileFactory.lines`` and in raw format using ``FileFactory.raw``.\n+  To access a particular line in the file one can use\n+  ``FileFactory.line(line_number)``. Another benefit of storing the raw file\n+  contents is the ability to easily deploy analysis that works on raw files\n+  only. Since the contents are not decoded as long as ``FileFactory.string``\n+  is not called we don't need to have a separate mode for using raw files\n+  anymore.\n+- High Performance: ``FileFactory``'s properties are cached to reduce\n+  unnecessary load caused by accessing the same property for a\n+  ``FileFactory`` objects.\n+\n+\n+Caching\n+-------\n+\n+``FileFactory`` uses a module called ``memoized_property`` to decorate its","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-07-08T14:23:26Z","lastEditedAt":null,"updatedAt":"2018-07-08T14:23:26Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMDg0NDM1Mg==","url":"https://github.com/coala/coala/pull/5596#discussion_r200844352","bodyText":"I changed the heading to various formats and the raw mode parts is kept the same to avoid confusion.","diffHunk":"@@ -0,0 +1,37 @@\n+coala's IO Mechanism\n+====================\n+\n+Instead of directly loading files from a project directory coala uses a\n+class called ``FileFactory`` that provides an interface for dealing with\n+files.\n+\n+``FileFactory`` provides the following advantages as compared to simple file\n+loading.\n+\n+- Lazy-loading of files: Files don't have to be immediately loaded into the\n+  memory, instead coala collects all the ``FileFactory`` objects first which\n+  are in turn used to access the file contents when needed.\n+- Various modes to access contents: ``FileFactory`` provides three modes to\n+  access the file contents. As a string using ``FileFactory.string``, as a\n+  list using ``FileFactory.lines`` and in raw format using ``FileFactory.raw``.\n+  To access a particular line in the file one can use\n+  ``FileFactory.line(line_number)``. Another benefit of storing the raw file\n+  contents is the ability to easily deploy analysis that works on raw files\n+  only. Since the contents are not decoded as long as ``FileFactory.string``\n+  is not called we don't need to have a separate mode for using raw files","author":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4","name":"Palash Nigam"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNjE0ODAyMg==","createdAt":"2018-07-08T19:19:33Z","content":"THUMBS_UP","user":{"login":"Makman2","name":"Mischa Krüger"}}],"createdAt":"2018-07-08T15:34:10Z","lastEditedAt":null,"updatedAt":"2018-07-08T15:34:10Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMDg1MDYyNQ==","url":"https://github.com/coala/coala/pull/5596#discussion_r200850625","bodyText":"I would exclude the period from the link ;)\ncheck out the `IO docs<http://...>`_.","diffHunk":"@@ -318,7 +318,9 @@ NextGen-Core's caching can be broken up into two parts:\n Since NextGen-Core passes bears ``FileFactory`` objects to interface with\n files, ``FileFactory`` uses its own caching mechanism to ensure\n high performance I/O operations. Whenever a property is accessed the cached\n-results are returned instead of loading the files again.\n+results are returned instead of loading the files again. For more details check\n+out the `IO docs.","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-07-08T19:21:16Z","lastEditedAt":null,"updatedAt":"2018-07-08T19:21:16Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1530766055000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5597","number":5597,"title":"Development_Setuo.rst : change the \"docs\" to \"coala\"","body":"The \"setup.py\" is in the \"coala\" directory not in the \"docs\" directory\ncloses #5593\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":4,"createdAt":"2018-07-05T02:46:38Z","updatedAt":"2018-07-05T04:47:35Z","closedAt":"2018-07-05T04:05:51Z","state":"closed","user":{"login":"he1l0world","avatarUrl":"https://avatars2.githubusercontent.com/u/27997963?v=4"},"owner":{"login":"he1l0world","avatarUrl":"https://avatars2.githubusercontent.com/u/27997963?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"00DE0F"},{"name":"type/bug","color":"e11d21"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5597","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDQwMjYwMDk3Mw==","url":"https://github.com/coala/coala/pull/5597#issuecomment-402600973","bodyText":"Please do not work on issues until they are assigned to you.\nFollow https://coala.io/newcomer to quickly prepare for harder projects.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-07-05T04:05:51Z","lastEditedAt":null,"updatedAt":"2018-07-05T04:05:51Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQwMjYwNTI0OA==","url":"https://github.com/coala/coala/pull/5597#issuecomment-402605248","bodyText":"Sorry. I forgot... can I continue to work on this issue?","diffHunk":null,"author":{"login":"he1l0world","avatarUrl":"https://avatars2.githubusercontent.com/u/27997963?v=4","name":"陈苏扬"},"createdAt":"2018-07-05T04:47:35Z","lastEditedAt":null,"updatedAt":"2018-07-05T04:47:35Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1531127873000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5598","number":5598,"title":"Git_Basics.rst: Adds bullets","body":"Rectifies a minor syntax error due to which bullets\nweren't being rendered.\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":2,"createdAt":"2018-07-05T05:22:09Z","updatedAt":"2018-07-09T09:17:53Z","closedAt":null,"state":"open","user":{"login":"0110G","avatarUrl":"https://avatars1.githubusercontent.com/u/39427377?v=4"},"owner":{"login":"0110G","avatarUrl":"https://avatars1.githubusercontent.com/u/39427377?v=4"},"labels":[{"name":"process/wip","color":"fbca04"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5598","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDQwMjYyODcwNQ==","url":"https://github.com/coala/coala/pull/5598#issuecomment-402628705","bodyText":"@0110G running coala and pytest on your local system before pushing the code will help you. And go through the newcomer's guide. It helps a lot. :)","diffHunk":null,"author":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4","name":"Pareksha Manchanda"},"createdAt":"2018-07-05T07:20:14Z","lastEditedAt":null,"updatedAt":"2018-07-05T07:20:14Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQwMjczMDk4Mw==","url":"https://github.com/coala/coala/pull/5598#issuecomment-402730983","bodyText":"Yeah. I read it but having a difficult time with git as a beginner. Please tolerate me :))","diffHunk":null,"author":{"login":"0110G","avatarUrl":"https://avatars1.githubusercontent.com/u/39427377?v=4","name":null},"createdAt":"2018-07-05T13:58:37Z","lastEditedAt":null,"updatedAt":"2018-07-05T13:58:37Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1533537231000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5599","number":5599,"title":"Add: Profiling Interface","body":"Add Profiler Interface.\nRelated to #565","comments":8,"createdAt":"2018-07-05T12:30:54Z","updatedAt":"2018-08-06T06:33:51Z","closedAt":"2018-08-06T06:33:30Z","state":"merged","user":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4"},"owner":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4"},"labels":[{"name":"size/M","color":"eb6420"},{"name":"status/ci-approved","color":"ededed"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5599","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMTQ1OTkzMg==","url":"https://github.com/coala/coala/pull/5599#discussion_r201459932","bodyText":"check against boolean values, not string:\nif self.profile is True:","diffHunk":"@@ -305,6 +310,45 @@ def log_message(self, log_message, timestamp=None, **kwargs):\n     def run(self, *args, dependency_results=None, **kwargs):\n         raise NotImplementedError\n \n+    def setup_profile(self, prof=None):\n+        path = os.getcwd()\n+        if self.profile == 'True':","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-07-10T19:05:37Z","lastEditedAt":null,"updatedAt":"2018-07-10T19:05:37Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMTQ2MDA3Ng==","url":"https://github.com/coala/coala/pull/5599#discussion_r201460076","bodyText":"superfluous","diffHunk":"@@ -305,6 +310,45 @@ def log_message(self, log_message, timestamp=None, **kwargs):\n     def run(self, *args, dependency_results=None, **kwargs):\n         raise NotImplementedError\n \n+    def setup_profile(self, prof=None):\n+        path = os.getcwd()\n+        if self.profile == 'True':\n+            filename = '{}_{}.prof'.format(self.section.name, self.name)\n+            open(filename, 'wb')","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-07-10T19:06:03Z","lastEditedAt":null,"updatedAt":"2018-07-10T19:06:03Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMTQ2MjU3MA==","url":"https://github.com/coala/coala/pull/5599#discussion_r201462570","bodyText":"please name them properly ;) proper naming automatically makes code documented :)","diffHunk":"@@ -305,6 +310,45 @@ def log_message(self, log_message, timestamp=None, **kwargs):\n     def run(self, *args, dependency_results=None, **kwargs):\n         raise NotImplementedError\n \n+    def setup_profile(self, prof=None):\n+        path = os.getcwd()\n+        if self.profile == 'True':\n+            filename = '{}_{}.prof'.format(self.section.name, self.name)\n+            open(filename, 'wb')\n+            prof.dump_stats(filename)\n+        else:\n+            subdir = self.profile\n+            filepath = os.path.join(path, subdir)\n+            if os.path.isdir(filepath):\n+                filename = '{}_{}.prof'.format(self.section.name, self.name)\n+                open(os.path.join(filepath, filename), 'wb')\n+                prof.dump_stats(os.path.join(filepath, filename))\n+\n+            else:\n+                os.mkdir(os.path.join(path, subdir))\n+                filename = '{}_{}.prof'.format(self.section.name, self.name)\n+                open(os.path.join(filepath, filename), 'wb')\n+                prof.dump_stats(os.path.join(filepath, filename))\n+\n+    def profile_run(self, *args, **kwargs):\n+        prof1 = cProfile.Profile()","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-07-10T19:15:56Z","lastEditedAt":null,"updatedAt":"2018-07-10T19:15:56Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMTQ2MjYxMw==","url":"https://github.com/coala/coala/pull/5599#discussion_r201462613","bodyText":"not Iterable instead of GeneratorType?","diffHunk":"@@ -305,6 +310,45 @@ def log_message(self, log_message, timestamp=None, **kwargs):\n     def run(self, *args, dependency_results=None, **kwargs):\n         raise NotImplementedError\n \n+    def setup_profile(self, prof=None):\n+        path = os.getcwd()\n+        if self.profile == 'True':\n+            filename = '{}_{}.prof'.format(self.section.name, self.name)\n+            open(filename, 'wb')\n+            prof.dump_stats(filename)\n+        else:\n+            subdir = self.profile\n+            filepath = os.path.join(path, subdir)\n+            if os.path.isdir(filepath):\n+                filename = '{}_{}.prof'.format(self.section.name, self.name)\n+                open(os.path.join(filepath, filename), 'wb')\n+                prof.dump_stats(os.path.join(filepath, filename))\n+\n+            else:\n+                os.mkdir(os.path.join(path, subdir))\n+                filename = '{}_{}.prof'.format(self.section.name, self.name)\n+                open(os.path.join(filepath, filename), 'wb')\n+                prof.dump_stats(os.path.join(filepath, filename))\n+\n+    def profile_run(self, *args, **kwargs):\n+        prof1 = cProfile.Profile()\n+        bear_results = prof1.runcall(self.run, *args, **kwargs)\n+        if isinstance(bear_results, types.GeneratorType):","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-07-10T19:16:08Z","lastEditedAt":null,"updatedAt":"2018-07-10T19:16:08Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMTQ2Mjg2Ng==","url":"https://github.com/coala/coala/pull/5599#discussion_r201462866","bodyText":"redundant","diffHunk":"@@ -305,6 +310,45 @@ def log_message(self, log_message, timestamp=None, **kwargs):\n     def run(self, *args, dependency_results=None, **kwargs):\n         raise NotImplementedError\n \n+    def setup_profile(self, prof=None):\n+        path = os.getcwd()\n+        if self.profile == 'True':\n+            filename = '{}_{}.prof'.format(self.section.name, self.name)\n+            open(filename, 'wb')\n+            prof.dump_stats(filename)\n+        else:\n+            subdir = self.profile\n+            filepath = os.path.join(path, subdir)\n+            if os.path.isdir(filepath):\n+                filename = '{}_{}.prof'.format(self.section.name, self.name)\n+                open(os.path.join(filepath, filename), 'wb')\n+                prof.dump_stats(os.path.join(filepath, filename))\n+\n+            else:\n+                os.mkdir(os.path.join(path, subdir))\n+                filename = '{}_{}.prof'.format(self.section.name, self.name)\n+                open(os.path.join(filepath, filename), 'wb')","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-07-10T19:17:02Z","lastEditedAt":null,"updatedAt":"2018-07-10T19:17:02Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMTQ2Mjg3OQ==","url":"https://github.com/coala/coala/pull/5599#discussion_r201462879","bodyText":"redundant","diffHunk":"@@ -305,6 +310,45 @@ def log_message(self, log_message, timestamp=None, **kwargs):\n     def run(self, *args, dependency_results=None, **kwargs):\n         raise NotImplementedError\n \n+    def setup_profile(self, prof=None):\n+        path = os.getcwd()\n+        if self.profile == 'True':\n+            filename = '{}_{}.prof'.format(self.section.name, self.name)\n+            open(filename, 'wb')\n+            prof.dump_stats(filename)\n+        else:\n+            subdir = self.profile\n+            filepath = os.path.join(path, subdir)\n+            if os.path.isdir(filepath):\n+                filename = '{}_{}.prof'.format(self.section.name, self.name)\n+                open(os.path.join(filepath, filename), 'wb')","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-07-10T19:17:05Z","lastEditedAt":null,"updatedAt":"2018-07-10T19:17:05Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMTQ2NDI5OA==","url":"https://github.com/coala/coala/pull/5599#discussion_r201464298","bodyText":"documentation missing ;)","diffHunk":"@@ -262,7 +265,8 @@ def __init__(self,\n                  section: Section,\n                  message_queue,\n                  timeout=0,\n-                 debugger=False):\n+                 debugger=False,\n+                 profile=False):","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-07-10T19:22:08Z","lastEditedAt":null,"updatedAt":"2018-07-10T19:22:08Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMTQ2NDQzNA==","url":"https://github.com/coala/coala/pull/5599#discussion_r201464434","bodyText":"path is only used in the else branch, please move it there","diffHunk":"@@ -305,6 +310,45 @@ def log_message(self, log_message, timestamp=None, **kwargs):\n     def run(self, *args, dependency_results=None, **kwargs):\n         raise NotImplementedError\n \n+    def setup_profile(self, prof=None):\n+        path = os.getcwd()","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-07-10T19:22:42Z","lastEditedAt":null,"updatedAt":"2018-07-10T19:22:42Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMTQ2NDYzMA==","url":"https://github.com/coala/coala/pull/5599#discussion_r201464630","bodyText":"you should check if it's actually an absolute path. So\n\nit's a relative path: append it to os.getcwd\nit's an absolute path: ignore os.getcwd","diffHunk":"@@ -305,6 +310,45 @@ def log_message(self, log_message, timestamp=None, **kwargs):\n     def run(self, *args, dependency_results=None, **kwargs):\n         raise NotImplementedError\n \n+    def setup_profile(self, prof=None):\n+        path = os.getcwd()\n+        if self.profile == 'True':\n+            filename = '{}_{}.prof'.format(self.section.name, self.name)\n+            open(filename, 'wb')\n+            prof.dump_stats(filename)\n+        else:\n+            subdir = self.profile","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-07-10T19:23:30Z","lastEditedAt":null,"updatedAt":"2018-07-10T19:23:30Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMTQ2NDkyNg==","url":"https://github.com/coala/coala/pull/5599#discussion_r201464926","bodyText":"I guess the API saving the dumps already respect that, so in fact you don't need the join below, just pass self.profile to prof.dump_stats :)","diffHunk":"@@ -305,6 +310,45 @@ def log_message(self, log_message, timestamp=None, **kwargs):\n     def run(self, *args, dependency_results=None, **kwargs):\n         raise NotImplementedError\n \n+    def setup_profile(self, prof=None):\n+        path = os.getcwd()\n+        if self.profile == 'True':\n+            filename = '{}_{}.prof'.format(self.section.name, self.name)\n+            open(filename, 'wb')\n+            prof.dump_stats(filename)\n+        else:\n+            subdir = self.profile","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-07-10T19:24:41Z","lastEditedAt":null,"updatedAt":"2018-07-10T19:24:41Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMTQ2NTUwNA==","url":"https://github.com/coala/coala/pull/5599#discussion_r201465504","bodyText":"Looks like a bit copied from above. How about doing\nself.filename = '{}_{}.prof'.format(self.section.name, self.name) if self.profile is True else self.profile","diffHunk":"@@ -305,6 +310,45 @@ def log_message(self, log_message, timestamp=None, **kwargs):\n     def run(self, *args, dependency_results=None, **kwargs):\n         raise NotImplementedError\n \n+    def setup_profile(self, prof=None):\n+        path = os.getcwd()\n+        if self.profile == 'True':\n+            filename = '{}_{}.prof'.format(self.section.name, self.name)\n+            open(filename, 'wb')\n+            prof.dump_stats(filename)\n+        else:\n+            subdir = self.profile\n+            filepath = os.path.join(path, subdir)\n+            if os.path.isdir(filepath):\n+                filename = '{}_{}.prof'.format(self.section.name, self.name)\n+                open(os.path.join(filepath, filename), 'wb')\n+                prof.dump_stats(os.path.join(filepath, filename))\n+\n+            else:\n+                os.mkdir(os.path.join(path, subdir))\n+                filename = '{}_{}.prof'.format(self.section.name, self.name)\n+                open(os.path.join(filepath, filename), 'wb')","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-07-10T19:26:50Z","lastEditedAt":null,"updatedAt":"2018-07-10T19:26:50Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMTQ2NTY0Mw==","url":"https://github.com/coala/coala/pull/5599#discussion_r201465643","bodyText":"Why not actually running everything in the same profile object?","diffHunk":"@@ -305,6 +310,45 @@ def log_message(self, log_message, timestamp=None, **kwargs):\n     def run(self, *args, dependency_results=None, **kwargs):\n         raise NotImplementedError\n \n+    def setup_profile(self, prof=None):\n+        path = os.getcwd()\n+        if self.profile == 'True':\n+            filename = '{}_{}.prof'.format(self.section.name, self.name)\n+            open(filename, 'wb')\n+            prof.dump_stats(filename)\n+        else:\n+            subdir = self.profile\n+            filepath = os.path.join(path, subdir)\n+            if os.path.isdir(filepath):\n+                filename = '{}_{}.prof'.format(self.section.name, self.name)\n+                open(os.path.join(filepath, filename), 'wb')\n+                prof.dump_stats(os.path.join(filepath, filename))\n+\n+            else:\n+                os.mkdir(os.path.join(path, subdir))\n+                filename = '{}_{}.prof'.format(self.section.name, self.name)\n+                open(os.path.join(filepath, filename), 'wb')\n+                prof.dump_stats(os.path.join(filepath, filename))\n+\n+    def profile_run(self, *args, **kwargs):\n+        prof1 = cProfile.Profile()","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-07-10T19:27:16Z","lastEditedAt":null,"updatedAt":"2018-07-10T19:27:16Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMTQ2NjE0MA==","url":"https://github.com/coala/coala/pull/5599#discussion_r201466140","bodyText":"what arguments does it take?","diffHunk":"@@ -249,6 +249,9 @@ def default_arg_parser(formatter_class=None):\n         ' additional arguments. If used without arguments, all bears specified'\n         ' with --bears will be debugged (even implicit dependency bears).')\n \n+    outputs_group.add_argument(\n+        '--profile', nargs='?', const=True, help='Profile Bears')","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-07-10T19:29:09Z","lastEditedAt":null,"updatedAt":"2018-07-10T19:29:09Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMzQ3NTI2Mw==","url":"https://github.com/coala/coala/pull/5599#discussion_r203475263","bodyText":"why do you introduce documentation about the debugger in the commit for the profiler?","diffHunk":"@@ -273,6 +277,10 @@ def __init__(self,\n                               time limit, use 0.\n         :raises TypeError:    Raised when ``message_queue`` is no queue.\n         :raises RuntimeError: Raised when bear requirements are not fulfilled.\n+        :param debugger       A flag which enable debugger on those bears which\n+                              are specified in ``debug_bears`` settings.","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNjY0OTYwNg==","createdAt":"2018-07-18T19:31:11Z","content":"THUMBS_UP","user":{"login":"RaiVaibhav","name":"Vaibhav Rai"}}],"createdAt":"2018-07-18T18:01:36Z","lastEditedAt":null,"updatedAt":"2018-07-18T18:01:36Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMzQ3NTQ1MA==","url":"https://github.com/coala/coala/pull/5599#discussion_r203475450","bodyText":"mismatch with the actual parameter name profile. But I guess you should call it profiler in the signature, analogous to debugger","diffHunk":"@@ -273,6 +277,10 @@ def __init__(self,\n                               time limit, use 0.\n         :raises TypeError:    Raised when ``message_queue`` is no queue.\n         :raises RuntimeError: Raised when bear requirements are not fulfilled.\n+        :param debugger       A flag which enable debugger on those bears which\n+                              are specified in ``debug_bears`` settings.\n+        :param profiler       The Path or name of directory where profiler file","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-07-18T18:02:08Z","lastEditedAt":null,"updatedAt":"2018-07-18T18:02:08Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMzQ3NTQ5NQ==","url":"https://github.com/coala/coala/pull/5599#discussion_r203475495","bodyText":"Ppath","diffHunk":"@@ -273,6 +277,10 @@ def __init__(self,\n                               time limit, use 0.\n         :raises TypeError:    Raised when ``message_queue`` is no queue.\n         :raises RuntimeError: Raised when bear requirements are not fulfilled.\n+        :param debugger       A flag which enable debugger on those bears which\n+                              are specified in ``debug_bears`` settings.\n+        :param profiler       The Path or name of directory where profiler file","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-07-18T18:02:19Z","lastEditedAt":null,"updatedAt":"2018-07-18T18:02:19Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMzQ3ODUzMQ==","url":"https://github.com/coala/coala/pull/5599#discussion_r203478531","bodyText":"so you won't create a dump file? It has to exist already? Sounds not so good\ndon't print, rather exceptions, since it's an invalid state for the bear with profiling enabled.","diffHunk":"@@ -305,6 +314,36 @@ def log_message(self, log_message, timestamp=None, **kwargs):\n     def run(self, *args, dependency_results=None, **kwargs):\n         raise NotImplementedError\n \n+    def setup_profile(self, profiler=None):\n+        filename = '{}_{}.prof'.format(self.section.name, self.name)\n+        if self.profile is True:\n+            profiler.dump_stats(filename)\n+        elif os.path.exists(self.profile) and os.path.isdir(self.profile):\n+            profiler.dump_stats(os.path.join(self.profile, filename))\n+        elif not os.path.isfile(self.profile):\n+            os.mkdir(os.path.join(self.profile))\n+            profiler.dump_stats(os.path.join(self.profile, filename))\n+        else:\n+            print('directory and filename cannot be same', file=sys.stdout)","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-07-18T18:11:52Z","lastEditedAt":null,"updatedAt":"2018-07-18T18:11:52Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMzQ3ODc3Ng==","url":"https://github.com/coala/coala/pull/5599#discussion_r203478776","bodyText":"please deduplicate the code, you use self.setup_profile twice in both branches.","diffHunk":"@@ -305,6 +314,36 @@ def log_message(self, log_message, timestamp=None, **kwargs):\n     def run(self, *args, dependency_results=None, **kwargs):\n         raise NotImplementedError\n \n+    def setup_profile(self, profiler=None):\n+        filename = '{}_{}.prof'.format(self.section.name, self.name)\n+        if self.profile is True:\n+            profiler.dump_stats(filename)\n+        elif os.path.exists(self.profile) and os.path.isdir(self.profile):\n+            profiler.dump_stats(os.path.join(self.profile, filename))\n+        elif not os.path.isfile(self.profile):\n+            os.mkdir(os.path.join(self.profile))\n+            profiler.dump_stats(os.path.join(self.profile, filename))\n+        else:\n+            print('directory and filename cannot be same', file=sys.stdout)\n+\n+    def profile_run(self, *args, profile=None, **kwargs):\n+        profile = cProfile.Profile() if profile is None else profile\n+        bear_results = profile.runcall(self.run, *args, **kwargs)\n+        if isinstance(bear_results, collections.Iterable):\n+            results = []\n+            iterator = iter(bear_results)\n+            while True:\n+                try:\n+                    result = profile.runcall(next, iterator)\n+                    results.append(result)\n+                except StopIteration:\n+                    break\n+            self.setup_profile(profiler=profile)\n+            return results\n+        else:\n+            self.setup_profile(profiler=profile)","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-07-18T18:12:39Z","lastEditedAt":null,"updatedAt":"2018-07-18T18:12:39Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMzQ3ODk1NA==","url":"https://github.com/coala/coala/pull/5599#discussion_r203478954","bodyText":"what if profile and debugger are both given? I thought that's an invalid state, thus an exception should be raised?","diffHunk":"@@ -283,6 +291,7 @@ def __init__(self,\n         self.message_queue = message_queue\n         self.timeout = timeout\n         self.debugger = debugger\n+        self.profile = profile","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzIyOTg2NQ==","createdAt":"2018-07-31T13:42:30Z","content":"THUMBS_UP","user":{"login":"RaiVaibhav","name":"Vaibhav Rai"}}],"createdAt":"2018-07-18T18:13:15Z","lastEditedAt":null,"updatedAt":"2018-07-18T18:13:15Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMzQ3OTU0Nw==","url":"https://github.com/coala/coala/pull/5599#discussion_r203479547","bodyText":"function name doesn't resemble what it's doing","diffHunk":"@@ -305,6 +314,36 @@ def log_message(self, log_message, timestamp=None, **kwargs):\n     def run(self, *args, dependency_results=None, **kwargs):\n         raise NotImplementedError\n \n+    def setup_profile(self, profiler=None):","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNjY0OTY5MQ==","createdAt":"2018-07-18T19:32:53Z","content":"THUMBS_UP","user":{"login":"RaiVaibhav","name":"Vaibhav Rai"}}],"createdAt":"2018-07-18T18:15:13Z","lastEditedAt":null,"updatedAt":"2018-07-18T18:15:13Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMzQ3OTczNw==","url":"https://github.com/coala/coala/pull/5599#discussion_r203479737","bodyText":"Function name should be preceded with an underscore, I guess nobody should directly call that^^","diffHunk":"@@ -305,6 +314,36 @@ def log_message(self, log_message, timestamp=None, **kwargs):\n     def run(self, *args, dependency_results=None, **kwargs):\n         raise NotImplementedError\n \n+    def setup_profile(self, profiler=None):","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNjY0OTY4OQ==","createdAt":"2018-07-18T19:32:47Z","content":"THUMBS_UP","user":{"login":"RaiVaibhav","name":"Vaibhav Rai"}}],"createdAt":"2018-07-18T18:15:45Z","lastEditedAt":null,"updatedAt":"2018-07-18T18:15:45Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMzQ3OTkyMQ==","url":"https://github.com/coala/coala/pull/5599#discussion_r203479921","bodyText":"True is allowed as well^^","diffHunk":"@@ -273,6 +277,10 @@ def __init__(self,\n                               time limit, use 0.\n         :raises TypeError:    Raised when ``message_queue`` is no queue.\n         :raises RuntimeError: Raised when bear requirements are not fulfilled.\n+        :param debugger       A flag which enable debugger on those bears which\n+                              are specified in ``debug_bears`` settings.\n+        :param profiler       The Path or name of directory where profiler file\n+                              will dump.","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-07-18T18:16:13Z","lastEditedAt":null,"updatedAt":"2018-07-18T18:16:13Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMzQ4MDQ3Ng==","url":"https://github.com/coala/coala/pull/5599#discussion_r203480476","bodyText":"PS:\n3. I don't understand the message^^\n4. sys.stdout is default for print","diffHunk":"@@ -305,6 +314,36 @@ def log_message(self, log_message, timestamp=None, **kwargs):\n     def run(self, *args, dependency_results=None, **kwargs):\n         raise NotImplementedError\n \n+    def setup_profile(self, profiler=None):\n+        filename = '{}_{}.prof'.format(self.section.name, self.name)\n+        if self.profile is True:\n+            profiler.dump_stats(filename)\n+        elif os.path.exists(self.profile) and os.path.isdir(self.profile):\n+            profiler.dump_stats(os.path.join(self.profile, filename))\n+        elif not os.path.isfile(self.profile):\n+            os.mkdir(os.path.join(self.profile))\n+            profiler.dump_stats(os.path.join(self.profile, filename))\n+        else:\n+            print('directory and filename cannot be same', file=sys.stdout)","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-07-18T18:18:06Z","lastEditedAt":null,"updatedAt":"2018-07-18T18:18:06Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMzQ4MTE4Mw==","url":"https://github.com/coala/coala/pull/5599#discussion_r203481183","bodyText":"not sure this behaviour is too complicated... why not just allowing True/False and put it either into the working directory or a subdirectory like profile/profile-data/bear-profiling/... ?","diffHunk":"@@ -305,6 +314,36 @@ def log_message(self, log_message, timestamp=None, **kwargs):\n     def run(self, *args, dependency_results=None, **kwargs):\n         raise NotImplementedError\n \n+    def setup_profile(self, profiler=None):\n+        filename = '{}_{}.prof'.format(self.section.name, self.name)\n+        if self.profile is True:\n+            profiler.dump_stats(filename)\n+        elif os.path.exists(self.profile) and os.path.isdir(self.profile):\n+            profiler.dump_stats(os.path.join(self.profile, filename))\n+        elif not os.path.isfile(self.profile):\n+            os.mkdir(os.path.join(self.profile))\n+            profiler.dump_stats(os.path.join(self.profile, filename))","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-07-18T18:20:28Z","lastEditedAt":null,"updatedAt":"2018-07-18T18:20:28Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMzQ4MjI5Mw==","url":"https://github.com/coala/coala/pull/5599#discussion_r203482293","bodyText":"since how do we want to configure it for many bears if the user can pick the filename? Specifying individual file names for each bears as a feature is not necessarily helpful^^ people usually just want the data, if the filenames are not to their likings, they should reformat.","diffHunk":"@@ -305,6 +314,36 @@ def log_message(self, log_message, timestamp=None, **kwargs):\n     def run(self, *args, dependency_results=None, **kwargs):\n         raise NotImplementedError\n \n+    def setup_profile(self, profiler=None):\n+        filename = '{}_{}.prof'.format(self.section.name, self.name)\n+        if self.profile is True:\n+            profiler.dump_stats(filename)\n+        elif os.path.exists(self.profile) and os.path.isdir(self.profile):\n+            profiler.dump_stats(os.path.join(self.profile, filename))\n+        elif not os.path.isfile(self.profile):\n+            os.mkdir(os.path.join(self.profile))\n+            profiler.dump_stats(os.path.join(self.profile, filename))","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-07-18T18:24:10Z","lastEditedAt":null,"updatedAt":"2018-07-18T18:24:10Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMzQ5NTE0Nw==","url":"https://github.com/coala/coala/pull/5599#discussion_r203495147","bodyText":"@Makman2\n\n\nfirst it will check the value of self.profile if its True then it will dump the profiler files in the current working directory,\n\n\nelse  it will check whether the path given or directory name or in self.profile  already exists and also check it is a directory if yes then it will dump the profiler files in that directory.\n\n\nelse it will check whether the path given or directory name is already a file (not directory) if it is not a file then it will create a directory with the name passed in self.profile or the path passed and dump the profiler files in this directory.\n\n\nelse last case which left is user is passing the filename or filepath in self.profile then it becomes obvious that it is not possible to dump profiler files in file (I will raise the exception in this case instead of printing a message)","diffHunk":"@@ -305,6 +314,36 @@ def log_message(self, log_message, timestamp=None, **kwargs):\n     def run(self, *args, dependency_results=None, **kwargs):\n         raise NotImplementedError\n \n+    def setup_profile(self, profiler=None):\n+        filename = '{}_{}.prof'.format(self.section.name, self.name)\n+        if self.profile is True:\n+            profiler.dump_stats(filename)\n+        elif os.path.exists(self.profile) and os.path.isdir(self.profile):\n+            profiler.dump_stats(os.path.join(self.profile, filename))\n+        elif not os.path.isfile(self.profile):\n+            os.mkdir(os.path.join(self.profile))\n+            profiler.dump_stats(os.path.join(self.profile, filename))\n+        else:\n+            print('directory and filename cannot be same', file=sys.stdout)","author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"reactions":[],"createdAt":"2018-07-18T19:05:33Z","lastEditedAt":"2018-07-19T04:07:43Z","updatedAt":"2018-07-19T04:07:43Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMzQ5NTU5OQ==","url":"https://github.com/coala/coala/pull/5599#discussion_r203495599","bodyText":"What it the bear return is not iterable I know you already said a bear which return none is a buggy bear but that bear can be profiled IMO","diffHunk":"@@ -305,6 +314,36 @@ def log_message(self, log_message, timestamp=None, **kwargs):\n     def run(self, *args, dependency_results=None, **kwargs):\n         raise NotImplementedError\n \n+    def setup_profile(self, profiler=None):\n+        filename = '{}_{}.prof'.format(self.section.name, self.name)\n+        if self.profile is True:\n+            profiler.dump_stats(filename)\n+        elif os.path.exists(self.profile) and os.path.isdir(self.profile):\n+            profiler.dump_stats(os.path.join(self.profile, filename))\n+        elif not os.path.isfile(self.profile):\n+            os.mkdir(os.path.join(self.profile))\n+            profiler.dump_stats(os.path.join(self.profile, filename))\n+        else:\n+            print('directory and filename cannot be same', file=sys.stdout)\n+\n+    def profile_run(self, *args, profile=None, **kwargs):\n+        profile = cProfile.Profile() if profile is None else profile\n+        bear_results = profile.runcall(self.run, *args, **kwargs)\n+        if isinstance(bear_results, collections.Iterable):\n+            results = []\n+            iterator = iter(bear_results)\n+            while True:\n+                try:\n+                    result = profile.runcall(next, iterator)\n+                    results.append(result)\n+                except StopIteration:\n+                    break\n+            self.setup_profile(profiler=profile)\n+            return results\n+        else:\n+            self.setup_profile(profiler=profile)","author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"reactions":[],"createdAt":"2018-07-18T19:07:06Z","lastEditedAt":null,"updatedAt":"2018-07-18T19:07:06Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMzQ5NzcyOA==","url":"https://github.com/coala/coala/pull/5599#discussion_r203497728","bodyText":"No its not, If I understand here correctly then you are talking about this filename = '{}_{}.prof'.format(self.section.name, self.name) this part was added in cEP and also it is also giving a useful information like suppose some bear ABCBear in 2 different sections of .coafile then it will create a files with name sectionOne_ABCBear and sectionTwo_ABCBear. (here section name is my assumption)","diffHunk":"@@ -305,6 +314,36 @@ def log_message(self, log_message, timestamp=None, **kwargs):\n     def run(self, *args, dependency_results=None, **kwargs):\n         raise NotImplementedError\n \n+    def setup_profile(self, profiler=None):\n+        filename = '{}_{}.prof'.format(self.section.name, self.name)\n+        if self.profile is True:\n+            profiler.dump_stats(filename)\n+        elif os.path.exists(self.profile) and os.path.isdir(self.profile):\n+            profiler.dump_stats(os.path.join(self.profile, filename))\n+        elif not os.path.isfile(self.profile):\n+            os.mkdir(os.path.join(self.profile))\n+            profiler.dump_stats(os.path.join(self.profile, filename))","author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"reactions":[],"createdAt":"2018-07-18T19:14:45Z","lastEditedAt":null,"updatedAt":"2018-07-18T19:14:45Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMzQ5ODcxOA==","url":"https://github.com/coala/coala/pull/5599#discussion_r203498718","bodyText":"not sure this behaviour is too complicated\n\nI don't think its complicated 😅","diffHunk":"@@ -305,6 +314,36 @@ def log_message(self, log_message, timestamp=None, **kwargs):\n     def run(self, *args, dependency_results=None, **kwargs):\n         raise NotImplementedError\n \n+    def setup_profile(self, profiler=None):\n+        filename = '{}_{}.prof'.format(self.section.name, self.name)\n+        if self.profile is True:\n+            profiler.dump_stats(filename)\n+        elif os.path.exists(self.profile) and os.path.isdir(self.profile):\n+            profiler.dump_stats(os.path.join(self.profile, filename))\n+        elif not os.path.isfile(self.profile):\n+            os.mkdir(os.path.join(self.profile))\n+            profiler.dump_stats(os.path.join(self.profile, filename))","author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"reactions":[],"createdAt":"2018-07-18T19:18:22Z","lastEditedAt":null,"updatedAt":"2018-07-18T19:18:22Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMzUwMjExMQ==","url":"https://github.com/coala/coala/pull/5599#discussion_r203502111","bodyText":"Yeah I accidentally squashed in my last update","diffHunk":"@@ -273,6 +277,10 @@ def __init__(self,\n                               time limit, use 0.\n         :raises TypeError:    Raised when ``message_queue`` is no queue.\n         :raises RuntimeError: Raised when bear requirements are not fulfilled.\n+        :param debugger       A flag which enable debugger on those bears which\n+                              are specified in ``debug_bears`` settings.","author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"reactions":[],"createdAt":"2018-07-18T19:31:08Z","lastEditedAt":null,"updatedAt":"2018-07-18T19:31:08Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMzU5NzM3Mw==","url":"https://github.com/coala/coala/pull/5599#discussion_r203597373","bodyText":"actually, the cli argument is --profile so I am directly using the profile keyword and passing same to bear init , do you want me to change it to --profiler or make it self.profiler = profile?","diffHunk":"@@ -273,6 +277,10 @@ def __init__(self,\n                               time limit, use 0.\n         :raises TypeError:    Raised when ``message_queue`` is no queue.\n         :raises RuntimeError: Raised when bear requirements are not fulfilled.\n+        :param debugger       A flag which enable debugger on those bears which\n+                              are specified in ``debug_bears`` settings.\n+        :param profiler       The Path or name of directory where profiler file","author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"reactions":[],"createdAt":"2018-07-19T04:16:19Z","lastEditedAt":null,"updatedAt":"2018-07-19T04:16:19Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMzU5Nzk2Nw==","url":"https://github.com/coala/coala/pull/5599#discussion_r203597967","bodyText":"verified one more time its working for all the case, the mistake I have done is a for every bear run it will print directory and filename cannot be same and I have to solve this warning thing 👍","diffHunk":"@@ -305,6 +314,36 @@ def log_message(self, log_message, timestamp=None, **kwargs):\n     def run(self, *args, dependency_results=None, **kwargs):\n         raise NotImplementedError\n \n+    def setup_profile(self, profiler=None):\n+        filename = '{}_{}.prof'.format(self.section.name, self.name)\n+        if self.profile is True:\n+            profiler.dump_stats(filename)\n+        elif os.path.exists(self.profile) and os.path.isdir(self.profile):\n+            profiler.dump_stats(os.path.join(self.profile, filename))\n+        elif not os.path.isfile(self.profile):\n+            os.mkdir(os.path.join(self.profile))\n+            profiler.dump_stats(os.path.join(self.profile, filename))\n+        else:\n+            print('directory and filename cannot be same', file=sys.stdout)","author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"reactions":[],"createdAt":"2018-07-19T04:22:25Z","lastEditedAt":null,"updatedAt":"2018-07-19T04:22:25Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMzYyNjMzOQ==","url":"https://github.com/coala/coala/pull/5599#discussion_r203626339","bodyText":"IMO this also get the ouput we want and also cover the case where user pass the path or filename which is actually a file not a directory it will give a proper error which user can understand easily (as we can't create a file and directory with the same name)\ni.e., FileExistsError: [Errno 17] File exists: '/home/vaibhav/test/my.txt'\nBut if /home/vaibhav/test/my.txt is a directory then it will not give any error\n, what I was not wanted was to halt the coala normal execution and I am hoping this is the thing you wanted?\n    def setup_profile(self, profiler=None):\n        filename = '{}_{}.prof'.format(self.section.name, self.name)\n        if self.profile is True:\n            profiler.dump_stats(filename)\n        else:\n            if os.path.exists(self.profile) and os.path.isdir(self.profile):\n                profiler.dump_stats(os.path.join(self.profile, filename))\n            else:\n                os.mkdir(os.path.join(self.profile))\n                profiler.dump_stats(os.path.join(self.profile, filename))","diffHunk":"@@ -305,6 +314,36 @@ def log_message(self, log_message, timestamp=None, **kwargs):\n     def run(self, *args, dependency_results=None, **kwargs):\n         raise NotImplementedError\n \n+    def setup_profile(self, profiler=None):\n+        filename = '{}_{}.prof'.format(self.section.name, self.name)\n+        if self.profile is True:\n+            profiler.dump_stats(filename)\n+        elif os.path.exists(self.profile) and os.path.isdir(self.profile):\n+            profiler.dump_stats(os.path.join(self.profile, filename))\n+        elif not os.path.isfile(self.profile):\n+            os.mkdir(os.path.join(self.profile))\n+            profiler.dump_stats(os.path.join(self.profile, filename))\n+        else:\n+            print('directory and filename cannot be same', file=sys.stdout)","author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"reactions":[],"createdAt":"2018-07-19T07:31:01Z","lastEditedAt":"2018-07-19T07:33:17Z","updatedAt":"2018-07-19T07:33:17Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMzYyOTQ0Ng==","url":"https://github.com/coala/coala/pull/5599#discussion_r203629446","bodyText":"It's okay to halt coala's execution, if the user requested to profile code, but you can't profile because of such filename issues, you want to rather stop and make the user fix it. Otherwise you do a full coala run (that depending on the setup could take minutes) without profiling which wastes time.","diffHunk":"@@ -305,6 +314,36 @@ def log_message(self, log_message, timestamp=None, **kwargs):\n     def run(self, *args, dependency_results=None, **kwargs):\n         raise NotImplementedError\n \n+    def setup_profile(self, profiler=None):\n+        filename = '{}_{}.prof'.format(self.section.name, self.name)\n+        if self.profile is True:\n+            profiler.dump_stats(filename)\n+        elif os.path.exists(self.profile) and os.path.isdir(self.profile):\n+            profiler.dump_stats(os.path.join(self.profile, filename))\n+        elif not os.path.isfile(self.profile):\n+            os.mkdir(os.path.join(self.profile))\n+            profiler.dump_stats(os.path.join(self.profile, filename))\n+        else:\n+            print('directory and filename cannot be same', file=sys.stdout)","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-07-19T07:44:53Z","lastEditedAt":null,"updatedAt":"2018-07-19T07:44:53Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMzYzMDUyNA==","url":"https://github.com/coala/coala/pull/5599#discussion_r203630524","bodyText":"And yeah, your code looks better 👍 However one doubt: So if the user specifies a path in self.profile, we want to make it a directory, right?\nBesides two improvements:\n\nIn the first else branch, you execute profiler.dump_stats(os.path.join(...)) regardless on which branch, that can be moved outside the if ;)\nsince in the end you will always do dump_stats, and the only thing that changes is the filename, how about doing:\n\n    def setup_profile(self, profiler=None):\n        filename = '{}_{}.prof'.format(self.section.name, self.name)\n        if self.profile is True:\n            path = filename\n        else:\n            if not (os.path.exists(self.profile) and os.path.isdir(self.profile)):\n                os.mkdir(os.path.join(self.profile))\n            \n            path = os.path.join(self.profile, filename)            \n\n        profiler.dump_stats(path)","diffHunk":"@@ -305,6 +314,36 @@ def log_message(self, log_message, timestamp=None, **kwargs):\n     def run(self, *args, dependency_results=None, **kwargs):\n         raise NotImplementedError\n \n+    def setup_profile(self, profiler=None):\n+        filename = '{}_{}.prof'.format(self.section.name, self.name)\n+        if self.profile is True:\n+            profiler.dump_stats(filename)\n+        elif os.path.exists(self.profile) and os.path.isdir(self.profile):\n+            profiler.dump_stats(os.path.join(self.profile, filename))\n+        elif not os.path.isfile(self.profile):\n+            os.mkdir(os.path.join(self.profile))\n+            profiler.dump_stats(os.path.join(self.profile, filename))\n+        else:\n+            print('directory and filename cannot be same', file=sys.stdout)","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-07-19T07:49:06Z","lastEditedAt":"2018-07-19T07:49:33Z","updatedAt":"2018-07-19T07:49:33Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMzYzMTE3Mw==","url":"https://github.com/coala/coala/pull/5599#discussion_r203631173","bodyText":"that's not what I mean ;) In both branches you use self.setup_profile, so in any case self.setup_profile will be executed. You can make the code a bit more compact by moving that out of the if clause:\nif ...\n   results = ... # I know this name is already used here, but choose some other good name or so.\nelse ...\n   results = ...\n\nself.setup_profile(profiler=profile)\nreturn results","diffHunk":"@@ -305,6 +314,36 @@ def log_message(self, log_message, timestamp=None, **kwargs):\n     def run(self, *args, dependency_results=None, **kwargs):\n         raise NotImplementedError\n \n+    def setup_profile(self, profiler=None):\n+        filename = '{}_{}.prof'.format(self.section.name, self.name)\n+        if self.profile is True:\n+            profiler.dump_stats(filename)\n+        elif os.path.exists(self.profile) and os.path.isdir(self.profile):\n+            profiler.dump_stats(os.path.join(self.profile, filename))\n+        elif not os.path.isfile(self.profile):\n+            os.mkdir(os.path.join(self.profile))\n+            profiler.dump_stats(os.path.join(self.profile, filename))\n+        else:\n+            print('directory and filename cannot be same', file=sys.stdout)\n+\n+    def profile_run(self, *args, profile=None, **kwargs):\n+        profile = cProfile.Profile() if profile is None else profile\n+        bear_results = profile.runcall(self.run, *args, **kwargs)\n+        if isinstance(bear_results, collections.Iterable):\n+            results = []\n+            iterator = iter(bear_results)\n+            while True:\n+                try:\n+                    result = profile.runcall(next, iterator)\n+                    results.append(result)\n+                except StopIteration:\n+                    break\n+            self.setup_profile(profiler=profile)\n+            return results\n+        else:\n+            self.setup_profile(profiler=profile)","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-07-19T07:52:06Z","lastEditedAt":null,"updatedAt":"2018-07-19T07:52:06Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMzYzMTcxNw==","url":"https://github.com/coala/coala/pull/5599#discussion_r203631717","bodyText":"you are talking about this filename = '{}_{}.prof'.format(self.section.name, self.name)\n\nNope, that is totally okay :) However, with the above code changes by you, my doubts may do not apply any more. So nvm for now :3","diffHunk":"@@ -305,6 +314,36 @@ def log_message(self, log_message, timestamp=None, **kwargs):\n     def run(self, *args, dependency_results=None, **kwargs):\n         raise NotImplementedError\n \n+    def setup_profile(self, profiler=None):\n+        filename = '{}_{}.prof'.format(self.section.name, self.name)\n+        if self.profile is True:\n+            profiler.dump_stats(filename)\n+        elif os.path.exists(self.profile) and os.path.isdir(self.profile):\n+            profiler.dump_stats(os.path.join(self.profile, filename))\n+        elif not os.path.isfile(self.profile):\n+            os.mkdir(os.path.join(self.profile))\n+            profiler.dump_stats(os.path.join(self.profile, filename))","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-07-19T07:54:04Z","lastEditedAt":null,"updatedAt":"2018-07-19T07:54:04Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMzYzMTk3NQ==","url":"https://github.com/coala/coala/pull/5599#discussion_r203631975","bodyText":"Ah right. Then keep the name profile, however, the docstring has to be corrected ;)","diffHunk":"@@ -273,6 +277,10 @@ def __init__(self,\n                               time limit, use 0.\n         :raises TypeError:    Raised when ``message_queue`` is no queue.\n         :raises RuntimeError: Raised when bear requirements are not fulfilled.\n+        :param debugger       A flag which enable debugger on those bears which\n+                              are specified in ``debug_bears`` settings.\n+        :param profiler       The Path or name of directory where profiler file","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-07-19T07:55:14Z","lastEditedAt":null,"updatedAt":"2018-07-19T07:55:14Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMzg2MTU1Nw==","url":"https://github.com/coala/coala/pull/5599#discussion_r203861557","bodyText":"The docstring doesn't really apply here. Since this is working directly on a bear, it's not tied to the debug_bears setting in the section. The step where debug_bears is parsed and bears are selected to be debugged happens before. Just say simply that if True, a debugger is started.","diffHunk":"@@ -276,6 +276,8 @@ def __init__(self,\n                               time limit, use 0.\n         :raises TypeError:    Raised when ``message_queue`` is no queue.\n         :raises RuntimeError: Raised when bear requirements are not fulfilled.\n+        :param debugger       A flag which enable debugger on those bears which\n+                              are specified in ``debug_bears`` settings.","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-07-19T20:31:13Z","lastEditedAt":null,"updatedAt":"2018-07-19T20:31:13Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMzg2MTYzMA==","url":"https://github.com/coala/coala/pull/5599#discussion_r203861630","bodyText":"missing colon after :param profile","diffHunk":"@@ -273,6 +276,10 @@ def __init__(self,\n                               time limit, use 0.\n         :raises TypeError:    Raised when ``message_queue`` is no queue.\n         :raises RuntimeError: Raised when bear requirements are not fulfilled.\n+        :param profile        A flag which enable profiler on bears of a","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-07-19T20:31:27Z","lastEditedAt":null,"updatedAt":"2018-07-19T20:31:27Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMzg2MjMwMQ==","url":"https://github.com/coala/coala/pull/5599#discussion_r203862301","bodyText":"--> A flag which enables profileing on this bear.\nIt's not really a flag then, is it? Since it accepts paths as well.\nNothing is mentioned that True is a valid value (a bit confusing is that you mention \"if none provided then...\", which suggests that None will do the trick)","diffHunk":"@@ -273,6 +276,10 @@ def __init__(self,\n                               time limit, use 0.\n         :raises TypeError:    Raised when ``message_queue`` is no queue.\n         :raises RuntimeError: Raised when bear requirements are not fulfilled.\n+        :param profile        A flag which enable profiler on bears of a\n+                              section. Contains path or name of directory where\n+                              profiled files will dump if none provided then\n+                              profiled files will dump in current directory.","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-07-19T20:33:57Z","lastEditedAt":null,"updatedAt":"2018-07-19T20:33:57Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMzg2MjM1NA==","url":"https://github.com/coala/coala/pull/5599#discussion_r203862354","bodyText":"bump","diffHunk":"@@ -283,6 +291,7 @@ def __init__(self,\n         self.message_queue = message_queue\n         self.timeout = timeout\n         self.debugger = debugger\n+        self.profile = profile","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-07-19T20:34:08Z","lastEditedAt":null,"updatedAt":"2018-07-19T20:34:08Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMzg2MjgwNQ==","url":"https://github.com/coala/coala/pull/5599#discussion_r203862805","bodyText":"which files are profiled? ;) --> the name has to become better still :)","diffHunk":"@@ -305,6 +313,34 @@ def log_message(self, log_message, timestamp=None, **kwargs):\n     def run(self, *args, dependency_results=None, **kwargs):\n         raise NotImplementedError\n \n+    def _dump_profiled_files(self, profiler):","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-07-19T20:35:53Z","lastEditedAt":null,"updatedAt":"2018-07-19T20:35:53Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMzg2MzA3OQ==","url":"https://github.com/coala/coala/pull/5599#discussion_r203863079","bodyText":"since you use path only here, you could inline it","diffHunk":"@@ -305,6 +313,34 @@ def log_message(self, log_message, timestamp=None, **kwargs):\n     def run(self, *args, dependency_results=None, **kwargs):\n         raise NotImplementedError\n \n+    def _dump_profiled_files(self, profiler):\n+        filename = '{}_{}.prof'.format(self.section.name, self.name)\n+        if self.profile is True:\n+            profiler.dump_stats(filename)\n+        else:\n+            if not (os.path.exists(self.profile) and\n+                    os.path.isdir(self.profile)):\n+                os.mkdir(os.path.join(self.profile))\n+            path = os.path.join(self.profile, filename)\n+            profiler.dump_stats(path)","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-07-19T20:36:48Z","lastEditedAt":null,"updatedAt":"2018-07-19T20:36:48Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMzg2Mzk1Nw==","url":"https://github.com/coala/coala/pull/5599#discussion_r203863957","bodyText":"the exception should be inside __init__. Don't allow to create bears that can't run.","diffHunk":"@@ -318,8 +354,13 @@ def run_bear_from_section(self, args, kwargs):\n             self.warn('The bear {} cannot be executed.'.format(\n                 self.name), str(err))\n             return\n-        if self.debugger:\n+        if self.profile and self.debugger:\n+            raise ValueError('Invalid argument passed, run debugger or '\n+                             'profiler one at a time.')","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-07-19T20:39:36Z","lastEditedAt":null,"updatedAt":"2018-07-19T20:39:36Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMzg2NjExNw==","url":"https://github.com/coala/coala/pull/5599#discussion_r203866117","bodyText":"a Performant Bears --> performant bears\nNever use \"a\" for plurals. A plural form without \"a\" is equivalent and a grammatical correct sentence.","diffHunk":"@@ -249,6 +249,15 @@ def default_arg_parser(formatter_class=None):\n         ' additional arguments. If used without arguments, all bears specified'\n         ' with --bears will be debugged (even implicit dependency bears).')\n \n+    outputs_group.add_argument(\n+        '--profile', nargs='?', const=True,\n+        help='Enable bear profiling with cProfile, that can help to create'\n+        ' a Performant Bears by profiling the Bear code. To specify where to'","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-07-19T20:47:11Z","lastEditedAt":null,"updatedAt":"2018-07-19T20:47:11Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMzg2NjI1Ng==","url":"https://github.com/coala/coala/pull/5599#discussion_r203866256","bodyText":"to to","diffHunk":"@@ -249,6 +249,15 @@ def default_arg_parser(formatter_class=None):\n         ' additional arguments. If used without arguments, all bears specified'\n         ' with --bears will be debugged (even implicit dependency bears).')\n \n+    outputs_group.add_argument(\n+        '--profile', nargs='?', const=True,\n+        help='Enable bear profiling with cProfile, that can help to create'\n+        ' a Performant Bears by profiling the Bear code. To specify where to'\n+        ' to dump the profile files, supply the path or the directory name, all'","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-07-19T20:47:40Z","lastEditedAt":null,"updatedAt":"2018-07-19T20:47:40Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMzg2NjM1OA==","url":"https://github.com/coala/coala/pull/5599#discussion_r203866358","bodyText":"all the bears","diffHunk":"@@ -249,6 +249,15 @@ def default_arg_parser(formatter_class=None):\n         ' additional arguments. If used without arguments, all bears specified'\n         ' with --bears will be debugged (even implicit dependency bears).')\n \n+    outputs_group.add_argument(\n+        '--profile', nargs='?', const=True,\n+        help='Enable bear profiling with cProfile, that can help to create'\n+        ' a Performant Bears by profiling the Bear code. To specify where to'\n+        ' to dump the profile files, supply the path or the directory name, all'\n+        ' the bear (even implicit dependency bears) in a section will get'","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-07-19T20:48:02Z","lastEditedAt":null,"updatedAt":"2018-07-19T20:48:02Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMzg2NjUzNA==","url":"https://github.com/coala/coala/pull/5599#discussion_r203866534","bodyText":"will get profile be profiled","diffHunk":"@@ -249,6 +249,15 @@ def default_arg_parser(formatter_class=None):\n         ' additional arguments. If used without arguments, all bears specified'\n         ' with --bears will be debugged (even implicit dependency bears).')\n \n+    outputs_group.add_argument(\n+        '--profile', nargs='?', const=True,\n+        help='Enable bear profiling with cProfile, that can help to create'\n+        ' a Performant Bears by profiling the Bear code. To specify where to'\n+        ' to dump the profile files, supply the path or the directory name, all'\n+        ' the bear (even implicit dependency bears) in a section will get'\n+        ' profile and there profile data will save in the specified directory'","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-07-19T20:48:40Z","lastEditedAt":null,"updatedAt":"2018-07-19T20:48:40Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMzg2NzYwMA==","url":"https://github.com/coala/coala/pull/5599#discussion_r203867600","bodyText":"I would place a period here so it's easier to read:\n\"In a section will be profiled. Profile data will be saved in the specified directory or path.\"","diffHunk":"@@ -249,6 +249,15 @@ def default_arg_parser(formatter_class=None):\n         ' additional arguments. If used without arguments, all bears specified'\n         ' with --bears will be debugged (even implicit dependency bears).')\n \n+    outputs_group.add_argument(\n+        '--profile', nargs='?', const=True,\n+        help='Enable bear profiling with cProfile, that can help to create'\n+        ' a Performant Bears by profiling the Bear code. To specify where to'\n+        ' to dump the profile files, supply the path or the directory name, all'\n+        ' the bear (even implicit dependency bears) in a section will get'\n+        ' profile and there profile data will save in the specified directory'","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-07-19T20:52:29Z","lastEditedAt":null,"updatedAt":"2018-07-19T20:52:29Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMzg2Nzc2OA==","url":"https://github.com/coala/coala/pull/5599#discussion_r203867768","bodyText":"Up to you: Maybe we shouldn't document that, people will understand what the naming scheme means once they see a profile dump.","diffHunk":"@@ -249,6 +249,15 @@ def default_arg_parser(formatter_class=None):\n         ' additional arguments. If used without arguments, all bears specified'\n         ' with --bears will be debugged (even implicit dependency bears).')\n \n+    outputs_group.add_argument(\n+        '--profile', nargs='?', const=True,\n+        help='Enable bear profiling with cProfile, that can help to create'\n+        ' a Performant Bears by profiling the Bear code. To specify where to'\n+        ' to dump the profile files, supply the path or the directory name, all'\n+        ' the bear (even implicit dependency bears) in a section will get'\n+        ' profile and there profile data will save in the specified directory'\n+        ' or the path with name format {section.name}_{bear.name}.prof.')","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNjczMDg1MA==","createdAt":"2018-07-20T05:24:57Z","content":"THUMBS_UP","user":{"login":"RaiVaibhav","name":"Vaibhav Rai"}}],"createdAt":"2018-07-19T20:53:03Z","lastEditedAt":null,"updatedAt":"2018-07-19T20:53:03Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMzg2ODIxOQ==","url":"https://github.com/coala/coala/pull/5599#discussion_r203868219","bodyText":"and what if it's false? ;) This is not so bullet proof, especially as coala allows words like \"yes\", \"nope\" ... as boolean values. I know we have done it for the debugger feature like this, but maybe now is the time to start thinking about that.","diffHunk":"@@ -312,6 +312,11 @@ def instantiate_bears(section,\n     :param console_printer:  Object to print messages on the console.\n     :return:                 The local and global bear instance lists.\n     \"\"\"\n+    profile = (False if 'profile' not in section or (\n+                section['profile'].value == 'False') else (","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-07-19T20:54:41Z","lastEditedAt":null,"updatedAt":"2018-07-19T20:54:41Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMzkzNjA3Nw==","url":"https://github.com/coala/coala/pull/5599#discussion_r203936077","bodyText":"Makman we are not handeling the ValueError in processing.py should I handle the ValueError so that other bear can initialize and  run?","diffHunk":"@@ -318,8 +354,13 @@ def run_bear_from_section(self, args, kwargs):\n             self.warn('The bear {} cannot be executed.'.format(\n                 self.name), str(err))\n             return\n-        if self.debugger:\n+        if self.profile and self.debugger:\n+            raise ValueError('Invalid argument passed, run debugger or '\n+                             'profiler one at a time.')","author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"reactions":[],"createdAt":"2018-07-20T04:37:49Z","lastEditedAt":null,"updatedAt":"2018-07-20T04:37:49Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMzk0MDQxNg==","url":"https://github.com/coala/coala/pull/5599#discussion_r203940416","bodyText":"Although this will be included in Profiling Interface doc but I want to be here as sometimes people like me use --help to get the information about flag 😛","diffHunk":"@@ -249,6 +249,15 @@ def default_arg_parser(formatter_class=None):\n         ' additional arguments. If used without arguments, all bears specified'\n         ' with --bears will be debugged (even implicit dependency bears).')\n \n+    outputs_group.add_argument(\n+        '--profile', nargs='?', const=True,\n+        help='Enable bear profiling with cProfile, that can help to create'\n+        ' a Performant Bears by profiling the Bear code. To specify where to'\n+        ' to dump the profile files, supply the path or the directory name, all'\n+        ' the bear (even implicit dependency bears) in a section will get'\n+        ' profile and there profile data will save in the specified directory'\n+        ' or the path with name format {section.name}_{bear.name}.prof.')","author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"reactions":[],"createdAt":"2018-07-20T05:24:26Z","lastEditedAt":"2018-07-20T05:24:47Z","updatedAt":"2018-07-20T05:24:47Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMDEwOTMzMQ==","url":"https://github.com/coala/coala/pull/5599#issuecomment-410109331","bodyText":"@RaiVaibhav , you might need the Windows trick that is being used at https://github.com/coala/coala-bears/pull/2523/files#diff-c3fb76c94bc425a8cdc7577d5d0e3e31R60","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzQ0ODUxMA==","createdAt":"2018-08-04T08:03:45Z","content":"THUMBS_DOWN","user":{"login":"jayvdb","name":"John Vandenberg"}}],"createdAt":"2018-08-03T00:40:43Z","lastEditedAt":null,"updatedAt":"2018-08-03T00:40:43Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMDEzNjE3Ng==","url":"https://github.com/coala/coala/pull/5599#issuecomment-410136176","bodyText":"shutil.rmtree will throw NotADirectoryError as I am checking for the file :)","diffHunk":null,"author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzQ0ODUwNw==","createdAt":"2018-08-04T08:03:40Z","content":"THUMBS_UP","user":{"login":"jayvdb","name":"John Vandenberg"}}],"createdAt":"2018-08-03T03:46:42Z","lastEditedAt":null,"updatedAt":"2018-08-03T03:46:42Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMDEzNjQwMA==","url":"https://github.com/coala/coala/pull/5599#issuecomment-410136400","bodyText":"I findout the reason of previous problem here  https://www.logilab.org/blogentry/17873\nSo instead of hardcoding I used NamedTemporaryFile + with so solve the problem.","diffHunk":null,"author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzQ0ODQ5NQ==","createdAt":"2018-08-04T08:03:02Z","content":"THUMBS_UP","user":{"login":"jayvdb","name":"John Vandenberg"}}],"createdAt":"2018-08-03T03:48:34Z","lastEditedAt":null,"updatedAt":"2018-08-03T03:48:34Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1530931456000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5601","number":5601,"title":"Linter: Add option to remove 0 number","body":"Add linter option to remove an error message,\nif line/column number is 0.\nCloses #5600\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":4,"createdAt":"2018-07-06T00:59:15Z","updatedAt":"2018-07-07T02:44:16Z","closedAt":"2018-07-07T00:18:59Z","state":"merged","user":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4"},"owner":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4"},"labels":[{"name":"size/XS","color":"00DE0F"},{"name":"type/bug","color":"e11d21"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5601","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMDY3NjAyMw==","url":"https://github.com/coala/coala/pull/5601#discussion_r200676023","bodyText":"We want the Result to be emitted, just without the line number.\nc.f. #5600 (comment) and sorry for the confusion.","diffHunk":"@@ -516,9 +528,12 @@ def process_output_regex(\n                 An iterator returning results.\n             \"\"\"\n             for match in re.finditer(output_regex, output):\n-                yield self._convert_output_regex_match_to_result(\n-                    match, filename, severity_map=severity_map,\n-                    result_message=result_message)\n+                try:","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-07-06T14:46:04Z","lastEditedAt":null,"updatedAt":"2018-07-06T14:46:04Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1531042095000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5606","number":5606,"title":"coalib/parsing : Changed \"comment_seperators\" to \"comment_separators\"","body":"This changes the variable name \"comment_seperators\" to \"comment_separators\" in files CliParsing.py and ConfParser.py.\nOld name is added as a deprecated argument in the corresponding files.\nFixes #5510\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":4,"createdAt":"2018-07-08T08:48:16Z","updatedAt":"2018-07-08T09:28:15Z","closedAt":"2018-07-08T09:28:15Z","state":"closed","user":{"login":"JameerBabu","avatarUrl":"https://avatars2.githubusercontent.com/u/20906632?v=4"},"owner":{"login":"JameerBabu","avatarUrl":"https://avatars2.githubusercontent.com/u/20906632?v=4"},"assignee":{"login":"JameerBabu","avatarUrl":"https://avatars2.githubusercontent.com/u/20906632?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/low","color":"207de5"},{"name":"importance/low","color":"70E870"},{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5606","comments":[]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1531042058000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5607","number":5607,"title":"coalib/parsing : Changing \"comment_seperators\" to \"comment_separators\"","body":"This changes the variable name \"comment_seperators\" to \"comment_separators\" in files CliParsing.py and ConfParser.py.\nOld name is added as a deprecated argument in the corresponding files.\nFixes #5510\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":4,"createdAt":"2018-07-08T09:20:52Z","updatedAt":"2018-07-08T09:27:38Z","closedAt":"2018-07-08T09:27:38Z","state":"closed","user":{"login":"JameerBabu","avatarUrl":"https://avatars2.githubusercontent.com/u/20906632?v=4"},"owner":{"login":"JameerBabu","avatarUrl":"https://avatars2.githubusercontent.com/u/20906632?v=4"},"assignee":{"login":"JameerBabu","avatarUrl":"https://avatars2.githubusercontent.com/u/20906632?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/low","color":"207de5"},{"name":"importance/low","color":"70E870"},{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5607","comments":[]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1532652769000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5608","number":5608,"title":"coalib/parsing : Changed \"comment_seperators\" to \"comment_separators\"","body":"This changes the variable name \"comment_seperators\" to \"comment_separators\" in files CliParsing.py and ConfParser.py.\nOld name is added as a deprecated argument in the corresponding files.\nFixes #5510\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":9,"createdAt":"2018-07-08T10:50:19Z","updatedAt":"2018-07-27T00:52:49Z","closedAt":"2018-07-27T00:51:37Z","state":"closed","user":{"login":"JameerBabu","avatarUrl":"https://avatars2.githubusercontent.com/u/20906632?v=4"},"owner":{"login":"JameerBabu","avatarUrl":"https://avatars2.githubusercontent.com/u/20906632?v=4"},"assignee":{"login":"JameerBabu","avatarUrl":"https://avatars2.githubusercontent.com/u/20906632?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/low","color":"207de5"},{"name":"importance/low","color":"70E870"},{"name":"process/wip","color":"fbca04"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5608","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDQwMzI4MDM2Ng==","url":"https://github.com/coala/coala/pull/5608#issuecomment-403280366","bodyText":"@JameerBabu, dont close pull requests. Ask for help on https://coala.io/chat if you need it","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-07-08T11:15:09Z","lastEditedAt":null,"updatedAt":"2018-07-08T11:15:09Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQwNjE1NjMxOA==","url":"https://github.com/coala/coala/pull/5608#issuecomment-406156318","bodyText":"Ask for help on gitter.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-07-19T05:07:20Z","lastEditedAt":null,"updatedAt":"2018-07-19T05:07:20Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQwODI3ODU1OA==","url":"https://github.com/coala/coala/pull/5608#issuecomment-408278558","bodyText":"You have not been asking for help on gitter as requested.\nYou have opened five pull requests for this, and are still not nearly close to understanding Python syntax for decorators.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-07-27T00:52:49Z","lastEditedAt":null,"updatedAt":"2018-07-27T00:52:49Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1531049670000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5609","number":5609,"title":"coalib/parsing : Changed \"comment_seperators\" to \"comment_separators\"","body":"This changes the variable name \"comment_seperators\" to \"comment_separators\" in files CliParsing.py and ConfParser.py.\nOld name is added as a deprecated argument in the corresponding files.\nFixes #5510\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":6,"createdAt":"2018-07-08T11:19:21Z","updatedAt":"2018-07-08T11:34:30Z","closedAt":"2018-07-08T11:29:12Z","state":"closed","user":{"login":"JameerBabu","avatarUrl":"https://avatars2.githubusercontent.com/u/20906632?v=4"},"owner":{"login":"JameerBabu","avatarUrl":"https://avatars2.githubusercontent.com/u/20906632?v=4"},"assignee":{"login":"JameerBabu","avatarUrl":"https://avatars2.githubusercontent.com/u/20906632?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/low","color":"207de5"},{"name":"importance/low","color":"70E870"},{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5609","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDQwMzI4MTA2Ng==","url":"https://github.com/coala/coala/pull/5609#issuecomment-403281066","bodyText":"#5608 is your pull request.\nDo not close and open new pull requests.\nRepeat and you'll be banned from @coala .","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-07-08T11:29:12Z","lastEditedAt":null,"updatedAt":"2018-07-08T11:29:12Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQwMzI4MTM5MQ==","url":"https://github.com/coala/coala/pull/5609#issuecomment-403281391","bodyText":"@jayvdb  I am really sorry for that . I will never do it in the feature.","diffHunk":null,"author":{"login":"JameerBabu","avatarUrl":"https://avatars2.githubusercontent.com/u/20906632?v=4","name":"Jameer Babu"},"createdAt":"2018-07-08T11:34:30Z","lastEditedAt":null,"updatedAt":"2018-07-08T11:34:30Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1533270038000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5610","number":5610,"title":"Bears.py: Add Debugger Setting toolset","body":"Add the code of Settings inspection\ntoolset so that user can access the\nsettings of a Bear in Debug environment\nand add initial test.\nRelated to #5545","comments":11,"createdAt":"2018-07-08T14:11:00Z","updatedAt":"2018-08-03T04:20:38Z","closedAt":"2018-07-27T09:32:03Z","state":"merged","user":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4"},"owner":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4"},"labels":[{"name":"size/S","color":"B1CF0A"},{"name":"status/ci-approved","color":"ededed"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5610","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMTQ2ODEyNg==","url":"https://github.com/coala/coala/pull/5610#discussion_r201468126","bodyText":"why not just declaring an optional argument bear=None? Then you don't need to pop it off from kwargs","diffHunk":"@@ -26,6 +26,11 @@\n \n class Debugger(pdb.Pdb):\n \n+    def __init__(self, *args, **kwargs):\n+        self.bear = kwargs.get('bear', None)\n+        kwargs.pop('bear', None)","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNjI2NDAxMQ==","createdAt":"2018-07-10T20:30:51Z","content":"THUMBS_UP","user":{"login":"RaiVaibhav","name":"Vaibhav Rai"}}],"createdAt":"2018-07-10T19:36:33Z","lastEditedAt":null,"updatedAt":"2018-07-10T19:36:33Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMTQ3MDU3MA==","url":"https://github.com/coala/coala/pull/5610#discussion_r201470570","bodyText":"that should be\nself.message('%s = %r' % (param, section_params_dict[param] if param in section_params_dict else md.optional_params[param][2]))","diffHunk":"@@ -34,6 +39,19 @@ def do_quit(self, arg):\n     do_q = do_quit\n     do_exit = do_quit\n \n+    def do_settings(self, arg):\n+        md = self.bear.get_metadata()\n+        section_params_dict = md.create_params_from_section(self.bear.section)\n+        for param in md.non_optional_params:\n+            self.message('%s = %r' % (param, section_params_dict[param]))\n+        for param in md.optional_params:\n+            if param in section_params_dict:\n+                self.message('%s = %r' % (param, section_params_dict[param]))\n+            else:\n+                self.message('%s = %r' % (param,\n+                                          md.optional_params[param][2]))","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNjI2MzkwMg==","createdAt":"2018-07-10T20:29:08Z","content":"THUMBS_UP","user":{"login":"RaiVaibhav","name":"Vaibhav Rai"}}],"createdAt":"2018-07-10T19:45:50Z","lastEditedAt":null,"updatedAt":"2018-07-10T19:45:50Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMTgzNjk3NQ==","url":"https://github.com/coala/coala/pull/5610#discussion_r201836975","bodyText":"redundant braces after else","diffHunk":"@@ -34,6 +38,17 @@ def do_quit(self, arg):\n     do_q = do_quit\n     do_exit = do_quit\n \n+    def do_settings(self, arg):\n+        md = self.bear.get_metadata()\n+        section_params_dict = md.create_params_from_section(self.bear.section)\n+        for param in md.non_optional_params:\n+            self.message('%s = %r' % (param, section_params_dict[param]))\n+        for param in md.optional_params:\n+            self.message('%s = %r' % (param, section_params_dict[param] if\n+                                      param in section_params_dict else (","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-07-11T20:58:44Z","lastEditedAt":null,"updatedAt":"2018-07-11T20:58:44Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMTgzNzc4Ng==","url":"https://github.com/coala/coala/pull/5610#discussion_r201837786","bodyText":"with_self_onscope?","diffHunk":"@@ -489,6 +498,16 @@ def test_debug_run_with_no_return(self, runcall):\n         kwargs = {}\n         self.assertIsNone(my_bear.run_bear_from_section(args, kwargs))\n \n+    def test_debugger_settings_with_self_onscope(self):","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-07-11T21:01:27Z","lastEditedAt":null,"updatedAt":"2018-07-11T21:01:27Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMTgzNzk5Nw==","url":"https://github.com/coala/coala/pull/5610#discussion_r201837997","bodyText":"maybe put bear=None after *args?","diffHunk":"@@ -26,6 +26,10 @@\n \n class Debugger(pdb.Pdb):\n \n+    def __init__(self, bear=None, *args, **kwargs):","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-07-11T21:02:10Z","lastEditedAt":null,"updatedAt":"2018-07-11T21:02:10Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMjU0MDU0MQ==","url":"https://github.com/coala/coala/pull/5610#discussion_r202540541","bodyText":"when there bear object is none i.e., debug_run(self.run, Debugger(bear=None), *args, **kwargs) then if use tries to use the settings commands it will give a message \"Name 'settings' is not defined.\" (self.error is actually print function so it will be like a error message)","diffHunk":"@@ -34,6 +38,21 @@ def do_quit(self, arg):\n     do_q = do_quit\n     do_exit = do_quit\n \n+    def do_settings(self, arg):\n+        if self.bear is not None:\n+            md = self.bear.get_metadata()\n+            section_params_dict = md.create_params_from_section(\n+                                  self.bear.section)\n+            for param in md.non_optional_params:\n+                self.message('%s = %r' % (param, section_params_dict[param]))\n+            for param in md.optional_params:\n+                self.message('%s = %r' % (param, section_params_dict[param] if\n+                                          param in section_params_dict else\n+                                          md.optional_params[param][2]))\n+            return 1\n+        else:\n+            self.error(\"Name 'settings' is not defined.\")","author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"reactions":[],"createdAt":"2018-07-15T11:38:13Z","lastEditedAt":"2018-07-15T11:39:33Z","updatedAt":"2018-07-15T11:39:33Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMjg4ODk5Mg==","url":"https://github.com/coala/coala/pull/5610#discussion_r202888992","bodyText":"Can't changed to debug_run(self.run, *args, Debugger(bear=self), **kwargs) for python3.4 during running pytest it will throw SyntaxError SyntaxError: only named arguments may follow *expression","diffHunk":"@@ -319,7 +338,7 @@ def run_bear_from_section(self, args, kwargs):\n                 self.name), str(err))\n             return\n         if self.debugger:\n-            return debug_run(self.run, Debugger(), *args, **kwargs)\n+            return debug_run(self.run, Debugger(bear=self), *args, **kwargs)","author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNjcxNzM3NA==","createdAt":"2018-07-19T21:00:26Z","content":"THUMBS_UP","user":{"login":"Makman2","name":"Mischa Krüger"}}],"createdAt":"2018-07-17T04:06:21Z","lastEditedAt":null,"updatedAt":"2018-07-17T04:06:21Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNDExNjg5Mw==","url":"https://github.com/coala/coala/pull/5610#discussion_r204116893","bodyText":"invoke super.__init__ always as soon as possible.","diffHunk":"@@ -26,6 +26,10 @@\n \n class Debugger(pdb.Pdb):\n \n+    def __init__(self, *args, bear=None, **kwargs):\n+        self.bear = bear\n+        super(Debugger, self).__init__(*args, **kwargs)","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-07-20T17:33:30Z","lastEditedAt":null,"updatedAt":"2018-07-20T17:33:30Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNDExNzMxOA==","url":"https://github.com/coala/coala/pull/5610#discussion_r204117318","bodyText":"It's a good habit to not run into weird states of the object, since you don't know what might happen to self.bear in the meanwhile. C++ for example enforces you to initialize other supers first (a slightly different syntax though), or Java does the same, which is often a good decision.","diffHunk":"@@ -26,6 +26,10 @@\n \n class Debugger(pdb.Pdb):\n \n+    def __init__(self, *args, bear=None, **kwargs):\n+        self.bear = bear\n+        super(Debugger, self).__init__(*args, **kwargs)","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-07-20T17:35:06Z","lastEditedAt":null,"updatedAt":"2018-07-20T17:35:06Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNDEyMjc1Mw==","url":"https://github.com/coala/coala/pull/5610#discussion_r204122753","bodyText":"If not passing a bear is an erroneous state, raise an exception while instantiating the debugger. This is easiest and will always require you to initialize the debugger properly.","diffHunk":"@@ -34,6 +38,21 @@ def do_quit(self, arg):\n     do_q = do_quit\n     do_exit = do_quit\n \n+    def do_settings(self, arg):\n+        if self.bear is not None:\n+            md = self.bear.get_metadata()\n+            section_params_dict = md.create_params_from_section(\n+                                  self.bear.section)\n+            for param in md.non_optional_params:\n+                self.message('%s = %r' % (param, section_params_dict[param]))\n+            for param in md.optional_params:\n+                self.message('%s = %r' % (param, section_params_dict[param] if\n+                                          param in section_params_dict else\n+                                          md.optional_params[param][2]))\n+            return 1\n+        else:\n+            self.error(\"Name 'settings' is not defined.\")","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNjc2NTg1MQ==","createdAt":"2018-07-20T18:20:57Z","content":"THUMBS_UP","user":{"login":"RaiVaibhav","name":"Vaibhav Rai"}}],"createdAt":"2018-07-20T17:53:54Z","lastEditedAt":null,"updatedAt":"2018-07-20T17:53:54Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNDEyNDk1OQ==","url":"https://github.com/coala/coala/pull/5610#discussion_r204124959","bodyText":"without checking that the settings are actually printed this test is not very representative^^","diffHunk":"@@ -489,6 +498,18 @@ def test_debug_run_with_no_return(self, runcall):\n         kwargs = {}\n         self.assertIsNone(my_bear.run_bear_from_section(args, kwargs))\n \n+    def test_do_settings(self):\n+        section = Section('name', None)\n+        section.append(Setting('x', '85'))\n+        section.append(Setting('y', 'kbc3'))\n+        section.append(Setting('z', '75'))\n+        my_bear = TestOneBear(section, self.queue)\n+        dbg = Debugger(bear=my_bear)\n+        arg = ()\n+        self.assertEqual(dbg.do_settings(arg), 1)","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-07-20T18:01:58Z","lastEditedAt":null,"updatedAt":"2018-07-20T18:01:58Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNDEyOTcxMg==","url":"https://github.com/coala/coala/pull/5610#discussion_r204129712","bodyText":"@Makman2  I think thats why we created a ideal test DebugBearsTest ?, I will try with mock and make test more effective","diffHunk":"@@ -489,6 +498,18 @@ def test_debug_run_with_no_return(self, runcall):\n         kwargs = {}\n         self.assertIsNone(my_bear.run_bear_from_section(args, kwargs))\n \n+    def test_do_settings(self):\n+        section = Section('name', None)\n+        section.append(Setting('x', '85'))\n+        section.append(Setting('y', 'kbc3'))\n+        section.append(Setting('z', '75'))\n+        my_bear = TestOneBear(section, self.queue)\n+        dbg = Debugger(bear=my_bear)\n+        arg = ()\n+        self.assertEqual(dbg.do_settings(arg), 1)","author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"reactions":[],"createdAt":"2018-07-20T18:19:34Z","lastEditedAt":null,"updatedAt":"2018-07-20T18:19:34Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNDQ5ODE2Nw==","url":"https://github.com/coala/coala/pull/5610#discussion_r204498167","bodyText":"since bear is actually not optional, you should remove the default value None","diffHunk":"@@ -26,6 +26,14 @@\n \n class Debugger(pdb.Pdb):\n \n+    def __init__(self, *args, bear=None, **kwargs):","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-07-23T17:54:32Z","lastEditedAt":null,"updatedAt":"2018-07-23T17:54:32Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNDQ5ODQ3Mw==","url":"https://github.com/coala/coala/pull/5610#discussion_r204498473","bodyText":"I would actually just say \"Bear missing\". That is short and easy to understand :P","diffHunk":"@@ -26,6 +26,14 @@\n \n class Debugger(pdb.Pdb):\n \n+    def __init__(self, *args, bear=None, **kwargs):\n+        if bear is None:\n+            raise ValueError('Invalid argument passed. Bear object '\n+                             'must passed as a argument for inspecting bear '\n+                             'settings in debugging environment.')","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-07-23T17:55:27Z","lastEditedAt":null,"updatedAt":"2018-07-23T17:55:27Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNDQ5ODU4Ng==","url":"https://github.com/coala/coala/pull/5610#discussion_r204498586","bodyText":"Maybe make even a type-check: if not isinstance(bear, Bear)","diffHunk":"@@ -26,6 +26,14 @@\n \n class Debugger(pdb.Pdb):\n \n+    def __init__(self, *args, bear=None, **kwargs):\n+        if bear is None:","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-07-23T17:55:49Z","lastEditedAt":null,"updatedAt":"2018-07-23T17:55:49Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNDg5OTUzNA==","url":"https://github.com/coala/coala/pull/5610#discussion_r204899534","bodyText":"bear should be before *args","diffHunk":"@@ -26,6 +26,12 @@\n \n class Debugger(pdb.Pdb):\n \n+    def __init__(self, *args, bear, **kwargs):","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-07-24T20:27:23Z","lastEditedAt":null,"updatedAt":"2018-07-24T20:27:23Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNDg5OTY0MQ==","url":"https://github.com/coala/coala/pull/5610#discussion_r204899641","bodyText":"hm now it's not really missing, but it's not a bear ^^","diffHunk":"@@ -26,6 +26,12 @@\n \n class Debugger(pdb.Pdb):\n \n+    def __init__(self, *args, bear, **kwargs):\n+        if not isinstance(bear, Bear):\n+            raise ValueError('Bear missing.')","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-07-24T20:27:49Z","lastEditedAt":null,"updatedAt":"2018-07-24T20:27:49Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMDE0MDE1MQ==","url":"https://github.com/coala/coala/pull/5610#issuecomment-410140151","bodyText":"Related to #1101","diffHunk":null,"author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"reactions":[],"createdAt":"2018-08-03T04:20:38Z","lastEditedAt":null,"updatedAt":"2018-08-03T04:20:38Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1531111923000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5611","number":5611,"title":"Newcomers_Guide.rst: display message as note block","body":"For short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":3,"createdAt":"2018-07-08T15:58:18Z","updatedAt":"2018-07-09T04:52:03Z","closedAt":"2018-07-09T03:28:37Z","state":"closed","user":{"login":null,"avatarUrl":null},"owner":{"login":null,"avatarUrl":null},"labels":[{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5611","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDQwMzM1OTI3OQ==","url":"https://github.com/coala/coala/pull/5611#issuecomment-403359279","bodyText":"@lixun509 , please do not close PRs or delete your repository.\nAsk for help if you encounter a problem.\nRead https://coala.io/newcomer and https://coala.io/git very carefully.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-07-09T04:52:02Z","lastEditedAt":null,"updatedAt":"2018-07-09T04:52:02Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1531121661000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5612","number":5612,"title":"Useful_Links.rst: Change Basic rST link","body":"The new link points to working reST documentation page.\nCloses #5604\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":7,"createdAt":"2018-07-08T16:41:10Z","updatedAt":"2018-07-09T07:34:21Z","closedAt":"2018-07-09T07:34:08Z","state":"merged","user":{"login":"m3rc3n4ry","avatarUrl":"https://avatars2.githubusercontent.com/u/29359259?v=4"},"owner":{"login":"m3rc3n4ry","avatarUrl":"https://avatars2.githubusercontent.com/u/29359259?v=4"},"assignee":{"login":"m3rc3n4ry","avatarUrl":"https://avatars2.githubusercontent.com/u/29359259?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5612","comments":[]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1531738189000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5616","number":5616,"title":".travis.yml: Use bears master","body":"Related to coala/meta#123\nAlso removes the GitCommitBear hack around\ncoala/coala-bears#1037","comments":7,"createdAt":"2018-07-09T12:25:05Z","updatedAt":"2018-07-16T10:49:49Z","closedAt":"2018-07-16T10:45:20Z","state":"merged","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5616","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMTA3MDIyMQ==","url":"https://github.com/coala/coala/pull/5616#discussion_r201070221","bodyText":"Btw, I still quite don't understand about this. Doesn't pip install coala-bears[alldeps] --pre -U already install the master branch of coala-bears ?","diffHunk":"@@ -109,12 +110,8 @@ script:\n   - py.test\n   - python setup.py bdist_wheel\n   - pip install ./dist/coala-*.whl\n-  - pip install coala-bears[alldeps] --pre -U\n-  # https://github.com/coala/coala-bears/issues/1037\n-  - >\n-    if [[ \"$TRAVIS_PULL_REQUEST\" != \"false\" ]]; then\n-      sed -i.bak '/bears = GitCommitBear/d' .coafile\n-    fi\n+  - curl -fsSL -o coala-bears.zip $BEARS_ZIP_URL/master\n+  - pip install coala-bears.zip[alldeps] --pre -U","author":{"login":"refeed","avatarUrl":"https://avatars1.githubusercontent.com/u/20320125?v=4","name":"Rafid Aslam"},"reactions":[],"createdAt":"2018-07-09T16:41:26Z","lastEditedAt":null,"updatedAt":"2018-07-09T16:41:26Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMTA3NzE3NQ==","url":"https://github.com/coala/coala/pull/5616#discussion_r201077175","bodyText":"No. It installs the pre-release in pypi, from January 2018.\nWe still are not ready to do pre-releases yet, with coala-utils and dependency-management still needing more work and need to be released first.","diffHunk":"@@ -109,12 +110,8 @@ script:\n   - py.test\n   - python setup.py bdist_wheel\n   - pip install ./dist/coala-*.whl\n-  - pip install coala-bears[alldeps] --pre -U\n-  # https://github.com/coala/coala-bears/issues/1037\n-  - >\n-    if [[ \"$TRAVIS_PULL_REQUEST\" != \"false\" ]]; then\n-      sed -i.bak '/bears = GitCommitBear/d' .coafile\n-    fi\n+  - curl -fsSL -o coala-bears.zip $BEARS_ZIP_URL/master\n+  - pip install coala-bears.zip[alldeps] --pre -U","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNjE5MDA3Ng==","createdAt":"2018-07-09T17:06:37Z","content":"THUMBS_UP","user":{"login":"refeed","name":"Rafid Aslam"}}],"createdAt":"2018-07-09T17:02:54Z","lastEditedAt":null,"updatedAt":"2018-07-09T17:02:54Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1531149386000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5617","number":5617,"title":"travis.yml: Remove GitHub merge commit workaround","body":"For short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":2,"createdAt":"2018-07-09T13:53:40Z","updatedAt":"2018-07-09T15:16:26Z","closedAt":"2018-07-09T15:16:26Z","state":"closed","user":{"login":"kriti21","avatarUrl":"https://avatars3.githubusercontent.com/u/19872082?v=4"},"owner":{"login":"kriti21","avatarUrl":"https://avatars3.githubusercontent.com/u/19872082?v=4"},"labels":[{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5617","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDQwMzUwMTkzOQ==","url":"https://github.com/coala/coala/pull/5617#issuecomment-403501939","bodyText":"@jayvdb Please review","diffHunk":null,"author":{"login":"kriti21","avatarUrl":"https://avatars3.githubusercontent.com/u/19872082?v=4","name":"Kriti Rohilla"},"createdAt":"2018-07-09T14:38:42Z","lastEditedAt":null,"updatedAt":"2018-07-09T14:38:42Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQwMzUxNTA5NQ==","url":"https://github.com/coala/coala/pull/5617#issuecomment-403515095","bodyText":"Duplicate of #5616","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-07-09T15:16:26Z","lastEditedAt":null,"updatedAt":"2018-07-09T15:16:26Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1531199399000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5618","number":5618,"title":"Replace memoized_property with cached_property","body":"For short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":2,"createdAt":"2018-07-09T14:41:44Z","updatedAt":"2018-07-10T05:09:59Z","closedAt":"2018-07-09T23:04:55Z","state":"merged","user":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4"},"owner":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4"},"labels":[],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5618","comments":[]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1532688853000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5620","number":5620,"title":"Debug_bears.rst: Add Debugger Settings docs","body":"Related to #1101","comments":14,"createdAt":"2018-07-10T12:01:43Z","updatedAt":"2018-07-27T10:54:13Z","closedAt":"2018-07-27T10:54:06Z","state":"merged","user":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4"},"owner":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4"},"labels":[{"name":"size/XS","color":"00DE0F"},{"name":"status/blocked","color":"e11d21"},{"name":"status/ci-approved","color":"ededed"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5620","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMTQ3Mzk2NA==","url":"https://github.com/coala/coala/pull/5620#discussion_r201473964","bodyText":"I would rather call it \"debugger features\" or similar, and then you can write up in the future all coming tweaks to enhance the debugging experience ;)","diffHunk":"@@ -122,3 +122,74 @@ Or to debug all bears specified by ``bears`` setting:\n     bears = PEP8Bear,MypyBear\n     files = <filename>\n     debug_bears = True\n+\n+Inspect Bear settings","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-07-10T19:58:41Z","lastEditedAt":null,"updatedAt":"2018-07-10T19:58:41Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMTQ3NDE1MA==","url":"https://github.com/coala/coala/pull/5620#discussion_r201474150","bodyText":"That sounds like that settings is common in pdb and has been included now because it's not default.\nYou should emphasize that this is a new command people can use to see quickly the settings passed.","diffHunk":"@@ -122,3 +122,74 @@ Or to debug all bears specified by ``bears`` setting:\n     bears = PEP8Bear,MypyBear\n     files = <filename>\n     debug_bears = True\n+\n+Inspect Bear settings\n+---------------------\n+\n+External pdb command ``settings`` has been included to inspect the bear","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-07-10T19:59:21Z","lastEditedAt":null,"updatedAt":"2018-07-10T19:59:21Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMTQ3NDM3Nw==","url":"https://github.com/coala/coala/pull/5620#discussion_r201474377","bodyText":"--> displays (no apostrophe)","diffHunk":"@@ -122,3 +122,74 @@ Or to debug all bears specified by ``bears`` setting:\n     bears = PEP8Bear,MypyBear\n     files = <filename>\n     debug_bears = True\n+\n+Inspect Bear settings\n+---------------------\n+\n+External pdb command ``settings`` has been included to inspect the bear\n+settings in the debugging environment.(``settings`` command display's the","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-07-10T20:00:09Z","lastEditedAt":null,"updatedAt":"2018-07-10T20:00:09Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMTQ3NDUyOQ==","url":"https://github.com/coala/coala/pull/5620#discussion_r201474529","bodyText":"The text in the braces shouldn't be in braces, it's essential and not a side note.","diffHunk":"@@ -122,3 +122,74 @@ Or to debug all bears specified by ``bears`` setting:\n     bears = PEP8Bear,MypyBear\n     files = <filename>\n     debug_bears = True\n+\n+Inspect Bear settings\n+---------------------\n+\n+External pdb command ``settings`` has been included to inspect the bear\n+settings in the debugging environment.(``settings`` command display's the\n+updated setting of a Bear)","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-07-10T20:00:42Z","lastEditedAt":null,"updatedAt":"2018-07-10T20:00:42Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMTQ3NDk5OA==","url":"https://github.com/coala/coala/pull/5620#discussion_r201474998","bodyText":"-> Below","diffHunk":"@@ -122,3 +122,74 @@ Or to debug all bears specified by ``bears`` setting:\n     bears = PEP8Bear,MypyBear\n     files = <filename>\n     debug_bears = True\n+\n+Inspect Bear settings\n+---------------------\n+\n+External pdb command ``settings`` has been included to inspect the bear\n+settings in the debugging environment.(``settings`` command display's the\n+updated setting of a Bear)\n+\n+Bellow is the code of simple CharCheckBear which check whether the","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-07-10T20:02:14Z","lastEditedAt":null,"updatedAt":"2018-07-10T20:02:14Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMTQ3NTIzNA==","url":"https://github.com/coala/coala/pull/5620#discussion_r201475234","bodyText":"missing single backtick after message","diffHunk":"@@ -122,3 +122,74 @@ Or to debug all bears specified by ``bears`` setting:\n     bears = PEP8Bear,MypyBear\n     files = <filename>\n     debug_bears = True\n+\n+Inspect Bear settings\n+---------------------\n+\n+External pdb command ``settings`` has been included to inspect the bear\n+settings in the debugging environment.(``settings`` command display's the\n+updated setting of a Bear)\n+\n+Bellow is the code of simple CharCheckBear which check whether the\n+passed message contains character more than 79.\n+\n+.. code:: python\n+\n+    import logging\n+\n+    from coalib.bears.LocalBear import LocalBear\n+\n+\n+    class CharCheckBear(LocalBear):\n+        def run(self, filename, file, message: str, line_length: int = 79):\n+            \"\"\"\n+            Detect if a passed string contain characters more than 79.\n+\n+            :param message:\n+                enter the message.\n+            \"\"\"\n+            if len(message)<=79:\n+                yield self.new_result(message=message, file=filename)\n+            else:\n+                yield self.new_result(message='message contains character '\n+                                              'more than 79', file=filename)\n+\n+In the above example ``line_length`` is optional and ``message` is non optional","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-07-10T20:03:06Z","lastEditedAt":null,"updatedAt":"2018-07-10T20:03:06Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMTQ3NTQ2NQ==","url":"https://github.com/coala/coala/pull/5620#discussion_r201475465","bodyText":"Wouldn't put coala into backticks, it's rather a name than a code term here","diffHunk":"@@ -122,3 +122,74 @@ Or to debug all bears specified by ``bears`` setting:\n     bears = PEP8Bear,MypyBear\n     files = <filename>\n     debug_bears = True\n+\n+Inspect Bear settings\n+---------------------\n+\n+External pdb command ``settings`` has been included to inspect the bear\n+settings in the debugging environment.(``settings`` command display's the\n+updated setting of a Bear)\n+\n+Bellow is the code of simple CharCheckBear which check whether the\n+passed message contains character more than 79.\n+\n+.. code:: python\n+\n+    import logging\n+\n+    from coalib.bears.LocalBear import LocalBear\n+\n+\n+    class CharCheckBear(LocalBear):\n+        def run(self, filename, file, message: str, line_length: int = 79):\n+            \"\"\"\n+            Detect if a passed string contain characters more than 79.\n+\n+            :param message:\n+                enter the message.\n+            \"\"\"\n+            if len(message)<=79:\n+                yield self.new_result(message=message, file=filename)\n+            else:\n+                yield self.new_result(message='message contains character '\n+                                              'more than 79', file=filename)\n+\n+In the above example ``line_length`` is optional and ``message` is non optional\n+setting of a CharCheckBear. After invoking debugger on CharCheckBear ``coala``","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-07-10T20:03:52Z","lastEditedAt":null,"updatedAt":"2018-07-10T20:03:52Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMTQ3NTczOQ==","url":"https://github.com/coala/coala/pull/5620#discussion_r201475739","bodyText":"line_length is not used\nThis example doesn't round up so nicely, SpaceConsistencyBear is similar, and what's especially weird is that you lint on message, not on file ;) Please provide a better example 👍","diffHunk":"@@ -122,3 +122,74 @@ Or to debug all bears specified by ``bears`` setting:\n     bears = PEP8Bear,MypyBear\n     files = <filename>\n     debug_bears = True\n+\n+Inspect Bear settings\n+---------------------\n+\n+External pdb command ``settings`` has been included to inspect the bear\n+settings in the debugging environment.(``settings`` command display's the\n+updated setting of a Bear)\n+\n+Bellow is the code of simple CharCheckBear which check whether the\n+passed message contains character more than 79.\n+\n+.. code:: python\n+\n+    import logging\n+\n+    from coalib.bears.LocalBear import LocalBear\n+\n+\n+    class CharCheckBear(LocalBear):\n+        def run(self, filename, file, message: str, line_length: int = 79):\n+            \"\"\"\n+            Detect if a passed string contain characters more than 79.\n+\n+            :param message:\n+                enter the message.\n+            \"\"\"\n+            if len(message)<=79:\n+                yield self.new_result(message=message, file=filename)\n+            else:\n+                yield self.new_result(message='message contains character '\n+                                              'more than 79', file=filename)","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNjI5NTAxNA==","createdAt":"2018-07-11T10:50:11Z","content":"LAUGH","user":{"login":"RaiVaibhav","name":"Vaibhav Rai"}},{"id":"MDg6UmVhY3Rpb24yNjI5NTAxOQ==","createdAt":"2018-07-11T10:50:15Z","content":"THUMBS_UP","user":{"login":"RaiVaibhav","name":"Vaibhav Rai"}}],"createdAt":"2018-07-10T20:04:49Z","lastEditedAt":null,"updatedAt":"2018-07-10T20:04:49Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMTQ3NjIyMQ==","url":"https://github.com/coala/coala/pull/5620#discussion_r201476221","bodyText":"hmmm just recognized, \"Voldemort\" is maybe not good path component here ;) but we can change that afterwards, since untouched parts of the file has the same paths.","diffHunk":"@@ -122,3 +122,74 @@ Or to debug all bears specified by ``bears`` setting:\n     bears = PEP8Bear,MypyBear\n     files = <filename>\n     debug_bears = True\n+\n+Inspect Bear settings\n+---------------------\n+\n+External pdb command ``settings`` has been included to inspect the bear\n+settings in the debugging environment.(``settings`` command display's the\n+updated setting of a Bear)\n+\n+Bellow is the code of simple CharCheckBear which check whether the\n+passed message contains character more than 79.\n+\n+.. code:: python\n+\n+    import logging\n+\n+    from coalib.bears.LocalBear import LocalBear\n+\n+\n+    class CharCheckBear(LocalBear):\n+        def run(self, filename, file, message: str, line_length: int = 79):\n+            \"\"\"\n+            Detect if a passed string contain characters more than 79.\n+\n+            :param message:\n+                enter the message.\n+            \"\"\"\n+            if len(message)<=79:\n+                yield self.new_result(message=message, file=filename)\n+            else:\n+                yield self.new_result(message='message contains character '\n+                                              'more than 79', file=filename)\n+\n+In the above example ``line_length`` is optional and ``message` is non optional\n+setting of a CharCheckBear. After invoking debugger on CharCheckBear ``coala``\n+will first ask the value of all unpassed non optional setting i.e, ``message``\n+in our case and after debugger will get invoke on ``run()`` method of\n+CharCheckBear, pdb ``settings`` command will be used to display the updated\n+optional and non optional settings of a Bear in debugging environment i.e.,\n+\n+::\n+\n+    Please enter a value for the setting \"message\" (enter the message.) needed\n+    by CharCheckBear for section \"cli\":\n+    Hello World\n+    [DEBUG][17:25:09] Platform Linux -- Python 3.6.5, coalib\n+    0.12.0.dev99999999999999\n+    Executing section cli...\n+    [DEBUG][17:25:09] Files that will be checked:\n+    /home/Voldemort/test/mytest.py\n+    [DEBUG][17:25:09] coala is run only on changed files, bears' log messages\n+    from previous runs may not appear. You may use the `--flush-cache` flag to\n+    see them.\n+    [DEBUG][17:25:09] Running bear CharCheckBear...\n+    > /home/Voldemort/coala-bears/bears/general/CharCheckBear.py(14)run()","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-07-10T20:06:36Z","lastEditedAt":null,"updatedAt":"2018-07-10T20:06:36Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMTQ3NjQ5MA==","url":"https://github.com/coala/coala/pull/5620#discussion_r201476490","bodyText":"I would execute q to quit the debugger and wouldn't print the result here, not relevant","diffHunk":"@@ -122,3 +122,74 @@ Or to debug all bears specified by ``bears`` setting:\n     bears = PEP8Bear,MypyBear\n     files = <filename>\n     debug_bears = True\n+\n+Inspect Bear settings\n+---------------------\n+\n+External pdb command ``settings`` has been included to inspect the bear\n+settings in the debugging environment.(``settings`` command display's the\n+updated setting of a Bear)\n+\n+Bellow is the code of simple CharCheckBear which check whether the\n+passed message contains character more than 79.\n+\n+.. code:: python\n+\n+    import logging\n+\n+    from coalib.bears.LocalBear import LocalBear\n+\n+\n+    class CharCheckBear(LocalBear):\n+        def run(self, filename, file, message: str, line_length: int = 79):\n+            \"\"\"\n+            Detect if a passed string contain characters more than 79.\n+\n+            :param message:\n+                enter the message.\n+            \"\"\"\n+            if len(message)<=79:\n+                yield self.new_result(message=message, file=filename)\n+            else:\n+                yield self.new_result(message='message contains character '\n+                                              'more than 79', file=filename)\n+\n+In the above example ``line_length`` is optional and ``message` is non optional\n+setting of a CharCheckBear. After invoking debugger on CharCheckBear ``coala``\n+will first ask the value of all unpassed non optional setting i.e, ``message``\n+in our case and after debugger will get invoke on ``run()`` method of\n+CharCheckBear, pdb ``settings`` command will be used to display the updated\n+optional and non optional settings of a Bear in debugging environment i.e.,\n+\n+::\n+\n+    Please enter a value for the setting \"message\" (enter the message.) needed\n+    by CharCheckBear for section \"cli\":\n+    Hello World\n+    [DEBUG][17:25:09] Platform Linux -- Python 3.6.5, coalib\n+    0.12.0.dev99999999999999\n+    Executing section cli...\n+    [DEBUG][17:25:09] Files that will be checked:\n+    /home/Voldemort/test/mytest.py\n+    [DEBUG][17:25:09] coala is run only on changed files, bears' log messages\n+    from previous runs may not appear. You may use the `--flush-cache` flag to\n+    see them.\n+    [DEBUG][17:25:09] Running bear CharCheckBear...\n+    > /home/Voldemort/coala-bears/bears/general/CharCheckBear.py(14)run()\n+    -> if len(message)<=79:\n+    (Pdb) settings\n+    line_length = 79\n+    message = 'Hello World'\n+    (Pdb) c\n+    --Return--\n+    > /home/Voldemort/coala-bears/bears/general/CharCheckBear.py(14)run()->None\n+    -> if len(message)<=79:\n+    (Pdb) c\n+\n+    mytest.py\n+    **** HelloWorldBear [Section: cli | Severity: NORMAL] ****\n+    !    ! Hello World\n+    [    ] *0. Do (N)othing\n+    [    ]  1. (O)pen file\n+    [    ]  2. Add (I)gnore comment\n+    [    ] Enter number (Ctrl-D to exit):","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-07-10T20:07:34Z","lastEditedAt":null,"updatedAt":"2018-07-10T20:07:34Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNDEyNzA1MQ==","url":"https://github.com/coala/coala/pull/5620#discussion_r204127051","bodyText":"Use title case for headings -> Debugger Features\nSame for all other titles below (like Inspect Bear Settings). You can read about title case here","diffHunk":"@@ -122,3 +122,88 @@ Or to debug all bears specified by ``bears`` setting:\n     bears = PEP8Bear,MypyBear\n     files = <filename>\n     debug_bears = True\n+\n+Debugger features","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-07-20T18:09:37Z","lastEditedAt":null,"updatedAt":"2018-07-20T18:09:37Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNDEyODU4Nw==","url":"https://github.com/coala/coala/pull/5620#discussion_r204128587","bodyText":"-->\nA new command settings is included in [...] Bear settings in the debugging environment. It displays all passed settings of a Bear and their values so you can quickly inspect them.","diffHunk":"@@ -122,3 +122,88 @@ Or to debug all bears specified by ``bears`` setting:\n     bears = PEP8Bear,MypyBear\n     files = <filename>\n     debug_bears = True\n+\n+Debugger features\n+-----------------\n+\n+Inspect Bear settings\n+^^^^^^^^^^^^^^^^^^^^^\n+\n+New command ``settings`` included in coala's Debugging Interface to inspect\n+Bear settings in debugging environment, ``settings`` command displays the\n+updated setting of a Bear i.e., user can quickly inspect the passed settings.","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-07-20T18:15:16Z","lastEditedAt":null,"updatedAt":"2018-07-20T18:15:16Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNDEyODkyMA==","url":"https://github.com/coala/coala/pull/5620#discussion_r204128920","bodyText":"Below is an example bear which detects if a file [...]","diffHunk":"@@ -122,3 +122,88 @@ Or to debug all bears specified by ``bears`` setting:\n     bears = PEP8Bear,MypyBear\n     files = <filename>\n     debug_bears = True\n+\n+Debugger features\n+-----------------\n+\n+Inspect Bear settings\n+^^^^^^^^^^^^^^^^^^^^^\n+\n+New command ``settings`` included in coala's Debugging Interface to inspect\n+Bear settings in debugging environment, ``settings`` command displays the\n+updated setting of a Bear i.e., user can quickly inspect the passed settings.\n+\n+Below is the code of simple TooManyLinesBear which detects if a file has more","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-07-20T18:16:37Z","lastEditedAt":null,"updatedAt":"2018-07-20T18:16:37Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNDEyOTEyMg==","url":"https://github.com/coala/coala/pull/5620#discussion_r204129122","bodyText":"redundant braces around len(file)","diffHunk":"@@ -122,3 +122,88 @@ Or to debug all bears specified by ``bears`` setting:\n     bears = PEP8Bear,MypyBear\n     files = <filename>\n     debug_bears = True\n+\n+Debugger features\n+-----------------\n+\n+Inspect Bear settings\n+^^^^^^^^^^^^^^^^^^^^^\n+\n+New command ``settings`` included in coala's Debugging Interface to inspect\n+Bear settings in debugging environment, ``settings`` command displays the\n+updated setting of a Bear i.e., user can quickly inspect the passed settings.\n+\n+Below is the code of simple TooManyLinesBear which detects if a file has more\n+than ``max_number_of_lines`` lines.\n+\n+.. code:: python\n+\n+    from coalib.results.Result import Result\n+    from coalib.bears.LocalBear import LocalBear\n+\n+\n+    class TooManyLinesBear(LocalBear):\n+\n+        def run(self, filename, file, max_number_of_lines: int):\n+            \"\"\"\n+            Detects if a file has more than ``max_number_of_lines`` lines.\n+\n+            :param max_number_of_lines:\n+                Maximum number of lines to be allowed for a file.\n+            \"\"\"\n+\n+            if len(file) > max_number_of_lines:\n+                yield Result.from_values(\n+                    origin=self,\n+                    message=('This file has {} lines, while {} lines'\n+                             ' are allowed'\n+                             .format((len(file)), max_number_of_lines)),","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-07-20T18:17:24Z","lastEditedAt":null,"updatedAt":"2018-07-20T18:17:24Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNDEyOTI2Mw==","url":"https://github.com/coala/coala/pull/5620#discussion_r204129263","bodyText":"is a non-optional setting of a TooManyLineBear.","diffHunk":"@@ -122,3 +122,88 @@ Or to debug all bears specified by ``bears`` setting:\n     bears = PEP8Bear,MypyBear\n     files = <filename>\n     debug_bears = True\n+\n+Debugger features\n+-----------------\n+\n+Inspect Bear settings\n+^^^^^^^^^^^^^^^^^^^^^\n+\n+New command ``settings`` included in coala's Debugging Interface to inspect\n+Bear settings in debugging environment, ``settings`` command displays the\n+updated setting of a Bear i.e., user can quickly inspect the passed settings.\n+\n+Below is the code of simple TooManyLinesBear which detects if a file has more\n+than ``max_number_of_lines`` lines.\n+\n+.. code:: python\n+\n+    from coalib.results.Result import Result\n+    from coalib.bears.LocalBear import LocalBear\n+\n+\n+    class TooManyLinesBear(LocalBear):\n+\n+        def run(self, filename, file, max_number_of_lines: int):\n+            \"\"\"\n+            Detects if a file has more than ``max_number_of_lines`` lines.\n+\n+            :param max_number_of_lines:\n+                Maximum number of lines to be allowed for a file.\n+            \"\"\"\n+\n+            if len(file) > max_number_of_lines:\n+                yield Result.from_values(\n+                    origin=self,\n+                    message=('This file has {} lines, while {} lines'\n+                             ' are allowed'\n+                             .format((len(file)), max_number_of_lines)),\n+                    file=filename)\n+\n+In the above example ``max_number_of_lines`` is non optional setting of a","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-07-20T18:17:56Z","lastEditedAt":null,"updatedAt":"2018-07-20T18:17:56Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNDEyOTYwMg==","url":"https://github.com/coala/coala/pull/5620#discussion_r204129602","bodyText":"invoking the debugger","diffHunk":"@@ -122,3 +122,88 @@ Or to debug all bears specified by ``bears`` setting:\n     bears = PEP8Bear,MypyBear\n     files = <filename>\n     debug_bears = True\n+\n+Debugger features\n+-----------------\n+\n+Inspect Bear settings\n+^^^^^^^^^^^^^^^^^^^^^\n+\n+New command ``settings`` included in coala's Debugging Interface to inspect\n+Bear settings in debugging environment, ``settings`` command displays the\n+updated setting of a Bear i.e., user can quickly inspect the passed settings.\n+\n+Below is the code of simple TooManyLinesBear which detects if a file has more\n+than ``max_number_of_lines`` lines.\n+\n+.. code:: python\n+\n+    from coalib.results.Result import Result\n+    from coalib.bears.LocalBear import LocalBear\n+\n+\n+    class TooManyLinesBear(LocalBear):\n+\n+        def run(self, filename, file, max_number_of_lines: int):\n+            \"\"\"\n+            Detects if a file has more than ``max_number_of_lines`` lines.\n+\n+            :param max_number_of_lines:\n+                Maximum number of lines to be allowed for a file.\n+            \"\"\"\n+\n+            if len(file) > max_number_of_lines:\n+                yield Result.from_values(\n+                    origin=self,\n+                    message=('This file has {} lines, while {} lines'\n+                             ' are allowed'\n+                             .format((len(file)), max_number_of_lines)),\n+                    file=filename)\n+\n+In the above example ``max_number_of_lines`` is non optional setting of a\n+TooManyLinesBear. After invoking debugger on TooManyLinesBear coala will first","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-07-20T18:19:12Z","lastEditedAt":null,"updatedAt":"2018-07-20T18:19:12Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNDEzMDA1Mw==","url":"https://github.com/coala/coala/pull/5620#discussion_r204130053","bodyText":"I'm not sure if it's relevant to explain again the whole coala process.","diffHunk":"@@ -122,3 +122,88 @@ Or to debug all bears specified by ``bears`` setting:\n     bears = PEP8Bear,MypyBear\n     files = <filename>\n     debug_bears = True\n+\n+Debugger features\n+-----------------\n+\n+Inspect Bear settings\n+^^^^^^^^^^^^^^^^^^^^^\n+\n+New command ``settings`` included in coala's Debugging Interface to inspect\n+Bear settings in debugging environment, ``settings`` command displays the\n+updated setting of a Bear i.e., user can quickly inspect the passed settings.\n+\n+Below is the code of simple TooManyLinesBear which detects if a file has more\n+than ``max_number_of_lines`` lines.\n+\n+.. code:: python\n+\n+    from coalib.results.Result import Result\n+    from coalib.bears.LocalBear import LocalBear\n+\n+\n+    class TooManyLinesBear(LocalBear):\n+\n+        def run(self, filename, file, max_number_of_lines: int):\n+            \"\"\"\n+            Detects if a file has more than ``max_number_of_lines`` lines.\n+\n+            :param max_number_of_lines:\n+                Maximum number of lines to be allowed for a file.\n+            \"\"\"\n+\n+            if len(file) > max_number_of_lines:\n+                yield Result.from_values(\n+                    origin=self,\n+                    message=('This file has {} lines, while {} lines'\n+                             ' are allowed'\n+                             .format((len(file)), max_number_of_lines)),\n+                    file=filename)\n+\n+In the above example ``max_number_of_lines`` is non optional setting of a\n+TooManyLinesBear. After invoking debugger on TooManyLinesBear coala will first\n+ask the value of all unpassed non optional setting i.e, ``max_number_of_lines``\n+and after that debugger will get invoke on ``run()`` method of TooManyLinesBear,\n+``settings`` command will be used to display the updated optional and non\n+optional settings of a Bear in debugging environment i.e.,","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-07-20T18:20:44Z","lastEditedAt":null,"updatedAt":"2018-07-20T18:20:44Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNDIxMTc5Nw==","url":"https://github.com/coala/coala/pull/5620#discussion_r204211797","bodyText":"I wanted that user get familiar with coala process and can easily understand the settings part of\ndebugger, If you will say I will remove the above 2 line 👍 . For now I am updating without removing it.","diffHunk":"@@ -122,3 +122,88 @@ Or to debug all bears specified by ``bears`` setting:\n     bears = PEP8Bear,MypyBear\n     files = <filename>\n     debug_bears = True\n+\n+Debugger features\n+-----------------\n+\n+Inspect Bear settings\n+^^^^^^^^^^^^^^^^^^^^^\n+\n+New command ``settings`` included in coala's Debugging Interface to inspect\n+Bear settings in debugging environment, ``settings`` command displays the\n+updated setting of a Bear i.e., user can quickly inspect the passed settings.\n+\n+Below is the code of simple TooManyLinesBear which detects if a file has more\n+than ``max_number_of_lines`` lines.\n+\n+.. code:: python\n+\n+    from coalib.results.Result import Result\n+    from coalib.bears.LocalBear import LocalBear\n+\n+\n+    class TooManyLinesBear(LocalBear):\n+\n+        def run(self, filename, file, max_number_of_lines: int):\n+            \"\"\"\n+            Detects if a file has more than ``max_number_of_lines`` lines.\n+\n+            :param max_number_of_lines:\n+                Maximum number of lines to be allowed for a file.\n+            \"\"\"\n+\n+            if len(file) > max_number_of_lines:\n+                yield Result.from_values(\n+                    origin=self,\n+                    message=('This file has {} lines, while {} lines'\n+                             ' are allowed'\n+                             .format((len(file)), max_number_of_lines)),\n+                    file=filename)\n+\n+In the above example ``max_number_of_lines`` is non optional setting of a\n+TooManyLinesBear. After invoking debugger on TooManyLinesBear coala will first\n+ask the value of all unpassed non optional setting i.e, ``max_number_of_lines``\n+and after that debugger will get invoke on ``run()`` method of TooManyLinesBear,\n+``settings`` command will be used to display the updated optional and non\n+optional settings of a Bear in debugging environment i.e.,","author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"reactions":[],"createdAt":"2018-07-21T14:10:49Z","lastEditedAt":null,"updatedAt":"2018-07-21T14:10:49Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNDIzNzk2NQ==","url":"https://github.com/coala/coala/pull/5620#discussion_r204237965","bodyText":"the debugger will be invoked on run() method of TooManyLinesBear. Then the settings command...","diffHunk":"@@ -122,3 +122,88 @@ Or to debug all bears specified by ``bears`` setting:\n     bears = PEP8Bear,MypyBear\n     files = <filename>\n     debug_bears = True\n+\n+Debugger Features\n+-----------------\n+\n+Inspect Bear Settings\n+^^^^^^^^^^^^^^^^^^^^^\n+\n+A new command ``settings`` is included in coala's Debugging Interface to\n+inspect Bear settings in the debugging environment. It displays all passed\n+settings of a Bear and their values so you can quickly inspect them.\n+\n+Below is an example Bear which detects if a file has more than\n+``max_number_of_lines`` lines.\n+\n+.. code:: python\n+\n+    from coalib.results.Result import Result\n+    from coalib.bears.LocalBear import LocalBear\n+\n+\n+    class TooManyLinesBear(LocalBear):\n+\n+        def run(self, filename, file, max_number_of_lines: int):\n+            \"\"\"\n+            Detects if a file has more than ``max_number_of_lines`` lines.\n+\n+            :param max_number_of_lines:\n+                Maximum number of lines to be allowed for a file.\n+            \"\"\"\n+\n+            if len(file) > max_number_of_lines:\n+                yield Result.from_values(\n+                    origin=self,\n+                    message=('This file has {} lines, while {} lines'\n+                             ' are allowed'\n+                             .format(len(file), max_number_of_lines)),\n+                    file=filename)\n+\n+In the above example ``max_number_of_lines`` is a non-optional setting. After\n+invoking the debugger on TooManyLinesBear, coala will first ask the value of\n+all unpassed non optional setting i.e, ``max_number_of_lines`` and after that\n+debugger will get invoke on ``run()`` method of TooManyLinesBear, ``settings``","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-07-22T12:09:06Z","lastEditedAt":null,"updatedAt":"2018-07-22T12:09:06Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNDIzODAwMQ==","url":"https://github.com/coala/coala/pull/5620#discussion_r204238001","bodyText":"-->\n, i.e.\ni.e. always follows a comma if used in a regular sentence (except if you use braces)","diffHunk":"@@ -122,3 +122,88 @@ Or to debug all bears specified by ``bears`` setting:\n     bears = PEP8Bear,MypyBear\n     files = <filename>\n     debug_bears = True\n+\n+Debugger Features\n+-----------------\n+\n+Inspect Bear Settings\n+^^^^^^^^^^^^^^^^^^^^^\n+\n+A new command ``settings`` is included in coala's Debugging Interface to\n+inspect Bear settings in the debugging environment. It displays all passed\n+settings of a Bear and their values so you can quickly inspect them.\n+\n+Below is an example Bear which detects if a file has more than\n+``max_number_of_lines`` lines.\n+\n+.. code:: python\n+\n+    from coalib.results.Result import Result\n+    from coalib.bears.LocalBear import LocalBear\n+\n+\n+    class TooManyLinesBear(LocalBear):\n+\n+        def run(self, filename, file, max_number_of_lines: int):\n+            \"\"\"\n+            Detects if a file has more than ``max_number_of_lines`` lines.\n+\n+            :param max_number_of_lines:\n+                Maximum number of lines to be allowed for a file.\n+            \"\"\"\n+\n+            if len(file) > max_number_of_lines:\n+                yield Result.from_values(\n+                    origin=self,\n+                    message=('This file has {} lines, while {} lines'\n+                             ' are allowed'\n+                             .format(len(file), max_number_of_lines)),\n+                    file=filename)\n+\n+In the above example ``max_number_of_lines`` is a non-optional setting. After\n+invoking the debugger on TooManyLinesBear, coala will first ask the value of\n+all unpassed non optional setting i.e, ``max_number_of_lines`` and after that\n+debugger will get invoke on ``run()`` method of TooManyLinesBear, ``settings``\n+command will be used to display the updated optional and non-optional\n+settings of a Bear in debugging environment i.e.,","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-07-22T12:10:36Z","lastEditedAt":null,"updatedAt":"2018-07-22T12:10:36Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNDM4MjYxNw==","url":"https://github.com/coala/coala/pull/5620#discussion_r204382617","bodyText":", i.e.","diffHunk":"@@ -122,3 +122,88 @@ Or to debug all bears specified by ``bears`` setting:\n     bears = PEP8Bear,MypyBear\n     files = <filename>\n     debug_bears = True\n+\n+Debugger Features\n+-----------------\n+\n+Inspect Bear Settings\n+^^^^^^^^^^^^^^^^^^^^^\n+\n+A new command ``settings`` is included in coala's Debugging Interface to\n+inspect Bear settings in the debugging environment. It displays all passed\n+settings of a Bear and their values so you can quickly inspect them.\n+\n+Below is an example Bear which detects if a file has more than\n+``max_number_of_lines`` lines.\n+\n+.. code:: python\n+\n+    from coalib.results.Result import Result\n+    from coalib.bears.LocalBear import LocalBear\n+\n+\n+    class TooManyLinesBear(LocalBear):\n+\n+        def run(self, filename, file, max_number_of_lines: int):\n+            \"\"\"\n+            Detects if a file has more than ``max_number_of_lines`` lines.\n+\n+            :param max_number_of_lines:\n+                Maximum number of lines to be allowed for a file.\n+            \"\"\"\n+\n+            if len(file) > max_number_of_lines:\n+                yield Result.from_values(\n+                    origin=self,\n+                    message=('This file has {} lines, while {} lines'\n+                             ' are allowed'\n+                             .format(len(file), max_number_of_lines)),\n+                    file=filename)\n+\n+In the above example ``max_number_of_lines`` is a non-optional setting. After\n+invoking the debugger on TooManyLinesBear, coala will first ask the value of\n+all unpassed non optional setting i.e, ``max_number_of_lines`` and after that","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-07-23T12:30:46Z","lastEditedAt":null,"updatedAt":"2018-07-23T12:30:46Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNDM4MjY0Nw==","url":"https://github.com/coala/coala/pull/5620#discussion_r204382647","bodyText":"spacing:\nenvironment, i.e.","diffHunk":"@@ -122,3 +122,88 @@ Or to debug all bears specified by ``bears`` setting:\n     bears = PEP8Bear,MypyBear\n     files = <filename>\n     debug_bears = True\n+\n+Debugger Features\n+-----------------\n+\n+Inspect Bear Settings\n+^^^^^^^^^^^^^^^^^^^^^\n+\n+A new command ``settings`` is included in coala's Debugging Interface to\n+inspect Bear settings in the debugging environment. It displays all passed\n+settings of a Bear and their values so you can quickly inspect them.\n+\n+Below is an example Bear which detects if a file has more than\n+``max_number_of_lines`` lines.\n+\n+.. code:: python\n+\n+    from coalib.results.Result import Result\n+    from coalib.bears.LocalBear import LocalBear\n+\n+\n+    class TooManyLinesBear(LocalBear):\n+\n+        def run(self, filename, file, max_number_of_lines: int):\n+            \"\"\"\n+            Detects if a file has more than ``max_number_of_lines`` lines.\n+\n+            :param max_number_of_lines:\n+                Maximum number of lines to be allowed for a file.\n+            \"\"\"\n+\n+            if len(file) > max_number_of_lines:\n+                yield Result.from_values(\n+                    origin=self,\n+                    message=('This file has {} lines, while {} lines'\n+                             ' are allowed'\n+                             .format(len(file), max_number_of_lines)),\n+                    file=filename)\n+\n+In the above example ``max_number_of_lines`` is a non-optional setting. After\n+invoking the debugger on TooManyLinesBear, coala will first ask the value of\n+all unpassed non optional setting i.e, ``max_number_of_lines`` and after that\n+debugger will be invoked. Then the ``settings`` command will be used to\n+display the updated optional and non-optional settings of a Bear in\n+debugging environment ,i.e.","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-07-23T12:30:54Z","lastEditedAt":null,"updatedAt":"2018-07-23T12:30:54Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQwMzc5ODU0MQ==","url":"https://github.com/coala/coala/pull/5620#issuecomment-403798541","bodyText":"Block because of #5610","diffHunk":null,"author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"reactions":[],"createdAt":"2018-07-10T12:05:27Z","lastEditedAt":null,"updatedAt":"2018-07-10T12:05:27Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1532011158000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5622","number":5622,"title":"requirements.txt: Use coala-utils master","body":"Related to coala/meta#123","comments":5,"createdAt":"2018-07-10T15:53:18Z","updatedAt":"2018-07-19T14:39:18Z","closedAt":"2018-07-19T14:39:12Z","state":"merged","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5622","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDQwNTIwOTA5Ng==","url":"https://github.com/coala/coala/pull/5622#issuecomment-405209096","bodyText":"This is failing because AppVeyor doesnt have setuptools 21+ installed, and coala-utils uses environment markers.\nhttps://ci.appveyor.com/project/coala/coala/build/1.0.13506/job/3ih7e4co250hend2","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-07-16T10:42:50Z","lastEditedAt":null,"updatedAt":"2018-07-16T10:42:50Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1532011345000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5623","number":5623,"title":"requirements.txt: Use depman master","body":"Depends on https://gitlab.com/coala/package_manager/merge_requests/144\nUnnecessarily depends on #5622 , but that one should go in first.","comments":6,"createdAt":"2018-07-10T15:54:24Z","updatedAt":"2018-07-19T14:42:25Z","closedAt":"2018-07-19T14:42:16Z","state":"merged","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"process/wip","color":"fbca04"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5623","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDQwNjI0Mzc3Nw==","url":"https://github.com/coala/coala/pull/5623#issuecomment-406243777","bodyText":"would need a rebase","diffHunk":null,"author":{"login":"anctartica","avatarUrl":"https://avatars0.githubusercontent.com/u/7020962?v=4","name":""},"createdAt":"2018-07-19T11:25:14Z","lastEditedAt":null,"updatedAt":"2018-07-19T11:25:14Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQwNjI5OTkxNQ==","url":"https://github.com/coala/coala/pull/5623#issuecomment-406299915","bodyText":"No rebase needed.  It was stacked on top of the other PR.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-07-19T14:39:45Z","lastEditedAt":null,"updatedAt":"2018-07-19T14:39:45Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1531742811000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5624","number":5624,"title":".moban.yaml: Add cached_property","body":"This was omitted from 54622c2.\nRelated to #5618\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":10,"createdAt":"2018-07-10T23:12:28Z","updatedAt":"2018-07-16T12:06:51Z","closedAt":"2018-07-16T12:06:51Z","state":"merged","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5624","comments":[]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1534073165000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5627","number":5627,"title":"Integrate FileFactory with the core","body":"For short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":26,"createdAt":"2018-07-11T18:35:17Z","updatedAt":"2018-08-12T11:26:05Z","closedAt":"2018-08-12T11:25:28Z","state":"merged","user":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4"},"owner":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4"},"labels":[{"name":"size/S","color":"B1CF0A"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5627","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMzg0OTEwMQ==","url":"https://github.com/coala/coala/pull/5627#discussion_r203849101","bodyText":"hm okay so right now we actually try to be smart and detect the encoding... maybe we should really offer different encodings when accessing FileFactory.string (or provide a separate decode function, while string is utf-8 by default). But let's save that for later","diffHunk":"@@ -267,16 +268,17 @@ def get_file_dict(filename_list, log_printer=None, allow_raw_files=False):\n     :return:                Reads the content of each file into a dictionary\n                             with filenames as keys.\n     \"\"\"\n-    file_dict = {}\n+    file_set = {}\n     for filename in filename_list:\n         try:\n-            with open(filename, 'r',\n-                      encoding=detect_encoding(filename)) as _file:","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"createdAt":"2018-07-19T19:46:17Z","lastEditedAt":null,"updatedAt":"2018-07-19T19:46:17Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMzg0OTIyMQ==","url":"https://github.com/coala/coala/pull/5627#discussion_r203849221","bodyText":"please a comment why we do this here :) (accessing .string without using its value)","diffHunk":"@@ -267,16 +268,17 @@ def get_file_dict(filename_list, log_printer=None, allow_raw_files=False):\n     :return:                Reads the content of each file into a dictionary\n                             with filenames as keys.\n     \"\"\"\n-    file_dict = {}\n+    file_set = {}\n     for filename in filename_list:\n         try:\n-            with open(filename, 'r',\n-                      encoding=detect_encoding(filename)) as _file:\n-                file_dict[filename] = tuple(_file.readlines())\n+            file_set[filename] = FileFactory(filename)\n+            file_set[filename].string","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"createdAt":"2018-07-19T19:46:47Z","lastEditedAt":null,"updatedAt":"2018-07-19T19:46:47Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMzg1NDczOQ==","url":"https://github.com/coala/coala/pull/5627#discussion_r203854739","bodyText":"ah only list works here? :)","diffHunk":"@@ -498,6 +500,8 @@ def yield_ignore_ranges(file_dict):\n         if file is None:\n             continue\n \n+        file = list(file.lines)","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"createdAt":"2018-07-19T20:06:41Z","lastEditedAt":null,"updatedAt":"2018-07-19T20:06:41Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMzg1NjM0Mg==","url":"https://github.com/coala/coala/pull/5627#discussion_r203856342","bodyText":"It's still a dict, isn't it?","diffHunk":"@@ -267,16 +268,17 @@ def get_file_dict(filename_list, log_printer=None, allow_raw_files=False):\n     :return:                Reads the content of each file into a dictionary\n                             with filenames as keys.\n     \"\"\"\n-    file_dict = {}\n+    file_set = {}","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"createdAt":"2018-07-19T20:12:45Z","lastEditedAt":null,"updatedAt":"2018-07-19T20:12:45Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMzg1NjY0Mw==","url":"https://github.com/coala/coala/pull/5627#discussion_r203856643","bodyText":"we could actually override __getitem__ for FileFactory, then you don't have to use lines explicitly ;) However, this is clearer anyway.","diffHunk":"@@ -221,7 +222,7 @@ def print_lines(console_printer,\n                               color=FILE_LINES_COLOR,\n                               end='')\n \n-        line = file_dict[sourcerange.file][i - 1].rstrip('\\n')\n+        line = file_dict[sourcerange.file].lines[i - 1].rstrip('\\n')","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"createdAt":"2018-07-19T20:13:56Z","lastEditedAt":null,"updatedAt":"2018-07-19T20:13:56Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMzg2MDE4OA==","url":"https://github.com/coala/coala/pull/5627#discussion_r203860188","bodyText":"file is now a FileFactory? This doesn't seem to be backwards compatible^^ Everybody has to change bears^^","diffHunk":"@@ -13,6 +13,6 @@ def run(self, filename, file):\n         \"\"\"\n         yield Result.from_values(\n             origin=self,\n-            message='This file has {count} lines.'.format(count=len(file)),\n+            message='This file has {count} lines.'.format(count=len(file.lines)),","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"createdAt":"2018-07-19T20:26:05Z","lastEditedAt":null,"updatedAt":"2018-07-19T20:26:05Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMzg2MDM5MQ==","url":"https://github.com/coala/coala/pull/5627#discussion_r203860391","bodyText":"I want to do the switch of actually using file factories in the nextgen-core. So internally we already work with them, but at bears side nothing changes.","diffHunk":"@@ -13,6 +13,6 @@ def run(self, filename, file):\n         \"\"\"\n         yield Result.from_values(\n             origin=self,\n-            message='This file has {count} lines.'.format(count=len(file)),\n+            message='This file has {count} lines.'.format(count=len(file.lines)),","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"createdAt":"2018-07-19T20:26:49Z","lastEditedAt":null,"updatedAt":"2018-07-19T20:26:49Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNDAwMjg3NA==","url":"https://github.com/coala/coala/pull/5627#discussion_r204002874","bodyText":"We talked about not calling it a file_dict and instead a file_set but that was a long time ago before GSoC I think. I will change it back to a file_dict for now and we can decide on a better name afterwards.","diffHunk":"@@ -267,16 +268,17 @@ def get_file_dict(filename_list, log_printer=None, allow_raw_files=False):\n     :return:                Reads the content of each file into a dictionary\n                             with filenames as keys.\n     \"\"\"\n-    file_dict = {}\n+    file_set = {}","author":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4","name":"Palash Nigam"},"createdAt":"2018-07-20T10:31:42Z","lastEditedAt":null,"updatedAt":"2018-07-20T10:31:42Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNDAwMzUxOA==","url":"https://github.com/coala/coala/pull/5627#discussion_r204003518","bodyText":"Its to invoke FileFactory.string in case of raw files to raise a UnicodeDecode error so that we can move into the except clause that handles the raw files. Its the only workaround we have for the old core. I think you suggested this to me.\nI will add a comment explaining it 👍","diffHunk":"@@ -267,16 +268,17 @@ def get_file_dict(filename_list, log_printer=None, allow_raw_files=False):\n     :return:                Reads the content of each file into a dictionary\n                             with filenames as keys.\n     \"\"\"\n-    file_dict = {}\n+    file_set = {}\n     for filename in filename_list:\n         try:\n-            with open(filename, 'r',\n-                      encoding=detect_encoding(filename)) as _file:\n-                file_dict[filename] = tuple(_file.readlines())\n+            file_set[filename] = FileFactory(filename)\n+            file_set[filename].string","author":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4","name":"Palash Nigam"},"createdAt":"2018-07-20T10:34:06Z","lastEditedAt":null,"updatedAt":"2018-07-20T10:34:06Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNDAwNzE3NQ==","url":"https://github.com/coala/coala/pull/5627#discussion_r204007175","bodyText":"you are right that's unnecessary tuple works too 😅\nRemoved list","diffHunk":"@@ -498,6 +500,8 @@ def yield_ignore_ranges(file_dict):\n         if file is None:\n             continue\n \n+        file = list(file.lines)","author":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4","name":"Palash Nigam"},"createdAt":"2018-07-20T10:51:32Z","lastEditedAt":null,"updatedAt":"2018-07-20T10:51:32Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNDAyMjIyMw==","url":"https://github.com/coala/coala/pull/5627#discussion_r204022223","bodyText":"So the FileFactories are all collected in get_file_dict and then they are passed around in the bears for analysis right. So before this the bears used to receive the file-contents.\nCan you explain this to me a little better? What would the bears receive now to run the analysis on whether it is FileFactory or FileFactory.lines? I don't know all the details of a coala run.\nIs there a part of the codebase where we can make changes so that all the bears receive only the file contents and not the objects so that we don't have to change the bears implementation individually, you know like a middleware between the collection of objects and the actual analysis?","diffHunk":"@@ -13,6 +13,6 @@ def run(self, filename, file):\n         \"\"\"\n         yield Result.from_values(\n             origin=self,\n-            message='This file has {count} lines.'.format(count=len(file)),\n+            message='This file has {count} lines.'.format(count=len(file.lines)),","author":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4","name":"Palash Nigam"},"createdAt":"2018-07-20T12:04:05Z","lastEditedAt":"2018-07-20T12:05:16Z","updatedAt":"2018-07-20T12:05:16Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNDEwNjUwMA==","url":"https://github.com/coala/coala/pull/5627#discussion_r204106500","bodyText":"Can you explain this to me a little better? What would the bears receive now to run the analysis on whether it is FileFactory or FileFactory.lines? I don't know all the details of a coala run.\n\nDefinitely FileFactory.lines for now. The old bears expect that currently.\n\nIs there a part of the codebase where we can make changes so that all the bears receive only the file contents and not the objects so that we don't have to change the bears implementation individually, you know like a middleware between the collection of objects and the actual analysis?\n\nYeah inside Processing.py. Instead of giving bears the file factory objects, give them file_factory.lines. I know we currently loose the lazy-loading capability with that, but that's easiest for now.\nIf you want to keep the lazy loading capabilities, we could write (like you suggested) some kind of \"middleware\", meaning we have a proxy dict object that gives access to file contents that works the same way as before for bears, but calls the right functions of FileFactory in the background.\nLike:\nclass FileDict:  # mimics dict\n    def __getitem__(self, filename):\n        return self._my_file_middlewares[filename]\n    #...\n\nclass FileMiddleware:\n    def __getitem__(self, lineindex):\n        return self._underlying_file_proxy.lines[lineindex]\n    #...","diffHunk":"@@ -13,6 +13,6 @@ def run(self, filename, file):\n         \"\"\"\n         yield Result.from_values(\n             origin=self,\n-            message='This file has {count} lines.'.format(count=len(file)),\n+            message='This file has {count} lines.'.format(count=len(file.lines)),","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"createdAt":"2018-07-20T16:54:36Z","lastEditedAt":null,"updatedAt":"2018-07-20T16:54:36Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNDEyNTkyMw==","url":"https://github.com/coala/coala/pull/5627#discussion_r204125923","bodyText":"fine with me 👍","diffHunk":"@@ -267,16 +268,17 @@ def get_file_dict(filename_list, log_printer=None, allow_raw_files=False):\n     :return:                Reads the content of each file into a dictionary\n                             with filenames as keys.\n     \"\"\"\n-    file_dict = {}\n+    file_set = {}","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"createdAt":"2018-07-20T18:05:27Z","lastEditedAt":null,"updatedAt":"2018-07-20T18:05:27Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNDEyNjI3OA==","url":"https://github.com/coala/coala/pull/5627#discussion_r204126278","bodyText":"Its to invoke FileFactory.string in case of raw files to raise a UnicodeDecode error so that we can move into the except clause that handles the raw files. Its the only workaround we have for the old core. I think you suggested this to me.\n\nI know, I just wanted to encourage you to explain it to others reading the code as well that are not into the topic ;)","diffHunk":"@@ -267,16 +268,17 @@ def get_file_dict(filename_list, log_printer=None, allow_raw_files=False):\n     :return:                Reads the content of each file into a dictionary\n                             with filenames as keys.\n     \"\"\"\n-    file_dict = {}\n+    file_set = {}\n     for filename in filename_list:\n         try:\n-            with open(filename, 'r',\n-                      encoding=detect_encoding(filename)) as _file:\n-                file_dict[filename] = tuple(_file.readlines())\n+            file_set[filename] = FileFactory(filename)\n+            file_set[filename].string","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"createdAt":"2018-07-20T18:06:44Z","lastEditedAt":null,"updatedAt":"2018-07-20T18:06:44Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQwNDI5MTY1OQ==","url":"https://github.com/coala/coala/pull/5627#issuecomment-404291659","bodyText":"These are the failing tests out of which the ignore ranges tests seems to be the toughest one to fix.\nFAIL tests/coalaCITest.py::coalaCITest::test_find_no_issues\nFAIL tests/coalaCITest.py::coalaCITest::test_find_no_issues_debug\nFAIL tests/coalaCITest.py::coalaCITest::test_section_ordering\nFAIL tests/coalaTest.py::coalaTest::test_coala_with_color\nFAIL tests/coalaTest.py::coalaTest::test_coala_without_color\nFAIL tests/output/ConsoleInteractionTest.py::ConsoleInteractionTest::test_print_results_multiple_ranges\nFAIL tests/processes/ProcessingTest.py::ProcessingTest::test_yield_ignore_ranges\nFAIL tests/results/result_actions/ShowPatchActionTest.py::ShowPatchActionTest::test_apply\nFAIL tests/testing/LocalBearTestHelperTest.py::LocalBearCheckResultsTest::test_bad_assertComparableObjectsEqual\nFAIL tests/testing/LocalBearTestHelperTest.py::LocalBearCheckResultsTest::test_good_assertComparableObjectsEqual","diffHunk":null,"author":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4","name":"Palash Nigam"},"createdAt":"2018-07-11T19:58:51Z","lastEditedAt":"2018-07-13T14:15:40Z","updatedAt":"2018-07-13T14:15:40Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1531731484000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5629","number":5629,"title":"aspects: Rename class `docs` to follow CapWords","body":"This renames class name docs to Docs so that\nit follows CapWords convention.\nCloses #5626\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":10,"createdAt":"2018-07-12T10:55:12Z","updatedAt":"2018-07-16T08:58:04Z","closedAt":"2018-07-16T08:58:04Z","state":"merged","user":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4"},"owner":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4"},"assignee":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"},{"name":"size/S","color":"B1CF0A"},{"name":"type/codestyle","color":"d4c5f9"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5629","comments":[]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1531640333000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5630","number":5630,"title":"BearTest: Replace httpstat with Google teapot","body":"Use httpbin instead of httpbin because\nof SSL certification error.\nCloses #5628","comments":9,"createdAt":"2018-07-12T10:57:11Z","updatedAt":"2018-07-15T07:38:53Z","closedAt":"2018-07-15T07:38:53Z","state":"merged","user":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4"},"owner":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4"},"labels":[{"name":"area/CI","color":"eb6420"},{"name":"area/tests","color":"bfd4f2"},{"name":"size/XS","color":"00DE0F"},{"name":"status/ci-approved","color":"ededed"},{"name":"type/bug","color":"e11d21"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5630","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMjIwNTkwMQ==","url":"https://github.com/coala/coala/pull/5630#discussion_r202205901","bodyText":"I think we should use the Google Teapot.\nSee #5628 (comment) for background.","diffHunk":"@@ -515,7 +515,7 @@ def setUp(self):\n         super().setUp()\n         self.mock_url = 'https://test.com'\n         self.filename = 'test.html'\n-        self.teapot_url = 'https://httpstat.us/418'\n+        self.teapot_url = 'https://httpbin.org/status/418'","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-07-12T23:13:17Z","lastEditedAt":null,"updatedAt":"2018-07-12T23:13:17Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQwNDY4MzcyMg==","url":"https://github.com/coala/coala/pull/5630#issuecomment-404683722","bodyText":"Seems like only travis failing right now for all three https://travis-ci.org/coala/coala/jobs/403347645\nbut on a different test and IMO It should pass but didn't get till now why the test failed","diffHunk":null,"author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"createdAt":"2018-07-12T23:43:34Z","lastEditedAt":"2018-07-12T23:44:58Z","updatedAt":"2018-07-12T23:44:58Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQwNDcwMjkyMQ==","url":"https://github.com/coala/coala/pull/5630#issuecomment-404702921","bodyText":"And failed several times after restarting . We have an issue about those tests. This failure is also becoming quite annoying.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-07-13T02:00:44Z","lastEditedAt":null,"updatedAt":"2018-07-13T02:00:44Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1531668324000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5632","number":5632,"title":"Testing_Bears.rst: add self to run method","body":"This adds missing self keyword to TooManyLinesBear run method in example docs for testing\nThis also changes the position of argument file and filename for run method\nThis closes #5625\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":8,"createdAt":"2018-07-15T12:20:28Z","updatedAt":"2018-07-15T15:25:24Z","closedAt":"2018-07-15T15:25:24Z","state":"merged","user":{"login":"sinscary","avatarUrl":"https://avatars0.githubusercontent.com/u/13782355?v=4"},"owner":{"login":"sinscary","avatarUrl":"https://avatars0.githubusercontent.com/u/13782355?v=4"},"assignee":{"login":"sinscary","avatarUrl":"https://avatars0.githubusercontent.com/u/13782355?v=4"},"labels":[{"name":"area/CI","color":"eb6420"},{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5632","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMjU0MzU3MA==","url":"https://github.com/coala/coala/pull/5632#discussion_r202543570","bodyText":"Any particular reason to place this argument here ?\nIMO the order should be alphabetical/dictionary order unless otherwise needed.\ni.e\ndef run(self,\n        file,\n        filename,\n    ...","diffHunk":"@@ -24,8 +24,9 @@ Let us understand how to write tests for ``TooManyLinesBear`` in ``some_dir``.\n \n     class TooManyLinesBear(LocalBear):\n \n-        def run(file,\n+        def run(self,\n                 filename,\n+                file,","author":{"login":"virresh","avatarUrl":"https://avatars0.githubusercontent.com/u/10978108?v=4","name":"Viresh Gupta"},"createdAt":"2018-07-15T13:39:35Z","lastEditedAt":"2018-07-15T13:40:25Z","updatedAt":"2018-07-15T13:40:25Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMjU0MzY5Ng==","url":"https://github.com/coala/coala/pull/5632#discussion_r202543696","bodyText":"@virresh LocalBear run method has arguments in same order. As TooManyLinesBear inherits from that, arguments should be in same order. To keep these arguments in alphabetical order I have to make a change in LocalBear class.","diffHunk":"@@ -24,8 +24,9 @@ Let us understand how to write tests for ``TooManyLinesBear`` in ``some_dir``.\n \n     class TooManyLinesBear(LocalBear):\n \n-        def run(file,\n+        def run(self,\n                 filename,\n+                file,","author":{"login":"sinscary","avatarUrl":"https://avatars0.githubusercontent.com/u/13782355?v=4","name":"Nitesh Sharma"},"createdAt":"2018-07-15T13:44:45Z","lastEditedAt":null,"updatedAt":"2018-07-15T13:44:45Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMjU0Mzg2NQ==","url":"https://github.com/coala/coala/pull/5632#discussion_r202543865","bodyText":"Oh\nI missed that\nChanges look good then 👍\nJust the nit-pick of closes to Closes and it looks good to go then.","diffHunk":"@@ -24,8 +24,9 @@ Let us understand how to write tests for ``TooManyLinesBear`` in ``some_dir``.\n \n     class TooManyLinesBear(LocalBear):\n \n-        def run(file,\n+        def run(self,\n                 filename,\n+                file,","author":{"login":"virresh","avatarUrl":"https://avatars0.githubusercontent.com/u/10978108?v=4","name":"Viresh Gupta"},"createdAt":"2018-07-15T13:50:53Z","lastEditedAt":null,"updatedAt":"2018-07-15T13:50:53Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMjU0NDE4Mw==","url":"https://github.com/coala/coala/pull/5632#discussion_r202544183","bodyText":"why break lines here when you have so much space","diffHunk":"@@ -24,8 +24,9 @@ Let us understand how to write tests for ``TooManyLinesBear`` in ``some_dir``.\n \n     class TooManyLinesBear(LocalBear):\n \n-        def run(file,\n+        def run(self,","author":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4","name":"Ishan Srivastava"},"createdAt":"2018-07-15T14:04:23Z","lastEditedAt":null,"updatedAt":"2018-07-15T14:04:23Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMjU0NDMyMA==","url":"https://github.com/coala/coala/pull/5632#discussion_r202544320","bodyText":"It was already like that in docs. I was just following the same pattern. You want me to change it ? But that change will reflect in docs also.","diffHunk":"@@ -24,8 +24,9 @@ Let us understand how to write tests for ``TooManyLinesBear`` in ``some_dir``.\n \n     class TooManyLinesBear(LocalBear):\n \n-        def run(file,\n+        def run(self,","author":{"login":"sinscary","avatarUrl":"https://avatars0.githubusercontent.com/u/13782355?v=4","name":"Nitesh Sharma"},"createdAt":"2018-07-15T14:10:09Z","lastEditedAt":"2018-07-15T14:10:32Z","updatedAt":"2018-07-15T14:10:32Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1531917548000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5633","number":5633,"title":"Update Writing_Tests.rst: Remove unwanted quotes","body":"This remove unwanted back-quotes in the documentation.\nThere is attempt to make the code bold & inline literal together.\nFixes coala#3855\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":3,"createdAt":"2018-07-17T07:18:50Z","updatedAt":"2018-07-18T12:39:08Z","closedAt":"2018-07-18T12:14:16Z","state":"closed","user":{"login":"JoeSiew","avatarUrl":"https://avatars3.githubusercontent.com/u/40135419?v=4"},"owner":{"login":"JoeSiew","avatarUrl":"https://avatars3.githubusercontent.com/u/40135419?v=4"},"assignee":{"login":"JoeSiew","avatarUrl":"https://avatars3.githubusercontent.com/u/40135419?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5633","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDQwNTUxNTAxMA==","url":"https://github.com/coala/coala/pull/5633#issuecomment-405515010","bodyText":"Noted pareksha, will work on it.","diffHunk":null,"author":{"login":"JoeSiew","avatarUrl":"https://avatars3.githubusercontent.com/u/40135419?v=4","name":null},"createdAt":"2018-07-17T09:11:53Z","lastEditedAt":null,"updatedAt":"2018-07-17T09:11:53Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQwNTkxNjEwMQ==","url":"https://github.com/coala/coala/pull/5633#issuecomment-405916101","bodyText":"Sorry guys, i screw up this pull request as i deleted my fork repository that submitted this pull request.","diffHunk":null,"author":{"login":"JoeSiew","avatarUrl":"https://avatars3.githubusercontent.com/u/40135419?v=4","name":null},"createdAt":"2018-07-18T12:39:08Z","lastEditedAt":null,"updatedAt":"2018-07-18T12:39:08Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1531880992000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5634","number":5634,"title":"check_unsupported.sh: Use template","body":"Small improvements by sharing the logic with bears repository.\nThe use of coverage run has been discontinued as coverage of\nsetup.py is not needed for assert_supported_version\nas bears repo now has mock tests for that function.\nRelated to https://gitlab.com/coala/mobans/issues/65\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":6,"createdAt":"2018-07-17T07:49:28Z","updatedAt":"2018-07-18T02:29:52Z","closedAt":"2018-07-18T02:29:52Z","state":"merged","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5634","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDQwNTUxMTI3Nw==","url":"https://github.com/coala/coala/pull/5634#issuecomment-405511277","bodyText":"Demo https://travis-ci.org/jayvdb/coala/builds/404774420 is commit jayvdb@855141d which has parent jayvdb@2843072 which is in this PR","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-07-17T08:59:08Z","lastEditedAt":null,"updatedAt":"2018-07-17T08:59:08Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQwNTUxMjIzNw==","url":"https://github.com/coala/coala/pull/5634#issuecomment-405512237","bodyText":"Python 3.3 failure is #5636","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-07-17T09:02:22Z","lastEditedAt":null,"updatedAt":"2018-07-17T09:02:22Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1532066450000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5635","number":5635,"title":" .moban.yaml: Add CI check scripts","body":"Related to https://gitlab.com/coala/mobans/issues/65","comments":1,"createdAt":"2018-07-17T08:12:44Z","updatedAt":"2018-07-20T06:00:50Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5635","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDQwNTQ5ODM2Mw==","url":"https://github.com/coala/coala/pull/5635#issuecomment-405498363","bodyText":"Depends on #5634","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-07-17T08:13:13Z","lastEditedAt":null,"updatedAt":"2018-07-17T08:13:13Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1533312843000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5638","number":5638,"title":"LocalBearTestHelper: Modify for `aspects` testing","body":"This modifies LocalBearTestHelper to make it compatible\nfor testing aspects in coala-bears.\nCloses #5637\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":7,"createdAt":"2018-07-18T08:16:49Z","updatedAt":"2018-08-03T16:14:03Z","closedAt":"2018-08-03T16:14:00Z","state":"merged","user":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4"},"owner":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4"},"assignee":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4"},"labels":[{"name":"area/aspects","color":"000000"},{"name":"area/documentation","color":"bfe5bf"},{"name":"process/needs rebase","color":"e52db1"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5638","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMzM2MDYxMQ==","url":"https://github.com/coala/coala/pull/5638#discussion_r203360611","bodyText":"It is better to make a new AspectsTestBear instead of changing the TestBear IMO.","diffHunk":"@@ -1,8 +1,20 @@\n from coalib.bears.LocalBear import LocalBear\n+from coalib.bearlib.aspects import map_setting_to_aspect\n+from coalib.bearlib.aspects.Formatting import TrailingSpace\n \n \n-class TestBear(LocalBear):\n+class TestBear(","author":{"login":"sangamcse","avatarUrl":"https://avatars2.githubusercontent.com/u/26381717?v=4","name":"Sangam Kumar"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNjY0NTE4Ng==","createdAt":"2018-07-18T18:08:43Z","content":"THUMBS_UP","user":{"login":"jayvdb","name":"John Vandenberg"}}],"createdAt":"2018-07-18T12:35:13Z","lastEditedAt":null,"updatedAt":"2018-07-18T12:35:13Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMzQ0NDU0OQ==","url":"https://github.com/coala/coala/pull/5638#discussion_r203444549","bodyText":"I don't think there's a need for that, after all each of the existing actual coala bear code will be modified to make it compatible with aspects, we won't be creating new bears which work with aspects. That is what is to be tested here.","diffHunk":"@@ -1,8 +1,20 @@\n from coalib.bears.LocalBear import LocalBear\n+from coalib.bearlib.aspects import map_setting_to_aspect\n+from coalib.bearlib.aspects.Formatting import TrailingSpace\n \n \n-class TestBear(LocalBear):\n+class TestBear(","author":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4","name":"Pareksha Manchanda"},"reactions":[],"createdAt":"2018-07-18T16:24:20Z","lastEditedAt":null,"updatedAt":"2018-07-18T16:24:20Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMzQ3NTY4Mw==","url":"https://github.com/coala/coala/pull/5638#discussion_r203475683","bodyText":"But we need tests to ensure the old bear system does not break.\nPlease create a subclass AspectsTestBear","diffHunk":"@@ -1,8 +1,20 @@\n from coalib.bears.LocalBear import LocalBear\n+from coalib.bearlib.aspects import map_setting_to_aspect\n+from coalib.bearlib.aspects.Formatting import TrailingSpace\n \n \n-class TestBear(LocalBear):\n+class TestBear(","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-07-18T18:02:53Z","lastEditedAt":null,"updatedAt":"2018-07-18T18:02:53Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMzQ3NzM3MQ==","url":"https://github.com/coala/coala/pull/5638#discussion_r203477371","bodyText":"This should be aspects=[get_aspect('Indentation')] only, and even that should not be necessary. This info can be obtained by default from the bear metadata (if not we need to fix it).\nAll this dirty work must be done in verify_local_bear.","diffHunk":"@@ -26,6 +30,22 @@\n                               valid_files=files,\n                               invalid_files=())\n \n+language = str(TestBear.languages[0])\n+aspect_list = [get_aspect('Indentation')(language, allow_trailing_spaces=True)]\n+\n+invalidAspectTest = verify_local_bear(TestBear,\n+                                      valid_files=(),\n+                                      invalid_files=files,\n+                                      settings={'result': False},\n+                                      aspects=AspectList(aspect_list),","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-07-18T18:08:24Z","lastEditedAt":null,"updatedAt":"2018-07-18T18:08:24Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMzYwNjcwNg==","url":"https://github.com/coala/coala/pull/5638#discussion_r203606706","bodyText":"@jayvdb prior to this design, I had tried to make the aspect_list in verify_local_bear only, doing something like this\naspect_list = []\nfor aspect_setting, value in aspects.items():\n    aspect, taste = aspect_setting\n    aspect_list.append([get_aspect(aspect)(language, taste=value)])\naspects = AspectList(aspect_list)\n\nBut aspects are not interpreting this to AspectList([get_aspect('TrailingSpace')(language, allow_trailing_spaces=True)]) while passing aspect_list={('TrailingSpace', 'allow_trailing_spaces'): True} from the tests. This is because taste=value is interpreting as taste=True not allow_trailing_spaces=True, even tried string 'allow_trailing_spaces'=True gives an error that you can't assign to a string literal.  Even tried passing dictionary to it but no good. And we can't set the tastes after creating the aspect object in the current aspect core.\nI spent 4 hours brainstorming on this, but of no use. That is why I redesigned the whole thing. And this is the design we have been following for tests in mapping functions like map_setting_to_aspect as well (\n  \n    \n      coala/tests/bearlib/aspects/DecoratorsTest.py\n    \n    \n         Line 47\n      in\n      2843072\n    \n    \n    \n    \n\n        \n          \n           self.section.aspects = AspectList([ \n        \n    \n  \n\n).","diffHunk":"@@ -26,6 +30,22 @@\n                               valid_files=files,\n                               invalid_files=())\n \n+language = str(TestBear.languages[0])\n+aspect_list = [get_aspect('Indentation')(language, allow_trailing_spaces=True)]\n+\n+invalidAspectTest = verify_local_bear(TestBear,\n+                                      valid_files=(),\n+                                      invalid_files=files,\n+                                      settings={'result': False},\n+                                      aspects=AspectList(aspect_list),","author":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4","name":"Pareksha Manchanda"},"reactions":[],"createdAt":"2018-07-19T05:39:27Z","lastEditedAt":null,"updatedAt":"2018-07-19T05:39:27Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNTczODEzOQ==","url":"https://github.com/coala/coala/pull/5638#discussion_r205738139","bodyText":"Now it's being tested using AspectsGeneralTestBear created in the languages=all patch.","diffHunk":"@@ -1,8 +1,20 @@\n from coalib.bears.LocalBear import LocalBear\n+from coalib.bearlib.aspects import map_setting_to_aspect\n+from coalib.bearlib.aspects.Formatting import TrailingSpace\n \n \n-class TestBear(LocalBear):\n+class TestBear(","author":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4","name":"Pareksha Manchanda"},"reactions":[],"createdAt":"2018-07-27T10:57:43Z","lastEditedAt":null,"updatedAt":"2018-07-27T10:57:43Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNTkyODA4NQ==","url":"https://github.com/coala/coala/pull/5638#discussion_r205928085","bodyText":"finish this line at the open (, and dedent everything after it to start at 4 spaces and keep indenting from there.\nthen you wont hit 80cpl so quickly and need to squish everything in the last 10 chars.","diffHunk":"@@ -25,6 +30,25 @@\n validTest = verify_local_bear(TestBear,\n                               valid_files=files,\n                               invalid_files=())\n+min_files = ('This is valid.',)\n+max_files = ('This is particularly an invalid file',)\n+AspectTest = verify_local_bear(AspectsGeneralTestBear,\n+                               valid_files=min_files,\n+                               invalid_files=max_files,\n+                               aspects=AspectList([\n+                                    get_aspect('LineLength')(\n+                                        'Unknown', max_line_length=20),\n+                                    ]),\n+                               )\n+PriorityAspectsTest = verify_local_bear(AspectsGeneralTestBear,","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-07-28T01:12:37Z","lastEditedAt":null,"updatedAt":"2018-07-28T01:12:37Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNTkyODEwMQ==","url":"https://github.com/coala/coala/pull/5638#discussion_r205928101","bodyText":"revise the layout to use the 80 cpl effectively.","diffHunk":"@@ -25,6 +30,25 @@\n validTest = verify_local_bear(TestBear,\n                               valid_files=files,\n                               invalid_files=())\n+min_files = ('This is valid.',)\n+max_files = ('This is particularly an invalid file',)\n+AspectTest = verify_local_bear(AspectsGeneralTestBear,","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-07-28T01:13:05Z","lastEditedAt":null,"updatedAt":"2018-07-28T01:13:05Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNTkyODIxOA==","url":"https://github.com/coala/coala/pull/5638#discussion_r205928218","bodyText":"default to None, not empty list.\nmake adjustments anywhere else that breaks when it encounters None.","diffHunk":"@@ -275,7 +295,9 @@ def check_line_result_count(self,\n                                 force_linebreaks=True,\n                                 create_tempfile=True,\n                                 tempfile_kwargs={},\n-                                settings={}):\n+                                settings={},\n+                                aspects=[],","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-07-28T01:16:37Z","lastEditedAt":null,"updatedAt":"2018-07-28T01:16:37Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNTkyODIyOA==","url":"https://github.com/coala/coala/pull/5638#discussion_r205928228","bodyText":"aspects=None,","diffHunk":"@@ -314,6 +340,7 @@ def verify_local_bear(bear,\n                       invalid_files,\n                       filename=None,\n                       settings={},\n+                      aspects=[],","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-07-28T01:16:56Z","lastEditedAt":null,"updatedAt":"2018-07-28T01:16:56Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNTkyODI2OA==","url":"https://github.com/coala/coala/pull/5638#discussion_r205928268","bodyText":"only set this if aspects has a value.","diffHunk":"@@ -352,6 +381,7 @@ def setUp(self):\n                             queue.Queue())\n             for name, value in settings.items():\n                 self.section.append(Setting(name, value))\n+            self.section.aspects = aspects","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-07-28T01:18:05Z","lastEditedAt":null,"updatedAt":"2018-07-28T01:18:05Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQwNjc4MTYyMw==","url":"https://github.com/coala/coala/pull/5638#issuecomment-406781623","bodyText":"Blocked until it is working correctly in a bears repo PR.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-07-21T08:48:54Z","lastEditedAt":null,"updatedAt":"2018-07-21T08:48:54Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1532096730000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5639","number":5639,"title":"Update Writing_Tests.rst: Remove unwanted quotes","body":"This remove unwanted back-quotes in the documentation.\nThere is attempt to make the code bold & inline literal together.\nFixes #3855\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":9,"createdAt":"2018-07-18T12:41:23Z","updatedAt":"2018-07-20T14:25:30Z","closedAt":"2018-07-20T14:24:36Z","state":"merged","user":{"login":"JoeSiew","avatarUrl":"https://avatars3.githubusercontent.com/u/40135419?v=4"},"owner":{"login":"JoeSiew","avatarUrl":"https://avatars3.githubusercontent.com/u/40135419?v=4"},"assignee":{"login":"JoeSiew","avatarUrl":"https://avatars3.githubusercontent.com/u/40135419?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5639","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDQwNjE1MTAwNw==","url":"https://github.com/coala/coala/pull/5639#issuecomment-406151007","bodyText":"Ugh.  Repeat of #5633 .  @JoeSiew , do not ever delete your fork.\nFollow our newcomers guide carefully https://github.com/coala/coala/blob/master/docs/Developers/Newcomers_Guide.rst","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNjY2ODM3NA==","createdAt":"2018-07-19T05:18:10Z","content":"THUMBS_UP","user":{"login":"JoeSiew","name":null}},{"id":"MDg6UmVhY3Rpb24yNjY2OTE0OQ==","createdAt":"2018-07-19T05:50:30Z","content":"THUMBS_UP","user":{"login":"pareksha","name":"Pareksha Manchanda"}}],"createdAt":"2018-07-19T04:27:56Z","lastEditedAt":null,"updatedAt":"2018-07-19T04:27:56Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQwNjE1NzY4NQ==","url":"https://github.com/coala/coala/pull/5639#issuecomment-406157685","bodyText":"Noted @jayvdb , will be more careful in the future to prevent any more mistake.","diffHunk":null,"author":{"login":"JoeSiew","avatarUrl":"https://avatars3.githubusercontent.com/u/40135419?v=4","name":null},"reactions":[],"createdAt":"2018-07-19T05:17:38Z","lastEditedAt":"2018-07-19T05:17:54Z","updatedAt":"2018-07-19T05:17:54Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQwNjE3MjkyMw==","url":"https://github.com/coala/coala/pull/5639#issuecomment-406172923","bodyText":"Well, it is a syntax & rendering bug, so it can stay as 'Fixes'.\nBut since you deleted your fork, the punishment is that you need to rebase this commit manually.\nFollow the newcomer guide, and also our git guide in the same directory.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-07-19T06:49:40Z","lastEditedAt":null,"updatedAt":"2018-07-19T06:49:40Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQwNjU1MTU5Ng==","url":"https://github.com/coala/coala/pull/5639#issuecomment-406551596","bodyText":"Needs rebase .. ping a maintainer when CI passes, so we can push it straight in","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-07-20T09:55:22Z","lastEditedAt":null,"updatedAt":"2018-07-20T09:55:22Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQwNjYwMDkzOQ==","url":"https://github.com/coala/coala/pull/5639#issuecomment-406600939","bodyText":"@jayvdb , all the checks has passed","diffHunk":null,"author":{"login":"JoeSiew","avatarUrl":"https://avatars3.githubusercontent.com/u/40135419?v=4","name":null},"reactions":[],"createdAt":"2018-07-20T13:29:31Z","lastEditedAt":null,"updatedAt":"2018-07-20T13:29:31Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1531990803000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5641","number":5641,"title":"appveyor.yml: Sync moban","body":"Closes #5640\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":9,"createdAt":"2018-07-19T05:22:29Z","updatedAt":"2018-07-19T09:00:03Z","closedAt":"2018-07-19T08:59:44Z","state":"merged","user":{"login":"anctartica","avatarUrl":"https://avatars0.githubusercontent.com/u/7020962?v=4"},"owner":{"login":"anctartica","avatarUrl":"https://avatars0.githubusercontent.com/u/7020962?v=4"},"labels":[{"name":"platform/windows","color":"0052cc"},{"name":"size/XS","color":"00DE0F"},{"name":"type/bug","color":"e11d21"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5641","comments":[]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1532669636000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5645","number":5645,"title":"DefaultArgParser: Remove pragma nocover","body":"Related to #4166\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":9,"createdAt":"2018-07-20T09:02:46Z","updatedAt":"2018-07-27T05:33:56Z","closedAt":"2018-07-27T05:33:47Z","state":"merged","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"area/CLI","color":"006b75"},{"name":"area/tests","color":"bfd4f2"},{"name":"difficulty/low","color":"207de5"},{"name":"importance/low","color":"70E870"},{"name":"process/pending review","color":"bfe5bf"},{"name":"size/S","color":"B1CF0A"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5645","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNDA4OTk2NQ==","url":"https://github.com/coala/coala/pull/5645#discussion_r204089965","bodyText":"I don't really understand what the setUp and tearDown have achieved over here","diffHunk":"@@ -31,3 +43,25 @@ def test_metavar_not_in_optional_args_sections(self):\n                           flags=re.DOTALL)\n         self.assertIsNotNone(match)\n         self.assertEqual(match.group(1), '-a, --all')\n+\n+\n+class AutocompleteTest(unittest.TestCase):\n+\n+    def setUp(self):\n+        self._old_argcomplete = coalib.parsing.DefaultArgParser.argcomplete\n+\n+    def tearDown(self):\n+        coalib.parsing.DefaultArgParser.argcomplete = self._old_argcomplete","author":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4","name":"Ishan Srivastava"},"reactions":[],"createdAt":"2018-07-20T15:54:14Z","lastEditedAt":null,"updatedAt":"2018-07-20T15:54:14Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNDEzMTkzNQ==","url":"https://github.com/coala/coala/pull/5645#discussion_r204131935","bodyText":"they create a backup of the state of the variable, and restore it.\nall test methods should have zero side effects after they are run, otherwise other tests may break unexpectedly and unpredictably (a good test suite uses randomised test orders to detect code which implicitly depends on other code having been run, or not been run, first).","diffHunk":"@@ -31,3 +43,25 @@ def test_metavar_not_in_optional_args_sections(self):\n                           flags=re.DOTALL)\n         self.assertIsNotNone(match)\n         self.assertEqual(match.group(1), '-a, --all')\n+\n+\n+class AutocompleteTest(unittest.TestCase):\n+\n+    def setUp(self):\n+        self._old_argcomplete = coalib.parsing.DefaultArgParser.argcomplete\n+\n+    def tearDown(self):\n+        coalib.parsing.DefaultArgParser.argcomplete = self._old_argcomplete","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-07-20T18:27:18Z","lastEditedAt":null,"updatedAt":"2018-07-20T18:27:18Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNDE0MTAzNg==","url":"https://github.com/coala/coala/pull/5645#discussion_r204141036","bodyText":"everything seems legit except for this line. what's this for?","diffHunk":"@@ -31,3 +43,25 @@ def test_metavar_not_in_optional_args_sections(self):\n                           flags=re.DOTALL)\n         self.assertIsNotNone(match)\n         self.assertEqual(match.group(1), '-a, --all')\n+\n+\n+class AutocompleteTest(unittest.TestCase):\n+\n+    def setUp(self):\n+        self._old_argcomplete = coalib.parsing.DefaultArgParser.argcomplete\n+\n+    def tearDown(self):\n+        coalib.parsing.DefaultArgParser.argcomplete = self._old_argcomplete\n+\n+    def test_argcomplete_bear_names(self):\n+        self.assertEqual(_argcomplete_bears_names(), get_all_bears_names())\n+\n+    def test_missing_argcomplete(self):\n+        if coalib.parsing.DefaultArgParser.argcomplete is not None:\n+            coalib.parsing.DefaultArgParser.argcomplete = None\n+        fake_importer = Mock(side_effect=ImportError('import missing'))\n+        with patch('builtins.__import__', new=fake_importer):\n+            default_arg_parser()\n+        self.assertFalse(coalib.parsing.DefaultArgParser.argcomplete)\n+        # Dummy usage\n+        coalib.parsing.DefaultArgParser.argcomplete = argcomplete","author":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4","name":"Ishan Srivastava"},"reactions":[],"createdAt":"2018-07-20T19:01:08Z","lastEditedAt":null,"updatedAt":"2018-07-20T19:01:08Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNDE0MTE0Ng==","url":"https://github.com/coala/coala/pull/5645#discussion_r204141146","bodyText":"how come your gitmate tests pass even after this?","diffHunk":"@@ -1,8 +1,19 @@\n import argparse\n import re\n import unittest\n+from unittest.mock import patch, Mock\n \n-from coalib.parsing.DefaultArgParser import CustomFormatter\n+# Imported and unused here, to ensure an ImportError occurs here\n+# instead of inside coalib.  Please install it for the test to pass.\n+import argcomplete","author":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4","name":"Ishan Srivastava"},"reactions":[],"createdAt":"2018-07-20T19:01:33Z","lastEditedAt":"2018-07-20T19:01:44Z","updatedAt":"2018-07-20T19:01:44Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNDE0MTQ4NQ==","url":"https://github.com/coala/coala/pull/5645#discussion_r204141485","bodyText":"I mean when your tear down function is already resetting it","diffHunk":"@@ -31,3 +43,25 @@ def test_metavar_not_in_optional_args_sections(self):\n                           flags=re.DOTALL)\n         self.assertIsNotNone(match)\n         self.assertEqual(match.group(1), '-a, --all')\n+\n+\n+class AutocompleteTest(unittest.TestCase):\n+\n+    def setUp(self):\n+        self._old_argcomplete = coalib.parsing.DefaultArgParser.argcomplete\n+\n+    def tearDown(self):\n+        coalib.parsing.DefaultArgParser.argcomplete = self._old_argcomplete\n+\n+    def test_argcomplete_bear_names(self):\n+        self.assertEqual(_argcomplete_bears_names(), get_all_bears_names())\n+\n+    def test_missing_argcomplete(self):\n+        if coalib.parsing.DefaultArgParser.argcomplete is not None:\n+            coalib.parsing.DefaultArgParser.argcomplete = None\n+        fake_importer = Mock(side_effect=ImportError('import missing'))\n+        with patch('builtins.__import__', new=fake_importer):\n+            default_arg_parser()\n+        self.assertFalse(coalib.parsing.DefaultArgParser.argcomplete)\n+        # Dummy usage\n+        coalib.parsing.DefaultArgParser.argcomplete = argcomplete","author":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4","name":"Ishan Srivastava"},"reactions":[],"createdAt":"2018-07-20T19:03:07Z","lastEditedAt":null,"updatedAt":"2018-07-20T19:03:07Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNDE5NTM0NQ==","url":"https://github.com/coala/coala/pull/5645#discussion_r204195345","bodyText":"It uses the argcomplete import at the top of the file which ensures that the test module fails loudly with a suitable error message if it is not installed, instead of the import rather silently failing and the test method being a bit confusing in how it fails.","diffHunk":"@@ -31,3 +43,25 @@ def test_metavar_not_in_optional_args_sections(self):\n                           flags=re.DOTALL)\n         self.assertIsNotNone(match)\n         self.assertEqual(match.group(1), '-a, --all')\n+\n+\n+class AutocompleteTest(unittest.TestCase):\n+\n+    def setUp(self):\n+        self._old_argcomplete = coalib.parsing.DefaultArgParser.argcomplete\n+\n+    def tearDown(self):\n+        coalib.parsing.DefaultArgParser.argcomplete = self._old_argcomplete\n+\n+    def test_argcomplete_bear_names(self):\n+        self.assertEqual(_argcomplete_bears_names(), get_all_bears_names())\n+\n+    def test_missing_argcomplete(self):\n+        if coalib.parsing.DefaultArgParser.argcomplete is not None:\n+            coalib.parsing.DefaultArgParser.argcomplete = None\n+        fake_importer = Mock(side_effect=ImportError('import missing'))\n+        with patch('builtins.__import__', new=fake_importer):\n+            default_arg_parser()\n+        self.assertFalse(coalib.parsing.DefaultArgParser.argcomplete)\n+        # Dummy usage\n+        coalib.parsing.DefaultArgParser.argcomplete = argcomplete","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNjc4NTIwNA==","createdAt":"2018-07-21T13:25:56Z","content":"THUMBS_UP","user":{"login":"ishanSrt","name":"Ishan Srivastava"}}],"createdAt":"2018-07-21T00:34:41Z","lastEditedAt":null,"updatedAt":"2018-07-21T00:34:41Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNDIwOTE4NQ==","url":"https://github.com/coala/coala/pull/5645#discussion_r204209185","bodyText":"Because I added a usage of the import, but the line here hasnt been modified so GitHub still shows this error","diffHunk":"@@ -1,8 +1,19 @@\n import argparse\n import re\n import unittest\n+from unittest.mock import patch, Mock\n \n-from coalib.parsing.DefaultArgParser import CustomFormatter\n+# Imported and unused here, to ensure an ImportError occurs here\n+# instead of inside coalib.  Please install it for the test to pass.\n+import argcomplete","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-07-21T11:58:30Z","lastEditedAt":null,"updatedAt":"2018-07-21T11:58:30Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNDIxMDg3MQ==","url":"https://github.com/coala/coala/pull/5645#discussion_r204210871","bodyText":"yeah I get you!","diffHunk":"@@ -31,3 +43,25 @@ def test_metavar_not_in_optional_args_sections(self):\n                           flags=re.DOTALL)\n         self.assertIsNotNone(match)\n         self.assertEqual(match.group(1), '-a, --all')\n+\n+\n+class AutocompleteTest(unittest.TestCase):\n+\n+    def setUp(self):\n+        self._old_argcomplete = coalib.parsing.DefaultArgParser.argcomplete\n+\n+    def tearDown(self):\n+        coalib.parsing.DefaultArgParser.argcomplete = self._old_argcomplete\n+\n+    def test_argcomplete_bear_names(self):\n+        self.assertEqual(_argcomplete_bears_names(), get_all_bears_names())\n+\n+    def test_missing_argcomplete(self):\n+        if coalib.parsing.DefaultArgParser.argcomplete is not None:\n+            coalib.parsing.DefaultArgParser.argcomplete = None\n+        fake_importer = Mock(side_effect=ImportError('import missing'))\n+        with patch('builtins.__import__', new=fake_importer):\n+            default_arg_parser()\n+        self.assertFalse(coalib.parsing.DefaultArgParser.argcomplete)\n+        # Dummy usage\n+        coalib.parsing.DefaultArgParser.argcomplete = argcomplete","author":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4","name":"Ishan Srivastava"},"reactions":[],"createdAt":"2018-07-21T13:26:05Z","lastEditedAt":null,"updatedAt":"2018-07-21T13:26:05Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNTY2NjE1OA==","url":"https://github.com/coala/coala/pull/5645#discussion_r205666158","bodyText":"One question does *args, **kwargs is needed here?\nI don't see it getting anywhere used. or you used it for future references?","diffHunk":"@@ -369,6 +369,10 @@ def get_all_bears_names():\n     return [bear.name for bear in get_all_bears()]\n \n \n+def _argcomplete_bears_names(*args, **kwargs):","author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"reactions":[],"createdAt":"2018-07-27T04:37:31Z","lastEditedAt":null,"updatedAt":"2018-07-27T04:37:31Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1532425904000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5647","number":5647,"title":"Update ConsoleInteraction.py","body":"For short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":12,"createdAt":"2018-07-20T14:35:31Z","updatedAt":"2018-07-24T09:51:44Z","closedAt":"2018-07-20T18:25:46Z","state":"merged","user":{"login":"XDoubleU","avatarUrl":"https://avatars3.githubusercontent.com/u/28691666?v=4"},"owner":{"login":"XDoubleU","avatarUrl":"https://avatars3.githubusercontent.com/u/28691666?v=4"},"assignee":{"login":"JoeSiew","avatarUrl":"https://avatars3.githubusercontent.com/u/40135419?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5647","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNDA2Njc5MA==","url":"https://github.com/coala/coala/pull/5647#discussion_r204066790","bodyText":"remove the round brackets which are no longer needed.","diffHunk":"@@ -36,8 +36,7 @@\n from coala_utils.string_processing.Core import join_names\n \n from pygments import highlight\n-from pygments.formatters import (TerminalTrueColorFormatter,\n-                                 TerminalFormatter)\n+from pygments.formatters import (TerminalTrueColorFormatter)","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-07-20T14:40:08Z","lastEditedAt":null,"updatedAt":"2018-07-20T14:40:08Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQwNzM0OTI0MA==","url":"https://github.com/coala/coala/pull/5647#issuecomment-407349240","bodyText":"The issue being referenced here is of #3855. But should be of #5643.","diffHunk":null,"author":{"login":"MacBox7","avatarUrl":"https://avatars0.githubusercontent.com/u/15063552?v=4","name":"Ankit Joshi"},"createdAt":"2018-07-24T09:51:44Z","lastEditedAt":null,"updatedAt":"2018-07-24T09:51:44Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1532171254000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5648","number":5648,"title":"Smell.py: Fix docstring typo","body":"This fixes typo and changes Customer... to Customer {\nFixes #5364\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":4,"createdAt":"2018-07-21T10:41:10Z","updatedAt":"2018-07-21T11:07:34Z","closedAt":"2018-07-21T11:07:15Z","state":"merged","user":{"login":"Ishaan28malik","avatarUrl":"https://avatars3.githubusercontent.com/u/27343592?v=4"},"owner":{"login":"Ishaan28malik","avatarUrl":"https://avatars3.githubusercontent.com/u/27343592?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5648","comments":[]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1532831482000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5649","number":5649,"title":"Changes ArgParser to ArgumentParser","body":"For short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n[ x] I read the commit guidelines and I've followed\nthem.\n[x ] I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!\n\nThis changes ArgParser to ArgumentParser in four files as mentioned in #4188","comments":3,"createdAt":"2018-07-21T11:07:50Z","updatedAt":"2018-07-29T02:31:22Z","closedAt":"2018-07-29T02:31:22Z","state":"closed","user":{"login":"frunkad","avatarUrl":"https://avatars2.githubusercontent.com/u/33373582?v=4"},"owner":{"login":"frunkad","avatarUrl":"https://avatars2.githubusercontent.com/u/33373582?v=4"},"labels":[{"name":"process/wip","color":"fbca04"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5649","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNDIyNjk0NA==","url":"https://github.com/coala/coala/pull/5649#discussion_r204226944","bodyText":"@virresh @frunkad @ksdme, we need to add this file to our .gitignore lists","diffHunk":"@@ -0,0 +1,3 @@\n+{\n+    \"python.pythonPath\": \"/home/frunkad/anaconda3/envs/coalavenv/bin/python\"\n+}","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-07-22T03:22:51Z","lastEditedAt":null,"updatedAt":"2018-07-22T03:22:51Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNDIzMDI2Ng==","url":"https://github.com/coala/coala/pull/5649#discussion_r204230266","bodyText":"Filed https://gitlab.com/coala/mobans/issues/69.","diffHunk":"@@ -0,0 +1,3 @@\n+{\n+    \"python.pythonPath\": \"/home/frunkad/anaconda3/envs/coalavenv/bin/python\"\n+}","author":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4","name":"Kilari Teja"},"createdAt":"2018-07-22T07:14:38Z","lastEditedAt":null,"updatedAt":"2018-07-22T07:14:38Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQwODY0NzUyNg==","url":"https://github.com/coala/coala/pull/5649#issuecomment-408647526","bodyText":"Duplicate of #5661","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-07-29T02:31:22Z","lastEditedAt":null,"updatedAt":"2018-07-29T02:31:22Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1532459074000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5650","number":5650,"title":"docs: Update Newcomers_Guide.rst","body":"The update modifies the note into a note block.\nFixes #5605\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":2,"createdAt":"2018-07-21T11:18:43Z","updatedAt":"2018-07-24T19:04:34Z","closedAt":null,"state":"open","user":{"login":"InquiridorTechie","avatarUrl":"https://avatars1.githubusercontent.com/u/31249906?v=4"},"owner":{"login":"InquiridorTechie","avatarUrl":"https://avatars1.githubusercontent.com/u/31249906?v=4"},"assignee":{"login":"InquiridorTechie","avatarUrl":"https://avatars1.githubusercontent.com/u/31249906?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"process/wip","color":"fbca04"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5650","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDQwNjc4OTEyOA==","url":"https://github.com/coala/coala/pull/5650#issuecomment-406789128","bodyText":"Needs rebase.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-07-21T11:24:48Z","lastEditedAt":null,"updatedAt":"2018-07-21T11:24:48Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQwNjgwMDA4MA==","url":"https://github.com/coala/coala/pull/5650#issuecomment-406800080","bodyText":"LGTM\n@jayvdb","diffHunk":null,"author":{"login":"XDoubleU","avatarUrl":"https://avatars3.githubusercontent.com/u/28691666?v=4","name":"XDoubleU"},"createdAt":"2018-07-21T14:26:57Z","lastEditedAt":"2018-07-21T20:52:34Z","updatedAt":"2018-07-21T20:52:34Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1532558087000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5651","number":5651,"title":"TestUtilities: Add sorted test bear list","body":"Update tests to use it.\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":5,"createdAt":"2018-07-21T11:54:37Z","updatedAt":"2018-07-25T22:34:47Z","closedAt":"2018-07-23T19:12:58Z","state":"merged","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"process/approved","color":"009800"},{"name":"size/XS","color":"00DE0F"},{"name":"status/blocked","color":"e11d21"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5651","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNDIyNzUyNw==","url":"https://github.com/coala/coala/pull/5651#discussion_r204227527","bodyText":"TEST_BEARS_NAME?","diffHunk":"@@ -5,16 +5,34 @@\n \n from coala_utils.ContextManagers import retrieve_stdout, retrieve_stderr\n \n-TEST_BEARS_COUNT = 14\n+TEST_BEAR_NAMES = (","author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"reactions":[],"createdAt":"2018-07-22T04:19:23Z","lastEditedAt":null,"updatedAt":"2018-07-22T04:19:23Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNDM1MDg2OQ==","url":"https://github.com/coala/coala/pull/5651#discussion_r204350869","bodyText":"This would be the correct sorted order\nTEST_BEAR_NAME_REPRS = [\n    \"<class 'AspectTestBear.AspectTestBear'>\",\n    \"<class 'DependentBear.DependentBear'>\",\n    \"<EchoBear linter class (wrapping 'echo')>\",\n    \"<ErrorTestBear linter class (wrapping 'I_do_not_exist')>\",\n    \"<class 'JavaTestBear.JavaTestBear'>\",\n    \"<class 'LineCountTestBear.LineCountTestBear'>\",\n    \"<class 'RaiseTestBear.RaiseTestBear'>\",\n    \"<class 'SpaceConsistencyTestBear.SpaceConsistencyTestBear'>\",\n    \"<class 'TestBear.TestBear'>\",\n    \"<class 'TestBearDep.TestDepBearA'>\",\n    \"<class 'TestBearDep.TestDepBearAA'>\",\n    \"<class 'TestBearDep.TestDepBearBDependsA'>\",\n    \"<class 'TestBearDep.TestDepBearCDependsB'>\",\n    \"<class 'TestBearDep.TestDepBearDependsAAndAA'>\"\n]","diffHunk":"@@ -5,16 +5,35 @@\n \n from coala_utils.ContextManagers import retrieve_stdout, retrieve_stderr\n \n-TEST_BEARS_COUNT = 14\n+# This list is sorted alphabetically\n+TEST_BEAR_NAMES = (\n+    'AspectTestBear',\n+    'DependentBear',\n+    'EchoBear',\n+    'ErrorTestBear',\n+    'JavaTestBear',\n+    'LineCountTestBear',\n+    'RaiseTestBear',\n+    'SpaceConsistencyTestBear',\n+    'TestBear',\n+    'TestDepBearA',\n+    'TestDepBearAA',\n+    'TestDepBearBDependsA',\n+    'TestDepBearCDependsB',\n+    'TestDepBearDependsAAndAA',\n+)\n+\n+TEST_BEARS_COUNT = len(TEST_BEAR_NAMES)\n \n # This list is sorted by filename of the bears, then name within the modules\n-TEST_BEAR_NAMES = [\n+TEST_BEAR_NAME_REPRS = [","author":{"login":"MacBox7","avatarUrl":"https://avatars0.githubusercontent.com/u/15063552?v=4","name":"Ankit Joshi"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNjg0NjU4OA==","createdAt":"2018-07-23T16:58:36Z","content":"THUMBS_UP","user":{"login":"jayvdb","name":"John Vandenberg"}}],"createdAt":"2018-07-23T10:20:16Z","lastEditedAt":null,"updatedAt":"2018-07-23T10:20:16Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNDQ5MDEwNA==","url":"https://github.com/coala/coala/pull/5651#discussion_r204490104","bodyText":"Why set() is used? All names are distinct.","diffHunk":"@@ -387,38 +387,12 @@ def test_get_all_bears(self):\n                 assert issubclass(bear, Bear)\n             self.assertSetEqual(\n                 {b.name for b in bears},\n-                {'DependentBear',\n-                 'EchoBear',\n-                 'LineCountTestBear',\n-                 'JavaTestBear',\n-                 'SpaceConsistencyTestBear',\n-                 'TestBear',\n-                 'ErrorTestBear',\n-                 'RaiseTestBear',\n-                 'TestDepBearA',\n-                 'TestDepBearBDependsA',\n-                 'TestDepBearCDependsB',\n-                 'TestDepBearAA',\n-                 'AspectTestBear',\n-                 'TestDepBearDependsAAndAA'})\n+                set(TEST_BEAR_NAMES))","author":{"login":"MacBox7","avatarUrl":"https://avatars0.githubusercontent.com/u/15063552?v=4","name":"Ankit Joshi"},"reactions":[],"createdAt":"2018-07-23T17:29:43Z","lastEditedAt":"2018-07-23T17:30:21Z","updatedAt":"2018-07-23T17:30:21Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNDQ5NTk0MA==","url":"https://github.com/coala/coala/pull/5651#discussion_r204495940","bodyText":"The other half of assertEqual is a set.\nBut, I should change that now.","diffHunk":"@@ -387,38 +387,12 @@ def test_get_all_bears(self):\n                 assert issubclass(bear, Bear)\n             self.assertSetEqual(\n                 {b.name for b in bears},\n-                {'DependentBear',\n-                 'EchoBear',\n-                 'LineCountTestBear',\n-                 'JavaTestBear',\n-                 'SpaceConsistencyTestBear',\n-                 'TestBear',\n-                 'ErrorTestBear',\n-                 'RaiseTestBear',\n-                 'TestDepBearA',\n-                 'TestDepBearBDependsA',\n-                 'TestDepBearCDependsB',\n-                 'TestDepBearAA',\n-                 'AspectTestBear',\n-                 'TestDepBearDependsAAndAA'})\n+                set(TEST_BEAR_NAMES))","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-07-23T17:47:36Z","lastEditedAt":null,"updatedAt":"2018-07-23T17:47:36Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNDQ5NjI1NA==","url":"https://github.com/coala/coala/pull/5651#discussion_r204496254","bodyText":"But get_all_bears is unsorted..?","diffHunk":"@@ -387,38 +387,12 @@ def test_get_all_bears(self):\n                 assert issubclass(bear, Bear)\n             self.assertSetEqual(\n                 {b.name for b in bears},\n-                {'DependentBear',\n-                 'EchoBear',\n-                 'LineCountTestBear',\n-                 'JavaTestBear',\n-                 'SpaceConsistencyTestBear',\n-                 'TestBear',\n-                 'ErrorTestBear',\n-                 'RaiseTestBear',\n-                 'TestDepBearA',\n-                 'TestDepBearBDependsA',\n-                 'TestDepBearCDependsB',\n-                 'TestDepBearAA',\n-                 'AspectTestBear',\n-                 'TestDepBearDependsAAndAA'})\n+                set(TEST_BEAR_NAMES))","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-07-23T17:48:36Z","lastEditedAt":null,"updatedAt":"2018-07-23T17:48:36Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNDQ5Njk4MA==","url":"https://github.com/coala/coala/pull/5651#discussion_r204496980","bodyText":"I could use assertCountEqual , but that doesnt strengthen the assertion at all.","diffHunk":"@@ -387,38 +387,12 @@ def test_get_all_bears(self):\n                 assert issubclass(bear, Bear)\n             self.assertSetEqual(\n                 {b.name for b in bears},\n-                {'DependentBear',\n-                 'EchoBear',\n-                 'LineCountTestBear',\n-                 'JavaTestBear',\n-                 'SpaceConsistencyTestBear',\n-                 'TestBear',\n-                 'ErrorTestBear',\n-                 'RaiseTestBear',\n-                 'TestDepBearA',\n-                 'TestDepBearBDependsA',\n-                 'TestDepBearCDependsB',\n-                 'TestDepBearAA',\n-                 'AspectTestBear',\n-                 'TestDepBearDependsAAndAA'})\n+                set(TEST_BEAR_NAMES))","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-07-23T17:50:56Z","lastEditedAt":null,"updatedAt":"2018-07-23T17:50:56Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNDUwMzMyNw==","url":"https://github.com/coala/coala/pull/5651#discussion_r204503327","bodyText":"Yes get_all_bears is unsorted.","diffHunk":"@@ -387,38 +387,12 @@ def test_get_all_bears(self):\n                 assert issubclass(bear, Bear)\n             self.assertSetEqual(\n                 {b.name for b in bears},\n-                {'DependentBear',\n-                 'EchoBear',\n-                 'LineCountTestBear',\n-                 'JavaTestBear',\n-                 'SpaceConsistencyTestBear',\n-                 'TestBear',\n-                 'ErrorTestBear',\n-                 'RaiseTestBear',\n-                 'TestDepBearA',\n-                 'TestDepBearBDependsA',\n-                 'TestDepBearCDependsB',\n-                 'TestDepBearAA',\n-                 'AspectTestBear',\n-                 'TestDepBearDependsAAndAA'})\n+                set(TEST_BEAR_NAMES))","author":{"login":"MacBox7","avatarUrl":"https://avatars0.githubusercontent.com/u/15063552?v=4","name":"Ankit Joshi"},"reactions":[],"createdAt":"2018-07-23T18:11:05Z","lastEditedAt":null,"updatedAt":"2018-07-23T18:11:05Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNDUxNjY1OQ==","url":"https://github.com/coala/coala/pull/5651#discussion_r204516659","bodyText":"So set comparion is needed..?\nIf I am missing something ... yell out.\nOtherwise .. need to merge","diffHunk":"@@ -387,38 +387,12 @@ def test_get_all_bears(self):\n                 assert issubclass(bear, Bear)\n             self.assertSetEqual(\n                 {b.name for b in bears},\n-                {'DependentBear',\n-                 'EchoBear',\n-                 'LineCountTestBear',\n-                 'JavaTestBear',\n-                 'SpaceConsistencyTestBear',\n-                 'TestBear',\n-                 'ErrorTestBear',\n-                 'RaiseTestBear',\n-                 'TestDepBearA',\n-                 'TestDepBearBDependsA',\n-                 'TestDepBearCDependsB',\n-                 'TestDepBearAA',\n-                 'AspectTestBear',\n-                 'TestDepBearDependsAAndAA'})\n+                set(TEST_BEAR_NAMES))","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-07-23T18:54:12Z","lastEditedAt":null,"updatedAt":"2018-07-23T18:54:12Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNDUyMDg1OA==","url":"https://github.com/coala/coala/pull/5651#discussion_r204520858","bodyText":"Yeh. Right. It's for that purpose.","diffHunk":"@@ -387,38 +387,12 @@ def test_get_all_bears(self):\n                 assert issubclass(bear, Bear)\n             self.assertSetEqual(\n                 {b.name for b in bears},\n-                {'DependentBear',\n-                 'EchoBear',\n-                 'LineCountTestBear',\n-                 'JavaTestBear',\n-                 'SpaceConsistencyTestBear',\n-                 'TestBear',\n-                 'ErrorTestBear',\n-                 'RaiseTestBear',\n-                 'TestDepBearA',\n-                 'TestDepBearBDependsA',\n-                 'TestDepBearCDependsB',\n-                 'TestDepBearAA',\n-                 'AspectTestBear',\n-                 'TestDepBearDependsAAndAA'})\n+                set(TEST_BEAR_NAMES))","author":{"login":"MacBox7","avatarUrl":"https://avatars0.githubusercontent.com/u/15063552?v=4","name":"Ankit Joshi"},"reactions":[],"createdAt":"2018-07-23T19:08:09Z","lastEditedAt":"2018-07-23T19:11:02Z","updatedAt":"2018-07-23T19:11:02Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQwNjk0NTUzNQ==","url":"https://github.com/coala/coala/pull/5651#issuecomment-406945535","bodyText":"blocked by #5654","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-07-23T05:43:46Z","lastEditedAt":null,"updatedAt":"2018-07-23T05:43:46Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1527959186000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5258","number":5258,"title":"OpenEditorAction.py: Add notepadqq to known editors","body":"Couldn't find any documentation regarding command line arguments.\nTried several commands to enter into a specific line/column but none\nworked. 'notepadqq {filename}' works.\nCloses #5244\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use cobot mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":15,"createdAt":"2018-03-14T18:39:21Z","updatedAt":"2018-06-02T17:06:26Z","closedAt":"2018-04-08T10:47:39Z","state":"merged","user":{"login":"guilherme-p","avatarUrl":"https://avatars1.githubusercontent.com/u/31377673?v=4"},"owner":{"login":"guilherme-p","avatarUrl":"https://avatars1.githubusercontent.com/u/31377673?v=4"},"assignee":{"login":"guilherme-p","avatarUrl":"https://avatars1.githubusercontent.com/u/31377673?v=4"},"labels":[{"name":"area/actions","color":"207de5"},{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5258","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NTI2NjE1Ng==","url":"https://github.com/coala/coala/pull/5258#discussion_r175266156","bodyText":"Hey @guilherme-p , you didn't include any args property. Are you sure that notepadqq will not have any argument?","diffHunk":"@@ -82,6 +82,10 @@\n         'args': '--new',\n         'gui': True\n     },\n+    'notepadqq': {\n+        'file_arg_template': '{filename}',\n+        'gui': True","author":{"login":"lalitmee","avatarUrl":"https://avatars0.githubusercontent.com/u/10762218?v=4","name":"Lalit Kumar"},"reactions":[],"createdAt":"2018-03-17T18:33:50Z","lastEditedAt":null,"updatedAt":"2018-03-17T18:33:50Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3Nzc2MTAwNw==","url":"https://github.com/coala/coala/pull/5258#discussion_r177761007","bodyText":"Waiting for feedback from @palash25 who created the issue","diffHunk":"@@ -82,6 +82,10 @@\n         'args': '--new',\n         'gui': True\n     },\n+    'notepadqq': {\n+        'file_arg_template': '{filename}',\n+        'gui': True","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-03-28T14:05:46Z","lastEditedAt":null,"updatedAt":"2018-03-28T14:05:46Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3ODQyMzk2NA==","url":"https://github.com/coala/coala/pull/5258#discussion_r178423964","bodyText":"ping @palash25","diffHunk":"@@ -82,6 +82,10 @@\n         'args': '--new',\n         'gui': True\n     },\n+    'notepadqq': {\n+        'file_arg_template': '{filename}',\n+        'gui': True","author":{"login":"newbazz","avatarUrl":"https://avatars1.githubusercontent.com/u/25884863?v=4","name":null},"reactions":[],"createdAt":"2018-03-31T05:44:43Z","lastEditedAt":null,"updatedAt":"2018-03-31T05:44:43Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM3MzEzODEwNA==","url":"https://github.com/coala/coala/pull/5258#issuecomment-373138104","bodyText":"@palash25 Was having trouble squashing commits so I created a new PR","diffHunk":null,"author":{"login":"guilherme-p","avatarUrl":"https://avatars1.githubusercontent.com/u/31377673?v=4","name":"Guilherme Peixoto"},"reactions":[],"createdAt":"2018-03-14T19:00:24Z","lastEditedAt":null,"updatedAt":"2018-03-14T19:00:24Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM3MzEzODQxMg==","url":"https://github.com/coala/coala/pull/5258#issuecomment-373138412","bodyText":"use this for future reference http://gitready.com/advanced/2009/02/10/squashing-commits-with-rebase.html","diffHunk":null,"author":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4","name":"Palash Nigam"},"reactions":[],"createdAt":"2018-03-14T19:01:21Z","lastEditedAt":null,"updatedAt":"2018-03-14T19:01:21Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM3MzE0NTAyNg==","url":"https://github.com/coala/coala/pull/5258#issuecomment-373145026","bodyText":"I used rebase, but I squashed commits in the wrong order, which messed up my commit history beyond repair.","diffHunk":null,"author":{"login":"guilherme-p","avatarUrl":"https://avatars1.githubusercontent.com/u/31377673?v=4","name":"Guilherme Peixoto"},"reactions":[{"id":"MDg6UmVhY3Rpb24yMDg2Njc2Nw==","createdAt":"2018-03-14T19:24:46Z","content":"LAUGH","user":{"login":"palash25","name":"Palash Nigam"}}],"createdAt":"2018-03-14T19:24:11Z","lastEditedAt":null,"updatedAt":"2018-03-14T19:24:11Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM3NDAxNTA0NQ==","url":"https://github.com/coala/coala/pull/5258#issuecomment-374015045","bodyText":"I’m not sure at all. Like I said in the commit, I couldn’t find any arguments, but if someone more experienced with nqq could chime in I’d appreciate it.","diffHunk":null,"author":{"login":"guilherme-p","avatarUrl":"https://avatars1.githubusercontent.com/u/31377673?v=4","name":"Guilherme Peixoto"},"reactions":[],"createdAt":"2018-03-18T16:48:45Z","lastEditedAt":null,"updatedAt":"2018-03-18T16:48:45Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM3OTQzMTExNA==","url":"https://github.com/coala/coala/pull/5258#issuecomment-379431114","bodyText":"I've raised notepadqq/notepadqq#597 about that wiki page.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yMTkzODcwNw==","createdAt":"2018-04-07T04:26:13Z","content":"THUMBS_UP","user":{"login":"palash25","name":"Palash Nigam"}}],"createdAt":"2018-04-07T04:23:57Z","lastEditedAt":null,"updatedAt":"2018-04-07T04:23:57Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM3OTUzNTg0Mg==","url":"https://github.com/coala/coala/pull/5258#issuecomment-379535842","bodyText":"ping @palash25, they have provided a useful reply on that issue, and I also replied with a general reply.  Could you take a look and decide whether we should be using the 'new window' mode.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yMTk1ODM5Mw==","createdAt":"2018-04-08T10:21:30Z","content":"THUMBS_UP","user":{"login":"palash25","name":"Palash Nigam"}}],"createdAt":"2018-04-08T09:33:39Z","lastEditedAt":null,"updatedAt":"2018-04-08T09:33:39Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM3OTUzOTA5NQ==","url":"https://github.com/coala/coala/pull/5258#issuecomment-379539095","bodyText":"@jayvdb I read the issue thread on notepadqq. Whenever I use notepadqq I use multiple tabs in the same window, as a coala user I wouldn't want multiple windows everytime I run coala.","diffHunk":null,"author":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4","name":"Palash Nigam"},"reactions":[{"id":"MDg6UmVhY3Rpb24yMTk1ODU2OA==","createdAt":"2018-04-08T10:35:17Z","content":"THUMBS_UP","user":{"login":"jayvdb","name":"John Vandenberg"}}],"createdAt":"2018-04-08T10:25:33Z","lastEditedAt":null,"updatedAt":"2018-04-08T10:25:33Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1521918130000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5259","number":5259,"title":"Globbing.py: Return false if globs are absent","body":"Removes the if statement from fnmatch() that\nused to return True if no globs were given\nFixes: #2302\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use cobot mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":13,"createdAt":"2018-03-15T12:01:50Z","updatedAt":"2018-03-24T19:02:10Z","closedAt":"2018-03-24T19:01:45Z","state":"merged","user":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4"},"owner":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4"},"labels":[{"name":"area/core","color":"eb6420"},{"name":"difficulty/medium","color":"0052cc"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5259","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NjkxMDMwMg==","url":"https://github.com/coala/coala/pull/5259#discussion_r176910302","bodyText":"Shouldn't this technically return false as well? With no pattern to match, there will never be a match, even if the list to be checked is empty.","diffHunk":"@@ -211,10 +217,11 @@ def test_multiple_patterns(self):\n         non_matches = ['aXbX', 'aXcX']\n         self._test_fnmatch(pattern, matches, non_matches)\n \n+    def test_empty_globs(self):\n         pattern = []\n         matches = ['anything', 'anything_else']\n         non_matches = []","author":{"login":"adtac","avatarUrl":"https://avatars2.githubusercontent.com/u/7521600?v=4","name":"Adhityaa"},"reactions":[],"createdAt":"2018-03-24T14:13:09Z","lastEditedAt":null,"updatedAt":"2018-03-24T14:13:09Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NjkxMDMyMg==","url":"https://github.com/coala/coala/pull/5259#discussion_r176910322","bodyText":"Doesn't it make more sense to return False? If there aren't any globs, it's not a match.","diffHunk":"@@ -216,9 +216,6 @@ def fnmatch(name, globs):\n     \"\"\"\n     globs = (globs,) if isinstance(globs, str) else tuple(globs)\n \n-    if len(globs) == 0:\n-        return True","author":{"login":"adtac","avatarUrl":"https://avatars2.githubusercontent.com/u/7521600?v=4","name":"Adhityaa"},"reactions":[],"createdAt":"2018-03-24T14:13:48Z","lastEditedAt":null,"updatedAt":"2018-03-24T14:13:48Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NjkxMjU2NQ==","url":"https://github.com/coala/coala/pull/5259#discussion_r176912565","bodyText":"The test could just be:\npattern = []\nmatches = []\nnon_matches = ['anything', 'anything else']\n\nself._test_fnmatch(pattern, matches, non_matches)\nInstead of a new function.","diffHunk":"@@ -211,10 +217,11 @@ def test_multiple_patterns(self):\n         non_matches = ['aXbX', 'aXcX']\n         self._test_fnmatch(pattern, matches, non_matches)\n \n+    def test_empty_globs(self):\n         pattern = []\n         matches = ['anything', 'anything_else']\n         non_matches = []\n-        self._test_fnmatch(pattern, matches, non_matches)\n+        self._test_fnmatch_without_globs(pattern, matches, non_matches)","author":{"login":"adtac","avatarUrl":"https://avatars2.githubusercontent.com/u/7521600?v=4","name":"Adhityaa"},"reactions":[],"createdAt":"2018-03-24T15:49:11Z","lastEditedAt":null,"updatedAt":"2018-03-24T15:49:11Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NjkxMjU3Mg==","url":"https://github.com/coala/coala/pull/5259#discussion_r176912572","bodyText":"I think the commit message needs to be changed since you're not removing the if statement anymore.\nAlso \"Return False\" instead of \"Don't return true\"","diffHunk":"@@ -217,7 +217,7 @@ def fnmatch(name, globs):\n     globs = (globs,) if isinstance(globs, str) else tuple(globs)","author":{"login":"adtac","avatarUrl":"https://avatars2.githubusercontent.com/u/7521600?v=4","name":"Adhityaa"},"reactions":[{"id":"MDg6UmVhY3Rpb24yMTMzMjYwNQ==","createdAt":"2018-03-24T16:32:16Z","content":"THUMBS_UP","user":{"login":"palash25","name":"Palash Nigam"}}],"createdAt":"2018-03-24T15:49:35Z","lastEditedAt":null,"updatedAt":"2018-03-24T15:49:35Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NjkxNDI1NQ==","url":"https://github.com/coala/coala/pull/5259#discussion_r176914255","bodyText":"done","diffHunk":"@@ -217,7 +217,7 @@ def fnmatch(name, globs):\n     globs = (globs,) if isinstance(globs, str) else tuple(globs)","author":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4","name":"Palash Nigam"},"reactions":[],"createdAt":"2018-03-24T16:58:28Z","lastEditedAt":null,"updatedAt":"2018-03-24T16:58:28Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM3MzM2MTQyOA==","url":"https://github.com/coala/coala/pull/5259#issuecomment-373361428","bodyText":"I just had to remove one test that was checking for empty globs. Besides that nothing else seems to break @Makman2 .","diffHunk":null,"author":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4","name":"Palash Nigam"},"reactions":[],"createdAt":"2018-03-15T12:37:06Z","lastEditedAt":null,"updatedAt":"2018-03-15T12:37:06Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM3Mzg5NTg5NQ==","url":"https://github.com/coala/coala/pull/5259#issuecomment-373895895","bodyText":"@Makman2 please review","diffHunk":null,"author":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4","name":"Palash Nigam"},"reactions":[],"createdAt":"2018-03-17T05:29:29Z","lastEditedAt":null,"updatedAt":"2018-03-17T05:29:29Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM3Mzk0NDQ4OQ==","url":"https://github.com/coala/coala/pull/5259#issuecomment-373944489","bodyText":"No colon in the issue reference :)","diffHunk":null,"author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-03-17T19:00:03Z","lastEditedAt":null,"updatedAt":"2018-03-17T19:00:03Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM3Mzk0NDkwMw==","url":"https://github.com/coala/coala/pull/5259#issuecomment-373944903","bodyText":"Tests missing 👍","diffHunk":null,"author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-03-17T19:05:45Z","lastEditedAt":null,"updatedAt":"2018-03-17T19:05:45Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM3Mzk0Njc5Ng==","url":"https://github.com/coala/coala/pull/5259#issuecomment-373946796","bodyText":"Tests added @Makman2","diffHunk":null,"author":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4","name":"Palash Nigam"},"reactions":[],"createdAt":"2018-03-17T19:34:28Z","lastEditedAt":null,"updatedAt":"2018-03-17T19:34:28Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM3NTkxMzQzMg==","url":"https://github.com/coala/coala/pull/5259#issuecomment-375913432","bodyText":"@adtac can we merge this now 😄 ?","diffHunk":null,"author":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4","name":"Palash Nigam"},"reactions":[],"createdAt":"2018-03-24T18:12:49Z","lastEditedAt":null,"updatedAt":"2018-03-24T18:12:49Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1522496541000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5261","number":5261,"title":"[WIP] config: replace [default] with [all]","body":"Replaces all instances of [default] with [all]\nFixes: #4127\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use cobot mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":0,"createdAt":"2018-03-15T17:02:45Z","updatedAt":"2018-03-31T11:42:21Z","closedAt":null,"state":"open","user":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4"},"owner":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4"},"labels":[{"name":"process/wip","color":"fbca04"},{"name":"size/S","color":"B1CF0A"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5261","comments":[]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1524989424000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5262","number":5262,"title":"docs: Adds NextGen-Core docs","body":"Closes: #4584\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use cobot mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":18,"createdAt":"2018-03-15T19:51:03Z","updatedAt":"2018-04-29T08:10:24Z","closedAt":"2018-04-25T20:13:59Z","state":"merged","user":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4"},"owner":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4"},"assignee":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/medium","color":"0052cc"},{"name":"size/M","color":"eb6420"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5262","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NTI2ODA2Mw==","url":"https://github.com/coala/coala/pull/5262#discussion_r175268063","bodyText":"Just to note: This is still not merged, and it's actually quite problematic, because check_prerequisites is called on bear.__init__. So this one should be left out for now until I decide what to do (or someone wants to discuss that 😄)^^","diffHunk":"@@ -0,0 +1,130 @@\n+NextGen-Core\n+============\n+\n+This document provides a brief overview of coala's NextGen-Core.\n+coala's NextGen-Core comes with the promise of eliminating the dependencies\n+amongst bears (by removing the queuing machanism) and a better performance\n+(by utilising asynchronous I/O and process pool).\n+\n+What has changed?\n+-----------------\n+\n+``Global Bears`` are now called ``Project Bears`` and ``Local Bears`` are\n+now known as ``File Bears``. Both the ``ProjectBear`` and the ``FileBear``\n+classes inherit from the base class ``Bear.py``.\n+\n+- **ProjectBears:** Performs analysis on the whole codebase and does\n+not parallelize tasks. All the bears GlobalBears formerly known as will now\n+inherit from this class.\n+\n+- **FileBears:** Performs analysis on the files provided by the user\n+and parallelizes tasks for each give file. All the bears formerly known as\n+LocalBears will now inherit from this class.\n+\n+What is new?\n+------------\n+\n+The following new features have been installed in the NextGen-Core:\n+\n+- New bear type: ``DependencyBear``\n+- Usage of instance-bound ``Bear.BEAR_DEPS``\n+- Usage of instance-bound ``Bear.REQUIREMENTS``\n+\n+DependencyBear\n+--------------\n+\n+The handling of bear dependencies by the old core wasn't effective. The\n+old core used a queuing mechanism to communicate betweeen bear runs which\n+which led to problems of a GlobalBear not running if any one of its\n+dependencies (a local bear) terminated. The NextGen-Core does away with\n+that by introducing a ``DependencyBear``.\n+\n+This bear serves as a base class parallelizes tasks for each dependency\n+result. A bear dependent on other bears can specify its dependencies in\n+``BEAR_DEPS``. For example there are two bears ``Foo`` and ``Bar``\n+and bear ``Bar`` depends on ``Foo``. This can be written as\n+\n+::\n+\n+    class BarBear(DependencyBear):\n+        BEAR_DEPS = {FooBear}\n+\n+Multiple bears can be included as a dependency of a bear in the BEAR_DEPS\n+field. The results of the dependency bears are saved in a dictionary\n+called ``_dependency_results`` which is initialized in the ``__init()__``\n+method of the class ``Bear.py`` and can be accessed using the method\n+``dependency_results()`` also belonging to the same class.\n+\n+Usage of instance-bound ``Bear.BEAR_DEPS``\n+------------------------------------------\n+\n+A bear might depend on mutilple bears before its execution can begin.\n+``Bear.BEAR_DEPS`` is just a collection (a set) of classes (Bear classes) that\n+need to be executed before that bear can run. Once all these dependencies\n+(Bears) have ran their results are passed into ``self.dependency_results``.\n+The results are in the form of a dictionary with the types of the bears and\n+their corresponding results (in the form of a list) as *Key-Value* pairs.\n+From the previous example if we try to access the BEAR_DEPS of the ``BarBear``\n+we will get the following result.\n+\n+::\n+\n+    import BarBear\n+\n+    >>> BarBear.BEAR_DEPS\n+    {<class 'coalib.core.Bear.FooBear'>}\n+\n+In the `__init__()` method of the class ``Bear.py`` the dependencies specified\n+in the ``BEAR_DEPS`` are copied to every instance of a Bear run using\n+``self.BEAR_DEPS = set(self.BEAR_DEPS)`` which makes runtime modifications\n+are possible.\n+\n+Usage of instance-bound ``Bear.REQUIREMENTS``\n+-----------------------------------------\n+\n+A bear might have some external dependencies that need to be installed before\n+the bear can run any analysis. The ``REQUIREMENTS`` field (a set) contains\n+instances of the ``PackageRequirement`` class from the coala's\n+``dependency_management`` module. For example.\n+\n+::\n+\n+    >>> from dependency_management.requirements.PackageRequirement import (\n+    ...     PackageRequirement)\n+    >>> class BarBear(Bear):\n+    ...     REQUIREMENTS = {\n+    ...         PackageRequirement('pip', 'coala_decorators', '0.2.1')}\n+\n+If the bear uses requirements from a package manager then we can use the\n+subclass of the ``PackageRequirement`` class for that package manager. For\n+example in case of a pip requirement do the following:\n+\n+::\n+\n+    >>> from dependency_management.requirements.PipRequirement import (\n+    ...     PipRequirement)\n+    >>> class FooBear(Bear):\n+    ...     REQUIREMENTS = {PipRequirement('coala_decorators', '0.2.1')}\n+\n+The ``check_prerequisites()`` method in ``Bear.py`` is responsible for\n+checking whether all the required packages are installed. If not then\n+a runtime exception is raised.","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[{"id":"MDg6UmVhY3Rpb24yMTAwNzY0MQ==","createdAt":"2018-03-17T20:12:49Z","content":"THUMBS_UP","user":{"login":"palash25","name":"Palash Nigam"}}],"createdAt":"2018-03-17T19:40:16Z","lastEditedAt":null,"updatedAt":"2018-03-17T19:40:16Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NTI2ODEwNQ==","url":"https://github.com/coala/coala/pull/5262#discussion_r175268105","bodyText":"Implementation detail. What's important is here what \"tasks\" are and how those influence the caching 👍 Should be probably described in context with the new bear","diffHunk":"@@ -0,0 +1,130 @@\n+NextGen-Core\n+============\n+\n+This document provides a brief overview of coala's NextGen-Core.\n+coala's NextGen-Core comes with the promise of eliminating the dependencies\n+amongst bears (by removing the queuing machanism) and a better performance\n+(by utilising asynchronous I/O and process pool).\n+\n+What has changed?\n+-----------------\n+\n+``Global Bears`` are now called ``Project Bears`` and ``Local Bears`` are\n+now known as ``File Bears``. Both the ``ProjectBear`` and the ``FileBear``\n+classes inherit from the base class ``Bear.py``.\n+\n+- **ProjectBears:** Performs analysis on the whole codebase and does\n+not parallelize tasks. All the bears GlobalBears formerly known as will now\n+inherit from this class.\n+\n+- **FileBears:** Performs analysis on the files provided by the user\n+and parallelizes tasks for each give file. All the bears formerly known as\n+LocalBears will now inherit from this class.\n+\n+What is new?\n+------------\n+\n+The following new features have been installed in the NextGen-Core:\n+\n+- New bear type: ``DependencyBear``\n+- Usage of instance-bound ``Bear.BEAR_DEPS``\n+- Usage of instance-bound ``Bear.REQUIREMENTS``\n+\n+DependencyBear\n+--------------\n+\n+The handling of bear dependencies by the old core wasn't effective. The\n+old core used a queuing mechanism to communicate betweeen bear runs which\n+which led to problems of a GlobalBear not running if any one of its\n+dependencies (a local bear) terminated. The NextGen-Core does away with\n+that by introducing a ``DependencyBear``.\n+\n+This bear serves as a base class parallelizes tasks for each dependency\n+result. A bear dependent on other bears can specify its dependencies in\n+``BEAR_DEPS``. For example there are two bears ``Foo`` and ``Bar``\n+and bear ``Bar`` depends on ``Foo``. This can be written as\n+\n+::\n+\n+    class BarBear(DependencyBear):\n+        BEAR_DEPS = {FooBear}\n+\n+Multiple bears can be included as a dependency of a bear in the BEAR_DEPS\n+field. The results of the dependency bears are saved in a dictionary\n+called ``_dependency_results`` which is initialized in the ``__init()__``\n+method of the class ``Bear.py`` and can be accessed using the method\n+``dependency_results()`` also belonging to the same class.\n+\n+Usage of instance-bound ``Bear.BEAR_DEPS``\n+------------------------------------------\n+\n+A bear might depend on mutilple bears before its execution can begin.\n+``Bear.BEAR_DEPS`` is just a collection (a set) of classes (Bear classes) that\n+need to be executed before that bear can run. Once all these dependencies\n+(Bears) have ran their results are passed into ``self.dependency_results``.\n+The results are in the form of a dictionary with the types of the bears and\n+their corresponding results (in the form of a list) as *Key-Value* pairs.\n+From the previous example if we try to access the BEAR_DEPS of the ``BarBear``\n+we will get the following result.\n+\n+::\n+\n+    import BarBear\n+\n+    >>> BarBear.BEAR_DEPS\n+    {<class 'coalib.core.Bear.FooBear'>}\n+\n+In the `__init__()` method of the class ``Bear.py`` the dependencies specified\n+in the ``BEAR_DEPS`` are copied to every instance of a Bear run using\n+``self.BEAR_DEPS = set(self.BEAR_DEPS)`` which makes runtime modifications\n+are possible.\n+\n+Usage of instance-bound ``Bear.REQUIREMENTS``\n+-----------------------------------------\n+\n+A bear might have some external dependencies that need to be installed before\n+the bear can run any analysis. The ``REQUIREMENTS`` field (a set) contains\n+instances of the ``PackageRequirement`` class from the coala's\n+``dependency_management`` module. For example.\n+\n+::\n+\n+    >>> from dependency_management.requirements.PackageRequirement import (\n+    ...     PackageRequirement)\n+    >>> class BarBear(Bear):\n+    ...     REQUIREMENTS = {\n+    ...         PackageRequirement('pip', 'coala_decorators', '0.2.1')}\n+\n+If the bear uses requirements from a package manager then we can use the\n+subclass of the ``PackageRequirement`` class for that package manager. For\n+example in case of a pip requirement do the following:\n+\n+::\n+\n+    >>> from dependency_management.requirements.PipRequirement import (\n+    ...     PipRequirement)\n+    >>> class FooBear(Bear):\n+    ...     REQUIREMENTS = {PipRequirement('coala_decorators', '0.2.1')}\n+\n+The ``check_prerequisites()`` method in ``Bear.py`` is responsible for\n+checking whether all the required packages are installed. If not then\n+a runtime exception is raised.\n+\n+Override Bears and define task scheduling\n+-----------------------------------------\n+\n+\n+\n+How to use `Core.run`\n+--------------------\n+\n+\n+\n+Caching\n+-------\n+\n+The NextGen-Core's caching mechanism is based on task objects. The\n+task objects are hashed using a ``persistent_hash()`` method which\n+is nothing but a combination of ``sha1`` from ``hashlib`` and\n+``pickle.dumps()``. The object is serialized using ``pickle.dupms()``\n+and the bytestream generated by it is hsshed using ``sha1``.","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-03-17T19:41:38Z","lastEditedAt":null,"updatedAt":"2018-03-17T19:41:38Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NTI2ODkxOQ==","url":"https://github.com/coala/coala/pull/5262#discussion_r175268919","bodyText":"I was going to add that but I got caught up with other PRs. Will get on it tomorrow for sure 👍","diffHunk":"@@ -0,0 +1,130 @@\n+NextGen-Core\n+============\n+\n+This document provides a brief overview of coala's NextGen-Core.\n+coala's NextGen-Core comes with the promise of eliminating the dependencies\n+amongst bears (by removing the queuing machanism) and a better performance\n+(by utilising asynchronous I/O and process pool).\n+\n+What has changed?\n+-----------------\n+\n+``Global Bears`` are now called ``Project Bears`` and ``Local Bears`` are\n+now known as ``File Bears``. Both the ``ProjectBear`` and the ``FileBear``\n+classes inherit from the base class ``Bear.py``.\n+\n+- **ProjectBears:** Performs analysis on the whole codebase and does\n+not parallelize tasks. All the bears GlobalBears formerly known as will now\n+inherit from this class.\n+\n+- **FileBears:** Performs analysis on the files provided by the user\n+and parallelizes tasks for each give file. All the bears formerly known as\n+LocalBears will now inherit from this class.\n+\n+What is new?\n+------------\n+\n+The following new features have been installed in the NextGen-Core:\n+\n+- New bear type: ``DependencyBear``\n+- Usage of instance-bound ``Bear.BEAR_DEPS``\n+- Usage of instance-bound ``Bear.REQUIREMENTS``\n+\n+DependencyBear\n+--------------\n+\n+The handling of bear dependencies by the old core wasn't effective. The\n+old core used a queuing mechanism to communicate betweeen bear runs which\n+which led to problems of a GlobalBear not running if any one of its\n+dependencies (a local bear) terminated. The NextGen-Core does away with\n+that by introducing a ``DependencyBear``.\n+\n+This bear serves as a base class parallelizes tasks for each dependency\n+result. A bear dependent on other bears can specify its dependencies in\n+``BEAR_DEPS``. For example there are two bears ``Foo`` and ``Bar``\n+and bear ``Bar`` depends on ``Foo``. This can be written as\n+\n+::\n+\n+    class BarBear(DependencyBear):\n+        BEAR_DEPS = {FooBear}\n+\n+Multiple bears can be included as a dependency of a bear in the BEAR_DEPS\n+field. The results of the dependency bears are saved in a dictionary\n+called ``_dependency_results`` which is initialized in the ``__init()__``\n+method of the class ``Bear.py`` and can be accessed using the method\n+``dependency_results()`` also belonging to the same class.\n+\n+Usage of instance-bound ``Bear.BEAR_DEPS``\n+------------------------------------------\n+\n+A bear might depend on mutilple bears before its execution can begin.\n+``Bear.BEAR_DEPS`` is just a collection (a set) of classes (Bear classes) that\n+need to be executed before that bear can run. Once all these dependencies\n+(Bears) have ran their results are passed into ``self.dependency_results``.\n+The results are in the form of a dictionary with the types of the bears and\n+their corresponding results (in the form of a list) as *Key-Value* pairs.\n+From the previous example if we try to access the BEAR_DEPS of the ``BarBear``\n+we will get the following result.\n+\n+::\n+\n+    import BarBear\n+\n+    >>> BarBear.BEAR_DEPS\n+    {<class 'coalib.core.Bear.FooBear'>}\n+\n+In the `__init__()` method of the class ``Bear.py`` the dependencies specified\n+in the ``BEAR_DEPS`` are copied to every instance of a Bear run using\n+``self.BEAR_DEPS = set(self.BEAR_DEPS)`` which makes runtime modifications\n+are possible.\n+\n+Usage of instance-bound ``Bear.REQUIREMENTS``\n+-----------------------------------------\n+\n+A bear might have some external dependencies that need to be installed before\n+the bear can run any analysis. The ``REQUIREMENTS`` field (a set) contains\n+instances of the ``PackageRequirement`` class from the coala's\n+``dependency_management`` module. For example.\n+\n+::\n+\n+    >>> from dependency_management.requirements.PackageRequirement import (\n+    ...     PackageRequirement)\n+    >>> class BarBear(Bear):\n+    ...     REQUIREMENTS = {\n+    ...         PackageRequirement('pip', 'coala_decorators', '0.2.1')}\n+\n+If the bear uses requirements from a package manager then we can use the\n+subclass of the ``PackageRequirement`` class for that package manager. For\n+example in case of a pip requirement do the following:\n+\n+::\n+\n+    >>> from dependency_management.requirements.PipRequirement import (\n+    ...     PipRequirement)\n+    >>> class FooBear(Bear):\n+    ...     REQUIREMENTS = {PipRequirement('coala_decorators', '0.2.1')}\n+\n+The ``check_prerequisites()`` method in ``Bear.py`` is responsible for\n+checking whether all the required packages are installed. If not then\n+a runtime exception is raised.\n+\n+Override Bears and define task scheduling\n+-----------------------------------------\n+\n+\n+\n+How to use `Core.run`\n+--------------------\n+\n+\n+\n+Caching\n+-------\n+\n+The NextGen-Core's caching mechanism is based on task objects. The\n+task objects are hashed using a ``persistent_hash()`` method which\n+is nothing but a combination of ``sha1`` from ``hashlib`` and\n+``pickle.dumps()``. The object is serialized using ``pickle.dupms()``\n+and the bytestream generated by it is hsshed using ``sha1``.","author":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4","name":"Palash Nigam"},"reactions":[],"createdAt":"2018-03-17T20:15:09Z","lastEditedAt":null,"updatedAt":"2018-03-17T20:15:09Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NTI2ODgzNA==","url":"https://github.com/coala/coala/pull/5262#discussion_r175268834","bodyText":"maybe it should be mentioned - from the base class coalib.bears.Bear.py or coalib.core.Bear.py?","diffHunk":"@@ -0,0 +1,130 @@\n+NextGen-Core\n+============\n+\n+This document provides a brief overview of coala's NextGen-Core.\n+coala's NextGen-Core comes with the promise of eliminating the dependencies\n+amongst bears (by removing the queuing machanism) and a better performance\n+(by utilising asynchronous I/O and process pool).\n+\n+What has changed?\n+-----------------\n+\n+``Global Bears`` are now called ``Project Bears`` and ``Local Bears`` are\n+now known as ``File Bears``. Both the ``ProjectBear`` and the ``FileBear``\n+classes inherit from the base class ``Bear.py``.","author":{"login":"manankalra","avatarUrl":"https://avatars3.githubusercontent.com/u/12759088?v=4","name":"Manan Kalra"},"reactions":[],"createdAt":"2018-03-17T20:11:47Z","lastEditedAt":null,"updatedAt":"2018-03-17T20:11:47Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NTI2ODg2OQ==","url":"https://github.com/coala/coala/pull/5262#discussion_r175268869","bodyText":"formerly known as GlobalBears ;)","diffHunk":"@@ -0,0 +1,130 @@\n+NextGen-Core\n+============\n+\n+This document provides a brief overview of coala's NextGen-Core.\n+coala's NextGen-Core comes with the promise of eliminating the dependencies\n+amongst bears (by removing the queuing machanism) and a better performance\n+(by utilising asynchronous I/O and process pool).\n+\n+What has changed?\n+-----------------\n+\n+``Global Bears`` are now called ``Project Bears`` and ``Local Bears`` are\n+now known as ``File Bears``. Both the ``ProjectBear`` and the ``FileBear``\n+classes inherit from the base class ``Bear.py``.\n+\n+- **ProjectBears:** Performs analysis on the whole codebase and does\n+not parallelize tasks. All the bears GlobalBears formerly known as will now","author":{"login":"manankalra","avatarUrl":"https://avatars3.githubusercontent.com/u/12759088?v=4","name":"Manan Kalra"},"reactions":[],"createdAt":"2018-03-17T20:12:56Z","lastEditedAt":null,"updatedAt":"2018-03-17T20:12:56Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NTI2ODg5NA==","url":"https://github.com/coala/coala/pull/5262#discussion_r175268894","bodyText":"repeated use of which","diffHunk":"@@ -0,0 +1,130 @@\n+NextGen-Core\n+============\n+\n+This document provides a brief overview of coala's NextGen-Core.\n+coala's NextGen-Core comes with the promise of eliminating the dependencies\n+amongst bears (by removing the queuing machanism) and a better performance\n+(by utilising asynchronous I/O and process pool).\n+\n+What has changed?\n+-----------------\n+\n+``Global Bears`` are now called ``Project Bears`` and ``Local Bears`` are\n+now known as ``File Bears``. Both the ``ProjectBear`` and the ``FileBear``\n+classes inherit from the base class ``Bear.py``.\n+\n+- **ProjectBears:** Performs analysis on the whole codebase and does\n+not parallelize tasks. All the bears GlobalBears formerly known as will now\n+inherit from this class.\n+\n+- **FileBears:** Performs analysis on the files provided by the user\n+and parallelizes tasks for each give file. All the bears formerly known as\n+LocalBears will now inherit from this class.\n+\n+What is new?\n+------------\n+\n+The following new features have been installed in the NextGen-Core:\n+\n+- New bear type: ``DependencyBear``\n+- Usage of instance-bound ``Bear.BEAR_DEPS``\n+- Usage of instance-bound ``Bear.REQUIREMENTS``\n+\n+DependencyBear\n+--------------\n+\n+The handling of bear dependencies by the old core wasn't effective. The\n+old core used a queuing mechanism to communicate betweeen bear runs which\n+which led to problems of a GlobalBear not running if any one of its","author":{"login":"manankalra","avatarUrl":"https://avatars3.githubusercontent.com/u/12759088?v=4","name":"Manan Kalra"},"reactions":[{"id":"MDg6UmVhY3Rpb24yMTAwNzY5Mw==","createdAt":"2018-03-17T20:16:37Z","content":"THUMBS_UP","user":{"login":"palash25","name":"Palash Nigam"}}],"createdAt":"2018-03-17T20:14:06Z","lastEditedAt":null,"updatedAt":"2018-03-17T20:14:06Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NTI2ODk2OA==","url":"https://github.com/coala/coala/pull/5262#discussion_r175268968","bodyText":"good catch","diffHunk":"@@ -0,0 +1,130 @@\n+NextGen-Core\n+============\n+\n+This document provides a brief overview of coala's NextGen-Core.\n+coala's NextGen-Core comes with the promise of eliminating the dependencies\n+amongst bears (by removing the queuing machanism) and a better performance\n+(by utilising asynchronous I/O and process pool).\n+\n+What has changed?\n+-----------------\n+\n+``Global Bears`` are now called ``Project Bears`` and ``Local Bears`` are\n+now known as ``File Bears``. Both the ``ProjectBear`` and the ``FileBear``\n+classes inherit from the base class ``Bear.py``.\n+\n+- **ProjectBears:** Performs analysis on the whole codebase and does\n+not parallelize tasks. All the bears GlobalBears formerly known as will now\n+inherit from this class.\n+\n+- **FileBears:** Performs analysis on the files provided by the user\n+and parallelizes tasks for each give file. All the bears formerly known as\n+LocalBears will now inherit from this class.\n+\n+What is new?\n+------------\n+\n+The following new features have been installed in the NextGen-Core:\n+\n+- New bear type: ``DependencyBear``\n+- Usage of instance-bound ``Bear.BEAR_DEPS``\n+- Usage of instance-bound ``Bear.REQUIREMENTS``\n+\n+DependencyBear\n+--------------\n+\n+The handling of bear dependencies by the old core wasn't effective. The\n+old core used a queuing mechanism to communicate betweeen bear runs which\n+which led to problems of a GlobalBear not running if any one of its","author":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4","name":"Palash Nigam"},"reactions":[],"createdAt":"2018-03-17T20:16:50Z","lastEditedAt":null,"updatedAt":"2018-03-17T20:16:50Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NTI2OTE1MA==","url":"https://github.com/coala/coala/pull/5262#discussion_r175269150","bodyText":"I'm not sure if that's necessary. IIRC there is only one Bear.py so there won't any need to mention the whole path of the file and if a developer wants to know where it resides they can always take a look at the api docs","diffHunk":"@@ -0,0 +1,130 @@\n+NextGen-Core\n+============\n+\n+This document provides a brief overview of coala's NextGen-Core.\n+coala's NextGen-Core comes with the promise of eliminating the dependencies\n+amongst bears (by removing the queuing machanism) and a better performance\n+(by utilising asynchronous I/O and process pool).\n+\n+What has changed?\n+-----------------\n+\n+``Global Bears`` are now called ``Project Bears`` and ``Local Bears`` are\n+now known as ``File Bears``. Both the ``ProjectBear`` and the ``FileBear``\n+classes inherit from the base class ``Bear.py``.","author":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4","name":"Palash Nigam"},"reactions":[],"createdAt":"2018-03-17T20:25:27Z","lastEditedAt":null,"updatedAt":"2018-03-17T20:25:27Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NTI2OTE1OA==","url":"https://github.com/coala/coala/pull/5262#discussion_r175269158","bodyText":"done","diffHunk":"@@ -0,0 +1,130 @@\n+NextGen-Core\n+============\n+\n+This document provides a brief overview of coala's NextGen-Core.\n+coala's NextGen-Core comes with the promise of eliminating the dependencies\n+amongst bears (by removing the queuing machanism) and a better performance\n+(by utilising asynchronous I/O and process pool).\n+\n+What has changed?\n+-----------------\n+\n+``Global Bears`` are now called ``Project Bears`` and ``Local Bears`` are\n+now known as ``File Bears``. Both the ``ProjectBear`` and the ``FileBear``\n+classes inherit from the base class ``Bear.py``.\n+\n+- **ProjectBears:** Performs analysis on the whole codebase and does\n+not parallelize tasks. All the bears GlobalBears formerly known as will now","author":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4","name":"Palash Nigam"},"reactions":[],"createdAt":"2018-03-17T20:25:44Z","lastEditedAt":null,"updatedAt":"2018-03-17T20:25:44Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NTI2OTQ5OQ==","url":"https://github.com/coala/coala/pull/5262#discussion_r175269499","bodyText":"there are two 😕","diffHunk":"@@ -0,0 +1,130 @@\n+NextGen-Core\n+============\n+\n+This document provides a brief overview of coala's NextGen-Core.\n+coala's NextGen-Core comes with the promise of eliminating the dependencies\n+amongst bears (by removing the queuing machanism) and a better performance\n+(by utilising asynchronous I/O and process pool).\n+\n+What has changed?\n+-----------------\n+\n+``Global Bears`` are now called ``Project Bears`` and ``Local Bears`` are\n+now known as ``File Bears``. Both the ``ProjectBear`` and the ``FileBear``\n+classes inherit from the base class ``Bear.py``.","author":{"login":"manankalra","avatarUrl":"https://avatars3.githubusercontent.com/u/12759088?v=4","name":"Manan Kalra"},"reactions":[{"id":"MDg6UmVhY3Rpb24yMTAwODA1OA==","createdAt":"2018-03-17T20:44:05Z","content":"THUMBS_UP","user":{"login":"palash25","name":"Palash Nigam"}}],"createdAt":"2018-03-17T20:39:59Z","lastEditedAt":null,"updatedAt":"2018-03-17T20:39:59Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NTI2OTYxMQ==","url":"https://github.com/coala/coala/pull/5262#discussion_r175269611","bodyText":"You are right. I just did a git grep and saw 2 of them. I'll change it ASAP.","diffHunk":"@@ -0,0 +1,130 @@\n+NextGen-Core\n+============\n+\n+This document provides a brief overview of coala's NextGen-Core.\n+coala's NextGen-Core comes with the promise of eliminating the dependencies\n+amongst bears (by removing the queuing machanism) and a better performance\n+(by utilising asynchronous I/O and process pool).\n+\n+What has changed?\n+-----------------\n+\n+``Global Bears`` are now called ``Project Bears`` and ``Local Bears`` are\n+now known as ``File Bears``. Both the ``ProjectBear`` and the ``FileBear``\n+classes inherit from the base class ``Bear.py``.","author":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4","name":"Palash Nigam"},"reactions":[],"createdAt":"2018-03-17T20:44:00Z","lastEditedAt":null,"updatedAt":"2018-03-17T20:44:00Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NTI2OTY3MQ==","url":"https://github.com/coala/coala/pull/5262#discussion_r175269671","bodyText":"@manankalra done and repushed","diffHunk":"@@ -0,0 +1,130 @@\n+NextGen-Core\n+============\n+\n+This document provides a brief overview of coala's NextGen-Core.\n+coala's NextGen-Core comes with the promise of eliminating the dependencies\n+amongst bears (by removing the queuing machanism) and a better performance\n+(by utilising asynchronous I/O and process pool).\n+\n+What has changed?\n+-----------------\n+\n+``Global Bears`` are now called ``Project Bears`` and ``Local Bears`` are\n+now known as ``File Bears``. Both the ``ProjectBear`` and the ``FileBear``\n+classes inherit from the base class ``Bear.py``.","author":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4","name":"Palash Nigam"},"reactions":[],"createdAt":"2018-03-17T20:46:58Z","lastEditedAt":null,"updatedAt":"2018-03-17T20:46:58Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3Njk0OTk1NA==","url":"https://github.com/coala/coala/pull/5262#discussion_r176949954","bodyText":"a better performance => better performance","diffHunk":"@@ -0,0 +1,198 @@\n+NextGen-Core\n+============\n+\n+This document provides a brief overview of coala's NextGen-Core.\n+coala's NextGen-Core comes with the promise of eliminating the dependencies\n+amongst bears (by removing the queuing machanism) and a better performance","author":{"login":"nemaniarjun","avatarUrl":"https://avatars0.githubusercontent.com/u/15715894?v=4","name":"Arjun Nemani"},"reactions":[{"id":"MDg6UmVhY3Rpb24yMTM1MDc2Mg==","createdAt":"2018-03-25T19:19:56Z","content":"THUMBS_UP","user":{"login":"palash25","name":"Palash Nigam"}}],"createdAt":"2018-03-25T18:51:29Z","lastEditedAt":null,"updatedAt":"2018-03-25T18:51:29Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3Njk1MDAyMw==","url":"https://github.com/coala/coala/pull/5262#discussion_r176950023","bodyText":"\"installed in\" ?\nIMO this can be simplified a little bit.","diffHunk":"@@ -0,0 +1,198 @@\n+NextGen-Core\n+============\n+\n+This document provides a brief overview of coala's NextGen-Core.\n+coala's NextGen-Core comes with the promise of eliminating the dependencies\n+amongst bears (by removing the queuing machanism) and a better performance\n+(by utilising asynchronous I/O and process pool).\n+\n+What has changed?\n+-----------------\n+\n+``Global Bears`` are now called ``Project Bears`` and ``Local Bears`` are\n+now known as ``File Bears``. Both the ``ProjectBear`` and the ``FileBear``\n+classes inherit from the base class ``coalib.core.Bear.py``.\n+\n+- **ProjectBears:** Performs analysis on the whole codebase and does\n+not parallelize tasks. All the bears formerly known as GlobalBears will now\n+inherit from this class.\n+\n+- **FileBears:** Performs analysis on the files provided by the user\n+and parallelizes tasks for each give file. All the bears formerly known as\n+LocalBears will now inherit from this class.\n+\n+What is new?\n+------------\n+\n+The following new features have been installed in the NextGen-Core:","author":{"login":"nemaniarjun","avatarUrl":"https://avatars0.githubusercontent.com/u/15715894?v=4","name":"Arjun Nemani"},"reactions":[],"createdAt":"2018-03-25T18:53:29Z","lastEditedAt":null,"updatedAt":"2018-03-25T18:53:29Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3Njk1MDA0Nw==","url":"https://github.com/coala/coala/pull/5262#discussion_r176950047","bodyText":"class \"which\" parallelizes","diffHunk":"@@ -0,0 +1,198 @@\n+NextGen-Core\n+============\n+\n+This document provides a brief overview of coala's NextGen-Core.\n+coala's NextGen-Core comes with the promise of eliminating the dependencies\n+amongst bears (by removing the queuing machanism) and a better performance\n+(by utilising asynchronous I/O and process pool).\n+\n+What has changed?\n+-----------------\n+\n+``Global Bears`` are now called ``Project Bears`` and ``Local Bears`` are\n+now known as ``File Bears``. Both the ``ProjectBear`` and the ``FileBear``\n+classes inherit from the base class ``coalib.core.Bear.py``.\n+\n+- **ProjectBears:** Performs analysis on the whole codebase and does\n+not parallelize tasks. All the bears formerly known as GlobalBears will now\n+inherit from this class.\n+\n+- **FileBears:** Performs analysis on the files provided by the user\n+and parallelizes tasks for each give file. All the bears formerly known as\n+LocalBears will now inherit from this class.\n+\n+What is new?\n+------------\n+\n+The following new features have been installed in the NextGen-Core:\n+\n+- New bear type: ``DependencyBear``\n+- Usage of instance-bound ``Bear.BEAR_DEPS``\n+- Usage of instance-bound ``Bear.REQUIREMENTS``\n+\n+DependencyBear\n+--------------\n+\n+The handling of bear dependencies by the old core wasn't effective. The\n+old core used a queuing mechanism to communicate betweeen bear runs which\n+led to problems of a GlobalBear not running if any one of its\n+dependencies (a local bear) terminated. The NextGen-Core does away with\n+that by introducing a ``DependencyBear``.\n+\n+This bear serves as a base class parallelizes tasks for each dependency","author":{"login":"nemaniarjun","avatarUrl":"https://avatars0.githubusercontent.com/u/15715894?v=4","name":"Arjun Nemani"},"reactions":[{"id":"MDg6UmVhY3Rpb24yMTM1MDc4NQ==","createdAt":"2018-03-25T19:21:35Z","content":"THUMBS_UP","user":{"login":"palash25","name":"Palash Nigam"}}],"createdAt":"2018-03-25T18:54:24Z","lastEditedAt":null,"updatedAt":"2018-03-25T18:54:24Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3Njk1MDExOA==","url":"https://github.com/coala/coala/pull/5262#discussion_r176950118","bodyText":"\"project bear\" -> \"ProjectBear\"\n\"file bear\" -> \"FileBear\"\nNot sure though which one would be easier to understand 🤔","diffHunk":"@@ -0,0 +1,198 @@\n+NextGen-Core\n+============\n+\n+This document provides a brief overview of coala's NextGen-Core.\n+coala's NextGen-Core comes with the promise of eliminating the dependencies\n+amongst bears (by removing the queuing machanism) and a better performance\n+(by utilising asynchronous I/O and process pool).\n+\n+What has changed?\n+-----------------\n+\n+``Global Bears`` are now called ``Project Bears`` and ``Local Bears`` are\n+now known as ``File Bears``. Both the ``ProjectBear`` and the ``FileBear``\n+classes inherit from the base class ``coalib.core.Bear.py``.\n+\n+- **ProjectBears:** Performs analysis on the whole codebase and does\n+not parallelize tasks. All the bears formerly known as GlobalBears will now\n+inherit from this class.\n+\n+- **FileBears:** Performs analysis on the files provided by the user\n+and parallelizes tasks for each give file. All the bears formerly known as\n+LocalBears will now inherit from this class.\n+\n+What is new?\n+------------\n+\n+The following new features have been installed in the NextGen-Core:\n+\n+- New bear type: ``DependencyBear``\n+- Usage of instance-bound ``Bear.BEAR_DEPS``\n+- Usage of instance-bound ``Bear.REQUIREMENTS``\n+\n+DependencyBear\n+--------------\n+\n+The handling of bear dependencies by the old core wasn't effective. The\n+old core used a queuing mechanism to communicate betweeen bear runs which\n+led to problems of a GlobalBear not running if any one of its\n+dependencies (a local bear) terminated. The NextGen-Core does away with\n+that by introducing a ``DependencyBear``.\n+\n+This bear serves as a base class parallelizes tasks for each dependency\n+result. A bear dependent on other bears can specify its dependencies in\n+``BEAR_DEPS``. For example there are two bears ``Foo`` and ``Bar``\n+and bear ``Bar`` depends on ``Foo``. This can be written as\n+\n+::\n+\n+    class BarBear(DependencyBear):\n+        BEAR_DEPS = {FooBear}\n+\n+Multiple bears can be included as a dependency of a bear in the BEAR_DEPS\n+field. The results of the dependency bears are saved in a dictionary\n+called ``_dependency_results`` which is initialized in the ``__init()__``\n+method of the class ``Bear.py`` and can be accessed using the method\n+``dependency_results()`` also belonging to the same class.\n+\n+Writing A Dependency Bear\n+-------------------------\n+\n+Lets consider a bear to be dependent on a project bear ``Fizz`` and a file bear","author":{"login":"nemaniarjun","avatarUrl":"https://avatars0.githubusercontent.com/u/15715894?v=4","name":"Arjun Nemani"},"reactions":[],"createdAt":"2018-03-25T18:56:18Z","lastEditedAt":null,"updatedAt":"2018-03-25T18:56:18Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3Njk1MDE4Mg==","url":"https://github.com/coala/coala/pull/5262#discussion_r176950182","bodyText":"typo -> mutilple\nalso needs rephrasing is needed. does it depend on these bears to run? or that they are installed?\nI dont know enough about this to know. but anyone reading this documentation should understand it without any prior knowledge.","diffHunk":"@@ -0,0 +1,198 @@\n+NextGen-Core\n+============\n+\n+This document provides a brief overview of coala's NextGen-Core.\n+coala's NextGen-Core comes with the promise of eliminating the dependencies\n+amongst bears (by removing the queuing machanism) and a better performance\n+(by utilising asynchronous I/O and process pool).\n+\n+What has changed?\n+-----------------\n+\n+``Global Bears`` are now called ``Project Bears`` and ``Local Bears`` are\n+now known as ``File Bears``. Both the ``ProjectBear`` and the ``FileBear``\n+classes inherit from the base class ``coalib.core.Bear.py``.\n+\n+- **ProjectBears:** Performs analysis on the whole codebase and does\n+not parallelize tasks. All the bears formerly known as GlobalBears will now\n+inherit from this class.\n+\n+- **FileBears:** Performs analysis on the files provided by the user\n+and parallelizes tasks for each give file. All the bears formerly known as\n+LocalBears will now inherit from this class.\n+\n+What is new?\n+------------\n+\n+The following new features have been installed in the NextGen-Core:\n+\n+- New bear type: ``DependencyBear``\n+- Usage of instance-bound ``Bear.BEAR_DEPS``\n+- Usage of instance-bound ``Bear.REQUIREMENTS``\n+\n+DependencyBear\n+--------------\n+\n+The handling of bear dependencies by the old core wasn't effective. The\n+old core used a queuing mechanism to communicate betweeen bear runs which\n+led to problems of a GlobalBear not running if any one of its\n+dependencies (a local bear) terminated. The NextGen-Core does away with\n+that by introducing a ``DependencyBear``.\n+\n+This bear serves as a base class parallelizes tasks for each dependency\n+result. A bear dependent on other bears can specify its dependencies in\n+``BEAR_DEPS``. For example there are two bears ``Foo`` and ``Bar``\n+and bear ``Bar`` depends on ``Foo``. This can be written as\n+\n+::\n+\n+    class BarBear(DependencyBear):\n+        BEAR_DEPS = {FooBear}\n+\n+Multiple bears can be included as a dependency of a bear in the BEAR_DEPS\n+field. The results of the dependency bears are saved in a dictionary\n+called ``_dependency_results`` which is initialized in the ``__init()__``\n+method of the class ``Bear.py`` and can be accessed using the method\n+``dependency_results()`` also belonging to the same class.\n+\n+Writing A Dependency Bear\n+-------------------------\n+\n+Lets consider a bear to be dependent on a project bear ``Fizz`` and a file bear\n+``Buzz`` then the corresponding DependencyBear lets call it ``FizzBuzz`` will\n+look like the following:\n+\n+::\n+\n+    class FizzBuzzBear(DependencyBear):\n+        BEAR_DEPS = {FizzBear, BuzzBear}\n+\n+        def analyze(self, dependency_bear, dependency_result, a_number=100):\n+            yield '{} ({}) - {}'.format(\n+                dependency_bear.name, a_number, dependency_result)\n+\n+Usage of instance-bound ``Bear.BEAR_DEPS``\n+------------------------------------------\n+\n+A bear might depend on mutilple bears before its execution can begin.","author":{"login":"nemaniarjun","avatarUrl":"https://avatars0.githubusercontent.com/u/15715894?v=4","name":"Arjun Nemani"},"reactions":[{"id":"MDg6UmVhY3Rpb24yMTM1MDk2MA==","createdAt":"2018-03-25T19:32:47Z","content":"THUMBS_UP","user":{"login":"palash25","name":"Palash Nigam"}}],"createdAt":"2018-03-25T18:58:26Z","lastEditedAt":null,"updatedAt":"2018-03-25T18:58:26Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3Njk1MDI2Nw==","url":"https://github.com/coala/coala/pull/5262#discussion_r176950267","bodyText":"Core.py instead of Core.PY","diffHunk":"@@ -0,0 +1,198 @@\n+NextGen-Core\n+============\n+\n+This document provides a brief overview of coala's NextGen-Core.\n+coala's NextGen-Core comes with the promise of eliminating the dependencies\n+amongst bears (by removing the queuing machanism) and a better performance\n+(by utilising asynchronous I/O and process pool).\n+\n+What has changed?\n+-----------------\n+\n+``Global Bears`` are now called ``Project Bears`` and ``Local Bears`` are\n+now known as ``File Bears``. Both the ``ProjectBear`` and the ``FileBear``\n+classes inherit from the base class ``coalib.core.Bear.py``.\n+\n+- **ProjectBears:** Performs analysis on the whole codebase and does\n+not parallelize tasks. All the bears formerly known as GlobalBears will now\n+inherit from this class.\n+\n+- **FileBears:** Performs analysis on the files provided by the user\n+and parallelizes tasks for each give file. All the bears formerly known as\n+LocalBears will now inherit from this class.\n+\n+What is new?\n+------------\n+\n+The following new features have been installed in the NextGen-Core:\n+\n+- New bear type: ``DependencyBear``\n+- Usage of instance-bound ``Bear.BEAR_DEPS``\n+- Usage of instance-bound ``Bear.REQUIREMENTS``\n+\n+DependencyBear\n+--------------\n+\n+The handling of bear dependencies by the old core wasn't effective. The\n+old core used a queuing mechanism to communicate betweeen bear runs which\n+led to problems of a GlobalBear not running if any one of its\n+dependencies (a local bear) terminated. The NextGen-Core does away with\n+that by introducing a ``DependencyBear``.\n+\n+This bear serves as a base class parallelizes tasks for each dependency\n+result. A bear dependent on other bears can specify its dependencies in\n+``BEAR_DEPS``. For example there are two bears ``Foo`` and ``Bar``\n+and bear ``Bar`` depends on ``Foo``. This can be written as\n+\n+::\n+\n+    class BarBear(DependencyBear):\n+        BEAR_DEPS = {FooBear}\n+\n+Multiple bears can be included as a dependency of a bear in the BEAR_DEPS\n+field. The results of the dependency bears are saved in a dictionary\n+called ``_dependency_results`` which is initialized in the ``__init()__``\n+method of the class ``Bear.py`` and can be accessed using the method\n+``dependency_results()`` also belonging to the same class.\n+\n+Writing A Dependency Bear\n+-------------------------\n+\n+Lets consider a bear to be dependent on a project bear ``Fizz`` and a file bear\n+``Buzz`` then the corresponding DependencyBear lets call it ``FizzBuzz`` will\n+look like the following:\n+\n+::\n+\n+    class FizzBuzzBear(DependencyBear):\n+        BEAR_DEPS = {FizzBear, BuzzBear}\n+\n+        def analyze(self, dependency_bear, dependency_result, a_number=100):\n+            yield '{} ({}) - {}'.format(\n+                dependency_bear.name, a_number, dependency_result)\n+\n+Usage of instance-bound ``Bear.BEAR_DEPS``\n+------------------------------------------\n+\n+A bear might depend on mutilple bears before its execution can begin.\n+``Bear.BEAR_DEPS`` is just a collection (a set) of classes (Bear classes) that\n+need to be executed before that bear can run. Once all these dependencies\n+(Bears) have ran their results are passed into ``self.dependency_results``.\n+The results are in the form of a dictionary with the types of the bears and\n+their corresponding results (in the form of a list) as *Key-Value* pairs.\n+From the previous example if we try to access the BEAR_DEPS of the ``BarBear``\n+we will get the result ``{<class 'coalib.core.Bear.FooBear'>}``.\n+\n+In the `__init__()` method of the class ``Bear.py`` the dependencies specified\n+in the ``BEAR_DEPS`` are copied to every instance of a Bear run using\n+``self.BEAR_DEPS = set(self.BEAR_DEPS)`` which makes runtime modifications\n+are possible.\n+\n+Usage of instance-bound ``Bear.REQUIREMENTS``\n+-----------------------------------------\n+\n+A bear might have some external dependencies that need to be installed before\n+the bear can run any analysis. The ``REQUIREMENTS`` field (a set) contains\n+instances of the ``PackageRequirement`` class from the coala's\n+``dependency_management`` module. For example.\n+\n+::\n+\n+    >>> from dependency_management.requirements.PackageRequirement import (\n+    ...     PackageRequirement)\n+    >>> from coalib.core.Bear import Bear\n+    ...\n+    >>> class BarBear(Bear):\n+    ...     REQUIREMENTS = {\n+    ...         PackageRequirement('pip', 'coala_decorators', '0.2.1')}\n+\n+If the bear uses requirements from a package manager then we can use the\n+subclass of the ``PackageRequirement`` class for that package manager. For\n+example in case of a pip requirement do the following:\n+\n+::\n+\n+    >>> from dependency_management.requirements.PipRequirement import (\n+    ...     PipRequirement)\n+    >>> class FooBear(Bear):\n+    ...     REQUIREMENTS = {PipRequirement('coala_decorators', '0.2.1')}\n+\n+\n+Override bears and define task scheduling\n+-----------------------------------------\n+\n+A nextgen bear has to have the following functions to perform analysis\n+- ``generate_tasks``: This method is a part of the parent ``Bear.py`` class\n+and returns tuples containing the positional arguments as a tuple and the\n+keyword arguments in the form of a dict. These are actually the task objects\n+that are scheduled and executed by the core. Absence of this method raises\n+``NotImplementedError``.\n+- ``analyze``: This method contains the code that performs the actual code\n+analysis routine that that bear is used for. Absence of this method raises\n+``NotImplementedError``.\n+\n+How to use `Core.run`\n+--------------------\n+\n+The `run(bears, result_callback, cache=None, executor=None)` method in `Core.PY`","author":{"login":"nemaniarjun","avatarUrl":"https://avatars0.githubusercontent.com/u/15715894?v=4","name":"Arjun Nemani"},"reactions":[{"id":"MDg6UmVhY3Rpb24yMTM1MDk0OQ==","createdAt":"2018-03-25T19:32:02Z","content":"THUMBS_UP","user":{"login":"palash25","name":"Palash Nigam"}}],"createdAt":"2018-03-25T19:01:04Z","lastEditedAt":null,"updatedAt":"2018-03-25T19:01:04Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3Njk1MDMxNg==","url":"https://github.com/coala/coala/pull/5262#discussion_r176950316","bodyText":"space before the \"(\"","diffHunk":"@@ -0,0 +1,198 @@\n+NextGen-Core\n+============\n+\n+This document provides a brief overview of coala's NextGen-Core.\n+coala's NextGen-Core comes with the promise of eliminating the dependencies\n+amongst bears (by removing the queuing machanism) and a better performance\n+(by utilising asynchronous I/O and process pool).\n+\n+What has changed?\n+-----------------\n+\n+``Global Bears`` are now called ``Project Bears`` and ``Local Bears`` are\n+now known as ``File Bears``. Both the ``ProjectBear`` and the ``FileBear``\n+classes inherit from the base class ``coalib.core.Bear.py``.\n+\n+- **ProjectBears:** Performs analysis on the whole codebase and does\n+not parallelize tasks. All the bears formerly known as GlobalBears will now\n+inherit from this class.\n+\n+- **FileBears:** Performs analysis on the files provided by the user\n+and parallelizes tasks for each give file. All the bears formerly known as\n+LocalBears will now inherit from this class.\n+\n+What is new?\n+------------\n+\n+The following new features have been installed in the NextGen-Core:\n+\n+- New bear type: ``DependencyBear``\n+- Usage of instance-bound ``Bear.BEAR_DEPS``\n+- Usage of instance-bound ``Bear.REQUIREMENTS``\n+\n+DependencyBear\n+--------------\n+\n+The handling of bear dependencies by the old core wasn't effective. The\n+old core used a queuing mechanism to communicate betweeen bear runs which\n+led to problems of a GlobalBear not running if any one of its\n+dependencies (a local bear) terminated. The NextGen-Core does away with\n+that by introducing a ``DependencyBear``.\n+\n+This bear serves as a base class parallelizes tasks for each dependency\n+result. A bear dependent on other bears can specify its dependencies in\n+``BEAR_DEPS``. For example there are two bears ``Foo`` and ``Bar``\n+and bear ``Bar`` depends on ``Foo``. This can be written as\n+\n+::\n+\n+    class BarBear(DependencyBear):\n+        BEAR_DEPS = {FooBear}\n+\n+Multiple bears can be included as a dependency of a bear in the BEAR_DEPS\n+field. The results of the dependency bears are saved in a dictionary\n+called ``_dependency_results`` which is initialized in the ``__init()__``\n+method of the class ``Bear.py`` and can be accessed using the method\n+``dependency_results()`` also belonging to the same class.\n+\n+Writing A Dependency Bear\n+-------------------------\n+\n+Lets consider a bear to be dependent on a project bear ``Fizz`` and a file bear\n+``Buzz`` then the corresponding DependencyBear lets call it ``FizzBuzz`` will\n+look like the following:\n+\n+::\n+\n+    class FizzBuzzBear(DependencyBear):\n+        BEAR_DEPS = {FizzBear, BuzzBear}\n+\n+        def analyze(self, dependency_bear, dependency_result, a_number=100):\n+            yield '{} ({}) - {}'.format(\n+                dependency_bear.name, a_number, dependency_result)\n+\n+Usage of instance-bound ``Bear.BEAR_DEPS``\n+------------------------------------------\n+\n+A bear might depend on mutilple bears before its execution can begin.\n+``Bear.BEAR_DEPS`` is just a collection (a set) of classes (Bear classes) that\n+need to be executed before that bear can run. Once all these dependencies\n+(Bears) have ran their results are passed into ``self.dependency_results``.\n+The results are in the form of a dictionary with the types of the bears and\n+their corresponding results (in the form of a list) as *Key-Value* pairs.\n+From the previous example if we try to access the BEAR_DEPS of the ``BarBear``\n+we will get the result ``{<class 'coalib.core.Bear.FooBear'>}``.\n+\n+In the `__init__()` method of the class ``Bear.py`` the dependencies specified\n+in the ``BEAR_DEPS`` are copied to every instance of a Bear run using\n+``self.BEAR_DEPS = set(self.BEAR_DEPS)`` which makes runtime modifications\n+are possible.\n+\n+Usage of instance-bound ``Bear.REQUIREMENTS``\n+-----------------------------------------\n+\n+A bear might have some external dependencies that need to be installed before\n+the bear can run any analysis. The ``REQUIREMENTS`` field (a set) contains\n+instances of the ``PackageRequirement`` class from the coala's\n+``dependency_management`` module. For example.\n+\n+::\n+\n+    >>> from dependency_management.requirements.PackageRequirement import (\n+    ...     PackageRequirement)\n+    >>> from coalib.core.Bear import Bear\n+    ...\n+    >>> class BarBear(Bear):\n+    ...     REQUIREMENTS = {\n+    ...         PackageRequirement('pip', 'coala_decorators', '0.2.1')}\n+\n+If the bear uses requirements from a package manager then we can use the\n+subclass of the ``PackageRequirement`` class for that package manager. For\n+example in case of a pip requirement do the following:\n+\n+::\n+\n+    >>> from dependency_management.requirements.PipRequirement import (\n+    ...     PipRequirement)\n+    >>> class FooBear(Bear):\n+    ...     REQUIREMENTS = {PipRequirement('coala_decorators', '0.2.1')}\n+\n+\n+Override bears and define task scheduling\n+-----------------------------------------\n+\n+A nextgen bear has to have the following functions to perform analysis\n+- ``generate_tasks``: This method is a part of the parent ``Bear.py`` class\n+and returns tuples containing the positional arguments as a tuple and the\n+keyword arguments in the form of a dict. These are actually the task objects\n+that are scheduled and executed by the core. Absence of this method raises\n+``NotImplementedError``.\n+- ``analyze``: This method contains the code that performs the actual code\n+analysis routine that that bear is used for. Absence of this method raises\n+``NotImplementedError``.\n+\n+How to use `Core.run`\n+--------------------\n+\n+The `run(bears, result_callback, cache=None, executor=None)` method in `Core.PY`\n+is used to instantiate a coala session with the parameters it receives and run\n+it.\n+- ``bears``: contains all the instances of bears to run.\n+- ``result_callback``: a function that is called only when the results from\n+the bears are available.\n+- ``cache``: a cache used by bears to speed up runs.\n+- ``executor``: a custom executor used to run the bears. By default\n+``ProcessPoolExecutor`` is used.\n+\n+The new core comes with the following new additions:\n+- **Dependency Resolution:** The ``initialize_dependencies`` method in\n+``Core.py`` recieves the bears that are to be run and processes bear\n+dependencies using a consumer based system so that each dependency bear has only\n+one instance per section and file-dict. It returns a set of dependency bears\n+along with those bears that don't have any dependencies or whose dependencies\n+have been resolved(these are the ones that are scheduled to be run). The bears","author":{"login":"nemaniarjun","avatarUrl":"https://avatars0.githubusercontent.com/u/15715894?v=4","name":"Arjun Nemani"},"reactions":[{"id":"MDg6UmVhY3Rpb24yMTM1MDk0Ng==","createdAt":"2018-03-25T19:31:46Z","content":"THUMBS_UP","user":{"login":"palash25","name":"Palash Nigam"}}],"createdAt":"2018-03-25T19:02:36Z","lastEditedAt":null,"updatedAt":"2018-03-25T19:02:36Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3Njk1MDM2MQ==","url":"https://github.com/coala/coala/pull/5262#discussion_r176950361","bodyText":"typo. exexuting","diffHunk":"@@ -0,0 +1,198 @@\n+NextGen-Core\n+============\n+\n+This document provides a brief overview of coala's NextGen-Core.\n+coala's NextGen-Core comes with the promise of eliminating the dependencies\n+amongst bears (by removing the queuing machanism) and a better performance\n+(by utilising asynchronous I/O and process pool).\n+\n+What has changed?\n+-----------------\n+\n+``Global Bears`` are now called ``Project Bears`` and ``Local Bears`` are\n+now known as ``File Bears``. Both the ``ProjectBear`` and the ``FileBear``\n+classes inherit from the base class ``coalib.core.Bear.py``.\n+\n+- **ProjectBears:** Performs analysis on the whole codebase and does\n+not parallelize tasks. All the bears formerly known as GlobalBears will now\n+inherit from this class.\n+\n+- **FileBears:** Performs analysis on the files provided by the user\n+and parallelizes tasks for each give file. All the bears formerly known as\n+LocalBears will now inherit from this class.\n+\n+What is new?\n+------------\n+\n+The following new features have been installed in the NextGen-Core:\n+\n+- New bear type: ``DependencyBear``\n+- Usage of instance-bound ``Bear.BEAR_DEPS``\n+- Usage of instance-bound ``Bear.REQUIREMENTS``\n+\n+DependencyBear\n+--------------\n+\n+The handling of bear dependencies by the old core wasn't effective. The\n+old core used a queuing mechanism to communicate betweeen bear runs which\n+led to problems of a GlobalBear not running if any one of its\n+dependencies (a local bear) terminated. The NextGen-Core does away with\n+that by introducing a ``DependencyBear``.\n+\n+This bear serves as a base class parallelizes tasks for each dependency\n+result. A bear dependent on other bears can specify its dependencies in\n+``BEAR_DEPS``. For example there are two bears ``Foo`` and ``Bar``\n+and bear ``Bar`` depends on ``Foo``. This can be written as\n+\n+::\n+\n+    class BarBear(DependencyBear):\n+        BEAR_DEPS = {FooBear}\n+\n+Multiple bears can be included as a dependency of a bear in the BEAR_DEPS\n+field. The results of the dependency bears are saved in a dictionary\n+called ``_dependency_results`` which is initialized in the ``__init()__``\n+method of the class ``Bear.py`` and can be accessed using the method\n+``dependency_results()`` also belonging to the same class.\n+\n+Writing A Dependency Bear\n+-------------------------\n+\n+Lets consider a bear to be dependent on a project bear ``Fizz`` and a file bear\n+``Buzz`` then the corresponding DependencyBear lets call it ``FizzBuzz`` will\n+look like the following:\n+\n+::\n+\n+    class FizzBuzzBear(DependencyBear):\n+        BEAR_DEPS = {FizzBear, BuzzBear}\n+\n+        def analyze(self, dependency_bear, dependency_result, a_number=100):\n+            yield '{} ({}) - {}'.format(\n+                dependency_bear.name, a_number, dependency_result)\n+\n+Usage of instance-bound ``Bear.BEAR_DEPS``\n+------------------------------------------\n+\n+A bear might depend on mutilple bears before its execution can begin.\n+``Bear.BEAR_DEPS`` is just a collection (a set) of classes (Bear classes) that\n+need to be executed before that bear can run. Once all these dependencies\n+(Bears) have ran their results are passed into ``self.dependency_results``.\n+The results are in the form of a dictionary with the types of the bears and\n+their corresponding results (in the form of a list) as *Key-Value* pairs.\n+From the previous example if we try to access the BEAR_DEPS of the ``BarBear``\n+we will get the result ``{<class 'coalib.core.Bear.FooBear'>}``.\n+\n+In the `__init__()` method of the class ``Bear.py`` the dependencies specified\n+in the ``BEAR_DEPS`` are copied to every instance of a Bear run using\n+``self.BEAR_DEPS = set(self.BEAR_DEPS)`` which makes runtime modifications\n+are possible.\n+\n+Usage of instance-bound ``Bear.REQUIREMENTS``\n+-----------------------------------------\n+\n+A bear might have some external dependencies that need to be installed before\n+the bear can run any analysis. The ``REQUIREMENTS`` field (a set) contains\n+instances of the ``PackageRequirement`` class from the coala's\n+``dependency_management`` module. For example.\n+\n+::\n+\n+    >>> from dependency_management.requirements.PackageRequirement import (\n+    ...     PackageRequirement)\n+    >>> from coalib.core.Bear import Bear\n+    ...\n+    >>> class BarBear(Bear):\n+    ...     REQUIREMENTS = {\n+    ...         PackageRequirement('pip', 'coala_decorators', '0.2.1')}\n+\n+If the bear uses requirements from a package manager then we can use the\n+subclass of the ``PackageRequirement`` class for that package manager. For\n+example in case of a pip requirement do the following:\n+\n+::\n+\n+    >>> from dependency_management.requirements.PipRequirement import (\n+    ...     PipRequirement)\n+    >>> class FooBear(Bear):\n+    ...     REQUIREMENTS = {PipRequirement('coala_decorators', '0.2.1')}\n+\n+\n+Override bears and define task scheduling\n+-----------------------------------------\n+\n+A nextgen bear has to have the following functions to perform analysis\n+- ``generate_tasks``: This method is a part of the parent ``Bear.py`` class\n+and returns tuples containing the positional arguments as a tuple and the\n+keyword arguments in the form of a dict. These are actually the task objects\n+that are scheduled and executed by the core. Absence of this method raises\n+``NotImplementedError``.\n+- ``analyze``: This method contains the code that performs the actual code\n+analysis routine that that bear is used for. Absence of this method raises\n+``NotImplementedError``.\n+\n+How to use `Core.run`\n+--------------------\n+\n+The `run(bears, result_callback, cache=None, executor=None)` method in `Core.PY`\n+is used to instantiate a coala session with the parameters it receives and run\n+it.\n+- ``bears``: contains all the instances of bears to run.\n+- ``result_callback``: a function that is called only when the results from\n+the bears are available.\n+- ``cache``: a cache used by bears to speed up runs.\n+- ``executor``: a custom executor used to run the bears. By default\n+``ProcessPoolExecutor`` is used.\n+\n+The new core comes with the following new additions:\n+- **Dependency Resolution:** The ``initialize_dependencies`` method in\n+``Core.py`` recieves the bears that are to be run and processes bear\n+dependencies using a consumer based system so that each dependency bear has only\n+one instance per section and file-dict. It returns a set of dependency bears\n+along with those bears that don't have any dependencies or whose dependencies\n+have been resolved(these are the ones that are scheduled to be run). The bears\n+are resolved by traversing each edge of the dependency graph and instantiating\n+dependency bears accordingly one per section. Before the bears are run we\n+initialize the dependency tracking in the ``__init__`` method of the class\n+``Session`` which is responsible for running coala sessions. The\n+``dependency_tracker`` object is used while scheduling and cleaning up bears and\n+also while finishing bear tasks.\n+\n+- **Task Scheduling:** The bears that have no dependencies or whose\n+dependencies have been resolved, only their tasks will be scheduled for\n+execution. Before exexuting any tasks the coala looks up the task in the cache.","author":{"login":"nemaniarjun","avatarUrl":"https://avatars0.githubusercontent.com/u/15715894?v=4","name":"Arjun Nemani"},"reactions":[{"id":"MDg6UmVhY3Rpb24yMTM1MDk0MA==","createdAt":"2018-03-25T19:31:17Z","content":"THUMBS_UP","user":{"login":"palash25","name":"Palash Nigam"}}],"createdAt":"2018-03-25T19:03:44Z","lastEditedAt":null,"updatedAt":"2018-03-25T19:03:44Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3Njk1MDQ2OQ==","url":"https://github.com/coala/coala/pull/5262#discussion_r176950469","bodyText":"This part is confusing. fix the plurals. it should go like \"before executing any task, coala will look it up in the cache, in ... that are ... are called using ...","diffHunk":"@@ -0,0 +1,198 @@\n+NextGen-Core\n+============\n+\n+This document provides a brief overview of coala's NextGen-Core.\n+coala's NextGen-Core comes with the promise of eliminating the dependencies\n+amongst bears (by removing the queuing machanism) and a better performance\n+(by utilising asynchronous I/O and process pool).\n+\n+What has changed?\n+-----------------\n+\n+``Global Bears`` are now called ``Project Bears`` and ``Local Bears`` are\n+now known as ``File Bears``. Both the ``ProjectBear`` and the ``FileBear``\n+classes inherit from the base class ``coalib.core.Bear.py``.\n+\n+- **ProjectBears:** Performs analysis on the whole codebase and does\n+not parallelize tasks. All the bears formerly known as GlobalBears will now\n+inherit from this class.\n+\n+- **FileBears:** Performs analysis on the files provided by the user\n+and parallelizes tasks for each give file. All the bears formerly known as\n+LocalBears will now inherit from this class.\n+\n+What is new?\n+------------\n+\n+The following new features have been installed in the NextGen-Core:\n+\n+- New bear type: ``DependencyBear``\n+- Usage of instance-bound ``Bear.BEAR_DEPS``\n+- Usage of instance-bound ``Bear.REQUIREMENTS``\n+\n+DependencyBear\n+--------------\n+\n+The handling of bear dependencies by the old core wasn't effective. The\n+old core used a queuing mechanism to communicate betweeen bear runs which\n+led to problems of a GlobalBear not running if any one of its\n+dependencies (a local bear) terminated. The NextGen-Core does away with\n+that by introducing a ``DependencyBear``.\n+\n+This bear serves as a base class parallelizes tasks for each dependency\n+result. A bear dependent on other bears can specify its dependencies in\n+``BEAR_DEPS``. For example there are two bears ``Foo`` and ``Bar``\n+and bear ``Bar`` depends on ``Foo``. This can be written as\n+\n+::\n+\n+    class BarBear(DependencyBear):\n+        BEAR_DEPS = {FooBear}\n+\n+Multiple bears can be included as a dependency of a bear in the BEAR_DEPS\n+field. The results of the dependency bears are saved in a dictionary\n+called ``_dependency_results`` which is initialized in the ``__init()__``\n+method of the class ``Bear.py`` and can be accessed using the method\n+``dependency_results()`` also belonging to the same class.\n+\n+Writing A Dependency Bear\n+-------------------------\n+\n+Lets consider a bear to be dependent on a project bear ``Fizz`` and a file bear\n+``Buzz`` then the corresponding DependencyBear lets call it ``FizzBuzz`` will\n+look like the following:\n+\n+::\n+\n+    class FizzBuzzBear(DependencyBear):\n+        BEAR_DEPS = {FizzBear, BuzzBear}\n+\n+        def analyze(self, dependency_bear, dependency_result, a_number=100):\n+            yield '{} ({}) - {}'.format(\n+                dependency_bear.name, a_number, dependency_result)\n+\n+Usage of instance-bound ``Bear.BEAR_DEPS``\n+------------------------------------------\n+\n+A bear might depend on mutilple bears before its execution can begin.\n+``Bear.BEAR_DEPS`` is just a collection (a set) of classes (Bear classes) that\n+need to be executed before that bear can run. Once all these dependencies\n+(Bears) have ran their results are passed into ``self.dependency_results``.\n+The results are in the form of a dictionary with the types of the bears and\n+their corresponding results (in the form of a list) as *Key-Value* pairs.\n+From the previous example if we try to access the BEAR_DEPS of the ``BarBear``\n+we will get the result ``{<class 'coalib.core.Bear.FooBear'>}``.\n+\n+In the `__init__()` method of the class ``Bear.py`` the dependencies specified\n+in the ``BEAR_DEPS`` are copied to every instance of a Bear run using\n+``self.BEAR_DEPS = set(self.BEAR_DEPS)`` which makes runtime modifications\n+are possible.\n+\n+Usage of instance-bound ``Bear.REQUIREMENTS``\n+-----------------------------------------\n+\n+A bear might have some external dependencies that need to be installed before\n+the bear can run any analysis. The ``REQUIREMENTS`` field (a set) contains\n+instances of the ``PackageRequirement`` class from the coala's\n+``dependency_management`` module. For example.\n+\n+::\n+\n+    >>> from dependency_management.requirements.PackageRequirement import (\n+    ...     PackageRequirement)\n+    >>> from coalib.core.Bear import Bear\n+    ...\n+    >>> class BarBear(Bear):\n+    ...     REQUIREMENTS = {\n+    ...         PackageRequirement('pip', 'coala_decorators', '0.2.1')}\n+\n+If the bear uses requirements from a package manager then we can use the\n+subclass of the ``PackageRequirement`` class for that package manager. For\n+example in case of a pip requirement do the following:\n+\n+::\n+\n+    >>> from dependency_management.requirements.PipRequirement import (\n+    ...     PipRequirement)\n+    >>> class FooBear(Bear):\n+    ...     REQUIREMENTS = {PipRequirement('coala_decorators', '0.2.1')}\n+\n+\n+Override bears and define task scheduling\n+-----------------------------------------\n+\n+A nextgen bear has to have the following functions to perform analysis\n+- ``generate_tasks``: This method is a part of the parent ``Bear.py`` class\n+and returns tuples containing the positional arguments as a tuple and the\n+keyword arguments in the form of a dict. These are actually the task objects\n+that are scheduled and executed by the core. Absence of this method raises\n+``NotImplementedError``.\n+- ``analyze``: This method contains the code that performs the actual code\n+analysis routine that that bear is used for. Absence of this method raises\n+``NotImplementedError``.\n+\n+How to use `Core.run`\n+--------------------\n+\n+The `run(bears, result_callback, cache=None, executor=None)` method in `Core.PY`\n+is used to instantiate a coala session with the parameters it receives and run\n+it.\n+- ``bears``: contains all the instances of bears to run.\n+- ``result_callback``: a function that is called only when the results from\n+the bears are available.\n+- ``cache``: a cache used by bears to speed up runs.\n+- ``executor``: a custom executor used to run the bears. By default\n+``ProcessPoolExecutor`` is used.\n+\n+The new core comes with the following new additions:\n+- **Dependency Resolution:** The ``initialize_dependencies`` method in\n+``Core.py`` recieves the bears that are to be run and processes bear\n+dependencies using a consumer based system so that each dependency bear has only\n+one instance per section and file-dict. It returns a set of dependency bears\n+along with those bears that don't have any dependencies or whose dependencies\n+have been resolved(these are the ones that are scheduled to be run). The bears\n+are resolved by traversing each edge of the dependency graph and instantiating\n+dependency bears accordingly one per section. Before the bears are run we\n+initialize the dependency tracking in the ``__init__`` method of the class\n+``Session`` which is responsible for running coala sessions. The\n+``dependency_tracker`` object is used while scheduling and cleaning up bears and\n+also while finishing bear tasks.\n+\n+- **Task Scheduling:** The bears that have no dependencies or whose\n+dependencies have been resolved, only their tasks will be scheduled for\n+execution. Before exexuting any tasks the coala looks up the task in the cache.\n+In case of a hit the existing results that is stored in the cache for the\n+corresponding task arguments is called using ``execute_task_with_cache``","author":{"login":"nemaniarjun","avatarUrl":"https://avatars0.githubusercontent.com/u/15715894?v=4","name":"Arjun Nemani"},"reactions":[{"id":"MDg6UmVhY3Rpb24yMTM1MDkzOQ==","createdAt":"2018-03-25T19:31:14Z","content":"THUMBS_UP","user":{"login":"palash25","name":"Palash Nigam"}}],"createdAt":"2018-03-25T19:06:48Z","lastEditedAt":null,"updatedAt":"2018-03-25T19:06:48Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3Njk1MDQ4Ng==","url":"https://github.com/coala/coala/pull/5262#discussion_r176950486","bodyText":"decide if we call it a \"task\" or \"bear task\"","diffHunk":"@@ -0,0 +1,198 @@\n+NextGen-Core\n+============\n+\n+This document provides a brief overview of coala's NextGen-Core.\n+coala's NextGen-Core comes with the promise of eliminating the dependencies\n+amongst bears (by removing the queuing machanism) and a better performance\n+(by utilising asynchronous I/O and process pool).\n+\n+What has changed?\n+-----------------\n+\n+``Global Bears`` are now called ``Project Bears`` and ``Local Bears`` are\n+now known as ``File Bears``. Both the ``ProjectBear`` and the ``FileBear``\n+classes inherit from the base class ``coalib.core.Bear.py``.\n+\n+- **ProjectBears:** Performs analysis on the whole codebase and does\n+not parallelize tasks. All the bears formerly known as GlobalBears will now\n+inherit from this class.\n+\n+- **FileBears:** Performs analysis on the files provided by the user\n+and parallelizes tasks for each give file. All the bears formerly known as\n+LocalBears will now inherit from this class.\n+\n+What is new?\n+------------\n+\n+The following new features have been installed in the NextGen-Core:\n+\n+- New bear type: ``DependencyBear``\n+- Usage of instance-bound ``Bear.BEAR_DEPS``\n+- Usage of instance-bound ``Bear.REQUIREMENTS``\n+\n+DependencyBear\n+--------------\n+\n+The handling of bear dependencies by the old core wasn't effective. The\n+old core used a queuing mechanism to communicate betweeen bear runs which\n+led to problems of a GlobalBear not running if any one of its\n+dependencies (a local bear) terminated. The NextGen-Core does away with\n+that by introducing a ``DependencyBear``.\n+\n+This bear serves as a base class parallelizes tasks for each dependency\n+result. A bear dependent on other bears can specify its dependencies in\n+``BEAR_DEPS``. For example there are two bears ``Foo`` and ``Bar``\n+and bear ``Bar`` depends on ``Foo``. This can be written as\n+\n+::\n+\n+    class BarBear(DependencyBear):\n+        BEAR_DEPS = {FooBear}\n+\n+Multiple bears can be included as a dependency of a bear in the BEAR_DEPS\n+field. The results of the dependency bears are saved in a dictionary\n+called ``_dependency_results`` which is initialized in the ``__init()__``\n+method of the class ``Bear.py`` and can be accessed using the method\n+``dependency_results()`` also belonging to the same class.\n+\n+Writing A Dependency Bear\n+-------------------------\n+\n+Lets consider a bear to be dependent on a project bear ``Fizz`` and a file bear\n+``Buzz`` then the corresponding DependencyBear lets call it ``FizzBuzz`` will\n+look like the following:\n+\n+::\n+\n+    class FizzBuzzBear(DependencyBear):\n+        BEAR_DEPS = {FizzBear, BuzzBear}\n+\n+        def analyze(self, dependency_bear, dependency_result, a_number=100):\n+            yield '{} ({}) - {}'.format(\n+                dependency_bear.name, a_number, dependency_result)\n+\n+Usage of instance-bound ``Bear.BEAR_DEPS``\n+------------------------------------------\n+\n+A bear might depend on mutilple bears before its execution can begin.\n+``Bear.BEAR_DEPS`` is just a collection (a set) of classes (Bear classes) that\n+need to be executed before that bear can run. Once all these dependencies\n+(Bears) have ran their results are passed into ``self.dependency_results``.\n+The results are in the form of a dictionary with the types of the bears and\n+their corresponding results (in the form of a list) as *Key-Value* pairs.\n+From the previous example if we try to access the BEAR_DEPS of the ``BarBear``\n+we will get the result ``{<class 'coalib.core.Bear.FooBear'>}``.\n+\n+In the `__init__()` method of the class ``Bear.py`` the dependencies specified\n+in the ``BEAR_DEPS`` are copied to every instance of a Bear run using\n+``self.BEAR_DEPS = set(self.BEAR_DEPS)`` which makes runtime modifications\n+are possible.\n+\n+Usage of instance-bound ``Bear.REQUIREMENTS``\n+-----------------------------------------\n+\n+A bear might have some external dependencies that need to be installed before\n+the bear can run any analysis. The ``REQUIREMENTS`` field (a set) contains\n+instances of the ``PackageRequirement`` class from the coala's\n+``dependency_management`` module. For example.\n+\n+::\n+\n+    >>> from dependency_management.requirements.PackageRequirement import (\n+    ...     PackageRequirement)\n+    >>> from coalib.core.Bear import Bear\n+    ...\n+    >>> class BarBear(Bear):\n+    ...     REQUIREMENTS = {\n+    ...         PackageRequirement('pip', 'coala_decorators', '0.2.1')}\n+\n+If the bear uses requirements from a package manager then we can use the\n+subclass of the ``PackageRequirement`` class for that package manager. For\n+example in case of a pip requirement do the following:\n+\n+::\n+\n+    >>> from dependency_management.requirements.PipRequirement import (\n+    ...     PipRequirement)\n+    >>> class FooBear(Bear):\n+    ...     REQUIREMENTS = {PipRequirement('coala_decorators', '0.2.1')}\n+\n+\n+Override bears and define task scheduling\n+-----------------------------------------\n+\n+A nextgen bear has to have the following functions to perform analysis\n+- ``generate_tasks``: This method is a part of the parent ``Bear.py`` class\n+and returns tuples containing the positional arguments as a tuple and the\n+keyword arguments in the form of a dict. These are actually the task objects\n+that are scheduled and executed by the core. Absence of this method raises\n+``NotImplementedError``.\n+- ``analyze``: This method contains the code that performs the actual code\n+analysis routine that that bear is used for. Absence of this method raises\n+``NotImplementedError``.\n+\n+How to use `Core.run`\n+--------------------\n+\n+The `run(bears, result_callback, cache=None, executor=None)` method in `Core.PY`\n+is used to instantiate a coala session with the parameters it receives and run\n+it.\n+- ``bears``: contains all the instances of bears to run.\n+- ``result_callback``: a function that is called only when the results from\n+the bears are available.\n+- ``cache``: a cache used by bears to speed up runs.\n+- ``executor``: a custom executor used to run the bears. By default\n+``ProcessPoolExecutor`` is used.\n+\n+The new core comes with the following new additions:\n+- **Dependency Resolution:** The ``initialize_dependencies`` method in\n+``Core.py`` recieves the bears that are to be run and processes bear\n+dependencies using a consumer based system so that each dependency bear has only\n+one instance per section and file-dict. It returns a set of dependency bears\n+along with those bears that don't have any dependencies or whose dependencies\n+have been resolved(these are the ones that are scheduled to be run). The bears\n+are resolved by traversing each edge of the dependency graph and instantiating\n+dependency bears accordingly one per section. Before the bears are run we\n+initialize the dependency tracking in the ``__init__`` method of the class\n+``Session`` which is responsible for running coala sessions. The\n+``dependency_tracker`` object is used while scheduling and cleaning up bears and\n+also while finishing bear tasks.\n+\n+- **Task Scheduling:** The bears that have no dependencies or whose\n+dependencies have been resolved, only their tasks will be scheduled for\n+execution. Before exexuting any tasks the coala looks up the task in the cache.\n+In case of a hit the existing results that is stored in the cache for the\n+corresponding task arguments is called using ``execute_task_with_cache``\n+method. In case of a miss or if coala is ran without a cache the bear task is","author":{"login":"nemaniarjun","avatarUrl":"https://avatars0.githubusercontent.com/u/15715894?v=4","name":"Arjun Nemani"},"reactions":[],"createdAt":"2018-03-25T19:07:23Z","lastEditedAt":null,"updatedAt":"2018-03-25T19:07:23Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3Njk1MDUxMQ==","url":"https://github.com/coala/coala/pull/5262#discussion_r176950511","bodyText":"So running_tasks contains bears as well as tasks?","diffHunk":"@@ -0,0 +1,198 @@\n+NextGen-Core\n+============\n+\n+This document provides a brief overview of coala's NextGen-Core.\n+coala's NextGen-Core comes with the promise of eliminating the dependencies\n+amongst bears (by removing the queuing machanism) and a better performance\n+(by utilising asynchronous I/O and process pool).\n+\n+What has changed?\n+-----------------\n+\n+``Global Bears`` are now called ``Project Bears`` and ``Local Bears`` are\n+now known as ``File Bears``. Both the ``ProjectBear`` and the ``FileBear``\n+classes inherit from the base class ``coalib.core.Bear.py``.\n+\n+- **ProjectBears:** Performs analysis on the whole codebase and does\n+not parallelize tasks. All the bears formerly known as GlobalBears will now\n+inherit from this class.\n+\n+- **FileBears:** Performs analysis on the files provided by the user\n+and parallelizes tasks for each give file. All the bears formerly known as\n+LocalBears will now inherit from this class.\n+\n+What is new?\n+------------\n+\n+The following new features have been installed in the NextGen-Core:\n+\n+- New bear type: ``DependencyBear``\n+- Usage of instance-bound ``Bear.BEAR_DEPS``\n+- Usage of instance-bound ``Bear.REQUIREMENTS``\n+\n+DependencyBear\n+--------------\n+\n+The handling of bear dependencies by the old core wasn't effective. The\n+old core used a queuing mechanism to communicate betweeen bear runs which\n+led to problems of a GlobalBear not running if any one of its\n+dependencies (a local bear) terminated. The NextGen-Core does away with\n+that by introducing a ``DependencyBear``.\n+\n+This bear serves as a base class parallelizes tasks for each dependency\n+result. A bear dependent on other bears can specify its dependencies in\n+``BEAR_DEPS``. For example there are two bears ``Foo`` and ``Bar``\n+and bear ``Bar`` depends on ``Foo``. This can be written as\n+\n+::\n+\n+    class BarBear(DependencyBear):\n+        BEAR_DEPS = {FooBear}\n+\n+Multiple bears can be included as a dependency of a bear in the BEAR_DEPS\n+field. The results of the dependency bears are saved in a dictionary\n+called ``_dependency_results`` which is initialized in the ``__init()__``\n+method of the class ``Bear.py`` and can be accessed using the method\n+``dependency_results()`` also belonging to the same class.\n+\n+Writing A Dependency Bear\n+-------------------------\n+\n+Lets consider a bear to be dependent on a project bear ``Fizz`` and a file bear\n+``Buzz`` then the corresponding DependencyBear lets call it ``FizzBuzz`` will\n+look like the following:\n+\n+::\n+\n+    class FizzBuzzBear(DependencyBear):\n+        BEAR_DEPS = {FizzBear, BuzzBear}\n+\n+        def analyze(self, dependency_bear, dependency_result, a_number=100):\n+            yield '{} ({}) - {}'.format(\n+                dependency_bear.name, a_number, dependency_result)\n+\n+Usage of instance-bound ``Bear.BEAR_DEPS``\n+------------------------------------------\n+\n+A bear might depend on mutilple bears before its execution can begin.\n+``Bear.BEAR_DEPS`` is just a collection (a set) of classes (Bear classes) that\n+need to be executed before that bear can run. Once all these dependencies\n+(Bears) have ran their results are passed into ``self.dependency_results``.\n+The results are in the form of a dictionary with the types of the bears and\n+their corresponding results (in the form of a list) as *Key-Value* pairs.\n+From the previous example if we try to access the BEAR_DEPS of the ``BarBear``\n+we will get the result ``{<class 'coalib.core.Bear.FooBear'>}``.\n+\n+In the `__init__()` method of the class ``Bear.py`` the dependencies specified\n+in the ``BEAR_DEPS`` are copied to every instance of a Bear run using\n+``self.BEAR_DEPS = set(self.BEAR_DEPS)`` which makes runtime modifications\n+are possible.\n+\n+Usage of instance-bound ``Bear.REQUIREMENTS``\n+-----------------------------------------\n+\n+A bear might have some external dependencies that need to be installed before\n+the bear can run any analysis. The ``REQUIREMENTS`` field (a set) contains\n+instances of the ``PackageRequirement`` class from the coala's\n+``dependency_management`` module. For example.\n+\n+::\n+\n+    >>> from dependency_management.requirements.PackageRequirement import (\n+    ...     PackageRequirement)\n+    >>> from coalib.core.Bear import Bear\n+    ...\n+    >>> class BarBear(Bear):\n+    ...     REQUIREMENTS = {\n+    ...         PackageRequirement('pip', 'coala_decorators', '0.2.1')}\n+\n+If the bear uses requirements from a package manager then we can use the\n+subclass of the ``PackageRequirement`` class for that package manager. For\n+example in case of a pip requirement do the following:\n+\n+::\n+\n+    >>> from dependency_management.requirements.PipRequirement import (\n+    ...     PipRequirement)\n+    >>> class FooBear(Bear):\n+    ...     REQUIREMENTS = {PipRequirement('coala_decorators', '0.2.1')}\n+\n+\n+Override bears and define task scheduling\n+-----------------------------------------\n+\n+A nextgen bear has to have the following functions to perform analysis\n+- ``generate_tasks``: This method is a part of the parent ``Bear.py`` class\n+and returns tuples containing the positional arguments as a tuple and the\n+keyword arguments in the form of a dict. These are actually the task objects\n+that are scheduled and executed by the core. Absence of this method raises\n+``NotImplementedError``.\n+- ``analyze``: This method contains the code that performs the actual code\n+analysis routine that that bear is used for. Absence of this method raises\n+``NotImplementedError``.\n+\n+How to use `Core.run`\n+--------------------\n+\n+The `run(bears, result_callback, cache=None, executor=None)` method in `Core.PY`\n+is used to instantiate a coala session with the parameters it receives and run\n+it.\n+- ``bears``: contains all the instances of bears to run.\n+- ``result_callback``: a function that is called only when the results from\n+the bears are available.\n+- ``cache``: a cache used by bears to speed up runs.\n+- ``executor``: a custom executor used to run the bears. By default\n+``ProcessPoolExecutor`` is used.\n+\n+The new core comes with the following new additions:\n+- **Dependency Resolution:** The ``initialize_dependencies`` method in\n+``Core.py`` recieves the bears that are to be run and processes bear\n+dependencies using a consumer based system so that each dependency bear has only\n+one instance per section and file-dict. It returns a set of dependency bears\n+along with those bears that don't have any dependencies or whose dependencies\n+have been resolved(these are the ones that are scheduled to be run). The bears\n+are resolved by traversing each edge of the dependency graph and instantiating\n+dependency bears accordingly one per section. Before the bears are run we\n+initialize the dependency tracking in the ``__init__`` method of the class\n+``Session`` which is responsible for running coala sessions. The\n+``dependency_tracker`` object is used while scheduling and cleaning up bears and\n+also while finishing bear tasks.\n+\n+- **Task Scheduling:** The bears that have no dependencies or whose\n+dependencies have been resolved, only their tasks will be scheduled for\n+execution. Before exexuting any tasks the coala looks up the task in the cache.\n+In case of a hit the existing results that is stored in the cache for the\n+corresponding task arguments is called using ``execute_task_with_cache``\n+method. In case of a miss or if coala is ran without a cache the bear task is\n+executed. The bears without any running tasks are cleaned up from the state of\n+an ongoing run by resolving its dependencies, scheduling dependent bears(if any)\n+and removing the bear from the ``running_tasks`` dict. When a task belonging to","author":{"login":"nemaniarjun","avatarUrl":"https://avatars0.githubusercontent.com/u/15715894?v=4","name":"Arjun Nemani"},"reactions":[],"createdAt":"2018-03-25T19:08:02Z","lastEditedAt":null,"updatedAt":"2018-03-25T19:08:02Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3Njk1MDUyOQ==","url":"https://github.com/coala/coala/pull/5262#discussion_r176950529","bodyText":"that -> which","diffHunk":"@@ -0,0 +1,198 @@\n+NextGen-Core\n+============\n+\n+This document provides a brief overview of coala's NextGen-Core.\n+coala's NextGen-Core comes with the promise of eliminating the dependencies\n+amongst bears (by removing the queuing machanism) and a better performance\n+(by utilising asynchronous I/O and process pool).\n+\n+What has changed?\n+-----------------\n+\n+``Global Bears`` are now called ``Project Bears`` and ``Local Bears`` are\n+now known as ``File Bears``. Both the ``ProjectBear`` and the ``FileBear``\n+classes inherit from the base class ``coalib.core.Bear.py``.\n+\n+- **ProjectBears:** Performs analysis on the whole codebase and does\n+not parallelize tasks. All the bears formerly known as GlobalBears will now\n+inherit from this class.\n+\n+- **FileBears:** Performs analysis on the files provided by the user\n+and parallelizes tasks for each give file. All the bears formerly known as\n+LocalBears will now inherit from this class.\n+\n+What is new?\n+------------\n+\n+The following new features have been installed in the NextGen-Core:\n+\n+- New bear type: ``DependencyBear``\n+- Usage of instance-bound ``Bear.BEAR_DEPS``\n+- Usage of instance-bound ``Bear.REQUIREMENTS``\n+\n+DependencyBear\n+--------------\n+\n+The handling of bear dependencies by the old core wasn't effective. The\n+old core used a queuing mechanism to communicate betweeen bear runs which\n+led to problems of a GlobalBear not running if any one of its\n+dependencies (a local bear) terminated. The NextGen-Core does away with\n+that by introducing a ``DependencyBear``.\n+\n+This bear serves as a base class parallelizes tasks for each dependency\n+result. A bear dependent on other bears can specify its dependencies in\n+``BEAR_DEPS``. For example there are two bears ``Foo`` and ``Bar``\n+and bear ``Bar`` depends on ``Foo``. This can be written as\n+\n+::\n+\n+    class BarBear(DependencyBear):\n+        BEAR_DEPS = {FooBear}\n+\n+Multiple bears can be included as a dependency of a bear in the BEAR_DEPS\n+field. The results of the dependency bears are saved in a dictionary\n+called ``_dependency_results`` which is initialized in the ``__init()__``\n+method of the class ``Bear.py`` and can be accessed using the method\n+``dependency_results()`` also belonging to the same class.\n+\n+Writing A Dependency Bear\n+-------------------------\n+\n+Lets consider a bear to be dependent on a project bear ``Fizz`` and a file bear\n+``Buzz`` then the corresponding DependencyBear lets call it ``FizzBuzz`` will\n+look like the following:\n+\n+::\n+\n+    class FizzBuzzBear(DependencyBear):\n+        BEAR_DEPS = {FizzBear, BuzzBear}\n+\n+        def analyze(self, dependency_bear, dependency_result, a_number=100):\n+            yield '{} ({}) - {}'.format(\n+                dependency_bear.name, a_number, dependency_result)\n+\n+Usage of instance-bound ``Bear.BEAR_DEPS``\n+------------------------------------------\n+\n+A bear might depend on mutilple bears before its execution can begin.\n+``Bear.BEAR_DEPS`` is just a collection (a set) of classes (Bear classes) that\n+need to be executed before that bear can run. Once all these dependencies\n+(Bears) have ran their results are passed into ``self.dependency_results``.\n+The results are in the form of a dictionary with the types of the bears and\n+their corresponding results (in the form of a list) as *Key-Value* pairs.\n+From the previous example if we try to access the BEAR_DEPS of the ``BarBear``\n+we will get the result ``{<class 'coalib.core.Bear.FooBear'>}``.\n+\n+In the `__init__()` method of the class ``Bear.py`` the dependencies specified\n+in the ``BEAR_DEPS`` are copied to every instance of a Bear run using\n+``self.BEAR_DEPS = set(self.BEAR_DEPS)`` which makes runtime modifications\n+are possible.\n+\n+Usage of instance-bound ``Bear.REQUIREMENTS``\n+-----------------------------------------\n+\n+A bear might have some external dependencies that need to be installed before\n+the bear can run any analysis. The ``REQUIREMENTS`` field (a set) contains\n+instances of the ``PackageRequirement`` class from the coala's\n+``dependency_management`` module. For example.\n+\n+::\n+\n+    >>> from dependency_management.requirements.PackageRequirement import (\n+    ...     PackageRequirement)\n+    >>> from coalib.core.Bear import Bear\n+    ...\n+    >>> class BarBear(Bear):\n+    ...     REQUIREMENTS = {\n+    ...         PackageRequirement('pip', 'coala_decorators', '0.2.1')}\n+\n+If the bear uses requirements from a package manager then we can use the\n+subclass of the ``PackageRequirement`` class for that package manager. For\n+example in case of a pip requirement do the following:\n+\n+::\n+\n+    >>> from dependency_management.requirements.PipRequirement import (\n+    ...     PipRequirement)\n+    >>> class FooBear(Bear):\n+    ...     REQUIREMENTS = {PipRequirement('coala_decorators', '0.2.1')}\n+\n+\n+Override bears and define task scheduling\n+-----------------------------------------\n+\n+A nextgen bear has to have the following functions to perform analysis\n+- ``generate_tasks``: This method is a part of the parent ``Bear.py`` class\n+and returns tuples containing the positional arguments as a tuple and the\n+keyword arguments in the form of a dict. These are actually the task objects\n+that are scheduled and executed by the core. Absence of this method raises\n+``NotImplementedError``.\n+- ``analyze``: This method contains the code that performs the actual code\n+analysis routine that that bear is used for. Absence of this method raises\n+``NotImplementedError``.\n+\n+How to use `Core.run`\n+--------------------\n+\n+The `run(bears, result_callback, cache=None, executor=None)` method in `Core.PY`\n+is used to instantiate a coala session with the parameters it receives and run\n+it.\n+- ``bears``: contains all the instances of bears to run.\n+- ``result_callback``: a function that is called only when the results from\n+the bears are available.\n+- ``cache``: a cache used by bears to speed up runs.\n+- ``executor``: a custom executor used to run the bears. By default\n+``ProcessPoolExecutor`` is used.\n+\n+The new core comes with the following new additions:\n+- **Dependency Resolution:** The ``initialize_dependencies`` method in\n+``Core.py`` recieves the bears that are to be run and processes bear\n+dependencies using a consumer based system so that each dependency bear has only\n+one instance per section and file-dict. It returns a set of dependency bears\n+along with those bears that don't have any dependencies or whose dependencies\n+have been resolved(these are the ones that are scheduled to be run). The bears\n+are resolved by traversing each edge of the dependency graph and instantiating\n+dependency bears accordingly one per section. Before the bears are run we\n+initialize the dependency tracking in the ``__init__`` method of the class\n+``Session`` which is responsible for running coala sessions. The\n+``dependency_tracker`` object is used while scheduling and cleaning up bears and\n+also while finishing bear tasks.\n+\n+- **Task Scheduling:** The bears that have no dependencies or whose\n+dependencies have been resolved, only their tasks will be scheduled for\n+execution. Before exexuting any tasks the coala looks up the task in the cache.\n+In case of a hit the existing results that is stored in the cache for the\n+corresponding task arguments is called using ``execute_task_with_cache``\n+method. In case of a miss or if coala is ran without a cache the bear task is\n+executed. The bears without any running tasks are cleaned up from the state of\n+an ongoing run by resolving its dependencies, scheduling dependent bears(if any)\n+and removing the bear from the ``running_tasks`` dict. When a task belonging to\n+a particular bear completes, then ``_finish_task`` method is responsible for\n+checking whether the bear execution is complete and the result generated from\n+the task have been returned. If any new tasks are to be scheduled then this\n+method is responsible for doing so after the dependencies have been resolved.\n+\n+- **result_callback():** Each of the bears scheduled to run for a session have\n+this callback function that is called when the results are available. It should","author":{"login":"nemaniarjun","avatarUrl":"https://avatars0.githubusercontent.com/u/15715894?v=4","name":"Arjun Nemani"},"reactions":[{"id":"MDg6UmVhY3Rpb24yMTM1MDg5NQ==","createdAt":"2018-03-25T19:28:02Z","content":"THUMBS_UP","user":{"login":"palash25","name":"Palash Nigam"}}],"createdAt":"2018-03-25T19:08:40Z","lastEditedAt":null,"updatedAt":"2018-03-25T19:08:40Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3Njk1MDU2NQ==","url":"https://github.com/coala/coala/pull/5262#discussion_r176950565","bodyText":"This feels wrong, did you accidentally mix up two sentences?","diffHunk":"@@ -0,0 +1,198 @@\n+NextGen-Core\n+============\n+\n+This document provides a brief overview of coala's NextGen-Core.\n+coala's NextGen-Core comes with the promise of eliminating the dependencies\n+amongst bears (by removing the queuing machanism) and a better performance\n+(by utilising asynchronous I/O and process pool).\n+\n+What has changed?\n+-----------------\n+\n+``Global Bears`` are now called ``Project Bears`` and ``Local Bears`` are\n+now known as ``File Bears``. Both the ``ProjectBear`` and the ``FileBear``\n+classes inherit from the base class ``coalib.core.Bear.py``.\n+\n+- **ProjectBears:** Performs analysis on the whole codebase and does\n+not parallelize tasks. All the bears formerly known as GlobalBears will now\n+inherit from this class.\n+\n+- **FileBears:** Performs analysis on the files provided by the user\n+and parallelizes tasks for each give file. All the bears formerly known as\n+LocalBears will now inherit from this class.\n+\n+What is new?\n+------------\n+\n+The following new features have been installed in the NextGen-Core:\n+\n+- New bear type: ``DependencyBear``\n+- Usage of instance-bound ``Bear.BEAR_DEPS``\n+- Usage of instance-bound ``Bear.REQUIREMENTS``\n+\n+DependencyBear\n+--------------\n+\n+The handling of bear dependencies by the old core wasn't effective. The\n+old core used a queuing mechanism to communicate betweeen bear runs which\n+led to problems of a GlobalBear not running if any one of its\n+dependencies (a local bear) terminated. The NextGen-Core does away with\n+that by introducing a ``DependencyBear``.\n+\n+This bear serves as a base class parallelizes tasks for each dependency\n+result. A bear dependent on other bears can specify its dependencies in\n+``BEAR_DEPS``. For example there are two bears ``Foo`` and ``Bar``\n+and bear ``Bar`` depends on ``Foo``. This can be written as\n+\n+::\n+\n+    class BarBear(DependencyBear):\n+        BEAR_DEPS = {FooBear}\n+\n+Multiple bears can be included as a dependency of a bear in the BEAR_DEPS\n+field. The results of the dependency bears are saved in a dictionary\n+called ``_dependency_results`` which is initialized in the ``__init()__``\n+method of the class ``Bear.py`` and can be accessed using the method\n+``dependency_results()`` also belonging to the same class.\n+\n+Writing A Dependency Bear\n+-------------------------\n+\n+Lets consider a bear to be dependent on a project bear ``Fizz`` and a file bear\n+``Buzz`` then the corresponding DependencyBear lets call it ``FizzBuzz`` will\n+look like the following:\n+\n+::\n+\n+    class FizzBuzzBear(DependencyBear):\n+        BEAR_DEPS = {FizzBear, BuzzBear}\n+\n+        def analyze(self, dependency_bear, dependency_result, a_number=100):\n+            yield '{} ({}) - {}'.format(\n+                dependency_bear.name, a_number, dependency_result)\n+\n+Usage of instance-bound ``Bear.BEAR_DEPS``\n+------------------------------------------\n+\n+A bear might depend on mutilple bears before its execution can begin.\n+``Bear.BEAR_DEPS`` is just a collection (a set) of classes (Bear classes) that\n+need to be executed before that bear can run. Once all these dependencies\n+(Bears) have ran their results are passed into ``self.dependency_results``.\n+The results are in the form of a dictionary with the types of the bears and\n+their corresponding results (in the form of a list) as *Key-Value* pairs.\n+From the previous example if we try to access the BEAR_DEPS of the ``BarBear``\n+we will get the result ``{<class 'coalib.core.Bear.FooBear'>}``.\n+\n+In the `__init__()` method of the class ``Bear.py`` the dependencies specified\n+in the ``BEAR_DEPS`` are copied to every instance of a Bear run using\n+``self.BEAR_DEPS = set(self.BEAR_DEPS)`` which makes runtime modifications\n+are possible.\n+\n+Usage of instance-bound ``Bear.REQUIREMENTS``\n+-----------------------------------------\n+\n+A bear might have some external dependencies that need to be installed before\n+the bear can run any analysis. The ``REQUIREMENTS`` field (a set) contains\n+instances of the ``PackageRequirement`` class from the coala's\n+``dependency_management`` module. For example.\n+\n+::\n+\n+    >>> from dependency_management.requirements.PackageRequirement import (\n+    ...     PackageRequirement)\n+    >>> from coalib.core.Bear import Bear\n+    ...\n+    >>> class BarBear(Bear):\n+    ...     REQUIREMENTS = {\n+    ...         PackageRequirement('pip', 'coala_decorators', '0.2.1')}\n+\n+If the bear uses requirements from a package manager then we can use the\n+subclass of the ``PackageRequirement`` class for that package manager. For\n+example in case of a pip requirement do the following:\n+\n+::\n+\n+    >>> from dependency_management.requirements.PipRequirement import (\n+    ...     PipRequirement)\n+    >>> class FooBear(Bear):\n+    ...     REQUIREMENTS = {PipRequirement('coala_decorators', '0.2.1')}\n+\n+\n+Override bears and define task scheduling\n+-----------------------------------------\n+\n+A nextgen bear has to have the following functions to perform analysis\n+- ``generate_tasks``: This method is a part of the parent ``Bear.py`` class\n+and returns tuples containing the positional arguments as a tuple and the\n+keyword arguments in the form of a dict. These are actually the task objects\n+that are scheduled and executed by the core. Absence of this method raises\n+``NotImplementedError``.\n+- ``analyze``: This method contains the code that performs the actual code\n+analysis routine that that bear is used for. Absence of this method raises\n+``NotImplementedError``.\n+\n+How to use `Core.run`\n+--------------------\n+\n+The `run(bears, result_callback, cache=None, executor=None)` method in `Core.PY`\n+is used to instantiate a coala session with the parameters it receives and run\n+it.\n+- ``bears``: contains all the instances of bears to run.\n+- ``result_callback``: a function that is called only when the results from\n+the bears are available.\n+- ``cache``: a cache used by bears to speed up runs.\n+- ``executor``: a custom executor used to run the bears. By default\n+``ProcessPoolExecutor`` is used.\n+\n+The new core comes with the following new additions:\n+- **Dependency Resolution:** The ``initialize_dependencies`` method in\n+``Core.py`` recieves the bears that are to be run and processes bear\n+dependencies using a consumer based system so that each dependency bear has only\n+one instance per section and file-dict. It returns a set of dependency bears\n+along with those bears that don't have any dependencies or whose dependencies\n+have been resolved(these are the ones that are scheduled to be run). The bears\n+are resolved by traversing each edge of the dependency graph and instantiating\n+dependency bears accordingly one per section. Before the bears are run we\n+initialize the dependency tracking in the ``__init__`` method of the class\n+``Session`` which is responsible for running coala sessions. The\n+``dependency_tracker`` object is used while scheduling and cleaning up bears and\n+also while finishing bear tasks.\n+\n+- **Task Scheduling:** The bears that have no dependencies or whose\n+dependencies have been resolved, only their tasks will be scheduled for\n+execution. Before exexuting any tasks the coala looks up the task in the cache.\n+In case of a hit the existing results that is stored in the cache for the\n+corresponding task arguments is called using ``execute_task_with_cache``\n+method. In case of a miss or if coala is ran without a cache the bear task is\n+executed. The bears without any running tasks are cleaned up from the state of\n+an ongoing run by resolving its dependencies, scheduling dependent bears(if any)\n+and removing the bear from the ``running_tasks`` dict. When a task belonging to\n+a particular bear completes, then ``_finish_task`` method is responsible for\n+checking whether the bear execution is complete and the result generated from\n+the task have been returned. If any new tasks are to be scheduled then this\n+method is responsible for doing so after the dependencies have been resolved.\n+\n+- **result_callback():** Each of the bears scheduled to run for a session have\n+this callback function that is called when the results are available. It should\n+have the following signature ``def result_callback(result)``.\n+\n+- **executors:** These are instances of the ``ProcessPoolExecutor`` class\n+provided by the ``concurrent.futures`` module that is used to execute function\n+calls asynchronously using a pool of processes. Custom ``executor`` instances\n+can be passed to functions parameters to run the bears if not provided then a\n+``ProcessPoolExecutor`` is used using maximum number of processors available on","author":{"login":"nemaniarjun","avatarUrl":"https://avatars0.githubusercontent.com/u/15715894?v=4","name":"Arjun Nemani"},"reactions":[],"createdAt":"2018-03-25T19:10:28Z","lastEditedAt":null,"updatedAt":"2018-03-25T19:10:28Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3Njk1MDU4Ng==","url":"https://github.com/coala/coala/pull/5262#discussion_r176950586","bodyText":"Oh, just move the if not provided part to a new line.","diffHunk":"@@ -0,0 +1,198 @@\n+NextGen-Core\n+============\n+\n+This document provides a brief overview of coala's NextGen-Core.\n+coala's NextGen-Core comes with the promise of eliminating the dependencies\n+amongst bears (by removing the queuing machanism) and a better performance\n+(by utilising asynchronous I/O and process pool).\n+\n+What has changed?\n+-----------------\n+\n+``Global Bears`` are now called ``Project Bears`` and ``Local Bears`` are\n+now known as ``File Bears``. Both the ``ProjectBear`` and the ``FileBear``\n+classes inherit from the base class ``coalib.core.Bear.py``.\n+\n+- **ProjectBears:** Performs analysis on the whole codebase and does\n+not parallelize tasks. All the bears formerly known as GlobalBears will now\n+inherit from this class.\n+\n+- **FileBears:** Performs analysis on the files provided by the user\n+and parallelizes tasks for each give file. All the bears formerly known as\n+LocalBears will now inherit from this class.\n+\n+What is new?\n+------------\n+\n+The following new features have been installed in the NextGen-Core:\n+\n+- New bear type: ``DependencyBear``\n+- Usage of instance-bound ``Bear.BEAR_DEPS``\n+- Usage of instance-bound ``Bear.REQUIREMENTS``\n+\n+DependencyBear\n+--------------\n+\n+The handling of bear dependencies by the old core wasn't effective. The\n+old core used a queuing mechanism to communicate betweeen bear runs which\n+led to problems of a GlobalBear not running if any one of its\n+dependencies (a local bear) terminated. The NextGen-Core does away with\n+that by introducing a ``DependencyBear``.\n+\n+This bear serves as a base class parallelizes tasks for each dependency\n+result. A bear dependent on other bears can specify its dependencies in\n+``BEAR_DEPS``. For example there are two bears ``Foo`` and ``Bar``\n+and bear ``Bar`` depends on ``Foo``. This can be written as\n+\n+::\n+\n+    class BarBear(DependencyBear):\n+        BEAR_DEPS = {FooBear}\n+\n+Multiple bears can be included as a dependency of a bear in the BEAR_DEPS\n+field. The results of the dependency bears are saved in a dictionary\n+called ``_dependency_results`` which is initialized in the ``__init()__``\n+method of the class ``Bear.py`` and can be accessed using the method\n+``dependency_results()`` also belonging to the same class.\n+\n+Writing A Dependency Bear\n+-------------------------\n+\n+Lets consider a bear to be dependent on a project bear ``Fizz`` and a file bear\n+``Buzz`` then the corresponding DependencyBear lets call it ``FizzBuzz`` will\n+look like the following:\n+\n+::\n+\n+    class FizzBuzzBear(DependencyBear):\n+        BEAR_DEPS = {FizzBear, BuzzBear}\n+\n+        def analyze(self, dependency_bear, dependency_result, a_number=100):\n+            yield '{} ({}) - {}'.format(\n+                dependency_bear.name, a_number, dependency_result)\n+\n+Usage of instance-bound ``Bear.BEAR_DEPS``\n+------------------------------------------\n+\n+A bear might depend on mutilple bears before its execution can begin.\n+``Bear.BEAR_DEPS`` is just a collection (a set) of classes (Bear classes) that\n+need to be executed before that bear can run. Once all these dependencies\n+(Bears) have ran their results are passed into ``self.dependency_results``.\n+The results are in the form of a dictionary with the types of the bears and\n+their corresponding results (in the form of a list) as *Key-Value* pairs.\n+From the previous example if we try to access the BEAR_DEPS of the ``BarBear``\n+we will get the result ``{<class 'coalib.core.Bear.FooBear'>}``.\n+\n+In the `__init__()` method of the class ``Bear.py`` the dependencies specified\n+in the ``BEAR_DEPS`` are copied to every instance of a Bear run using\n+``self.BEAR_DEPS = set(self.BEAR_DEPS)`` which makes runtime modifications\n+are possible.\n+\n+Usage of instance-bound ``Bear.REQUIREMENTS``\n+-----------------------------------------\n+\n+A bear might have some external dependencies that need to be installed before\n+the bear can run any analysis. The ``REQUIREMENTS`` field (a set) contains\n+instances of the ``PackageRequirement`` class from the coala's\n+``dependency_management`` module. For example.\n+\n+::\n+\n+    >>> from dependency_management.requirements.PackageRequirement import (\n+    ...     PackageRequirement)\n+    >>> from coalib.core.Bear import Bear\n+    ...\n+    >>> class BarBear(Bear):\n+    ...     REQUIREMENTS = {\n+    ...         PackageRequirement('pip', 'coala_decorators', '0.2.1')}\n+\n+If the bear uses requirements from a package manager then we can use the\n+subclass of the ``PackageRequirement`` class for that package manager. For\n+example in case of a pip requirement do the following:\n+\n+::\n+\n+    >>> from dependency_management.requirements.PipRequirement import (\n+    ...     PipRequirement)\n+    >>> class FooBear(Bear):\n+    ...     REQUIREMENTS = {PipRequirement('coala_decorators', '0.2.1')}\n+\n+\n+Override bears and define task scheduling\n+-----------------------------------------\n+\n+A nextgen bear has to have the following functions to perform analysis\n+- ``generate_tasks``: This method is a part of the parent ``Bear.py`` class\n+and returns tuples containing the positional arguments as a tuple and the\n+keyword arguments in the form of a dict. These are actually the task objects\n+that are scheduled and executed by the core. Absence of this method raises\n+``NotImplementedError``.\n+- ``analyze``: This method contains the code that performs the actual code\n+analysis routine that that bear is used for. Absence of this method raises\n+``NotImplementedError``.\n+\n+How to use `Core.run`\n+--------------------\n+\n+The `run(bears, result_callback, cache=None, executor=None)` method in `Core.PY`\n+is used to instantiate a coala session with the parameters it receives and run\n+it.\n+- ``bears``: contains all the instances of bears to run.\n+- ``result_callback``: a function that is called only when the results from\n+the bears are available.\n+- ``cache``: a cache used by bears to speed up runs.\n+- ``executor``: a custom executor used to run the bears. By default\n+``ProcessPoolExecutor`` is used.\n+\n+The new core comes with the following new additions:\n+- **Dependency Resolution:** The ``initialize_dependencies`` method in\n+``Core.py`` recieves the bears that are to be run and processes bear\n+dependencies using a consumer based system so that each dependency bear has only\n+one instance per section and file-dict. It returns a set of dependency bears\n+along with those bears that don't have any dependencies or whose dependencies\n+have been resolved(these are the ones that are scheduled to be run). The bears\n+are resolved by traversing each edge of the dependency graph and instantiating\n+dependency bears accordingly one per section. Before the bears are run we\n+initialize the dependency tracking in the ``__init__`` method of the class\n+``Session`` which is responsible for running coala sessions. The\n+``dependency_tracker`` object is used while scheduling and cleaning up bears and\n+also while finishing bear tasks.\n+\n+- **Task Scheduling:** The bears that have no dependencies or whose\n+dependencies have been resolved, only their tasks will be scheduled for\n+execution. Before exexuting any tasks the coala looks up the task in the cache.\n+In case of a hit the existing results that is stored in the cache for the\n+corresponding task arguments is called using ``execute_task_with_cache``\n+method. In case of a miss or if coala is ran without a cache the bear task is\n+executed. The bears without any running tasks are cleaned up from the state of\n+an ongoing run by resolving its dependencies, scheduling dependent bears(if any)\n+and removing the bear from the ``running_tasks`` dict. When a task belonging to\n+a particular bear completes, then ``_finish_task`` method is responsible for\n+checking whether the bear execution is complete and the result generated from\n+the task have been returned. If any new tasks are to be scheduled then this\n+method is responsible for doing so after the dependencies have been resolved.\n+\n+- **result_callback():** Each of the bears scheduled to run for a session have\n+this callback function that is called when the results are available. It should\n+have the following signature ``def result_callback(result)``.\n+\n+- **executors:** These are instances of the ``ProcessPoolExecutor`` class\n+provided by the ``concurrent.futures`` module that is used to execute function\n+calls asynchronously using a pool of processes. Custom ``executor`` instances\n+can be passed to functions parameters to run the bears if not provided then a\n+``ProcessPoolExecutor`` is used using maximum number of processors available on","author":{"login":"nemaniarjun","avatarUrl":"https://avatars0.githubusercontent.com/u/15715894?v=4","name":"Arjun Nemani"},"reactions":[{"id":"MDg6UmVhY3Rpb24yMTM1MDg4Nw==","createdAt":"2018-03-25T19:27:40Z","content":"THUMBS_UP","user":{"login":"palash25","name":"Palash Nigam"}}],"createdAt":"2018-03-25T19:10:56Z","lastEditedAt":null,"updatedAt":"2018-03-25T19:10:56Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3Njk1MDYwNg==","url":"https://github.com/coala/coala/pull/5262#discussion_r176950606","bodyText":"typos. \"themselves\" is written twice.","diffHunk":"@@ -0,0 +1,198 @@\n+NextGen-Core\n+============\n+\n+This document provides a brief overview of coala's NextGen-Core.\n+coala's NextGen-Core comes with the promise of eliminating the dependencies\n+amongst bears (by removing the queuing machanism) and a better performance\n+(by utilising asynchronous I/O and process pool).\n+\n+What has changed?\n+-----------------\n+\n+``Global Bears`` are now called ``Project Bears`` and ``Local Bears`` are\n+now known as ``File Bears``. Both the ``ProjectBear`` and the ``FileBear``\n+classes inherit from the base class ``coalib.core.Bear.py``.\n+\n+- **ProjectBears:** Performs analysis on the whole codebase and does\n+not parallelize tasks. All the bears formerly known as GlobalBears will now\n+inherit from this class.\n+\n+- **FileBears:** Performs analysis on the files provided by the user\n+and parallelizes tasks for each give file. All the bears formerly known as\n+LocalBears will now inherit from this class.\n+\n+What is new?\n+------------\n+\n+The following new features have been installed in the NextGen-Core:\n+\n+- New bear type: ``DependencyBear``\n+- Usage of instance-bound ``Bear.BEAR_DEPS``\n+- Usage of instance-bound ``Bear.REQUIREMENTS``\n+\n+DependencyBear\n+--------------\n+\n+The handling of bear dependencies by the old core wasn't effective. The\n+old core used a queuing mechanism to communicate betweeen bear runs which\n+led to problems of a GlobalBear not running if any one of its\n+dependencies (a local bear) terminated. The NextGen-Core does away with\n+that by introducing a ``DependencyBear``.\n+\n+This bear serves as a base class parallelizes tasks for each dependency\n+result. A bear dependent on other bears can specify its dependencies in\n+``BEAR_DEPS``. For example there are two bears ``Foo`` and ``Bar``\n+and bear ``Bar`` depends on ``Foo``. This can be written as\n+\n+::\n+\n+    class BarBear(DependencyBear):\n+        BEAR_DEPS = {FooBear}\n+\n+Multiple bears can be included as a dependency of a bear in the BEAR_DEPS\n+field. The results of the dependency bears are saved in a dictionary\n+called ``_dependency_results`` which is initialized in the ``__init()__``\n+method of the class ``Bear.py`` and can be accessed using the method\n+``dependency_results()`` also belonging to the same class.\n+\n+Writing A Dependency Bear\n+-------------------------\n+\n+Lets consider a bear to be dependent on a project bear ``Fizz`` and a file bear\n+``Buzz`` then the corresponding DependencyBear lets call it ``FizzBuzz`` will\n+look like the following:\n+\n+::\n+\n+    class FizzBuzzBear(DependencyBear):\n+        BEAR_DEPS = {FizzBear, BuzzBear}\n+\n+        def analyze(self, dependency_bear, dependency_result, a_number=100):\n+            yield '{} ({}) - {}'.format(\n+                dependency_bear.name, a_number, dependency_result)\n+\n+Usage of instance-bound ``Bear.BEAR_DEPS``\n+------------------------------------------\n+\n+A bear might depend on mutilple bears before its execution can begin.\n+``Bear.BEAR_DEPS`` is just a collection (a set) of classes (Bear classes) that\n+need to be executed before that bear can run. Once all these dependencies\n+(Bears) have ran their results are passed into ``self.dependency_results``.\n+The results are in the form of a dictionary with the types of the bears and\n+their corresponding results (in the form of a list) as *Key-Value* pairs.\n+From the previous example if we try to access the BEAR_DEPS of the ``BarBear``\n+we will get the result ``{<class 'coalib.core.Bear.FooBear'>}``.\n+\n+In the `__init__()` method of the class ``Bear.py`` the dependencies specified\n+in the ``BEAR_DEPS`` are copied to every instance of a Bear run using\n+``self.BEAR_DEPS = set(self.BEAR_DEPS)`` which makes runtime modifications\n+are possible.\n+\n+Usage of instance-bound ``Bear.REQUIREMENTS``\n+-----------------------------------------\n+\n+A bear might have some external dependencies that need to be installed before\n+the bear can run any analysis. The ``REQUIREMENTS`` field (a set) contains\n+instances of the ``PackageRequirement`` class from the coala's\n+``dependency_management`` module. For example.\n+\n+::\n+\n+    >>> from dependency_management.requirements.PackageRequirement import (\n+    ...     PackageRequirement)\n+    >>> from coalib.core.Bear import Bear\n+    ...\n+    >>> class BarBear(Bear):\n+    ...     REQUIREMENTS = {\n+    ...         PackageRequirement('pip', 'coala_decorators', '0.2.1')}\n+\n+If the bear uses requirements from a package manager then we can use the\n+subclass of the ``PackageRequirement`` class for that package manager. For\n+example in case of a pip requirement do the following:\n+\n+::\n+\n+    >>> from dependency_management.requirements.PipRequirement import (\n+    ...     PipRequirement)\n+    >>> class FooBear(Bear):\n+    ...     REQUIREMENTS = {PipRequirement('coala_decorators', '0.2.1')}\n+\n+\n+Override bears and define task scheduling\n+-----------------------------------------\n+\n+A nextgen bear has to have the following functions to perform analysis\n+- ``generate_tasks``: This method is a part of the parent ``Bear.py`` class\n+and returns tuples containing the positional arguments as a tuple and the\n+keyword arguments in the form of a dict. These are actually the task objects\n+that are scheduled and executed by the core. Absence of this method raises\n+``NotImplementedError``.\n+- ``analyze``: This method contains the code that performs the actual code\n+analysis routine that that bear is used for. Absence of this method raises\n+``NotImplementedError``.\n+\n+How to use `Core.run`\n+--------------------\n+\n+The `run(bears, result_callback, cache=None, executor=None)` method in `Core.PY`\n+is used to instantiate a coala session with the parameters it receives and run\n+it.\n+- ``bears``: contains all the instances of bears to run.\n+- ``result_callback``: a function that is called only when the results from\n+the bears are available.\n+- ``cache``: a cache used by bears to speed up runs.\n+- ``executor``: a custom executor used to run the bears. By default\n+``ProcessPoolExecutor`` is used.\n+\n+The new core comes with the following new additions:\n+- **Dependency Resolution:** The ``initialize_dependencies`` method in\n+``Core.py`` recieves the bears that are to be run and processes bear\n+dependencies using a consumer based system so that each dependency bear has only\n+one instance per section and file-dict. It returns a set of dependency bears\n+along with those bears that don't have any dependencies or whose dependencies\n+have been resolved(these are the ones that are scheduled to be run). The bears\n+are resolved by traversing each edge of the dependency graph and instantiating\n+dependency bears accordingly one per section. Before the bears are run we\n+initialize the dependency tracking in the ``__init__`` method of the class\n+``Session`` which is responsible for running coala sessions. The\n+``dependency_tracker`` object is used while scheduling and cleaning up bears and\n+also while finishing bear tasks.\n+\n+- **Task Scheduling:** The bears that have no dependencies or whose\n+dependencies have been resolved, only their tasks will be scheduled for\n+execution. Before exexuting any tasks the coala looks up the task in the cache.\n+In case of a hit the existing results that is stored in the cache for the\n+corresponding task arguments is called using ``execute_task_with_cache``\n+method. In case of a miss or if coala is ran without a cache the bear task is\n+executed. The bears without any running tasks are cleaned up from the state of\n+an ongoing run by resolving its dependencies, scheduling dependent bears(if any)\n+and removing the bear from the ``running_tasks`` dict. When a task belonging to\n+a particular bear completes, then ``_finish_task`` method is responsible for\n+checking whether the bear execution is complete and the result generated from\n+the task have been returned. If any new tasks are to be scheduled then this\n+method is responsible for doing so after the dependencies have been resolved.\n+\n+- **result_callback():** Each of the bears scheduled to run for a session have\n+this callback function that is called when the results are available. It should\n+have the following signature ``def result_callback(result)``.\n+\n+- **executors:** These are instances of the ``ProcessPoolExecutor`` class\n+provided by the ``concurrent.futures`` module that is used to execute function\n+calls asynchronously using a pool of processes. Custom ``executor`` instances\n+can be passed to functions parameters to run the bears if not provided then a\n+``ProcessPoolExecutor`` is used using maximum number of processors available on\n+the machine.\n+\n+Caching\n+-------\n+\n+The NextGen-Core's caching mechanism is based on task objects. Bears can offload\n+tasks via `generate_tasks()` which get executed by a Python pool.\n+Structure wise the cache is a dictionary-like-object with bear types\n+and cache-tables as key value pairs. The cache-tables themselves are themselves","author":{"login":"nemaniarjun","avatarUrl":"https://avatars0.githubusercontent.com/u/15715894?v=4","name":"Arjun Nemani"},"reactions":[{"id":"MDg6UmVhY3Rpb24yMTM1MDg1Ng==","createdAt":"2018-03-25T19:25:29Z","content":"THUMBS_UP","user":{"login":"palash25","name":"Palash Nigam"}}],"createdAt":"2018-03-25T19:11:39Z","lastEditedAt":null,"updatedAt":"2018-03-25T19:11:39Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3Njk1MDY2Mw==","url":"https://github.com/coala/coala/pull/5262#discussion_r176950663","bodyText":"Rephrase this. Move the If part to a new sentence.","diffHunk":"@@ -0,0 +1,198 @@\n+NextGen-Core\n+============\n+\n+This document provides a brief overview of coala's NextGen-Core.\n+coala's NextGen-Core comes with the promise of eliminating the dependencies\n+amongst bears (by removing the queuing machanism) and a better performance\n+(by utilising asynchronous I/O and process pool).\n+\n+What has changed?\n+-----------------\n+\n+``Global Bears`` are now called ``Project Bears`` and ``Local Bears`` are\n+now known as ``File Bears``. Both the ``ProjectBear`` and the ``FileBear``\n+classes inherit from the base class ``coalib.core.Bear.py``.\n+\n+- **ProjectBears:** Performs analysis on the whole codebase and does\n+not parallelize tasks. All the bears formerly known as GlobalBears will now\n+inherit from this class.\n+\n+- **FileBears:** Performs analysis on the files provided by the user\n+and parallelizes tasks for each give file. All the bears formerly known as\n+LocalBears will now inherit from this class.\n+\n+What is new?\n+------------\n+\n+The following new features have been installed in the NextGen-Core:\n+\n+- New bear type: ``DependencyBear``\n+- Usage of instance-bound ``Bear.BEAR_DEPS``\n+- Usage of instance-bound ``Bear.REQUIREMENTS``\n+\n+DependencyBear\n+--------------\n+\n+The handling of bear dependencies by the old core wasn't effective. The\n+old core used a queuing mechanism to communicate betweeen bear runs which\n+led to problems of a GlobalBear not running if any one of its\n+dependencies (a local bear) terminated. The NextGen-Core does away with\n+that by introducing a ``DependencyBear``.\n+\n+This bear serves as a base class parallelizes tasks for each dependency\n+result. A bear dependent on other bears can specify its dependencies in\n+``BEAR_DEPS``. For example there are two bears ``Foo`` and ``Bar``\n+and bear ``Bar`` depends on ``Foo``. This can be written as\n+\n+::\n+\n+    class BarBear(DependencyBear):\n+        BEAR_DEPS = {FooBear}\n+\n+Multiple bears can be included as a dependency of a bear in the BEAR_DEPS\n+field. The results of the dependency bears are saved in a dictionary\n+called ``_dependency_results`` which is initialized in the ``__init()__``\n+method of the class ``Bear.py`` and can be accessed using the method\n+``dependency_results()`` also belonging to the same class.\n+\n+Writing A Dependency Bear\n+-------------------------\n+\n+Lets consider a bear to be dependent on a project bear ``Fizz`` and a file bear\n+``Buzz`` then the corresponding DependencyBear lets call it ``FizzBuzz`` will\n+look like the following:\n+\n+::\n+\n+    class FizzBuzzBear(DependencyBear):\n+        BEAR_DEPS = {FizzBear, BuzzBear}\n+\n+        def analyze(self, dependency_bear, dependency_result, a_number=100):\n+            yield '{} ({}) - {}'.format(\n+                dependency_bear.name, a_number, dependency_result)\n+\n+Usage of instance-bound ``Bear.BEAR_DEPS``\n+------------------------------------------\n+\n+A bear might depend on mutilple bears before its execution can begin.\n+``Bear.BEAR_DEPS`` is just a collection (a set) of classes (Bear classes) that\n+need to be executed before that bear can run. Once all these dependencies\n+(Bears) have ran their results are passed into ``self.dependency_results``.\n+The results are in the form of a dictionary with the types of the bears and\n+their corresponding results (in the form of a list) as *Key-Value* pairs.\n+From the previous example if we try to access the BEAR_DEPS of the ``BarBear``\n+we will get the result ``{<class 'coalib.core.Bear.FooBear'>}``.\n+\n+In the `__init__()` method of the class ``Bear.py`` the dependencies specified\n+in the ``BEAR_DEPS`` are copied to every instance of a Bear run using\n+``self.BEAR_DEPS = set(self.BEAR_DEPS)`` which makes runtime modifications\n+are possible.\n+\n+Usage of instance-bound ``Bear.REQUIREMENTS``\n+-----------------------------------------\n+\n+A bear might have some external dependencies that need to be installed before\n+the bear can run any analysis. The ``REQUIREMENTS`` field (a set) contains\n+instances of the ``PackageRequirement`` class from the coala's\n+``dependency_management`` module. For example.\n+\n+::\n+\n+    >>> from dependency_management.requirements.PackageRequirement import (\n+    ...     PackageRequirement)\n+    >>> from coalib.core.Bear import Bear\n+    ...\n+    >>> class BarBear(Bear):\n+    ...     REQUIREMENTS = {\n+    ...         PackageRequirement('pip', 'coala_decorators', '0.2.1')}\n+\n+If the bear uses requirements from a package manager then we can use the\n+subclass of the ``PackageRequirement`` class for that package manager. For\n+example in case of a pip requirement do the following:\n+\n+::\n+\n+    >>> from dependency_management.requirements.PipRequirement import (\n+    ...     PipRequirement)\n+    >>> class FooBear(Bear):\n+    ...     REQUIREMENTS = {PipRequirement('coala_decorators', '0.2.1')}\n+\n+\n+Override bears and define task scheduling\n+-----------------------------------------\n+\n+A nextgen bear has to have the following functions to perform analysis\n+- ``generate_tasks``: This method is a part of the parent ``Bear.py`` class\n+and returns tuples containing the positional arguments as a tuple and the\n+keyword arguments in the form of a dict. These are actually the task objects\n+that are scheduled and executed by the core. Absence of this method raises\n+``NotImplementedError``.\n+- ``analyze``: This method contains the code that performs the actual code\n+analysis routine that that bear is used for. Absence of this method raises\n+``NotImplementedError``.\n+\n+How to use `Core.run`\n+--------------------\n+\n+The `run(bears, result_callback, cache=None, executor=None)` method in `Core.PY`\n+is used to instantiate a coala session with the parameters it receives and run\n+it.\n+- ``bears``: contains all the instances of bears to run.\n+- ``result_callback``: a function that is called only when the results from\n+the bears are available.\n+- ``cache``: a cache used by bears to speed up runs.\n+- ``executor``: a custom executor used to run the bears. By default\n+``ProcessPoolExecutor`` is used.\n+\n+The new core comes with the following new additions:\n+- **Dependency Resolution:** The ``initialize_dependencies`` method in\n+``Core.py`` recieves the bears that are to be run and processes bear\n+dependencies using a consumer based system so that each dependency bear has only\n+one instance per section and file-dict. It returns a set of dependency bears\n+along with those bears that don't have any dependencies or whose dependencies\n+have been resolved(these are the ones that are scheduled to be run). The bears\n+are resolved by traversing each edge of the dependency graph and instantiating\n+dependency bears accordingly one per section. Before the bears are run we\n+initialize the dependency tracking in the ``__init__`` method of the class\n+``Session`` which is responsible for running coala sessions. The\n+``dependency_tracker`` object is used while scheduling and cleaning up bears and\n+also while finishing bear tasks.\n+\n+- **Task Scheduling:** The bears that have no dependencies or whose\n+dependencies have been resolved, only their tasks will be scheduled for\n+execution. Before exexuting any tasks the coala looks up the task in the cache.\n+In case of a hit the existing results that is stored in the cache for the\n+corresponding task arguments is called using ``execute_task_with_cache``\n+method. In case of a miss or if coala is ran without a cache the bear task is\n+executed. The bears without any running tasks are cleaned up from the state of\n+an ongoing run by resolving its dependencies, scheduling dependent bears(if any)\n+and removing the bear from the ``running_tasks`` dict. When a task belonging to\n+a particular bear completes, then ``_finish_task`` method is responsible for\n+checking whether the bear execution is complete and the result generated from\n+the task have been returned. If any new tasks are to be scheduled then this\n+method is responsible for doing so after the dependencies have been resolved.\n+\n+- **result_callback():** Each of the bears scheduled to run for a session have\n+this callback function that is called when the results are available. It should\n+have the following signature ``def result_callback(result)``.\n+\n+- **executors:** These are instances of the ``ProcessPoolExecutor`` class\n+provided by the ``concurrent.futures`` module that is used to execute function\n+calls asynchronously using a pool of processes. Custom ``executor`` instances\n+can be passed to functions parameters to run the bears if not provided then a\n+``ProcessPoolExecutor`` is used using maximum number of processors available on\n+the machine.\n+\n+Caching\n+-------\n+\n+The NextGen-Core's caching mechanism is based on task objects. Bears can offload\n+tasks via `generate_tasks()` which get executed by a Python pool.\n+Structure wise the cache is a dictionary-like-object with bear types\n+and cache-tables as key value pairs. The cache-tables themselves are themselves\n+dictionary-like-objects that map the hash values of the task objects (generated\n+by ``PersistentHash.persistent_hash``) to the bear results.\n+\n+At the time of scheduling the bears, the core performs a cache lookup, if the\n+parameters to ``execute_tasks()`` are the same as that of the previous run then","author":{"login":"nemaniarjun","avatarUrl":"https://avatars0.githubusercontent.com/u/15715894?v=4","name":"Arjun Nemani"},"reactions":[{"id":"MDg6UmVhY3Rpb24yMTM1MDgzNg==","createdAt":"2018-03-25T19:25:01Z","content":"THUMBS_UP","user":{"login":"palash25","name":"Palash Nigam"}}],"createdAt":"2018-03-25T19:13:17Z","lastEditedAt":null,"updatedAt":"2018-03-25T19:13:17Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3Njk1MDkyMQ==","url":"https://github.com/coala/coala/pull/5262#discussion_r176950921","bodyText":"Yeah, I don't know why I wrote that, sounds silly I'll change it.","diffHunk":"@@ -0,0 +1,198 @@\n+NextGen-Core\n+============\n+\n+This document provides a brief overview of coala's NextGen-Core.\n+coala's NextGen-Core comes with the promise of eliminating the dependencies\n+amongst bears (by removing the queuing machanism) and a better performance\n+(by utilising asynchronous I/O and process pool).\n+\n+What has changed?\n+-----------------\n+\n+``Global Bears`` are now called ``Project Bears`` and ``Local Bears`` are\n+now known as ``File Bears``. Both the ``ProjectBear`` and the ``FileBear``\n+classes inherit from the base class ``coalib.core.Bear.py``.\n+\n+- **ProjectBears:** Performs analysis on the whole codebase and does\n+not parallelize tasks. All the bears formerly known as GlobalBears will now\n+inherit from this class.\n+\n+- **FileBears:** Performs analysis on the files provided by the user\n+and parallelizes tasks for each give file. All the bears formerly known as\n+LocalBears will now inherit from this class.\n+\n+What is new?\n+------------\n+\n+The following new features have been installed in the NextGen-Core:","author":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4","name":"Palash Nigam"},"reactions":[],"createdAt":"2018-03-25T19:21:48Z","lastEditedAt":null,"updatedAt":"2018-03-25T19:21:48Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3Njk1MDk2NA==","url":"https://github.com/coala/coala/pull/5262#discussion_r176950964","bodyText":"ProjectBear and FileBear are classes themselves in this example the bears Fizz and Buzz inherit from those classes so naming them the same doesn't make sense to me.","diffHunk":"@@ -0,0 +1,198 @@\n+NextGen-Core\n+============\n+\n+This document provides a brief overview of coala's NextGen-Core.\n+coala's NextGen-Core comes with the promise of eliminating the dependencies\n+amongst bears (by removing the queuing machanism) and a better performance\n+(by utilising asynchronous I/O and process pool).\n+\n+What has changed?\n+-----------------\n+\n+``Global Bears`` are now called ``Project Bears`` and ``Local Bears`` are\n+now known as ``File Bears``. Both the ``ProjectBear`` and the ``FileBear``\n+classes inherit from the base class ``coalib.core.Bear.py``.\n+\n+- **ProjectBears:** Performs analysis on the whole codebase and does\n+not parallelize tasks. All the bears formerly known as GlobalBears will now\n+inherit from this class.\n+\n+- **FileBears:** Performs analysis on the files provided by the user\n+and parallelizes tasks for each give file. All the bears formerly known as\n+LocalBears will now inherit from this class.\n+\n+What is new?\n+------------\n+\n+The following new features have been installed in the NextGen-Core:\n+\n+- New bear type: ``DependencyBear``\n+- Usage of instance-bound ``Bear.BEAR_DEPS``\n+- Usage of instance-bound ``Bear.REQUIREMENTS``\n+\n+DependencyBear\n+--------------\n+\n+The handling of bear dependencies by the old core wasn't effective. The\n+old core used a queuing mechanism to communicate betweeen bear runs which\n+led to problems of a GlobalBear not running if any one of its\n+dependencies (a local bear) terminated. The NextGen-Core does away with\n+that by introducing a ``DependencyBear``.\n+\n+This bear serves as a base class parallelizes tasks for each dependency\n+result. A bear dependent on other bears can specify its dependencies in\n+``BEAR_DEPS``. For example there are two bears ``Foo`` and ``Bar``\n+and bear ``Bar`` depends on ``Foo``. This can be written as\n+\n+::\n+\n+    class BarBear(DependencyBear):\n+        BEAR_DEPS = {FooBear}\n+\n+Multiple bears can be included as a dependency of a bear in the BEAR_DEPS\n+field. The results of the dependency bears are saved in a dictionary\n+called ``_dependency_results`` which is initialized in the ``__init()__``\n+method of the class ``Bear.py`` and can be accessed using the method\n+``dependency_results()`` also belonging to the same class.\n+\n+Writing A Dependency Bear\n+-------------------------\n+\n+Lets consider a bear to be dependent on a project bear ``Fizz`` and a file bear","author":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4","name":"Palash Nigam"},"reactions":[],"createdAt":"2018-03-25T19:23:45Z","lastEditedAt":null,"updatedAt":"2018-03-25T19:23:45Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3Njk1MTEyNQ==","url":"https://github.com/coala/coala/pull/5262#discussion_r176951125","bodyText":"that was confusing, switching it to task 👍","diffHunk":"@@ -0,0 +1,198 @@\n+NextGen-Core\n+============\n+\n+This document provides a brief overview of coala's NextGen-Core.\n+coala's NextGen-Core comes with the promise of eliminating the dependencies\n+amongst bears (by removing the queuing machanism) and a better performance\n+(by utilising asynchronous I/O and process pool).\n+\n+What has changed?\n+-----------------\n+\n+``Global Bears`` are now called ``Project Bears`` and ``Local Bears`` are\n+now known as ``File Bears``. Both the ``ProjectBear`` and the ``FileBear``\n+classes inherit from the base class ``coalib.core.Bear.py``.\n+\n+- **ProjectBears:** Performs analysis on the whole codebase and does\n+not parallelize tasks. All the bears formerly known as GlobalBears will now\n+inherit from this class.\n+\n+- **FileBears:** Performs analysis on the files provided by the user\n+and parallelizes tasks for each give file. All the bears formerly known as\n+LocalBears will now inherit from this class.\n+\n+What is new?\n+------------\n+\n+The following new features have been installed in the NextGen-Core:\n+\n+- New bear type: ``DependencyBear``\n+- Usage of instance-bound ``Bear.BEAR_DEPS``\n+- Usage of instance-bound ``Bear.REQUIREMENTS``\n+\n+DependencyBear\n+--------------\n+\n+The handling of bear dependencies by the old core wasn't effective. The\n+old core used a queuing mechanism to communicate betweeen bear runs which\n+led to problems of a GlobalBear not running if any one of its\n+dependencies (a local bear) terminated. The NextGen-Core does away with\n+that by introducing a ``DependencyBear``.\n+\n+This bear serves as a base class parallelizes tasks for each dependency\n+result. A bear dependent on other bears can specify its dependencies in\n+``BEAR_DEPS``. For example there are two bears ``Foo`` and ``Bar``\n+and bear ``Bar`` depends on ``Foo``. This can be written as\n+\n+::\n+\n+    class BarBear(DependencyBear):\n+        BEAR_DEPS = {FooBear}\n+\n+Multiple bears can be included as a dependency of a bear in the BEAR_DEPS\n+field. The results of the dependency bears are saved in a dictionary\n+called ``_dependency_results`` which is initialized in the ``__init()__``\n+method of the class ``Bear.py`` and can be accessed using the method\n+``dependency_results()`` also belonging to the same class.\n+\n+Writing A Dependency Bear\n+-------------------------\n+\n+Lets consider a bear to be dependent on a project bear ``Fizz`` and a file bear\n+``Buzz`` then the corresponding DependencyBear lets call it ``FizzBuzz`` will\n+look like the following:\n+\n+::\n+\n+    class FizzBuzzBear(DependencyBear):\n+        BEAR_DEPS = {FizzBear, BuzzBear}\n+\n+        def analyze(self, dependency_bear, dependency_result, a_number=100):\n+            yield '{} ({}) - {}'.format(\n+                dependency_bear.name, a_number, dependency_result)\n+\n+Usage of instance-bound ``Bear.BEAR_DEPS``\n+------------------------------------------\n+\n+A bear might depend on mutilple bears before its execution can begin.\n+``Bear.BEAR_DEPS`` is just a collection (a set) of classes (Bear classes) that\n+need to be executed before that bear can run. Once all these dependencies\n+(Bears) have ran their results are passed into ``self.dependency_results``.\n+The results are in the form of a dictionary with the types of the bears and\n+their corresponding results (in the form of a list) as *Key-Value* pairs.\n+From the previous example if we try to access the BEAR_DEPS of the ``BarBear``\n+we will get the result ``{<class 'coalib.core.Bear.FooBear'>}``.\n+\n+In the `__init__()` method of the class ``Bear.py`` the dependencies specified\n+in the ``BEAR_DEPS`` are copied to every instance of a Bear run using\n+``self.BEAR_DEPS = set(self.BEAR_DEPS)`` which makes runtime modifications\n+are possible.\n+\n+Usage of instance-bound ``Bear.REQUIREMENTS``\n+-----------------------------------------\n+\n+A bear might have some external dependencies that need to be installed before\n+the bear can run any analysis. The ``REQUIREMENTS`` field (a set) contains\n+instances of the ``PackageRequirement`` class from the coala's\n+``dependency_management`` module. For example.\n+\n+::\n+\n+    >>> from dependency_management.requirements.PackageRequirement import (\n+    ...     PackageRequirement)\n+    >>> from coalib.core.Bear import Bear\n+    ...\n+    >>> class BarBear(Bear):\n+    ...     REQUIREMENTS = {\n+    ...         PackageRequirement('pip', 'coala_decorators', '0.2.1')}\n+\n+If the bear uses requirements from a package manager then we can use the\n+subclass of the ``PackageRequirement`` class for that package manager. For\n+example in case of a pip requirement do the following:\n+\n+::\n+\n+    >>> from dependency_management.requirements.PipRequirement import (\n+    ...     PipRequirement)\n+    >>> class FooBear(Bear):\n+    ...     REQUIREMENTS = {PipRequirement('coala_decorators', '0.2.1')}\n+\n+\n+Override bears and define task scheduling\n+-----------------------------------------\n+\n+A nextgen bear has to have the following functions to perform analysis\n+- ``generate_tasks``: This method is a part of the parent ``Bear.py`` class\n+and returns tuples containing the positional arguments as a tuple and the\n+keyword arguments in the form of a dict. These are actually the task objects\n+that are scheduled and executed by the core. Absence of this method raises\n+``NotImplementedError``.\n+- ``analyze``: This method contains the code that performs the actual code\n+analysis routine that that bear is used for. Absence of this method raises\n+``NotImplementedError``.\n+\n+How to use `Core.run`\n+--------------------\n+\n+The `run(bears, result_callback, cache=None, executor=None)` method in `Core.PY`\n+is used to instantiate a coala session with the parameters it receives and run\n+it.\n+- ``bears``: contains all the instances of bears to run.\n+- ``result_callback``: a function that is called only when the results from\n+the bears are available.\n+- ``cache``: a cache used by bears to speed up runs.\n+- ``executor``: a custom executor used to run the bears. By default\n+``ProcessPoolExecutor`` is used.\n+\n+The new core comes with the following new additions:\n+- **Dependency Resolution:** The ``initialize_dependencies`` method in\n+``Core.py`` recieves the bears that are to be run and processes bear\n+dependencies using a consumer based system so that each dependency bear has only\n+one instance per section and file-dict. It returns a set of dependency bears\n+along with those bears that don't have any dependencies or whose dependencies\n+have been resolved(these are the ones that are scheduled to be run). The bears\n+are resolved by traversing each edge of the dependency graph and instantiating\n+dependency bears accordingly one per section. Before the bears are run we\n+initialize the dependency tracking in the ``__init__`` method of the class\n+``Session`` which is responsible for running coala sessions. The\n+``dependency_tracker`` object is used while scheduling and cleaning up bears and\n+also while finishing bear tasks.\n+\n+- **Task Scheduling:** The bears that have no dependencies or whose\n+dependencies have been resolved, only their tasks will be scheduled for\n+execution. Before exexuting any tasks the coala looks up the task in the cache.\n+In case of a hit the existing results that is stored in the cache for the\n+corresponding task arguments is called using ``execute_task_with_cache``\n+method. In case of a miss or if coala is ran without a cache the bear task is","author":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4","name":"Palash Nigam"},"reactions":[],"createdAt":"2018-03-25T19:29:19Z","lastEditedAt":null,"updatedAt":"2018-03-25T19:29:19Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3Njk1MjA0OA==","url":"https://github.com/coala/coala/pull/5262#discussion_r176952048","bodyText":"is -> are","diffHunk":"@@ -0,0 +1,196 @@\n+NextGen-Core\n+============\n+\n+This document provides a brief overview of coala's NextGen-Core.\n+coala's NextGen-Core comes with the promise of eliminating the dependencies\n+amongst bears (by removing the queuing machanism) and better performance\n+(by utilising asynchronous I/O and process pool).\n+\n+What has changed?\n+-----------------\n+\n+``Global Bears`` are now called ``Project Bears`` and ``Local Bears`` are\n+now known as ``File Bears``. Both the ``ProjectBear`` and the ``FileBear``\n+classes inherit from the base class ``coalib.core.Bear.py``.\n+\n+- **ProjectBears:** Performs analysis on the whole codebase and does not\n+  parallelize tasks. All the bears formerly known as GlobalBears will now\n+  inherit from this class.\n+- **FileBears:** Performs analysis on the files provided by the user\n+  and parallelizes tasks for each give file. All the bears formerly known as\n+  LocalBears will now inherit from this class.\n+\n+What is new?\n+------------\n+\n+The following new features have been added as a part of the NextGen-Core:\n+\n+- New bear type: ``DependencyBear``\n+- Usage of instance-bound ``Bear.BEAR_DEPS``\n+- Usage of instance-bound ``Bear.REQUIREMENTS``\n+\n+DependencyBear\n+--------------\n+\n+The handling of bear dependencies by the old core wasn't effective. The\n+old core used a queuing mechanism to communicate betweeen bear runs which\n+led to problems of a GlobalBear not running if any one of its\n+dependencies (a local bear) terminated. The NextGen-Core does away with\n+that by introducing a ``DependencyBear``.\n+\n+This bear serves as a base class which parallelizes tasks for each dependency\n+result. A bear dependent on other bears can specify its dependencies in\n+``BEAR_DEPS``. For example there are two bears ``Foo`` and ``Bar``\n+and bear ``Bar`` depends on ``Foo``. This can be written as\n+\n+::\n+\n+    class BarBear(DependencyBear):\n+        BEAR_DEPS = {FooBear}\n+\n+Multiple bears can be included as a dependency of a bear in the BEAR_DEPS\n+field. The results of the dependency bears are saved in a dictionary\n+called ``_dependency_results`` which is initialized in the ``__init()__``\n+method of the class ``Bear.py`` and can be accessed using the method\n+``dependency_results()`` also belonging to the same class.\n+\n+Writing A Dependency Bear\n+-------------------------\n+\n+Lets consider a bear to be dependent on a project bear ``Fizz`` and a file bear\n+``Buzz`` then the corresponding DependencyBear lets call it ``FizzBuzz`` will\n+look like the following:\n+\n+::\n+\n+    class FizzBuzzBear(DependencyBear):\n+        BEAR_DEPS = {FizzBear, BuzzBear}\n+\n+        def analyze(self, dependency_bear, dependency_result, a_number=100):\n+            yield '{} ({}) - {}'.format(\n+                dependency_bear.name, a_number, dependency_result)\n+\n+Usage of instance-bound ``Bear.BEAR_DEPS``\n+------------------------------------------\n+\n+A bear might depend on multiple bears (to run) before its execution can begin.\n+``Bear.BEAR_DEPS`` is just a collection (a set) of classes (Bear classes) that\n+need to be executed before that bear can run. Once all these dependencies\n+(Bears) have ran their results are passed into ``self.dependency_results``.\n+The results are in the form of a dictionary with the types of the bears and\n+their corresponding results (in the form of a list) as *Key-Value* pairs.\n+From the previous example if we try to access the BEAR_DEPS of the ``BarBear``\n+we will get the result ``{<class 'coalib.core.Bear.FooBear'>}``.\n+\n+In the `__init__()` method of the class ``Bear.py`` the dependencies specified\n+in the ``BEAR_DEPS`` are copied to every instance of a Bear run using\n+``self.BEAR_DEPS = set(self.BEAR_DEPS)`` which makes runtime modifications\n+are possible.\n+\n+Usage of instance-bound ``Bear.REQUIREMENTS``\n+---------------------------------------------\n+\n+A bear might have some external dependencies that need to be installed before\n+the bear can run any analysis. The ``REQUIREMENTS`` field (a set) contains\n+instances of the ``PackageRequirement`` class from the coala's\n+``dependency_management`` module. For example.\n+\n+::\n+\n+    >>> from dependency_management.requirements.PackageRequirement import (\n+    ...     PackageRequirement)\n+    >>> from coalib.core.Bear import Bear\n+    ...\n+    >>> class BarBear(Bear):\n+    ...     REQUIREMENTS = {\n+    ...         PackageRequirement('pip', 'coala_decorators', '0.2.1')}\n+\n+If the bear uses requirements from a package manager then we can use the\n+subclass of the ``PackageRequirement`` class for that package manager. For\n+example in case of a pip requirement do the following:\n+\n+::\n+\n+    >>> from dependency_management.requirements.PipRequirement import (\n+    ...     PipRequirement)\n+    >>> class FooBear(Bear):\n+    ...     REQUIREMENTS = {PipRequirement('coala_decorators', '0.2.1')}\n+\n+\n+Override bears and define task scheduling\n+-----------------------------------------\n+\n+A nextgen bear has to have the following functions to perform analysis\n+- ``generate_tasks``: This method is a part of the parent ``Bear.py`` class\n+and returns tuples containing the positional arguments as a tuple and the\n+keyword arguments in the form of a dict. These are actually the task objects\n+that are scheduled and executed by the core. Absence of this method raises\n+``NotImplementedError``.\n+- ``analyze``: This method contains the code that performs the actual code\n+analysis routine that that bear is used for. Absence of this method raises\n+``NotImplementedError``.\n+\n+How to use `Core.run`\n+---------------------\n+\n+The `run(bears, result_callback, cache=None, executor=None)` method in `Core.py`\n+is used to instantiate a coala session with the parameters it receives and run\n+it.\n+- ``bears``: contains all the instances of bears to run.\n+- ``result_callback``: a function that is called only when the results from\n+the bears are available.\n+- ``cache``: a cache used by bears to speed up runs.\n+- ``executor``: a custom executor used to run the bears. By default\n+``ProcessPoolExecutor`` is used.\n+\n+The new core comes with the following new additions:\n+\n+- **Dependency Resolution:** The ``initialize_dependencies`` method in\n+  ``Core.py`` recieves the bears that are to be run and processes bear\n+  dependencies using a consumer based system so that each dependency bear has\n+  only one instance per section and file-dict. It returns a set of dependency\n+  bears along with those bears that don't have any dependencies or whose\n+  dependencies have been resolved (these are the ones that are scheduled to be\n+  run). The bears are resolved by traversing each edge of the dependency graph\n+  and instantiating dependency bears accordingly one per section. Before the\n+  bears are run we initialize the dependency tracking in the ``__init__`` method\n+  of the class ``Session`` which is responsible for running coala sessions. The\n+  ``dependency_tracker`` object is used while scheduling and cleaning up bears\n+  and also while finishing bear tasks.\n+- **Task Scheduling:** The bears that have no dependencies or whose\n+  dependencies have been resolved, only their tasks will be scheduled for\n+  execution. Before executing any task coala looks it up in the cache.\n+  In case of a hit the existing results that is stored in the cache for the","author":{"login":"nemaniarjun","avatarUrl":"https://avatars0.githubusercontent.com/u/15715894?v=4","name":"Arjun Nemani"},"reactions":[],"createdAt":"2018-03-25T20:02:02Z","lastEditedAt":null,"updatedAt":"2018-03-25T20:02:02Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3Njk1MjEzNQ==","url":"https://github.com/coala/coala/pull/5262#discussion_r176952135","bodyText":"done 👍","diffHunk":"@@ -0,0 +1,196 @@\n+NextGen-Core\n+============\n+\n+This document provides a brief overview of coala's NextGen-Core.\n+coala's NextGen-Core comes with the promise of eliminating the dependencies\n+amongst bears (by removing the queuing machanism) and better performance\n+(by utilising asynchronous I/O and process pool).\n+\n+What has changed?\n+-----------------\n+\n+``Global Bears`` are now called ``Project Bears`` and ``Local Bears`` are\n+now known as ``File Bears``. Both the ``ProjectBear`` and the ``FileBear``\n+classes inherit from the base class ``coalib.core.Bear.py``.\n+\n+- **ProjectBears:** Performs analysis on the whole codebase and does not\n+  parallelize tasks. All the bears formerly known as GlobalBears will now\n+  inherit from this class.\n+- **FileBears:** Performs analysis on the files provided by the user\n+  and parallelizes tasks for each give file. All the bears formerly known as\n+  LocalBears will now inherit from this class.\n+\n+What is new?\n+------------\n+\n+The following new features have been added as a part of the NextGen-Core:\n+\n+- New bear type: ``DependencyBear``\n+- Usage of instance-bound ``Bear.BEAR_DEPS``\n+- Usage of instance-bound ``Bear.REQUIREMENTS``\n+\n+DependencyBear\n+--------------\n+\n+The handling of bear dependencies by the old core wasn't effective. The\n+old core used a queuing mechanism to communicate betweeen bear runs which\n+led to problems of a GlobalBear not running if any one of its\n+dependencies (a local bear) terminated. The NextGen-Core does away with\n+that by introducing a ``DependencyBear``.\n+\n+This bear serves as a base class which parallelizes tasks for each dependency\n+result. A bear dependent on other bears can specify its dependencies in\n+``BEAR_DEPS``. For example there are two bears ``Foo`` and ``Bar``\n+and bear ``Bar`` depends on ``Foo``. This can be written as\n+\n+::\n+\n+    class BarBear(DependencyBear):\n+        BEAR_DEPS = {FooBear}\n+\n+Multiple bears can be included as a dependency of a bear in the BEAR_DEPS\n+field. The results of the dependency bears are saved in a dictionary\n+called ``_dependency_results`` which is initialized in the ``__init()__``\n+method of the class ``Bear.py`` and can be accessed using the method\n+``dependency_results()`` also belonging to the same class.\n+\n+Writing A Dependency Bear\n+-------------------------\n+\n+Lets consider a bear to be dependent on a project bear ``Fizz`` and a file bear\n+``Buzz`` then the corresponding DependencyBear lets call it ``FizzBuzz`` will\n+look like the following:\n+\n+::\n+\n+    class FizzBuzzBear(DependencyBear):\n+        BEAR_DEPS = {FizzBear, BuzzBear}\n+\n+        def analyze(self, dependency_bear, dependency_result, a_number=100):\n+            yield '{} ({}) - {}'.format(\n+                dependency_bear.name, a_number, dependency_result)\n+\n+Usage of instance-bound ``Bear.BEAR_DEPS``\n+------------------------------------------\n+\n+A bear might depend on multiple bears (to run) before its execution can begin.\n+``Bear.BEAR_DEPS`` is just a collection (a set) of classes (Bear classes) that\n+need to be executed before that bear can run. Once all these dependencies\n+(Bears) have ran their results are passed into ``self.dependency_results``.\n+The results are in the form of a dictionary with the types of the bears and\n+their corresponding results (in the form of a list) as *Key-Value* pairs.\n+From the previous example if we try to access the BEAR_DEPS of the ``BarBear``\n+we will get the result ``{<class 'coalib.core.Bear.FooBear'>}``.\n+\n+In the `__init__()` method of the class ``Bear.py`` the dependencies specified\n+in the ``BEAR_DEPS`` are copied to every instance of a Bear run using\n+``self.BEAR_DEPS = set(self.BEAR_DEPS)`` which makes runtime modifications\n+are possible.\n+\n+Usage of instance-bound ``Bear.REQUIREMENTS``\n+---------------------------------------------\n+\n+A bear might have some external dependencies that need to be installed before\n+the bear can run any analysis. The ``REQUIREMENTS`` field (a set) contains\n+instances of the ``PackageRequirement`` class from the coala's\n+``dependency_management`` module. For example.\n+\n+::\n+\n+    >>> from dependency_management.requirements.PackageRequirement import (\n+    ...     PackageRequirement)\n+    >>> from coalib.core.Bear import Bear\n+    ...\n+    >>> class BarBear(Bear):\n+    ...     REQUIREMENTS = {\n+    ...         PackageRequirement('pip', 'coala_decorators', '0.2.1')}\n+\n+If the bear uses requirements from a package manager then we can use the\n+subclass of the ``PackageRequirement`` class for that package manager. For\n+example in case of a pip requirement do the following:\n+\n+::\n+\n+    >>> from dependency_management.requirements.PipRequirement import (\n+    ...     PipRequirement)\n+    >>> class FooBear(Bear):\n+    ...     REQUIREMENTS = {PipRequirement('coala_decorators', '0.2.1')}\n+\n+\n+Override bears and define task scheduling\n+-----------------------------------------\n+\n+A nextgen bear has to have the following functions to perform analysis\n+- ``generate_tasks``: This method is a part of the parent ``Bear.py`` class\n+and returns tuples containing the positional arguments as a tuple and the\n+keyword arguments in the form of a dict. These are actually the task objects\n+that are scheduled and executed by the core. Absence of this method raises\n+``NotImplementedError``.\n+- ``analyze``: This method contains the code that performs the actual code\n+analysis routine that that bear is used for. Absence of this method raises\n+``NotImplementedError``.\n+\n+How to use `Core.run`\n+---------------------\n+\n+The `run(bears, result_callback, cache=None, executor=None)` method in `Core.py`\n+is used to instantiate a coala session with the parameters it receives and run\n+it.\n+- ``bears``: contains all the instances of bears to run.\n+- ``result_callback``: a function that is called only when the results from\n+the bears are available.\n+- ``cache``: a cache used by bears to speed up runs.\n+- ``executor``: a custom executor used to run the bears. By default\n+``ProcessPoolExecutor`` is used.\n+\n+The new core comes with the following new additions:\n+\n+- **Dependency Resolution:** The ``initialize_dependencies`` method in\n+  ``Core.py`` recieves the bears that are to be run and processes bear\n+  dependencies using a consumer based system so that each dependency bear has\n+  only one instance per section and file-dict. It returns a set of dependency\n+  bears along with those bears that don't have any dependencies or whose\n+  dependencies have been resolved (these are the ones that are scheduled to be\n+  run). The bears are resolved by traversing each edge of the dependency graph\n+  and instantiating dependency bears accordingly one per section. Before the\n+  bears are run we initialize the dependency tracking in the ``__init__`` method\n+  of the class ``Session`` which is responsible for running coala sessions. The\n+  ``dependency_tracker`` object is used while scheduling and cleaning up bears\n+  and also while finishing bear tasks.\n+- **Task Scheduling:** The bears that have no dependencies or whose\n+  dependencies have been resolved, only their tasks will be scheduled for\n+  execution. Before executing any task coala looks it up in the cache.\n+  In case of a hit the existing results that is stored in the cache for the","author":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4","name":"Palash Nigam"},"reactions":[],"createdAt":"2018-03-25T20:04:18Z","lastEditedAt":null,"updatedAt":"2018-03-25T20:04:18Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3Njk1MjE1Ng==","url":"https://github.com/coala/coala/pull/5262#discussion_r176952156","bodyText":"Copy the whole text and run a spell check 😉  All typos would be instantly revealed.\nrecieves, machanism, betweeen, etc :)","diffHunk":"@@ -0,0 +1,196 @@\n+NextGen-Core","author":{"login":"nemaniarjun","avatarUrl":"https://avatars0.githubusercontent.com/u/15715894?v=4","name":"Arjun Nemani"},"reactions":[],"createdAt":"2018-03-25T20:05:00Z","lastEditedAt":"2018-03-25T20:05:25Z","updatedAt":"2018-03-25T20:05:25Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3Njk1MjE5Nw==","url":"https://github.com/coala/coala/pull/5262#discussion_r176952197","bodyText":"Shouldnt this whole part be in caching instead of scheduling? CC @Makman2  :)","diffHunk":"@@ -0,0 +1,196 @@\n+NextGen-Core\n+============\n+\n+This document provides a brief overview of coala's NextGen-Core.\n+coala's NextGen-Core comes with the promise of eliminating the dependencies\n+amongst bears (by removing the queuing machanism) and better performance\n+(by utilising asynchronous I/O and process pool).\n+\n+What has changed?\n+-----------------\n+\n+``Global Bears`` are now called ``Project Bears`` and ``Local Bears`` are\n+now known as ``File Bears``. Both the ``ProjectBear`` and the ``FileBear``\n+classes inherit from the base class ``coalib.core.Bear.py``.\n+\n+- **ProjectBears:** Performs analysis on the whole codebase and does not\n+  parallelize tasks. All the bears formerly known as GlobalBears will now\n+  inherit from this class.\n+- **FileBears:** Performs analysis on the files provided by the user\n+  and parallelizes tasks for each give file. All the bears formerly known as\n+  LocalBears will now inherit from this class.\n+\n+What is new?\n+------------\n+\n+The following new features have been added as a part of the NextGen-Core:\n+\n+- New bear type: ``DependencyBear``\n+- Usage of instance-bound ``Bear.BEAR_DEPS``\n+- Usage of instance-bound ``Bear.REQUIREMENTS``\n+\n+DependencyBear\n+--------------\n+\n+The handling of bear dependencies by the old core wasn't effective. The\n+old core used a queuing mechanism to communicate betweeen bear runs which\n+led to problems of a GlobalBear not running if any one of its\n+dependencies (a local bear) terminated. The NextGen-Core does away with\n+that by introducing a ``DependencyBear``.\n+\n+This bear serves as a base class which parallelizes tasks for each dependency\n+result. A bear dependent on other bears can specify its dependencies in\n+``BEAR_DEPS``. For example there are two bears ``Foo`` and ``Bar``\n+and bear ``Bar`` depends on ``Foo``. This can be written as\n+\n+::\n+\n+    class BarBear(DependencyBear):\n+        BEAR_DEPS = {FooBear}\n+\n+Multiple bears can be included as a dependency of a bear in the BEAR_DEPS\n+field. The results of the dependency bears are saved in a dictionary\n+called ``_dependency_results`` which is initialized in the ``__init()__``\n+method of the class ``Bear.py`` and can be accessed using the method\n+``dependency_results()`` also belonging to the same class.\n+\n+Writing A Dependency Bear\n+-------------------------\n+\n+Lets consider a bear to be dependent on a project bear ``Fizz`` and a file bear\n+``Buzz`` then the corresponding DependencyBear lets call it ``FizzBuzz`` will\n+look like the following:\n+\n+::\n+\n+    class FizzBuzzBear(DependencyBear):\n+        BEAR_DEPS = {FizzBear, BuzzBear}\n+\n+        def analyze(self, dependency_bear, dependency_result, a_number=100):\n+            yield '{} ({}) - {}'.format(\n+                dependency_bear.name, a_number, dependency_result)\n+\n+Usage of instance-bound ``Bear.BEAR_DEPS``\n+------------------------------------------\n+\n+A bear might depend on multiple bears (to run) before its execution can begin.\n+``Bear.BEAR_DEPS`` is just a collection (a set) of classes (Bear classes) that\n+need to be executed before that bear can run. Once all these dependencies\n+(Bears) have ran their results are passed into ``self.dependency_results``.\n+The results are in the form of a dictionary with the types of the bears and\n+their corresponding results (in the form of a list) as *Key-Value* pairs.\n+From the previous example if we try to access the BEAR_DEPS of the ``BarBear``\n+we will get the result ``{<class 'coalib.core.Bear.FooBear'>}``.\n+\n+In the `__init__()` method of the class ``Bear.py`` the dependencies specified\n+in the ``BEAR_DEPS`` are copied to every instance of a Bear run using\n+``self.BEAR_DEPS = set(self.BEAR_DEPS)`` which makes runtime modifications\n+are possible.\n+\n+Usage of instance-bound ``Bear.REQUIREMENTS``\n+---------------------------------------------\n+\n+A bear might have some external dependencies that need to be installed before\n+the bear can run any analysis. The ``REQUIREMENTS`` field (a set) contains\n+instances of the ``PackageRequirement`` class from the coala's\n+``dependency_management`` module. For example.\n+\n+::\n+\n+    >>> from dependency_management.requirements.PackageRequirement import (\n+    ...     PackageRequirement)\n+    >>> from coalib.core.Bear import Bear\n+    ...\n+    >>> class BarBear(Bear):\n+    ...     REQUIREMENTS = {\n+    ...         PackageRequirement('pip', 'coala_decorators', '0.2.1')}\n+\n+If the bear uses requirements from a package manager then we can use the\n+subclass of the ``PackageRequirement`` class for that package manager. For\n+example in case of a pip requirement do the following:\n+\n+::\n+\n+    >>> from dependency_management.requirements.PipRequirement import (\n+    ...     PipRequirement)\n+    >>> class FooBear(Bear):\n+    ...     REQUIREMENTS = {PipRequirement('coala_decorators', '0.2.1')}\n+\n+\n+Override bears and define task scheduling\n+-----------------------------------------\n+\n+A nextgen bear has to have the following functions to perform analysis\n+- ``generate_tasks``: This method is a part of the parent ``Bear.py`` class\n+and returns tuples containing the positional arguments as a tuple and the\n+keyword arguments in the form of a dict. These are actually the task objects\n+that are scheduled and executed by the core. Absence of this method raises\n+``NotImplementedError``.\n+- ``analyze``: This method contains the code that performs the actual code\n+analysis routine that that bear is used for. Absence of this method raises\n+``NotImplementedError``.\n+\n+How to use `Core.run`\n+---------------------\n+\n+The `run(bears, result_callback, cache=None, executor=None)` method in `Core.py`\n+is used to instantiate a coala session with the parameters it receives and run\n+it.\n+- ``bears``: contains all the instances of bears to run.\n+- ``result_callback``: a function that is called only when the results from\n+the bears are available.\n+- ``cache``: a cache used by bears to speed up runs.\n+- ``executor``: a custom executor used to run the bears. By default\n+``ProcessPoolExecutor`` is used.\n+\n+The new core comes with the following new additions:\n+\n+- **Dependency Resolution:** The ``initialize_dependencies`` method in\n+  ``Core.py`` recieves the bears that are to be run and processes bear\n+  dependencies using a consumer based system so that each dependency bear has\n+  only one instance per section and file-dict. It returns a set of dependency\n+  bears along with those bears that don't have any dependencies or whose\n+  dependencies have been resolved (these are the ones that are scheduled to be\n+  run). The bears are resolved by traversing each edge of the dependency graph\n+  and instantiating dependency bears accordingly one per section. Before the\n+  bears are run we initialize the dependency tracking in the ``__init__`` method\n+  of the class ``Session`` which is responsible for running coala sessions. The\n+  ``dependency_tracker`` object is used while scheduling and cleaning up bears\n+  and also while finishing bear tasks.\n+- **Task Scheduling:** The bears that have no dependencies or whose\n+  dependencies have been resolved, only their tasks will be scheduled for\n+  execution. Before executing any task coala looks it up in the cache.\n+  In case of a hit the existing results that are stored in the cache for the\n+  corresponding task arguments are called using ``execute_task_with_cache``\n+  method. In case of a miss or if coala is ran without a cache the task is","author":{"login":"nemaniarjun","avatarUrl":"https://avatars0.githubusercontent.com/u/15715894?v=4","name":"Arjun Nemani"},"reactions":[],"createdAt":"2018-03-25T20:06:23Z","lastEditedAt":null,"updatedAt":"2018-03-25T20:06:23Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3Njk1MjU4Mg==","url":"https://github.com/coala/coala/pull/5262#discussion_r176952582","bodyText":"It is there in caching too (last para) and I think it should stay in both","diffHunk":"@@ -0,0 +1,196 @@\n+NextGen-Core\n+============\n+\n+This document provides a brief overview of coala's NextGen-Core.\n+coala's NextGen-Core comes with the promise of eliminating the dependencies\n+amongst bears (by removing the queuing machanism) and better performance\n+(by utilising asynchronous I/O and process pool).\n+\n+What has changed?\n+-----------------\n+\n+``Global Bears`` are now called ``Project Bears`` and ``Local Bears`` are\n+now known as ``File Bears``. Both the ``ProjectBear`` and the ``FileBear``\n+classes inherit from the base class ``coalib.core.Bear.py``.\n+\n+- **ProjectBears:** Performs analysis on the whole codebase and does not\n+  parallelize tasks. All the bears formerly known as GlobalBears will now\n+  inherit from this class.\n+- **FileBears:** Performs analysis on the files provided by the user\n+  and parallelizes tasks for each give file. All the bears formerly known as\n+  LocalBears will now inherit from this class.\n+\n+What is new?\n+------------\n+\n+The following new features have been added as a part of the NextGen-Core:\n+\n+- New bear type: ``DependencyBear``\n+- Usage of instance-bound ``Bear.BEAR_DEPS``\n+- Usage of instance-bound ``Bear.REQUIREMENTS``\n+\n+DependencyBear\n+--------------\n+\n+The handling of bear dependencies by the old core wasn't effective. The\n+old core used a queuing mechanism to communicate betweeen bear runs which\n+led to problems of a GlobalBear not running if any one of its\n+dependencies (a local bear) terminated. The NextGen-Core does away with\n+that by introducing a ``DependencyBear``.\n+\n+This bear serves as a base class which parallelizes tasks for each dependency\n+result. A bear dependent on other bears can specify its dependencies in\n+``BEAR_DEPS``. For example there are two bears ``Foo`` and ``Bar``\n+and bear ``Bar`` depends on ``Foo``. This can be written as\n+\n+::\n+\n+    class BarBear(DependencyBear):\n+        BEAR_DEPS = {FooBear}\n+\n+Multiple bears can be included as a dependency of a bear in the BEAR_DEPS\n+field. The results of the dependency bears are saved in a dictionary\n+called ``_dependency_results`` which is initialized in the ``__init()__``\n+method of the class ``Bear.py`` and can be accessed using the method\n+``dependency_results()`` also belonging to the same class.\n+\n+Writing A Dependency Bear\n+-------------------------\n+\n+Lets consider a bear to be dependent on a project bear ``Fizz`` and a file bear\n+``Buzz`` then the corresponding DependencyBear lets call it ``FizzBuzz`` will\n+look like the following:\n+\n+::\n+\n+    class FizzBuzzBear(DependencyBear):\n+        BEAR_DEPS = {FizzBear, BuzzBear}\n+\n+        def analyze(self, dependency_bear, dependency_result, a_number=100):\n+            yield '{} ({}) - {}'.format(\n+                dependency_bear.name, a_number, dependency_result)\n+\n+Usage of instance-bound ``Bear.BEAR_DEPS``\n+------------------------------------------\n+\n+A bear might depend on multiple bears (to run) before its execution can begin.\n+``Bear.BEAR_DEPS`` is just a collection (a set) of classes (Bear classes) that\n+need to be executed before that bear can run. Once all these dependencies\n+(Bears) have ran their results are passed into ``self.dependency_results``.\n+The results are in the form of a dictionary with the types of the bears and\n+their corresponding results (in the form of a list) as *Key-Value* pairs.\n+From the previous example if we try to access the BEAR_DEPS of the ``BarBear``\n+we will get the result ``{<class 'coalib.core.Bear.FooBear'>}``.\n+\n+In the `__init__()` method of the class ``Bear.py`` the dependencies specified\n+in the ``BEAR_DEPS`` are copied to every instance of a Bear run using\n+``self.BEAR_DEPS = set(self.BEAR_DEPS)`` which makes runtime modifications\n+are possible.\n+\n+Usage of instance-bound ``Bear.REQUIREMENTS``\n+---------------------------------------------\n+\n+A bear might have some external dependencies that need to be installed before\n+the bear can run any analysis. The ``REQUIREMENTS`` field (a set) contains\n+instances of the ``PackageRequirement`` class from the coala's\n+``dependency_management`` module. For example.\n+\n+::\n+\n+    >>> from dependency_management.requirements.PackageRequirement import (\n+    ...     PackageRequirement)\n+    >>> from coalib.core.Bear import Bear\n+    ...\n+    >>> class BarBear(Bear):\n+    ...     REQUIREMENTS = {\n+    ...         PackageRequirement('pip', 'coala_decorators', '0.2.1')}\n+\n+If the bear uses requirements from a package manager then we can use the\n+subclass of the ``PackageRequirement`` class for that package manager. For\n+example in case of a pip requirement do the following:\n+\n+::\n+\n+    >>> from dependency_management.requirements.PipRequirement import (\n+    ...     PipRequirement)\n+    >>> class FooBear(Bear):\n+    ...     REQUIREMENTS = {PipRequirement('coala_decorators', '0.2.1')}\n+\n+\n+Override bears and define task scheduling\n+-----------------------------------------\n+\n+A nextgen bear has to have the following functions to perform analysis\n+- ``generate_tasks``: This method is a part of the parent ``Bear.py`` class\n+and returns tuples containing the positional arguments as a tuple and the\n+keyword arguments in the form of a dict. These are actually the task objects\n+that are scheduled and executed by the core. Absence of this method raises\n+``NotImplementedError``.\n+- ``analyze``: This method contains the code that performs the actual code\n+analysis routine that that bear is used for. Absence of this method raises\n+``NotImplementedError``.\n+\n+How to use `Core.run`\n+---------------------\n+\n+The `run(bears, result_callback, cache=None, executor=None)` method in `Core.py`\n+is used to instantiate a coala session with the parameters it receives and run\n+it.\n+- ``bears``: contains all the instances of bears to run.\n+- ``result_callback``: a function that is called only when the results from\n+the bears are available.\n+- ``cache``: a cache used by bears to speed up runs.\n+- ``executor``: a custom executor used to run the bears. By default\n+``ProcessPoolExecutor`` is used.\n+\n+The new core comes with the following new additions:\n+\n+- **Dependency Resolution:** The ``initialize_dependencies`` method in\n+  ``Core.py`` recieves the bears that are to be run and processes bear\n+  dependencies using a consumer based system so that each dependency bear has\n+  only one instance per section and file-dict. It returns a set of dependency\n+  bears along with those bears that don't have any dependencies or whose\n+  dependencies have been resolved (these are the ones that are scheduled to be\n+  run). The bears are resolved by traversing each edge of the dependency graph\n+  and instantiating dependency bears accordingly one per section. Before the\n+  bears are run we initialize the dependency tracking in the ``__init__`` method\n+  of the class ``Session`` which is responsible for running coala sessions. The\n+  ``dependency_tracker`` object is used while scheduling and cleaning up bears\n+  and also while finishing bear tasks.\n+- **Task Scheduling:** The bears that have no dependencies or whose\n+  dependencies have been resolved, only their tasks will be scheduled for\n+  execution. Before executing any task coala looks it up in the cache.\n+  In case of a hit the existing results that are stored in the cache for the\n+  corresponding task arguments are called using ``execute_task_with_cache``\n+  method. In case of a miss or if coala is ran without a cache the task is","author":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4","name":"Palash Nigam"},"reactions":[],"createdAt":"2018-03-25T20:18:45Z","lastEditedAt":null,"updatedAt":"2018-03-25T20:18:45Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3Njk1MjU4OA==","url":"https://github.com/coala/coala/pull/5262#discussion_r176952588","bodyText":"on it 👍","diffHunk":"@@ -0,0 +1,196 @@\n+NextGen-Core","author":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4","name":"Palash Nigam"},"reactions":[],"createdAt":"2018-03-25T20:18:58Z","lastEditedAt":null,"updatedAt":"2018-03-25T20:18:58Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3Njk1Mjg5MA==","url":"https://github.com/coala/coala/pull/5262#discussion_r176952890","bodyText":"done. no more spelling errors","diffHunk":"@@ -0,0 +1,196 @@\n+NextGen-Core","author":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4","name":"Palash Nigam"},"reactions":[],"createdAt":"2018-03-25T20:29:04Z","lastEditedAt":null,"updatedAt":"2018-03-25T20:29:04Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM3NTk5ODQ0NA==","url":"https://github.com/coala/coala/pull/5262#issuecomment-375998444","bodyText":"cc @Makman2","diffHunk":null,"author":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4","name":"Palash Nigam"},"reactions":[],"createdAt":"2018-03-25T19:56:02Z","lastEditedAt":null,"updatedAt":"2018-03-25T19:56:02Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM3NjAwMDMyMQ==","url":"https://github.com/coala/coala/pull/5262#issuecomment-376000321","bodyText":"We need to have a grammarly bear for PRs like these.","diffHunk":null,"author":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4","name":"Palash Nigam"},"reactions":[{"id":"MDg6UmVhY3Rpb24yMTM2MTMxNQ==","createdAt":"2018-03-26T06:10:19Z","content":"THUMBS_UP","user":{"login":"manankalra","name":"Manan Kalra"}}],"createdAt":"2018-03-25T20:21:41Z","lastEditedAt":null,"updatedAt":"2018-03-25T20:21:41Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM3NjY2MTY4OQ==","url":"https://github.com/coala/coala/pull/5262#issuecomment-376661689","bodyText":"Changes made @Makman2","diffHunk":null,"author":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4","name":"Palash Nigam"},"reactions":[],"createdAt":"2018-03-27T20:21:12Z","lastEditedAt":null,"updatedAt":"2018-03-27T20:21:12Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM3NjY2OTc1Mw==","url":"https://github.com/coala/coala/pull/5262#issuecomment-376669753","bodyText":"Commit message: No colon in the issue reference (we need a bear for that...)","diffHunk":null,"author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[{"id":"MDg6UmVhY3Rpb24yMTQ2NTcwMw==","createdAt":"2018-03-27T20:52:11Z","content":"THUMBS_UP","user":{"login":"palash25","name":"Palash Nigam"}}],"createdAt":"2018-03-27T20:47:13Z","lastEditedAt":null,"updatedAt":"2018-03-27T20:47:13Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM3Njk0OTkzMw==","url":"https://github.com/coala/coala/pull/5262#issuecomment-376949933","bodyText":"@Makman2 changes made, please review 😄","diffHunk":null,"author":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4","name":"Palash Nigam"},"reactions":[],"createdAt":"2018-03-28T16:29:10Z","lastEditedAt":null,"updatedAt":"2018-03-28T16:29:10Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM3NzgwMTIwNg==","url":"https://github.com/coala/coala/pull/5262#issuecomment-377801206","bodyText":"requested changes made.","diffHunk":null,"author":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4","name":"Palash Nigam"},"reactions":[],"createdAt":"2018-04-01T17:09:07Z","lastEditedAt":null,"updatedAt":"2018-04-01T17:09:07Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM3Nzg4OTYzMA==","url":"https://github.com/coala/coala/pull/5262#issuecomment-377889630","bodyText":"@Makman2 changes made","diffHunk":null,"author":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4","name":"Palash Nigam"},"reactions":[],"createdAt":"2018-04-02T09:03:03Z","lastEditedAt":"2018-04-02T12:34:06Z","updatedAt":"2018-04-02T12:34:06Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM4MTMzNDA2OA==","url":"https://github.com/coala/coala/pull/5262#issuecomment-381334068","bodyText":"@nityeshaga\n\nThis paragraph seemed to just suddenly pop out when I was reading the tutorial. I mean if you are dedicating a whole paragraph to Task Objects then IMHO you should mention it in the What Is New paragraph.\n\nAlready discussed with Makman. The task objects are an implementation detail and the Whats New section is only for the new features. But explaining the task objects is also quite important to understand the new dependency management system so we need to dedicate a seperate section to them.","diffHunk":null,"author":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4","name":"Palash Nigam"},"reactions":[{"id":"MDg6UmVhY3Rpb24yMjI3Nzk3NQ==","createdAt":"2018-04-14T14:57:57Z","content":"THUMBS_UP","user":{"login":"nityeshaga","name":"Nityesh Agarwal"}}],"createdAt":"2018-04-14T14:46:13Z","lastEditedAt":null,"updatedAt":"2018-04-14T14:46:13Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM4MTM0NDM3MQ==","url":"https://github.com/coala/coala/pull/5262#issuecomment-381344371","bodyText":"I mean if you are dedicating a whole paragraph to Task Objects then IMHO you should mention it in the What Is New paragraph.\n\nThe task objects themselves aren't a feature, they are necessary to realize other features (i.e custom parallelization). So that's why I also share the opinion to not include it into the \"What's new?\" section.","diffHunk":null,"author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[{"id":"MDg6UmVhY3Rpb24yMjI4MDI0Nw==","createdAt":"2018-04-14T17:36:15Z","content":"THUMBS_UP","user":{"login":"nityeshaga","name":"Nityesh Agarwal"}}],"createdAt":"2018-04-14T17:12:13Z","lastEditedAt":null,"updatedAt":"2018-04-14T17:12:13Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM4NDM4NjYzMg==","url":"https://github.com/coala/coala/pull/5262#issuecomment-384386632","bodyText":"Let's merge it for now and put new revisions into new PRs 👍","diffHunk":null,"author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[{"id":"MDg6UmVhY3Rpb24yMjgxMDE1NQ==","createdAt":"2018-04-25T18:37:16Z","content":"THUMBS_UP","user":{"login":"palash25","name":"Palash Nigam"}}],"createdAt":"2018-04-25T18:24:14Z","lastEditedAt":null,"updatedAt":"2018-04-25T18:24:14Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM4NDQwMTMwNg==","url":"https://github.com/coala/coala/pull/5262#issuecomment-384401306","bodyText":"reack 64ab6d7","diffHunk":null,"author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-04-25T19:11:04Z","lastEditedAt":null,"updatedAt":"2018-04-25T19:11:04Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1521361428000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5264","number":5264,"title":"Writing_Documentation.rst: reStructuredText link is working now","body":"Writing_Documentation.rst: Fix url\nThis fixes the earlier url to a new url.\nFixes #5263\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use cobot mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":15,"createdAt":"2018-03-18T05:38:27Z","updatedAt":"2018-03-18T08:23:48Z","closedAt":"2018-03-18T08:19:42Z","state":"closed","user":{"login":"lalitmee","avatarUrl":"https://avatars0.githubusercontent.com/u/10762218?v=4"},"owner":{"login":"lalitmee","avatarUrl":"https://avatars0.githubusercontent.com/u/10762218?v=4"},"assignee":{"login":"lalitmee","avatarUrl":"https://avatars0.githubusercontent.com/u/10762218?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5264","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDM3Mzk3NDQ3Mw==","url":"https://github.com/coala/coala/pull/5264#issuecomment-373974473","bodyText":"@lalitmee read the commit guidelines and alter your commit accordingly 😉","diffHunk":null,"author":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4","name":"Palash Nigam"},"reactions":[],"createdAt":"2018-03-18T05:41:31Z","lastEditedAt":null,"updatedAt":"2018-03-18T05:41:31Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM3Mzk3NDUyNg==","url":"https://github.com/coala/coala/pull/5264#issuecomment-373974526","bodyText":"Yeah, I am doing that.","diffHunk":null,"author":{"login":"lalitmee","avatarUrl":"https://avatars0.githubusercontent.com/u/10762218?v=4","name":"Lalit Kumar"},"reactions":[{"id":"MDg6UmVhY3Rpb24yMTAxMjkwNw==","createdAt":"2018-03-18T05:43:37Z","content":"THUMBS_UP","user":{"login":"palash25","name":"Palash Nigam"}}],"createdAt":"2018-03-18T05:43:16Z","lastEditedAt":null,"updatedAt":"2018-03-18T05:43:16Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM3Mzk3NjAxNw==","url":"https://github.com/coala/coala/pull/5264#issuecomment-373976017","bodyText":"One commit is more than enough for a small change. Squash them and follow the guidelines.","diffHunk":null,"author":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4","name":"Palash Nigam"},"reactions":[],"createdAt":"2018-03-18T06:28:35Z","lastEditedAt":null,"updatedAt":"2018-03-18T06:28:35Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM3Mzk4MDU3MA==","url":"https://github.com/coala/coala/pull/5264#issuecomment-373980570","bodyText":"Actually, I messed up with my forked repo. So I am closing this one. I will create a new one and hope that will pass all the tests.","diffHunk":null,"author":{"login":"lalitmee","avatarUrl":"https://avatars0.githubusercontent.com/u/10762218?v=4","name":"Lalit Kumar"},"reactions":[],"createdAt":"2018-03-18T08:19:35Z","lastEditedAt":null,"updatedAt":"2018-03-18T08:19:35Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM3Mzk4MDY5Mw==","url":"https://github.com/coala/coala/pull/5264#issuecomment-373980693","bodyText":"@lalitmee don't close PR's without asking. If you have messed up a fork or a branch then ask on the Gitter channel and someone will reach out to you. We don't encourage opening multiple PRs for the same issue. Keep that in mind the next time. 😉","diffHunk":null,"author":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4","name":"Palash Nigam"},"reactions":[],"createdAt":"2018-03-18T08:22:17Z","lastEditedAt":null,"updatedAt":"2018-03-18T08:22:17Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM3Mzk4MDc1NQ==","url":"https://github.com/coala/coala/pull/5264#issuecomment-373980755","bodyText":"@palash25 , oh sorry. I will keep that in mind the next time. 😇","diffHunk":null,"author":{"login":"lalitmee","avatarUrl":"https://avatars0.githubusercontent.com/u/10762218?v=4","name":"Lalit Kumar"},"reactions":[],"createdAt":"2018-03-18T08:23:48Z","lastEditedAt":"2018-03-18T08:24:02Z","updatedAt":"2018-03-18T08:24:02Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1527959230000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5265","number":5265,"title":"Writing_Documentation.rst: Fix url","body":"Writing_Documentation.rst: Fix url\nThis fixes the earlier url to a new url.\nFixes #5263\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use cobot mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":7,"createdAt":"2018-03-18T08:28:26Z","updatedAt":"2018-06-02T17:07:10Z","closedAt":"2018-03-18T16:33:41Z","state":"merged","user":{"login":"lalitmee","avatarUrl":"https://avatars0.githubusercontent.com/u/10762218?v=4"},"owner":{"login":"lalitmee","avatarUrl":"https://avatars0.githubusercontent.com/u/10762218?v=4"},"assignee":{"login":"lalitmee","avatarUrl":"https://avatars0.githubusercontent.com/u/10762218?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5265","comments":[]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1527959207000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5267","number":5267,"title":"ConsoleInteraction.py: Apply the DoNothingAction","body":"Now, ask_for_action_and_apply() tries to apply the DoNothingAction,\nif it is chosen by the user, instead of simply returning.\nCloses #5260\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use cobot mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":10,"createdAt":"2018-03-18T10:07:50Z","updatedAt":"2018-06-02T17:06:47Z","closedAt":"2018-04-18T17:33:20Z","state":"merged","user":{"login":"nityeshaga","avatarUrl":"https://avatars1.githubusercontent.com/u/24698858?v=4"},"owner":{"login":"nityeshaga","avatarUrl":"https://avatars1.githubusercontent.com/u/24698858?v=4"},"assignee":{"login":"nityeshaga","avatarUrl":"https://avatars1.githubusercontent.com/u/24698858?v=4"},"labels":[{"name":"area/actions","color":"207de5"},{"name":"difficulty/low","color":"207de5"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5267","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDM4MTgyNDMyMQ==","url":"https://github.com/coala/coala/pull/5267#issuecomment-381824321","bodyText":"This looks to be a lot of change for no benefit.\nIdeally, this patch would reduce the special cases for the DoNothingAction.\nIt should be an action, like all the others, and not need code in ConsoleInteraction to manage it differently.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-04-17T03:28:54Z","lastEditedAt":null,"updatedAt":"2018-04-17T03:28:54Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM4MjQ1MTQyMQ==","url":"https://github.com/coala/coala/pull/5267#issuecomment-382451421","bodyText":"I don't understand why the circleci/python-3.4 build fails for ContextManagersTest here 😥 :","diffHunk":null,"author":{"login":"nityeshaga","avatarUrl":"https://avatars1.githubusercontent.com/u/24698858?v=4","name":"Nityesh Agarwal"},"createdAt":"2018-04-18T16:41:07Z","lastEditedAt":"2018-04-18T16:42:50Z","updatedAt":"2018-04-18T16:42:50Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM4MjQ1MjQyMQ==","url":"https://github.com/coala/coala/pull/5267#issuecomment-382452421","bodyText":"(re-running that job)","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-04-18T16:44:28Z","lastEditedAt":null,"updatedAt":"2018-04-18T16:44:28Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1528546843000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5268","number":5268,"title":".travis.yml: Skip unsupported except on master","body":"The jobs for unsupported platforms 2.7 & 3.3 do not need to run\nso frequently, and any breakages are usually related to upstream\ndropping support for 2.7 or 3.3, rather than a local problem.\nThe master builds will break, and usually we'll need to pin\nsomething to get around the problem.  Ultimately, failure to\nverify that these old versions fail in a predictable manner\nshould not prevent us adding new features or dependencies.\nCloses #4323\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use cobot mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":5,"createdAt":"2018-03-18T12:01:37Z","updatedAt":"2018-06-09T12:20:43Z","closedAt":"2018-03-18T13:55:12Z","state":"merged","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"},{"name":"process/approved","color":"009800"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5268","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDM3Mzk5Mjk1MA==","url":"https://github.com/coala/coala/pull/5268#issuecomment-373992950","bodyText":"master build: https://travis-ci.org/jayvdb/coala/builds/354982007\nnon-master build: https://travis-ci.org/jayvdb/coala/builds/354981379","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-03-18T12:02:00Z","lastEditedAt":null,"updatedAt":"2018-03-18T12:02:00Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1524375364000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5269","number":5269,"title":"ConsoleInteraction.py: Reorder add action details","body":"Add action details to applied_actions before applying\naction. This allows ShowAppliedPatchesAction to contain\nthe necessary action to be run the first time.\nCloses: #5194\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use cobot mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":15,"createdAt":"2018-03-18T16:29:01Z","updatedAt":"2018-04-22T05:36:04Z","closedAt":null,"state":"open","user":{"login":"Crphang","avatarUrl":"https://avatars3.githubusercontent.com/u/4986717?v=4"},"owner":{"login":"Crphang","avatarUrl":"https://avatars3.githubusercontent.com/u/4986717?v=4"},"labels":[{"name":"process/wip","color":"fbca04"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5269","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NjA4NjgxNg==","url":"https://github.com/coala/coala/pull/5269#discussion_r176086816","bodyText":"Redundant newline should be removed.","diffHunk":"@@ -721,6 +721,14 @@ def try_to_apply_action(action_name,\n                             as values.\n     \"\"\"\n     try:\n+        if (action_name == 'ShowAppliedPatchesAction'\n+                and len(applied_actions) == 0):\n+            applied_actions[action_name] = [copy.copy(result), copy.copy(\n+                file_dict),\n+                                        copy.copy(file_diff_dict),\n+                                        copy.copy(section)]\n+            result.set_applied_actions(applied_actions)\n+","author":{"login":"random-access7","avatarUrl":"https://avatars3.githubusercontent.com/u/20523845?v=4","name":"Aabhaas Vaish"},"reactions":[],"createdAt":"2018-03-21T13:49:45Z","lastEditedAt":"2018-03-21T16:47:39Z","updatedAt":"2018-03-21T16:47:39Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM3ODgxNTQ5OQ==","url":"https://github.com/coala/coala/pull/5269#issuecomment-378815499","bodyText":"@Makman2 Ready for Review","diffHunk":null,"author":{"login":"Crphang","avatarUrl":"https://avatars3.githubusercontent.com/u/4986717?v=4","name":"Phang Chun Rong"},"reactions":[],"createdAt":"2018-04-05T04:14:45Z","lastEditedAt":null,"updatedAt":"2018-04-05T04:14:45Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM4MzM1MTk3NQ==","url":"https://github.com/coala/coala/pull/5269#issuecomment-383351975","bodyText":"@ishanSrt, the fix seems counterintuitive as @nityeshaga suggest, but it does fixes it. The reason why it doesn't show the first time is because of how ShowAppliedPatchesAction work, which loops through the existing applied_actions array. However, if the array is empty, it doesn't do anything, that's why this PR reorders adding the actions in applied_actions array before calling applied_actions.\nI'll change the fix to localize this change within ShowAppliedPatchesActions instead.","diffHunk":null,"author":{"login":"Crphang","avatarUrl":"https://avatars3.githubusercontent.com/u/4986717?v=4","name":"Phang Chun Rong"},"reactions":[],"createdAt":"2018-04-22T03:13:27Z","lastEditedAt":null,"updatedAt":"2018-04-22T03:13:27Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM4MzM1MjA2MQ==","url":"https://github.com/coala/coala/pull/5269#issuecomment-383352061","bodyText":"Unable to recreate the fix,\n../Documents/python_scripts/movies.py\n[   7] »   »   def·inner(*args,·**kwargs):\n[   8] »   »   »   pr·=·cProfile.Profile()\n[   9] »   »   »   pr.enable()\n[  10] »   »   »   retval·=·fnc(*args,·**kwargs)\n[  11] »   »   »   pr.disable()\n[  12] »   »   »   s·=·io.StringIO()\n[  13] »   »   »   sortby·=·'cumulative'\n[  14] »   »   »   ps·=·pstats.Stats(pr,·stream=s).sort_stats(sortby)\n[  15] »   »   »   ps.print_stats()\n[  16] »   »   »   stream·=·open('./statistics',·'w');\n[  17] »   »   »   stats·=·pstats.Stats(pr,·stream=stream).sort_stats(sortby).print_callers()\n[  18] »   »   »   stats.print_stats()\n[  19] »   »   »   print(s.getvalue())\n[  20] »   »   »   return·retval\n[  21] »   »   return·inner\n**** PEP8Bear [Section: cli | Severity: NORMAL] ****\n!    ! The code does not comply to PEP8.\n!    ! +17 -15 in /Users/ishansrivastava/Documents/python_scripts/movies.py\n[    ] *0. Do (N)othing\n[    ]  1. (O)pen file\n[    ]  2. (A)pply patch\n[    ]  3. (S)how patch\n[    ]  4. Add (I)gnore comment\n[    ]  5. Show Applied (P)atches\n[    ]  6. (G)enerate patches\n[    ] Enter number (Ctrl-D to exit): 5\n[    ] All actions have been applied\n[    ] *0. Do (N)othing\n[    ]  1. (O)pen file\n[    ]  2. (A)pply patch\n[    ]  3. (S)how patch\n[    ]  4. Add (I)gnore comment\n[    ]  5. Show Applied (P)atches\n[    ]  6. (G)enerate patches\n[    ] Enter number (Ctrl-D to exit): 5\n\n**** PEP8Bear [Section: cli] ****\n**** Action Applied: ShowAppliedPatchesAction ****\n\n!    ! [Severity: NORMAL]\n[----] /Users/ishansrivastava/Documents/python_scripts/movies.py\n[++++] /Users/ishansrivastava/Documents/python_scripts/movies.py\n[   7]          def inner(*args, **kwargs):\n[   8]                  pr = cProfile.Profile()\n[   9]                  pr.enable()\n[  10]                  retval = fnc(*args, **kwargs)\n[  11]                  pr.disable()\n[  12]                  s = io.StringIO()\n[  13]                  sortby = 'cumulative'\n[  14]                  ps = pstats.Stats(pr, stream=s).sort_stats(sortby)\n[  15]                  ps.print_stats()\n[  16]                  stream = open('./statistics', 'w');\n[  17]                  stats = pstats.Stats(pr, stream=stream).sort_stats(sortby).print_callers()\n[  18]                  stats.print_stats()\n[  19]                  print(s.getvalue())\n[  20]                  return retval\n[  21]          return inner\n[   7]     def inner(*args, **kwargs):\n[   8]         pr = cProfile.Profile()\n[   9]         pr.enable()\n[  10]         retval = fnc(*args, **kwargs)\n[  11]         pr.disable()\n[  12]         s = io.StringIO()\n[  13]         sortby = 'cumulative'\n[  14]         ps = pstats.Stats(pr, stream=s).sort_stats(sortby)\n[  15]         ps.print_stats()\n[  16]         stream = open('./statistics', 'w')\n[  17]         stats = pstats.Stats(pr, stream=stream).sort_stats(\n[  18]             sortby).print_callers()\n[  19]         stats.print_stats()\n[  20]         print(s.getvalue())\n[  21]         return retval\n[  22]     return inner\n[  23]\n\n**************\n\n[    ] All actions have been applied\n[    ] *0. Do (N)othing\n[    ]  1. (O)pen file\n[    ]  2. (A)pply patch\n[    ]  3. (S)how patch\n[    ]  4. Add (I)gnore comment\n[    ]  5. Show Applied (P)atches\n[    ]  6. (G)enerate patches\n[    ] Enter number (Ctrl-D to exit):","diffHunk":null,"author":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4","name":"Ishan Srivastava"},"reactions":[],"createdAt":"2018-04-22T03:15:34Z","lastEditedAt":null,"updatedAt":"2018-04-22T03:15:34Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM4MzM1MjI3MA==","url":"https://github.com/coala/coala/pull/5269#issuecomment-383352270","bodyText":"ping @Crphang ^^^","diffHunk":null,"author":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4","name":"Ishan Srivastava"},"reactions":[],"createdAt":"2018-04-22T03:21:34Z","lastEditedAt":null,"updatedAt":"2018-04-22T03:21:34Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM4MzM1MjMxNQ==","url":"https://github.com/coala/coala/pull/5269#issuecomment-383352315","bodyText":"@Crphang did you check why is it empty for the first time? otherwise this should be the case with all actions\n\nI'll change the fix to localize this change within ShowAppliedPatchesActions instead.\n\n👍\nalso if you are changing it here please check that it doesn't change the behaviour of other actions instead in the process","diffHunk":null,"author":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4","name":"Ishan Srivastava"},"reactions":[{"id":"MDg6UmVhY3Rpb24yMjYxNTM5OQ==","createdAt":"2018-04-22T03:43:34Z","content":"THUMBS_UP","user":{"login":"Crphang","name":"Phang Chun Rong"}}],"createdAt":"2018-04-22T03:22:55Z","lastEditedAt":"2018-04-22T03:25:07Z","updatedAt":"2018-04-22T03:25:07Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM4MzM1MjQzOQ==","url":"https://github.com/coala/coala/pull/5269#issuecomment-383352439","bodyText":"also you will have to rebase and deal with merge conflicts.","diffHunk":null,"author":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4","name":"Ishan Srivastava"},"reactions":[],"createdAt":"2018-04-22T03:26:41Z","lastEditedAt":null,"updatedAt":"2018-04-22T03:26:41Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM4MzM1MzA1Nw==","url":"https://github.com/coala/coala/pull/5269#issuecomment-383353057","bodyText":"@ishanSrt , it is always empty the first time because action is not added to the array before calling it.\nIt does not affect other actions because not all actions depend on having the array containing the action.","diffHunk":null,"author":{"login":"Crphang","avatarUrl":"https://avatars3.githubusercontent.com/u/4986717?v=4","name":"Phang Chun Rong"},"reactions":[],"createdAt":"2018-04-22T03:43:21Z","lastEditedAt":null,"updatedAt":"2018-04-22T03:43:21Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM4MzM1MzQwMw==","url":"https://github.com/coala/coala/pull/5269#issuecomment-383353403","bodyText":"Can you answer first why am I unable recreate your fix?\n…\nOn Sun 22 Apr, 2018, 9:13 AM Phang Chun Rong, ***@***.***> wrote:\n @ishanSrt <https://github.com/ishanSrt> , it is always empty the first\n time because action is not added to the array before calling it.\n\n It does not affect other actions because not all actions depend on having\n the array containing the action.\n\n —\n You are receiving this because you were mentioned.\n Reply to this email directly, view it on GitHub\n <#5269 (comment)>, or mute\n the thread\n <https://github.com/notifications/unsubscribe-auth/AceeItX-N6N798IYl3_niEr0Gq2CU2URks5tq_xbgaJpZM4SvREH>\n .","diffHunk":null,"author":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4","name":"Ishan Srivastava"},"reactions":[],"createdAt":"2018-04-22T03:52:47Z","lastEditedAt":null,"updatedAt":"2018-04-22T03:52:47Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM4MzM1MzU4Mg==","url":"https://github.com/coala/coala/pull/5269#issuecomment-383353582","bodyText":"Sorry, what do you mean by recreating my fix?","diffHunk":null,"author":{"login":"Crphang","avatarUrl":"https://avatars3.githubusercontent.com/u/4986717?v=4","name":"Phang Chun Rong"},"reactions":[],"createdAt":"2018-04-22T03:58:18Z","lastEditedAt":null,"updatedAt":"2018-04-22T03:58:18Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM4MzM1MzcxNw==","url":"https://github.com/coala/coala/pull/5269#issuecomment-383353717","bodyText":"I did same changes as yours locally. Still getting the output posted above\ni.e. still having to put the same option twice to see the patch for the\nfirst time.\n…\nOn Sun 22 Apr, 2018, 9:28 AM Phang Chun Rong, ***@***.***> wrote:\n Sorry, what do you mean by recreating my fix?\n\n —\n You are receiving this because you were mentioned.\n Reply to this email directly, view it on GitHub\n <#5269 (comment)>, or mute\n the thread\n <https://github.com/notifications/unsubscribe-auth/AceeIt17N0jKtMF8r8566rKRyTZxku9bks5tq__cgaJpZM4SvREH>\n .","diffHunk":null,"author":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4","name":"Ishan Srivastava"},"reactions":[],"createdAt":"2018-04-22T04:01:45Z","lastEditedAt":null,"updatedAt":"2018-04-22T04:01:45Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM4MzM1NDMwMg==","url":"https://github.com/coala/coala/pull/5269#issuecomment-383354302","bodyText":"Are you testing it on master but adding my changes on it? I will resolve merge conflicts first and jnvestigate.","diffHunk":null,"author":{"login":"Crphang","avatarUrl":"https://avatars3.githubusercontent.com/u/4986717?v=4","name":"Phang Chun Rong"},"reactions":[],"createdAt":"2018-04-22T04:19:48Z","lastEditedAt":null,"updatedAt":"2018-04-22T04:19:48Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM4MzM1NTEzOA==","url":"https://github.com/coala/coala/pull/5269#issuecomment-383355138","bodyText":"the fix seems counterintuitive as @nityeshaga suggest, but it does fixes it.\n\nActually, its worse than just counter-intuitive. Have you thought what would happen if the action causes an exception while its apply() method is called @Crphang ?","diffHunk":null,"author":{"login":"nityeshaga","avatarUrl":"https://avatars1.githubusercontent.com/u/24698858?v=4","name":"Nityesh Agarwal"},"reactions":[],"createdAt":"2018-04-22T04:45:29Z","lastEditedAt":null,"updatedAt":"2018-04-22T04:45:29Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM4MzM1Njg4Ng==","url":"https://github.com/coala/coala/pull/5269#issuecomment-383356886","bodyText":"@nityeshaga, the fact that the array is mutated is bad. Thanks for pointing that out, a fix that localizes the change within ShowAppliedPatchesAction will be done instead.","diffHunk":null,"author":{"login":"Crphang","avatarUrl":"https://avatars3.githubusercontent.com/u/4986717?v=4","name":"Phang Chun Rong"},"reactions":[],"createdAt":"2018-04-22T05:36:04Z","lastEditedAt":null,"updatedAt":"2018-04-22T05:36:04Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1528545876000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5271","number":5271,"title":"Core.py: Removes section from docstring","body":"The cache look-up only looks for the parameters\nof execute_task and not the section to get\nthe cached result of a bear.\nFixes #5270\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use cobot mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":14,"createdAt":"2018-03-18T20:28:28Z","updatedAt":"2018-06-09T12:04:36Z","closedAt":"2018-03-24T15:50:48Z","state":"merged","user":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4"},"owner":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4"},"assignee":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/low","color":"207de5"},{"name":"process/approved","color":"009800"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5271","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDM3NDI4MDQ4Mw==","url":"https://github.com/coala/coala/pull/5271#issuecomment-374280483","bodyText":"@lalitmee I don't think the cache can tell us (it is not a sentient being 😉 ) when or when not to cache, its for the user to decide according to his/her requirement whether or not to cache the results as far as I know.","diffHunk":null,"author":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4","name":"Palash Nigam"},"reactions":[],"createdAt":"2018-03-19T16:42:57Z","lastEditedAt":null,"updatedAt":"2018-03-19T16:42:57Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM3NDI4MDkyMw==","url":"https://github.com/coala/coala/pull/5271#issuecomment-374280923","bodyText":"Oh and btw you why are you guys @lalitmee @li-boxuan giving empty reviews. Trying to increase the green tiles on your contribution graph are you?","diffHunk":null,"author":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4","name":"Palash Nigam"},"reactions":[],"createdAt":"2018-03-19T16:44:08Z","lastEditedAt":null,"updatedAt":"2018-03-19T16:44:08Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM3NDI4MjYzMQ==","url":"https://github.com/coala/coala/pull/5271#issuecomment-374282631","bodyText":"@palash25, actually I was not talking about cache, I was talking about cache-look up functionality. That can help us. 😉\nAnd if I talk about my review, I put some information for review as there was nothing to correct in your PR. 😃","diffHunk":null,"author":{"login":"lalitmee","avatarUrl":"https://avatars0.githubusercontent.com/u/10762218?v=4","name":"Lalit Kumar"},"reactions":[],"createdAt":"2018-03-19T16:48:30Z","lastEditedAt":null,"updatedAt":"2018-03-19T16:48:30Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM3NDI4MzUxOA==","url":"https://github.com/coala/coala/pull/5271#issuecomment-374283518","bodyText":"@palash25 Oh, it looks good to me as I cannot find any mistake. I have carefully checked that file and ensured you didn't miss anything. I would be careful and try to at least leave some comments next time.","diffHunk":null,"author":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4","name":"Boxuan Li"},"reactions":[],"createdAt":"2018-03-19T16:50:38Z","lastEditedAt":null,"updatedAt":"2018-03-19T16:50:38Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM3NDI4NTYzMA==","url":"https://github.com/coala/coala/pull/5271#issuecomment-374285630","bodyText":"If there is nothing to correct in the PR then there is nothing to review. So your reviews are not really valid and don't help the PR. If you want to approve of the PR without suggesting any improvements/changes then just comment with a LGTM (Looks Good To Me) and that would be much appreciated. 😄\ncc @lalitmee @li-boxuan","diffHunk":null,"author":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4","name":"Palash Nigam"},"reactions":[{"id":"MDg6UmVhY3Rpb24yMTA2MzY4MA==","createdAt":"2018-03-19T16:56:54Z","content":"THUMBS_UP","user":{"login":"li-boxuan","name":"Boxuan Li"}},{"id":"MDg6UmVhY3Rpb24yMTA2Mzc2Ng==","createdAt":"2018-03-19T16:58:22Z","content":"THUMBS_UP","user":{"login":"lalitmee","name":"Lalit Kumar"}}],"createdAt":"2018-03-19T16:56:03Z","lastEditedAt":null,"updatedAt":"2018-03-19T16:56:03Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM3NDI4NTg2MQ==","url":"https://github.com/coala/coala/pull/5271#issuecomment-374285861","bodyText":"@Makman2 I think this can be merged now.","diffHunk":null,"author":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4","name":"Palash Nigam"},"reactions":[],"createdAt":"2018-03-19T16:56:41Z","lastEditedAt":null,"updatedAt":"2018-03-19T16:56:41Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM3NTg5NjU1MA==","url":"https://github.com/coala/coala/pull/5271#issuecomment-375896550","bodyText":"@adtac changed the commit message","diffHunk":null,"author":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4","name":"Palash Nigam"},"reactions":[],"createdAt":"2018-03-24T15:14:39Z","lastEditedAt":null,"updatedAt":"2018-03-24T15:14:39Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1522256214000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5272","number":5272,"title":"Related clang stuff removed","body":"This removes the clang related code from ExceptionsTest.py and\nConsoleInteractionTest.py. clanglib-py3 is changed to version_1 and\nversion_2 and ClangCloneDetectionBear is changed to CloneDetectionBear.\nCloses #5250\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use cobot mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":16,"createdAt":"2018-03-19T05:29:42Z","updatedAt":"2018-03-28T16:56:54Z","closedAt":"2018-03-28T16:56:54Z","state":"merged","user":{"login":"lalitmee","avatarUrl":"https://avatars0.githubusercontent.com/u/10762218?v=4"},"owner":{"login":"lalitmee","avatarUrl":"https://avatars0.githubusercontent.com/u/10762218?v=4"},"assignee":{"login":"lalitmee","avatarUrl":"https://avatars0.githubusercontent.com/u/10762218?v=4"},"labels":[{"name":"area/tests","color":"bfd4f2"},{"name":"difficulty/low","color":"207de5"},{"name":"importance/low","color":"70E870"},{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5272","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NzcxMTIwMQ==","url":"https://github.com/coala/coala/pull/5272#discussion_r177711201","bodyText":"dont use semi-real values.  that is confusing.\nmake it obviously fake, so the reader knows it is fake.","diffHunk":"@@ -755,7 +755,7 @@ def test_print_results_multiple_ranges(self):\n             print_results(\n                 self.log_printer,\n                 Section(''),\n-                [Result('ClangCloneDetectionBear',\n+                [Result('CloneDetectionBear',","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-03-28T10:56:40Z","lastEditedAt":null,"updatedAt":"2018-03-28T10:56:40Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NzcxMTMwOA==","url":"https://github.com/coala/coala/pull/5272#discussion_r177711308","bodyText":"these are not valid version strings.","diffHunk":"@@ -11,6 +11,6 @@ def test_get_exitcode(self):\n         self.assertEqual(get_exitcode(AssertionError()), 255)\n         self.assertEqual(get_exitcode(SystemExit(999)), 999)\n         self.assertEqual(get_exitcode(VersionConflict(\n-            'libclang-py3 0.3', 'libclang-py3==0.2')), 13)\n+            'version_1', 'version_2')), 13)","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-03-28T10:57:05Z","lastEditedAt":null,"updatedAt":"2018-03-28T10:57:05Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NzcxMjY3Mg==","url":"https://github.com/coala/coala/pull/5272#discussion_r177712672","bodyText":"Actually it means that there are two different versions, that's why I put version_1 and version_2.","diffHunk":"@@ -11,6 +11,6 @@ def test_get_exitcode(self):\n         self.assertEqual(get_exitcode(AssertionError()), 255)\n         self.assertEqual(get_exitcode(SystemExit(999)), 999)\n         self.assertEqual(get_exitcode(VersionConflict(\n-            'libclang-py3 0.3', 'libclang-py3==0.2')), 13)\n+            'version_1', 'version_2')), 13)","author":{"login":"lalitmee","avatarUrl":"https://avatars0.githubusercontent.com/u/10762218?v=4","name":"Lalit Kumar"},"createdAt":"2018-03-28T11:03:53Z","lastEditedAt":null,"updatedAt":"2018-03-28T11:03:53Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NzcxMjcwMg==","url":"https://github.com/coala/coala/pull/5272#discussion_r177712702","bodyText":"okk","diffHunk":"@@ -755,7 +755,7 @@ def test_print_results_multiple_ranges(self):\n             print_results(\n                 self.log_printer,\n                 Section(''),\n-                [Result('ClangCloneDetectionBear',\n+                [Result('CloneDetectionBear',","author":{"login":"lalitmee","avatarUrl":"https://avatars0.githubusercontent.com/u/10762218?v=4","name":"Lalit Kumar"},"createdAt":"2018-03-28T11:04:04Z","lastEditedAt":null,"updatedAt":"2018-03-28T11:04:04Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM3NDIwNTMzMw==","url":"https://github.com/coala/coala/pull/5272#issuecomment-374205333","bodyText":"Please dont use stuff","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-03-19T13:08:36Z","lastEditedAt":null,"updatedAt":"2018-03-19T13:08:36Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM3NDIwNTg3MQ==","url":"https://github.com/coala/coala/pull/5272#issuecomment-374205871","bodyText":"okk. If I use code, will it be right?","diffHunk":null,"author":{"login":"lalitmee","avatarUrl":"https://avatars0.githubusercontent.com/u/10762218?v=4","name":"Lalit Kumar"},"createdAt":"2018-03-19T13:10:20Z","lastEditedAt":null,"updatedAt":"2018-03-19T13:10:20Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM3NDY3MDc5Mw==","url":"https://github.com/coala/coala/pull/5272#issuecomment-374670793","bodyText":"@li-boxuan , thank you for pointing out. I didn't see that. Now I have removed that stuff thing. 😇","diffHunk":null,"author":{"login":"lalitmee","avatarUrl":"https://avatars0.githubusercontent.com/u/10762218?v=4","name":"Lalit Kumar"},"createdAt":"2018-03-20T16:46:23Z","lastEditedAt":null,"updatedAt":"2018-03-20T16:46:23Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM3Njk0ODI5OQ==","url":"https://github.com/coala/coala/pull/5272#issuecomment-376948299","bodyText":"Ack ExceptionsTest.py: Clang code removed","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-03-28T16:23:58Z","lastEditedAt":null,"updatedAt":"2018-03-28T16:23:58Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM3Njk0ODQ3MA==","url":"https://github.com/coala/coala/pull/5272#issuecomment-376948470","bodyText":"Ack 1f093c6","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-03-28T16:24:30Z","lastEditedAt":null,"updatedAt":"2018-03-28T16:24:30Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM3Njk0OTA2NA==","url":"https://github.com/coala/coala/pull/5272#issuecomment-376949064","bodyText":"Ack 1f093c6","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-03-28T16:26:26Z","lastEditedAt":null,"updatedAt":"2018-03-28T16:26:26Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1521469788000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5275","number":5275,"title":"ResultAction.py: Fixes Typo","body":"Typo in comment message\n\":return\"-->\":return:\"\nCloses #5223\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use cobot mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":2,"createdAt":"2018-03-19T13:12:14Z","updatedAt":"2018-03-19T14:29:48Z","closedAt":"2018-03-19T13:28:11Z","state":"closed","user":{"login":"saran7188","avatarUrl":"https://avatars0.githubusercontent.com/u/34673900?v=4"},"owner":{"login":"saran7188","avatarUrl":"https://avatars0.githubusercontent.com/u/34673900?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"00DE0F"},{"name":"status/stale","color":"fbca04"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5275","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDM3NDIxMDI5Ng==","url":"https://github.com/coala/coala/pull/5275#issuecomment-374210296","bodyText":"Please fix your commit message 'Fixes Typo' should at least be sentence case, and possibly longer like 'Fixes typo in docstring'","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-03-19T13:25:27Z","lastEditedAt":null,"updatedAt":"2018-03-19T13:25:27Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM3NDIxMTE3Mg==","url":"https://github.com/coala/coala/pull/5275#issuecomment-374211172","bodyText":"You've done it again.  Stop pressing the GitHub rebase button.  Follow instructions at http://coala.io/git\nOh, and I see you created a new PR instead of fixing your old PR.\nI am closing this one.\nFix #5235","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-03-19T13:28:11Z","lastEditedAt":null,"updatedAt":"2018-03-19T13:28:11Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1535097492000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5278","number":5278,"title":"Mybranch","body":"Closes #5109\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use cobot mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":3,"createdAt":"2018-03-20T16:21:09Z","updatedAt":"2018-08-24T07:58:12Z","closedAt":"2018-04-18T06:40:18Z","state":"closed","user":{"login":"pkcod","avatarUrl":"https://avatars3.githubusercontent.com/u/29246710?v=4"},"owner":{"login":"pkcod","avatarUrl":"https://avatars3.githubusercontent.com/u/29246710?v=4"},"assignee":{"login":"pkcod","avatarUrl":"https://avatars3.githubusercontent.com/u/29246710?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"process/wip","color":"fbca04"},{"name":"size/L","color":"FF8888"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5278","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDM3NzE1MTg3Mw==","url":"https://github.com/coala/coala/pull/5278#issuecomment-377151873","bodyText":"You have three commits in this PR: see https://github.com/coala/coala/pull/5278/commits\nPlease rebase and fix this PR (your branch mybranch) to only have one commit on top of master.  See https://coala.io/git to get some guidance, and also ask for help in our gitter rooms if you need further assistance.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-03-29T07:45:42Z","lastEditedAt":null,"updatedAt":"2018-03-29T07:45:42Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM4MjI3OTIxMg==","url":"https://github.com/coala/coala/pull/5278#issuecomment-382279212","bodyText":"Stale.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-04-18T06:40:17Z","lastEditedAt":null,"updatedAt":"2018-04-18T06:40:17Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1527959206000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5279","number":5279,"title":"Add markdown language definition","body":"For short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use cobot mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":10,"createdAt":"2018-03-21T10:17:24Z","updatedAt":"2018-06-02T17:06:46Z","closedAt":"2018-04-08T15:07:32Z","state":"merged","user":{"login":"anctartica","avatarUrl":"https://avatars0.githubusercontent.com/u/7020962?v=4"},"owner":{"login":"anctartica","avatarUrl":"https://avatars0.githubusercontent.com/u/7020962?v=4"},"assignee":{"login":"anctartica","avatarUrl":"https://avatars0.githubusercontent.com/u/7020962?v=4"},"labels":[{"name":"area/CI","color":"eb6420"},{"name":"difficulty/medium","color":"0052cc"},{"name":"importance/medium","color":"fbca04"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5279","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NzUwODI2MQ==","url":"https://github.com/coala/coala/pull/5279#discussion_r177508261","bodyText":"I would suggest capitalizing the initial letter of the class name. (ref: https://www.python.org/dev/peps/pep-0008/#class-names)","diffHunk":"@@ -0,0 +1,12 @@\n+from coalib.bearlib.languages.Language import Language\n+\n+\n+@Language\n+class flow:","author":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4","name":"Boxuan Li"},"reactions":[],"createdAt":"2018-03-27T17:31:10Z","lastEditedAt":null,"updatedAt":"2018-03-27T17:31:10Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3NzUwOTI3Ng==","url":"https://github.com/coala/coala/pull/5279#discussion_r177509276","bodyText":"Same here. Change markdown into Markdown. Btw, Markdown is always written with an upper case M. That means you should also change your filename.","diffHunk":"@@ -0,0 +1,10 @@\n+from coalib.bearlib.languages.Language import Language\n+\n+\n+@Language\n+class markdown:","author":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4","name":"Boxuan Li"},"reactions":[],"createdAt":"2018-03-27T17:34:27Z","lastEditedAt":null,"updatedAt":"2018-03-27T17:34:27Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3OTkwNzU1MQ==","url":"https://github.com/coala/coala/pull/5279#discussion_r179907551","bodyText":"this is all the same as JavaScript ES6.\nCreate a separate issue about how to model Flow being a derivative of a specific JavaScript version, and get feedback from people involved in the language definitions, especially @userzimmermann .\nA complication is that ES6 has backticks while other versions don't.\nI doubt we model Python versions correctly yet, so JavaScript versions is going to be breaking new ground.","diffHunk":"@@ -0,0 +1,12 @@\n+from coalib.bearlib.languages.Language import Language\n+\n+\n+@Language\n+class Flow:\n+    extensions = '.js'\n+    comment_delimiter = '//'\n+    multiline_comment_delimiters = {'/*': '*/'}\n+    string_delimiters = {'\"': '\"', \"'\": \"'\"}\n+    multiline_string_delimiters = {'`': '`'}","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yMTk2MDY4Mw==","createdAt":"2018-04-08T13:16:02Z","content":"THUMBS_UP","user":{"login":"anctartica","name":""}}],"createdAt":"2018-04-07T03:55:03Z","lastEditedAt":null,"updatedAt":"2018-04-07T03:55:03Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3OTkwNzczOQ==","url":"https://github.com/coala/coala/pull/5279#discussion_r179907739","bodyText":"not .text - that will cause too many files to be linted using markdown, which will cause all sorts of errors on normal text files.\nAlso I wouldnt want to assume that .Rmd's syntax for the code blocks is legal markdown (based on which spec of markdown ... ? ;-)  IMO, exclude it, and someone else can worry about that problem.","diffHunk":"@@ -0,0 +1,10 @@\n+from coalib.bearlib.languages.Language import Language\n+\n+\n+@Language\n+class Markdown:\n+    extensions = [\n+        '.markdown', '.mdown', '.mkdn',","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-04-07T04:04:59Z","lastEditedAt":null,"updatedAt":"2018-04-07T04:04:59Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3OTk0NzQ0NQ==","url":"https://github.com/coala/coala/pull/5279#discussion_r179947445","bodyText":"yes .text should not be included. my bad","diffHunk":"@@ -0,0 +1,10 @@\n+from coalib.bearlib.languages.Language import Language\n+\n+\n+@Language\n+class Markdown:\n+    extensions = [\n+        '.markdown', '.mdown', '.mkdn',","author":{"login":"anctartica","avatarUrl":"https://avatars0.githubusercontent.com/u/7020962?v=4","name":""},"reactions":[],"createdAt":"2018-04-08T13:17:57Z","lastEditedAt":null,"updatedAt":"2018-04-08T13:17:57Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3OTk0ODQzNw==","url":"https://github.com/coala/coala/pull/5279#discussion_r179948437","bodyText":"created #5343","diffHunk":"@@ -0,0 +1,12 @@\n+from coalib.bearlib.languages.Language import Language\n+\n+\n+@Language\n+class Flow:\n+    extensions = '.js'\n+    comment_delimiter = '//'\n+    multiline_comment_delimiters = {'/*': '*/'}\n+    string_delimiters = {'\"': '\"', \"'\": \"'\"}\n+    multiline_string_delimiters = {'`': '`'}","author":{"login":"anctartica","avatarUrl":"https://avatars0.githubusercontent.com/u/7020962?v=4","name":""},"reactions":[],"createdAt":"2018-04-08T13:49:28Z","lastEditedAt":null,"updatedAt":"2018-04-08T13:49:28Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM3NDkxOTc4Mg==","url":"https://github.com/coala/coala/pull/5279#issuecomment-374919782","bodyText":"Why 2 commits? Squash them into one.","diffHunk":null,"author":{"login":"MacBox7","avatarUrl":"https://avatars0.githubusercontent.com/u/15063552?v=4","name":"Ankit Joshi"},"reactions":[],"createdAt":"2018-03-21T12:26:43Z","lastEditedAt":null,"updatedAt":"2018-03-21T12:26:43Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM3NDkzNjY5NQ==","url":"https://github.com/coala/coala/pull/5279#issuecomment-374936695","bodyText":"I created 2 files here. Which filename would you use in the commit message?","diffHunk":null,"author":{"login":"anctartica","avatarUrl":"https://avatars0.githubusercontent.com/u/7020962?v=4","name":""},"reactions":[],"createdAt":"2018-03-21T13:30:58Z","lastEditedAt":null,"updatedAt":"2018-03-21T13:30:58Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM3NDk5MTgwMw==","url":"https://github.com/coala/coala/pull/5279#issuecomment-374991803","bodyText":"IMHO single commit with shortlog => definitions: Add new language definitions\nWould work quite well.","diffHunk":null,"author":{"login":"MacBox7","avatarUrl":"https://avatars0.githubusercontent.com/u/15063552?v=4","name":"Ankit Joshi"},"reactions":[{"id":"MDg6UmVhY3Rpb24yMTQ1NDU4Mw==","createdAt":"2018-03-27T17:27:03Z","content":"THUMBS_UP","user":{"login":"li-boxuan","name":"Boxuan Li"}}],"createdAt":"2018-03-21T15:57:39Z","lastEditedAt":"2018-03-21T15:59:15Z","updatedAt":"2018-03-21T15:59:15Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1523117601000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5280","number":5280,"title":"OpenEditorAction.py: added vi to list of editors","body":"Vi has been added to the list\nof non-gui editors\nFixes #5239\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use cobot mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":2,"createdAt":"2018-03-21T12:01:46Z","updatedAt":"2018-04-07T16:13:21Z","closedAt":null,"state":"open","user":{"login":"karansingh1559","avatarUrl":"https://avatars0.githubusercontent.com/u/24516531?v=4"},"owner":{"login":"karansingh1559","avatarUrl":"https://avatars0.githubusercontent.com/u/24516531?v=4"},"assignee":{"login":"karansingh1559","avatarUrl":"https://avatars0.githubusercontent.com/u/24516531?v=4"},"labels":[{"name":"area/actions","color":"207de5"},{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"process/wip","color":"fbca04"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5280","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3OTkyMDc4OQ==","url":"https://github.com/coala/coala/pull/5280#discussion_r179920789","bodyText":"I am pretty confident that the +{line} support was added in vim, not vi.","diffHunk":"@@ -44,6 +44,10 @@\n         'file_arg_template': '{filename} +{line}',\n         'gui': False\n     },\n+    'vi': {\n+        'file_arg_template': '{filename} +{line}',","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-04-07T16:13:15Z","lastEditedAt":null,"updatedAt":"2018-04-07T16:13:15Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1527959183000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5283","number":5283,"title":"Writing_Linter_Bears.rst: Clean docs","body":"Removing an ambiguity in 'Using Severities' section.\nJust deleted a sentence that contained confusing info\nbecause there are enough explanations given in the\nbeginning of the paragraph.\nCloses #5248\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use cobot mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":18,"createdAt":"2018-03-23T18:48:30Z","updatedAt":"2018-06-02T17:06:23Z","closedAt":"2018-04-07T03:30:18Z","state":"merged","user":{"login":"SergeyGorbatyuk171","avatarUrl":"https://avatars1.githubusercontent.com/u/22103776?v=4"},"owner":{"login":"SergeyGorbatyuk171","avatarUrl":"https://avatars1.githubusercontent.com/u/22103776?v=4"},"assignee":{"login":"SergeyGorbatyuk171","avatarUrl":"https://avatars1.githubusercontent.com/u/22103776?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5283","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDM3NzQwNzA2MQ==","url":"https://github.com/coala/coala/pull/5283#issuecomment-377407061","bodyText":"@ishanSrt,  done. Sorry for that, got stuck with git for a while","diffHunk":null,"author":{"login":"SergeyGorbatyuk171","avatarUrl":"https://avatars1.githubusercontent.com/u/22103776?v=4","name":""},"createdAt":"2018-03-29T23:55:42Z","lastEditedAt":null,"updatedAt":"2018-03-29T23:55:42Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM3NzQyMjA4MA==","url":"https://github.com/coala/coala/pull/5283#issuecomment-377422080","bodyText":"looks like while squashing your commits, you concatenated the commit messages so now they don't follow our format. Fix that 👍.","diffHunk":null,"author":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4","name":"Ishan Srivastava"},"createdAt":"2018-03-30T01:45:57Z","lastEditedAt":null,"updatedAt":"2018-03-30T01:45:57Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM3NzQ3OTUzNA==","url":"https://github.com/coala/coala/pull/5283#issuecomment-377479534","bodyText":"@ishanSrt, yeah, my fault. As you have probably noticed, I did not have much practice with advanced git commands, but now I know :) Finally it looks fine (at least I hope so)","diffHunk":null,"author":{"login":"SergeyGorbatyuk171","avatarUrl":"https://avatars1.githubusercontent.com/u/22103776?v=4","name":""},"createdAt":"2018-03-30T08:43:11Z","lastEditedAt":null,"updatedAt":"2018-03-30T08:43:11Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM3NzUxMjYxNA==","url":"https://github.com/coala/coala/pull/5283#issuecomment-377512614","bodyText":"Maybe change your commit body to be more short and precise and less ambiguous.","diffHunk":null,"author":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4","name":"Ishan Srivastava"},"createdAt":"2018-03-30T12:17:33Z","lastEditedAt":null,"updatedAt":"2018-03-30T12:17:33Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM3NzU0MDkzOA==","url":"https://github.com/coala/coala/pull/5283#issuecomment-377540938","bodyText":"@ishanSrt ok, removed long explanations.","diffHunk":null,"author":{"login":"SergeyGorbatyuk171","avatarUrl":"https://avatars1.githubusercontent.com/u/22103776?v=4","name":""},"createdAt":"2018-03-30T14:52:35Z","lastEditedAt":null,"updatedAt":"2018-03-30T14:52:35Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM3ODQzMzg0OQ==","url":"https://github.com/coala/coala/pull/5283#issuecomment-378433849","bodyText":"@SergeyGorbatyuk171\n\nshort and precise\n\nbut still explaining what you are doing 😉","diffHunk":null,"author":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4","name":"Ishan Srivastava"},"createdAt":"2018-04-03T23:43:12Z","lastEditedAt":null,"updatedAt":"2018-04-03T23:43:12Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM3ODk4NTM5MA==","url":"https://github.com/coala/coala/pull/5283#issuecomment-378985390","bodyText":"@ishanSrt , @newbazz , sorry for delay - there we go. Is that better?)\nBTW, why didn't gitmate assign this PR to me as he does with others? Am I missing some steps in this process?","diffHunk":null,"author":{"login":"SergeyGorbatyuk171","avatarUrl":"https://avatars1.githubusercontent.com/u/22103776?v=4","name":""},"createdAt":"2018-04-05T15:55:56Z","lastEditedAt":null,"updatedAt":"2018-04-05T15:55:56Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM3OTA4NTk0OQ==","url":"https://github.com/coala/coala/pull/5283#issuecomment-379085949","bodyText":"@newbazz , ok, done =)","diffHunk":null,"author":{"login":"SergeyGorbatyuk171","avatarUrl":"https://avatars1.githubusercontent.com/u/22103776?v=4","name":""},"createdAt":"2018-04-05T21:42:56Z","lastEditedAt":null,"updatedAt":"2018-04-05T21:42:56Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM3OTMxNDczNw==","url":"https://github.com/coala/coala/pull/5283#issuecomment-379314737","bodyText":"@jayvdb , done. Not sure how to make this description clear but concise)","diffHunk":null,"author":{"login":"SergeyGorbatyuk171","avatarUrl":"https://avatars1.githubusercontent.com/u/22103776?v=4","name":""},"createdAt":"2018-04-06T17:01:34Z","lastEditedAt":null,"updatedAt":"2018-04-06T17:01:34Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1528544743000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5284","number":5284,"title":"Development_Setup: Change cd - to cd ..","body":"Closes #5276\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use cobot mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":8,"createdAt":"2018-03-24T11:03:37Z","updatedAt":"2018-06-09T11:45:43Z","closedAt":"2018-04-07T03:07:37Z","state":"merged","user":{"login":"gabi0348","avatarUrl":"https://avatars2.githubusercontent.com/u/32877573?v=4"},"owner":{"login":"gabi0348","avatarUrl":"https://avatars2.githubusercontent.com/u/32877573?v=4"},"assignee":{"login":"gabi0348","avatarUrl":"https://avatars2.githubusercontent.com/u/32877573?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"process/approved","color":"009800"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5284","comments":[]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1528546198000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5285","number":5285,"title":"ConsoleInteraction: Fix a typo","body":"Closes #5201\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use cobot mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":21,"createdAt":"2018-03-24T11:13:30Z","updatedAt":"2018-06-09T12:09:58Z","closedAt":"2018-04-15T16:10:13Z","state":"merged","user":{"login":"raduklb","avatarUrl":"https://avatars2.githubusercontent.com/u/36372694?v=4"},"owner":{"login":"raduklb","avatarUrl":"https://avatars2.githubusercontent.com/u/36372694?v=4"},"assignee":{"login":"raduklb","avatarUrl":"https://avatars2.githubusercontent.com/u/36372694?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"process/approved","color":"009800"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5285","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDM3NTk0OTE4NQ==","url":"https://github.com/coala/coala/pull/5285#issuecomment-375949185","bodyText":"Typo's been fixed, everything's allright.","diffHunk":null,"author":{"login":"GlebBerj","avatarUrl":"https://avatars1.githubusercontent.com/u/37715310?v=4","name":null},"createdAt":"2018-03-25T06:41:05Z","lastEditedAt":null,"updatedAt":"2018-03-25T06:41:05Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM3Njc5NzA0OQ==","url":"https://github.com/coala/coala/pull/5285#issuecomment-376797049","bodyText":"@yashovardhanagrawal Is it okay now?","diffHunk":null,"author":{"login":"raduklb","avatarUrl":"https://avatars2.githubusercontent.com/u/36372694?v=4","name":"Radu Capalb"},"createdAt":"2018-03-28T08:00:36Z","lastEditedAt":null,"updatedAt":"2018-03-28T08:00:36Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM3Njk2NTU2MA==","url":"https://github.com/coala/coala/pull/5285#issuecomment-376965560","bodyText":"@jayvdb Can you please tell me what is wrong? I've previously edited the commit and I had 39 or so characters in the shortlog. Thank you!","diffHunk":null,"author":{"login":"raduklb","avatarUrl":"https://avatars2.githubusercontent.com/u/36372694?v=4","name":"Radu Capalb"},"createdAt":"2018-03-28T17:17:13Z","lastEditedAt":null,"updatedAt":"2018-03-28T17:17:13Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM3Njk3MDUwNg==","url":"https://github.com/coala/coala/pull/5285#issuecomment-376970506","bodyText":"read the gitmate error message above","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-03-28T17:32:43Z","lastEditedAt":null,"updatedAt":"2018-03-28T17:32:43Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM3Njk3MDU3Mw==","url":"https://github.com/coala/coala/pull/5285#issuecomment-376970573","bodyText":"And refer to https://coala.io/commit","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-03-28T17:32:54Z","lastEditedAt":null,"updatedAt":"2018-03-28T17:32:54Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM3NzYyNDE1MQ==","url":"https://github.com/coala/coala/pull/5285#issuecomment-377624151","bodyText":"I thought that the tag is not mandatory, at least that's what it says on \"How to write a good commit message\" page.","diffHunk":null,"author":{"login":"raduklb","avatarUrl":"https://avatars2.githubusercontent.com/u/36372694?v=4","name":"Radu Capalb"},"createdAt":"2018-03-30T21:10:33Z","lastEditedAt":null,"updatedAt":"2018-03-30T21:10:33Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM3NzY3MDYwOQ==","url":"https://github.com/coala/coala/pull/5285#issuecomment-377670609","bodyText":"want to finish it fast? 😉\nchange you commit shortlog to\nConsoleInteraction: Fix a typo\ndescription:\nchoose_action -> chosen_action\nFixes <issue_url>","diffHunk":null,"author":{"login":"yashovardhanagrawal","avatarUrl":"https://avatars3.githubusercontent.com/u/21066442?v=4","name":"Yashovardhan Agrawal"},"createdAt":"2018-03-31T06:34:44Z","lastEditedAt":null,"updatedAt":"2018-03-31T06:34:44Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1521995528000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5288","number":5288,"title":"Writing_Good_commits.rst: Add No include WIP prefix","body":"I wrote the \"Should not include WIP prefix.\" in the shortlog.\nFixes: 5287\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use cobot mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":1,"createdAt":"2018-03-25T16:19:23Z","updatedAt":"2018-03-25T16:32:08Z","closedAt":"2018-03-25T16:32:08Z","state":"closed","user":{"login":"HyeockJinKim","avatarUrl":"https://avatars0.githubusercontent.com/u/26498366?v=4"},"owner":{"login":"HyeockJinKim","avatarUrl":"https://avatars0.githubusercontent.com/u/26498366?v=4"},"labels":[{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5288","comments":[]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1522608883000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5289","number":5289,"title":"Writing_Good_Commits.rst: Add No WIP prefix.","body":"I wrote the \"Should not include WIP prefix.\" in the shortlog.\nCloses:   #5287\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use cobot mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":2,"createdAt":"2018-03-25T16:56:09Z","updatedAt":"2018-04-01T18:54:43Z","closedAt":"2018-04-01T18:54:43Z","state":"closed","user":{"login":"HyeockJinKim","avatarUrl":"https://avatars0.githubusercontent.com/u/26498366?v=4"},"owner":{"login":"HyeockJinKim","avatarUrl":"https://avatars0.githubusercontent.com/u/26498366?v=4"},"labels":[{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5289","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3ODE0NDYyNA==","url":"https://github.com/coala/coala/pull/5289#discussion_r178144624","bodyText":"can you just confirm whether it should be done only for the shortlog or for the body too.","diffHunk":"@@ -96,6 +96,7 @@ Example:\n    | Keeping subject lines at this length ensures that they are\n      readable, and explains the change in a concise way.\n -  Should describe the *change* - the action being done in the commit.\n+-  Should not include WIP prefix.","author":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4","name":"Ishan Srivastava"},"createdAt":"2018-03-29T18:31:25Z","lastEditedAt":null,"updatedAt":"2018-03-29T18:31:25Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM3NzM4MzQ0Ng==","url":"https://github.com/coala/coala/pull/5289#issuecomment-377383446","bodyText":"Hi, please do not create several PR for the same issue. You can read new comer's guide to know how to change the commit message.","diffHunk":null,"author":{"login":"susg","avatarUrl":"https://avatars3.githubusercontent.com/u/9406524?v=4","name":"sushant gupta"},"createdAt":"2018-03-29T21:50:41Z","lastEditedAt":"2018-03-29T21:50:56Z","updatedAt":"2018-03-29T21:50:56Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM3Nzc4NTc0NA==","url":"https://github.com/coala/coala/pull/5289#issuecomment-377785744","bodyText":"Hey @HyeockJinKim please add a description and an issue reference in your commit body too","diffHunk":null,"author":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4","name":"Palash Nigam"},"createdAt":"2018-04-01T13:09:22Z","lastEditedAt":null,"updatedAt":"2018-04-01T13:09:22Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1527959192000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5293","number":5293,"title":"ConsoleInteraction.py : Fix error message","body":"This fixes error message from\nenter a valid letter. -> enter a valid letter or number.\nFixes #5219","comments":10,"createdAt":"2018-03-29T14:15:55Z","updatedAt":"2018-06-02T17:06:32Z","closedAt":"2018-04-07T06:14:11Z","state":"merged","user":{"login":"sanjeethboddi","avatarUrl":"https://avatars1.githubusercontent.com/u/22007564?v=4"},"owner":{"login":"sanjeethboddi","avatarUrl":"https://avatars1.githubusercontent.com/u/22007564?v=4"},"assignee":{"login":"sanjeethboddi","avatarUrl":"https://avatars1.githubusercontent.com/u/22007564?v=4"},"labels":[{"name":"area/CLI","color":"006b75"},{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5293","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDM3NzI4MTcyNg==","url":"https://github.com/coala/coala/pull/5293#issuecomment-377281726","bodyText":"@sanjeethboddi Fix the issue raised by gitmate-bot your circle build is failing because of that.","diffHunk":null,"author":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4","name":"Palash Nigam"},"reactions":[{"id":"MDg6UmVhY3Rpb24yMTU2ODM3OA==","createdAt":"2018-03-29T15:54:16Z","content":"THUMBS_UP","user":{"login":"virresh","name":"Viresh Gupta"}}],"createdAt":"2018-03-29T15:53:55Z","lastEditedAt":null,"updatedAt":"2018-03-29T15:53:55Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM3NzI4MjAyNQ==","url":"https://github.com/coala/coala/pull/5293#issuecomment-377282025","bodyText":"Also keep in mind fixes/closes are keywords in Github","diffHunk":null,"author":{"login":"virresh","avatarUrl":"https://avatars0.githubusercontent.com/u/10978108?v=4","name":"Viresh Gupta"},"reactions":[{"id":"MDg6UmVhY3Rpb24yMTU2ODYzOA==","createdAt":"2018-03-29T15:59:16Z","content":"THUMBS_UP","user":{"login":"li-boxuan","name":"Boxuan Li"}}],"createdAt":"2018-03-29T15:54:51Z","lastEditedAt":"2018-03-29T15:57:06Z","updatedAt":"2018-03-29T15:57:06Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1528544307000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5294","number":5294,"title":"Matlab.py: Add comment delimiter for Matlab & Octave","body":"Closes #5282\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use cobot mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":8,"createdAt":"2018-03-29T16:35:02Z","updatedAt":"2018-06-09T11:38:27Z","closedAt":"2018-04-07T06:40:17Z","state":"merged","user":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4"},"owner":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4"},"assignee":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4"},"labels":[{"name":"area/actions","color":"207de5"},{"name":"process/approved","color":"009800"},{"name":"size/XS","color":"00DE0F"},{"name":"type/bug","color":"e11d21"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5294","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3ODE0MTU0Mg==","url":"https://github.com/coala/coala/pull/5294#discussion_r178141542","bodyText":"why change this? are aliases case-sensitive?","diffHunk":"@@ -3,4 +3,6 @@\n \n @Language\n class Matlab:\n-    aliases = 'octave',\n+    aliases = 'Octave',","author":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4","name":"Ishan Srivastava"},"createdAt":"2018-03-29T18:20:09Z","lastEditedAt":null,"updatedAt":"2018-03-29T18:20:09Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3ODIzNjQ3NA==","url":"https://github.com/coala/coala/pull/5294#discussion_r178236474","bodyText":"No, aliases are case-insensitive. The reason I changed o to the capital letter is that I found they use capital initial on the official website (https://www.gnu.org/software/octave/). For sure you are right, this is not necessary :)","diffHunk":"@@ -3,4 +3,6 @@\n \n @Language\n class Matlab:\n-    aliases = 'octave',\n+    aliases = 'Octave',","author":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4","name":"Boxuan Li"},"createdAt":"2018-03-30T05:50:59Z","lastEditedAt":null,"updatedAt":"2018-03-30T05:50:59Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3ODIzNjU0Nw==","url":"https://github.com/coala/coala/pull/5294#discussion_r178236547","bodyText":"its ok. just checking 😉","diffHunk":"@@ -3,4 +3,6 @@\n \n @Language\n class Matlab:\n-    aliases = 'octave',\n+    aliases = 'Octave',","author":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4","name":"Ishan Srivastava"},"createdAt":"2018-03-30T05:51:52Z","lastEditedAt":null,"updatedAt":"2018-03-30T05:51:52Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1532076572000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5298","number":5298,"title":"coala_modes.py: Warn for log_printer param","body":"Warn if log_printer is used in mode_normal function.\nCloses #4972\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use cobot mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":19,"createdAt":"2018-03-31T10:45:26Z","updatedAt":"2018-07-20T08:49:32Z","closedAt":"2018-07-20T08:49:16Z","state":"merged","user":{"login":"gabi0348","avatarUrl":"https://avatars2.githubusercontent.com/u/32877573?v=4"},"owner":{"login":"gabi0348","avatarUrl":"https://avatars2.githubusercontent.com/u/32877573?v=4"},"assignee":{"login":"gabi0348","avatarUrl":"https://avatars2.githubusercontent.com/u/32877573?v=4"},"labels":[{"name":"area/CLI","color":"006b75"},{"name":"difficulty/low","color":"207de5"},{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5298","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3ODQzODUwNQ==","url":"https://github.com/coala/coala/pull/5298#discussion_r178438505","bodyText":"Misspelled ^^deprecated :-)","diffHunk":"@@ -26,6 +27,8 @@ def mode_normal(console_printer, log_printer, args, debug=False):\n         console_printer=console_printer,\n         args=args,\n         debug=debug)\n+    if log_printer:\n+        logging.warn('log_printer is depricated. Please do not use it. ')","author":{"login":"nityeshaga","avatarUrl":"https://avatars1.githubusercontent.com/u/24698858?v=4","name":"Nityesh Agarwal"},"createdAt":"2018-03-31T18:19:39Z","lastEditedAt":null,"updatedAt":"2018-03-31T18:19:39Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3OTkwNzk0NA==","url":"https://github.com/coala/coala/pull/5298#discussion_r179907944","bodyText":"& extra space at end of the string.","diffHunk":"@@ -26,6 +27,8 @@ def mode_normal(console_printer, log_printer, args, debug=False):\n         console_printer=console_printer,\n         args=args,\n         debug=debug)\n+    if log_printer:\n+        logging.warn('log_printer is depricated. Please do not use it. ')","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-04-07T04:19:14Z","lastEditedAt":null,"updatedAt":"2018-04-07T04:19:14Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM5NzcwMTA0OQ==","url":"https://github.com/coala/coala/pull/5298#issuecomment-397701049","bodyText":"Needs a rebase","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-06-15T18:10:01Z","lastEditedAt":null,"updatedAt":"2018-06-15T18:10:01Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1532344433000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5299","number":5299,"title":"ConsoleInteraction: Treat input in acquire_settings","body":"When asked for the value of a setting, entering spaces, tabs, or\nnewline would let coala continue executing, which was fixed\nby displaying a message to the console which informs the user\nabout the fault and prompting him/her to enter the value again.\nCloses #3558\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use cobot mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":7,"createdAt":"2018-03-31T10:48:40Z","updatedAt":"2018-07-23T11:13:53Z","closedAt":null,"state":"open","user":{"login":"raduklb","avatarUrl":"https://avatars2.githubusercontent.com/u/36372694?v=4"},"owner":{"login":"raduklb","avatarUrl":"https://avatars2.githubusercontent.com/u/36372694?v=4"},"assignee":{"login":"raduklb","avatarUrl":"https://avatars2.githubusercontent.com/u/36372694?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"},{"name":"importance/medium","color":"fbca04"},{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5299","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3ODQzODI2OQ==","url":"https://github.com/coala/coala/pull/5299#discussion_r178438269","bodyText":"Wouldn't it make the message clearer if it said setting is required. instead of setting left blank. ? I think that it would help stress upon the fact that code won't proceed unless the user provides a value for the setting.\nBut then again, I am not sure if such a message is the norm for linux CLI tools.","diffHunk":"@@ -597,7 +597,12 @@ def acquire_settings(log_printer, settings_names_dict, section):\n     for setting_name, arr in sorted(settings_names_dict.items(),\n                                     key=lambda x: (join_names(x[1][1:]), x[0])):\n         value = require_setting(setting_name, arr, section)\n-        result.update({setting_name: value} if value is not None else {})\n+\n+        while str(value).strip() == '':\n+            print(str(setting_name) + ' setting left blank.')","author":{"login":"nityeshaga","avatarUrl":"https://avatars1.githubusercontent.com/u/24698858?v=4","name":"Nityesh Agarwal"},"reactions":[],"createdAt":"2018-03-31T18:08:15Z","lastEditedAt":"2018-03-31T18:10:38Z","updatedAt":"2018-03-31T18:10:38Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3ODU4ODYzMA==","url":"https://github.com/coala/coala/pull/5299#discussion_r178588630","bodyText":"Yes, you are right.\nI'm open for suggestions about the warning message that should be printed because I wasn't really sure what the appropriate message would be in this situation.","diffHunk":"@@ -597,7 +597,12 @@ def acquire_settings(log_printer, settings_names_dict, section):\n     for setting_name, arr in sorted(settings_names_dict.items(),\n                                     key=lambda x: (join_names(x[1][1:]), x[0])):\n         value = require_setting(setting_name, arr, section)\n-        result.update({setting_name: value} if value is not None else {})\n+\n+        while str(value).strip() == '':\n+            print(str(setting_name) + ' setting left blank.')","author":{"login":"raduklb","avatarUrl":"https://avatars2.githubusercontent.com/u/36372694?v=4","name":"Radu Capalb"},"reactions":[],"createdAt":"2018-04-02T16:55:35Z","lastEditedAt":null,"updatedAt":"2018-04-02T16:55:35Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzIyMjQ5MQ==","url":"https://github.com/coala/coala/pull/5299#discussion_r183222491","bodyText":"use logging.warning","diffHunk":"@@ -597,7 +597,12 @@ def acquire_settings(log_printer, settings_names_dict, section):\n     for setting_name, arr in sorted(settings_names_dict.items(),\n                                     key=lambda x: (join_names(x[1][1:]), x[0])):\n         value = require_setting(setting_name, arr, section)\n-        result.update({setting_name: value} if value is not None else {})\n+\n+        while str(value).strip() == '':\n+            print(str(setting_name) + ' setting left blank.')","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-04-22T00:18:52Z","lastEditedAt":null,"updatedAt":"2018-04-22T00:18:52Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNDIzOTgxMQ==","url":"https://github.com/coala/coala/pull/5299#discussion_r204239811","bodyText":"use_space setting is required <--- Statement becomes confusing like asking setting of use_space\nI may be wrong here.","diffHunk":"@@ -597,7 +597,12 @@ def acquire_settings(log_printer, settings_names_dict, section):\n     for setting_name, arr in sorted(settings_names_dict.items(),\n                                     key=lambda x: (join_names(x[1][1:]), x[0])):\n         value = require_setting(setting_name, arr, section)\n-        result.update({setting_name: value} if value is not None else {})\n+\n+        while str(value).strip() == '':\n+            logging.warning(str(setting_name) + ' setting is required.')","author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"reactions":[],"createdAt":"2018-07-22T13:15:42Z","lastEditedAt":null,"updatedAt":"2018-07-22T13:15:42Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNDI0MTI4OQ==","url":"https://github.com/coala/coala/pull/5299#discussion_r204241289","bodyText":"Logic and test seems 👍","diffHunk":"@@ -597,7 +597,12 @@ def acquire_settings(log_printer, settings_names_dict, section):\n     for setting_name, arr in sorted(settings_names_dict.items(),\n                                     key=lambda x: (join_names(x[1][1:]), x[0])):\n         value = require_setting(setting_name, arr, section)\n-        result.update({setting_name: value} if value is not None else {})\n+\n+        while str(value).strip() == '':\n+            logging.warning(str(setting_name) + ' setting is required.')","author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"reactions":[],"createdAt":"2018-07-22T14:01:54Z","lastEditedAt":null,"updatedAt":"2018-07-22T14:01:54Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNDI2MzU4Ng==","url":"https://github.com/coala/coala/pull/5299#discussion_r204263586","bodyText":"@Makman2 had a similar comment on the last PR\n#3616 (review)\nHave you tested it @RaiVaibhav ?","diffHunk":"@@ -597,7 +597,12 @@ def acquire_settings(log_printer, settings_names_dict, section):\n     for setting_name, arr in sorted(settings_names_dict.items(),\n                                     key=lambda x: (join_names(x[1][1:]), x[0])):\n         value = require_setting(setting_name, arr, section)\n-        result.update({setting_name: value} if value is not None else {})\n+\n+        while str(value).strip() == '':\n+            logging.warning(str(setting_name) + ' setting is required.')","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-07-23T01:13:11Z","lastEditedAt":"2018-07-23T01:13:21Z","updatedAt":"2018-07-23T01:13:21Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNDM2MzM0Mw==","url":"https://github.com/coala/coala/pull/5299#discussion_r204363343","bodyText":"Have you tested it\n\nAre you talking about the rest of above changes then no I didn't tested thats why I added a comment here not requested any change,the only problem I find after reading the code was the code was a message in logging","diffHunk":"@@ -597,7 +597,12 @@ def acquire_settings(log_printer, settings_names_dict, section):\n     for setting_name, arr in sorted(settings_names_dict.items(),\n                                     key=lambda x: (join_names(x[1][1:]), x[0])):\n         value = require_setting(setting_name, arr, section)\n-        result.update({setting_name: value} if value is not None else {})\n+\n+        while str(value).strip() == '':\n+            logging.warning(str(setting_name) + ' setting is required.')","author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"reactions":[],"createdAt":"2018-07-23T11:13:43Z","lastEditedAt":"2018-07-23T11:13:53Z","updatedAt":"2018-07-23T11:13:53Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM4NTMzMzc4Nw==","url":"https://github.com/coala/coala/pull/5299#issuecomment-385333787","bodyText":"@jayvdb I made the change you requested.","diffHunk":null,"author":{"login":"raduklb","avatarUrl":"https://avatars2.githubusercontent.com/u/36372694?v=4","name":"Radu Capalb"},"reactions":[],"createdAt":"2018-04-30T08:00:31Z","lastEditedAt":null,"updatedAt":"2018-04-30T08:00:31Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM4Njc5Nzg5Nw==","url":"https://github.com/coala/coala/pull/5299#issuecomment-386797897","bodyText":"Do you have any idea why circleci fails?","diffHunk":null,"author":{"login":"raduklb","avatarUrl":"https://avatars2.githubusercontent.com/u/36372694?v=4","name":"Radu Capalb"},"reactions":[],"createdAt":"2018-05-05T11:11:27Z","lastEditedAt":null,"updatedAt":"2018-05-05T11:11:27Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM4NzQ0MjA1Mw==","url":"https://github.com/coala/coala/pull/5299#issuecomment-387442053","bodyText":"Rebase your commit. Circleci is failing because of PycodeStyle, which has been fixed.\nc.f. #5381","diffHunk":null,"author":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4","name":"Boxuan Li"},"reactions":[],"createdAt":"2018-05-08T15:26:42Z","lastEditedAt":null,"updatedAt":"2018-05-08T15:26:42Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM4NzYyMjY4OQ==","url":"https://github.com/coala/coala/pull/5299#issuecomment-387622689","bodyText":"I would also recommend you to update your local pycodestyle version to 2.4 and then run coala after flushing the cache, you will then get to see those errors that cause failure on ci\n(Also note that many rules that were added to ignore list in #5381 were removed later, and are not present in the current .coafile. )\nSo after rebasing run coala locally and lint your code as per the new rules.","diffHunk":null,"author":{"login":"virresh","avatarUrl":"https://avatars0.githubusercontent.com/u/10978108?v=4","name":"Viresh Gupta"},"reactions":[{"id":"MDg6UmVhY3Rpb24yMzM4MDc0MQ==","createdAt":"2018-05-09T05:25:49Z","content":"THUMBS_UP","user":{"login":"li-boxuan","name":"Boxuan Li"}}],"createdAt":"2018-05-09T05:17:36Z","lastEditedAt":"2018-05-09T05:18:05Z","updatedAt":"2018-05-09T05:18:05Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM5MDQxMzc0Mw==","url":"https://github.com/coala/coala/pull/5299#issuecomment-390413743","bodyText":"@jayvdb Can you check it out now, please?","diffHunk":null,"author":{"login":"raduklb","avatarUrl":"https://avatars2.githubusercontent.com/u/36372694?v=4","name":"Radu Capalb"},"reactions":[],"createdAt":"2018-05-19T15:49:42Z","lastEditedAt":null,"updatedAt":"2018-05-19T15:49:42Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQwNjc4OTY1Mw==","url":"https://github.com/coala/coala/pull/5299#issuecomment-406789653","bodyText":"LGTM, but @Makman2 should ack and merge it if he agrees with this approach.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-07-21T11:35:40Z","lastEditedAt":null,"updatedAt":"2018-07-21T11:35:40Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1524137869000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5303","number":5303,"title":"Language.py: Fix __contains__ method","body":"The contains method in the Language class only checks\nif self.versions is a superset of item.versions. This change\nadds a subset check so if self.versions is a subset\nof item.versions, contains will return True.\nCloses #4690","comments":12,"createdAt":"2018-04-01T16:07:22Z","updatedAt":"2018-04-19T11:37:49Z","closedAt":"2018-04-19T01:54:19Z","state":"merged","user":{"login":"rohanrk","avatarUrl":"https://avatars2.githubusercontent.com/u/11154862?v=4"},"owner":{"login":"rohanrk","avatarUrl":"https://avatars2.githubusercontent.com/u/11154862?v=4"},"assignee":{"login":"rohanrk","avatarUrl":"https://avatars2.githubusercontent.com/u/11154862?v=4"},"labels":[{"name":"difficulty/medium","color":"0052cc"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5303","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MTk1MDA2Nw==","url":"https://github.com/coala/coala/pull/5303#discussion_r181950067","bodyText":"restructure all of this so that you can store set(item.versions) and set(self.versions) instead of building those sets multiple times.","diffHunk":"@@ -423,7 +423,8 @@ def __or__(self, other):\n     def __contains__(self, item):\n         item = Language[item]\n         return (type(self) is type(item)","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-04-17T04:35:27Z","lastEditedAt":null,"updatedAt":"2018-04-17T04:35:27Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MTk1NTI5MA==","url":"https://github.com/coala/coala/pull/5303#discussion_r181955290","bodyText":"Still not done.","diffHunk":"@@ -423,7 +423,8 @@ def __or__(self, other):\n     def __contains__(self, item):\n         item = Language[item]\n         return (type(self) is type(item)","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-04-17T05:27:50Z","lastEditedAt":null,"updatedAt":"2018-04-17T05:27:50Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MTk1NjA3NQ==","url":"https://github.com/coala/coala/pull/5303#discussion_r181956075","bodyText":"we use snake_case variable names, per PEP8 guideline.","diffHunk":"@@ -422,8 +422,11 @@ def __or__(self, other):\n \n     def __contains__(self, item):\n         item = Language[item]\n+        itemVers = set(item.versions)","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-04-17T05:34:28Z","lastEditedAt":null,"updatedAt":"2018-04-17T05:34:28Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MTk1NjI2MA==","url":"https://github.com/coala/coala/pull/5303#discussion_r181956260","bodyText":"The logic seems very strange:\nx subset y or x superset y\nwhat is the better way of saying that?\nis that correct?","diffHunk":"@@ -422,8 +422,11 @@ def __or__(self, other):\n \n     def __contains__(self, item):\n         item = Language[item]\n+        itemVers = set(item.versions)\n+        versions = set(self.versions)\n         return (type(self) is type(item)\n-                and set(item.versions).issubset(set(self.versions)))\n+                and (itemVers.issubset(versions)","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-04-17T05:36:11Z","lastEditedAt":null,"updatedAt":"2018-04-17T05:36:11Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjA4OTQxOA==","url":"https://github.com/coala/coala/pull/5303#discussion_r182089418","bodyText":"I think the logic is sound.\nI could also write it as x subset y or y subset x if it makes it clearer. Either all of the versions in the passed in item will be contained in self (e.g. 'python 3' in Language['python']) or all the versions in self will be contained in item (e.g. 'python' in Language['python 3'])\nif neither of these conditions are met then item isn't in self.\nI can't think of a nicer way to write this. Maybe\nx | y == x or x | y == y","diffHunk":"@@ -422,8 +422,11 @@ def __or__(self, other):\n \n     def __contains__(self, item):\n         item = Language[item]\n+        itemVers = set(item.versions)\n+        versions = set(self.versions)\n         return (type(self) is type(item)\n-                and set(item.versions).issubset(set(self.versions)))\n+                and (itemVers.issubset(versions)","author":{"login":"rohanrk","avatarUrl":"https://avatars2.githubusercontent.com/u/11154862?v=4","name":"Rohan"},"createdAt":"2018-04-17T14:18:50Z","lastEditedAt":null,"updatedAt":"2018-04-17T14:18:50Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM3OTY1NzcwNw==","url":"https://github.com/coala/coala/pull/5303#issuecomment-379657707","bodyText":"I'm still here. I'll continue working","diffHunk":null,"author":{"login":"rohanrk","avatarUrl":"https://avatars2.githubusercontent.com/u/11154862?v=4","name":"Rohan"},"createdAt":"2018-04-09T07:17:28Z","lastEditedAt":null,"updatedAt":"2018-04-09T07:17:28Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM4MTgzNzMzOQ==","url":"https://github.com/coala/coala/pull/5303#issuecomment-381837339","bodyText":"(also please rebase)","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-04-17T04:35:48Z","lastEditedAt":null,"updatedAt":"2018-04-17T04:35:48Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM4MTgzOTA0OQ==","url":"https://github.com/coala/coala/pull/5303#issuecomment-381839049","bodyText":"(removing red cross, as it now looks good; but needs to be better performance)","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-04-17T04:44:44Z","lastEditedAt":null,"updatedAt":"2018-04-17T04:44:44Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM4MjU2NDQ3MA==","url":"https://github.com/coala/coala/pull/5303#issuecomment-382564470","bodyText":"Ack b33c192 74693d5","diffHunk":null,"author":{"login":"adhikasp","avatarUrl":"https://avatars2.githubusercontent.com/u/6151302?v=4","name":"Adhika Setya Pramudita"},"createdAt":"2018-04-18T23:50:57Z","lastEditedAt":null,"updatedAt":"2018-04-18T23:50:57Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1528546091000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5304","number":5304,"title":"Writing_Good_Commits.rst: Add No WIP prefix","body":"Change: add No WIP prefix\nFixes #5287\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use cobot mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":11,"createdAt":"2018-04-01T18:55:00Z","updatedAt":"2018-06-09T12:08:11Z","closedAt":"2018-04-07T05:36:24Z","state":"merged","user":{"login":"HyeockJinKim","avatarUrl":"https://avatars0.githubusercontent.com/u/26498366?v=4"},"owner":{"login":"HyeockJinKim","avatarUrl":"https://avatars0.githubusercontent.com/u/26498366?v=4"},"assignee":{"login":"HyeockJinKim","avatarUrl":"https://avatars0.githubusercontent.com/u/26498366?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/low","color":"207de5"},{"name":"importance/low","color":"70E870"},{"name":"process/approved","color":"009800"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5304","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDM3ODg3NDAzOA==","url":"https://github.com/coala/coala/pull/5304#issuecomment-378874038","bodyText":"Why did you close the Pr? The devs unnecessarily revcieves an email.","diffHunk":null,"author":{"login":"newbazz","avatarUrl":"https://avatars1.githubusercontent.com/u/25884863?v=4","name":null},"createdAt":"2018-04-05T09:23:26Z","lastEditedAt":null,"updatedAt":"2018-04-05T09:23:26Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM3OTI3MDY5OQ==","url":"https://github.com/coala/coala/pull/5304#issuecomment-379270699","bodyText":"Sorry. I think that the removal of the '.' at the end of the title does not seem to apply, so I tried to close and reopen it. I will be careful.","diffHunk":null,"author":{"login":"HyeockJinKim","avatarUrl":"https://avatars0.githubusercontent.com/u/26498366?v=4","name":"Hyeock Jin"},"createdAt":"2018-04-06T14:29:08Z","lastEditedAt":null,"updatedAt":"2018-04-06T14:29:08Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1525142852000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5311","number":5311,"title":"ConfParser.py: change section when none provided","body":"When no section is provided, coala considers it automatically\nunder Default section which provides an additional warning\nmessage about the deprecation of the Default section. This\ncommit removes this ambiguity and defines section name of\nthe settings under no section to be NO SECTION PROVIDED\nCloses #5309","comments":2,"createdAt":"2018-04-04T09:58:09Z","updatedAt":"2018-05-01T02:47:32Z","closedAt":null,"state":"open","user":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4"},"owner":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4"},"assignee":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4"},"labels":[{"name":"process/wip","color":"fbca04"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5311","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDM3ODY1OTYzMw==","url":"https://github.com/coala/coala/pull/5311#issuecomment-378659633","bodyText":"[WIP]","diffHunk":null,"author":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4","name":"Ishan Srivastava"},"createdAt":"2018-04-04T16:19:57Z","lastEditedAt":null,"updatedAt":"2018-04-04T16:19:57Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1528545102000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5312","number":5312,"title":"Fortran.py: Add support for ignore comments","body":"Closes #5296\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use cobot mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":12,"createdAt":"2018-04-04T17:01:29Z","updatedAt":"2018-06-09T11:51:42Z","closedAt":"2018-04-07T00:18:12Z","state":"merged","user":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4"},"owner":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4"},"assignee":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4"},"labels":[{"name":"area/actions","color":"207de5"},{"name":"process/approved","color":"009800"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5312","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDM3OTAwMjE4NA==","url":"https://github.com/coala/coala/pull/5312#issuecomment-379002184","bodyText":"@sangamcse You mean like keywords? Honestly, I have no idea :) But IMO this is unrelated to this issue.","diffHunk":null,"author":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4","name":"Boxuan Li"},"reactions":[{"id":"MDg6UmVhY3Rpb24yMTg3MzczMA==","createdAt":"2018-04-05T19:56:50Z","content":"LAUGH","user":{"login":"sangamcse","name":"Sangam Kumar"}}],"createdAt":"2018-04-05T16:49:15Z","lastEditedAt":null,"updatedAt":"2018-04-05T16:49:15Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM3OTA1Nzg3Mg==","url":"https://github.com/coala/coala/pull/5312#issuecomment-379057872","bodyText":"That's why I asked whether to open another issue for that. 😉","diffHunk":null,"author":{"login":"sangamcse","avatarUrl":"https://avatars2.githubusercontent.com/u/26381717?v=4","name":"Sangam Kumar"},"reactions":[{"id":"MDg6UmVhY3Rpb24yMTg3MzgyOQ==","createdAt":"2018-04-05T19:58:43Z","content":"THUMBS_UP","user":{"login":"li-boxuan","name":"Boxuan Li"}}],"createdAt":"2018-04-05T19:57:29Z","lastEditedAt":null,"updatedAt":"2018-04-05T19:57:29Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1527959180000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5313","number":5313,"title":"FilterHelperTest.py: Add `FilterHelperTest` class","body":"This adds an additional FilterHelperTest class and\ntests InvalidFilterException by raising the exception\nusing FilterHelper.\nCloses #4864\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use cobot mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":11,"createdAt":"2018-04-05T00:05:51Z","updatedAt":"2018-06-02T17:06:20Z","closedAt":"2018-04-17T07:43:04Z","state":"merged","user":{"login":"sangamcse","avatarUrl":"https://avatars2.githubusercontent.com/u/26381717?v=4"},"owner":{"login":"sangamcse","avatarUrl":"https://avatars2.githubusercontent.com/u/26381717?v=4"},"assignee":{"login":"sangamcse","avatarUrl":"https://avatars2.githubusercontent.com/u/26381717?v=4"},"labels":[{"name":"area/tests","color":"bfd4f2"},{"name":"difficulty/low","color":"207de5"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5313","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3OTkwNzc2OQ==","url":"https://github.com/coala/coala/pull/5313#discussion_r179907769","bodyText":"I would suggest changing it to from coalib.parsing.filters import available_filters. Honestly, I don't know which one is better.","diffHunk":"@@ -0,0 +1,28 @@\n+import unittest\n+\n+from coalib.parsing.FilterHelper import (\n+    apply_filter,\n+    apply_filters,\n+    available_filters,","author":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4","name":"Boxuan Li"},"reactions":[],"createdAt":"2018-04-07T04:07:19Z","lastEditedAt":null,"updatedAt":"2018-04-07T04:07:19Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3OTkwODc3Ng==","url":"https://github.com/coala/coala/pull/5313#discussion_r179908776","bodyText":"c.f. #5331","diffHunk":"@@ -0,0 +1,28 @@\n+import unittest\n+\n+from coalib.parsing.FilterHelper import (\n+    apply_filter,\n+    apply_filters,\n+    available_filters,","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-04-07T05:12:15Z","lastEditedAt":null,"updatedAt":"2018-04-07T05:12:15Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MDEwNjQ4MA==","url":"https://github.com/coala/coala/pull/5313#discussion_r180106480","bodyText":"instead of using result1 maybe we could useresultForCheck. Or instead why not use self.assertFalse(is_valid_filter('check'))","diffHunk":"@@ -0,0 +1,52 @@\n+import unittest\n+\n+from coalib.parsing.FilterHelper import (\n+    apply_filter,\n+    apply_filters,\n+    is_valid_filter,\n+    _filter_section_bears\n+)\n+from coalib.parsing.filters import available_filters\n+from coalib.parsing.InvalidFilterException import InvalidFilterException\n+from coalib.settings.ConfigurationGathering import get_all_bears\n+\n+\n+class FilterHelperTest(unittest.TestCase):\n+\n+    def test_apply_filter_exception(self):\n+        with self.assertRaises(InvalidFilterException) as exp:\n+            apply_filter('unknown', ['args'])\n+\n+        message = str(exp.exception)\n+        self.assertEqual(\"'unknown' is an invalid filter. Available filters: \"\n+                         + ', '.join(sorted(available_filters)), message)\n+\n+    def test_apply_filters_exception(self):\n+        with self.assertRaises(InvalidFilterException) as exp:\n+            apply_filters([['language', 'C', 'Python'],\n+                           ['unknown', 'args']])\n+\n+        message = str(exp.exception)\n+        self.assertEqual(\"'unknown' is an invalid filter. Available filters: \"\n+                         + ', '.join(sorted(available_filters)), message)\n+\n+    def test_is_valid_filter(self):\n+        result1 = is_valid_filter('check')\n+        result2 = is_valid_filter('can_detect')\n+        self.assertFalse(result1)\n+        self.assertTrue(result2)","author":{"login":"stellargo","avatarUrl":"https://avatars0.githubusercontent.com/u/27735438?v=4","name":"Sumit Sarin"},"reactions":[],"createdAt":"2018-04-09T14:09:44Z","lastEditedAt":null,"updatedAt":"2018-04-09T14:09:44Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MDEzODkxMg==","url":"https://github.com/coala/coala/pull/5313#discussion_r180138912","bodyText":"Saving the output in a variable increases readability IMO.","diffHunk":"@@ -0,0 +1,52 @@\n+import unittest\n+\n+from coalib.parsing.FilterHelper import (\n+    apply_filter,\n+    apply_filters,\n+    is_valid_filter,\n+    _filter_section_bears\n+)\n+from coalib.parsing.filters import available_filters\n+from coalib.parsing.InvalidFilterException import InvalidFilterException\n+from coalib.settings.ConfigurationGathering import get_all_bears\n+\n+\n+class FilterHelperTest(unittest.TestCase):\n+\n+    def test_apply_filter_exception(self):\n+        with self.assertRaises(InvalidFilterException) as exp:\n+            apply_filter('unknown', ['args'])\n+\n+        message = str(exp.exception)\n+        self.assertEqual(\"'unknown' is an invalid filter. Available filters: \"\n+                         + ', '.join(sorted(available_filters)), message)\n+\n+    def test_apply_filters_exception(self):\n+        with self.assertRaises(InvalidFilterException) as exp:\n+            apply_filters([['language', 'C', 'Python'],\n+                           ['unknown', 'args']])\n+\n+        message = str(exp.exception)\n+        self.assertEqual(\"'unknown' is an invalid filter. Available filters: \"\n+                         + ', '.join(sorted(available_filters)), message)\n+\n+    def test_is_valid_filter(self):\n+        result1 = is_valid_filter('check')\n+        result2 = is_valid_filter('can_detect')\n+        self.assertFalse(result1)\n+        self.assertTrue(result2)","author":{"login":"sangamcse","avatarUrl":"https://avatars2.githubusercontent.com/u/26381717?v=4","name":"Sangam Kumar"},"reactions":[],"createdAt":"2018-04-09T15:43:57Z","lastEditedAt":null,"updatedAt":"2018-04-09T15:43:57Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MDE0OTM3NA==","url":"https://github.com/coala/coala/pull/5313#discussion_r180149374","bodyText":"@sangamcse this result can also be somewhat meaningful like you did for the above two results which were result1 and result2. We can use the name of the variable like filter_section_result. Any meaningful name of the variable. As you mentioned that the code is more readable if the variable names are more readable and understandable. 😉","diffHunk":"@@ -0,0 +1,52 @@\n+import unittest\n+\n+from coalib.parsing.FilterHelper import (\n+    apply_filter,\n+    apply_filters,\n+    is_valid_filter,\n+    _filter_section_bears\n+)\n+from coalib.parsing.filters import available_filters\n+from coalib.parsing.InvalidFilterException import InvalidFilterException\n+from coalib.settings.ConfigurationGathering import get_all_bears\n+\n+\n+class FilterHelperTest(unittest.TestCase):\n+\n+    def test_apply_filter_exception(self):\n+        with self.assertRaises(InvalidFilterException) as exp:\n+            apply_filter('unknown', ['args'])\n+\n+        message = str(exp.exception)\n+        self.assertEqual(\"'unknown' is an invalid filter. Available filters: \"\n+                         + ', '.join(sorted(available_filters)), message)\n+\n+    def test_apply_filters_exception(self):\n+        with self.assertRaises(InvalidFilterException) as exp:\n+            apply_filters([['language', 'C', 'Python'],\n+                           ['unknown', 'args']])\n+\n+        message = str(exp.exception)\n+        self.assertEqual(\"'unknown' is an invalid filter. Available filters: \"\n+                         + ', '.join(sorted(available_filters)), message)\n+\n+    def test_is_valid_filter(self):\n+        result_for_wrong_filter = is_valid_filter('check')\n+        self.assertFalse(result_for_wrong_filter)\n+        result_for_right_filter = is_valid_filter('can_detect')\n+        self.assertTrue(result_for_right_filter)\n+\n+    def test_filter_section_bears(self):\n+        local_bears, global_bears = get_all_bears()\n+        filter_args = {'c', 'java'}\n+        result = _filter_section_bears(","author":{"login":"lalitmee","avatarUrl":"https://avatars0.githubusercontent.com/u/10762218?v=4","name":"Lalit Kumar"},"reactions":[],"createdAt":"2018-04-09T16:14:34Z","lastEditedAt":null,"updatedAt":"2018-04-09T16:14:34Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MDE1MzE2OA==","url":"https://github.com/coala/coala/pull/5313#discussion_r180153168","bodyText":"Done.","diffHunk":"@@ -0,0 +1,52 @@\n+import unittest\n+\n+from coalib.parsing.FilterHelper import (\n+    apply_filter,\n+    apply_filters,\n+    is_valid_filter,\n+    _filter_section_bears\n+)\n+from coalib.parsing.filters import available_filters\n+from coalib.parsing.InvalidFilterException import InvalidFilterException\n+from coalib.settings.ConfigurationGathering import get_all_bears\n+\n+\n+class FilterHelperTest(unittest.TestCase):\n+\n+    def test_apply_filter_exception(self):\n+        with self.assertRaises(InvalidFilterException) as exp:\n+            apply_filter('unknown', ['args'])\n+\n+        message = str(exp.exception)\n+        self.assertEqual(\"'unknown' is an invalid filter. Available filters: \"\n+                         + ', '.join(sorted(available_filters)), message)\n+\n+    def test_apply_filters_exception(self):\n+        with self.assertRaises(InvalidFilterException) as exp:\n+            apply_filters([['language', 'C', 'Python'],\n+                           ['unknown', 'args']])\n+\n+        message = str(exp.exception)\n+        self.assertEqual(\"'unknown' is an invalid filter. Available filters: \"\n+                         + ', '.join(sorted(available_filters)), message)\n+\n+    def test_is_valid_filter(self):\n+        result_for_wrong_filter = is_valid_filter('check')\n+        self.assertFalse(result_for_wrong_filter)\n+        result_for_right_filter = is_valid_filter('can_detect')\n+        self.assertTrue(result_for_right_filter)\n+\n+    def test_filter_section_bears(self):\n+        local_bears, global_bears = get_all_bears()\n+        filter_args = {'c', 'java'}\n+        result = _filter_section_bears(","author":{"login":"sangamcse","avatarUrl":"https://avatars2.githubusercontent.com/u/26381717?v=4","name":"Sangam Kumar"},"reactions":[],"createdAt":"2018-04-09T16:26:52Z","lastEditedAt":null,"updatedAt":"2018-04-09T16:26:52Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MDkwMDIwMw==","url":"https://github.com/coala/coala/pull/5313#discussion_r180900203","bodyText":"For what you are using global_bears? Since I didn't see any use of this variable here, I think you can remove this. 😉","diffHunk":"@@ -0,0 +1,53 @@\n+import unittest\n+\n+from coalib.parsing.FilterHelper import (\n+    apply_filter,\n+    apply_filters,\n+    is_valid_filter,\n+    _filter_section_bears\n+)\n+from coalib.parsing.filters import available_filters\n+from coalib.parsing.InvalidFilterException import InvalidFilterException\n+from coalib.settings.ConfigurationGathering import get_all_bears\n+\n+\n+class FilterHelperTest(unittest.TestCase):\n+\n+    def test_apply_filter_exception(self):\n+        with self.assertRaises(InvalidFilterException) as exp:\n+            apply_filter('unknown', ['args'])\n+\n+        message = str(exp.exception)\n+        self.assertEqual(\"'unknown' is an invalid filter. Available filters: \"\n+                         + ', '.join(sorted(available_filters)), message)\n+\n+    def test_apply_filters_exception(self):\n+        with self.assertRaises(InvalidFilterException) as exp:\n+            apply_filters([['language', 'C', 'Python'],\n+                           ['unknown', 'args']])\n+\n+        message = str(exp.exception)\n+        self.assertEqual(\"'unknown' is an invalid filter. Available filters: \"\n+                         + ', '.join(sorted(available_filters)), message)\n+\n+    def test_is_valid_filter(self):\n+        wrong_filter_result = is_valid_filter('check')\n+        right_filter_result = is_valid_filter('can_detect')\n+        self.assertFalse(wrong_filter_result)\n+        self.assertTrue(right_filter_result)\n+\n+    def test_filter_section_bears(self):\n+        local_bears, global_bears = get_all_bears()","author":{"login":"lalitmee","avatarUrl":"https://avatars0.githubusercontent.com/u/10762218?v=4","name":"Lalit Kumar"},"reactions":[],"createdAt":"2018-04-11T21:13:25Z","lastEditedAt":"2018-04-11T21:16:43Z","updatedAt":"2018-04-11T21:16:43Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MDkwMjg4Mw==","url":"https://github.com/coala/coala/pull/5313#discussion_r180902883","bodyText":"get_all_bears() gives 2 outputs, where 1st one is list of local_bears and 2nd one is global_bears.\nIf I give one variable( like output=get_all_bears()) , then I have to check with the output[0]. IMO, it is better to give a name for output[0] and output[1]. And it won't effect the test. So I'll leave it like this.","diffHunk":"@@ -0,0 +1,53 @@\n+import unittest\n+\n+from coalib.parsing.FilterHelper import (\n+    apply_filter,\n+    apply_filters,\n+    is_valid_filter,\n+    _filter_section_bears\n+)\n+from coalib.parsing.filters import available_filters\n+from coalib.parsing.InvalidFilterException import InvalidFilterException\n+from coalib.settings.ConfigurationGathering import get_all_bears\n+\n+\n+class FilterHelperTest(unittest.TestCase):\n+\n+    def test_apply_filter_exception(self):\n+        with self.assertRaises(InvalidFilterException) as exp:\n+            apply_filter('unknown', ['args'])\n+\n+        message = str(exp.exception)\n+        self.assertEqual(\"'unknown' is an invalid filter. Available filters: \"\n+                         + ', '.join(sorted(available_filters)), message)\n+\n+    def test_apply_filters_exception(self):\n+        with self.assertRaises(InvalidFilterException) as exp:\n+            apply_filters([['language', 'C', 'Python'],\n+                           ['unknown', 'args']])\n+\n+        message = str(exp.exception)\n+        self.assertEqual(\"'unknown' is an invalid filter. Available filters: \"\n+                         + ', '.join(sorted(available_filters)), message)\n+\n+    def test_is_valid_filter(self):\n+        wrong_filter_result = is_valid_filter('check')\n+        right_filter_result = is_valid_filter('can_detect')\n+        self.assertFalse(wrong_filter_result)\n+        self.assertTrue(right_filter_result)\n+\n+    def test_filter_section_bears(self):\n+        local_bears, global_bears = get_all_bears()","author":{"login":"sangamcse","avatarUrl":"https://avatars2.githubusercontent.com/u/26381717?v=4","name":"Sangam Kumar"},"reactions":[],"createdAt":"2018-04-11T21:24:08Z","lastEditedAt":"2018-04-11T21:25:43Z","updatedAt":"2018-04-11T21:25:43Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MDkwNDU0Mw==","url":"https://github.com/coala/coala/pull/5313#discussion_r180904543","bodyText":"oh. Yeah, I just saw that. If this is the case then it's fine. 👍","diffHunk":"@@ -0,0 +1,53 @@\n+import unittest\n+\n+from coalib.parsing.FilterHelper import (\n+    apply_filter,\n+    apply_filters,\n+    is_valid_filter,\n+    _filter_section_bears\n+)\n+from coalib.parsing.filters import available_filters\n+from coalib.parsing.InvalidFilterException import InvalidFilterException\n+from coalib.settings.ConfigurationGathering import get_all_bears\n+\n+\n+class FilterHelperTest(unittest.TestCase):\n+\n+    def test_apply_filter_exception(self):\n+        with self.assertRaises(InvalidFilterException) as exp:\n+            apply_filter('unknown', ['args'])\n+\n+        message = str(exp.exception)\n+        self.assertEqual(\"'unknown' is an invalid filter. Available filters: \"\n+                         + ', '.join(sorted(available_filters)), message)\n+\n+    def test_apply_filters_exception(self):\n+        with self.assertRaises(InvalidFilterException) as exp:\n+            apply_filters([['language', 'C', 'Python'],\n+                           ['unknown', 'args']])\n+\n+        message = str(exp.exception)\n+        self.assertEqual(\"'unknown' is an invalid filter. Available filters: \"\n+                         + ', '.join(sorted(available_filters)), message)\n+\n+    def test_is_valid_filter(self):\n+        wrong_filter_result = is_valid_filter('check')\n+        right_filter_result = is_valid_filter('can_detect')\n+        self.assertFalse(wrong_filter_result)\n+        self.assertTrue(right_filter_result)\n+\n+    def test_filter_section_bears(self):\n+        local_bears, global_bears = get_all_bears()","author":{"login":"lalitmee","avatarUrl":"https://avatars0.githubusercontent.com/u/10762218?v=4","name":"Lalit Kumar"},"reactions":[{"id":"MDg6UmVhY3Rpb24yMjE0NTExNg==","createdAt":"2018-04-11T21:31:49Z","content":"THUMBS_UP","user":{"login":"sangamcse","name":"Sangam Kumar"}}],"createdAt":"2018-04-11T21:31:03Z","lastEditedAt":null,"updatedAt":"2018-04-11T21:31:03Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MDkxMTk4OQ==","url":"https://github.com/coala/coala/pull/5313#discussion_r180911989","bodyText":"You can use local_bears, _ = get_all_bears() in this case. But no big deal, this is your choice. 😉","diffHunk":"@@ -0,0 +1,53 @@\n+import unittest\n+\n+from coalib.parsing.FilterHelper import (\n+    apply_filter,\n+    apply_filters,\n+    is_valid_filter,\n+    _filter_section_bears\n+)\n+from coalib.parsing.filters import available_filters\n+from coalib.parsing.InvalidFilterException import InvalidFilterException\n+from coalib.settings.ConfigurationGathering import get_all_bears\n+\n+\n+class FilterHelperTest(unittest.TestCase):\n+\n+    def test_apply_filter_exception(self):\n+        with self.assertRaises(InvalidFilterException) as exp:\n+            apply_filter('unknown', ['args'])\n+\n+        message = str(exp.exception)\n+        self.assertEqual(\"'unknown' is an invalid filter. Available filters: \"\n+                         + ', '.join(sorted(available_filters)), message)\n+\n+    def test_apply_filters_exception(self):\n+        with self.assertRaises(InvalidFilterException) as exp:\n+            apply_filters([['language', 'C', 'Python'],\n+                           ['unknown', 'args']])\n+\n+        message = str(exp.exception)\n+        self.assertEqual(\"'unknown' is an invalid filter. Available filters: \"\n+                         + ', '.join(sorted(available_filters)), message)\n+\n+    def test_is_valid_filter(self):\n+        wrong_filter_result = is_valid_filter('check')\n+        right_filter_result = is_valid_filter('can_detect')\n+        self.assertFalse(wrong_filter_result)\n+        self.assertTrue(right_filter_result)\n+\n+    def test_filter_section_bears(self):\n+        local_bears, global_bears = get_all_bears()","author":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4","name":"Boxuan Li"},"reactions":[{"id":"MDg6UmVhY3Rpb24yMjE0NjUwMA==","createdAt":"2018-04-11T22:05:05Z","content":"THUMBS_UP","user":{"login":"sangamcse","name":"Sangam Kumar"}}],"createdAt":"2018-04-11T22:03:23Z","lastEditedAt":null,"updatedAt":"2018-04-11T22:03:23Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MDkxNTgyMw==","url":"https://github.com/coala/coala/pull/5313#discussion_r180915823","bodyText":"Done","diffHunk":"@@ -0,0 +1,53 @@\n+import unittest\n+\n+from coalib.parsing.FilterHelper import (\n+    apply_filter,\n+    apply_filters,\n+    is_valid_filter,\n+    _filter_section_bears\n+)\n+from coalib.parsing.filters import available_filters\n+from coalib.parsing.InvalidFilterException import InvalidFilterException\n+from coalib.settings.ConfigurationGathering import get_all_bears\n+\n+\n+class FilterHelperTest(unittest.TestCase):\n+\n+    def test_apply_filter_exception(self):\n+        with self.assertRaises(InvalidFilterException) as exp:\n+            apply_filter('unknown', ['args'])\n+\n+        message = str(exp.exception)\n+        self.assertEqual(\"'unknown' is an invalid filter. Available filters: \"\n+                         + ', '.join(sorted(available_filters)), message)\n+\n+    def test_apply_filters_exception(self):\n+        with self.assertRaises(InvalidFilterException) as exp:\n+            apply_filters([['language', 'C', 'Python'],\n+                           ['unknown', 'args']])\n+\n+        message = str(exp.exception)\n+        self.assertEqual(\"'unknown' is an invalid filter. Available filters: \"\n+                         + ', '.join(sorted(available_filters)), message)\n+\n+    def test_is_valid_filter(self):\n+        wrong_filter_result = is_valid_filter('check')\n+        right_filter_result = is_valid_filter('can_detect')\n+        self.assertFalse(wrong_filter_result)\n+        self.assertTrue(right_filter_result)\n+\n+    def test_filter_section_bears(self):\n+        local_bears, global_bears = get_all_bears()","author":{"login":"sangamcse","avatarUrl":"https://avatars2.githubusercontent.com/u/26381717?v=4","name":"Sangam Kumar"},"reactions":[],"createdAt":"2018-04-11T22:23:18Z","lastEditedAt":null,"updatedAt":"2018-04-11T22:23:18Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MTk2MDgwMA==","url":"https://github.com/coala/coala/pull/5313#discussion_r181960800","bodyText":"what is this?\nyou are passing an array of arrays into the arg filter_name arg... intentional?","diffHunk":"@@ -0,0 +1,53 @@\n+import unittest\n+\n+from coalib.parsing.FilterHelper import (\n+    apply_filter,\n+    apply_filters,\n+    is_valid_filter,\n+    _filter_section_bears\n+)\n+from coalib.parsing.filters import available_filters\n+from coalib.parsing.InvalidFilterException import InvalidFilterException\n+from coalib.settings.ConfigurationGathering import get_all_bears\n+\n+\n+class FilterHelperTest(unittest.TestCase):\n+\n+    def test_apply_filter_exception(self):\n+        with self.assertRaises(InvalidFilterException) as exp:\n+            apply_filter('unknown', ['args'])\n+\n+        message = str(exp.exception)\n+        self.assertEqual(\"'unknown' is an invalid filter. Available filters: \"\n+                         + ', '.join(sorted(available_filters)), message)\n+\n+    def test_apply_filters_exception(self):\n+        with self.assertRaises(InvalidFilterException) as exp:\n+            apply_filters([['language', 'C', 'Python'],","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-04-17T06:10:19Z","lastEditedAt":null,"updatedAt":"2018-04-17T06:10:19Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MTk2MDk0Nw==","url":"https://github.com/coala/coala/pull/5313#discussion_r181960947","bodyText":"the exception is the same as above, so it doesnt appear that this test case provides anything more than the above","diffHunk":"@@ -0,0 +1,53 @@\n+import unittest\n+\n+from coalib.parsing.FilterHelper import (\n+    apply_filter,\n+    apply_filters,\n+    is_valid_filter,\n+    _filter_section_bears\n+)\n+from coalib.parsing.filters import available_filters\n+from coalib.parsing.InvalidFilterException import InvalidFilterException\n+from coalib.settings.ConfigurationGathering import get_all_bears\n+\n+\n+class FilterHelperTest(unittest.TestCase):\n+\n+    def test_apply_filter_exception(self):\n+        with self.assertRaises(InvalidFilterException) as exp:\n+            apply_filter('unknown', ['args'])\n+\n+        message = str(exp.exception)\n+        self.assertEqual(\"'unknown' is an invalid filter. Available filters: \"\n+                         + ', '.join(sorted(available_filters)), message)\n+\n+    def test_apply_filters_exception(self):\n+        with self.assertRaises(InvalidFilterException) as exp:\n+            apply_filters([['language', 'C', 'Python'],","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yMjM2OTEwMQ==","createdAt":"2018-04-17T07:00:28Z","content":"THUMBS_UP","user":{"login":"sangamcse","name":"Sangam Kumar"}}],"createdAt":"2018-04-17T06:11:04Z","lastEditedAt":null,"updatedAt":"2018-04-17T06:11:04Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MTk2MTAzOQ==","url":"https://github.com/coala/coala/pull/5313#discussion_r181961039","bodyText":"this is two test cases.","diffHunk":"@@ -0,0 +1,53 @@\n+import unittest\n+\n+from coalib.parsing.FilterHelper import (\n+    apply_filter,\n+    apply_filters,\n+    is_valid_filter,\n+    _filter_section_bears\n+)\n+from coalib.parsing.filters import available_filters\n+from coalib.parsing.InvalidFilterException import InvalidFilterException\n+from coalib.settings.ConfigurationGathering import get_all_bears\n+\n+\n+class FilterHelperTest(unittest.TestCase):\n+\n+    def test_apply_filter_exception(self):\n+        with self.assertRaises(InvalidFilterException) as exp:\n+            apply_filter('unknown', ['args'])\n+\n+        message = str(exp.exception)\n+        self.assertEqual(\"'unknown' is an invalid filter. Available filters: \"\n+                         + ', '.join(sorted(available_filters)), message)\n+\n+    def test_apply_filters_exception(self):\n+        with self.assertRaises(InvalidFilterException) as exp:\n+            apply_filters([['language', 'C', 'Python'],\n+                           ['unknown', 'args']])\n+\n+        message = str(exp.exception)\n+        self.assertEqual(\"'unknown' is an invalid filter. Available filters: \"\n+                         + ', '.join(sorted(available_filters)), message)\n+\n+    def test_is_valid_filter(self):","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yMjM2OTA3NA==","createdAt":"2018-04-17T06:59:56Z","content":"THUMBS_UP","user":{"login":"sangamcse","name":"Sangam Kumar"}}],"createdAt":"2018-04-17T06:11:44Z","lastEditedAt":null,"updatedAt":"2018-04-17T06:11:44Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MTk2MTIxNQ==","url":"https://github.com/coala/coala/pull/5313#discussion_r181961215","bodyText":"whaaa .. here is this array of array again.  who designed this stuff.","diffHunk":"@@ -0,0 +1,53 @@\n+import unittest\n+\n+from coalib.parsing.FilterHelper import (\n+    apply_filter,\n+    apply_filters,\n+    is_valid_filter,\n+    _filter_section_bears\n+)\n+from coalib.parsing.filters import available_filters\n+from coalib.parsing.InvalidFilterException import InvalidFilterException\n+from coalib.settings.ConfigurationGathering import get_all_bears\n+\n+\n+class FilterHelperTest(unittest.TestCase):\n+\n+    def test_apply_filter_exception(self):\n+        with self.assertRaises(InvalidFilterException) as exp:\n+            apply_filter('unknown', ['args'])\n+\n+        message = str(exp.exception)\n+        self.assertEqual(\"'unknown' is an invalid filter. Available filters: \"\n+                         + ', '.join(sorted(available_filters)), message)\n+\n+    def test_apply_filters_exception(self):\n+        with self.assertRaises(InvalidFilterException) as exp:\n+            apply_filters([['language', 'C', 'Python'],\n+                           ['unknown', 'args']])\n+\n+        message = str(exp.exception)\n+        self.assertEqual(\"'unknown' is an invalid filter. Available filters: \"\n+                         + ', '.join(sorted(available_filters)), message)\n+\n+    def test_is_valid_filter(self):\n+        wrong_filter_result = is_valid_filter('check')\n+        right_filter_result = is_valid_filter('can_detect')\n+        self.assertFalse(wrong_filter_result)\n+        self.assertTrue(right_filter_result)\n+\n+    def test_filter_section_bears(self):\n+        local_bears = get_all_bears()[0]\n+        filter_args = {'c', 'java'}\n+        result_for_filter_section = _filter_section_bears(\n+            local_bears, filter_args, 'language')\n+        self.assertIsNotNone(result_for_filter_section)\n+\n+    def test_apply_filter(self):\n+        apply_filter_result = apply_filter('language', ['c', 'java'])\n+        self.assertIsNotNone(apply_filter_result)\n+\n+    def test_apply_filters(self):\n+        apply_filters_result = apply_filters([['language', 'C', 'Python'],","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-04-17T06:12:55Z","lastEditedAt":"2018-04-17T06:42:08Z","updatedAt":"2018-04-17T06:42:08Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MTk2MTMxMQ==","url":"https://github.com/coala/coala/pull/5313#discussion_r181961311","bodyText":"This case is for apply_filters(...) and above one is for apply_filter(...).","diffHunk":"@@ -0,0 +1,53 @@\n+import unittest\n+\n+from coalib.parsing.FilterHelper import (\n+    apply_filter,\n+    apply_filters,\n+    is_valid_filter,\n+    _filter_section_bears\n+)\n+from coalib.parsing.filters import available_filters\n+from coalib.parsing.InvalidFilterException import InvalidFilterException\n+from coalib.settings.ConfigurationGathering import get_all_bears\n+\n+\n+class FilterHelperTest(unittest.TestCase):\n+\n+    def test_apply_filter_exception(self):\n+        with self.assertRaises(InvalidFilterException) as exp:\n+            apply_filter('unknown', ['args'])\n+\n+        message = str(exp.exception)\n+        self.assertEqual(\"'unknown' is an invalid filter. Available filters: \"\n+                         + ', '.join(sorted(available_filters)), message)\n+\n+    def test_apply_filters_exception(self):\n+        with self.assertRaises(InvalidFilterException) as exp:\n+            apply_filters([['language', 'C', 'Python'],","author":{"login":"sangamcse","avatarUrl":"https://avatars2.githubusercontent.com/u/26381717?v=4","name":"Sangam Kumar"},"reactions":[],"createdAt":"2018-04-17T06:13:35Z","lastEditedAt":null,"updatedAt":"2018-04-17T06:13:35Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MTk2NjI5Ng==","url":"https://github.com/coala/coala/pull/5313#discussion_r181966296","bodyText":"#5398 is for fixing that problem, but first lets get this patch fixed and merged.","diffHunk":"@@ -0,0 +1,53 @@\n+import unittest\n+\n+from coalib.parsing.FilterHelper import (\n+    apply_filter,\n+    apply_filters,\n+    is_valid_filter,\n+    _filter_section_bears\n+)\n+from coalib.parsing.filters import available_filters\n+from coalib.parsing.InvalidFilterException import InvalidFilterException\n+from coalib.settings.ConfigurationGathering import get_all_bears\n+\n+\n+class FilterHelperTest(unittest.TestCase):\n+\n+    def test_apply_filter_exception(self):\n+        with self.assertRaises(InvalidFilterException) as exp:\n+            apply_filter('unknown', ['args'])\n+\n+        message = str(exp.exception)\n+        self.assertEqual(\"'unknown' is an invalid filter. Available filters: \"\n+                         + ', '.join(sorted(available_filters)), message)\n+\n+    def test_apply_filters_exception(self):\n+        with self.assertRaises(InvalidFilterException) as exp:\n+            apply_filters([['language', 'C', 'Python'],\n+                           ['unknown', 'args']])\n+\n+        message = str(exp.exception)\n+        self.assertEqual(\"'unknown' is an invalid filter. Available filters: \"\n+                         + ', '.join(sorted(available_filters)), message)\n+\n+    def test_is_valid_filter(self):\n+        wrong_filter_result = is_valid_filter('check')\n+        right_filter_result = is_valid_filter('can_detect')\n+        self.assertFalse(wrong_filter_result)\n+        self.assertTrue(right_filter_result)\n+\n+    def test_filter_section_bears(self):\n+        local_bears = get_all_bears()[0]\n+        filter_args = {'c', 'java'}\n+        result_for_filter_section = _filter_section_bears(\n+            local_bears, filter_args, 'language')\n+        self.assertIsNotNone(result_for_filter_section)\n+\n+    def test_apply_filter(self):\n+        apply_filter_result = apply_filter('language', ['c', 'java'])\n+        self.assertIsNotNone(apply_filter_result)\n+\n+    def test_apply_filters(self):\n+        apply_filters_result = apply_filters([['language', 'C', 'Python'],","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yMjM3MDM4Mw==","createdAt":"2018-04-17T07:28:19Z","content":"THUMBS_UP","user":{"login":"sangamcse","name":"Sangam Kumar"}}],"createdAt":"2018-04-17T06:43:16Z","lastEditedAt":null,"updatedAt":"2018-04-17T06:43:16Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1527959184000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5317","number":5317,"title":".travis.yml: Skip unsupported on pull requests","body":"The jobs for unsupported platforms 2.7 & 3.3 do not need to run\nso frequently, and any breakages are usually related to upstream\ndropping support for 2.7 or 3.3, rather than a local problem.\nThe master builds will break, and usually we'll need to pin\nsomething to get around the problem.  Ultimately, failure to\nverify that these old versions fail in a predictable manner\nshould not prevent us adding new features or dependencies.\nCloses #4323\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use cobot mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":11,"createdAt":"2018-04-06T05:02:50Z","updatedAt":"2018-06-02T17:06:24Z","closedAt":"2018-04-07T07:20:35Z","state":"merged","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5317","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDM3OTQzNjk3OA==","url":"https://github.com/coala/coala/pull/5317#issuecomment-379436978","bodyText":"reack 4f65557","diffHunk":null,"author":{"login":"adtac","avatarUrl":"https://avatars2.githubusercontent.com/u/7521600?v=4","name":"Adhityaa"},"createdAt":"2018-04-07T06:43:07Z","lastEditedAt":null,"updatedAt":"2018-04-07T06:43:07Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1523008588000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5322","number":5322,"title":"setup.py: Revert use of invalid classifier","body":"This fixes the invalid classifier Python :: 3.4.4 to Python :: 3.4 which is valid according to https://pypi.python.org/pypi?%3Aaction=list_classifiers\nCloses #5318\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use cobot mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":5,"createdAt":"2018-04-06T09:36:47Z","updatedAt":"2018-04-06T09:56:28Z","closedAt":"2018-04-06T09:56:28Z","state":"merged","user":{"login":"tadityar","avatarUrl":"https://avatars1.githubusercontent.com/u/7445868?v=4"},"owner":{"login":"tadityar","avatarUrl":"https://avatars1.githubusercontent.com/u/7445868?v=4"},"assignee":{"login":"tadityar","avatarUrl":"https://avatars1.githubusercontent.com/u/7445868?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"importance/high","color":"eb6420"},{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"00DE0F"},{"name":"type/bug","color":"e11d21"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5322","comments":[]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1527959198000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5323","number":5323,"title":"PULL_REQUEST_TEMPLATE.md: Change cobot to corobo","body":"Closes #5314\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":4,"createdAt":"2018-04-06T10:29:01Z","updatedAt":"2018-06-02T17:06:38Z","closedAt":"2018-04-06T10:50:56Z","state":"merged","user":{"login":"HizkiFW","avatarUrl":"https://avatars3.githubusercontent.com/u/7418049?v=4"},"owner":{"login":"HizkiFW","avatarUrl":"https://avatars3.githubusercontent.com/u/7418049?v=4"},"assignee":{"login":"HizkiFW","avatarUrl":"https://avatars3.githubusercontent.com/u/7418049?v=4"},"labels":[{"name":"area/CI","color":"eb6420"},{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5323","comments":[]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1534079852000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5324","number":5324,"title":"PersistentHash: Preserve Order","body":"Task objects are now sorted first before\ncomputing their persistent hash\nCloses #5188\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":10,"createdAt":"2018-04-06T12:07:02Z","updatedAt":"2018-08-12T13:17:32Z","closedAt":"2018-08-12T13:17:27Z","state":"merged","user":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4"},"owner":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4"},"assignee":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4"},"labels":[{"name":"area/core","color":"eb6420"},{"name":"difficulty/low","color":"207de5"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5324","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3OTc0MDgzMg==","url":"https://github.com/coala/coala/pull/5324#discussion_r179740832","bodyText":"unrelated change.\ncreate a newcomer issue.\nhelp others get involved.","diffHunk":"@@ -10,10 +55,14 @@ def persistent_hash(obj):\n     hash the byte-stream. The hashing algorithm used is SHA-1.\n \n     :param obj:\n-        The object to calculate the persistent hash for.\n+            The object to calculate the persistent hash for.","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-04-06T12:21:46Z","lastEditedAt":null,"updatedAt":"2018-04-06T12:21:46Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3OTc0MjAyOQ==","url":"https://github.com/coala/coala/pull/5324#discussion_r179742029","bodyText":"create a newcomer issue.\n\nI'm sorry I didn't get you, its not merged yet, how can I create a newcomer issue?\ncan't I just amend it, myself?","diffHunk":"@@ -10,10 +55,14 @@ def persistent_hash(obj):\n     hash the byte-stream. The hashing algorithm used is SHA-1.\n \n     :param obj:\n-        The object to calculate the persistent hash for.\n+            The object to calculate the persistent hash for.","author":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4","name":"Palash Nigam"},"createdAt":"2018-04-06T12:27:38Z","lastEditedAt":null,"updatedAt":"2018-04-06T12:27:38Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3OTkxNzc4OA==","url":"https://github.com/coala/coala/pull/5324#discussion_r179917788","bodyText":"is this change useful?  if so, create a newcomer issue for someone else to fix it.","diffHunk":"@@ -10,10 +55,14 @@ def persistent_hash(obj):\n     hash the byte-stream. The hashing algorithm used is SHA-1.\n \n     :param obj:\n-        The object to calculate the persistent hash for.\n+            The object to calculate the persistent hash for.","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-04-07T14:16:38Z","lastEditedAt":null,"updatedAt":"2018-04-07T14:16:38Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3OTkxNzc5OQ==","url":"https://github.com/coala/coala/pull/5324#discussion_r179917799","bodyText":"(if not, yes, remove it)","diffHunk":"@@ -10,10 +55,14 @@ def persistent_hash(obj):\n     hash the byte-stream. The hashing algorithm used is SHA-1.\n \n     :param obj:\n-        The object to calculate the persistent hash for.\n+            The object to calculate the persistent hash for.","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-04-07T14:16:58Z","lastEditedAt":null,"updatedAt":"2018-04-07T14:16:58Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3OTkyMTI1OA==","url":"https://github.com/coala/coala/pull/5324#discussion_r179921258","bodyText":"No it isn't really useful. I don't think a newcomer would benefit much from removing a couple of whitespaces. I will amend it the next time I push.","diffHunk":"@@ -10,10 +55,14 @@ def persistent_hash(obj):\n     hash the byte-stream. The hashing algorithm used is SHA-1.\n \n     :param obj:\n-        The object to calculate the persistent hash for.\n+            The object to calculate the persistent hash for.","author":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4","name":"Palash Nigam"},"createdAt":"2018-04-07T16:35:46Z","lastEditedAt":"2018-04-08T10:49:39Z","updatedAt":"2018-04-08T10:49:39Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1523177339000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5325","number":5325,"title":"requirements.txt: setuptools>=21.0.0 changed to setuptools>=21.","body":"setuptools>=21.0.0 was redundant.\nSo, it is changed to setuptools>=21 in this commit.\nCloses #5176","comments":8,"createdAt":"2018-04-06T14:23:58Z","updatedAt":"2018-04-08T08:48:59Z","closedAt":null,"state":"open","user":{"login":"himanshuc3","avatarUrl":"https://avatars3.githubusercontent.com/u/19166045?v=4"},"owner":{"login":"himanshuc3","avatarUrl":"https://avatars3.githubusercontent.com/u/19166045?v=4"},"assignee":{"login":"himanshuc3","avatarUrl":"https://avatars3.githubusercontent.com/u/19166045?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"},{"name":"importance/low","color":"70E870"},{"name":"process/wip","color":"fbca04"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5325","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDM3OTUzMjYxMw==","url":"https://github.com/coala/coala/pull/5325#issuecomment-379532613","bodyText":"You'll need to fix .misc/check_setuptools.py also","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-04-08T08:48:59Z","lastEditedAt":null,"updatedAt":"2018-04-08T08:48:59Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1523039542000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5327","number":5327,"title":".coafile: Add YAML linter","body":"This will lint any YAML files that might be added in the future.\nCloses #5326\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":7,"createdAt":"2018-04-06T15:23:11Z","updatedAt":"2018-04-06T18:32:22Z","closedAt":"2018-04-06T18:32:22Z","state":"merged","user":{"login":"HizkiFW","avatarUrl":"https://avatars3.githubusercontent.com/u/7418049?v=4"},"owner":{"login":"HizkiFW","avatarUrl":"https://avatars3.githubusercontent.com/u/7418049?v=4"},"assignee":{"login":"HizkiFW","avatarUrl":"https://avatars3.githubusercontent.com/u/7418049?v=4"},"labels":[{"name":"area/CI","color":"eb6420"},{"name":"difficulty/low","color":"207de5"},{"name":"importance/low","color":"70E870"},{"name":"importance/medium","color":"fbca04"},{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5327","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3OTc5NTY1NA==","url":"https://github.com/coala/coala/pull/5327#discussion_r179795654","bodyText":"see #4876","diffHunk":"@@ -1,14 +1,12 @@\n-install:","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-04-06T15:34:20Z","lastEditedAt":null,"updatedAt":"2018-04-06T15:34:20Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3OTc5NjI0Mg==","url":"https://github.com/coala/coala/pull/5327#discussion_r179796242","bodyText":"Whoops, accidentally removed that one","diffHunk":"@@ -1,14 +1,12 @@\n-install:","author":{"login":"HizkiFW","avatarUrl":"https://avatars3.githubusercontent.com/u/7418049?v=4","name":"Hizkia Felix"},"createdAt":"2018-04-06T15:36:33Z","lastEditedAt":null,"updatedAt":"2018-04-06T15:36:33Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3OTc5OTU0Mg==","url":"https://github.com/coala/coala/pull/5327#discussion_r179799542","bodyText":"no benefit in fixing this file.  it needs to be deleted anyway  #5328  ; so do that one first","diffHunk":"@@ -8,7 +8,8 @@ docker:\n merge:","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-04-06T15:48:24Z","lastEditedAt":null,"updatedAt":"2018-04-06T15:48:24Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1523241596000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5339","number":5339,"title":".travis.yml : Add python 3.4.3 check","body":"Adds python 3.4.3 unsupported check to Travis CI\nCloses #5319\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":15,"createdAt":"2018-04-08T07:18:58Z","updatedAt":"2018-04-09T02:39:56Z","closedAt":"2018-04-09T00:00:50Z","state":"merged","user":{"login":"Hori75","avatarUrl":"https://avatars0.githubusercontent.com/u/31226068?v=4"},"owner":{"login":"Hori75","avatarUrl":"https://avatars0.githubusercontent.com/u/31226068?v=4"},"assignee":{"login":"Hori75","avatarUrl":"https://avatars0.githubusercontent.com/u/31226068?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"},{"name":"importance/medium","color":"fbca04"},{"name":"size/XS","color":"00DE0F"},{"name":"type/bug","color":"e11d21"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5339","comments":[]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1528545678000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5344","number":5344,"title":"setup.py: Remove man pages on Windows","body":"man/man1 is removed for Windows as it does nothing.\nFixes #5320\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":7,"createdAt":"2018-04-08T15:21:50Z","updatedAt":"2018-06-09T12:01:18Z","closedAt":"2018-04-08T15:38:34Z","state":"merged","user":{"login":"nikitavbv","avatarUrl":"https://avatars1.githubusercontent.com/u/24596921?v=4"},"owner":{"login":"nikitavbv","avatarUrl":"https://avatars1.githubusercontent.com/u/24596921?v=4"},"assignee":{"login":"nikitavbv","avatarUrl":"https://avatars1.githubusercontent.com/u/24596921?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"platform/windows","color":"0052cc"},{"name":"process/approved","color":"009800"},{"name":"size/XS","color":"00DE0F"},{"name":"type/bug","color":"e11d21"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5344","comments":[]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1527959184000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5347","number":5347,"title":"Linter.py: Support colorised output from linters","body":"New option strip_ansi implemented that strips ansi characters that\nlead to colored output of linters.\nCloses #5281\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":17,"createdAt":"2018-04-08T22:54:02Z","updatedAt":"2018-06-02T17:06:24Z","closedAt":"2018-04-16T22:53:12Z","state":"merged","user":{"login":"aashraybhandar1","avatarUrl":"https://avatars0.githubusercontent.com/u/12982393?v=4"},"owner":{"login":"aashraybhandar1","avatarUrl":"https://avatars0.githubusercontent.com/u/12982393?v=4"},"assignee":{"login":"aashraybhandar1","avatarUrl":"https://avatars0.githubusercontent.com/u/12982393?v=4"},"labels":[{"name":"area/lintbears","color":"ededed"},{"name":"difficulty/medium","color":"0052cc"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5347","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3OTk2OTg4Mw==","url":"https://github.com/coala/coala/pull/5347#discussion_r179969883","bodyText":"Use dict.get","diffHunk":"@@ -668,7 +670,11 @@ def run(self, filename=None, file=None, **kwargs):\n                     (options['use_stdout'], options['use_stderr'])))\n                 if len(output) == 1:\n                     output = output[0]\n-\n+                try:","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-04-09T01:08:35Z","lastEditedAt":null,"updatedAt":"2018-04-09T01:08:35Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MDk5Njg1OA==","url":"https://github.com/coala/coala/pull/5347#discussion_r180996858","bodyText":"@aashraybhandar1 , remove the trailing whitespace and then run the tests again 😄","diffHunk":"@@ -38,7 +39,8 @@ def _prepare_options(options, bear_class):\n                        'config_suffix',\n                        'executable_check_fail_info',\n                        'prerequisite_check_command',\n-                       'global_bear'}\n+                       'global_bear',\n+                       'strip_ansi'}","author":{"login":"random-access7","avatarUrl":"https://avatars3.githubusercontent.com/u/20523845?v=4","name":"Aabhaas Vaish"},"createdAt":"2018-04-12T08:08:59Z","lastEditedAt":"2018-04-12T08:09:56Z","updatedAt":"2018-04-12T08:09:56Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MTAwNDY3NQ==","url":"https://github.com/coala/coala/pull/5347#discussion_r181004675","bodyText":"@random-access7  had already made the change ...  The git mate test is passing","diffHunk":"@@ -38,7 +39,8 @@ def _prepare_options(options, bear_class):\n                        'config_suffix',\n                        'executable_check_fail_info',\n                        'prerequisite_check_command',\n-                       'global_bear'}\n+                       'global_bear',\n+                       'strip_ansi'}","author":{"login":"aashraybhandar1","avatarUrl":"https://avatars0.githubusercontent.com/u/12982393?v=4","name":null},"createdAt":"2018-04-12T08:38:00Z","lastEditedAt":null,"updatedAt":"2018-04-12T08:38:00Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM3OTU5Mjk2Mg==","url":"https://github.com/coala/coala/pull/5347#issuecomment-379592962","bodyText":"Please do proper rebasing.  see http://coala.io/git","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-04-08T23:54:49Z","lastEditedAt":null,"updatedAt":"2018-04-08T23:54:49Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM3OTYzNTQxNQ==","url":"https://github.com/coala/coala/pull/5347#issuecomment-379635415","bodyText":"@jayvdb  done","diffHunk":null,"author":{"login":"aashraybhandar1","avatarUrl":"https://avatars0.githubusercontent.com/u/12982393?v=4","name":null},"createdAt":"2018-04-09T05:22:20Z","lastEditedAt":null,"updatedAt":"2018-04-09T05:22:20Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM4MDM4OTg2Ng==","url":"https://github.com/coala/coala/pull/5347#issuecomment-380389866","bodyText":"@random-access7  Will do","diffHunk":null,"author":{"login":"aashraybhandar1","avatarUrl":"https://avatars0.githubusercontent.com/u/12982393?v=4","name":null},"createdAt":"2018-04-11T09:33:51Z","lastEditedAt":null,"updatedAt":"2018-04-11T09:33:51Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM4MDU5MDYwNw==","url":"https://github.com/coala/coala/pull/5347#issuecomment-380590607","bodyText":"@random-access7  Done .. builds seem to broken for some reason","diffHunk":null,"author":{"login":"aashraybhandar1","avatarUrl":"https://avatars0.githubusercontent.com/u/12982393?v=4","name":null},"createdAt":"2018-04-11T20:48:06Z","lastEditedAt":null,"updatedAt":"2018-04-11T20:48:06Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM4MTQxMDE2Ng==","url":"https://github.com/coala/coala/pull/5347#issuecomment-381410166","bodyText":"Ah, the first PR hit by moban.\nThe locations of requirements has changed to .moban.yaml.  It needs to be updated there, and you would normally use moban to update requirements.txt but you already have the new requirement there.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-04-15T14:19:37Z","lastEditedAt":null,"updatedAt":"2018-04-15T14:19:37Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM4MTQxMDU2Mw==","url":"https://github.com/coala/coala/pull/5347#issuecomment-381410563","bodyText":"@jayvdb  Should I make changes only in .moban.yaml and remove it from requirements.txt ?","diffHunk":null,"author":{"login":"aashraybhandar1","avatarUrl":"https://avatars0.githubusercontent.com/u/12982393?v=4","name":null},"createdAt":"2018-04-15T14:25:38Z","lastEditedAt":null,"updatedAt":"2018-04-15T14:25:38Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1528547300000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5349","number":5349,"title":"Linter_Bears_Advanced.rst: Fixed indentation","body":"Fixed indentation on line 123.\nCloses #5337","comments":9,"createdAt":"2018-04-09T01:37:46Z","updatedAt":"2018-06-09T12:28:20Z","closedAt":"2018-04-14T15:41:36Z","state":"merged","user":{"login":"Polcat000","avatarUrl":"https://avatars0.githubusercontent.com/u/19295948?v=4"},"owner":{"login":"Polcat000","avatarUrl":"https://avatars0.githubusercontent.com/u/19295948?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"process/approved","color":"009800"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5349","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3OTk3MjAzNw==","url":"https://github.com/coala/coala/pull/5349#discussion_r179972037","bodyText":"No indentation for class MyBear: please. This line was fine previously.","diffHunk":"@@ -119,12 +119,12 @@ JSON output is also very common:\n ::\n \n     @linter(executable='my_tool')\n-    class MyBear:\n-    def process_output(self, output, filename, file):\n-        for issue in json.loads(output):\n-            yield Result.from_values(origin=self,\n-                                     message=issue[\"message\"],\n-                                     file=filename)\n+        class MyBear:","author":{"login":"sangamcse","avatarUrl":"https://avatars2.githubusercontent.com/u/26381717?v=4","name":"Sangam Kumar"},"createdAt":"2018-04-09T01:46:51Z","lastEditedAt":"2018-04-10T23:11:10Z","updatedAt":"2018-04-10T23:11:10Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE3OTk3MjA5NA==","url":"https://github.com/coala/coala/pull/5349#discussion_r179972094","bodyText":"match the indentation with origin=self","diffHunk":"@@ -119,12 +119,12 @@ JSON output is also very common:\n ::\n \n     @linter(executable='my_tool')\n-    class MyBear:\n-    def process_output(self, output, filename, file):\n-        for issue in json.loads(output):\n-            yield Result.from_values(origin=self,\n-                                     message=issue[\"message\"],\n-                                     file=filename)\n+        class MyBear:\n+            def process_output(self, output, filename, file):\n+                for issue in json.loads(output):\n+                    yield Result.from_values(origin=self,\n+                                            message=issue[\"message\"],","author":{"login":"sangamcse","avatarUrl":"https://avatars2.githubusercontent.com/u/26381717?v=4","name":"Sangam Kumar"},"createdAt":"2018-04-09T01:47:36Z","lastEditedAt":null,"updatedAt":"2018-04-09T01:47:36Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MDI1ODIzNA==","url":"https://github.com/coala/coala/pull/5349#discussion_r180258234","bodyText":"Sorry @sangamcse  I am probably way out of my depth with this PR, but I wanted a challenge so I am using it to learn. I have been trying to go through the docs regarding .rst files as they pertain to indentation and haven't found much. Am I correct in assuming that if \"class MyBear:\" stays in it's original position, then the remaining indentation is correct? Except for the message=issue not aligning with origin=self?","diffHunk":"@@ -119,12 +119,12 @@ JSON output is also very common:\n ::\n \n     @linter(executable='my_tool')\n-    class MyBear:\n-    def process_output(self, output, filename, file):\n-        for issue in json.loads(output):\n-            yield Result.from_values(origin=self,\n-                                     message=issue[\"message\"],\n-                                     file=filename)\n+        class MyBear:","author":{"login":"Polcat000","avatarUrl":"https://avatars0.githubusercontent.com/u/19295948?v=4","name":"Andy"},"createdAt":"2018-04-09T23:19:09Z","lastEditedAt":"2018-04-10T01:25:01Z","updatedAt":"2018-04-10T01:25:01Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM3OTYwNDI2OQ==","url":"https://github.com/coala/coala/pull/5349#issuecomment-379604269","bodyText":"Please go through the commit guidelines http://api.coala.io/en/latest/Developers/Writing_Good_Commits.html.\nPlease use git commit --amend and git push -f after completing all requested changes.\nPing me if you are getting any trouble.","diffHunk":null,"author":{"login":"sangamcse","avatarUrl":"https://avatars2.githubusercontent.com/u/26381717?v=4","name":"Sangam Kumar"},"createdAt":"2018-04-09T01:51:30Z","lastEditedAt":null,"updatedAt":"2018-04-09T01:51:30Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1527959182000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5350","number":5350,"title":"linter: Add new parameters to normalize numbers","body":"Control line-index and column-index conversion\nto handle zero-based and one-based conventions.\nCloses #5346\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":4,"createdAt":"2018-04-09T04:05:57Z","updatedAt":"2018-06-02T17:06:22Z","closedAt":"2018-04-22T00:47:26Z","state":"merged","user":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4"},"owner":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4"},"assignee":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4"},"labels":[{"name":"area/lintbears","color":"ededed"},{"name":"difficulty/low","color":"207de5"},{"name":"size/S","color":"B1CF0A"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5350","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjkzMjM1Ng==","url":"https://github.com/coala/coala/pull/5350#discussion_r182932356","bodyText":"dont abuse strings like this.\nthere are four possible scenarios, being the combinations of.\n\nincrement line numbers, or dont touch them.\nincrement column numbers, or dont touch them.\n\nthose should be two meaningful arg names, bool obviously.\narg names are checked by the Python runtime, providing consistent error messages.  the user documentation becomes easy.  etc. etc.","diffHunk":"@@ -43,6 +44,15 @@ def _prepare_options(options, bear_class):\n     if not options['use_stdout'] and not options['use_stderr']:\n         raise ValueError('No output streams provided at all.')\n \n+    if options['convert_index']:","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-04-20T02:29:54Z","lastEditedAt":null,"updatedAt":"2018-04-20T02:29:54Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1523258214000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5351","number":5351,"title":"ConsoleInteraction.py: Improve invalid option error message","body":"This adds color and a differnt prefix symbol to the invalid option error message to better differentiate it from regular output\nCloses #5225\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":4,"createdAt":"2018-04-09T07:01:31Z","updatedAt":"2018-04-09T07:16:54Z","closedAt":"2018-04-09T07:16:54Z","state":"closed","user":{"login":"kwsohn","avatarUrl":"https://avatars0.githubusercontent.com/u/17075274?v=4"},"owner":{"login":"kwsohn","avatarUrl":"https://avatars0.githubusercontent.com/u/17075274?v=4"},"assignee":{"login":"kwsohn","avatarUrl":"https://avatars0.githubusercontent.com/u/17075274?v=4"},"labels":[{"name":"area/CLI","color":"006b75"},{"name":"difficulty/low","color":"207de5"},{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5351","comments":[]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1531983512000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5352","number":5352,"title":"ConsoleInteraction.py: Improve error message","body":"This adds color and a new symbol to enhance invalid option error message\nCloses #5225\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":17,"createdAt":"2018-04-09T07:19:08Z","updatedAt":"2018-07-19T06:58:32Z","closedAt":"2018-07-19T06:58:24Z","state":"merged","user":{"login":"kwsohn","avatarUrl":"https://avatars0.githubusercontent.com/u/17075274?v=4"},"owner":{"login":"kwsohn","avatarUrl":"https://avatars0.githubusercontent.com/u/17075274?v=4"},"assignee":{"login":"kwsohn","avatarUrl":"https://avatars0.githubusercontent.com/u/17075274?v=4"},"labels":[{"name":"area/CLI","color":"006b75"},{"name":"difficulty/low","color":"207de5"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5352","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MDI5ODAwNA==","url":"https://github.com/coala/coala/pull/5352#discussion_r180298004","bodyText":"why are you making changes here?","diffHunk":"@@ -29,12 +20,13 @@ language = Python\n remove_all_unused_imports = true\n \n [autopep8]\n-bears = PEP8Bear, PycodestyleBear\n+bears += PycodestyleBear","author":{"login":"anctartica","avatarUrl":"https://avatars0.githubusercontent.com/u/7020962?v=4","name":""},"reactions":[],"createdAt":"2018-04-10T05:05:46Z","lastEditedAt":null,"updatedAt":"2018-04-10T05:05:46Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MDI5ODE4OQ==","url":"https://github.com/coala/coala/pull/5352#discussion_r180298189","bodyText":"this issue doesn't involve making changes to .coafile. Rather than fixing that PEP8Bear showed previously you have simply removed it.","diffHunk":"@@ -29,12 +20,13 @@ language = Python\n remove_all_unused_imports = true\n \n [autopep8]\n-bears = PEP8Bear, PycodestyleBear\n+bears += PycodestyleBear","author":{"login":"anctartica","avatarUrl":"https://avatars0.githubusercontent.com/u/7020962?v=4","name":""},"reactions":[{"id":"MDg6UmVhY3Rpb24yMjAzMzQwNg==","createdAt":"2018-04-10T05:39:26Z","content":"THUMBS_UP","user":{"login":"Mohit17067","name":"Mohit Juneja"}}],"createdAt":"2018-04-10T05:07:12Z","lastEditedAt":"2018-04-10T05:07:50Z","updatedAt":"2018-04-10T05:07:50Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MDU4MjU1NA==","url":"https://github.com/coala/coala/pull/5352#discussion_r180582554","bodyText":"Okay, sure thing. I will undo my changes to the coafile^","diffHunk":"@@ -29,12 +20,13 @@ language = Python\n remove_all_unused_imports = true\n \n [autopep8]\n-bears = PEP8Bear, PycodestyleBear\n+bears += PycodestyleBear","author":{"login":"kwsohn","avatarUrl":"https://avatars0.githubusercontent.com/u/17075274?v=4","name":"Kwan Sohn"},"reactions":[],"createdAt":"2018-04-10T22:10:21Z","lastEditedAt":null,"updatedAt":"2018-04-10T22:10:21Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MTE5NDczNw==","url":"https://github.com/coala/coala/pull/5352#discussion_r181194737","bodyText":"remove this blankline","diffHunk":"@@ -137,3 +137,4 @@ cs_keywords =\n bears = KeywordBear\n language = python 3\n keywords = urlopen\n+","author":{"login":"anctartica","avatarUrl":"https://avatars0.githubusercontent.com/u/7020962?v=4","name":""},"reactions":[],"createdAt":"2018-04-12T19:23:19Z","lastEditedAt":"2018-04-12T19:26:31Z","updatedAt":"2018-04-12T19:26:31Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MTE5NDg1NQ==","url":"https://github.com/coala/coala/pull/5352#discussion_r181194855","bodyText":"no need for this change","diffHunk":"@@ -664,22 +667,22 @@ def choose_action(console_printer, actions, apply_single=False):\n                 actions_desc_len = len(actions_desc)\n                 if c.isnumeric():\n                     for i, action in enumerate(actions, 0):\n-                        c = int(c)\n-                        if i == c:\n+                        if i == int(c):","author":{"login":"anctartica","avatarUrl":"https://avatars0.githubusercontent.com/u/7020962?v=4","name":""},"reactions":[],"createdAt":"2018-04-12T19:23:49Z","lastEditedAt":null,"updatedAt":"2018-04-12T19:23:49Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MTE5NTA4Mw==","url":"https://github.com/coala/coala/pull/5352#discussion_r181195083","bodyText":"don't change this","diffHunk":"@@ -664,22 +667,22 @@ def choose_action(console_printer, actions, apply_single=False):\n                 actions_desc_len = len(actions_desc)\n                 if c.isnumeric():\n                     for i, action in enumerate(actions, 0):\n-                        c = int(c)\n-                        if i == c:\n+                        if i == int(c):\n                             actions_desc.append(action.desc)\n                             actions_name.append(action.name)\n                             break\n                 elif c.isalpha():\n                     c = c.upper()\n-                    c = '(' + c + ')'\n+                    str_c = '(' + c + ')'","author":{"login":"anctartica","avatarUrl":"https://avatars0.githubusercontent.com/u/7020962?v=4","name":""},"reactions":[],"createdAt":"2018-04-12T19:24:45Z","lastEditedAt":null,"updatedAt":"2018-04-12T19:24:45Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MTE5NTEzMQ==","url":"https://github.com/coala/coala/pull/5352#discussion_r181195131","bodyText":"don't change this","diffHunk":"@@ -664,22 +667,22 @@ def choose_action(console_printer, actions, apply_single=False):\n                 actions_desc_len = len(actions_desc)\n                 if c.isnumeric():\n                     for i, action in enumerate(actions, 0):\n-                        c = int(c)\n-                        if i == c:\n+                        if i == int(c):\n                             actions_desc.append(action.desc)\n                             actions_name.append(action.name)\n                             break\n                 elif c.isalpha():\n                     c = c.upper()\n-                    c = '(' + c + ')'\n+                    str_c = '(' + c + ')'\n                     for i, action in enumerate(actions, 1):\n-                        if c in action.desc:\n+                        if str_c in action.desc:","author":{"login":"anctartica","avatarUrl":"https://avatars0.githubusercontent.com/u/7020962?v=4","name":""},"reactions":[],"createdAt":"2018-04-12T19:24:57Z","lastEditedAt":null,"updatedAt":"2018-04-12T19:24:57Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MTE5NzI2NA==","url":"https://github.com/coala/coala/pull/5352#discussion_r181197264","bodyText":"Use a color name. look at the other variables defined here.","diffHunk":"@@ -78,6 +78,9 @@ def highlight_text(no_color, text, style, lexer=TextLexer()):\n STR_PROJECT_WIDE = 'Project wide:'\n STR_ENTER_NUMBER = 'Enter number (Ctrl-{} to exit): '.format(\n     'Z' if platform.system() == 'Windows' else 'D')\n+STR_ENDC = '\\033[0m'\n+STR_INVALID_OPTION = '*** Invalid Option: ({}) ***\\n'\n+WARNING_COLOR = '\\033[91m'","author":{"login":"anctartica","avatarUrl":"https://avatars0.githubusercontent.com/u/7020962?v=4","name":""},"reactions":[],"createdAt":"2018-04-12T19:33:14Z","lastEditedAt":null,"updatedAt":"2018-04-12T19:33:14Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MTE5NzYzNQ==","url":"https://github.com/coala/coala/pull/5352#discussion_r181197635","bodyText":"This is wrong. Look at how color is passed to console_printer at other places in the file.","diffHunk":"@@ -664,22 +667,22 @@ def choose_action(console_printer, actions, apply_single=False):\n                 actions_desc_len = len(actions_desc)\n                 if c.isnumeric():\n                     for i, action in enumerate(actions, 0):\n-                        c = int(c)\n-                        if i == c:\n+                        if i == int(c):\n                             actions_desc.append(action.desc)\n                             actions_name.append(action.name)\n                             break\n                 elif c.isalpha():\n                     c = c.upper()\n-                    c = '(' + c + ')'\n+                    str_c = '(' + c + ')'\n                     for i, action in enumerate(actions, 1):\n-                        if c in action.desc:\n+                        if str_c in action.desc:\n                             actions_desc.append(action.desc)\n                             actions_name.append(action.name)\n                             break\n                 if actions_desc_len == len(actions_desc):\n-                    console_printer.print(format_lines(\n-                        'Please enter a valid letter.', symbol='['))\n+                    console_printer.print(WARNING_COLOR +\n+                                          STR_INVALID_OPTION.format(c) +","author":{"login":"anctartica","avatarUrl":"https://avatars0.githubusercontent.com/u/7020962?v=4","name":""},"reactions":[],"createdAt":"2018-04-12T19:34:31Z","lastEditedAt":"2018-04-12T19:35:14Z","updatedAt":"2018-04-12T19:35:14Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM3OTg3ODY0Nw==","url":"https://github.com/coala/coala/pull/5352#issuecomment-379878647","bodyText":"Hey @Mohit17067 ,\nDo you by chance have any idea why the CI builds are failing? I tested running Coala locally on a sample program before pushing my commits, and there were no issues.\nAlso, was I meant to commit the resolved merge conflicts with Master? If I wasn't, I'll go ahead and revert that. Thanks for your help!","diffHunk":null,"author":{"login":"kwsohn","avatarUrl":"https://avatars0.githubusercontent.com/u/17075274?v=4","name":"Kwan Sohn"},"reactions":[],"createdAt":"2018-04-09T20:11:21Z","lastEditedAt":"2018-04-09T20:14:31Z","updatedAt":"2018-04-09T20:14:31Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM4MDI2NzE0Mw==","url":"https://github.com/coala/coala/pull/5352#issuecomment-380267143","bodyText":"@anctartica @Mohit17067 It seems that the CI builds are failing due to the .coafile (or lack of). I've taken the .coafile from Master and I've added that to this commit.","diffHunk":null,"author":{"login":"kwsohn","avatarUrl":"https://avatars0.githubusercontent.com/u/17075274?v=4","name":"Kwan Sohn"},"reactions":[],"createdAt":"2018-04-10T22:25:37Z","lastEditedAt":null,"updatedAt":"2018-04-10T22:25:37Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM4MDY4ODY5MQ==","url":"https://github.com/coala/coala/pull/5352#issuecomment-380688691","bodyText":"There is some issue with PycodestyleBear throwing errors. This is not related to your code.","diffHunk":null,"author":{"login":"anctartica","avatarUrl":"https://avatars0.githubusercontent.com/u/7020962?v=4","name":""},"reactions":[],"createdAt":"2018-04-12T06:03:00Z","lastEditedAt":null,"updatedAt":"2018-04-12T06:03:00Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM4MDg5ODU4Nw==","url":"https://github.com/coala/coala/pull/5352#issuecomment-380898587","bodyText":"@anctartica Sounds good. Is there anything more I need to do on my end to get this pull request accepted then?","diffHunk":null,"author":{"login":"kwsohn","avatarUrl":"https://avatars0.githubusercontent.com/u/17075274?v=4","name":"Kwan Sohn"},"reactions":[],"createdAt":"2018-04-12T18:19:16Z","lastEditedAt":null,"updatedAt":"2018-04-12T18:19:16Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM4MTY0ODMxMQ==","url":"https://github.com/coala/coala/pull/5352#issuecomment-381648311","bodyText":"@RaiVaibhav\nEDIT:  Didn't know that was a gitmate command. Thank you @rohanrk for the clarification.","diffHunk":null,"author":{"login":"kwsohn","avatarUrl":"https://avatars0.githubusercontent.com/u/17075274?v=4","name":"Kwan Sohn"},"reactions":[],"createdAt":"2018-04-16T15:36:06Z","lastEditedAt":"2018-04-16T15:50:22Z","updatedAt":"2018-04-16T15:50:22Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM4MTY1MTY4Nw==","url":"https://github.com/coala/coala/pull/5352#issuecomment-381651687","bodyText":"@kwsohn unack is a command for GitMate, the bot which manages PRs. GitMate can also rebase your branch (Do not push when this happens). I think they have to be on different comments though","diffHunk":null,"author":{"login":"rohanrk","avatarUrl":"https://avatars2.githubusercontent.com/u/11154862?v=4","name":"Rohan"},"reactions":[],"createdAt":"2018-04-16T15:45:46Z","lastEditedAt":null,"updatedAt":"2018-04-16T15:45:46Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM4MTY1NjU3OA==","url":"https://github.com/coala/coala/pull/5352#issuecomment-381656578","bodyText":"Yes @rohanrk, my bad it have to be on the different comment.","diffHunk":null,"author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"reactions":[],"createdAt":"2018-04-16T15:59:52Z","lastEditedAt":null,"updatedAt":"2018-04-16T15:59:52Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM4MzMwMTUwNA==","url":"https://github.com/coala/coala/pull/5352#issuecomment-383301504","bodyText":"needs rebase","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-04-21T14:33:26Z","lastEditedAt":null,"updatedAt":"2018-04-21T14:33:26Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1530194239000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5353","number":5353,"title":"WIP: .travis.yml: Reactivate osx job on master only","body":"Reactivates osx job, on master only, not to run on PRs.\nCloses #5348\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":4,"createdAt":"2018-04-09T07:32:44Z","updatedAt":"2018-06-28T13:57:19Z","closedAt":null,"state":"open","user":{"login":"Hori75","avatarUrl":"https://avatars0.githubusercontent.com/u/31226068?v=4"},"owner":{"login":"Hori75","avatarUrl":"https://avatars0.githubusercontent.com/u/31226068?v=4"},"assignee":{"login":"Hori75","avatarUrl":"https://avatars0.githubusercontent.com/u/31226068?v=4"},"labels":[{"name":"area/CI","color":"eb6420"},{"name":"difficulty/low","color":"207de5"},{"name":"importance/low","color":"70E870"},{"name":"process/wip","color":"fbca04"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5353","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MDA2OTM4OQ==","url":"https://github.com/coala/coala/pull/5353#discussion_r180069389","bodyText":"we need sudo: false here , and then add sudo: true in the definition of the osx job","diffHunk":"@@ -1,4 +1,3 @@\n-sudo: false","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-04-09T11:53:33Z","lastEditedAt":null,"updatedAt":"2018-04-09T11:53:33Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MDA2OTU0OQ==","url":"https://github.com/coala/coala/pull/5353#discussion_r180069549","bodyText":"I think this is not needed any more.  It was for llvm support, which has been moved to bears only.","diffHunk":"@@ -7,8 +6,16 @@ python:\n \n jobs:\n   include:\n-    # OSX build removed due to long build startup delays\n-    # Restore matrix job entry from d2d67fab to test OSX\n+    - os: osx\n+      osx_image: xcode6.4\n+      language: bash\n+      python: 3.6\n+      env:\n+        - DYLD_LIBRARY_PATH=/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-04-09T11:54:16Z","lastEditedAt":null,"updatedAt":"2018-04-09T11:54:16Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NzY4ODA5MA==","url":"https://github.com/coala/coala/pull/5353#discussion_r197688090","bodyText":"Why is it set to bash?","diffHunk":"@@ -35,8 +35,12 @@ jobs:\n       python: 3.6\n       if: branch = master AND type = push\n \n-    # OSX build removed due to long build startup delays\n-    # Restore matrix job entry from d2d67fab to test OSX\n+    - os: osx\n+      sudo: true\n+      python: 3.6\n+      language: bash","author":{"login":"bekicot","avatarUrl":"https://avatars0.githubusercontent.com/u/1826884?v=4","name":"Yana Agun Siswanto"},"createdAt":"2018-06-25T06:14:50Z","lastEditedAt":null,"updatedAt":"2018-06-25T06:14:50Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5ODEyMDI2MA==","url":"https://github.com/coala/coala/pull/5353#discussion_r198120260","bodyText":"https://travis-ci.org/Hori75/coala/jobs/396015861\nI have tried without setting it to bash and I got command not found errors","diffHunk":"@@ -35,8 +35,12 @@ jobs:\n       python: 3.6\n       if: branch = master AND type = push\n \n-    # OSX build removed due to long build startup delays\n-    # Restore matrix job entry from d2d67fab to test OSX\n+    - os: osx\n+      sudo: true\n+      python: 3.6\n+      language: bash","author":{"login":"Hori75","avatarUrl":"https://avatars0.githubusercontent.com/u/31226068?v=4","name":"William"},"createdAt":"2018-06-26T12:17:30Z","lastEditedAt":null,"updatedAt":"2018-06-26T12:17:30Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5ODQ2NjQ3NQ==","url":"https://github.com/coala/coala/pull/5353#discussion_r198466475","bodyText":"pip and python need to point to the python3 which is being installed.\nI think you need to add /usr/local/opt/python/libexec/bin to the PATH\nc.f.\nhttps://travis-ci.org/Hori75/coala/jobs/396904486#L1411\nthen these lines shouldnt be necessary\nsudo ln -sf $(which python3) $(which python)\nsudo ln -sf $(which pip3) $(which pip 2>/dev/null || echo /usr/bin/pip)","diffHunk":"@@ -35,8 +35,12 @@ jobs:\n       python: 3.6\n       if: branch = master AND type = push\n \n-    # OSX build removed due to long build startup delays\n-    # Restore matrix job entry from d2d67fab to test OSX\n+    - os: osx\n+      sudo: true\n+      python: 3.6\n+      language: bash","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-06-27T11:58:37Z","lastEditedAt":null,"updatedAt":"2018-06-27T11:58:37Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM3OTcyNjM4NA==","url":"https://github.com/coala/coala/pull/5353#issuecomment-379726384","bodyText":"Also can you show a build log with this job running (i.e. create a new fork on your travis-ci , and remove the restrictions so that it runs.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-04-09T11:55:28Z","lastEditedAt":null,"updatedAt":"2018-04-09T11:55:28Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM5OTc2MzcxOA==","url":"https://github.com/coala/coala/pull/5353#issuecomment-399763718","bodyText":"Osx build on test branch:\nhttps://travis-ci.org/Hori75/coala/builds/396022044","diffHunk":null,"author":{"login":"Hori75","avatarUrl":"https://avatars0.githubusercontent.com/u/31226068?v=4","name":"William"},"createdAt":"2018-06-24T15:10:25Z","lastEditedAt":null,"updatedAt":"2018-06-24T15:10:25Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM5OTg2NTk2OQ==","url":"https://github.com/coala/coala/pull/5353#issuecomment-399865969","bodyText":"Looks like the problem is unrelated to your changes. It is coming from pre deactivation.\nFrom the travis you shown. I think the error is because it tries to replace default python (python2) to brew installed python3. I tried several month ago in my mac to use python3 as default to call python and it causes problem. I would suggest to not doing it, but instead using pip3 install coala --user\nIt may fix the issue.","diffHunk":null,"author":{"login":"bekicot","avatarUrl":"https://avatars0.githubusercontent.com/u/1826884?v=4","name":"Yana Agun Siswanto"},"createdAt":"2018-06-25T07:59:56Z","lastEditedAt":null,"updatedAt":"2018-06-25T07:59:56Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQwMDY0NzY0NQ==","url":"https://github.com/coala/coala/pull/5353#issuecomment-400647645","bodyText":"The problems are in the OSX specific lines.  They worked previously (c.f. travis links found at #3380), but now they do not.  This is because Travis doesnt support Python3 on OSX, so we need to assist the 'bash' environment look like the 'python' Linux environments.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-06-27T12:03:27Z","lastEditedAt":null,"updatedAt":"2018-06-27T12:03:27Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1527959184000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5361","number":5361,"title":"coalib/bearlib/languages: import Markdown","body":"Closes #5360\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":9,"createdAt":"2018-04-10T16:56:59Z","updatedAt":"2018-06-02T17:06:24Z","closedAt":"2018-04-14T11:54:20Z","state":"merged","user":{"login":"anctartica","avatarUrl":"https://avatars0.githubusercontent.com/u/7020962?v=4"},"owner":{"login":"anctartica","avatarUrl":"https://avatars0.githubusercontent.com/u/7020962?v=4"},"labels":[{"name":"area/languages","color":"d4c5f9"},{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5361","comments":[]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1525400360000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5362","number":5362,"title":"coala_main.py: Changed Ctrl-Z to Ctrl-Z-Enter","body":"Closes #5254\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":2,"createdAt":"2018-04-10T18:30:50Z","updatedAt":"2018-05-04T02:19:20Z","closedAt":null,"state":"open","user":{"login":"guilherme-p","avatarUrl":"https://avatars1.githubusercontent.com/u/31377673?v=4"},"owner":{"login":"guilherme-p","avatarUrl":"https://avatars1.githubusercontent.com/u/31377673?v=4"},"labels":[{"name":"area/usability","color":"d4c5f9"},{"name":"difficulty/low","color":"207de5"},{"name":"platform/windows","color":"0052cc"},{"name":"process/wip","color":"fbca04"},{"name":"size/XS","color":"00DE0F"},{"name":"type/bug","color":"e11d21"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5362","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzIyMjg4NQ==","url":"https://github.com/coala/coala/pull/5362#discussion_r183222885","bodyText":"@guilherme-p @yzgyyang is there no way to exit the program in a single combination key stroke?","diffHunk":"@@ -29,7 +29,7 @@ def do_nothing(*args):\n \n \n STR_ENTER_NUMBER = 'Enter number (Ctrl-{} to exit): '.format(\n-    'Z' if platform.system() == 'Windows' else 'D')\n+    'Z-Enter' if platform.system() == 'Windows' else 'D')","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-04-22T00:58:11Z","lastEditedAt":null,"updatedAt":"2018-04-22T00:58:11Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NTY1NDk4Nw==","url":"https://github.com/coala/coala/pull/5362#discussion_r185654987","bodyText":"Since we need to press enter after Ctrl-Z to terminate the program, the message shouldn’t be ‘Ctrl-Z-Enter’ since it may confuse people to press the three keys as a combination. Also, I think we could consider use Ctrl-C in this case, although it doesn’t send an EOF to terminate the program, coala should behave the same in both cases.","diffHunk":"@@ -29,7 +29,7 @@ def do_nothing(*args):\n \n \n STR_ENTER_NUMBER = 'Enter number (Ctrl-{} to exit): '.format(\n-    'Z' if platform.system() == 'Windows' else 'D')\n+    'Z-Enter' if platform.system() == 'Windows' else 'D')","author":{"login":"yzgyyang","avatarUrl":"https://avatars0.githubusercontent.com/u/16748524?v=4","name":"Guangyuan (Charlie) Yang"},"createdAt":"2018-05-02T22:15:36Z","lastEditedAt":null,"updatedAt":"2018-05-02T22:15:36Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NTk4MDA1Mg==","url":"https://github.com/coala/coala/pull/5362#discussion_r185980052","bodyText":"Can you please leave a note on the issue explaining how you think we should solve the problem?","diffHunk":"@@ -29,7 +29,7 @@ def do_nothing(*args):\n \n \n STR_ENTER_NUMBER = 'Enter number (Ctrl-{} to exit): '.format(\n-    'Z' if platform.system() == 'Windows' else 'D')\n+    'Z-Enter' if platform.system() == 'Windows' else 'D')","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-05-04T02:19:19Z","lastEditedAt":null,"updatedAt":"2018-05-04T02:19:19Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM4MzMxOTQzMw==","url":"https://github.com/coala/coala/pull/5362#issuecomment-383319433","bodyText":"not for the future, no maintainer will merge a pr filed from master branch","diffHunk":null,"author":{"login":"newbazz","avatarUrl":"https://avatars1.githubusercontent.com/u/25884863?v=4","name":null},"createdAt":"2018-04-21T18:41:37Z","lastEditedAt":null,"updatedAt":"2018-04-21T18:41:37Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1523883263000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5363","number":5363,"title":"Linter_Bears_Advanced.rst: Added indentation","body":"Corrected indentation previously submitted\nCloses #5337","comments":2,"createdAt":"2018-04-10T22:46:14Z","updatedAt":"2018-04-16T12:54:23Z","closedAt":"2018-04-16T12:54:23Z","state":"closed","user":{"login":"Polcat000","avatarUrl":"https://avatars0.githubusercontent.com/u/19295948?v=4"},"owner":{"login":"Polcat000","avatarUrl":"https://avatars0.githubusercontent.com/u/19295948?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5363","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDM4MTI4MTQ1MQ==","url":"https://github.com/coala/coala/pull/5363#issuecomment-381281451","bodyText":"This is a duplicate PR. The original and correct PR is #5349. Please delete or ignore this PR.","diffHunk":null,"author":{"login":"Polcat000","avatarUrl":"https://avatars0.githubusercontent.com/u/19295948?v=4","name":"Andy"},"createdAt":"2018-04-13T23:10:11Z","lastEditedAt":null,"updatedAt":"2018-04-13T23:10:11Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1524322506000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5367","number":5367,"title":"TextPosition.py: Raise exception for zero offset","body":"Raise an exception when a line or column offset is zero.\nCloses #5355\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":4,"createdAt":"2018-04-12T04:25:07Z","updatedAt":"2018-04-21T14:55:06Z","closedAt":"2018-04-21T14:52:24Z","state":"merged","user":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4"},"owner":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4"},"assignee":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4"},"labels":[{"name":"area/CI","color":"eb6420"},{"name":"area/bears","color":"eb6420"},{"name":"area/lintbears","color":"ededed"},{"name":"difficulty/medium","color":"0052cc"},{"name":"importance/medium","color":"fbca04"},{"name":"process/pending review","color":"bfe5bf"},{"name":"size/S","color":"B1CF0A"},{"name":"type/feature","color":"0052cc"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5367","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MTkzMzEzNQ==","url":"https://github.com/coala/coala/pull/5367#discussion_r181933135","bodyText":"To be useful, we need to report to the user which bear it was.  The only way to do that is raise an exception here, and catch it somewhere higher.\nWould be good to have separate exception for line 0 and column 0, to make it easier to find the source of the problem.","diffHunk":"@@ -21,6 +23,10 @@ def __init__(self, line: (int, None)=None, column: (int, None)=None):\n         if line is None and column is not None:\n             raise ValueError('A column can only be set if a line is set.')\n \n+        if line == 0 or column == 0:\n+            logging.warning('line or column offset should not be 0. '\n+                            'Please report this to developers.')","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yMjM2MzA4Mg==","createdAt":"2018-04-17T03:14:56Z","content":"THUMBS_UP","user":{"login":"li-boxuan","name":"Boxuan Li"}}],"createdAt":"2018-04-17T01:53:25Z","lastEditedAt":null,"updatedAt":"2018-04-17T01:53:25Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjkzMTMzOA==","url":"https://github.com/coala/coala/pull/5367#discussion_r182931338","bodyText":"Exception messages should never be parsed.  They are for humans.  They should be descriptive.  Exceptions raised here could ripple up in code paths you have no control over.\nCreate a new ValueError subclass if you need to detect it.  Add extra fields if you need more data.","diffHunk":"@@ -21,6 +21,13 @@ def __init__(self, line: (int, None) = None, column: (int, None) = None):\n         if line is None and column is not None:\n             raise ValueError('A column can only be set if a line is set.')\n \n+        if line == 0 and column == 0:\n+            raise ValueError('zero_line_and_column')","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-04-20T02:19:57Z","lastEditedAt":null,"updatedAt":"2018-04-20T02:19:57Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjkzMTczNQ==","url":"https://github.com/coala/coala/pull/5367#discussion_r182931735","bodyText":"the error messages should include the exception message of the exception being caught.","diffHunk":"@@ -310,6 +310,19 @@ def execute(self, *args, debug=False, **kwargs):\n             if debug and not isinstance(exc, SystemExit):\n                 raise\n \n+            if str(exc) == 'zero_line':\n+                self.err('Bear {} reported zero line offset. '","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-04-20T02:24:01Z","lastEditedAt":null,"updatedAt":"2018-04-20T02:24:01Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzIxMTA1Nw==","url":"https://github.com/coala/coala/pull/5367#discussion_r183211057","bodyText":"Should be subclassed from ValueError, esp. as you do checks on input values and raise it inside __init__","diffHunk":"@@ -2,6 +2,10 @@\n     enforce_signature, generate_ordering, generate_repr)\n \n \n+class ZeroOffsetError(Exception):","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[],"createdAt":"2018-04-21T14:28:06Z","lastEditedAt":null,"updatedAt":"2018-04-21T14:28:06Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1524047419000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5369","number":5369,"title":"Update Constants.py","body":"In line 118, deafult to default.\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":1,"createdAt":"2018-04-12T06:56:52Z","updatedAt":"2018-04-18T10:30:19Z","closedAt":"2018-04-18T10:30:19Z","state":"closed","user":{"login":"Naman-Garg-06","avatarUrl":"https://avatars2.githubusercontent.com/u/31842804?v=4"},"owner":{"login":"Naman-Garg-06","avatarUrl":"https://avatars2.githubusercontent.com/u/31842804?v=4"},"labels":[{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5369","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDM4MDcwMDc0NA==","url":"https://github.com/coala/coala/pull/5369#issuecomment-380700744","bodyText":"First of all, go through the commit guidelines http://api.coala.io/en/latest/Developers/Writing_Good_Commits.html.\nSecond, you have created 2 PR for 1 issue which you could have done in 1 PR.","diffHunk":null,"author":{"login":"sangamcse","avatarUrl":"https://avatars2.githubusercontent.com/u/26381717?v=4","name":"Sangam Kumar"},"createdAt":"2018-04-12T07:06:31Z","lastEditedAt":null,"updatedAt":"2018-04-12T07:06:31Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1524354573000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5370","number":5370,"title":"Update ConfigurationGatheringTest.py","body":"In line 99, deafult to default\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":0,"createdAt":"2018-04-12T06:59:13Z","updatedAt":"2018-04-21T23:49:33Z","closedAt":"2018-04-21T23:49:33Z","state":"closed","user":{"login":"Naman-Garg-06","avatarUrl":"https://avatars2.githubusercontent.com/u/31842804?v=4"},"owner":{"login":"Naman-Garg-06","avatarUrl":"https://avatars2.githubusercontent.com/u/31842804?v=4"},"labels":[{"name":"process/wip","color":"fbca04"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5370","comments":[]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1523816314000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5371","number":5371,"title":"Update Smell.py","body":"In line 452, ... to {\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":1,"createdAt":"2018-04-12T07:06:09Z","updatedAt":"2018-04-15T18:18:34Z","closedAt":"2018-04-15T18:18:34Z","state":"closed","user":{"login":"Naman-Garg-06","avatarUrl":"https://avatars2.githubusercontent.com/u/31842804?v=4"},"owner":{"login":"Naman-Garg-06","avatarUrl":"https://avatars2.githubusercontent.com/u/31842804?v=4"},"labels":[{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5371","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDM4MTQyNjYyMw==","url":"https://github.com/coala/coala/pull/5371#issuecomment-381426623","bodyText":"Not assigned to issue, closing.","diffHunk":null,"author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"createdAt":"2018-04-15T18:18:34Z","lastEditedAt":null,"updatedAt":"2018-04-15T18:18:34Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1527959224000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5377","number":5377,"title":"tests/: Fix typos \"instantation\"","body":"Changing the typo \"instantation\" --> \"instantiation\"\nin the following files:\ntests/results/TextPositionTest.py\ntests/results/TextRangeTest.py\ntests/bearlib/languages/documentation/DocstyleDefinitionTest.py\nFixes #5373\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":8,"createdAt":"2018-04-13T15:51:48Z","updatedAt":"2018-06-02T17:07:04Z","closedAt":"2018-04-14T10:05:53Z","state":"merged","user":{"login":"corinv","avatarUrl":"https://avatars0.githubusercontent.com/u/22667461?v=4"},"owner":{"login":"corinv","avatarUrl":"https://avatars0.githubusercontent.com/u/22667461?v=4"},"assignee":{"login":"corinv","avatarUrl":"https://avatars0.githubusercontent.com/u/22667461?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"size/XS","color":"00DE0F"},{"name":"type/bug","color":"e11d21"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5377","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDM4MTI3MzM4NQ==","url":"https://github.com/coala/coala/pull/5377#issuecomment-381273385","bodyText":"Took your suggestions into account and amended the commit.","diffHunk":null,"author":{"login":"corinv","avatarUrl":"https://avatars0.githubusercontent.com/u/22667461?v=4","name":null},"createdAt":"2018-04-13T22:14:20Z","lastEditedAt":null,"updatedAt":"2018-04-13T22:14:20Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1528546503000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5380","number":5380,"title":".circleci/config.yml: Change cached paths","body":"This changes the cached paths to correct ones and flushes the old\ncache by changing the name of the cache.\nFixes #5376\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":7,"createdAt":"2018-04-14T06:11:32Z","updatedAt":"2018-06-09T12:15:03Z","closedAt":"2018-04-14T09:49:59Z","state":"merged","user":{"login":"harshhx17","avatarUrl":"https://avatars2.githubusercontent.com/u/31805694?v=4"},"owner":{"login":"harshhx17","avatarUrl":"https://avatars2.githubusercontent.com/u/31805694?v=4"},"assignee":{"login":"harshhx17","avatarUrl":"https://avatars2.githubusercontent.com/u/31805694?v=4"},"labels":[{"name":"area/CI","color":"eb6420"},{"name":"difficulty/low","color":"207de5"},{"name":"importance/medium","color":"fbca04"},{"name":"process/approved","color":"009800"},{"name":"size/XS","color":"00DE0F"},{"name":"type/bug","color":"e11d21"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5380","comments":[]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1527959188000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5381","number":5381,"title":".coafile: Ignore new pycodestyle's checks","body":"New checks E252, W504 and W605 of pycodestyle 2.4.0\nare breaking the builds. This adds those checks to\npycodestyle_ignore list.\nCloses #5372\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":4,"createdAt":"2018-04-14T09:20:19Z","updatedAt":"2018-06-02T17:06:28Z","closedAt":"2018-04-14T09:33:01Z","state":"merged","user":{"login":"sangamcse","avatarUrl":"https://avatars2.githubusercontent.com/u/26381717?v=4"},"owner":{"login":"sangamcse","avatarUrl":"https://avatars2.githubusercontent.com/u/26381717?v=4"},"assignee":{"login":"sangamcse","avatarUrl":"https://avatars2.githubusercontent.com/u/26381717?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"},{"name":"importance/critical","color":"e11d21"},{"name":"size/XS","color":"00DE0F"},{"name":"type/codestyle","color":"d4c5f9"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5381","comments":[]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1525747683000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5384","number":5384,"title":".coafile: Replace default section with all","body":"As Default section is deprecated, it is replaced with all in .coafile\nCloses #5307\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":4,"createdAt":"2018-04-14T13:35:36Z","updatedAt":"2018-05-08T02:48:03Z","closedAt":"2018-05-08T02:48:03Z","state":"closed","user":{"login":"sachinmukherjee","avatarUrl":"https://avatars2.githubusercontent.com/u/19318218?v=4"},"owner":{"login":"sachinmukherjee","avatarUrl":"https://avatars2.githubusercontent.com/u/19318218?v=4"},"assignee":{"login":"sachinmukherjee","avatarUrl":"https://avatars2.githubusercontent.com/u/19318218?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"process/wip","color":"fbca04"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5384","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDM4MTMzODA4OQ==","url":"https://github.com/coala/coala/pull/5384#issuecomment-381338089","bodyText":"@jayvdb can you please tell how to see build logs?","diffHunk":null,"author":{"login":"sachinmukherjee","avatarUrl":"https://avatars2.githubusercontent.com/u/19318218?v=4","name":"Sachin Mukherjee"},"createdAt":"2018-04-14T15:43:27Z","lastEditedAt":null,"updatedAt":"2018-04-14T15:43:27Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM4MTM4MDAwNg==","url":"https://github.com/coala/coala/pull/5384#issuecomment-381380006","bodyText":"Please have a look at https://github.com/coala/coala-bears/pull/2402/files. A similar issue. Don't just copy paste things. First, have a look at https://docs.coala.io/en/latest/Users/coafile.html and understand how coafile works then, make changes accordingly. Just click on details corresponding to every CI to view logs.","diffHunk":null,"author":{"login":"MacBox7","avatarUrl":"https://avatars0.githubusercontent.com/u/15063552?v=4","name":"Ankit Joshi"},"createdAt":"2018-04-15T04:51:19Z","lastEditedAt":"2018-04-15T04:52:24Z","updatedAt":"2018-04-15T04:52:24Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM4NzI2NzY5OQ==","url":"https://github.com/coala/coala/pull/5384#issuecomment-387267699","bodyText":"Duplicate.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-05-08T02:48:03Z","lastEditedAt":null,"updatedAt":"2018-05-08T02:48:03Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1528547029000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5387","number":5387,"title":"Git_Basics.rst: Incorporate http://ohshitgit.com/","body":"http://ohshitgit.com/ contains helpful git snippets when something has\ngone wrong.\nThis commit adds the link to the website as well as some snippets and\nparaphrased instructions into Git Basics.\nCloses #4985\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!","comments":8,"createdAt":"2018-04-15T10:29:27Z","updatedAt":"2018-06-09T12:23:49Z","closedAt":"2018-04-17T00:42:27Z","state":"merged","user":{"login":"yzgyyang","avatarUrl":"https://avatars0.githubusercontent.com/u/16748524?v=4"},"owner":{"login":"yzgyyang","avatarUrl":"https://avatars0.githubusercontent.com/u/16748524?v=4"},"assignee":{"login":"yzgyyang","avatarUrl":"https://avatars0.githubusercontent.com/u/16748524?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"process/approved","color":"009800"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5387","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDM4MTQ5NjE2NQ==","url":"https://github.com/coala/coala/pull/5387#issuecomment-381496165","bodyText":"I realized that we cannot just rephrase the contents since the site is not open-sourced with a license. I will try just the link and a short description instead. In the meantime, how do you suggest we do to the existing \"Common Git Issues\"? IMO it's a bit wordy and somewhat duplicate on what's on ohshitgit.","diffHunk":null,"author":{"login":"yzgyyang","avatarUrl":"https://avatars0.githubusercontent.com/u/16748524?v=4","name":"Guangyuan (Charlie) Yang"},"createdAt":"2018-04-16T06:46:25Z","lastEditedAt":null,"updatedAt":"2018-04-16T06:46:25Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM4MTc3NDU5OQ==","url":"https://github.com/coala/coala/pull/5387#issuecomment-381774599","bodyText":"Ya, dont duplicate help which is on that website.\nOur git help page should be specific information which we feel is required to help git newbies do their first PR with coala. That is beyond the scope of your issue.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-04-16T22:50:56Z","lastEditedAt":null,"updatedAt":"2018-04-16T22:50:56Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM4MTg1NDA5Nw==","url":"https://github.com/coala/coala/pull/5387#issuecomment-381854097","bodyText":"#4985 was closed automatically.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-04-17T05:54:53Z","lastEditedAt":null,"updatedAt":"2018-04-17T05:54:53Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM4MTg1NDMzMQ==","url":"https://github.com/coala/coala/pull/5387#issuecomment-381854331","bodyText":"@jayvdb Sorry for the spam. I just refreshed the page and realized that. :P","diffHunk":null,"author":{"login":"yzgyyang","avatarUrl":"https://avatars0.githubusercontent.com/u/16748524?v=4","name":"Guangyuan (Charlie) Yang"},"createdAt":"2018-04-17T05:55:56Z","lastEditedAt":null,"updatedAt":"2018-04-17T05:55:56Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1523797259000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5388","number":5388,"title":".coafile: Replace default section with all","body":"For short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":3,"createdAt":"2018-04-15T12:06:57Z","updatedAt":"2018-04-15T13:00:59Z","closedAt":"2018-04-15T12:57:48Z","state":"closed","user":{"login":"sachinmukherjee","avatarUrl":"https://avatars2.githubusercontent.com/u/19318218?v=4"},"owner":{"login":"sachinmukherjee","avatarUrl":"https://avatars2.githubusercontent.com/u/19318218?v=4"},"assignee":{"login":"sachinmukherjee","avatarUrl":"https://avatars2.githubusercontent.com/u/19318218?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5388","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDM4MTQwNDgyNg==","url":"https://github.com/coala/coala/pull/5388#issuecomment-381404826","bodyText":"PR closed.  Unassigning from issue.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-04-15T13:00:59Z","lastEditedAt":null,"updatedAt":"2018-04-15T13:00:59Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1523939944000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5392","number":5392,"title":"Smell.py:Fix typo","body":"Fix typo in docstring of Smell.py\nFixes #5364\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":1,"createdAt":"2018-04-15T21:14:44Z","updatedAt":"2018-04-17T04:39:04Z","closedAt":null,"state":"open","user":{"login":"beisekenov","avatarUrl":"https://avatars1.githubusercontent.com/u/28870460?v=4"},"owner":{"login":"beisekenov","avatarUrl":"https://avatars1.githubusercontent.com/u/28870460?v=4"},"labels":[{"name":"process/wip","color":"fbca04"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5392","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MTk1MDM0MA==","url":"https://github.com/coala/coala/pull/5392#discussion_r181950340","bodyText":"add a space before the {","diffHunk":"@@ -449,7 +449,7 @@ class docs:\n                 return unformattedNumber.substring(6,10);\n             }\n         }\n-        public class Customer…\n+        public class Customer{","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yMzQ2NjUwNg==","createdAt":"2018-05-10T16:23:03Z","content":"THUMBS_UP","user":{"login":"monsij","name":"Monsij Biswal"}},{"id":"MDg6UmVhY3Rpb24yMzcxMDE4NA==","createdAt":"2018-05-16T10:52:15Z","content":"THUMBS_UP","user":{"login":"pareksha","name":"Pareksha Manchanda"}}],"createdAt":"2018-04-17T04:38:49Z","lastEditedAt":null,"updatedAt":"2018-04-17T04:38:49Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1528546303000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5393","number":5393,"title":"ConsoleInteractionTest: Remove check_logs usage","body":"coala_utils decorator check_logs relies on\ntextfixtures, a dependency it shoul not have.\nInlining the decorator will allow it to be removed.\nRelated to #5335\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":7,"createdAt":"2018-04-16T08:15:19Z","updatedAt":"2018-06-09T12:11:43Z","closedAt":"2018-04-16T22:31:26Z","state":"merged","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"process/approved","color":"009800"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5393","comments":[]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1528546200000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5394","number":5394,"title":"Remove E241 check from pycodestyle_ignore list","body":"This E241 check is a check for multiple spaces after ','. It is\nan important code style check.\nIn reference to issue #5391\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":7,"createdAt":"2018-04-16T12:13:54Z","updatedAt":"2018-06-09T12:10:00Z","closedAt":"2018-04-16T12:33:00Z","state":"closed","user":{"login":"lakhanshiva","avatarUrl":"https://avatars3.githubusercontent.com/u/4762264?v=4"},"owner":{"login":"lakhanshiva","avatarUrl":"https://avatars3.githubusercontent.com/u/4762264?v=4"},"labels":[{"name":"process/approved","color":"009800"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5394","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDM4MTU4MTgzMA==","url":"https://github.com/coala/coala/pull/5394#issuecomment-381581830","bodyText":"You should not submit a pull request from your master branch. Make a new branch and open a new PR","diffHunk":null,"author":{"login":"rohanrk","avatarUrl":"https://avatars2.githubusercontent.com/u/11154862?v=4","name":"Rohan"},"createdAt":"2018-04-16T12:27:46Z","lastEditedAt":null,"updatedAt":"2018-04-16T12:27:46Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1527959185000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5395","number":5395,"title":"E241 check is being enforced","body":"This E241 is a check for multiple spaces after a comma. It is\nan important code style check.\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":18,"createdAt":"2018-04-16T12:36:36Z","updatedAt":"2018-06-02T17:06:25Z","closedAt":"2018-04-16T23:06:39Z","state":"merged","user":{"login":"lakhanshiva","avatarUrl":"https://avatars3.githubusercontent.com/u/4762264?v=4"},"owner":{"login":"lakhanshiva","avatarUrl":"https://avatars3.githubusercontent.com/u/4762264?v=4"},"assignee":{"login":"lakhanshiva","avatarUrl":"https://avatars3.githubusercontent.com/u/4762264?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"size/XS","color":"00DE0F"},{"name":"type/bug","color":"e11d21"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5395","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDM4MTU4NzAwNg==","url":"https://github.com/coala/coala/pull/5395#issuecomment-381587006","bodyText":"Use git commit --amend instead of git commit. And then git push -f.","diffHunk":null,"author":{"login":"sangamcse","avatarUrl":"https://avatars2.githubusercontent.com/u/26381717?v=4","name":"Sangam Kumar"},"createdAt":"2018-04-16T12:46:57Z","lastEditedAt":null,"updatedAt":"2018-04-16T12:46:57Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM4MTU4OTE1NA==","url":"https://github.com/coala/coala/pull/5395#issuecomment-381589154","bodyText":"Added the fixes <commit_link> to commit message.\nIn line 209 of tests/testing/LocalBearTestHelperTest.py we currently have\nself.uut,  'Luke', files[0]) as result:\nWhat does this mean anyway ?\nWhat's supposed to be in its place ?","diffHunk":null,"author":{"login":"lakhanshiva","avatarUrl":"https://avatars3.githubusercontent.com/u/4762264?v=4","name":"Lakhan Shiva Kamireddy"},"createdAt":"2018-04-16T12:54:48Z","lastEditedAt":null,"updatedAt":"2018-04-16T12:54:48Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM4MTU4OTYyMg==","url":"https://github.com/coala/coala/pull/5395#issuecomment-381589622","bodyText":"There are 2 spaces after ,. All you need to do is remove one space from there and run coala before committing.","diffHunk":null,"author":{"login":"sangamcse","avatarUrl":"https://avatars2.githubusercontent.com/u/26381717?v=4","name":"Sangam Kumar"},"createdAt":"2018-04-16T12:56:22Z","lastEditedAt":null,"updatedAt":"2018-04-16T12:56:22Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM4MTU5MDQyMw==","url":"https://github.com/coala/coala/pull/5395#issuecomment-381590423","bodyText":"Oh i see, i get it now. It's the new check that's working.","diffHunk":null,"author":{"login":"lakhanshiva","avatarUrl":"https://avatars3.githubusercontent.com/u/4762264?v=4","name":"Lakhan Shiva Kamireddy"},"createdAt":"2018-04-16T12:59:08Z","lastEditedAt":null,"updatedAt":"2018-04-16T12:59:08Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM4MTYwMzE0OQ==","url":"https://github.com/coala/coala/pull/5395#issuecomment-381603149","bodyText":"I am running coala successfully locally.","diffHunk":null,"author":{"login":"lakhanshiva","avatarUrl":"https://avatars3.githubusercontent.com/u/4762264?v=4","name":"Lakhan Shiva Kamireddy"},"createdAt":"2018-04-16T13:41:12Z","lastEditedAt":null,"updatedAt":"2018-04-16T13:41:12Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM4MTYwMzQ3Mg==","url":"https://github.com/coala/coala/pull/5395#issuecomment-381603472","bodyText":"Commit it then.","diffHunk":null,"author":{"login":"sangamcse","avatarUrl":"https://avatars2.githubusercontent.com/u/26381717?v=4","name":"Sangam Kumar"},"createdAt":"2018-04-16T13:42:14Z","lastEditedAt":null,"updatedAt":"2018-04-16T13:42:14Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1523918578000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5396","number":5396,"title":"[WIP]Diff.py: Fixes Diff.unified_diff output","body":"Fixes the output of Diff.unified_diff\nso that it becomes compatible with\nDiff.from_unified_diff\nFixes #4314\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":0,"createdAt":"2018-04-16T16:27:44Z","updatedAt":"2018-04-16T22:42:58Z","closedAt":null,"state":"open","user":{"login":"Vedarth","avatarUrl":"https://avatars2.githubusercontent.com/u/22793275?v=4"},"owner":{"login":"Vedarth","avatarUrl":"https://avatars2.githubusercontent.com/u/22793275?v=4"},"assignee":{"login":"Vedarth","avatarUrl":"https://avatars2.githubusercontent.com/u/22793275?v=4"},"labels":[{"name":"area/core","color":"eb6420"},{"name":"process/wip","color":"fbca04"},{"name":"size/XS","color":"00DE0F"},{"name":"type/bug","color":"e11d21"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5396","comments":[]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1527253308000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5397","number":5397,"title":"ShowAppliedPatchesAction.py: Fix duplicate patch","body":"This fixes the duplicate patches shown bug in ShowAppliedPatches\nFixes: #5193\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":5,"createdAt":"2018-04-17T03:27:08Z","updatedAt":"2018-05-25T13:01:48Z","closedAt":null,"state":"open","user":{"login":"kwsohn","avatarUrl":"https://avatars0.githubusercontent.com/u/17075274?v=4"},"owner":{"login":"kwsohn","avatarUrl":"https://avatars0.githubusercontent.com/u/17075274?v=4"},"assignee":{"login":"kwsohn","avatarUrl":"https://avatars0.githubusercontent.com/u/17075274?v=4"},"labels":[{"name":"area/CLI","color":"006b75"},{"name":"difficulty/low","color":"207de5"},{"name":"process/wip","color":"fbca04"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5397","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDM4MTgzNzUwMA==","url":"https://github.com/coala/coala/pull/5397#issuecomment-381837500","bodyText":"conflicts and failing CI jobs.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-04-17T04:36:37Z","lastEditedAt":null,"updatedAt":"2018-04-17T04:36:37Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM4MjAzOTYzNg==","url":"https://github.com/coala/coala/pull/5397#issuecomment-382039636","bodyText":"@jayvdb Is it acceptable for me to modify the .coafile? The PycodeBear is throwing errors causing the CI builds to fail.\nAlso, can I add the new test(s) required to reach 100% coverage in this same commit using --amend?\nThank you for your time","diffHunk":null,"author":{"login":"kwsohn","avatarUrl":"https://avatars0.githubusercontent.com/u/17075274?v=4","name":"Kwan Sohn"},"createdAt":"2018-04-17T15:40:59Z","lastEditedAt":"2018-04-17T21:51:37Z","updatedAt":"2018-04-17T21:51:37Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM4MzMwNTA4NQ==","url":"https://github.com/coala/coala/pull/5397#issuecomment-383305085","bodyText":"conflict needs resolving.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-04-21T15:26:30Z","lastEditedAt":null,"updatedAt":"2018-04-21T15:26:30Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM4MzMzOTAwMg==","url":"https://github.com/coala/coala/pull/5397#issuecomment-383339002","bodyText":"Sorry but I still have the same questions as I asked above. If you or anyone else is willing to answer it would be greatly appreciated. @jayvdb","diffHunk":null,"author":{"login":"kwsohn","avatarUrl":"https://avatars0.githubusercontent.com/u/17075274?v=4","name":"Kwan Sohn"},"createdAt":"2018-04-21T23:00:56Z","lastEditedAt":null,"updatedAt":"2018-04-21T23:00:56Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM5MjA1MDgwOQ==","url":"https://github.com/coala/coala/pull/5397#issuecomment-392050809","bodyText":"Is it acceptable for me to modify the .coafile? The PycodeBear is throwing errors causing the CI builds to fail.\n\nNo, can't modify the .coafile for this. Look at the reason why the PycodestyleBear is complaining and fix your code accordingly. You might need to rebase.\n\nAlso, can I add the new test(s) required to reach 100% coverage in this same commit using --amend?\n\nYes please add new tests to the same commit. The coverage should reach 100% for CI to pass.","diffHunk":null,"author":{"login":"anctartica","avatarUrl":"https://avatars0.githubusercontent.com/u/7020962?v=4","name":""},"createdAt":"2018-05-25T13:01:48Z","lastEditedAt":"2018-05-25T13:03:29Z","updatedAt":"2018-05-25T13:03:29Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1528544807000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5399","number":5399,"title":"coafile: Remove E252 from ignore list","body":"E252 is the new check of pycodestyle 2.4.0 and is in ignore list of\n.coafile.\nThis removes E252 from ignore list and fix whitespaces to adhere the\nnew rule.\nCloses #5382\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!","comments":6,"createdAt":"2018-04-17T07:57:05Z","updatedAt":"2018-06-09T11:46:47Z","closedAt":"2018-04-17T09:24:19Z","state":"merged","user":{"login":"yzgyyang","avatarUrl":"https://avatars0.githubusercontent.com/u/16748524?v=4"},"owner":{"login":"yzgyyang","avatarUrl":"https://avatars0.githubusercontent.com/u/16748524?v=4"},"assignee":{"login":"yzgyyang","avatarUrl":"https://avatars0.githubusercontent.com/u/16748524?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"},{"name":"importance/low","color":"70E870"},{"name":"process/approved","color":"009800"},{"name":"size/M","color":"eb6420"},{"name":"type/codestyle","color":"d4c5f9"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5399","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MTk4NTQ0Mg==","url":"https://github.com/coala/coala/pull/5399#discussion_r181985442","bodyText":"this is too weird.\ndrop the trailing ): to the next line, unindented.\n(look for similar cases)\n(im still reviewing, so dont push yet)","diffHunk":"@@ -13,12 +13,13 @@ class FunctionMetadata:\n     @enforce_signature\n     def __init__(self,\n                  name: str,\n-                 desc: str='',\n-                 retval_desc: str='',\n-                 non_optional_params: (dict, None)=None,\n-                 optional_params: (dict, None)=None,\n-                 omit: (set, tuple, list, frozenset)=frozenset(),\n-                 deprecated_params: (set, tuple, list, frozenset)=frozenset()):\n+                 desc: str = '',\n+                 retval_desc: str = '',\n+                 non_optional_params: (dict, None) = None,\n+                 optional_params: (dict, None) = None,\n+                 omit: (set, tuple, list, frozenset) = frozenset(),\n+                 deprecated_params:\n+                     (set, tuple, list, frozenset) = frozenset()):","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-04-17T08:07:42Z","lastEditedAt":null,"updatedAt":"2018-04-17T08:07:42Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM4MTkxMTg1Mg==","url":"https://github.com/coala/coala/pull/5399#issuecomment-381911852","bodyText":"Style is fine with me, but I would recommend changing the commit message to\ncoafile: Remove E252 from ignore list\n\n... and fix whitespaces to adhere the new rule.\n\nThen it's clear that the intention is to modify our coafile :)","diffHunk":null,"author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"createdAt":"2018-04-17T09:07:12Z","lastEditedAt":null,"updatedAt":"2018-04-17T09:07:12Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM4MTkxMzAxMw==","url":"https://github.com/coala/coala/pull/5399#issuecomment-381913013","bodyText":"@Makman2 Thanks! I agree, your version of commit msg would be much better.","diffHunk":null,"author":{"login":"yzgyyang","avatarUrl":"https://avatars0.githubusercontent.com/u/16748524?v=4","name":"Guangyuan (Charlie) Yang"},"createdAt":"2018-04-17T09:10:32Z","lastEditedAt":null,"updatedAt":"2018-04-17T09:10:32Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1525406882000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5401","number":5401,"title":"Result.py: Add \"actions\" field","body":"The optional actions field contains a collection of\nResultAction instances associated with the Result.\nRelated to #1021\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":3,"createdAt":"2018-04-17T14:42:33Z","updatedAt":"2018-05-04T04:08:02Z","closedAt":null,"state":"open","user":{"login":"Vedarth","avatarUrl":"https://avatars2.githubusercontent.com/u/22793275?v=4"},"owner":{"login":"Vedarth","avatarUrl":"https://avatars2.githubusercontent.com/u/22793275?v=4"},"labels":[{"name":"process/wip","color":"fbca04"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5401","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzIxMTM5OA==","url":"https://github.com/coala/coala/pull/5401#discussion_r183211398","bodyText":"Following the examples above and below, put spaces around = would be better?","diffHunk":"@@ -62,6 +84,7 @@ def __init__(self,\n                  diffs: (dict, None) = None,\n                  confidence: int = 100,\n                  aspect: (aspectbase, None) = None,\n+                 actions: list=[],","author":{"login":"yzgyyang","avatarUrl":"https://avatars0.githubusercontent.com/u/16748524?v=4","name":"Guangyuan (Charlie) Yang"},"reactions":[{"id":"MDg6UmVhY3Rpb24yMjYxMzczNQ==","createdAt":"2018-04-21T23:48:20Z","content":"THUMBS_UP","user":{"login":"jayvdb","name":"John Vandenberg"}}],"createdAt":"2018-04-21T14:45:16Z","lastEditedAt":null,"updatedAt":"2018-04-21T14:45:16Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzIxMTY2NQ==","url":"https://github.com/coala/coala/pull/5401#discussion_r183211665","bodyText":"IMO although this is compact, it could be more readable and consistent if you just use\nif type(value == list):\n    ...\nelse:\n    ...","diffHunk":"@@ -129,6 +154,24 @@ def __init__(self,\n         if self.aspect and not self.additional_info:\n             self.additional_info = '{} {}'.format(\n                 aspect.docs.importance_reason, aspect.docs.fix_suggestions)\n+        self._actions = actions\n+\n+    @property\n+    def actions(self):\n+        return tuple(self._actions)\n+\n+    @actions.setter\n+    @enforce_signature\n+    def actions(self, value: (ResultAction, list)):\n+        self._actions = value if type(value) == list else [value]","author":{"login":"yzgyyang","avatarUrl":"https://avatars0.githubusercontent.com/u/16748524?v=4","name":"Guangyuan (Charlie) Yang"},"reactions":[{"id":"MDg6UmVhY3Rpb24yMjYxMzczMw==","createdAt":"2018-04-21T23:48:13Z","content":"THUMBS_UP","user":{"login":"jayvdb","name":"John Vandenberg"}}],"createdAt":"2018-04-21T14:56:08Z","lastEditedAt":null,"updatedAt":"2018-04-21T14:56:08Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzIxMTY4Nw==","url":"https://github.com/coala/coala/pull/5401#discussion_r183211687","bodyText":"Spaces around =","diffHunk":"@@ -162,6 +205,7 @@ def from_values(cls,\n                     diffs: (dict, None) = None,\n                     confidence: int = 100,\n                     aspect: (aspectbase, None) = None,\n+                    actions: list=[],","author":{"login":"yzgyyang","avatarUrl":"https://avatars0.githubusercontent.com/u/16748524?v=4","name":"Guangyuan (Charlie) Yang"},"reactions":[],"createdAt":"2018-04-21T14:56:53Z","lastEditedAt":null,"updatedAt":"2018-04-21T14:56:53Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzIxMTg2OQ==","url":"https://github.com/coala/coala/pull/5401#discussion_r183211869","bodyText":"IMO It feels like that this function has too many blank lines. Maybe group them in a better way?","diffHunk":"@@ -37,6 +38,30 @@ def test_message_arguments(self):\n         with self.assertRaises(KeyError):\n             Result('origin', '{msg}', message_arguments={'message': 'msg'})\n \n+    def test_result_actions(self):\n+        uut = Result('origin', 'msg')\n+        self.assertEqual(uut.actions, tuple())\n+\n+        action_1 = ResultAction()\n+\n+        uut.actions = action_1\n+        self.assertEqual(uut.actions, (action_1,))\n+\n+        uut.remove_actions(action_1)\n+        self.assertEqual(uut.actions, tuple())\n+\n+        action_2 = ResultAction()\n+        action_3 = ResultAction()\n+\n+        uut.add_actions(action_1)\n+        self.assertEqual(uut.actions, (action_1,))\n+\n+        uut.add_actions(action_2, action_3)\n+        self.assertEqual(uut.actions, (action_1, action_2, action_3))\n+\n+        uut.remove_actions(action_2, action_3)\n+        self.assertEqual(uut.actions, (action_1,))\n+","author":{"login":"yzgyyang","avatarUrl":"https://avatars0.githubusercontent.com/u/16748524?v=4","name":"Guangyuan (Charlie) Yang"},"reactions":[],"createdAt":"2018-04-21T15:06:24Z","lastEditedAt":null,"updatedAt":"2018-04-21T15:06:24Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NTk4Nzc4MQ==","url":"https://github.com/coala/coala/pull/5401#discussion_r185987781","bodyText":"Also, use isinstance instead of type","diffHunk":"@@ -129,6 +154,24 @@ def __init__(self,\n         if self.aspect and not self.additional_info:\n             self.additional_info = '{} {}'.format(\n                 aspect.docs.importance_reason, aspect.docs.fix_suggestions)\n+        self._actions = actions\n+\n+    @property\n+    def actions(self):\n+        return tuple(self._actions)\n+\n+    @actions.setter\n+    @enforce_signature\n+    def actions(self, value: (ResultAction, list)):\n+        self._actions = value if type(value) == list else [value]","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-05-04T04:08:02Z","lastEditedAt":null,"updatedAt":"2018-05-04T04:08:02Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1524092798000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5402","number":5402,"title":"ConsoleInteraction.py: Fix coala -B --json","body":"The output of coala -B --json should be\nsimilar to coala -B.\nFixes #5156\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":10,"createdAt":"2018-04-18T18:54:08Z","updatedAt":"2018-04-18T23:06:38Z","closedAt":"2018-04-18T23:06:38Z","state":"merged","user":{"login":"anctartica","avatarUrl":"https://avatars0.githubusercontent.com/u/7020962?v=4"},"owner":{"login":"anctartica","avatarUrl":"https://avatars0.githubusercontent.com/u/7020962?v=4"},"assignee":{"login":"anctartica","avatarUrl":"https://avatars0.githubusercontent.com/u/7020962?v=4"},"labels":[{"name":"area/CLI","color":"006b75"},{"name":"difficulty/low","color":"207de5"},{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"00DE0F"},{"name":"status/blocked","color":"e11d21"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5402","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDM4MjQ5MzQ5Ng==","url":"https://github.com/coala/coala/pull/5402#issuecomment-382493496","bodyText":"Needs a test, and a rebase.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-04-18T18:58:25Z","lastEditedAt":null,"updatedAt":"2018-04-18T18:58:25Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM4MjUyOTEyNA==","url":"https://github.com/coala/coala/pull/5402#issuecomment-382529124","bodyText":"builds failing due to missing coverage for __json__ attribute of Bear. This is no longer being used when calling coala -B --json","diffHunk":null,"author":{"login":"anctartica","avatarUrl":"https://avatars0.githubusercontent.com/u/7020962?v=4","name":""},"createdAt":"2018-04-18T21:05:16Z","lastEditedAt":null,"updatedAt":"2018-04-18T21:05:16Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM4MjUzODYzMw==","url":"https://github.com/coala/coala/pull/5402#issuecomment-382538633","bodyText":"@anctartica , so also allow for coala -B --json --show-details which does use the previous deep objective encoder.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-04-18T21:41:59Z","lastEditedAt":null,"updatedAt":"2018-04-18T21:41:59Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1527959202000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5405","number":5405,"title":"Review.rst: Add more details for reviewers","body":"Split off from #3657","comments":10,"createdAt":"2018-04-19T02:25:38Z","updatedAt":"2018-06-02T17:06:42Z","closedAt":"2018-04-20T13:51:44Z","state":"merged","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5405","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjYyMDMyNA==","url":"https://github.com/coala/coala/pull/5405#discussion_r182620324","bodyText":"gender.\nthough -> thought","diffHunk":"@@ -105,6 +105,10 @@ For the Reviewers\n \n -  All the pull requests waiting to be reviewed can be found at :\n    https://coala.io/review.\n+-  Check the commit message.\n+-  Read and try to understand the code. If something looks ineffective or\n+   bug prone, leave a comment.\n+   If in doubt, let the code-writer explain his though process to understand it.","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-04-19T02:35:30Z","lastEditedAt":null,"updatedAt":"2018-04-19T02:35:30Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjYyMDc0Ng==","url":"https://github.com/coala/coala/pull/5405#discussion_r182620746","bodyText":"Better yet, though process -> reasoning.","diffHunk":"@@ -105,6 +105,10 @@ For the Reviewers\n \n -  All the pull requests waiting to be reviewed can be found at :\n    https://coala.io/review.\n+-  Check the commit message.\n+-  Read and try to understand the code. If something looks ineffective or\n+   bug prone, leave a comment.\n+   If in doubt, let the code-writer explain his though process to understand it.","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-04-19T02:39:38Z","lastEditedAt":null,"updatedAt":"2018-04-19T02:39:38Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjkyMTcwMw==","url":"https://github.com/coala/coala/pull/5405#discussion_r182921703","bodyText":"Maybe add \"Check that the changes haven't been pushed from master branch\" to/after this ^^ point - Else LGTM as well.","diffHunk":"@@ -105,6 +105,11 @@ For the Reviewers\n \n -  All the pull requests waiting to be reviewed can be found at :\n    https://coala.io/review.\n+-  Check the commit message.","author":{"login":"prnvdixit","avatarUrl":"https://avatars2.githubusercontent.com/u/24798215?v=4","name":"Pranav Dixit"},"reactions":[],"createdAt":"2018-04-20T00:44:57Z","lastEditedAt":"2018-04-20T00:45:54Z","updatedAt":"2018-04-20T00:45:54Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MjkzMzM4Mg==","url":"https://github.com/coala/coala/pull/5405#discussion_r182933382","bodyText":"Then we have reviewers telling newcomers to close their PRs, even if the PR is good and can be merged quickly.\nYou've raised an important issue, which should be in this guide, but it needs to be a separate addition with lots of careful wording","diffHunk":"@@ -105,6 +105,11 @@ For the Reviewers\n \n -  All the pull requests waiting to be reviewed can be found at :\n    https://coala.io/review.\n+-  Check the commit message.","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yMjU0OTg0Mw==","createdAt":"2018-04-20T03:16:54Z","content":"THUMBS_UP","user":{"login":"prnvdixit","name":"Pranav Dixit"}}],"createdAt":"2018-04-20T02:41:10Z","lastEditedAt":null,"updatedAt":"2018-04-20T02:41:10Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM4Mjc1MTUyMQ==","url":"https://github.com/coala/coala/pull/5405#issuecomment-382751521","bodyText":"lgtm\nack 2d44c08","diffHunk":null,"author":{"login":"sims1253","avatarUrl":"https://avatars2.githubusercontent.com/u/6530123?v=4","name":"Maximilian Scholz"},"reactions":[],"createdAt":"2018-04-19T14:12:04Z","lastEditedAt":null,"updatedAt":"2018-04-19T14:12:04Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1527959194000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5407","number":5407,"title":"CI: Remove coala -B --json","body":"Not all bears load properly in coala CI,\nand this command is returning a non-zero exit code.\nRelated to #5406\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":4,"createdAt":"2018-04-20T05:33:21Z","updatedAt":"2018-06-02T17:06:34Z","closedAt":"2018-04-20T06:38:56Z","state":"merged","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5407","comments":[]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1527050048000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5408","number":5408,"title":"Add git commit to Newcomers guide","body":"Closes #5403","comments":3,"createdAt":"2018-04-20T08:28:53Z","updatedAt":"2018-05-23T04:34:08Z","closedAt":null,"state":"open","user":{"login":"abaganwalydia","avatarUrl":"https://avatars1.githubusercontent.com/u/38523186?v=4"},"owner":{"login":"abaganwalydia","avatarUrl":"https://avatars1.githubusercontent.com/u/38523186?v=4"},"labels":[{"name":"process/wip","color":"fbca04"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5408","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDM4MzA5OTI4OQ==","url":"https://github.com/coala/coala/pull/5408#issuecomment-383099289","bodyText":"Please remove trailing whitespace from the lines that you edited.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-04-20T13:40:30Z","lastEditedAt":null,"updatedAt":"2018-04-20T13:40:30Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM4MzIyODIyMQ==","url":"https://github.com/coala/coala/pull/5408#issuecomment-383228221","bodyText":"Look at other PRs probably the closed ones and look at their commit message.","diffHunk":null,"author":{"login":"newbazz","avatarUrl":"https://avatars1.githubusercontent.com/u/25884863?v=4","name":null},"createdAt":"2018-04-20T21:31:49Z","lastEditedAt":null,"updatedAt":"2018-04-20T21:31:49Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM5MTIxNzMyOQ==","url":"https://github.com/coala/coala/pull/5408#issuecomment-391217329","bodyText":"@abaganwalydia please follow the commit guidelines and make the requested changes.","diffHunk":null,"author":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4","name":"Palash Nigam"},"createdAt":"2018-05-23T04:34:07Z","lastEditedAt":null,"updatedAt":"2018-05-23T04:34:07Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1524320607000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5410","number":5410,"title":"test-requirements.txt: Fix pytest-reqs version","body":"pytest-reqs~=0.0.6 -> 0.1.0\nFixes #5409\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":1,"createdAt":"2018-04-21T04:12:12Z","updatedAt":"2018-04-21T14:23:27Z","closedAt":"2018-04-21T14:10:18Z","state":"closed","user":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4"},"owner":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4"},"assignee":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"area/CI","color":"eb6420"},{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"00DE0F"},{"name":"type/bug","color":"e11d21"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5410","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDM4MzI5ODU3NA==","url":"https://github.com/coala/coala/pull/5410#issuecomment-383298574","bodyText":"This was fixed a different way.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-04-21T14:10:18Z","lastEditedAt":null,"updatedAt":"2018-04-21T14:10:18Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1527605072000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5411","number":5411,"title":"Newcomers.rst: Add a command pytest to the guide.","body":"This command helps to run tests after installing some dependencies.\nCloses #5404\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":8,"createdAt":"2018-04-21T10:59:33Z","updatedAt":"2018-05-29T14:44:32Z","closedAt":"2018-05-29T14:44:32Z","state":"closed","user":{"login":"dorothykiz1","avatarUrl":"https://avatars3.githubusercontent.com/u/30805504?v=4"},"owner":{"login":"dorothykiz1","avatarUrl":"https://avatars3.githubusercontent.com/u/30805504?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"process/wip","color":"fbca04"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5411","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzIyNDcwNg==","url":"https://github.com/coala/coala/pull/5411#discussion_r183224706","bodyText":"Change it to something like this -> After the test dependencies have been installed run pytest to test your changes locally.","diffHunk":"@@ -295,6 +295,20 @@ coala project directory:\n \n     $ pip3 install -r test-requirements.txt -r requirements.txt\n \n+Its always best to run Pytests after running the requirement dependencies before you run coala.","author":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4","name":"Palash Nigam"},"reactions":[],"createdAt":"2018-04-22T03:53:36Z","lastEditedAt":null,"updatedAt":"2018-04-22T03:53:36Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4MzIyNDcyNg==","url":"https://github.com/coala/coala/pull/5411#discussion_r183224726","bodyText":"Also you can't exceed 80 character limit for every line. So if your line starts exceeding the limit change to a new line and continue writing.","diffHunk":"@@ -295,6 +295,20 @@ coala project directory:\n \n     $ pip3 install -r test-requirements.txt -r requirements.txt\n \n+Its always best to run Pytests after running the requirement dependencies before you run coala.","author":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4","name":"Palash Nigam"},"reactions":[],"createdAt":"2018-04-22T03:55:01Z","lastEditedAt":null,"updatedAt":"2018-04-22T03:55:01Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM4MzM1MzUyNA==","url":"https://github.com/coala/coala/pull/5411#issuecomment-383353524","bodyText":"Remove the period from the shortlog of your commit message 👍","diffHunk":null,"author":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4","name":"Palash Nigam"},"reactions":[],"createdAt":"2018-04-22T03:56:41Z","lastEditedAt":null,"updatedAt":"2018-04-22T03:56:41Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM5MTIxNjkzMA==","url":"https://github.com/coala/coala/pull/5411#issuecomment-391216930","bodyText":"ping @dorothykiz1","diffHunk":null,"author":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4","name":"Palash Nigam"},"reactions":[],"createdAt":"2018-05-23T04:31:13Z","lastEditedAt":null,"updatedAt":"2018-05-23T04:31:13Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM5MTIyNzkzMg==","url":"https://github.com/coala/coala/pull/5411#issuecomment-391227932","bodyText":"On Wed, 23 May 2018 at 07:31, Palash Nigam ***@***.***> wrote:\n ping @dorothykiz1 <https://github.com/dorothykiz1>\n\n —\n You are receiving this because you were mentioned.\n\n\n Reply to this email directly, view it on GitHub\n <#5411 (comment)>, or mute\n the thread\n <https://github.com/notifications/unsubscribe-auth/AdYOAGxrW5kRddy-VBGCOZ_ZVLR9Da2Iks5t1OYTgaJpZM4TeaV0>\n .\n\nSure will work on it . Thank you\n-- \nRegards, Dorothy","diffHunk":null,"author":{"login":"dorothykiz1","avatarUrl":"https://avatars3.githubusercontent.com/u/30805504?v=4","name":null},"reactions":[{"id":"MDg6UmVhY3Rpb24yNDAxOTgzNg==","createdAt":"2018-05-23T06:28:47Z","content":"THUMBS_UP","user":{"login":"palash25","name":"Palash Nigam"}}],"createdAt":"2018-05-23T05:48:00Z","lastEditedAt":null,"updatedAt":"2018-05-23T05:48:00Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM5MjYzMzY4NA==","url":"https://github.com/coala/coala/pull/5411#issuecomment-392633684","bodyText":"i am working on this issue\n\nYou can't just start working on an issue that is being worked on by someone else. That is stealing an issue and that way your PR will never be merged.\nAlso don't comment on the PR comment on the issue thread and ask whether you can be assigned to this since there is already a PR open for it.\nYou already have newcomer PRs if I'm not wrong and newcomers can only work on 1 newcomer issue so instead of grabbing more easy issues get your previous PRs merged and look for more difficult issues.\n@dorothykiz1 still working on this? This isn't going to take much time and I think that you are stuck so please ask for help on gitter regarding this PR this way we can merge it faster.","diffHunk":null,"author":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4","name":"Palash Nigam"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNDI2NjQxNQ==","createdAt":"2018-05-29T04:29:54Z","content":"THUMBS_UP","user":{"login":"jayvdb","name":"John Vandenberg"}}],"createdAt":"2018-05-29T02:13:42Z","lastEditedAt":null,"updatedAt":"2018-05-29T02:13:42Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM5MjYzNTE1NQ==","url":"https://github.com/coala/coala/pull/5411#issuecomment-392635155","bodyText":"@palash25thank You\nam working on my issue today and what did you mean by ashortlog of my commit has a full stop ,which line is it?","diffHunk":null,"author":{"login":"dorothykiz1","avatarUrl":"https://avatars3.githubusercontent.com/u/30805504?v=4","name":null},"reactions":[],"createdAt":"2018-05-29T02:25:36Z","lastEditedAt":null,"updatedAt":"2018-05-29T02:25:36Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM5MjY0OTY5MA==","url":"https://github.com/coala/coala/pull/5411#issuecomment-392649690","bodyText":"@sanshay, you are not working on this issue.  Someone else is.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-05-29T04:29:19Z","lastEditedAt":null,"updatedAt":"2018-05-29T04:29:19Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1524319571000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5413","number":5413,"title":"test-requirements.txt: Require pip 9","body":"Do now allow pip 10 to be installed.\nIt breaks pytest_reqs\nCloses #5409\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":4,"createdAt":"2018-04-21T13:26:13Z","updatedAt":"2018-04-21T14:06:11Z","closedAt":"2018-04-21T14:06:11Z","state":"merged","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"area/CI","color":"eb6420"},{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"00DE0F"},{"name":"type/bug","color":"e11d21"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5413","comments":[]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1524321743000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5414","number":5414,"title":"Makman2/strip ansi fix","body":"Fixes #5412","comments":7,"createdAt":"2018-04-21T13:45:24Z","updatedAt":"2018-04-21T14:42:23Z","closedAt":"2018-04-21T14:40:42Z","state":"merged","user":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"owner":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"assignee":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"labels":[{"name":"area/lintbears","color":"ededed"},{"name":"difficulty/low","color":"207de5"},{"name":"importance/high","color":"eb6420"},{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"00DE0F"},{"name":"type/bug","color":"e11d21"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5414","comments":[]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1527959177000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5419","number":5419,"title":"linter: Correct unified-diff format spelling","body":"It's unified-diff with a dash, not an underscore.\nCloses #5418","comments":4,"createdAt":"2018-04-22T11:00:37Z","updatedAt":"2018-06-02T17:06:17Z","closedAt":"2018-04-22T11:18:52Z","state":"merged","user":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"owner":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"assignee":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"area/lintbears","color":"ededed"},{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"importance/high","color":"eb6420"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5419","comments":[]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1527959229000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5421","number":5421,"title":"Constants.py, GatheringTest.py: Fix typo","body":"This changes 'deafult' --> 'default' in Constants.py and GatheringTest.py.\nFixes #5366\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":11,"createdAt":"2018-04-24T06:51:53Z","updatedAt":"2018-06-02T17:07:09Z","closedAt":"2018-04-25T18:07:27Z","state":"merged","user":{"login":"GopiKishan14","avatarUrl":"https://avatars3.githubusercontent.com/u/32811229?v=4"},"owner":{"login":"GopiKishan14","avatarUrl":"https://avatars3.githubusercontent.com/u/32811229?v=4"},"assignee":{"login":"GopiKishan14","avatarUrl":"https://avatars3.githubusercontent.com/u/32811229?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"size/XS","color":"00DE0F"},{"name":"type/bug","color":"e11d21"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5421","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDM4MzgyMzg2NA==","url":"https://github.com/coala/coala/pull/5421#issuecomment-383823864","bodyText":"Please make the commit body length smaller(<72 characters per line)\nAlso make Closes to Fixes as it is a bug","diffHunk":null,"author":{"login":"harshhx17","avatarUrl":"https://avatars2.githubusercontent.com/u/31805694?v=4","name":"Harsh Kumar Bhartiya"},"createdAt":"2018-04-24T06:55:44Z","lastEditedAt":null,"updatedAt":"2018-04-24T06:55:44Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM4MzgyNDU2Ng==","url":"https://github.com/coala/coala/pull/5421#issuecomment-383824566","bodyText":"Thanks @harshhx17..\nMaking the changes","diffHunk":null,"author":{"login":"GopiKishan14","avatarUrl":"https://avatars3.githubusercontent.com/u/32811229?v=4","name":"Gopi Kishan"},"createdAt":"2018-04-24T06:58:45Z","lastEditedAt":null,"updatedAt":"2018-04-24T06:58:45Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM4MzgzMzA1OA==","url":"https://github.com/coala/coala/pull/5421#issuecomment-383833058","bodyText":"@jayvdb\nLGTM\nHave a look","diffHunk":null,"author":{"login":"harshhx17","avatarUrl":"https://avatars2.githubusercontent.com/u/31805694?v=4","name":"Harsh Kumar Bhartiya"},"createdAt":"2018-04-24T07:33:53Z","lastEditedAt":null,"updatedAt":"2018-04-24T07:33:53Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM4Mzg1MzE3OQ==","url":"https://github.com/coala/coala/pull/5421#issuecomment-383853179","bodyText":"@sangamcse\nI think I have made the change...\nHowever, if it is not about the length of the commit body, then can you please specify the changes that you expect","diffHunk":null,"author":{"login":"GopiKishan14","avatarUrl":"https://avatars3.githubusercontent.com/u/32811229?v=4","name":"Gopi Kishan"},"createdAt":"2018-04-24T08:44:59Z","lastEditedAt":null,"updatedAt":"2018-04-24T08:44:59Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM4Mzg1NDE5MQ==","url":"https://github.com/coala/coala/pull/5421#issuecomment-383854191","bodyText":"Make Fixes typo in Constants.py and GatheringTest.py and makes deafult to default. to This changes 'deafult' --> 'default' in Constants.py and GatheringTest.py.","diffHunk":null,"author":{"login":"sangamcse","avatarUrl":"https://avatars2.githubusercontent.com/u/26381717?v=4","name":"Sangam Kumar"},"createdAt":"2018-04-24T08:48:18Z","lastEditedAt":null,"updatedAt":"2018-04-24T08:48:18Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM4Mzg2NzMxMw==","url":"https://github.com/coala/coala/pull/5421#issuecomment-383867313","bodyText":"@sangamcse\nI have made the changes. Please review it.","diffHunk":null,"author":{"login":"GopiKishan14","avatarUrl":"https://avatars3.githubusercontent.com/u/32811229?v=4","name":"Gopi Kishan"},"createdAt":"2018-04-24T09:31:57Z","lastEditedAt":null,"updatedAt":"2018-04-24T09:31:57Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1533480610000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5422","number":5422,"title":"Update .coafile","body":"Issue link - #5389\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":14,"createdAt":"2018-04-24T16:54:40Z","updatedAt":"2018-08-05T14:50:10Z","closedAt":"2018-05-03T15:53:45Z","state":"closed","user":{"login":"vishal3410","avatarUrl":"https://avatars0.githubusercontent.com/u/25561116?v=4"},"owner":{"login":"vishal3410","avatarUrl":"https://avatars0.githubusercontent.com/u/25561116?v=4"},"assignee":{"login":"shashwatmishra76","avatarUrl":"https://avatars2.githubusercontent.com/u/24711156?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"importance/medium","color":"fbca04"},{"name":"process/pending review","color":"bfe5bf"},{"name":"size/S","color":"B1CF0A"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5422","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDM4NDAwNjcyOQ==","url":"https://github.com/coala/coala/pull/5422#issuecomment-384006729","bodyText":"please follow our commit guidelines: https://api.coala.io/en/latest/Developers/Writing_Good_Commits.html :)","diffHunk":null,"author":{"login":"anctartica","avatarUrl":"https://avatars0.githubusercontent.com/u/7020962?v=4","name":""},"createdAt":"2018-04-24T17:02:00Z","lastEditedAt":"2018-04-24T17:02:29Z","updatedAt":"2018-04-24T17:02:29Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM4NDAwNzgxMA==","url":"https://github.com/coala/coala/pull/5422#issuecomment-384007810","bodyText":"@anctartica Thanks for guidance :)","diffHunk":null,"author":{"login":"vishal3410","avatarUrl":"https://avatars0.githubusercontent.com/u/25561116?v=4","name":null},"createdAt":"2018-04-24T17:05:33Z","lastEditedAt":null,"updatedAt":"2018-04-24T17:05:33Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM4NjAyMzk3Ng==","url":"https://github.com/coala/coala/pull/5422#issuecomment-386023976","bodyText":"change your commit according to https://api.coala.io/en/latest/Developers/Writing_Good_Commits.html","diffHunk":null,"author":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4","name":"Ishan Srivastava"},"createdAt":"2018-05-02T15:44:15Z","lastEditedAt":null,"updatedAt":"2018-05-02T15:44:15Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM4NjAyNDcyOA==","url":"https://github.com/coala/coala/pull/5422#issuecomment-386024728","bodyText":"Hey @anctartica I see you haven't followed the commit guidelines. I cannot see the shortlog and issue link in your commit message. Use git commit --amend to change your commit message.","diffHunk":null,"author":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4","name":"Pareksha Manchanda"},"createdAt":"2018-05-02T15:46:32Z","lastEditedAt":null,"updatedAt":"2018-05-02T15:46:32Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM4NjMyODc4Mw==","url":"https://github.com/coala/coala/pull/5422#issuecomment-386328783","bodyText":"@ishanSrt  , I have changed the commits please check","diffHunk":null,"author":{"login":"vishal3410","avatarUrl":"https://avatars0.githubusercontent.com/u/25561116?v=4","name":null},"createdAt":"2018-05-03T15:08:38Z","lastEditedAt":null,"updatedAt":"2018-05-03T15:08:38Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM4NjMyOTk3MA==","url":"https://github.com/coala/coala/pull/5422#issuecomment-386329970","bodyText":"@vishal3410 your commit has unnecessary changes. Are you using the same branch for different issues? Please remove all the extra stuff.","diffHunk":null,"author":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4","name":"Ishan Srivastava"},"createdAt":"2018-05-03T15:12:17Z","lastEditedAt":null,"updatedAt":"2018-05-03T15:12:17Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM4NjMzMzk5Mw==","url":"https://github.com/coala/coala/pull/5422#issuecomment-386333993","bodyText":"@ishanSrt till now i have only removed those 3 things and i didn't altered any other files but still it shows 5 files changed i don't know how and i am not working on any other issue,how to remove the other things ? sorry for silly questions","diffHunk":null,"author":{"login":"vishal3410","avatarUrl":"https://avatars0.githubusercontent.com/u/25561116?v=4","name":null},"createdAt":"2018-05-03T15:24:17Z","lastEditedAt":null,"updatedAt":"2018-05-03T15:24:17Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM4NjMzNDY5Mw==","url":"https://github.com/coala/coala/pull/5422#issuecomment-386334693","bodyText":"@vishal3410 that question is more suited for google and stackoverflow. So fix it! 😉","diffHunk":null,"author":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4","name":"Ishan Srivastava"},"createdAt":"2018-05-03T15:26:17Z","lastEditedAt":null,"updatedAt":"2018-05-03T15:26:17Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM4NjM0NDM2Ng==","url":"https://github.com/coala/coala/pull/5422#issuecomment-386344366","bodyText":"@vishal3410 please go through the newcomer's guide once more and see a git tutorial. Closing PRs is highly discouraged 😕","diffHunk":null,"author":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4","name":"Ishan Srivastava"},"createdAt":"2018-05-03T15:54:50Z","lastEditedAt":null,"updatedAt":"2018-05-03T15:54:50Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM4NjM0NTY5OQ==","url":"https://github.com/coala/coala/pull/5422#issuecomment-386345699","bodyText":"Accidently closed trying to reopen","diffHunk":null,"author":{"login":"vishal3410","avatarUrl":"https://avatars0.githubusercontent.com/u/25561116?v=4","name":null},"createdAt":"2018-05-03T15:58:57Z","lastEditedAt":null,"updatedAt":"2018-05-03T15:58:57Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM4Njc2OTk2OA==","url":"https://github.com/coala/coala/pull/5422#issuecomment-386769968","bodyText":"@vishal3410 , if you commit new changes to your branch, this PR might re-open.\nBut maybe because you deleted the branch, it may be irreversible.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-05-05T01:32:30Z","lastEditedAt":null,"updatedAt":"2018-05-05T01:32:30Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM4NjgxOTM0Mg==","url":"https://github.com/coala/coala/pull/5422#issuecomment-386819342","bodyText":"so should i submit a new pr ?","diffHunk":null,"author":{"login":"vishal3410","avatarUrl":"https://avatars0.githubusercontent.com/u/25561116?v=4","name":null},"createdAt":"2018-05-05T16:54:51Z","lastEditedAt":null,"updatedAt":"2018-05-05T16:54:51Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQwODYyNTc5NQ==","url":"https://github.com/coala/coala/pull/5422#issuecomment-408625795","bodyText":"No, do not create a new PR.\nYou will need to rebase, and repush, and this PR should re-open magically (or I may have to re-open it after you've done that).\nCome onto https://coala.io/chat if you need help with that.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-07-28T18:14:01Z","lastEditedAt":null,"updatedAt":"2018-07-28T18:14:01Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1525660651000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5424","number":5424,"title":"Review.rst: Add a note to reviewers","body":"Issue number #5420\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":6,"createdAt":"2018-04-25T20:59:31Z","updatedAt":"2018-05-07T02:37:31Z","closedAt":null,"state":"open","user":{"login":"ShubhamBansal1997","avatarUrl":"https://avatars3.githubusercontent.com/u/2090043?v=4"},"owner":{"login":"ShubhamBansal1997","avatarUrl":"https://avatars3.githubusercontent.com/u/2090043?v=4"},"assignee":{"login":"ShubhamBansal1997","avatarUrl":"https://avatars3.githubusercontent.com/u/2090043?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/low","color":"207de5"},{"name":"process/wip","color":"fbca04"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5424","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NDYzNTk3NA==","url":"https://github.com/coala/coala/pull/5424#discussion_r184635974","bodyText":"This sentence needs to be improved so it is easier to understand.","diffHunk":"@@ -132,6 +132,8 @@ For the Reviewers\n    Bears require special attention during testing.\n    `Testing Bears <http://api.coala.io/en/latest/Developers/Testing_Bears.html>`__\n    provides a guideline for how to test bears.\n+-  Check that the changes haven't been pushed from master branch.\n+   Although it's not mandatory but a good practice to follow.","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-04-27T09:25:19Z","lastEditedAt":null,"updatedAt":"2018-04-27T09:25:19Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NjI1MzAwNA==","url":"https://github.com/coala/coala/pull/5424#discussion_r186253004","bodyText":"You might change it to As a good practice, check if the changes in PR are not pushed from the master branch","diffHunk":"@@ -132,6 +132,8 @@ For the Reviewers\n    Bears require special attention during testing.\n    `Testing Bears <http://api.coala.io/en/latest/Developers/Testing_Bears.html>`__\n    provides a guideline for how to test bears.\n+-  Check that the changes haven't been pushed from master branch.\n+   Although it's not mandatory but a good practice to follow.","author":{"login":"yashovardhanagrawal","avatarUrl":"https://avatars3.githubusercontent.com/u/21066442?v=4","name":"Yashovardhan Agrawal"},"createdAt":"2018-05-05T05:18:28Z","lastEditedAt":null,"updatedAt":"2018-05-05T05:18:28Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NjI2Mjg5Mw==","url":"https://github.com/coala/coala/pull/5424#discussion_r186262893","bodyText":"@jayvdb  Sentence updated as per mentioned by @yashovardhanagrawal. Please merge the PR","diffHunk":"@@ -132,6 +132,8 @@ For the Reviewers\n    Bears require special attention during testing.\n    `Testing Bears <http://api.coala.io/en/latest/Developers/Testing_Bears.html>`__\n    provides a guideline for how to test bears.\n+-  Check that the changes haven't been pushed from master branch.\n+   Although it's not mandatory but a good practice to follow.","author":{"login":"ShubhamBansal1997","avatarUrl":"https://avatars3.githubusercontent.com/u/2090043?v=4","name":"Shubham Bansal"},"createdAt":"2018-05-05T13:51:27Z","lastEditedAt":null,"updatedAt":"2018-05-05T13:51:27Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NjMxNjM2Ng==","url":"https://github.com/coala/coala/pull/5424#discussion_r186316366","bodyText":"full stop at end of your sentence.\nwhat does \"As a good practice\" mean for the reviewer?\nwhat should be done if the PR is from the master branch?","diffHunk":"@@ -132,6 +132,8 @@ For the Reviewers\n    Bears require special attention during testing.\n    `Testing Bears <http://api.coala.io/en/latest/Developers/Testing_Bears.html>`__\n    provides a guideline for how to test bears.\n+-  As a good practice, check if the changes in PR are not pushed\n+   from the master branch","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-05-07T02:36:28Z","lastEditedAt":null,"updatedAt":"2018-05-07T02:36:28Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM4NDQ3OTE0Mg==","url":"https://github.com/coala/coala/pull/5424#issuecomment-384479142","bodyText":"Please squash your commits and follow http://coala.io/commit","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-04-26T00:57:39Z","lastEditedAt":null,"updatedAt":"2018-04-26T00:57:39Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM4NDUwMTEwMg==","url":"https://github.com/coala/coala/pull/5424#issuecomment-384501102","bodyText":"@jayvdb Thanks! Squashed the commits. Please check","diffHunk":null,"author":{"login":"ShubhamBansal1997","avatarUrl":"https://avatars3.githubusercontent.com/u/2090043?v=4","name":"Shubham Bansal"},"createdAt":"2018-04-26T03:24:16Z","lastEditedAt":null,"updatedAt":"2018-04-26T03:24:16Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM4NDgxODA5Ng==","url":"https://github.com/coala/coala/pull/5424#issuecomment-384818096","bodyText":"Please follow http://coala.io/commit .  Read it carefully.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-04-26T23:22:49Z","lastEditedAt":null,"updatedAt":"2018-04-26T23:22:49Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM4NDgzMDkwOA==","url":"https://github.com/coala/coala/pull/5424#issuecomment-384830908","bodyText":"@jayvdb  Please check is it according to the commit guidelines.","diffHunk":null,"author":{"login":"ShubhamBansal1997","avatarUrl":"https://avatars3.githubusercontent.com/u/2090043?v=4","name":"Shubham Bansal"},"createdAt":"2018-04-27T00:50:04Z","lastEditedAt":null,"updatedAt":"2018-04-27T00:50:04Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM4NjkyODYxNw==","url":"https://github.com/coala/coala/pull/5424#issuecomment-386928617","bodyText":"@jayvdb removed \"update doc\"","diffHunk":null,"author":{"login":"ShubhamBansal1997","avatarUrl":"https://avatars3.githubusercontent.com/u/2090043?v=4","name":"Shubham Bansal"},"createdAt":"2018-05-07T00:27:06Z","lastEditedAt":null,"updatedAt":"2018-05-07T00:27:06Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1524990786000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5425","number":5425,"title":"Newcomers_Guide: Remove grey colored patches","body":"Checklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nCloses #5333","comments":21,"createdAt":"2018-04-26T14:47:22Z","updatedAt":"2018-04-29T08:33:06Z","closedAt":"2018-04-29T06:53:50Z","state":"closed","user":{"login":"nityanandagohain","avatarUrl":"https://avatars3.githubusercontent.com/u/26831659?v=4"},"owner":{"login":"nityanandagohain","avatarUrl":"https://avatars3.githubusercontent.com/u/26831659?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5425","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDM4NDgxNzgzMA==","url":"https://github.com/coala/coala/pull/5425#issuecomment-384817830","bodyText":"Please fix your commit message to comply with http://coala.io/commit","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-04-26T23:21:09Z","lastEditedAt":null,"updatedAt":"2018-04-26T23:21:09Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM4NDgzNDMyNA==","url":"https://github.com/coala/coala/pull/5425#issuecomment-384834324","bodyText":"@jayvdb please check the commit message now whats wrong in there.","diffHunk":null,"author":{"login":"nityanandagohain","avatarUrl":"https://avatars3.githubusercontent.com/u/26831659?v=4","name":"Nityananda Gohain"},"reactions":[],"createdAt":"2018-04-27T01:15:08Z","lastEditedAt":null,"updatedAt":"2018-04-27T01:15:08Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM4NTE0MjAzOA==","url":"https://github.com/coala/coala/pull/5425#issuecomment-385142038","bodyText":"@IpshitaC I have updated it please check.","diffHunk":null,"author":{"login":"nityanandagohain","avatarUrl":"https://avatars3.githubusercontent.com/u/26831659?v=4","name":"Nityananda Gohain"},"reactions":[],"createdAt":"2018-04-28T05:29:01Z","lastEditedAt":null,"updatedAt":"2018-04-28T05:29:01Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM4NTE3OTM1OA==","url":"https://github.com/coala/coala/pull/5425#issuecomment-385179358","bodyText":"@IpshitaC how do i do that ?","diffHunk":null,"author":{"login":"nityanandagohain","avatarUrl":"https://avatars3.githubusercontent.com/u/26831659?v=4","name":"Nityananda Gohain"},"reactions":[],"createdAt":"2018-04-28T14:17:23Z","lastEditedAt":null,"updatedAt":"2018-04-28T14:17:23Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM4NTE4NDk0MQ==","url":"https://github.com/coala/coala/pull/5425#issuecomment-385184941","bodyText":"Click on the build link for Circle CI and click on the rerun job button.\nSimilarly for other CIs","diffHunk":null,"author":{"login":"IpshitaC","avatarUrl":"https://avatars0.githubusercontent.com/u/18362353?v=4","name":"Ipshita Chatterjee"},"reactions":[{"id":"MDg6UmVhY3Rpb24yMjk1MzUxMg==","createdAt":"2018-04-28T15:40:02Z","content":"THUMBS_UP","user":{"login":"nityanandagohain","name":"Nityananda Gohain"}}],"createdAt":"2018-04-28T15:38:37Z","lastEditedAt":null,"updatedAt":"2018-04-28T15:38:37Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM4NTIyNzM3Mw==","url":"https://github.com/coala/coala/pull/5425#issuecomment-385227373","bodyText":"@kriti21 this seems to be making the problem about the bad looking heading severities even worse,\nand why only target yellow bg color? the code formatting looks as bad as on any other bg color,\n\njust removing the code formatting on some lines doesn't seem an appropriate fix if this is all you are trying to change,\n\n\nThis is removing the code styling on what are commands which should not be encouraged.\nThis issue should be labeled status/blocked and this PR closed as this will automatically get fixed when the entire theme is fixed such that when commands are formatted as code, they look great on bg colors of all severities.","diffHunk":null,"author":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4","name":"Ishan Srivastava"},"reactions":[],"createdAt":"2018-04-29T05:36:00Z","lastEditedAt":null,"updatedAt":"2018-04-29T05:36:00Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM4NTIzMDA5MA==","url":"https://github.com/coala/coala/pull/5425#issuecomment-385230090","bodyText":"@ishanSrt I get that removing colons is not the right approach (I have changed the issue heading as well). Apology for that. However, I am not sure if this will get fixed automatically though. @nityanandagohain You might as well close this PR for now.","diffHunk":null,"author":{"login":"kriti21","avatarUrl":"https://avatars3.githubusercontent.com/u/19872082?v=4","name":"Kriti Rohilla"},"reactions":[],"createdAt":"2018-04-29T06:49:57Z","lastEditedAt":null,"updatedAt":"2018-04-29T06:49:57Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM4NTIzMDI0Nw==","url":"https://github.com/coala/coala/pull/5425#issuecomment-385230247","bodyText":"ok :(","diffHunk":null,"author":{"login":"nityanandagohain","avatarUrl":"https://avatars3.githubusercontent.com/u/26831659?v=4","name":"Nityananda Gohain"},"reactions":[],"createdAt":"2018-04-29T06:53:39Z","lastEditedAt":null,"updatedAt":"2018-04-29T06:53:39Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM4NTIzMDg1Mw==","url":"https://github.com/coala/coala/pull/5425#issuecomment-385230853","bodyText":"Is there an issue created already to fix the colors according to the theme?","diffHunk":null,"author":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4","name":"Ishan Srivastava"},"reactions":[],"createdAt":"2018-04-29T07:07:47Z","lastEditedAt":"2018-04-29T07:07:59Z","updatedAt":"2018-04-29T07:07:59Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM4NTIzMjM0Nw==","url":"https://github.com/coala/coala/pull/5425#issuecomment-385232347","bodyText":"Nope but IMO multi colored theme is just for Newcomers guide only so #5333 should do it. And #5423 is also there.","diffHunk":null,"author":{"login":"kriti21","avatarUrl":"https://avatars3.githubusercontent.com/u/19872082?v=4","name":"Kriti Rohilla"},"reactions":[],"createdAt":"2018-04-29T07:36:37Z","lastEditedAt":null,"updatedAt":"2018-04-29T07:36:37Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM4NTIzNDM4MA==","url":"https://github.com/coala/coala/pull/5425#issuecomment-385234380","bodyText":"Otherwise it would require changes in css file and that would not be as simple.\n\nThat seems good","diffHunk":null,"author":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4","name":"Ishan Srivastava"},"reactions":[],"createdAt":"2018-04-29T08:14:49Z","lastEditedAt":"2018-04-29T08:15:00Z","updatedAt":"2018-04-29T08:15:00Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM4NTIzNTI5OA==","url":"https://github.com/coala/coala/pull/5425#issuecomment-385235298","bodyText":"So @nityanandagohain You can try making changes in CSS. If it works out, make sure to reopen this PR with your modified changes. :)","diffHunk":null,"author":{"login":"kriti21","avatarUrl":"https://avatars3.githubusercontent.com/u/19872082?v=4","name":"Kriti Rohilla"},"reactions":[],"createdAt":"2018-04-29T08:33:06Z","lastEditedAt":"2018-04-29T08:33:20Z","updatedAt":"2018-04-29T08:33:20Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1527959157000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5426","number":5426,"title":"Netlify docs","body":"Demo of https://gitlab.com/coala/mobans/merge_requests/1","comments":17,"createdAt":"2018-04-27T15:54:58Z","updatedAt":"2018-06-02T17:05:57Z","closedAt":"2018-05-17T06:29:11Z","state":"merged","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5426","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NTM5ODA4NA==","url":"https://github.com/coala/coala/pull/5426#discussion_r185398084","bodyText":"I may be wrong, but shouldn't we not be having the need to export PYTHONPATH if sphinx has its own conf file and the repository is always relative to it ?","diffHunk":"@@ -0,0 +1,3 @@\n+[build]\n+  publish = \"docs/_build/html\"\n+  command = \"pip install -r docs-requirements.txt && export PYTHONPATH=$(pwd) && python setup.py docs\"","author":{"login":"virresh","avatarUrl":"https://avatars0.githubusercontent.com/u/10978108?v=4","name":"Viresh Gupta"},"reactions":[],"createdAt":"2018-05-02T05:46:58Z","lastEditedAt":null,"updatedAt":"2018-05-02T05:46:58Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NTM5ODQ3MA==","url":"https://github.com/coala/coala/pull/5426#discussion_r185398470","bodyText":"Spotted something,\nWe do set the path in conf.py\nbut since we do the import before setting the path, the path being set is actually useless","diffHunk":"@@ -0,0 +1,3 @@\n+[build]\n+  publish = \"docs/_build/html\"\n+  command = \"pip install -r docs-requirements.txt && export PYTHONPATH=$(pwd) && python setup.py docs\"","author":{"login":"virresh","avatarUrl":"https://avatars0.githubusercontent.com/u/10978108?v=4","name":"Viresh Gupta"},"reactions":[{"id":"MDg6UmVhY3Rpb24yMzE1MzM5Ng==","createdAt":"2018-05-03T15:01:20Z","content":"THUMBS_UP","user":{"login":"jayvdb","name":"John Vandenberg"}}],"createdAt":"2018-05-02T05:50:48Z","lastEditedAt":"2018-05-02T05:51:11Z","updatedAt":"2018-05-02T05:51:11Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NTQxMTA2Ng==","url":"https://github.com/coala/coala/pull/5426#discussion_r185411066","bodyText":"Yup, correct.\nAs that was a non-standard inclusion in conf.py, it is better to get rid of it.  It would be a PEP8 violation anyway, as imports should appear first.\nLong term, we should be able to enhance https://github.com/moremoban/pypi-mobans/blob/master/templates/conf.py.jj2 and use that.  Adding non-standard logic is best avoided.\nexport PYTHONPATH=$(pwd) is done instead of installing the package, as it is quicker.","diffHunk":"@@ -0,0 +1,3 @@\n+[build]\n+  publish = \"docs/_build/html\"\n+  command = \"pip install -r docs-requirements.txt && export PYTHONPATH=$(pwd) && python setup.py docs\"","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-05-02T07:22:53Z","lastEditedAt":null,"updatedAt":"2018-05-02T07:22:53Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NTU0NDA3Mg==","url":"https://github.com/coala/coala/pull/5426#discussion_r185544072","bodyText":"Oh\nSo does setting that path serve any other purpose then ?\nIf not then should we remove that as well (possible the removal would be a non-standard inclusion, but we get rid of some un-used code maybe) ?","diffHunk":"@@ -0,0 +1,3 @@\n+[build]\n+  publish = \"docs/_build/html\"\n+  command = \"pip install -r docs-requirements.txt && export PYTHONPATH=$(pwd) && python setup.py docs\"","author":{"login":"virresh","avatarUrl":"https://avatars0.githubusercontent.com/u/10978108?v=4","name":"Viresh Gupta"},"reactions":[{"id":"MDg6UmVhY3Rpb24yMzE1MzM4MQ==","createdAt":"2018-05-03T15:01:05Z","content":"THUMBS_UP","user":{"login":"jayvdb","name":"John Vandenberg"}}],"createdAt":"2018-05-02T15:44:44Z","lastEditedAt":null,"updatedAt":"2018-05-02T15:44:44Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NTgyOTg5NA==","url":"https://github.com/coala/coala/pull/5426#discussion_r185829894","bodyText":"I suspect that the only reasons for it was so that \"setup.py docs\" would work.\nIt used to work.  See 687ec1b which broke it.  And #3785 for the original issue.\nProbably broken atm.  I've raised https://gitlab.com/coala/mobans/issues/8\nUntil we have a verified solution again, that line should stay in the local docs/conf.py .  Worst case it will disappear when we mobanise conf.py.","diffHunk":"@@ -0,0 +1,3 @@\n+[build]\n+  publish = \"docs/_build/html\"\n+  command = \"pip install -r docs-requirements.txt && export PYTHONPATH=$(pwd) && python setup.py docs\"","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yMzMyNDkzMA==","createdAt":"2018-05-08T07:15:20Z","content":"THUMBS_UP","user":{"login":"virresh","name":"Viresh Gupta"}}],"createdAt":"2018-05-03T15:00:54Z","lastEditedAt":null,"updatedAt":"2018-05-03T15:00:54Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4ODUzOTQyOQ==","url":"https://github.com/coala/coala/pull/5426#discussion_r188539429","bodyText":"I think we should get this merged.\nProbably the other issues will be taken care of in mobans\nLGTM","diffHunk":"@@ -0,0 +1,3 @@\n+[build]\n+  publish = \"docs/_build/html\"\n+  command = \"pip install -r docs-requirements.txt && export PYTHONPATH=$(pwd) && python setup.py docs\"","author":{"login":"virresh","avatarUrl":"https://avatars0.githubusercontent.com/u/10978108?v=4","name":"Viresh Gupta"},"reactions":[],"createdAt":"2018-05-16T08:21:38Z","lastEditedAt":null,"updatedAt":"2018-05-16T08:21:38Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4ODYwNzQ5OA==","url":"https://github.com/coala/coala/pull/5426#discussion_r188607498","bodyText":"Well, turns out that there is a issue which should be resolved in mobans.  See https://gitlab.com/coala/mobans/merge_requests/11","diffHunk":"@@ -0,0 +1,3 @@\n+[build]\n+  publish = \"docs/_build/html\"\n+  command = \"pip install -r docs-requirements.txt && export PYTHONPATH=$(pwd) && python setup.py docs\"","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-05-16T12:36:20Z","lastEditedAt":null,"updatedAt":"2018-05-16T12:36:20Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM4NTAxNDQ2Mg==","url":"https://github.com/coala/coala/pull/5426#issuecomment-385014462","bodyText":"See https://app.netlify.com/sites/coala-api/deploys/5ae3413fdd6a54650d62f04b / https://5ae3413fdd6a54650d62f04b--coala-api.netlify.com/?_ga=2.234147294.1164676217.1524784768-1405289453.1518139201","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-04-27T15:56:19Z","lastEditedAt":null,"updatedAt":"2018-04-27T15:56:19Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM4NTYxNTEzMw==","url":"https://github.com/coala/coala/pull/5426#issuecomment-385615133","bodyText":"https://app.netlify.com/sites/coala-api/deploys/5ae8150711b73b5007f76810 and https://5ae8150711b73b5007f76810--coala-api.netlify.com/","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-05-01T07:21:55Z","lastEditedAt":null,"updatedAt":"2018-05-01T07:21:55Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM4NTg2NzIyMg==","url":"https://github.com/coala/coala/pull/5426#issuecomment-385867222","bodyText":"Hello John why it is block ?, and I think this step should in Readme, a newcomer type issue :P","diffHunk":null,"author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"reactions":[],"createdAt":"2018-05-02T05:16:05Z","lastEditedAt":null,"updatedAt":"2018-05-02T05:16:05Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM4OTc1ODk3Mg==","url":"https://github.com/coala/coala/pull/5426#issuecomment-389758972","bodyText":"(previously approved by @virresh)","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-05-17T06:28:07Z","lastEditedAt":null,"updatedAt":"2018-05-17T06:28:07Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1527959208000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5427","number":5427,"title":"CollectorsTest.py: Remove unnecessary parameters","body":"This commit deletes the unneeded ignored_file_paths and limit_file_paths parameters from the test_file_invalid method.\nFixes #5340\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":7,"createdAt":"2018-04-28T09:34:49Z","updatedAt":"2018-06-02T17:06:48Z","closedAt":"2018-04-29T22:26:37Z","state":"merged","user":{"login":"NovaOutlaw","avatarUrl":"https://avatars1.githubusercontent.com/u/18121833?v=4"},"owner":{"login":"NovaOutlaw","avatarUrl":"https://avatars1.githubusercontent.com/u/18121833?v=4"},"assignee":{"login":"NovaOutlaw","avatarUrl":"https://avatars1.githubusercontent.com/u/18121833?v=4"},"labels":[{"name":"area/tests","color":"bfd4f2"},{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"importance/low","color":"70E870"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5427","comments":[]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1528545949000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5428","number":5428,"title":"Jinja2.py: Add support for ignore comments","body":"Closes #5107\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":8,"createdAt":"2018-04-28T13:59:28Z","updatedAt":"2018-06-09T12:05:49Z","closedAt":"2018-05-04T17:01:59Z","state":"merged","user":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4"},"owner":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4"},"assignee":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4"},"labels":[{"name":"area/actions","color":"207de5"},{"name":"difficulty/low","color":"207de5"},{"name":"process/approved","color":"009800"},{"name":"size/XS","color":"00DE0F"},{"name":"type/feature","color":"0052cc"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5428","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NDg2ODMyNA==","url":"https://github.com/coala/coala/pull/5428#discussion_r184868324","bodyText":"No. .jj2 is the extension","diffHunk":"@@ -0,0 +1,7 @@\n+from coalib.bearlib.languages.Language import Language\n+\n+\n+@Language\n+class Jinja2:\n+    extensions = '.html', '.xml'","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-04-29T00:19:32Z","lastEditedAt":null,"updatedAt":"2018-04-29T00:19:32Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NTk5MTgyMg==","url":"https://github.com/coala/coala/pull/5428#discussion_r185991822","bodyText":"these comments are obviously invalid for jinja, so it does not make sense to add your test to this method.  Create a new test method for jinja.","diffHunk":"@@ -101,6 +101,16 @@ def test_ignore(self):\n             with open(f_a, 'r') as f:\n                 self.assertEqual(file_diff_dict[f_a].modified, f.readlines())\n \n+            # Apply a third patch, old patch has to stay!\n+            uut.apply(Result.from_values('bear', 'msg', f_a, 3),\n+                      file_dict, file_diff_dict, 'jinja2')\n+            self.assertEqual(\n+                file_diff_dict[f_a].modified,\n+                ['1  /* Ignore else */\\n', '2  // Ignore origin\\n',","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-05-04T05:08:45Z","lastEditedAt":null,"updatedAt":"2018-05-04T05:08:45Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NTk5ODI0MQ==","url":"https://github.com/coala/coala/pull/5428#discussion_r185998241","bodyText":"You can use simply use get_ignore_comment to directly check whether your definition is working or not and accordingly write a test for that using unittest","diffHunk":"@@ -101,6 +101,16 @@ def test_ignore(self):\n             with open(f_a, 'r') as f:\n                 self.assertEqual(file_diff_dict[f_a].modified, f.readlines())\n \n+            # Apply a third patch, old patch has to stay!\n+            uut.apply(Result.from_values('bear', 'msg', f_a, 3),\n+                      file_dict, file_diff_dict, 'jinja2')\n+            self.assertEqual(\n+                file_diff_dict[f_a].modified,\n+                ['1  /* Ignore else */\\n', '2  // Ignore origin\\n',","author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"reactions":[],"createdAt":"2018-05-04T06:27:23Z","lastEditedAt":"2018-05-04T06:28:44Z","updatedAt":"2018-05-04T06:28:44Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM4NTg4Nzc1OQ==","url":"https://github.com/coala/coala/pull/5428#issuecomment-385887759","bodyText":"Yeah, I also think we can add more extensions like: .j2,.jinja, and .jinja2. @jayvdb, Is it okay to add these to extensions?","diffHunk":null,"author":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4","name":"Shrikrishna Singh"},"reactions":[],"createdAt":"2018-05-02T07:25:17Z","lastEditedAt":null,"updatedAt":"2018-05-02T07:25:17Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM4NTkzNjI2NQ==","url":"https://github.com/coala/coala/pull/5428#issuecomment-385936265","bodyText":"ya all those are appropriate additions.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yMzA4NDAwMA==","createdAt":"2018-05-02T11:08:24Z","content":"THUMBS_UP","user":{"login":"sks444","name":"Shrikrishna Singh"}}],"createdAt":"2018-05-02T10:41:25Z","lastEditedAt":null,"updatedAt":"2018-05-02T10:41:25Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM4NTk4MTQxOQ==","url":"https://github.com/coala/coala/pull/5428#issuecomment-385981419","bodyText":"Actually, I am a little bit confused about adding tests. I don't see test cases explicitly, for any of the language definitions here.\nE.g.: see this PR by Nalin, he added a new language definition but not the tests or this PR by sils in which he added many new language definitions but not tests for any of them, explicitly. I think tests for all the language definitions are covered here? Please correct me if I am wrong.","diffHunk":null,"author":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4","name":"Shrikrishna Singh"},"reactions":[],"createdAt":"2018-05-02T13:41:36Z","lastEditedAt":null,"updatedAt":"2018-05-02T13:41:36Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM4NTk4NTM5Mw==","url":"https://github.com/coala/coala/pull/5428#issuecomment-385985393","bodyText":"You are adding support for ignore comments.  The tests are in the ignore comments tests.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-05-02T13:53:59Z","lastEditedAt":null,"updatedAt":"2018-05-02T13:53:59Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1524938849000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5430","number":5430,"title":"Pareksha/shellcheck","body":"For short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":1,"createdAt":"2018-04-28T17:58:25Z","updatedAt":"2018-04-28T18:07:29Z","closedAt":"2018-04-28T18:07:27Z","state":"closed","user":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4"},"owner":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4"},"assignee":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4"},"labels":[{"name":"area/CI","color":"eb6420"},{"name":"area/CLI","color":"006b75"},{"name":"difficulty/low","color":"207de5"},{"name":"difficulty/medium","color":"0052cc"},{"name":"importance/critical","color":"e11d21"},{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"00DE0F"},{"name":"type/bug","color":"e11d21"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5430","comments":[]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1524943946000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5431","number":5431,"title":"config.yml: Install command for ``shellcheck``","body":"Installation command for shellcheck is changed\nfor proper working in circleci.\nCloses #5429\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":0,"createdAt":"2018-04-28T18:14:04Z","updatedAt":"2018-04-28T19:32:26Z","closedAt":"2018-04-28T19:32:26Z","state":"closed","user":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4"},"owner":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4"},"assignee":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4"},"labels":[{"name":"area/CI","color":"eb6420"},{"name":"difficulty/low","color":"207de5"},{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5431","comments":[]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1527959197000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5435","number":5435,"title":"tests: Replace httpbin with Google teapot","body":"Replaces http://httpbin.org/status/418 with\nhttps://www.google.com/teapot as a more reliable\nend-point for testing.\nCloses #5433\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":7,"createdAt":"2018-04-30T03:19:32Z","updatedAt":"2018-06-02T17:06:37Z","closedAt":"2018-04-30T11:19:02Z","state":"merged","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"area/tests","color":"bfd4f2"},{"name":"difficulty/medium","color":"0052cc"},{"name":"importance/critical","color":"e11d21"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5435","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDM4NTMyMjAyMw==","url":"https://github.com/coala/coala/pull/5435#issuecomment-385322023","bodyText":"Why are we even testing for the 418 error code ?\nhttps://en.wikipedia.org/wiki/List_of_HTTP_status_codes#4xx_Client_errors\nApparently it was an April fool's joke ?\nWouldn't it be more reliable to test 404 or so ? (Google teapot was an easter egg and hence has could go down at any time)","diffHunk":null,"author":{"login":"AbdealiJK","avatarUrl":"https://avatars3.githubusercontent.com/u/2200743?v=4","name":"AbdealiJK"},"createdAt":"2018-04-30T06:36:02Z","lastEditedAt":null,"updatedAt":"2018-04-30T06:36:02Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM4NTMyODUzMw==","url":"https://github.com/coala/coala/pull/5435#issuecomment-385328533","bodyText":"Whatever code we use, we need a host that reliably provides it, and does not mind that we test using it. Maybe github hosted coala.io page which doesnt exist? But that will skew our visitor analytics. Better ideas?","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-04-30T07:27:47Z","lastEditedAt":null,"updatedAt":"2018-04-30T07:27:47Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM4NTM0MDYzNQ==","url":"https://github.com/coala/coala/pull/5435#issuecomment-385340635","bodyText":"Found another site. I think we are safe wrt these disappearing.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-04-30T08:39:56Z","lastEditedAt":null,"updatedAt":"2018-04-30T08:39:56Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1532741816000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5436","number":5436,"title":"ConfigurationGathering.py: Change COAFILE_OUTPUT to refer to .coafile","body":"This changes COAFILE_OUTPUT to refer to .coafile\nCloses #5417\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":5,"createdAt":"2018-05-02T11:30:35Z","updatedAt":"2018-07-28T01:36:56Z","closedAt":null,"state":"open","user":{"login":"PrajwalM2212","avatarUrl":"https://avatars3.githubusercontent.com/u/30733262?v=4"},"owner":{"login":"PrajwalM2212","avatarUrl":"https://avatars3.githubusercontent.com/u/30733262?v=4"},"assignee":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"area/CLI","color":"006b75"},{"name":"area/config","color":"fbca04"},{"name":"difficulty/low","color":"207de5"},{"name":"importance/low","color":"70E870"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5436","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NTk5MDQ5Ng==","url":"https://github.com/coala/coala/pull/5436#discussion_r185990496","bodyText":"this will be used when loading the get_system_coafile if it returns the file named default_coafile","diffHunk":"@@ -16,6 +16,13 @@\n from coalib.settings.Setting import Setting, path\n from string import Template\n \n+COARC_OUTPUT = Template('$type \\'$file\\' $found!\\n'\n+                        'Here\\'s what you can do:\\n'\n+                        '*add `--config .coarc --save` '","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-05-04T04:48:54Z","lastEditedAt":null,"updatedAt":"2018-05-04T04:48:54Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NTk5MDUyMg==","url":"https://github.com/coala/coala/pull/5436#discussion_r185990522","bodyText":"Also where is the .coarc located?","diffHunk":"@@ -16,6 +16,13 @@\n from coalib.settings.Setting import Setting, path\n from string import Template\n \n+COARC_OUTPUT = Template('$type \\'$file\\' $found!\\n'\n+                        'Here\\'s what you can do:\\n'\n+                        '*add `--config .coarc --save` '","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-05-04T04:49:21Z","lastEditedAt":null,"updatedAt":"2018-05-04T04:49:21Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NjI0NjEzOA==","url":"https://github.com/coala/coala/pull/5436#discussion_r186246138","bodyText":"I should change Constants.default_coafile to default_coafile as Constants.default_coafile refers to .coafile.","diffHunk":"@@ -132,11 +138,17 @@ def load_config_file(filename, log_printer=None, silent=False):\n                                 .substitute(type='Default coafile',","author":{"login":"PrajwalM2212","avatarUrl":"https://avatars3.githubusercontent.com/u/30733262?v=4","name":"PRAJWAL M"},"createdAt":"2018-05-05T00:19:38Z","lastEditedAt":null,"updatedAt":"2018-05-05T00:19:38Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NjI0ODU3NA==","url":"https://github.com/coala/coala/pull/5436#discussion_r186248574","bodyText":"lets fix this confusion first : #5440","diffHunk":"@@ -132,11 +138,17 @@ def load_config_file(filename, log_printer=None, silent=False):\n                                 .substitute(type='Default coafile',\n                                             file=Constants.default_coafile,\n                                             found='not found'))\n-            else:\n+            elif os.path.basename(filename) == Constants.default_coafile:","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-05-05T01:20:19Z","lastEditedAt":null,"updatedAt":"2018-05-05T01:20:19Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM4NTk5MzczOA==","url":"https://github.com/coala/coala/pull/5436#issuecomment-385993738","bodyText":"@jayvdb  COAFILE_OUTPUT is used only in the function load_config_file. The message gives instructions to create a .coafile as --save creates a .coafile .\n\nBut the function load_config_file is called from load_configuration function .\n\nAs you said load_config_file is ironically called only for loading User-Wide and System-Wide coafile.\nSo now you wanted me to change the warning and error messages in load_config_file to show how to create a User-Wide or System-Wide coafile instead of a .coafile right ?","diffHunk":null,"author":{"login":"PrajwalM2212","avatarUrl":"https://avatars3.githubusercontent.com/u/30733262?v=4","name":"PRAJWAL M"},"createdAt":"2018-05-02T14:18:34Z","lastEditedAt":"2018-05-02T14:27:09Z","updatedAt":"2018-05-02T14:27:09Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM4NjE5MzIyNA==","url":"https://github.com/coala/coala/pull/5436#issuecomment-386193224","bodyText":"@jayvdb  It has 2 invocations . One is forsystem/default coafile and other is for user coafile. I have changed the else part to accommodate for user or .coarc and left the if part as it is .","diffHunk":null,"author":{"login":"PrajwalM2212","avatarUrl":"https://avatars3.githubusercontent.com/u/30733262?v=4","name":"PRAJWAL M"},"createdAt":"2018-05-03T05:12:20Z","lastEditedAt":"2018-05-03T05:13:22Z","updatedAt":"2018-05-03T05:13:22Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM4NjY2ODc0MQ==","url":"https://github.com/coala/coala/pull/5436#issuecomment-386668741","bodyText":"@jayvdb  Can you check the PR now ? The CI is failing due to test coverage.","diffHunk":null,"author":{"login":"PrajwalM2212","avatarUrl":"https://avatars3.githubusercontent.com/u/30733262?v=4","name":"PRAJWAL M"},"createdAt":"2018-05-04T17:19:35Z","lastEditedAt":null,"updatedAt":"2018-05-04T17:19:35Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQwODU3Mzc1Mg==","url":"https://github.com/coala/coala/pull/5436#issuecomment-408573752","bodyText":"ping @PrajwalM2212 .  #5440 is ready to roll.  Could be a simple extra commit in this PR.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-07-28T01:36:55Z","lastEditedAt":null,"updatedAt":"2018-07-28T01:36:55Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1526230355000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5437","number":5437,"title":"FilterTest.py: Import available_filters directly","body":"Import available_filters directly from coalib.parsing.filters\nCloses #5331\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":8,"createdAt":"2018-05-03T19:44:27Z","updatedAt":"2018-05-13T16:52:35Z","closedAt":"2018-05-13T16:52:35Z","state":"merged","user":{"login":"tallicamike","avatarUrl":"https://avatars0.githubusercontent.com/u/1883838?v=4"},"owner":{"login":"tallicamike","avatarUrl":"https://avatars0.githubusercontent.com/u/1883838?v=4"},"assignee":{"login":"tallicamike","avatarUrl":"https://avatars0.githubusercontent.com/u/1883838?v=4"},"labels":[{"name":"area/tests","color":"bfd4f2"},{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"importance/low","color":"70E870"},{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5437","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDM4ODQ3MjgxOQ==","url":"https://github.com/coala/coala/pull/5437#issuecomment-388472819","bodyText":"use git commit --amend --no-edit and repush to run the tests on failing CI again","diffHunk":null,"author":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4","name":"Ishan Srivastava"},"createdAt":"2018-05-11T20:09:10Z","lastEditedAt":null,"updatedAt":"2018-05-11T20:09:10Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1525394435000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5438","number":5438,"title":"setup.py: Sync moban","body":"Related to https://gitlab.com/coala/mobans/merge_requests/3\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":2,"createdAt":"2018-05-04T00:21:40Z","updatedAt":"2018-05-04T00:40:35Z","closedAt":"2018-05-04T00:40:29Z","state":"merged","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5438","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDM4NjQ3Nzg0OQ==","url":"https://github.com/coala/coala/pull/5438#issuecomment-386477849","bodyText":"(manually ff merged)","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-05-04T00:40:34Z","lastEditedAt":null,"updatedAt":"2018-05-04T00:40:34Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1528545678000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5443","number":5443,"title":"CachingUtilities.py: Removes unnecessary imports","body":"Removes unnecessary imports on CachingUtilities.pickle_load docstring.\nCloses #5441\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":5,"createdAt":"2018-05-05T13:57:07Z","updatedAt":"2018-06-09T12:01:18Z","closedAt":"2018-05-06T04:02:38Z","state":"merged","user":{"login":"satya-vinay","avatarUrl":"https://avatars3.githubusercontent.com/u/16017648?v=4"},"owner":{"login":"satya-vinay","avatarUrl":"https://avatars3.githubusercontent.com/u/16017648?v=4"},"assignee":{"login":"satya-vinay","avatarUrl":"https://avatars3.githubusercontent.com/u/16017648?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"importance/low","color":"70E870"},{"name":"process/approved","color":"009800"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5443","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDM4NjgwODIxNw==","url":"https://github.com/coala/coala/pull/5443#issuecomment-386808217","bodyText":"@jayvdb please review my PR.","diffHunk":null,"author":{"login":"satya-vinay","avatarUrl":"https://avatars3.githubusercontent.com/u/16017648?v=4","name":"Satya Vinay"},"createdAt":"2018-05-05T14:08:52Z","lastEditedAt":null,"updatedAt":"2018-05-05T14:08:52Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1525735942000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5447","number":5447,"title":"Formatting.py: Fixing a typo","body":"There was a typo in the formatting aspect file, inside\nthe LineLength class. In the docs subclass the variable\n\"example_langague\" was changed to \"example_language\".\nFixes #5446\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":8,"createdAt":"2018-05-07T18:48:56Z","updatedAt":"2018-05-07T23:32:22Z","closedAt":"2018-05-07T23:32:22Z","state":"merged","user":{"login":"attilanagy","avatarUrl":"https://avatars3.githubusercontent.com/u/3238740?v=4"},"owner":{"login":"attilanagy","avatarUrl":"https://avatars3.githubusercontent.com/u/3238740?v=4"},"labels":[{"name":"area/aspects","color":"000000"},{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5447","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDM4NzE3MzgzOA==","url":"https://github.com/coala/coala/pull/5447#issuecomment-387173838","bodyText":"@attilanagy Follow the commit guidelines and make changes appropriately","diffHunk":null,"author":{"login":"PrajwalM2212","avatarUrl":"https://avatars3.githubusercontent.com/u/30733262?v=4","name":"PRAJWAL M"},"reactions":[],"createdAt":"2018-05-07T19:20:06Z","lastEditedAt":null,"updatedAt":"2018-05-07T19:20:06Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM4NzE3NTEyNA==","url":"https://github.com/coala/coala/pull/5447#issuecomment-387175124","bodyText":"@PrajwalM2212 the issue reported by GitMate bot has been already fixed.","diffHunk":null,"author":{"login":"attilanagy","avatarUrl":"https://avatars3.githubusercontent.com/u/3238740?v=4","name":"Attila Nagy"},"reactions":[{"id":"MDg6UmVhY3Rpb24yMzMwMzY2Mw==","createdAt":"2018-05-07T19:26:59Z","content":"THUMBS_UP","user":{"login":"PrajwalM2212","name":"PRAJWAL M"}}],"createdAt":"2018-05-07T19:24:50Z","lastEditedAt":null,"updatedAt":"2018-05-07T19:24:50Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1527959232000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5448","number":5448,"title":"ConfigurationGatheringTest.py: Save user_coafile before modify","body":"…onstants.user_coafile state save\nConstants.user_coafile is now saved and restored from setUp() and tearDown()\nFixes #5445\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n[ *] I read the commit guidelines and I've followed\nthem.\n[ *] I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":10,"createdAt":"2018-05-07T19:30:35Z","updatedAt":"2018-06-02T17:07:12Z","closedAt":"2018-05-08T10:34:16Z","state":"merged","user":{"login":"siddhant-curious","avatarUrl":"https://avatars1.githubusercontent.com/u/14145704?v=4"},"owner":{"login":"siddhant-curious","avatarUrl":"https://avatars1.githubusercontent.com/u/14145704?v=4"},"assignee":{"login":"siddhant-curious","avatarUrl":"https://avatars1.githubusercontent.com/u/14145704?v=4"},"labels":[{"name":"area/config","color":"fbca04"},{"name":"area/tests","color":"bfd4f2"},{"name":"difficulty/low","color":"207de5"},{"name":"importance/low","color":"70E870"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5448","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NjUyNjExOA==","url":"https://github.com/coala/coala/pull/5448#discussion_r186526118","bodyText":"Running coala before sending PR must fix problems of this type.","diffHunk":"@@ -45,8 +45,11 @@ def setUp(self):\n \n         # Needed so coala doesn't error out\n         self.min_args = ['-f', '*.java', '-b', 'JavaTestBear']\n+        ","author":{"login":"PrajwalM2212","avatarUrl":"https://avatars3.githubusercontent.com/u/30733262?v=4","name":"PRAJWAL M"},"reactions":[],"createdAt":"2018-05-07T19:37:26Z","lastEditedAt":"2018-05-07T19:38:16Z","updatedAt":"2018-05-07T19:38:16Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NjUyNjM2MQ==","url":"https://github.com/coala/coala/pull/5448#discussion_r186526361","bodyText":"Running coala before sending PR must fix problems of this type.","diffHunk":"@@ -45,8 +45,11 @@ def setUp(self):\n \n         # Needed so coala doesn't error out\n         self.min_args = ['-f', '*.java', '-b', 'JavaTestBear']\n+        ","author":{"login":"PrajwalM2212","avatarUrl":"https://avatars3.githubusercontent.com/u/30733262?v=4","name":"PRAJWAL M"},"reactions":[],"createdAt":"2018-05-07T19:38:22Z","lastEditedAt":null,"updatedAt":"2018-05-07T19:38:22Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NjUyNzg4MQ==","url":"https://github.com/coala/coala/pull/5448#discussion_r186527881","bodyText":"I ran only pytests to test my changes. You are right. I should've. Thanks.","diffHunk":"@@ -45,8 +45,11 @@ def setUp(self):\n \n         # Needed so coala doesn't error out\n         self.min_args = ['-f', '*.java', '-b', 'JavaTestBear']\n+        ","author":{"login":"siddhant-curious","avatarUrl":"https://avatars1.githubusercontent.com/u/14145704?v=4","name":"Siddhant Chhabra"},"reactions":[],"createdAt":"2018-05-07T19:44:09Z","lastEditedAt":null,"updatedAt":"2018-05-07T19:44:09Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NjU3ODA2OQ==","url":"https://github.com/coala/coala/pull/5448#discussion_r186578069","bodyText":"what about this one?","diffHunk":"@@ -119,8 +122,6 @@ def test_system_coafile_parsing(self):\n         Constants.system_coafile = tmp","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-05-07T23:15:55Z","lastEditedAt":null,"updatedAt":"2018-05-07T23:15:55Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NjYxMTk1Ng==","url":"https://github.com/coala/coala/pull/5448#discussion_r186611956","bodyText":"This is system_coafilewhich is  different from user_coafile","diffHunk":"@@ -119,8 +122,6 @@ def test_system_coafile_parsing(self):\n         Constants.system_coafile = tmp","author":{"login":"siddhant-curious","avatarUrl":"https://avatars1.githubusercontent.com/u/14145704?v=4","name":"Siddhant Chhabra"},"reactions":[],"createdAt":"2018-05-08T04:03:26Z","lastEditedAt":null,"updatedAt":"2018-05-08T04:03:26Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NjYxMjgxMw==","url":"https://github.com/coala/coala/pull/5448#discussion_r186612813","bodyText":"@jayvdb ping","diffHunk":"@@ -119,8 +122,6 @@ def test_system_coafile_parsing(self):\n         Constants.system_coafile = tmp","author":{"login":"siddhant-curious","avatarUrl":"https://avatars1.githubusercontent.com/u/14145704?v=4","name":"Siddhant Chhabra"},"reactions":[],"createdAt":"2018-05-08T04:12:47Z","lastEditedAt":null,"updatedAt":"2018-05-08T04:12:47Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NjYxNDAyNw==","url":"https://github.com/coala/coala/pull/5448#discussion_r186614027","bodyText":"@siddhant-curious\nThe ci is red because you have not followed our commit guidelines\n(your maximum line length in body and issue references are inappropriate)\nPlease fix them before requesting further reviews","diffHunk":"@@ -119,8 +122,6 @@ def test_system_coafile_parsing(self):\n         Constants.system_coafile = tmp","author":{"login":"virresh","avatarUrl":"https://avatars0.githubusercontent.com/u/10978108?v=4","name":"Viresh Gupta"},"reactions":[],"createdAt":"2018-05-08T04:26:11Z","lastEditedAt":null,"updatedAt":"2018-05-08T04:26:11Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NjYxNDM3MQ==","url":"https://github.com/coala/coala/pull/5448#discussion_r186614371","bodyText":"@virresh okay, I will fix it now.","diffHunk":"@@ -119,8 +122,6 @@ def test_system_coafile_parsing(self):\n         Constants.system_coafile = tmp","author":{"login":"siddhant-curious","avatarUrl":"https://avatars1.githubusercontent.com/u/14145704?v=4","name":"Siddhant Chhabra"},"reactions":[],"createdAt":"2018-05-08T04:29:51Z","lastEditedAt":null,"updatedAt":"2018-05-08T04:29:51Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NjYxNTMxNw==","url":"https://github.com/coala/coala/pull/5448#discussion_r186615317","bodyText":"done","diffHunk":"@@ -119,8 +122,6 @@ def test_system_coafile_parsing(self):\n         Constants.system_coafile = tmp","author":{"login":"siddhant-curious","avatarUrl":"https://avatars1.githubusercontent.com/u/14145704?v=4","name":"Siddhant Chhabra"},"reactions":[{"id":"MDg6UmVhY3Rpb24yMzMyMDc1NQ==","createdAt":"2018-05-08T04:43:12Z","content":"THUMBS_UP","user":{"login":"virresh","name":"Viresh Gupta"}}],"createdAt":"2018-05-08T04:40:23Z","lastEditedAt":null,"updatedAt":"2018-05-08T04:40:23Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NjYxNjIxNA==","url":"https://github.com/coala/coala/pull/5448#discussion_r186616214","bodyText":"@siddhant-curious Referencing #5445  If the assertEqual fails, Constants.user_coafile will not be restored, which could result in lots of other tests to fail in unpredictable ways.. The same applies for all areas where Constants.system_coafile is used . And in ConfigurationGatheringTest.py there are a lot of areas where Constants.system_coafile is manipulated in the undesirable way.","diffHunk":"@@ -119,8 +122,6 @@ def test_system_coafile_parsing(self):\n         Constants.system_coafile = tmp","author":{"login":"PrajwalM2212","avatarUrl":"https://avatars3.githubusercontent.com/u/30733262?v=4","name":"PRAJWAL M"},"reactions":[],"createdAt":"2018-05-08T04:50:44Z","lastEditedAt":"2018-05-08T04:52:37Z","updatedAt":"2018-05-08T04:52:37Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NjYxNjQ2NQ==","url":"https://github.com/coala/coala/pull/5448#discussion_r186616465","bodyText":"Yes it does. This is one of the things I was asking on the channel. I obviously have to fix it; on it.","diffHunk":"@@ -119,8 +122,6 @@ def test_system_coafile_parsing(self):\n         Constants.system_coafile = tmp","author":{"login":"siddhant-curious","avatarUrl":"https://avatars1.githubusercontent.com/u/14145704?v=4","name":"Siddhant Chhabra"},"reactions":[{"id":"MDg6UmVhY3Rpb24yMzMyMTAwMQ==","createdAt":"2018-05-08T04:55:07Z","content":"THUMBS_UP","user":{"login":"PrajwalM2212","name":"PRAJWAL M"}}],"createdAt":"2018-05-08T04:53:19Z","lastEditedAt":null,"updatedAt":"2018-05-08T04:53:19Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NjYyNjI0OA==","url":"https://github.com/coala/coala/pull/5448#discussion_r186626248","bodyText":"Done.","diffHunk":"@@ -119,8 +122,6 @@ def test_system_coafile_parsing(self):\n         Constants.system_coafile = tmp","author":{"login":"siddhant-curious","avatarUrl":"https://avatars1.githubusercontent.com/u/14145704?v=4","name":"Siddhant Chhabra"},"reactions":[],"createdAt":"2018-05-08T06:18:28Z","lastEditedAt":null,"updatedAt":"2018-05-08T06:18:28Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM4NzMwMjA4Ng==","url":"https://github.com/coala/coala/pull/5448#issuecomment-387302086","bodyText":"Also please rebase your changes onto the current master.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-05-08T06:47:58Z","lastEditedAt":null,"updatedAt":"2018-05-08T06:47:58Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM4NzMzMzMwNQ==","url":"https://github.com/coala/coala/pull/5448#issuecomment-387333305","bodyText":"Commit message corrected. The branch has been rebased off the master. @jayvdb","diffHunk":null,"author":{"login":"siddhant-curious","avatarUrl":"https://avatars1.githubusercontent.com/u/14145704?v=4","name":"Siddhant Chhabra"},"reactions":[],"createdAt":"2018-05-08T08:55:19Z","lastEditedAt":null,"updatedAt":"2018-05-08T08:55:19Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1526479383000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5450","number":5450,"title":"Writing_Linter_Bears.rst: Fix method definition","body":"Adds missing code and changes it from\ncreate_arguments(config_file) --> create_arguments(self, config_file)\nFixes #5354\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":11,"createdAt":"2018-05-08T12:50:16Z","updatedAt":"2018-05-16T14:03:03Z","closedAt":"2018-05-16T14:03:03Z","state":"merged","user":{"login":"z1ggy-o","avatarUrl":"https://avatars1.githubusercontent.com/u/19348185?v=4"},"owner":{"login":"z1ggy-o","avatarUrl":"https://avatars1.githubusercontent.com/u/19348185?v=4"},"assignee":{"login":"z1ggy-o","avatarUrl":"https://avatars1.githubusercontent.com/u/19348185?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"00DE0F"},{"name":"status/needs info","color":"006b75"},{"name":"type/bug","color":"e11d21"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5450","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4ODU4MTg3Ng==","url":"https://github.com/coala/coala/pull/5450#discussion_r188581876","bodyText":"break this long sentence\nWhat you need to pay attention to is that putting the --> Pay attention that putting the","diffHunk":"@@ -496,17 +496,40 @@ give us one, by passing the parameter ``global_bear=True``:\n     @linter(executable='some_tool',\n             global_bear=True,\n             output_format='regex',\n-            output_regex=r'<filename>: <message>'')\n+            output_regex=r'<filename>: <message>')\n     class SomeToolBear:\n         @staticmethod\n         def create_arguments(config_file):\n-            pass\n+            return []\n \n The ``create_arguments`` method takes no ``filename`` and ``file`` in this case\n since there is no file context. You can still make coala aware of the file an\n issue was detected in, by using the ``filename`` named group in\n your ``output_regex`` if relevant to the wrapped tool.\n \n+As mentioned before, ``create_arguments`` doesn't have to be a static method.\n+In this case remember to prepend ``self`` to the parameters in the signature:\n+\n+::\n+\n+    from coalib.bearlib.abstractions.Linter import linter\n+\n+    @linter(executable='some_tool',\n+            global_bear=True,\n+            output_format='regex',\n+            output_regex=r'<filename>: <message>')\n+    class PythonTestBear:\n+        def create_arguments(self, config_file):\n+            return '--lint', self.file_dict.keys()\n+\n+You can access the complete list of files using ``self.file_dict`` which return\n+a dictionary of ``{filename: file contents}``.\n+What you need to pay attention to is that putting the complete list of files on\n+the command line will cause breakages when the length of the command line\n+exceeds the OS permitted length, or the complete list of files is greater than\n+the OS permitted number of args.","author":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4","name":"Ishan Srivastava"},"reactions":[],"createdAt":"2018-05-16T10:52:26Z","lastEditedAt":null,"updatedAt":"2018-05-16T10:52:26Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4ODU4OTQ2Mg==","url":"https://github.com/coala/coala/pull/5450#discussion_r188589462","bodyText":"ok, have already changed it ;)","diffHunk":"@@ -496,17 +496,40 @@ give us one, by passing the parameter ``global_bear=True``:\n     @linter(executable='some_tool',\n             global_bear=True,\n             output_format='regex',\n-            output_regex=r'<filename>: <message>'')\n+            output_regex=r'<filename>: <message>')\n     class SomeToolBear:\n         @staticmethod\n         def create_arguments(config_file):\n-            pass\n+            return []\n \n The ``create_arguments`` method takes no ``filename`` and ``file`` in this case\n since there is no file context. You can still make coala aware of the file an\n issue was detected in, by using the ``filename`` named group in\n your ``output_regex`` if relevant to the wrapped tool.\n \n+As mentioned before, ``create_arguments`` doesn't have to be a static method.\n+In this case remember to prepend ``self`` to the parameters in the signature:\n+\n+::\n+\n+    from coalib.bearlib.abstractions.Linter import linter\n+\n+    @linter(executable='some_tool',\n+            global_bear=True,\n+            output_format='regex',\n+            output_regex=r'<filename>: <message>')\n+    class PythonTestBear:\n+        def create_arguments(self, config_file):\n+            return '--lint', self.file_dict.keys()\n+\n+You can access the complete list of files using ``self.file_dict`` which return\n+a dictionary of ``{filename: file contents}``.\n+What you need to pay attention to is that putting the complete list of files on\n+the command line will cause breakages when the length of the command line\n+exceeds the OS permitted length, or the complete list of files is greater than\n+the OS permitted number of args.","author":{"login":"z1ggy-o","avatarUrl":"https://avatars1.githubusercontent.com/u/19348185?v=4","name":"Guangyu Zhu"},"reactions":[],"createdAt":"2018-05-16T11:23:30Z","lastEditedAt":null,"updatedAt":"2018-05-16T11:23:30Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM4NzQzOTQyNA==","url":"https://github.com/coala/coala/pull/5450#issuecomment-387439424","bodyText":"LGTM 👍","diffHunk":null,"author":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4","name":"Palash Nigam"},"reactions":[],"createdAt":"2018-05-08T15:19:31Z","lastEditedAt":null,"updatedAt":"2018-05-08T15:19:31Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM4NzQ2ODU0OQ==","url":"https://github.com/coala/coala/pull/5450#issuecomment-387468549","bodyText":"See issue.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-05-08T16:50:56Z","lastEditedAt":null,"updatedAt":"2018-05-08T16:50:56Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM4Nzk3MzcwNg==","url":"https://github.com/coala/coala/pull/5450#issuecomment-387973706","bodyText":"@ishanSrt I've read the comments in #5354\nbut not sure how to make the change.\nShould I remove the @staticmethod and change pass to return [] ?\nlike\nclass SomeToolBear:\n    def create_arguments(self, config_file):\n        return []","diffHunk":null,"author":{"login":"z1ggy-o","avatarUrl":"https://avatars1.githubusercontent.com/u/19348185?v=4","name":"Guangyu Zhu"},"reactions":[],"createdAt":"2018-05-10T07:19:03Z","lastEditedAt":null,"updatedAt":"2018-05-10T07:19:03Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM4Nzk3NDc2OQ==","url":"https://github.com/coala/coala/pull/5450#issuecomment-387974769","bodyText":"you should add example of both types, using @staticmethod without self like CPPCheckBear does and also with self along with the warnings mentioned in the comment. Also investigate the error @sangamcse notified about and see if the fix mentioned in the comment by John does the job.","diffHunk":null,"author":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4","name":"Ishan Srivastava"},"reactions":[],"createdAt":"2018-05-10T07:24:31Z","lastEditedAt":"2018-05-10T07:24:55Z","updatedAt":"2018-05-10T07:24:55Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM4Nzk4MTQwMg==","url":"https://github.com/coala/coala/pull/5450#issuecomment-387981402","bodyText":"using @staticmethod without self like CPPCheckBear does\n\n@ishanSrt its actually the other way around. CPPCheckBear doesn't use @staticmethod but uses self","diffHunk":null,"author":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4","name":"Palash Nigam"},"reactions":[{"id":"MDg6UmVhY3Rpb24yMzQ0MzY2Nw==","createdAt":"2018-05-10T07:57:37Z","content":"LAUGH","user":{"login":"ishanSrt","name":"Ishan Srivastava"}},{"id":"MDg6UmVhY3Rpb24yMzQ0MzY3Mg==","createdAt":"2018-05-10T07:57:42Z","content":"THUMBS_UP","user":{"login":"ishanSrt","name":"Ishan Srivastava"}}],"createdAt":"2018-05-10T07:56:45Z","lastEditedAt":null,"updatedAt":"2018-05-10T07:56:45Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1527959207000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5452","number":5452,"title":"Executing_Tests.rst: Mention codecov","body":"Mention codecov.io and explain why\n100% test coverage not possible\nwhile executing tests.\nFixes #5444\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":13,"createdAt":"2018-05-09T10:30:27Z","updatedAt":"2018-06-02T17:06:47Z","closedAt":"2018-05-13T17:50:57Z","state":"merged","user":{"login":"gopalgoel19","avatarUrl":"https://avatars0.githubusercontent.com/u/11490517?v=4"},"owner":{"login":"gopalgoel19","avatarUrl":"https://avatars0.githubusercontent.com/u/11490517?v=4"},"assignee":{"login":"gopalgoel19","avatarUrl":"https://avatars0.githubusercontent.com/u/11490517?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/low","color":"207de5"},{"name":"importance/low","color":"70E870"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5452","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NzAwNDY0OA==","url":"https://github.com/coala/coala/pull/5452#discussion_r187004648","bodyText":"Are you certain that the coverage will never be 100% locally? otherwise it should be 'You may not get a test coverage of 100% locally.'?","diffHunk":"@@ -56,8 +56,12 @@ To run our tests, you can also use ``python3 setup.py test``\n \n .. note::\n \n-    You will not get a test coverage of 100% - the coverage on the\n-    website is merged for several python versions.\n+    You will not get a test coverage of 100% locally! - the coverage is","author":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4","name":"Kilari Teja"},"reactions":[{"id":"MDg6UmVhY3Rpb24yMzM5Njk4OQ==","createdAt":"2018-05-09T12:01:01Z","content":"THUMBS_UP","user":{"login":"jayvdb","name":"John Vandenberg"}},{"id":"MDg6UmVhY3Rpb24yMzQxNjMxNg==","createdAt":"2018-05-09T17:45:35Z","content":"THUMBS_UP","user":{"login":"gopalgoel19","name":"Gopal Goel"}}],"createdAt":"2018-05-09T11:02:05Z","lastEditedAt":null,"updatedAt":"2018-05-09T11:02:05Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NzAwNTU4OQ==","url":"https://github.com/coala/coala/pull/5452#discussion_r187005589","bodyText":"I think this line (the coverage on the website is merged for several python versions) is redundant and isn't making things clear enough. What do you think about removing it for the sake of the next line?","diffHunk":"@@ -56,8 +56,12 @@ To run our tests, you can also use ``python3 setup.py test``\n \n .. note::\n \n-    You will not get a test coverage of 100% - the coverage on the\n-    website is merged for several python versions.\n+    You will not get a test coverage of 100% locally! - the coverage is\n+    measured across builds against several python versions. The coverage","author":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4","name":"Kilari Teja"},"reactions":[{"id":"MDg6UmVhY3Rpb24yMzQxNjY5Mw==","createdAt":"2018-05-09T17:52:37Z","content":"THUMBS_UP","user":{"login":"gopalgoel19","name":"Gopal Goel"}}],"createdAt":"2018-05-09T11:06:23Z","lastEditedAt":"2018-05-09T11:19:26Z","updatedAt":"2018-05-09T11:19:26Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NzAwNjEzMQ==","url":"https://github.com/coala/coala/pull/5452#discussion_r187006131","bodyText":"merged -> merged results & even without -> even without","diffHunk":"@@ -56,8 +56,12 @@ To run our tests, you can also use ``python3 setup.py test``\n \n .. note::\n \n-    You will not get a test coverage of 100% - the coverage on the\n-    website is merged for several python versions.\n+    You will not get a test coverage of 100% locally! - the coverage is\n+    measured across builds against several python versions. The coverage\n+    published on `codecov.io <https://codecov.io/gh/coala/>`__ (GitHub\n+    Projects) and `codecov.io <https://codecov.io/gl/coala/>`__ (GitLab\n+    Projects) are actually merged for several python versions. Thus, your\n+    test coverage can 'pass' even without reaching 100% .","author":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4","name":"Kilari Teja"},"reactions":[{"id":"MDg6UmVhY3Rpb24yMzM5NjkzNA==","createdAt":"2018-05-09T11:59:40Z","content":"THUMBS_UP","user":{"login":"jayvdb","name":"John Vandenberg"}}],"createdAt":"2018-05-09T11:09:25Z","lastEditedAt":null,"updatedAt":"2018-05-09T11:09:25Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NzAxNjIyMg==","url":"https://github.com/coala/coala/pull/5452#discussion_r187016222","bodyText":"Also results are merged from different OS.  Appveyor results provide coverage of Windows specific lines, and Travis/Circle provide coverage of Unix specific lines.","diffHunk":"@@ -56,8 +56,12 @@ To run our tests, you can also use ``python3 setup.py test``\n \n .. note::\n \n-    You will not get a test coverage of 100% - the coverage on the\n-    website is merged for several python versions.\n+    You will not get a test coverage of 100% locally! - the coverage is\n+    measured across builds against several python versions. The coverage\n+    published on `codecov.io <https://codecov.io/gh/coala/>`__ (GitHub\n+    Projects) and `codecov.io <https://codecov.io/gl/coala/>`__ (GitLab\n+    Projects) are actually merged for several python versions. Thus, your\n+    test coverage can 'pass' even without reaching 100% .","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-05-09T12:00:54Z","lastEditedAt":null,"updatedAt":"2018-05-09T12:00:54Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NzEyMTQxMA==","url":"https://github.com/coala/coala/pull/5452#discussion_r187121410","bodyText":"Cool. Let me make changes and make it more clear.","diffHunk":"@@ -56,8 +56,12 @@ To run our tests, you can also use ``python3 setup.py test``\n \n .. note::\n \n-    You will not get a test coverage of 100% - the coverage on the\n-    website is merged for several python versions.\n+    You will not get a test coverage of 100% locally! - the coverage is\n+    measured across builds against several python versions. The coverage\n+    published on `codecov.io <https://codecov.io/gh/coala/>`__ (GitHub\n+    Projects) and `codecov.io <https://codecov.io/gl/coala/>`__ (GitLab\n+    Projects) are actually merged for several python versions. Thus, your\n+    test coverage can 'pass' even without reaching 100% .","author":{"login":"gopalgoel19","avatarUrl":"https://avatars0.githubusercontent.com/u/11490517?v=4","name":"Gopal Goel"},"reactions":[],"createdAt":"2018-05-09T17:47:01Z","lastEditedAt":null,"updatedAt":"2018-05-09T17:47:01Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NzEzNjczMQ==","url":"https://github.com/coala/coala/pull/5452#discussion_r187136731","bodyText":"this doesn't seem like the correct explanation for why the coverage is not full.\nits due to\n\npragma no cover\nlack of tests, I stumble upon writing bad code and still passing tests every now and then and reviews correcting me for it. I assume everything in coala is not tested and the initial part of it was merged without adding tests. should confirm this by a maintainer.","diffHunk":"@@ -56,8 +56,14 @@ To run our tests, you can also use ``python3 setup.py test``\n \n .. note::\n \n-    You will not get a test coverage of 100% - the coverage on the\n-    website is merged for several python versions.\n+    You may not get a test coverage of 100% locally. The coverage\n+    published on `codecov.io <https://codecov.io/gh/coala/>`__ (GitHub\n+    Projects) and `codecov.io <https://codecov.io/gl/coala/>`__ (GitLab\n+    Projects) are actually merged results for several python versions.\n+    Also, the results are merged from different OS. Appveyor results\n+    provide coverage of Windows specific lines, and Travis/Circle\n+    provide coverage of Unix specific lines. Thus, your test coverage\n+    can 'pass' without reaching 100% .","author":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4","name":"Ishan Srivastava"},"reactions":[{"id":"MDg6UmVhY3Rpb24yMzQyMTQzNg==","createdAt":"2018-05-09T19:24:22Z","content":"THUMBS_UP","user":{"login":"jayvdb","name":"John Vandenberg"}}],"createdAt":"2018-05-09T18:38:44Z","lastEditedAt":null,"updatedAt":"2018-05-09T18:38:44Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NzE0Mjc3NA==","url":"https://github.com/coala/coala/pull/5452#discussion_r187142774","bodyText":"Should I also mention that 'some part of the code is not tested as it is marked with # pragma: no cover'?","diffHunk":"@@ -56,8 +56,14 @@ To run our tests, you can also use ``python3 setup.py test``\n \n .. note::\n \n-    You will not get a test coverage of 100% - the coverage on the\n-    website is merged for several python versions.\n+    You may not get a test coverage of 100% locally. The coverage\n+    published on `codecov.io <https://codecov.io/gh/coala/>`__ (GitHub\n+    Projects) and `codecov.io <https://codecov.io/gl/coala/>`__ (GitLab\n+    Projects) are actually merged results for several python versions.\n+    Also, the results are merged from different OS. Appveyor results\n+    provide coverage of Windows specific lines, and Travis/Circle\n+    provide coverage of Unix specific lines. Thus, your test coverage\n+    can 'pass' without reaching 100% .","author":{"login":"gopalgoel19","avatarUrl":"https://avatars0.githubusercontent.com/u/11490517?v=4","name":"Gopal Goel"},"reactions":[],"createdAt":"2018-05-09T18:59:49Z","lastEditedAt":null,"updatedAt":"2018-05-09T18:59:49Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NzE0MzIyMg==","url":"https://github.com/coala/coala/pull/5452#discussion_r187143222","bodyText":"whatever explanation gets the job done 👍\nbut it shouldn't be wrong","diffHunk":"@@ -56,8 +56,14 @@ To run our tests, you can also use ``python3 setup.py test``\n \n .. note::\n \n-    You will not get a test coverage of 100% - the coverage on the\n-    website is merged for several python versions.\n+    You may not get a test coverage of 100% locally. The coverage\n+    published on `codecov.io <https://codecov.io/gh/coala/>`__ (GitHub\n+    Projects) and `codecov.io <https://codecov.io/gl/coala/>`__ (GitLab\n+    Projects) are actually merged results for several python versions.\n+    Also, the results are merged from different OS. Appveyor results\n+    provide coverage of Windows specific lines, and Travis/Circle\n+    provide coverage of Unix specific lines. Thus, your test coverage\n+    can 'pass' without reaching 100% .","author":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4","name":"Ishan Srivastava"},"reactions":[{"id":"MDg6UmVhY3Rpb24yMzQyMTEzOQ==","createdAt":"2018-05-09T19:18:03Z","content":"THUMBS_UP","user":{"login":"jayvdb","name":"John Vandenberg"}}],"createdAt":"2018-05-09T19:01:38Z","lastEditedAt":null,"updatedAt":"2018-05-09T19:01:38Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NzE0OTA5Mg==","url":"https://github.com/coala/coala/pull/5452#discussion_r187149092","bodyText":"@ishanSrt , this is correct information, as far as it goes.  It is describing why someone can run tests locally and not reach 100%.  This problem is somewhat irrelevant now, after c9e8d79, as the OS / Python version specific coverage problems are auto-ignored within pytest, rather than requiring a script to get it right.\nAnd once I get #4169 merged (it is mostly blocked by other patches by other people who arnt working on them :/ ), #pragma: no cover will be rejected.","diffHunk":"@@ -56,8 +56,14 @@ To run our tests, you can also use ``python3 setup.py test``\n \n .. note::\n \n-    You will not get a test coverage of 100% - the coverage on the\n-    website is merged for several python versions.\n+    You may not get a test coverage of 100% locally. The coverage\n+    published on `codecov.io <https://codecov.io/gh/coala/>`__ (GitHub\n+    Projects) and `codecov.io <https://codecov.io/gl/coala/>`__ (GitLab\n+    Projects) are actually merged results for several python versions.\n+    Also, the results are merged from different OS. Appveyor results\n+    provide coverage of Windows specific lines, and Travis/Circle\n+    provide coverage of Unix specific lines. Thus, your test coverage\n+    can 'pass' without reaching 100% .","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-05-09T19:24:09Z","lastEditedAt":null,"updatedAt":"2018-05-09T19:24:09Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NzE0OTkwOQ==","url":"https://github.com/coala/coala/pull/5452#discussion_r187149909","bodyText":"@jayvdb\n\nAlso, the results are merged from different OS\n\ndon't know if that's true, each one produces separate coverage report for its own environment. even different versions of python","diffHunk":"@@ -56,8 +56,14 @@ To run our tests, you can also use ``python3 setup.py test``\n \n .. note::\n \n-    You will not get a test coverage of 100% - the coverage on the\n-    website is merged for several python versions.\n+    You may not get a test coverage of 100% locally. The coverage\n+    published on `codecov.io <https://codecov.io/gh/coala/>`__ (GitHub\n+    Projects) and `codecov.io <https://codecov.io/gl/coala/>`__ (GitLab\n+    Projects) are actually merged results for several python versions.\n+    Also, the results are merged from different OS. Appveyor results\n+    provide coverage of Windows specific lines, and Travis/Circle\n+    provide coverage of Unix specific lines. Thus, your test coverage\n+    can 'pass' without reaching 100% .","author":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4","name":"Ishan Srivastava"},"reactions":[],"createdAt":"2018-05-09T19:27:08Z","lastEditedAt":null,"updatedAt":"2018-05-09T19:27:08Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NzE1MDI0MA==","url":"https://github.com/coala/coala/pull/5452#discussion_r187150240","bodyText":"The info that @ishanSrt is providing is also very important, as developers often forget to write tests, and that is typically why they will see test coverage not reach 100%.  But for that to happen, they wont have run pytest, because it will load the plugins mentioned in setup.cfg, which includes coverage, and it will fail locally if they havent written the tests yet.\nThe solution is not for the developer to add #pragma: no cover.  The code reviewer will usually reject that.  And soon we'll have CI automatically reject that, except in the most limited of cases.\nUsually the correct solution is write some tests.","diffHunk":"@@ -56,8 +56,14 @@ To run our tests, you can also use ``python3 setup.py test``\n \n .. note::\n \n-    You will not get a test coverage of 100% - the coverage on the\n-    website is merged for several python versions.\n+    You may not get a test coverage of 100% locally. The coverage\n+    published on `codecov.io <https://codecov.io/gh/coala/>`__ (GitHub\n+    Projects) and `codecov.io <https://codecov.io/gl/coala/>`__ (GitLab\n+    Projects) are actually merged results for several python versions.\n+    Also, the results are merged from different OS. Appveyor results\n+    provide coverage of Windows specific lines, and Travis/Circle\n+    provide coverage of Unix specific lines. Thus, your test coverage\n+    can 'pass' without reaching 100% .","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yMzQzNDM3OA==","createdAt":"2018-05-10T01:53:48Z","content":"THUMBS_UP","user":{"login":"ksdme","name":"Kilari Teja"}}],"createdAt":"2018-05-09T19:28:23Z","lastEditedAt":null,"updatedAt":"2018-05-09T19:28:23Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NzE1MTA0OQ==","url":"https://github.com/coala/coala/pull/5452#discussion_r187151049","bodyText":"how is getting a merged coverage report (that is if we get one) enabling the test coverage to pass even when its not 100%","diffHunk":"@@ -56,8 +56,14 @@ To run our tests, you can also use ``python3 setup.py test``\n \n .. note::\n \n-    You will not get a test coverage of 100% - the coverage on the\n-    website is merged for several python versions.\n+    You may not get a test coverage of 100% locally. The coverage\n+    published on `codecov.io <https://codecov.io/gh/coala/>`__ (GitHub\n+    Projects) and `codecov.io <https://codecov.io/gl/coala/>`__ (GitLab\n+    Projects) are actually merged results for several python versions.\n+    Also, the results are merged from different OS. Appveyor results\n+    provide coverage of Windows specific lines, and Travis/Circle\n+    provide coverage of Unix specific lines. Thus, your test coverage\n+    can 'pass' without reaching 100% .","author":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4","name":"Ishan Srivastava"},"reactions":[],"createdAt":"2018-05-09T19:31:20Z","lastEditedAt":null,"updatedAt":"2018-05-09T19:31:20Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NzE1MTY3MQ==","url":"https://github.com/coala/coala/pull/5452#discussion_r187151671","bodyText":"should help if we briefly mention the fact that the person solving the issue should concentrate on getting 100% coverage on the changes that he/she is making rather than worrying about the coverage report of the whole project.","diffHunk":"@@ -56,8 +56,14 @@ To run our tests, you can also use ``python3 setup.py test``\n \n .. note::\n \n-    You will not get a test coverage of 100% - the coverage on the\n-    website is merged for several python versions.\n+    You may not get a test coverage of 100% locally. The coverage\n+    published on `codecov.io <https://codecov.io/gh/coala/>`__ (GitHub\n+    Projects) and `codecov.io <https://codecov.io/gl/coala/>`__ (GitLab\n+    Projects) are actually merged results for several python versions.\n+    Also, the results are merged from different OS. Appveyor results\n+    provide coverage of Windows specific lines, and Travis/Circle\n+    provide coverage of Unix specific lines. Thus, your test coverage\n+    can 'pass' without reaching 100% .","author":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4","name":"Ishan Srivastava"},"reactions":[],"createdAt":"2018-05-09T19:33:45Z","lastEditedAt":null,"updatedAt":"2018-05-09T19:33:45Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM4ODY0MDc1OA==","url":"https://github.com/coala/coala/pull/5452#issuecomment-388640758","bodyText":"Your issue isnt a bug, so the commit message should be Closes ... instead of Fixes ...\nAlso you will need to rebase your local branch (or sync your local branch with this PR's rebased branch).\nOther than that, I think this is good enough.\nThere will be more improvements, but this is enough to resolve the current issue.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yMzU2MzUwOA==","createdAt":"2018-05-13T17:04:35Z","content":"THUMBS_UP","user":{"login":"gopalgoel19","name":"Gopal Goel"}}],"createdAt":"2018-05-13T16:56:25Z","lastEditedAt":null,"updatedAt":"2018-05-13T16:56:25Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1531987388000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5458","number":5458,"title":"CliParsing.py: Throw error for conflicting arguments","body":"Add conflict check for arguments -config and --no-config\nFixes #5115\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":15,"createdAt":"2018-05-12T11:29:59Z","updatedAt":"2018-07-19T08:03:08Z","closedAt":"2018-07-19T08:02:39Z","state":"merged","user":{"login":"raduklb","avatarUrl":"https://avatars2.githubusercontent.com/u/36372694?v=4"},"owner":{"login":"raduklb","avatarUrl":"https://avatars2.githubusercontent.com/u/36372694?v=4"},"assignee":{"login":"raduklb","avatarUrl":"https://avatars2.githubusercontent.com/u/36372694?v=4"},"labels":[{"name":"area/CLI","color":"006b75"},{"name":"difficulty/low","color":"207de5"},{"name":"size/XS","color":"00DE0F"},{"name":"type/bug","color":"e11d21"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5458","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4Nzg3MzgzNg==","url":"https://github.com/coala/coala/pull/5458#discussion_r187873836","bodyText":"I think that here as well it should be --config as, if I'm not mistaken, even though the test is passing it isn't actually checking that functionality. The command fails with an exception, but it fails because it doesn't recognize -config. I think it should be --config and a .coafile should be provided as argument to the --config option. I don't know which is the best way to do this: maybe create a temporary .coafile? As in: \n  \n    \n      coala/tests/parsing/ConfParserTest.py\n    \n    \n        Lines 45 to 47\n      in\n      ac5aa59\n    \n    \n    \n    \n\n        \n          \n           self.tempdir = tempfile.gettempdir() \n        \n\n        \n          \n           self.file = os.path.join(self.tempdir, '.coafile') \n        \n\n        \n          \n           self.nonexistentfile = os.path.join(self.tempdir, 'e81k7bd98t')","diffHunk":"@@ -71,3 +71,8 @@ def test_check_conflicts(self):\n         with self.assertRaisesRegex(SystemExit, '2') as cm:\n             check_conflicts(sections)\n             self.assertEqual(cm.exception.code, 2)\n+\n+        sections = parse_cli(arg_list=['--no-config', '-config'])","author":{"login":"tallicamike","avatarUrl":"https://avatars0.githubusercontent.com/u/1883838?v=4","name":"Mihai Tiganus"},"reactions":[],"createdAt":"2018-05-14T08:37:32Z","lastEditedAt":null,"updatedAt":"2018-05-14T08:37:32Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4ODIzMjM5Ng==","url":"https://github.com/coala/coala/pull/5458#discussion_r188232396","bodyText":"Yes, it should be --config but I don't think a temporary .coafile is required. The test is meant to only check whether conflicting arguments are given.","diffHunk":"@@ -71,3 +71,8 @@ def test_check_conflicts(self):\n         with self.assertRaisesRegex(SystemExit, '2') as cm:\n             check_conflicts(sections)\n             self.assertEqual(cm.exception.code, 2)\n+\n+        sections = parse_cli(arg_list=['--no-config', '-config'])","author":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4","name":"Pareksha Manchanda"},"reactions":[],"createdAt":"2018-05-15T10:04:45Z","lastEditedAt":null,"updatedAt":"2018-05-15T10:04:45Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4ODI0MzI0Mg==","url":"https://github.com/coala/coala/pull/5458#discussion_r188243242","bodyText":"In this way I think it would fail because it doesn't have a configuration file provided before checking the conflict between --config and --no-config. So, if I am right the test will pass but will still not do the intended checking. On the other hand I don't know if a .coafile is needed, any file should do in the end indeed, @pareksha. What are your thoughts on this?","diffHunk":"@@ -71,3 +71,8 @@ def test_check_conflicts(self):\n         with self.assertRaisesRegex(SystemExit, '2') as cm:\n             check_conflicts(sections)\n             self.assertEqual(cm.exception.code, 2)\n+\n+        sections = parse_cli(arg_list=['--no-config', '-config'])","author":{"login":"tallicamike","avatarUrl":"https://avatars0.githubusercontent.com/u/1883838?v=4","name":"Mihai Tiganus"},"reactions":[],"createdAt":"2018-05-15T10:48:10Z","lastEditedAt":null,"updatedAt":"2018-05-15T10:48:10Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MDA1NDUzNg==","url":"https://github.com/coala/coala/pull/5458#discussion_r190054536","bodyText":"looking at the other tests I don't think it is required.","diffHunk":"@@ -71,3 +71,8 @@ def test_check_conflicts(self):\n         with self.assertRaisesRegex(SystemExit, '2') as cm:\n             check_conflicts(sections)\n             self.assertEqual(cm.exception.code, 2)\n+\n+        sections = parse_cli(arg_list=['--no-config', '-config'])","author":{"login":"anctartica","avatarUrl":"https://avatars0.githubusercontent.com/u/7020962?v=4","name":""},"reactions":[],"createdAt":"2018-05-22T21:11:34Z","lastEditedAt":null,"updatedAt":"2018-05-22T21:11:34Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MDA1NDg1NQ==","url":"https://github.com/coala/coala/pull/5458#discussion_r190054855","bodyText":"Look at other tests in test_check_conflicts. None of them specify .coafile. It is not needed","diffHunk":"@@ -71,3 +71,8 @@ def test_check_conflicts(self):\n         with self.assertRaisesRegex(SystemExit, '2') as cm:\n             check_conflicts(sections)\n             self.assertEqual(cm.exception.code, 2)\n+\n+        sections = parse_cli(arg_list=['--no-config', '--config', '.coafile'])","author":{"login":"anctartica","avatarUrl":"https://avatars0.githubusercontent.com/u/7020962?v=4","name":""},"reactions":[],"createdAt":"2018-05-22T21:12:41Z","lastEditedAt":null,"updatedAt":"2018-05-22T21:12:41Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MTE4NTA1Ng==","url":"https://github.com/coala/coala/pull/5458#discussion_r191185056","bodyText":"I think a .coafile is needed because if you run coala just with --no-config and --config an error of usage will be generated.","diffHunk":"@@ -71,3 +71,8 @@ def test_check_conflicts(self):\n         with self.assertRaisesRegex(SystemExit, '2') as cm:\n             check_conflicts(sections)\n             self.assertEqual(cm.exception.code, 2)\n+\n+        sections = parse_cli(arg_list=['--no-config', '--config', '.coafile'])","author":{"login":"raduklb","avatarUrl":"https://avatars2.githubusercontent.com/u/36372694?v=4","name":"Radu Capalb"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNTk4MzgxNA==","createdAt":"2018-07-04T09:10:14Z","content":"THUMBS_UP","user":{"login":"pareksha","name":"Pareksha Manchanda"}},{"id":"MDg6UmVhY3Rpb24yNjY2ODEzNQ==","createdAt":"2018-07-19T05:08:35Z","content":"THUMBS_UP","user":{"login":"jayvdb","name":"John Vandenberg"}}],"createdAt":"2018-05-28T11:40:49Z","lastEditedAt":null,"updatedAt":"2018-05-28T11:40:49Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5MTE5ODAwOA==","url":"https://github.com/coala/coala/pull/5458#discussion_r191198008","bodyText":"ok --config expects one argument so, it is needed here.","diffHunk":"@@ -71,3 +71,8 @@ def test_check_conflicts(self):\n         with self.assertRaisesRegex(SystemExit, '2') as cm:\n             check_conflicts(sections)\n             self.assertEqual(cm.exception.code, 2)\n+\n+        sections = parse_cli(arg_list=['--no-config', '--config', '.coafile'])","author":{"login":"anctartica","avatarUrl":"https://avatars0.githubusercontent.com/u/7020962?v=4","name":""},"reactions":[{"id":"MDg6UmVhY3Rpb24yNjY2ODEzNw==","createdAt":"2018-07-19T05:08:41Z","content":"THUMBS_UP","user":{"login":"jayvdb","name":"John Vandenberg"}}],"createdAt":"2018-05-28T12:47:21Z","lastEditedAt":"2018-05-28T12:59:20Z","updatedAt":"2018-05-28T12:59:20Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM4ODU2MzQ1NA==","url":"https://github.com/coala/coala/pull/5458#issuecomment-388563454","bodyText":"Your commit message has -config ; needs to be --config","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-05-12T15:40:38Z","lastEditedAt":null,"updatedAt":"2018-05-12T15:40:38Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM5MDQ2OTE4OQ==","url":"https://github.com/coala/coala/pull/5458#issuecomment-390469189","bodyText":"@pareksha Can you have a look now, please?","diffHunk":null,"author":{"login":"raduklb","avatarUrl":"https://avatars2.githubusercontent.com/u/36372694?v=4","name":"Radu Capalb"},"reactions":[],"createdAt":"2018-05-20T09:40:42Z","lastEditedAt":null,"updatedAt":"2018-05-20T09:40:42Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1527959217000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5459","number":5459,"title":"setup.py: Sync moban","body":"Related to https://gitlab.com/coala/mobans/merge_requests/9\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":6,"createdAt":"2018-05-13T02:00:13Z","updatedAt":"2018-06-02T17:06:57Z","closedAt":"2018-05-13T15:41:50Z","state":"merged","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5459","comments":[]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1526675007000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5460","number":5460,"title":"Update PHP definition","body":"Add aliases, extensions, comment delimiters, string delimiters, and keywords.\ncloses #5315\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":7,"createdAt":"2018-05-14T17:03:01Z","updatedAt":"2018-05-18T20:23:27Z","closedAt":"2018-05-18T20:23:27Z","state":"merged","user":{"login":"bekicot","avatarUrl":"https://avatars0.githubusercontent.com/u/1826884?v=4"},"owner":{"login":"bekicot","avatarUrl":"https://avatars0.githubusercontent.com/u/1826884?v=4"},"assignee":{"login":"bekicot","avatarUrl":"https://avatars0.githubusercontent.com/u/1826884?v=4"},"labels":[{"name":"area/CI","color":"eb6420"},{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5460","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDM5MDE0NTMxNQ==","url":"https://github.com/coala/coala/pull/5460#issuecomment-390145315","bodyText":"Squash your commits. Rebase. Fix your commit message. Read the guideline very carefully.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-05-18T09:07:46Z","lastEditedAt":null,"updatedAt":"2018-05-18T09:07:46Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1528990365000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5461","number":5461,"title":"Formatting: Add description to `preferred_quotation` ","body":"This adds more description to preferred_quotation\ntaste of Quotation aspect to clarify it more.\nCloses #5520\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":11,"createdAt":"2018-05-15T09:31:07Z","updatedAt":"2018-06-14T15:32:45Z","closedAt":"2018-06-14T15:23:16Z","state":"merged","user":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4"},"owner":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4"},"assignee":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4"},"labels":[{"name":"area/aspects","color":"000000"},{"name":"area/documentation","color":"bfe5bf"},{"name":"process/approved","color":"009800"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5461","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4OTM4OTg2Mw==","url":"https://github.com/coala/coala/pull/5461#discussion_r189389863","bodyText":"how is this different from preferred_quotation.\nThis needs a lot of documentation to explain why it is different, and when it should be used, as compared to just preferred_quotation.\nA real example would be very helpful.","diffHunk":"@@ -393,3 +394,6 @@ class docs:\n     preferred_quotation = Taste[str](\n         'Represents the preferred quotation',\n         ('\\'', '\"'), default='\\'')\n+    force_preferred_quotation = Taste[bool](","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-05-18T20:49:57Z","lastEditedAt":null,"updatedAt":"2018-05-18T20:49:57Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4OTM5MDEzMQ==","url":"https://github.com/coala/coala/pull/5461#discussion_r189390131","bodyText":"Perhaps part of the problem is what is preferred_quotation, and why isnt it mandatory to follow the preferred quotation?","diffHunk":"@@ -393,3 +394,6 @@ class docs:\n     preferred_quotation = Taste[str](\n         'Represents the preferred quotation',\n         ('\\'', '\"'), default='\\'')\n+    force_preferred_quotation = Taste[bool](","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-05-18T20:51:08Z","lastEditedAt":null,"updatedAt":"2018-05-18T20:51:08Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDIyOTk3Ng==","url":"https://github.com/coala/coala/pull/5461#discussion_r194229976","bodyText":"... except where there is a delimiter collision.","diffHunk":"@@ -391,5 +392,11 @@ class docs:\n         Choosing a preferred quotation and using it everywhere (if possible).\n         \"\"\"\n     preferred_quotation = Taste[str](\n-        'Represents the preferred quotation',\n+        'Represents the preferred quotation marks.'\n+        'It ensures that every string contains the selected style of quotes.',","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-06-09T14:48:46Z","lastEditedAt":null,"updatedAt":"2018-06-09T14:48:46Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDIzMDAwOA==","url":"https://github.com/coala/coala/pull/5461#discussion_r194230008","bodyText":"we've decided to remove this and go back to the fundamentals of literal strings and how languages differ.  So this should be removed for the moment, so that the other parts of this PR can get merged.","diffHunk":"@@ -391,5 +392,11 @@ class docs:\n         Choosing a preferred quotation and using it everywhere (if possible).\n         \"\"\"\n     preferred_quotation = Taste[str](\n-        'Represents the preferred quotation',\n+        'Represents the preferred quotation marks.'\n+        'It ensures that every string contains the selected style of quotes.',\n         ('\\'', '\"'), default='\\'')\n+    force_preferred_quotation = Taste[bool](","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-06-09T14:49:55Z","lastEditedAt":null,"updatedAt":"2018-06-09T14:49:55Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDI0NDY3NQ==","url":"https://github.com/coala/coala/pull/5461#discussion_r194244675","bodyText":"I have removed force_preferred_quotation.\nI have also updated the default value of preferred_quotation to \" as we are doing it for string literals now and languages like CPP, C does not support ' as string delimiters. Moreover, \" is what is default in the bear here at https://github.com/coala/coala-bears/blob/00c07fb1d4eeaaaa4cd76d6650b5ccfbb0f40be8/bears/general/QuotesBear.py#L66","diffHunk":"@@ -391,5 +392,11 @@ class docs:\n         Choosing a preferred quotation and using it everywhere (if possible).\n         \"\"\"\n     preferred_quotation = Taste[str](\n-        'Represents the preferred quotation',\n+        'Represents the preferred quotation marks.'\n+        'It ensures that every string contains the selected style of quotes.',\n         ('\\'', '\"'), default='\\'')\n+    force_preferred_quotation = Taste[bool](","author":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4","name":"Pareksha Manchanda"},"reactions":[],"createdAt":"2018-06-10T04:10:35Z","lastEditedAt":"2018-06-10T04:11:26Z","updatedAt":"2018-06-10T04:11:26Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDczMDUyNg==","url":"https://github.com/coala/coala/pull/5461#discussion_r194730526","bodyText":"this should have a space after the comma before the next word on the next line.","diffHunk":"@@ -391,5 +392,7 @@ class docs:\n         Choosing a preferred quotation and using it everywhere (if possible).\n         \"\"\"\n     preferred_quotation = Taste[str](\n-        'Represents the preferred quotation',\n-        ('\\'', '\"'), default='\\'')\n+        'Represents the preferred quotation marks.'\n+        'It ensures that every string contains the selected style of quotes,'","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNTAxMjAyOQ==","createdAt":"2018-06-13T08:19:10Z","content":"THUMBS_UP","user":{"login":"pareksha","name":"Pareksha Manchanda"}}],"createdAt":"2018-06-12T13:09:21Z","lastEditedAt":null,"updatedAt":"2018-06-12T13:09:21Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDczMTE4NA==","url":"https://github.com/coala/coala/pull/5461#discussion_r194731184","bodyText":"Please create an issue, and explain why the default is changing from ' to \"\n\"as discussed in coala/aspects gitter thread\" is not good enough.\nc.f. #5475 (comment)","diffHunk":"@@ -391,5 +392,7 @@ class docs:\n         Choosing a preferred quotation and using it everywhere (if possible).\n         \"\"\"\n     preferred_quotation = Taste[str](\n-        'Represents the preferred quotation',\n-        ('\\'', '\"'), default='\\'')\n+        'Represents the preferred quotation marks.'\n+        'It ensures that every string contains the selected style of quotes,'\n+        'except where there is a delimiter collision.',\n+        ('\\'', '\"'), default='\"')","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-06-12T13:11:33Z","lastEditedAt":null,"updatedAt":"2018-06-12T13:11:33Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM5MDMyOTA1MA==","url":"https://github.com/coala/coala/pull/5461#issuecomment-390329050","bodyText":"Please note that we cant merge this until the cEP has been merged.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-05-18T20:52:28Z","lastEditedAt":null,"updatedAt":"2018-05-18T20:52:28Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM5Njg3MzQyNQ==","url":"https://github.com/coala/coala/pull/5461#issuecomment-396873425","bodyText":"Please do not change the default in this PR.\nThat is a separate issue, and that issue requires discussion.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNTAxOTMxNg==","createdAt":"2018-06-13T10:35:06Z","content":"THUMBS_UP","user":{"login":"pareksha","name":"Pareksha Manchanda"}}],"createdAt":"2018-06-13T09:23:32Z","lastEditedAt":null,"updatedAt":"2018-06-13T09:23:32Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM5Njg5MjUzNA==","url":"https://github.com/coala/coala/pull/5461#issuecomment-396892534","bodyText":"@jayvdb done 👍","diffHunk":null,"author":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4","name":"Pareksha Manchanda"},"reactions":[],"createdAt":"2018-06-13T10:35:01Z","lastEditedAt":null,"updatedAt":"2018-06-13T10:35:01Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1533480611000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5462","number":5462,"title":".coafile: Remove pycodestyle_ignore list items","body":"This change removes specified items from the pycodestyle_ignore variable\nCloses #5389","comments":20,"createdAt":"2018-05-15T20:24:14Z","updatedAt":"2018-08-05T14:50:11Z","closedAt":"2018-05-16T17:56:56Z","state":"closed","user":{"login":"jgarciabu","avatarUrl":"https://avatars2.githubusercontent.com/u/16855727?v=4"},"owner":{"login":"jgarciabu","avatarUrl":"https://avatars2.githubusercontent.com/u/16855727?v=4"},"assignee":{"login":"shashwatmishra76","avatarUrl":"https://avatars2.githubusercontent.com/u/24711156?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"importance/medium","color":"fbca04"},{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5462","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4ODQ2MTIyNg==","url":"https://github.com/coala/coala/pull/5462#discussion_r188461226","bodyText":"Why add this into .gitignore?\nIt does not seem to be related to the issue.","diffHunk":"@@ -52,3 +52,4 @@ GTAGS\n GRTAGS\n GPATH\n GSYMS\n+/.vs","author":{"login":"z1ggy-o","avatarUrl":"https://avatars1.githubusercontent.com/u/19348185?v=4","name":"Guangyu Zhu"},"createdAt":"2018-05-15T22:59:59Z","lastEditedAt":null,"updatedAt":"2018-05-15T22:59:59Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4ODUxMTU0MA==","url":"https://github.com/coala/coala/pull/5462#discussion_r188511540","bodyText":"I agree with @z1ggy-o, this change needs to be removed from your commit.\nIt is a separate problem. and should not be included in your PR.","diffHunk":"@@ -52,3 +52,4 @@ GTAGS\n GRTAGS\n GPATH\n GSYMS\n+/.vs","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-05-16T06:10:18Z","lastEditedAt":null,"updatedAt":"2018-05-16T06:10:18Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4ODYxNTA1MA==","url":"https://github.com/coala/coala/pull/5462#discussion_r188615050","bodyText":"I removed the addition in line right from Github and it looks like it passed all tests.\nI will figure out how to prevent that from happening at the source. Let me know if I need to provide additional edits.","diffHunk":"@@ -52,3 +52,4 @@ GTAGS\n GRTAGS\n GPATH\n GSYMS\n+/.vs","author":{"login":"jgarciabu","avatarUrl":"https://avatars2.githubusercontent.com/u/16855727?v=4","name":null},"createdAt":"2018-05-16T13:01:35Z","lastEditedAt":null,"updatedAt":"2018-05-16T13:01:35Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM4OTMzNzU4OA==","url":"https://github.com/coala/coala/pull/5462#issuecomment-389337588","bodyText":"Maybe you need to change the commit's shortlog.\nBy documentation about commit, the shortlog should starts with a capital letter, and be written in imperative present tense.","diffHunk":null,"author":{"login":"z1ggy-o","avatarUrl":"https://avatars1.githubusercontent.com/u/19348185?v=4","name":"Guangyu Zhu"},"createdAt":"2018-05-15T22:45:52Z","lastEditedAt":null,"updatedAt":"2018-05-15T22:45:52Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM4OTM1NzU0Nw==","url":"https://github.com/coala/coala/pull/5462#issuecomment-389357547","bodyText":"I'm unsure how to keep Visual Studio from creating that file. When I choose to ignore the vs folder that's made when I make updates, it creates that entry in the file.","diffHunk":null,"author":{"login":"jgarciabu","avatarUrl":"https://avatars2.githubusercontent.com/u/16855727?v=4","name":null},"createdAt":"2018-05-16T00:35:02Z","lastEditedAt":null,"updatedAt":"2018-05-16T00:35:02Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM4OTUxMDQzMg==","url":"https://github.com/coala/coala/pull/5462#issuecomment-389510432","bodyText":"You may need to squash the commits and modify you commit message to follow the commit rules.\nHere is the tutorial about how to do that.","diffHunk":null,"author":{"login":"z1ggy-o","avatarUrl":"https://avatars1.githubusercontent.com/u/19348185?v=4","name":"Guangyu Zhu"},"createdAt":"2018-05-16T13:02:58Z","lastEditedAt":null,"updatedAt":"2018-05-16T13:02:58Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM4OTUxMjQxMg==","url":"https://github.com/coala/coala/pull/5462#issuecomment-389512412","bodyText":"@z1ggy-o Please review my commit message at the top of the pull request. It adheres to the instructions found here: https://api.coala.io/en/latest/Developers/Writing_Good_Commits.html\nIt may have looked odd before because I didn't remove the auto-inserted text when one opens a pull request for this project. I didn't know if that would have been suppressed when I submitted the request, so I left it. It didn't suppress the boilerplate text and so that's why my commit message looked incorrect. I've since removed the boilerplate and the remaining message adheres to the standards, unless there are different standards now being used. Please advise specifically what I would need to do from now to get the PR merged.","diffHunk":null,"author":{"login":"jgarciabu","avatarUrl":"https://avatars2.githubusercontent.com/u/16855727?v=4","name":null},"createdAt":"2018-05-16T13:09:40Z","lastEditedAt":null,"updatedAt":"2018-05-16T13:09:40Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM4OTUxNjQwMw==","url":"https://github.com/coala/coala/pull/5462#issuecomment-389516403","bodyText":"Check my first comment.\nThe shortlog part ^ ^.","diffHunk":null,"author":{"login":"z1ggy-o","avatarUrl":"https://avatars1.githubusercontent.com/u/19348185?v=4","name":"Guangyu Zhu"},"createdAt":"2018-05-16T13:22:47Z","lastEditedAt":null,"updatedAt":"2018-05-16T13:22:47Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM4OTUxNzg0MQ==","url":"https://github.com/coala/coala/pull/5462#issuecomment-389517841","bodyText":"Ok, how does that look now?","diffHunk":null,"author":{"login":"jgarciabu","avatarUrl":"https://avatars2.githubusercontent.com/u/16855727?v=4","name":null},"createdAt":"2018-05-16T13:27:13Z","lastEditedAt":null,"updatedAt":"2018-05-16T13:27:13Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM4OTUyMTE4OQ==","url":"https://github.com/coala/coala/pull/5462#issuecomment-389521189","bodyText":"Your commit message is not correct.  You need to use imperative tense for the shortlog.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-05-16T13:37:20Z","lastEditedAt":null,"updatedAt":"2018-05-16T13:37:20Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM4OTUyMTU2NQ==","url":"https://github.com/coala/coala/pull/5462#issuecomment-389521565","bodyText":"emm.. You just changed this PR's title.\ncommit message is the message that is added when you do git commit in git.\nDid you read the tutorial?","diffHunk":null,"author":{"login":"z1ggy-o","avatarUrl":"https://avatars1.githubusercontent.com/u/19348185?v=4","name":"Guangyu Zhu"},"createdAt":"2018-05-16T13:38:29Z","lastEditedAt":null,"updatedAt":"2018-05-16T13:38:29Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM4OTUyMzkwNQ==","url":"https://github.com/coala/coala/pull/5462#issuecomment-389523905","bodyText":"Please forgive my ignorance. I'm still new to contributing to git/visual studio/contributing to open source projects. I have read the tutorial and it's not difficult to follow what's required. What's confusing is how to submit changes to commit messages from Visual Studio when you don't necessarily have to make changes to any file in the code repository. Please be patient with me as I attempt to put through this change.","diffHunk":null,"author":{"login":"jgarciabu","avatarUrl":"https://avatars2.githubusercontent.com/u/16855727?v=4","name":null},"createdAt":"2018-05-16T13:45:37Z","lastEditedAt":null,"updatedAt":"2018-05-16T13:45:37Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM4OTU0NzgyMQ==","url":"https://github.com/coala/coala/pull/5462#issuecomment-389547821","bodyText":"This has become quite the mess. I want to make the contribution because the change is well within my reach, but the barrier to entry on the changes is very high for a new comer. There is an option to have someone clean up the commit for me if I don't plan to contribute long term to the project and I think I'll have to use that option. I'll keep an eye on issues and provide assistance as I can, but I don't see myself being able to adhere to this commit process given the problems I'm having with my IDEs. Let me know if you can do that and if not, feel free to discard my branch. Apologies for the headaches.","diffHunk":null,"author":{"login":"jgarciabu","avatarUrl":"https://avatars2.githubusercontent.com/u/16855727?v=4","name":null},"createdAt":"2018-05-16T14:52:19Z","lastEditedAt":null,"updatedAt":"2018-05-16T14:52:19Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM4OTU2ODA5Ng==","url":"https://github.com/coala/coala/pull/5462#issuecomment-389568096","bodyText":"but the barrier to entry on the changes is very high for a new comer\n\nThat is just our way to train developers.\nPlease don't give up @jgarciabu I can  help you out with this PR if you are willing to work again. It isn't that tough to follow the commit guidelines . I had the same problems with my first PR but didn't give up the issue. I have been contributing for about a year now.\nSo please give it another shot.","diffHunk":null,"author":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4","name":"Palash Nigam"},"createdAt":"2018-05-16T15:47:13Z","lastEditedAt":null,"updatedAt":"2018-05-16T15:47:13Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM4OTU2ODY3Mw==","url":"https://github.com/coala/coala/pull/5462#issuecomment-389568673","bodyText":"If I can delete this pull request and start over, I will try again.","diffHunk":null,"author":{"login":"jgarciabu","avatarUrl":"https://avatars2.githubusercontent.com/u/16855727?v=4","name":null},"createdAt":"2018-05-16T15:48:44Z","lastEditedAt":null,"updatedAt":"2018-05-16T15:48:44Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM4OTU2OTA2MQ==","url":"https://github.com/coala/coala/pull/5462#issuecomment-389569061","bodyText":"No we will work on this same PR. Do you still have this branch locally?","diffHunk":null,"author":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4","name":"Palash Nigam"},"createdAt":"2018-05-16T15:49:48Z","lastEditedAt":null,"updatedAt":"2018-05-16T15:49:48Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM4OTU2OTE1OQ==","url":"https://github.com/coala/coala/pull/5462#issuecomment-389569159","bodyText":"I do. I don't understand why my commit message is failing. This is what I want to submit and as far as I know, it adheres to the standards:\n.coafile: Remove pycodestyle_ignore list items\nThis change removes specified items from the pycodestyle_ignore variable\nCloses #5389","diffHunk":null,"author":{"login":"jgarciabu","avatarUrl":"https://avatars2.githubusercontent.com/u/16855727?v=4","name":null},"createdAt":"2018-05-16T15:50:06Z","lastEditedAt":"2018-05-16T15:52:09Z","updatedAt":"2018-05-16T15:52:09Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM4OTU3MTg2Nw==","url":"https://github.com/coala/coala/pull/5462#issuecomment-389571867","bodyText":"Now go read this guide on how to squash your commits http://gitready.com/advanced/2009/02/10/squashing-commits-with-rebase.html\nOnce you enter the command in your terminal you will be taken to a screen listing all the commits that you want to squash into. Just delete all the unnecessary commit messages and keep the one with the appropriate message.\nOnce you are done squashing rebase\ngit fetch origin\ngit rebase origin/master\nthen force push\ngit push -f myfork <branch-name>","diffHunk":null,"author":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4","name":"Palash Nigam"},"createdAt":"2018-05-16T15:57:42Z","lastEditedAt":null,"updatedAt":"2018-05-16T15:57:42Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM4OTU4OTY4Ng==","url":"https://github.com/coala/coala/pull/5462#issuecomment-389589686","bodyText":"I've broken something on my end. I squashed into someone else entirely's commits. I don't know how that's possible but it is. I apparently squashed everything into e775013e on my end.\nI don't use git through the command prompt. I do everything through Viz studio.\nI really think a fresh start is warranted here.","diffHunk":null,"author":{"login":"jgarciabu","avatarUrl":"https://avatars2.githubusercontent.com/u/16855727?v=4","name":null},"createdAt":"2018-05-16T16:52:53Z","lastEditedAt":"2018-05-16T16:53:54Z","updatedAt":"2018-05-16T16:53:54Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM4OTU5MjEzNg==","url":"https://github.com/coala/coala/pull/5462#issuecomment-389592136","bodyText":"Hey can you ask on the coala/coala channel on gitter its hard to help you out on this thread. We can all figure out whats the problem there.\nJust explain it what you did and someone will get back to you.","diffHunk":null,"author":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4","name":"Palash Nigam"},"createdAt":"2018-05-16T17:00:04Z","lastEditedAt":null,"updatedAt":"2018-05-16T17:00:04Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1532801419000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5464","number":5464,"title":".coafile: Remove pycodestyle_ignore list items","body":"This change removes specified items from the pycodestyle_ignore variable\nCloses #5389","comments":7,"createdAt":"2018-05-16T18:04:30Z","updatedAt":"2018-07-28T18:10:19Z","closedAt":"2018-07-28T18:10:19Z","state":"closed","user":{"login":"jgarciabu","avatarUrl":"https://avatars2.githubusercontent.com/u/16855727?v=4"},"owner":{"login":"jgarciabu","avatarUrl":"https://avatars2.githubusercontent.com/u/16855727?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"process/wip","color":"fbca04"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5464","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDM4OTkwOTM0Nw==","url":"https://github.com/coala/coala/pull/5464#issuecomment-389909347","bodyText":"LGTM!\nThe commit message would be a bit better if you would have a full stop at end of the commit body.","diffHunk":null,"author":{"login":"tallicamike","avatarUrl":"https://avatars0.githubusercontent.com/u/1883838?v=4","name":"Mihai Tiganus"},"createdAt":"2018-05-17T15:33:34Z","lastEditedAt":null,"updatedAt":"2018-05-17T15:33:34Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM4OTkxMjc3Nw==","url":"https://github.com/coala/coala/pull/5464#issuecomment-389912777","bodyText":"I wouldn't know where to begin making that change to the commit message. I'll have to delete the PR and resubmit to add the period. Let me know if you'd like me to do that.","diffHunk":null,"author":{"login":"jgarciabu","avatarUrl":"https://avatars2.githubusercontent.com/u/16855727?v=4","name":null},"createdAt":"2018-05-17T15:43:19Z","lastEditedAt":null,"updatedAt":"2018-05-17T15:43:19Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM5MDEwMzA0MQ==","url":"https://github.com/coala/coala/pull/5464#issuecomment-390103041","bodyText":"I'll have to delete the PR and resubmit to add the period.\n\nPlease don't ever do that again @jgarciabu","diffHunk":null,"author":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4","name":"Palash Nigam"},"createdAt":"2018-05-18T06:00:00Z","lastEditedAt":null,"updatedAt":"2018-05-18T06:00:00Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM5NjcxNTc3NQ==","url":"https://github.com/coala/coala/pull/5464#issuecomment-396715775","bodyText":"Seems you have some merge conflicts to resolve. Additionally, did you delete the branch/fork where this PR originated? It says unknown repository.","diffHunk":null,"author":{"login":"supergr35","avatarUrl":"https://avatars2.githubusercontent.com/u/23623348?v=4","name":"Grant Parajuli"},"createdAt":"2018-06-12T20:04:37Z","lastEditedAt":null,"updatedAt":"2018-06-12T20:04:37Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQwODYyNTU0Ng==","url":"https://github.com/coala/coala/pull/5464#issuecomment-408625546","bodyText":"Fork was deleted, which breaks the PR","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-07-28T18:10:19Z","lastEditedAt":null,"updatedAt":"2018-07-28T18:10:19Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1526570748000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5465","number":5465,"title":"Typescript aliases change to tuple","body":"For short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n[] I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":0,"createdAt":"2018-05-16T21:15:44Z","updatedAt":"2018-05-17T15:25:48Z","closedAt":"2018-05-17T15:25:44Z","state":"closed","user":{"login":"jgarciabu","avatarUrl":"https://avatars2.githubusercontent.com/u/16855727?v=4"},"owner":{"login":"jgarciabu","avatarUrl":"https://avatars2.githubusercontent.com/u/16855727?v=4"},"labels":[],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5465","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4ODk5ODM2MQ==","url":"https://github.com/coala/coala/pull/5465#discussion_r188998361","bodyText":"One word touple should include a ,\nit is the comma, not the parentheses, that define the tuple","diffHunk":"@@ -3,7 +3,7 @@\n \n @Language\n class TypeScript:\n-    aliases = 'ts'\n+    aliases = ('ts')","author":{"login":"sks444","avatarUrl":"https://avatars0.githubusercontent.com/u/22263040?v=4","name":"Shrikrishna Singh"},"createdAt":"2018-05-17T15:20:39Z","lastEditedAt":null,"updatedAt":"2018-05-17T15:20:39Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1527959194000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5467","number":5467,"title":"appveyor.yml: Run pip install as Python module","body":"pip now complains about being downgraded when being\nexecuted via the pip command on Windows.\nCloses #5466","comments":3,"createdAt":"2018-05-17T05:08:41Z","updatedAt":"2018-06-02T17:06:34Z","closedAt":"2018-05-17T06:02:07Z","state":"merged","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"area/CI","color":"eb6420"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5467","comments":[]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1526564955000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5468","number":5468,"title":"Update issue templates","body":"","comments":3,"createdAt":"2018-05-17T13:28:01Z","updatedAt":"2018-05-17T13:49:15Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5468","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDM4OTg3MDU1Ng==","url":"https://github.com/coala/coala/pull/5468#issuecomment-389870556","bodyText":"Markdown doesn't necessarily add newlines after titles. See https://github.com/coala/coala/blob/3d31747e8db0297bf1c1cccba849f9a3e4e8e5a9/.github/ISSUE_TEMPLATE/bug_report.md\n**Describe the bug**\nA clear and concise description of what the bug is.\n\nis displaying as\nDescribe the bug A clear and concise description of what the bug is.","diffHunk":null,"author":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4","name":"Boxuan Li"},"createdAt":"2018-05-17T13:42:56Z","lastEditedAt":"2018-05-17T13:43:34Z","updatedAt":"2018-05-17T13:43:34Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM4OTg3MjMwMA==","url":"https://github.com/coala/coala/pull/5468#issuecomment-389872300","bodyText":"The templates in the first version of this PR, 3d31747, are the default templates which GitHub offers in an automated PR that they offer for repo admins to create.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-05-17T13:48:05Z","lastEditedAt":null,"updatedAt":"2018-05-17T13:48:05Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM4OTg3MjcwOQ==","url":"https://github.com/coala/coala/pull/5468#issuecomment-389872709","bodyText":"Alright, nvm then 😅","diffHunk":null,"author":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4","name":"Boxuan Li"},"createdAt":"2018-05-17T13:49:15Z","lastEditedAt":null,"updatedAt":"2018-05-17T13:49:15Z"}]}}}],"repoLabels":[{"repoOwner":"coala","repoName":"coala","labels":[{"id":"MDU6TGFiZWw5OTc3NjYwNw==","name":"type/bug","color":"e11d21","default":false},{"id":"MDU6TGFiZWwxMDc2MTQyMjc=","name":"type/feature","color":"0052cc","default":false},{"id":"MDU6TGFiZWwxMDc2MTQzMjY=","name":"importance/high","color":"eb6420","default":false},{"id":"MDU6TGFiZWwxMDc2MjE5NzM=","name":"difficulty/newcomer","color":"65C8FF","default":false},{"id":"MDU6TGFiZWwxMDc2MjIwNTE=","name":"status/needs design","color":"5319e7","default":false},{"id":"MDU6TGFiZWwxMjA4ODgxMTA=","name":"type/codestyle","color":"d4c5f9","default":false},{"id":"MDU6TGFiZWwxNDEwMzY3NzQ=","name":"process/pending review","color":"bfe5bf","default":false},{"id":"MDU6TGFiZWwxNzQ3NTIwMjc=","name":"area/bears","color":"eb6420","default":false},{"id":"MDU6TGFiZWwxNzcxMzAwMzY=","name":"status/blocked","color":"e11d21","default":false},{"id":"MDU6TGFiZWwxNzgwNDczODQ=","name":"status/wontfix/accepting patches","color":"aaaaaa","default":false},{"id":"MDU6TGFiZWwxODQ4MTI3OTQ=","name":"status/needs info","color":"006b75","default":false},{"id":"MDU6TGFiZWwyMTQzMzMyMzQ=","name":"area/CI","color":"eb6420","default":false},{"id":"MDU6TGFiZWwyMTc1NTM4ODQ=","name":"bounty","color":"129e5e","default":false},{"id":"MDU6TGFiZWwyMTg0NzU4MDI=","name":"process/approved","color":"009800","default":false},{"id":"MDU6TGFiZWwyMzcxMzE2MjY=","name":"process/wip","color":"fbca04","default":false},{"id":"MDU6TGFiZWwyOTM4NjEwNTQ=","name":"size/XXL","color":"AA0000","default":false},{"id":"MDU6TGFiZWwyOTM4NjEwNTU=","name":"size/XL","color":"FF0000","default":false},{"id":"MDU6TGFiZWwyOTM4NjEwNTY=","name":"size/L","color":"FF8888","default":false},{"id":"MDU6TGFiZWwyOTM4NjEwNTc=","name":"size/M","color":"eb6420","default":false},{"id":"MDU6TGFiZWwyOTM4NjEwNjU=","name":"size/S","color":"B1CF0A","default":false},{"id":"MDU6TGFiZWwyOTM4NjEwNjY=","name":"size/XS","color":"00DE0F","default":false},{"id":"MDU6TGFiZWwzMDg4NTIxOTA=","name":"difficulty/low","color":"207de5","default":false},{"id":"MDU6TGFiZWwzMDg4NTIyOTc=","name":"difficulty/medium","color":"0052cc","default":false},{"id":"MDU6TGFiZWwzMDg4NTIzMjY=","name":"difficulty/high","color":"B319e7","default":false},{"id":"MDU6TGFiZWwzMDg4NTc5NTk=","name":"status/wontfix/not happening","color":"000000","default":false},{"id":"MDU6TGFiZWwzMDg4NTgxMDc=","name":"importance/medium","color":"fbca04","default":false},{"id":"MDU6TGFiZWwzMDg4NTgxOTk=","name":"importance/low","color":"70E870","default":false},{"id":"MDU6TGFiZWwzMDg4NTg4NjA=","name":"area/CLI","color":"006b75","default":false},{"id":"MDU6TGFiZWwzMDg4NTkwMzI=","name":"area/results","color":"eb6420","default":false},{"id":"MDU6TGFiZWwzMDg4NTkwNTQ=","name":"area/actions","color":"207de5","default":false},{"id":"MDU6TGFiZWwzMDg4NTkxMDQ=","name":"area/core","color":"eb6420","default":false},{"id":"MDU6TGFiZWwzMDg4NTk2NjM=","name":"status/duplicate","color":"000000","default":false},{"id":"MDU6TGFiZWwzMDg4NjA4MjA=","name":"importance/critical","color":"e11d21","default":false},{"id":"MDU6TGFiZWwzMDg4NjA4NTY=","name":"area/documentation","color":"bfe5bf","default":false},{"id":"MDU6TGFiZWwzMDg4NjI5MzE=","name":"difficulty/very-high","color":"e11d21","default":false},{"id":"MDU6TGFiZWwzMDkwMDgxMzE=","name":"status/invalid","color":"000000","default":false},{"id":"MDU6TGFiZWwzMDkwNDQ3MjY=","name":"area/tests","color":"bfd4f2","default":false},{"id":"MDU6TGFiZWwzMTUyODUzODU=","name":"area/usability","color":"d4c5f9","default":false},{"id":"MDU6TGFiZWwzMjgxNjg0NDU=","name":"cool and awesome","color":"0052cc","default":false},{"id":"MDU6TGFiZWwzMzYyNzE0Mzc=","name":"status/abandoned","color":"e11d21","default":false},{"id":"MDU6TGFiZWwzNDM1Nzc4NTE=","name":"area/upstream","color":"5319e7","default":false},{"id":"MDU6TGFiZWwzNTg5OTc4ODM=","name":"review carefully!","color":"d93f0b","default":false},{"id":"MDU6TGFiZWwzNzU2NzE5MTk=","name":"status/cant reproduce","color":"006b75","default":false},{"id":"MDU6TGFiZWwzOTQyMDY1NzI=","name":"type/performance","color":"fef2c0","default":false},{"id":"MDU6TGFiZWw0NTI0NDE2MTA=","name":"hacktoberfest","color":"e99695","default":false},{"id":"MDU6TGFiZWw0NzgzOTcwOTY=","name":"area/logging","color":"0052cc","default":false},{"id":"MDU6TGFiZWw0ODAxMjU5NzQ=","name":"platform/windows","color":"0052cc","default":false},{"id":"MDU6TGFiZWw0ODAxMjYwMjQ=","name":"platform/mac","color":"fbca04","default":false},{"id":"MDU6TGFiZWw0ODAxMjYwNjA=","name":"platform/linux","color":"c2e0c6","default":false},{"id":"MDU6TGFiZWw0ODM1MDQzMjk=","name":"initiatives/gci","color":"e99695","default":false},{"id":"MDU6TGFiZWw0ODU0NDkxMzE=","name":"area/languages","color":"d4c5f9","default":false},{"id":"MDU6TGFiZWw0ODk2NTc4MjU=","name":"needs backport","color":"b60205","default":false},{"id":"MDU6TGFiZWw1NTkwMDA2NTM=","name":"area/install","color":"bfdadc","default":false},{"id":"MDU6TGFiZWw1NjYwNTYwOTA=","name":"area/aspects","color":"000000","default":false},{"id":"MDU6TGFiZWw1ODEzOTA5Mzg=","name":"type/breaking-change","color":"b60205","default":false},{"id":"MDU6TGFiZWw1ODk0NDQ2ODg=","name":"status/opaque-fix","color":"006b75","default":false},{"id":"MDU6TGFiZWw1OTM2MDE0Mzg=","name":"regression","color":"b60205","default":false},{"id":"MDU6TGFiZWw2MDQ1OTI1NjI=","name":"importance/trivial","color":"d4c5f9","default":false},{"id":"MDU6TGFiZWw2NTIwNDIyNzU=","name":"area/lintbears","color":"ededed","default":false},{"id":"MDU6TGFiZWw2NTIzOTkyNzQ=","name":"area/config","color":"fbca04","default":false},{"id":"MDU6TGFiZWw2NTI2NzAzMzE=","name":"status/needs discussion","color":"d93f0b","default":false},{"id":"MDU6TGFiZWw2NjY4MjQ4MTg=","name":"status/stale","color":"fbca04","default":false},{"id":"MDU6TGFiZWw4NDA5ODQ4MTA=","name":"area/genericbears","color":"ededed","default":false},{"id":"MDU6TGFiZWw5NTk4NTM4NjE=","name":"status/ci-approved","color":"ededed","default":false},{"id":"MDU6TGFiZWw5NjYwNDY2NzY=","name":"process/needs rebase","color":"e52db1","default":false}]}],"repositories":[{"repoOwner":"coala","repoName":"coala","isPrivate":false,"lastSeenAt":"2018-09-02T04:12:38Z"}]}