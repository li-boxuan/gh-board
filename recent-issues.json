{"issues":[{"repoOwner":"coala","repoName":"coala","updatedAtMs":1536243741000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5754","number":5754,"title":"Add test cases for language definitions","body":"If I recall correctly, we don't have test cases for language definitions. https://github.com/coala/coala/tree/master/coalib/bearlib/languages/definitions\nPeople especially newcomers are prone to make mistakes when adding a new language definition, e.g. #5748 (comment)\nAt least we should have test cases checking that extensions, comment_delimiters, etc. are tuples.","comments":0,"createdAt":"2018-09-06T14:21:02Z","updatedAt":"2018-09-06T14:22:21Z","closedAt":null,"state":"open","user":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4"},"owner":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4"},"labels":[{"name":"area/languages","color":"d4c5f9"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1536070646000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5749","number":5749,"title":"Tests Failing for Python3.4 only on Circle CI","body":"Refer Circle CI Tests for Python3.4 on  #5747  and #5727\nThe Tests are Failing on:\n_______________________ coalaTest.test_coala_with_color ________________________\n\nself = <tests.coalaTest.coalaTest testMethod=test_coala_with_color>\n\n    def test_coala_with_color(self):\n        with bear_test_module(), \\\n                prepare_file(['#fixme'], None) as (lines, filename):\n            retval, stdout, stderr = execute_coala(\n                coala.main, 'coala')\n            errors = filter(bool, stderr.split('\\n'))\n            # Every error message must start with characters\n            # used for coloring.\n            for err in errors:\n                self.assertNotRegex(err, r'^\\[WARNING\\]')\n            self.assertEqual(\n>               retval, 0, 'coala must return zero when there are no errors')\nE           AssertionError: 255 != 0 : coala must return zero when there are no errors\ntests/coalaTest.py:358: AssertionError\nI have Noticed that these Commits are dealing with Files that are not interfering with tests.\nSame Tests are passing on Travis CI's Python3.4.4","comments":0,"createdAt":"2018-09-04T14:16:15Z","updatedAt":"2018-09-04T14:17:26Z","closedAt":null,"state":"open","user":{"login":"vkartik97","avatarUrl":"https://avatars2.githubusercontent.com/u/3920286?v=4"},"owner":{"login":"vkartik97","avatarUrl":"https://avatars2.githubusercontent.com/u/3920286?v=4"},"labels":[{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1536160298000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5753","number":5753,"title":"Undefined name: 'sys' in ./coalib/coala_delete_orig.py","body":"See #5751\nsys is used on line 44 but it is never imported.  This will probably raise NameError at runtime instead of sys.exit() as expected.\nflake8 testing of https://github.com/coala/coala on Python 3.7.0\n$ flake8 . --count --select=E901,E999,F821,F822,F823 --show-source --statistics\n./tests/collecting/collectors_test_dir/bears/incorrect_bear.py:1:7: E999 SyntaxError: invalid syntax\nThe Zen of Python, by Tim Peters\n      ^\n./coalib/coala_delete_orig.py:44:5: F821 undefined name 'sys'\n    sys.exit(main())\n    ^\n1     E999 SyntaxError: invalid syntax\n1     F821 undefined name 'sys'\n2","comments":0,"createdAt":"2018-09-05T13:26:19Z","updatedAt":"2018-09-05T15:11:38Z","closedAt":"2018-09-05T15:11:38Z","state":"closed","user":{"login":"cclauss","avatarUrl":"https://avatars3.githubusercontent.com/u/3709715?v=4"},"owner":{"login":"cclauss","avatarUrl":"https://avatars3.githubusercontent.com/u/3709715?v=4"},"labels":[{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1535973677000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5738","number":5738,"title":"Fix mistake in Writing_Good_Commits.rst","body":"On line 36 it should be Closes instead of Fixes\nProbably a good newcomer issue.","comments":3,"createdAt":"2018-08-30T01:07:20Z","updatedAt":"2018-09-03T11:21:17Z","closedAt":null,"state":"open","user":{"login":"Utkarsh1308","avatarUrl":"https://avatars0.githubusercontent.com/u/23418707?v=4"},"owner":{"login":"Utkarsh1308","avatarUrl":"https://avatars0.githubusercontent.com/u/23418707?v=4"},"assignee":{"login":"Utkarsh1308","avatarUrl":"https://avatars0.githubusercontent.com/u/23418707?v=4"},"labels":[{"name":"area/aspects","color":"000000"},{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1535894816000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5739","number":5739,"title":"Add language for scss","body":"Like coalib/bearlib/languages/definitions/CSS.py","comments":0,"createdAt":"2018-08-30T03:45:03Z","updatedAt":"2018-09-02T13:26:56Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"rishabhgarg25699","avatarUrl":"https://avatars1.githubusercontent.com/u/34981401?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"},{"name":"importance/medium","color":"fbca04"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1535847517000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5740","number":5740,"title":"Add language for SASS","body":"Like coalib/bearlib/languages/definitions/CSS.py","comments":0,"createdAt":"2018-08-30T03:45:30Z","updatedAt":"2018-09-02T00:18:37Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"Prince-sharma","avatarUrl":"https://avatars1.githubusercontent.com/u/38017461?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"},{"name":"importance/medium","color":"fbca04"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1535895139000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5745","number":5745,"title":"Imported classes should be arranged lexicographically","body":"Classes being imported in coala/coalib/bearlib/languages/__init__.py file should be arranged alphabetically.\nA good newcomer issue.","comments":0,"createdAt":"2018-09-01T23:10:26Z","updatedAt":"2018-09-02T13:32:19Z","closedAt":null,"state":"open","user":{"login":"shashwatmishra76","avatarUrl":"https://avatars2.githubusercontent.com/u/24711156?v=4"},"owner":{"login":"shashwatmishra76","avatarUrl":"https://avatars2.githubusercontent.com/u/24711156?v=4"},"assignee":{"login":"Mah1ndra","avatarUrl":"https://avatars2.githubusercontent.com/u/32550072?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1534320371000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5708","number":5708,"title":"Files to be checked debug log entry is emitting a message for every file","body":"59f78c1 resulting in very volumous log entries for each file.","comments":0,"createdAt":"2018-08-15T07:25:05Z","updatedAt":"2018-08-15T08:06:11Z","closedAt":"2018-08-15T08:06:11Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4"},"labels":[{"name":"importance/medium","color":"fbca04"},{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1535922225000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5710","number":5710,"title":"Create separate language definitions for varieties of Shell","body":"There is one language 'Shell' in https://github.com/coala/coala/tree/master/coalib/bearlib/languages/definitions .\nFor coala/coala-bears#2665 , we need at least the four varieties supported by ShellCheck","comments":2,"createdAt":"2018-08-15T09:13:07Z","updatedAt":"2018-09-02T21:03:45Z","closedAt":"2018-09-02T21:03:45Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"shashwatmishra76","avatarUrl":"https://avatars2.githubusercontent.com/u/24711156?v=4"},"labels":[{"name":"area/languages","color":"d4c5f9"},{"name":"difficulty/low","color":"207de5"},{"name":"importance/medium","color":"fbca04"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1535886247000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5722","number":5722,"title":"LocalBearTestHelper.check_results allow regex as message text","body":"Sometimes the message text varies based on linter version, as we see at coala/coala-bears#2678,  or is incredibly long and not helpful to match the entire text.\nIt should be possible to specify only a regex to match the message text.","comments":2,"createdAt":"2018-08-17T13:48:14Z","updatedAt":"2018-09-02T11:04:07Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"Naveenaidu","avatarUrl":"https://avatars1.githubusercontent.com/u/30195193?v=4"},"labels":[{"name":"area/tests","color":"bfd4f2"},{"name":"difficulty/low","color":"207de5"},{"name":"importance/low","color":"70E870"},{"name":"type/feature","color":"0052cc"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1535046202000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5724","number":5724,"title":"Release notes not published at http://api.coala.io","body":"https://github.com/coala/coala/blob/master/RELEASE_NOTES.rst is not published in the api docs\n(or in the user docs, but that will be a bit more effort)","comments":5,"createdAt":"2018-08-19T13:22:57Z","updatedAt":"2018-08-23T17:43:22Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1534750954000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5725","number":5725,"title":"Listing bears failes with ImportError: attempted relative import with no known parent package","body":"Overview Description\nListing bears failes with ImportError: attempted relative import with no known parent package\nSteps to Reproduce\n\npip3 install --user coala-bears\npython3.6 ~/.local/lib64/python3.6/site-packages/coalib/coala.py -B\n\nActual Results\n[WARNING][09:32:28] Unable to collect bears from /home/christian/.local/lib64/python3.6/site-packages/coalib/bears/Bear.py. Probably the file is malformed or the module code raises an exception.\n[INFO][09:32:28] Exception was:\nTraceback (most recent call last):\n\n  File \"/home/christian/.local/lib64/python3.6/site-packages/coalib/collecting/Collectors.py\", line 129, in icollect_bears\n    for bear in _import_bears(matching_file, kinds):\n\n  File \"/home/christian/.local/lib64/python3.6/site-packages/coalib/collecting/Collectors.py\", line 27, in _import_bears\n    types=list):\n\n  File \"/home/christian/.local/lib64/python3.6/site-packages/coalib/collecting/Importers.py\", line 160, in iimport_objects\n    attributes, local)\n\n  File \"/home/christian/.local/lib64/python3.6/site-packages/coala_utils/decorators.py\", line 26, in yield_once_generator\n    for item in iterator(*args, **kwargs):\n\n  File \"/home/christian/.local/lib64/python3.6/site-packages/coalib/collecting/Importers.py\", line 119, in _iimport_objects\n    module = _import_module(file_path)\n\n  File \"/home/christian/.local/lib64/python3.6/site-packages/coalib/collecting/Importers.py\", line 31, in _import_module\n    return __import__(module_name)\n\n  File \"/home/christian/.local/lib64/python3.6/site-packages/coalib/bears/Bear.py\", line 21, in <module>\n    from .meta import bearclass\n\nImportError: attempted relative import with no known parent package\n[WARNING][09:32:28] Unable to collect bears from /home/christian/.local/lib64/python3.6/site-packages/coalib/bears/Bear.py. Probably the file is malformed or the module code raises an exception.\n[INFO][09:32:28] Exception was:\nTraceback (most recent call last):\n\n  File \"/home/christian/.local/lib64/python3.6/site-packages/coalib/collecting/Collectors.py\", line 129, in icollect_bears\n    for bear in _import_bears(matching_file, kinds):\n\n  File \"/home/christian/.local/lib64/python3.6/site-packages/coalib/collecting/Collectors.py\", line 27, in _import_bears\n    types=list):\n\n  File \"/home/christian/.local/lib64/python3.6/site-packages/coalib/collecting/Importers.py\", line 160, in iimport_objects\n    attributes, local)\n\n  File \"/home/christian/.local/lib64/python3.6/site-packages/coala_utils/decorators.py\", line 26, in yield_once_generator\n    for item in iterator(*args, **kwargs):\n\n  File \"/home/christian/.local/lib64/python3.6/site-packages/coalib/collecting/Importers.py\", line 119, in _iimport_objects\n    module = _import_module(file_path)\n\n  File \"/home/christian/.local/lib64/python3.6/site-packages/coalib/collecting/Importers.py\", line 31, in _import_module\n    return __import__(module_name)\n\n  File \"/home/christian/.local/lib64/python3.6/site-packages/coalib/bears/Bear.py\", line 21, in <module>\n    from .meta import bearclass\n\nImportError: attempted relative import with no known parent package\nGlobalBear\nLocalBear\n\n\nExpected Results\nA list of bears.\nReproducibility\nFull\nAdditional Information:\n\ncoalib version 0.11.0\ncoala_utils 0.6.7","comments":0,"createdAt":"2018-08-20T07:41:20Z","updatedAt":"2018-08-20T07:42:34Z","closedAt":null,"state":"open","user":{"login":"feddischson","avatarUrl":"https://avatars1.githubusercontent.com/u/6832431?v=4"},"owner":{"login":"feddischson","avatarUrl":"https://avatars1.githubusercontent.com/u/6832431?v=4"},"labels":[{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1534753851000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5726","number":5726,"title":"Add language file for D","body":"","comments":0,"createdAt":"2018-08-20T08:25:23Z","updatedAt":"2018-08-20T08:30:51Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"area/CI","color":"eb6420"},{"name":"area/languages","color":"d4c5f9"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1535416866000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5730","number":5730,"title":"Add json language definition","body":"A JSON Language definition for coala in https://github.com/coala/coala/tree/master/coalib/bearlib/languages/definitions","comments":0,"createdAt":"2018-08-25T06:49:06Z","updatedAt":"2018-08-28T00:41:06Z","closedAt":"2018-08-28T00:41:06Z","state":"closed","user":{"login":"virresh","avatarUrl":"https://avatars0.githubusercontent.com/u/10978108?v=4"},"owner":{"login":"virresh","avatarUrl":"https://avatars0.githubusercontent.com/u/10978108?v=4"},"labels":[{"name":"area/aspects","color":"000000"},{"name":"area/documentation","color":"bfe5bf"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1535808813000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5737","number":5737,"title":"Discard ** in ignore = foo/**","body":"An ignore glob of ignore = foo/** will walk the entire structure of foo/, which is silly.\nThat is #3655 .\nBut a quicker problem to solve : ignore = foo/** can be rewritten as ignore = foo/ and suddenly it doesnt walk foo/ .\ncoala should recognise foo/** in the ignore and warn the user , and then remove the**` internally.","comments":2,"createdAt":"2018-08-29T12:25:03Z","updatedAt":"2018-09-01T13:33:33Z","closedAt":"2018-09-01T13:33:33Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"mach64","avatarUrl":"https://avatars3.githubusercontent.com/u/29517049?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"},{"name":"importance/high","color":"eb6420"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1535844501000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5668","number":5668,"title":"Add Jekyll Liquid language","body":"We use Liquid language in Jekyll sites.\nWe should have a language definition for it.","comments":5,"createdAt":"2018-07-26T10:53:09Z","updatedAt":"2018-09-01T23:28:21Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"},{"name":"importance/medium","color":"fbca04"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1534329612000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5674","number":5674,"title":"TestUtilities.execute_coala should check for timeouts","body":"If there was a timeout during a test using execute_coala, pytest-timeout will emit Failed: Timeout >35.0s (number may change) and the timeout failure will be lost inside execute_coala/bear_test_module.\nThe test module will continue with the assertions, and cause various errors, as these coala output will be in a strange incomplete state.\nThis is one of the problems affecting #5571 and #5390\nA quick workaround is to detect Failed: Timeout is stderr inside execute_coala and re-raise the problem with the complete stderr and stdout for debugging purposes.","comments":4,"createdAt":"2018-07-28T02:19:42Z","updatedAt":"2018-08-15T10:40:12Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"starlord1311","avatarUrl":"https://avatars3.githubusercontent.com/u/32419214?v=4"},"labels":[{"name":"area/upstream","color":"5319e7"},{"name":"difficulty/low","color":"207de5"},{"name":"importance/high","color":"eb6420"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1535815764000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5676","number":5676,"title":"Fix the API breakage problem because of `debugger` flag in bear base class","body":"For further information https://github.com/coala/coala/pull/5599/files#r203964627","comments":8,"createdAt":"2018-07-28T10:40:37Z","updatedAt":"2018-09-01T15:29:24Z","closedAt":"2018-09-01T15:26:40Z","state":"closed","user":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4"},"owner":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4"},"assignee":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1533965471000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5683","number":5683,"title":"deprecate_settings to support splitting a value to two new args","body":"I would like to split the checkstyle_configs arg into two args, as they are two different data-types.\nIt seems @deprecate_settings and FunctionMetadata cant support this, as they expect a deprecated arg to only be used once.\nHere is a more detailed look at what I tried to do, and failed.\ndef get_name(value):\n    if value in known_checkstyles.keys():\n        return value\n\ndef get_path(value):\n    if value not in known_checkstyles.keys():\n        return value\n\nclass CheckstyleBear:\n    ...\n\n    @deprecate_settings(\n        java_style_name=('checkstyle_configs',\n                         get_name),\n        checkstyle_config=('checkstyle_configs',\n                           get_path),\n    )\n    def create_arguments(\n            self, filename, file, config_file,\n            checkstyle_config: path = None,\n            java_style_name: CheckstyleStyle = 'google',\n            ...","comments":0,"createdAt":"2018-07-31T02:49:26Z","updatedAt":"2018-08-11T05:31:11Z","closedAt":"2018-08-11T05:31:11Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"type/feature","color":"0052cc"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1533991680000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5689","number":5689,"title":"Add tag based section filters.","body":"We need to have a way using which sections can be tagged and specific tags can be invoked. For example:\n[samples]\ntags = tag_one\nbears = SomeLongBear\n\n[other_sample]\nbears = SomeLongBear\n\nWhen run using coala --tags tag_one tag_two only samples section should be invoked.\nPart of cEP-0028.","comments":1,"createdAt":"2018-08-05T14:41:33Z","updatedAt":"2018-08-11T12:48:00Z","closedAt":"2018-08-11T12:48:00Z","state":"closed","user":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4"},"owner":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1533991654000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5697","number":5697,"title":"Support File Proxies","body":"cola can only perform analysis on disk files as of now, it should also support analysis on in-memory files. This should be done using File Proxies so that it fits into current ecosystem.\nRefer: cEP-0028","comments":1,"createdAt":"2018-08-08T14:33:27Z","updatedAt":"2018-08-11T12:47:34Z","closedAt":"2018-08-11T12:47:34Z","state":"closed","user":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4"},"owner":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4"},"labels":[{"name":"area/CI","color":"eb6420"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1533947025000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5702","number":5702,"title":"Add meta-review process into newcomer guide","body":"Newcomers should do at least one meta-review or receive a meta-review before becoming developers.\nPlease assign this to me ;)","comments":0,"createdAt":"2018-08-10T13:57:23Z","updatedAt":"2018-08-11T00:23:45Z","closedAt":"2018-08-11T00:23:45Z","state":"closed","user":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4"},"owner":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1535421399000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5603","number":5603,"title":"Add alias Node to language JavaScript","body":"'node' is a common alias for JavaScript.","comments":0,"createdAt":"2018-07-07T04:41:35Z","updatedAt":"2018-08-28T01:56:39Z","closedAt":"2018-08-28T01:56:39Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"Akhelesh","avatarUrl":"https://avatars2.githubusercontent.com/u/42298056?v=4"},"labels":[]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1535905243000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5604","number":5604,"title":"docs: Replace the Basic rST link with a working link","body":"Steps to reproduce:\n\nHead to https://api.coala.io/en/latest/Developers/Useful_Links.html.\nClick on the Basic rST in rST-Links\n\nThe page would show a permission denied error.\nReplace the link with a proper working link.","comments":2,"createdAt":"2018-07-07T08:08:02Z","updatedAt":"2018-09-02T16:20:43Z","closedAt":"2018-07-09T07:34:08Z","state":"closed","user":{"login":"shikharvaish28","avatarUrl":"https://avatars1.githubusercontent.com/u/22795943?v=4"},"owner":{"login":"shikharvaish28","avatarUrl":"https://avatars1.githubusercontent.com/u/22795943?v=4"},"assignee":{"login":"m3rc3n4ry","avatarUrl":"https://avatars2.githubusercontent.com/u/29359259?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1535148882000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5605","number":5605,"title":"Newcomers_Guide.rst: display \"move on to more difficult issues\" message as note block","body":"On Newcomers Guide page there is a message saying:\n\nNote: After you have solved a difficulty/newcomer issue, please don’t take up any more. Instead, move on to more difficult issues.\n\nAs this message starts with \"Note:\", maybe it would be more logical to have this marked as \"Note\" block (similar to \"Don’t just fix a newcomer issue!\" message which is lower on that page).","comments":1,"createdAt":"2018-07-07T15:08:50Z","updatedAt":"2018-08-24T22:14:42Z","closedAt":null,"state":"open","user":{"login":"nikitavbv","avatarUrl":"https://avatars1.githubusercontent.com/u/24596921?v=4"},"owner":{"login":"nikitavbv","avatarUrl":"https://avatars1.githubusercontent.com/u/24596921?v=4"},"assignee":{"login":"InquiridorTechie","avatarUrl":"https://avatars1.githubusercontent.com/u/31249906?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1535421576000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5621","number":5621,"title":"Create doc page about moban","body":"moban is now fairly established in coala repos.\nIt is time for some docs.\nEspecially about how to do sync PR whenever it is needed.","comments":5,"createdAt":"2018-07-10T14:16:38Z","updatedAt":"2018-08-28T01:59:36Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"},{"name":"importance/medium","color":"fbca04"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1535886147000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5636","number":5636,"title":"Python 3.3 unsupported check failing due to pytest 3.6.1 not available for that version","body":"Collecting pytest~=3.6.1 (from -r requirements.txt (line 20))\n  Could not find a version that satisfies the requirement pytest~=3.6.1 (from -r requirements.txt (line 20)) (from versions: 2.0.0, 2.0.1, 2.0.2, 2.0.3, 2.1.0, 2.1.1, 2.1.2, 2.1.3, 2.2.0, 2.2.1, 2.2.2, 2.2.3, 2.2.4, 2.3.0, 2.3.1, 2.3.2, 2.3.3, 2.3.4, 2.3.5, 2.4.0, 2.4.1, 2.4.2, 2.5.0, 2.5.1, 2.5.2, 2.6.0, 2.6.1, 2.6.2, 2.6.3, 2.6.4, 2.7.0, 2.7.1, 2.7.2, 2.7.3, 2.8.0, 2.8.1, 2.8.2, 2.8.3, 2.8.4, 2.8.5, 2.8.6, 2.8.7, 2.9.0, 2.9.1, 2.9.2, 3.0.0, 3.0.1, 3.0.2, 3.0.3, 3.0.4, 3.0.5, 3.0.6, 3.0.7, 3.1.0, 3.1.1, 3.1.2, 3.1.3, 3.2.0, 3.2.1, 3.2.2, 3.2.3, 3.2.4, 3.2.5)\nNo matching distribution found for pytest~=3.6.1 (from -r requirements.txt (line 20))\n\nSee https://travis-ci.org/coala/coala/builds/404413480 for example","comments":0,"createdAt":"2018-07-17T09:02:11Z","updatedAt":"2018-09-02T11:02:27Z","closedAt":"2018-09-02T11:02:27Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"area/CI","color":"eb6420"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1535812834000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5508","number":5508,"title":"Undeclared coalib dependency on pytest-timeout","body":"coalib currently depends on pytest-timeout, which isnt listed as a dependency in requirements.txt\n$ git grep pytest coalib/\ncoalib/testing/LocalBearTestHelper.py:import pytest\ncoalib/testing/LocalBearTestHelper.py:    @pytest.mark.timeout(timeout)\n\nThis was done in 328bce6, and released in 0.9.0.\nIt originally came from coala/coala-bears@9d02f80\nWe would not want to add pytest-timeout or even pytest in the dependencies of coalib, as that makes any enviroment with coala dicate the test environment versions that the coala user must use, which may conflict with their own needs.\nPossibly we need to move the test helpers to a separate repo, in order to avoid our test needs poluting the environment of our users.","comments":1,"createdAt":"2018-06-09T23:22:37Z","updatedAt":"2018-09-01T14:40:34Z","closedAt":"2018-09-01T14:40:34Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"area/CI","color":"eb6420"},{"name":"area/tests","color":"bfd4f2"},{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1534335534000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5509","number":5509,"title":"Incorrect syntax in HelloWorldBear","body":"Incorrect syntax\nlogging.debug(\"Hello World! Checking file\", filename, \".\")\nhttp://api.coala.io/en/latest/Developers/Writing_Native_Bears.html#a-hello-world-bear","comments":14,"createdAt":"2018-06-10T00:13:00Z","updatedAt":"2018-08-15T12:18:54Z","closedAt":"2018-06-15T18:24:11Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"SubbulakshmiRS","avatarUrl":"https://avatars3.githubusercontent.com/u/32260751?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1533994812000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5510","number":5510,"title":"Typo in parse_cli","body":"docstring and function signature for parse_cli method uses variable name comment_seperators, should be comment_separators to fix spelling and to align with function signature of Setting class definition.\nProbably a good newcomer issue.","comments":10,"createdAt":"2018-06-10T00:37:26Z","updatedAt":"2018-08-11T13:40:12Z","closedAt":"2018-08-11T13:40:12Z","state":"closed","user":{"login":"CCInCharge","avatarUrl":"https://avatars2.githubusercontent.com/u/7788704?v=4"},"owner":{"login":"CCInCharge","avatarUrl":"https://avatars2.githubusercontent.com/u/7788704?v=4"},"assignee":{"login":"shashwatmishra76","avatarUrl":"https://avatars2.githubusercontent.com/u/24711156?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/low","color":"207de5"},{"name":"importance/low","color":"70E870"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1533963951000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5515","number":5515,"title":"Create taste `min_file_length`","body":"Create a taste min_file_length (under FileLength aspect) corresponding to LineCountBear setting min_lines_per_file https://github.com/coala/coala-bears/blob/master/bears/general/LineCountBear.py#L21.\nIt can be of the same format as the taste max_file_length as per the cEP https://github.com/coala/cEPs/blob/master/cEP-0010.md.","comments":0,"createdAt":"2018-06-13T04:40:57Z","updatedAt":"2018-08-11T05:05:51Z","closedAt":"2018-08-11T05:05:51Z","state":"closed","user":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4"},"owner":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4"},"assignee":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4"},"labels":[{"name":"area/aspects","color":"000000"},{"name":"area/documentation","color":"bfe5bf"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1534753145000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5519","number":5519,"title":"Rename the `Formatting` aspect of the doctest","body":"The Formatting aspect in the doctests (here https://github.com/coala/coala/blob/master/coalib/bearlib/aspects/root.py#L18) needs to be renamed to some crazy name as a workaround till #5518 is resolved.","comments":4,"createdAt":"2018-06-13T10:09:57Z","updatedAt":"2018-08-20T08:19:05Z","closedAt":"2018-08-20T08:19:04Z","state":"closed","user":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4"},"owner":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4"},"assignee":{"login":"jschwarzwalder","avatarUrl":"https://avatars0.githubusercontent.com/u/8946787?v=4"},"labels":[{"name":"area/aspects","color":"000000"},{"name":"area/documentation","color":"bfe5bf"},{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1535813657000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5532","number":5532,"title":"Multiple += in single settings section","body":"The following should work\n[foo]\nignore += blah\nignore += baz","comments":10,"createdAt":"2018-06-16T04:13:00Z","updatedAt":"2018-09-01T14:54:17Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"},{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1535708043000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5537","number":5537,"title":"Add module docstrings to core nextgen components","body":"As part of #5359 , nextgen core component (coalib/core/) needs module docstrings which explain the purpose of each module.\nThey should conform with pep257, and be tested with pydocstyle.","comments":2,"createdAt":"2018-06-17T03:48:18Z","updatedAt":"2018-08-31T09:34:03Z","closedAt":"2018-08-31T09:34:03Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4"},"labels":[{"name":"area/core","color":"eb6420"},{"name":"area/documentation","color":"bfe5bf"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1533997034000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5567","number":5567,"title":"Add `escape_quotes` to language definitions","body":"escape_quotes (like \\\", \\' and \"\", '') need to be added to the language definition as per the language compatibility and preference. This will be helpful for designing respective tastes for the QuotesBear as well as for the usage in the bear itself.","comments":1,"createdAt":"2018-06-26T04:44:19Z","updatedAt":"2018-08-11T14:17:14Z","closedAt":"2018-08-11T14:17:14Z","state":"closed","user":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4"},"owner":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4"},"assignee":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4"},"labels":[{"name":"area/aspects","color":"000000"},{"name":"area/documentation","color":"bfe5bf"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1535813523000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5574","number":5574,"title":"Create 'unsupported' language definitions for languages which do not use `\\` as escape sequence","body":"https://gitlab.com/coala/coala-utils/issues/64 shows that escape char \\ is hard-wired into many functions and can not be easily removed.\nTo prevent bugs, we need coalang files for languages which do not use \\ as the escape character, and those files need to clearly indicate that the language is not supported, with a comment explaining why.","comments":0,"createdAt":"2018-06-27T13:59:23Z","updatedAt":"2018-09-01T14:52:03Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4"},"labels":[{"name":"area/languages","color":"d4c5f9"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1535813921000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5310","number":5310,"title":"Result.py: Add docstring regarding the case that line or column is None","body":"The output generated by coala can have line being None or column being None.\ncolumn = None means there is an error with the whole line.\nline = None means the whole file. The reason behind it is that it's an unknown line means it can occur anywhere in the file.\nAll combinations with None values and numbers for line and column are allowed, except line=None and column=<some number>\nThis should be clarified in the documentation.\n(ref: http://api.coala.io/en/latest/coalib.results.html#module-coalib.results.Result)","comments":2,"createdAt":"2018-04-04T04:13:32Z","updatedAt":"2018-09-01T14:58:41Z","closedAt":null,"state":"open","user":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4"},"owner":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/low","color":"207de5"},{"name":"importance/medium","color":"fbca04"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1533790471000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5329","number":5329,"title":"Diff.py: Update ``split_diff`` docstring","body":"In the docstring of split_diff function, Line 323 should be updated to - If ``-1`` is given, every change....\nThis is needed to prevent bear developers from using any arbitrary negative value (and use a common value) in order to ease out the process of implementing changes to the current behavior in future.\ndifficulty/newcomer\narea/documentation","comments":5,"createdAt":"2018-04-06T15:29:52Z","updatedAt":"2018-08-09T04:54:31Z","closedAt":"2018-08-09T04:54:31Z","state":"closed","user":{"login":"manankalra","avatarUrl":"https://avatars3.githubusercontent.com/u/12759088?v=4"},"owner":{"login":"manankalra","avatarUrl":"https://avatars3.githubusercontent.com/u/12759088?v=4"},"assignee":{"login":"blindacai","avatarUrl":"https://avatars0.githubusercontent.com/u/7420826?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1536010444000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5330","number":5330,"title":"Add language definition for Haskell","body":"https://github.com/coala/coala/tree/master/coalib/bearlib/languages/definitions has no Haskell.\n:-(","comments":3,"createdAt":"2018-04-07T01:36:57Z","updatedAt":"2018-09-03T21:34:04Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"area/languages","color":"d4c5f9"},{"name":"difficulty/medium","color":"0052cc"},{"name":"importance/medium","color":"fbca04"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1534727663000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5333","number":5333,"title":"Make all blocks even colored in Newcomers Guide","body":"See #5119\nThe grey colored patches over yellow background are due to the extra colon before the exemplar commands. Just remove one colon and it will look fine.","comments":17,"createdAt":"2018-04-07T11:45:51Z","updatedAt":"2018-08-20T01:14:23Z","closedAt":null,"state":"open","user":{"login":"kriti21","avatarUrl":"https://avatars3.githubusercontent.com/u/19872082?v=4"},"owner":{"login":"kriti21","avatarUrl":"https://avatars3.githubusercontent.com/u/19872082?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1535813846000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5345","number":5345,"title":"Shouldn't be getting Executing section cli... when [cli] is empty","body":"","comments":0,"createdAt":"2018-04-08T16:54:01Z","updatedAt":"2018-09-01T14:57:26Z","closedAt":null,"state":"open","user":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4"},"owner":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4"},"labels":[{"name":"area/CLI","color":"006b75"},{"name":"area/config","color":"fbca04"},{"name":"difficulty/low","color":"207de5"},{"name":"importance/medium","color":"fbca04"},{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1535425850000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5398","number":5398,"title":"\"filters\" rewrite","body":"Foremost,\n[['language', 'c', 'java'], ['can_fix', 'syntax']]\n\nis just wrong on every level.\nVery worst case it should be tuples, not lists.\nHowever it should be a dict, or OrderedDict if the order matters.\n{'language': ['c', 'java'], 'can_fix': 'syntax'}\n\nAnd better yet it should be a proper class, so that it can be used in type annotations.\nIn some places this 'structure' is given argument name filters, which hints it may contain multiple items.\nIn other places (e.g. apply_filter) it is filter_name.\nAnd for is_valid_filter, the arg name is filter, which is a builtin function.","comments":6,"createdAt":"2018-04-17T06:25:33Z","updatedAt":"2018-08-28T03:10:50Z","closedAt":"2018-08-28T03:10:50Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"Utkarsh1308","avatarUrl":"https://avatars0.githubusercontent.com/u/23418707?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"},{"name":"importance/high","color":"eb6420"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1535472169000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5403","number":5403,"title":"Add git commit to Newcomers guide","body":"Part of Step 4 (Sending Your Changes) is \"create a commit\"\nBut the command to do this is not shown.","comments":15,"createdAt":"2018-04-18T22:14:46Z","updatedAt":"2018-08-28T16:02:49Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"dorothykiz1","avatarUrl":"https://avatars3.githubusercontent.com/u/30805504?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1536088197000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5432","number":5432,"title":"Writing_Documentation.rst: root directory --> docs directory","body":"difficulty/newcomer","comments":1,"createdAt":"2018-04-29T05:18:05Z","updatedAt":"2018-09-04T19:09:57Z","closedAt":null,"state":"open","user":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4"},"owner":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1535583275000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5442","number":5442,"title":"CachingUtilities.pickle_load and .pickle_dump docstring refers to non-existant filename","body":"Docstring is\ndef pickle_load(log_printer, identifier, fallback=None):\n    \"\"\"\n    Get the data stored in ``filename`` present in the user\n    config directory. Example usage:\n    ...\n    \"\"\"\nBut filename is not a parameter.  A better description is needed to explain which file is loaded.\nThe same applies to pickle_dump.","comments":5,"createdAt":"2018-05-05T05:16:49Z","updatedAt":"2018-08-29T22:54:35Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"SubbulakshmiRS","avatarUrl":"https://avatars3.githubusercontent.com/u/32260751?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"},{"name":"importance/medium","color":"fbca04"},{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1535081523000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5109","number":5109,"title":"Writing native bears tutorial: use the `format` string method in an example","body":"In the first example code of the tutorial \"Guide to Writing a Native Bear\" (in the section \"A Hello World Bear\"), the call to debug should be passed one argument: a string that would be formatted using the methode format.","comments":21,"createdAt":"2018-01-24T18:02:15Z","updatedAt":"2018-08-24T03:32:03Z","closedAt":"2018-08-24T03:32:02Z","state":"closed","user":{"login":"Kagamihime","avatarUrl":"https://avatars0.githubusercontent.com/u/25638564?v=4"},"owner":{"login":"Kagamihime","avatarUrl":"https://avatars0.githubusercontent.com/u/25638564?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1534079847000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5188","number":5188,"title":"persistent_hash: Missing support for collection types with not guaranteed iteration order","body":"Like dict and set. sorted can be used to sort the data beforehand.","comments":14,"createdAt":"2018-02-19T22:31:05Z","updatedAt":"2018-08-12T13:17:27Z","closedAt":"2018-08-12T13:17:27Z","state":"closed","user":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"owner":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"assignee":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4"},"milestone":{"title":"Nextgen-Core","createdAt":"2017-06-09T22:33:56Z","dueOn":null,"state":"open","htmlUrl":"https://github.com/coala/coala/milestone/18","description":""},"labels":[{"name":"area/core","color":"eb6420"},{"name":"difficulty/low","color":"207de5"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1535811028000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/5202","number":5202,"title":"In `ask_for_action_and_apply()`, if `apply_single` is non-False, function should return when match is found","body":"In the function ask_for_action_and_apply() in ConsoleInteraction.py, if the apply_single parameter is non-False, then the for loop inside it iterates through the entire metadata_list before returning False.\nIMHO we should include a break statement inside the if block (which is in the for loop) such that the function may return after a match is found because there is no need to go through the remaining actions in metadata_list.","comments":15,"createdAt":"2018-02-23T18:17:22Z","updatedAt":"2018-09-01T14:10:28Z","closedAt":null,"state":"open","user":{"login":"nityeshaga","avatarUrl":"https://avatars1.githubusercontent.com/u/24698858?v=4"},"owner":{"login":"nityeshaga","avatarUrl":"https://avatars1.githubusercontent.com/u/24698858?v=4"},"assignee":{"login":"rak-shit","avatarUrl":"https://avatars3.githubusercontent.com/u/30564496?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"type/performance","color":"fef2c0"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1535396095000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4861","number":4861,"title":"ConsoleInteractionTest.test_ask_for_actions_and_apply is defined twice","body":"Just like #4859 and also useful for properly testing of PRs like #4179\ncc @mrtes @Nosferatul @Adrianzatreanu @yukiisbored","comments":8,"createdAt":"2017-11-12T15:29:04Z","updatedAt":"2018-08-27T18:54:55Z","closedAt":null,"state":"open","user":{"login":"userzimmermann","avatarUrl":"https://avatars3.githubusercontent.com/u/2088633?v=4"},"owner":{"login":"userzimmermann","avatarUrl":"https://avatars3.githubusercontent.com/u/2088633?v=4"},"assignee":{"login":"pkcod","avatarUrl":"https://avatars3.githubusercontent.com/u/29246710?v=4"},"labels":[{"name":"area/tests","color":"bfd4f2"},{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"importance/high","color":"eb6420"},{"name":"type/bug","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1535148976000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4904","number":4904,"title":"docs: Explain unack usage explicitly","body":"Explain that unack is used for disapprove commit that is ack-ed by someone else.\ndifficulty/newcomer\nOpened by @mamat-rahmat at Gitter","comments":7,"createdAt":"2017-11-24T01:58:29Z","updatedAt":"2018-08-24T22:16:16Z","closedAt":null,"state":"open","user":{"login":"co-robo","avatarUrl":"https://avatars2.githubusercontent.com/u/29058257?v=4"},"owner":{"login":"co-robo","avatarUrl":"https://avatars2.githubusercontent.com/u/29058257?v=4"},"assignee":{"login":"darthgera123","avatarUrl":"https://avatars1.githubusercontent.com/u/30871411?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1535581277000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4604","number":4604,"title":"Write a Mesos scheduler for coala!","body":"Distributed code checking! Imagine running complex analysis on the Linux repo, but instead of taking 2 days, it takes 1h :)\nThis package may be the choice for the Mesos Framework API:\nhttps://github.com/daskos/mentor","comments":2,"createdAt":"2017-08-01T14:32:06Z","updatedAt":"2018-08-29T22:21:17Z","closedAt":null,"state":"open","user":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"owner":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"labels":[{"name":"area/core","color":"eb6420"},{"name":"cool and awesome","color":"0052cc"},{"name":"difficulty/very-high","color":"e11d21"},{"name":"status/blocked","color":"e11d21"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1534985203000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4188","number":4188,"title":"argparse.ArgumentParser is wrongly named ArgParser several times","body":"(In doc strings)\nRealized while reviewing: #4161 (comment)\n> grep -R ArgParser coalib\ncoalib/coala.py:from coalib.parsing.DefaultArgParser import default_arg_parser\ncoalib/coala_main.py:    :param arg_parser:              Instance of ArgParser that is used to parse\ncoalib/coala_main.py.orig:    :param arg_parser:              Instance of ArgParser that is used to parse\ncoalib/misc/BuildManPage.py:            --parser=coalib.parsing.DefaultArgParser:default_arg_parser\ncoalib/parsing/CliParsing.py:from coalib.parsing.DefaultArgParser import default_arg_parser\ncoalib/parsing/CliParsing.py:    :param arg_parser:                  Instance of ArgParser that is used to\ncoalib/parsing/DefaultArgParser.py:    This function creates an ArgParser to parse command line arguments.\ncoalib/parsing/DefaultArgParser.py.orig:    This function creates an ArgParser to parse command line arguments.\ncoalib/settings/ConfigurationGathering.py:    :param arg_parser:  An ``ArgParser`` object.\ncoalib/settings/ConfigurationGathering.py:    :param arg_parser:       Instance of ArgParser that is used to parse\n\nBut actually argparse.ArgumentParser is meant there. So those occurrences should be changed accordingly to clearly know what is meant. Otherwise it looks like some coala-internal ArgParser class\n@Udayan12167 @supergr35 @JohnS-01","comments":14,"createdAt":"2017-05-07T19:55:11Z","updatedAt":"2018-08-23T00:46:43Z","closedAt":null,"state":"open","user":{"login":"userzimmermann","avatarUrl":"https://avatars3.githubusercontent.com/u/2088633?v=4"},"owner":{"login":"userzimmermann","avatarUrl":"https://avatars3.githubusercontent.com/u/2088633?v=4"},"labels":[{"name":"area/CLI","color":"006b75"},{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"importance/low","color":"70E870"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1534589257000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/4090","number":4090,"title":"Replace pytest-timeout with pytest-faulthandler","body":"https://pypi.python.org/pypi/pytest-faulthandler activates on a timeout, but dumps out much more useful info.\nNot sure we want this, as mostly our timeouts are network timeouts, and the cause is fairly self-evident.\nSee docker timeout issues.\nKeeping this issue open as a place to record any new timeouts we encounter, to see if there is occasions we need more info than pytest-timeout provides.","comments":1,"createdAt":"2017-04-11T03:11:53Z","updatedAt":"2018-08-18T10:47:37Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"status/needs info","color":"006b75"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1534324248000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3807","number":3807,"title":"An automated way to measure speed-up over time","body":"I was learning about Amdahl's law today and I thought it'd be neat to have a graphical representation of how fast coala has been over time. A good measure would be running coala on the coalib codebase and logging the completion time for each commit progressively.","comments":7,"createdAt":"2017-02-28T11:56:27Z","updatedAt":"2018-08-15T09:10:48Z","closedAt":null,"state":"open","user":{"login":"adtac","avatarUrl":"https://avatars2.githubusercontent.com/u/7521600?v=4"},"owner":{"login":"adtac","avatarUrl":"https://avatars2.githubusercontent.com/u/7521600?v=4"},"assignee":{"login":"adtac","avatarUrl":"https://avatars2.githubusercontent.com/u/7521600?v=4"},"labels":[{"name":"difficulty/medium","color":"0052cc"},{"name":"type/performance","color":"fef2c0"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1534350610000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3843","number":3843,"title":"Git Basics: Mention Xcode for MacOS","body":"Following on from #3256 , the macos note should mention that git may be installed via Xcode.\nhttps://www.atlassian.com/git/tutorials/install-git#mac-os-x\nXcode has other useful tools for developers, so it should be a preferred and recommended way to get these tools.","comments":1,"createdAt":"2017-03-03T15:28:47Z","updatedAt":"2018-08-15T16:30:10Z","closedAt":"2018-08-15T14:19:35Z","state":"closed","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"Rddhima-R","avatarUrl":"https://avatars0.githubusercontent.com/u/22348449?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65C8FF"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1535679808000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3717","number":3717,"title":"Coverage.py warning: Could not parse Python file","body":"We are seeing a lot of \"Coverage.py warning: Could not parse Python file .....py\"  on Travis only.\ne.g.\nhttps://travis-ci.org/coala/coala/jobs/199030440#L514\nIt may be a problem with codecov-bash, or with coverage.","comments":6,"createdAt":"2017-02-07T22:35:16Z","updatedAt":"2018-08-31T01:43:28Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"difficulty/medium","color":"0052cc"},{"name":"importance/low","color":"70E870"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1535811421000,"issue":{"htmlUrl":"https://github.com/coala/coala/issues/3755","number":3755,"title":"Mention \"Adding CI\" in Newcomers guide","body":"It should be mentioned in step 4 5\nOpened via gitter by @jayvdb","comments":2,"createdAt":"2017-02-16T16:15:34Z","updatedAt":"2018-09-01T14:17:01Z","closedAt":"2018-09-01T14:17:01Z","state":"closed","user":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"owner":{"login":"coala-bot","avatarUrl":"https://avatars0.githubusercontent.com/u/22034293?v=4"},"assignee":{"login":"anuj97","avatarUrl":"https://avatars3.githubusercontent.com/u/18463482?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"importance/low","color":"70E870"}]}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1536254603000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5752","number":5752,"title":"Writing_Good_Commits.rst: Fix Mistake","body":"Closes #5738\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":5,"createdAt":"2018-09-05T07:34:15Z","updatedAt":"2018-09-06T17:23:23Z","closedAt":null,"state":"open","user":{"login":"Utkarsh1308","avatarUrl":"https://avatars0.githubusercontent.com/u/23418707?v=4"},"owner":{"login":"Utkarsh1308","avatarUrl":"https://avatars0.githubusercontent.com/u/23418707?v=4"},"assignee":{"login":"Utkarsh1308","avatarUrl":"https://avatars0.githubusercontent.com/u/23418707?v=4"},"labels":[{"name":"area/aspects","color":"000000"},{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5752","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDQxODY2ODAyNQ==","url":"https://github.com/coala/coala/pull/5752#issuecomment-418668025","bodyText":"This made me recall #5204 (comment)\n\nirony: a commit to fix commit messages has an invalid commit message.","diffHunk":null,"author":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4","name":"Boxuan Li"},"reactions":[{"id":"MDg6UmVhY3Rpb24yODk1NjcwNA==","createdAt":"2018-09-05T10:05:33Z","content":"LAUGH","user":{"login":"Utkarsh1308","name":"Utkarsh Sharma"}}],"createdAt":"2018-09-05T09:40:22Z","lastEditedAt":null,"updatedAt":"2018-09-05T09:40:22Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1536092449000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5750","number":5750,"title":"coalib: rename variable default_coafile","body":"This renames the default_coafile reference in Constants to local_coafile\nFixes #5440\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":4,"createdAt":"2018-09-04T17:51:09Z","updatedAt":"2018-09-04T20:20:49Z","closedAt":null,"state":"open","user":{"login":"PrajwalM2212","avatarUrl":"https://avatars3.githubusercontent.com/u/30733262?v=4"},"owner":{"login":"PrajwalM2212","avatarUrl":"https://avatars3.githubusercontent.com/u/30733262?v=4"},"assignee":{"login":"PrajwalM2212","avatarUrl":"https://avatars3.githubusercontent.com/u/30733262?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"},{"name":"importance/medium","color":"fbca04"},{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5750","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDQxODQ2MzM5Ng==","url":"https://github.com/coala/coala/pull/5750#issuecomment-418463396","bodyText":"It seems that coalaTest.test_coala_with_color is failing for previous PR's also.","diffHunk":null,"author":{"login":"PrajwalM2212","avatarUrl":"https://avatars3.githubusercontent.com/u/30733262?v=4","name":"PRAJWAL M"},"createdAt":"2018-09-04T18:03:51Z","lastEditedAt":"2018-09-04T18:08:46Z","updatedAt":"2018-09-04T18:08:46Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1536160285000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5751","number":5751,"title":"Undefined name: import sys","body":"sys is used on line 45 but it is never imported.  This will probably raise NameError at runtime instead of sys.exit() as expected.\nflake8 testing of https://github.com/coala/coala on Python 3.7.0\n$ flake8 . --count --select=E901,E999,F821,F822,F823 --show-source --statistics\n./tests/collecting/collectors_test_dir/bears/incorrect_bear.py:1:7: E999 SyntaxError: invalid syntax\nThe Zen of Python, by Tim Peters\n      ^\n./coalib/coala_delete_orig.py:44:5: F821 undefined name 'sys'\n    sys.exit(main())\n    ^\n1     E999 SyntaxError: invalid syntax\n1     F821 undefined name 'sys'\n2\n\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":6,"createdAt":"2018-09-05T07:15:06Z","updatedAt":"2018-09-05T15:11:25Z","closedAt":"2018-09-05T15:11:21Z","state":"closed","user":{"login":"cclauss","avatarUrl":"https://avatars3.githubusercontent.com/u/3709715?v=4"},"owner":{"login":"cclauss","avatarUrl":"https://avatars3.githubusercontent.com/u/3709715?v=4"},"labels":[{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5751","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDQxODczMTAzMg==","url":"https://github.com/coala/coala/pull/5751#issuecomment-418731032","bodyText":"@li-boxuan Is this an active project?  I do not see a pull request that has passed the continuous integration tests in more than a year.","diffHunk":null,"author":{"login":"cclauss","avatarUrl":"https://avatars3.githubusercontent.com/u/3709715?v=4","name":""},"createdAt":"2018-09-05T13:30:31Z","lastEditedAt":null,"updatedAt":"2018-09-05T13:30:31Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxODczMjA2OA==","url":"https://github.com/coala/coala/pull/5751#issuecomment-418732068","bodyText":"Is this an active project?\n\nYes. If you join the gitter channel, you'll find the community is friendly and quite active. (see newcomer guide for details)\n\nI do not see a pull request that has passed the continuous integration tests in more than a year.\n\nThat's not true ;) Not sure how you come up with this observation","diffHunk":null,"author":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4","name":"Boxuan Li"},"createdAt":"2018-09-05T13:33:20Z","lastEditedAt":null,"updatedAt":"2018-09-05T13:33:20Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxODczNDM1OQ==","url":"https://github.com/coala/coala/pull/5751#issuecomment-418734359","bodyText":"https://github.com/coala/coala/pulls  # None passed\nhttps://github.com/coala/coala/pulls?page=2  # None passed\nhttps://github.com/coala/coala/pulls?page=3  # None passed\nhttps://github.com/coala/coala/pulls?page=4  # None passed\nhttps://github.com/coala/coala/pulls?page=5  # One passed from April 2017\nSimilar results when looking at closed PRs.","diffHunk":null,"author":{"login":"cclauss","avatarUrl":"https://avatars3.githubusercontent.com/u/3709715?v=4","name":""},"createdAt":"2018-09-05T13:40:04Z","lastEditedAt":null,"updatedAt":"2018-09-05T13:40:04Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxODczNzE4Ng==","url":"https://github.com/coala/coala/pull/5751#issuecomment-418737186","bodyText":"https://github.com/coala/coala/pulls # None passed\n\nIncorrect. You can see many of them are in Some checks haven’t completed yet state, which is expected, because review/gitmate/manual and review/gitmate/manual/pr will pass only when a maintainer approves it and gives ack. Anyway, this is not the right place to discuss this. You may want to go to https://gitter.im/coala/coala if you still have doubts.","diffHunk":null,"author":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4","name":"Boxuan Li"},"createdAt":"2018-09-05T13:47:56Z","lastEditedAt":null,"updatedAt":"2018-09-05T13:47:56Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1535848447000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5744","number":5744,"title":".coafile: Remove trailing globstars","body":"According to coala's warnings.","comments":6,"createdAt":"2018-09-01T20:13:37Z","updatedAt":"2018-09-02T00:34:07Z","closedAt":"2018-09-02T00:33:52Z","state":"merged","user":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"owner":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"labels":[{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5744","comments":[]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1536065763000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5746","number":5746,"title":"Arranged Imported classes in Alphabetical Order","body":"For short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":8,"createdAt":"2018-09-02T15:54:23Z","updatedAt":"2018-09-04T12:56:03Z","closedAt":"2018-09-03T03:27:20Z","state":"closed","user":{"login":"Mah1ndra","avatarUrl":"https://avatars2.githubusercontent.com/u/32550072?v=4"},"owner":{"login":"Mah1ndra","avatarUrl":"https://avatars2.githubusercontent.com/u/32550072?v=4"},"assignee":{"login":"Mah1ndra","avatarUrl":"https://avatars2.githubusercontent.com/u/32550072?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5746","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDQxNzk0ODM1Mw==","url":"https://github.com/coala/coala/pull/5746#issuecomment-417948353","bodyText":"@Mah1ndra Also run coala locally on the repo before pushing the changes.","diffHunk":null,"author":{"login":"shikharvaish28","avatarUrl":"https://avatars1.githubusercontent.com/u/22795943?v=4","name":"Shikhar Vaish"},"reactions":[{"id":"MDg6UmVhY3Rpb24yODgyNzY1OA==","createdAt":"2018-09-02T18:05:46Z","content":"THUMBS_UP","user":{"login":"atb00ker","name":"Ajay Tripathi"}},{"id":"MDg6UmVhY3Rpb24yODgzNDEwNg==","createdAt":"2018-09-03T02:22:24Z","content":"THUMBS_UP","user":{"login":"Mah1ndra","name":"Mahendra Thanniru"}}],"createdAt":"2018-09-02T18:04:44Z","lastEditedAt":null,"updatedAt":"2018-09-02T18:04:44Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1536069332000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5747","number":5747,"title":"__init__.py: Import classes arranged Alphabetical","body":"Arranged Imported classes in Alphabetical order\nCloses: #5745\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":20,"createdAt":"2018-09-03T03:31:22Z","updatedAt":"2018-09-04T13:55:32Z","closedAt":null,"state":"open","user":{"login":"Mah1ndra","avatarUrl":"https://avatars2.githubusercontent.com/u/32550072?v=4"},"owner":{"login":"Mah1ndra","avatarUrl":"https://avatars2.githubusercontent.com/u/32550072?v=4"},"assignee":{"login":"Mah1ndra","avatarUrl":"https://avatars2.githubusercontent.com/u/32550072?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5747","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNDYyODM4MA==","url":"https://github.com/coala/coala/pull/5747#discussion_r214628380","bodyText":"I see you are adding a lot of blank lines. IMO these are not required, please only arrange imports in alphabetic order, don't add/remove lines unnecessarily.","diffHunk":"@@ -3,40 +3,56 @@\n \"\"\"\n \n # Start ignoring PyUnusedCodeBear\n-from .Language import Language\n-from .Language import Languages\n-\n-from .definitions.Unknown import Unknown\n from .definitions.Bash import Bash\n+\n from .definitions.C import C\n from .definitions.CPP import CPP\n-from .definitions.CSharp import CSharp\n from .definitions.CSS import CSS\n+from .definitions.CSharp import CSharp\n+\n from .definitions.Fortran import Fortran\n+\n from .definitions.Golang import Golang\n+\n from .definitions.html import HTML\n-from .definitions.Java import Java\n-from .definitions.JavaScript import JavaScript\n+\n from .definitions.JSON import JSON\n from .definitions.JSP import JSP\n+from .definitions.Java import Java\n+from .definitions.JavaScript import JavaScript\n+from .definitions.Jinja2 import Jinja2\n+\n from .definitions.KornShell import KornShell\n-from .definitions.m4 import m4\n-from .definitions.Matlab import Matlab\n+\n+from .Language import Language\n+from .Language import Languages\n+\n from .definitions.Markdown import Markdown\n+from .definitions.Matlab import Matlab\n+from .definitions.m4 import m4\n+\n from .definitions.ObjectiveC import ObjectiveC\n+\n from .definitions.PHP import PHP\n from .definitions.PLSQL import PLSQL\n from .definitions.PowerShell import PowerShell\n from .definitions.Python import Python\n+\n from .definitions.Ruby import Ruby\n+\n from .definitions.Scala import Scala\n+from .definitions.Shell import Shell\n from .definitions.Swift import Swift\n+\n from .definitions.Tcl import Tcl\n-from .definitions.Vala import Vala\n from .definitions.TypeScript import TypeScript\n-from .definitions.Shell import Shell\n-from .definitions.Jinja2 import Jinja2\n+\n+from .definitions.Unknown import Unknown\n+\n+from .definitions.Vala import Vala\n from .definitions.VisualBasic import VisualBasic\n+\n from .definitions.XML import XML\n+","author":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4","name":"Pareksha Manchanda"},"reactions":[],"createdAt":"2018-09-03T09:33:42Z","lastEditedAt":null,"updatedAt":"2018-09-03T09:33:42Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNDYzMTAxMA==","url":"https://github.com/coala/coala/pull/5747#discussion_r214631010","bodyText":"okay. Thank you for the review @pareksha  @mach64","diffHunk":"@@ -3,40 +3,56 @@\n \"\"\"\n \n # Start ignoring PyUnusedCodeBear\n-from .Language import Language\n-from .Language import Languages\n-\n-from .definitions.Unknown import Unknown\n from .definitions.Bash import Bash\n+\n from .definitions.C import C\n from .definitions.CPP import CPP\n-from .definitions.CSharp import CSharp\n from .definitions.CSS import CSS\n+from .definitions.CSharp import CSharp\n+\n from .definitions.Fortran import Fortran\n+\n from .definitions.Golang import Golang\n+\n from .definitions.html import HTML\n-from .definitions.Java import Java\n-from .definitions.JavaScript import JavaScript\n+\n from .definitions.JSON import JSON\n from .definitions.JSP import JSP\n+from .definitions.Java import Java\n+from .definitions.JavaScript import JavaScript\n+from .definitions.Jinja2 import Jinja2\n+\n from .definitions.KornShell import KornShell\n-from .definitions.m4 import m4\n-from .definitions.Matlab import Matlab\n+\n+from .Language import Language\n+from .Language import Languages\n+\n from .definitions.Markdown import Markdown\n+from .definitions.Matlab import Matlab\n+from .definitions.m4 import m4\n+\n from .definitions.ObjectiveC import ObjectiveC\n+\n from .definitions.PHP import PHP\n from .definitions.PLSQL import PLSQL\n from .definitions.PowerShell import PowerShell\n from .definitions.Python import Python\n+\n from .definitions.Ruby import Ruby\n+\n from .definitions.Scala import Scala\n+from .definitions.Shell import Shell\n from .definitions.Swift import Swift\n+\n from .definitions.Tcl import Tcl\n-from .definitions.Vala import Vala\n from .definitions.TypeScript import TypeScript\n-from .definitions.Shell import Shell\n-from .definitions.Jinja2 import Jinja2\n+\n+from .definitions.Unknown import Unknown\n+\n+from .definitions.Vala import Vala\n from .definitions.VisualBasic import VisualBasic\n+\n from .definitions.XML import XML\n+","author":{"login":"Mah1ndra","avatarUrl":"https://avatars2.githubusercontent.com/u/32550072?v=4","name":"Mahendra Thanniru"},"reactions":[],"createdAt":"2018-09-03T09:42:34Z","lastEditedAt":null,"updatedAt":"2018-09-03T09:42:34Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNDYzMTE4Ng==","url":"https://github.com/coala/coala/pull/5747#discussion_r214631186","bodyText":"i'll make the necessary changes as suggested","diffHunk":"@@ -3,40 +3,56 @@\n \"\"\"\n \n # Start ignoring PyUnusedCodeBear\n-from .Language import Language\n-from .Language import Languages\n-\n-from .definitions.Unknown import Unknown\n from .definitions.Bash import Bash\n+\n from .definitions.C import C\n from .definitions.CPP import CPP\n-from .definitions.CSharp import CSharp\n from .definitions.CSS import CSS\n+from .definitions.CSharp import CSharp\n+\n from .definitions.Fortran import Fortran\n+\n from .definitions.Golang import Golang\n+\n from .definitions.html import HTML\n-from .definitions.Java import Java\n-from .definitions.JavaScript import JavaScript\n+\n from .definitions.JSON import JSON\n from .definitions.JSP import JSP\n+from .definitions.Java import Java\n+from .definitions.JavaScript import JavaScript\n+from .definitions.Jinja2 import Jinja2\n+\n from .definitions.KornShell import KornShell\n-from .definitions.m4 import m4\n-from .definitions.Matlab import Matlab\n+\n+from .Language import Language\n+from .Language import Languages\n+\n from .definitions.Markdown import Markdown\n+from .definitions.Matlab import Matlab\n+from .definitions.m4 import m4\n+\n from .definitions.ObjectiveC import ObjectiveC\n+\n from .definitions.PHP import PHP\n from .definitions.PLSQL import PLSQL\n from .definitions.PowerShell import PowerShell\n from .definitions.Python import Python\n+\n from .definitions.Ruby import Ruby\n+\n from .definitions.Scala import Scala\n+from .definitions.Shell import Shell\n from .definitions.Swift import Swift\n+\n from .definitions.Tcl import Tcl\n-from .definitions.Vala import Vala\n from .definitions.TypeScript import TypeScript\n-from .definitions.Shell import Shell\n-from .definitions.Jinja2 import Jinja2\n+\n+from .definitions.Unknown import Unknown\n+\n+from .definitions.Vala import Vala\n from .definitions.VisualBasic import VisualBasic\n+\n from .definitions.XML import XML\n+","author":{"login":"Mah1ndra","avatarUrl":"https://avatars2.githubusercontent.com/u/32550072?v=4","name":"Mahendra Thanniru"},"reactions":[],"createdAt":"2018-09-03T09:43:15Z","lastEditedAt":null,"updatedAt":"2018-09-03T09:43:15Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNDY2NzI3OA==","url":"https://github.com/coala/coala/pull/5747#discussion_r214667278","bodyText":"@Mah1ndra Java should be above JSON alphabetically. (Are you considering Upper-case to be higher than Lower-case?)","diffHunk":"@@ -3,39 +3,38 @@\n \"\"\"\n \n # Start ignoring PyUnusedCodeBear\n-from .Language import Language\n-from .Language import Languages\n-\n-from .definitions.Unknown import Unknown\n from .definitions.Bash import Bash\n from .definitions.C import C\n from .definitions.CPP import CPP\n-from .definitions.CSharp import CSharp\n from .definitions.CSS import CSS\n+from .definitions.CSharp import CSharp\n from .definitions.Fortran import Fortran\n from .definitions.Golang import Golang\n from .definitions.html import HTML\n-from .definitions.Java import Java\n-from .definitions.JavaScript import JavaScript\n from .definitions.JSON import JSON\n from .definitions.JSP import JSP\n+from .definitions.Java import Java","author":{"login":"shikharvaish28","avatarUrl":"https://avatars1.githubusercontent.com/u/22795943?v=4","name":"Shikhar Vaish"},"reactions":[],"createdAt":"2018-09-03T12:03:10Z","lastEditedAt":null,"updatedAt":"2018-09-03T12:03:10Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNDY2ODExOQ==","url":"https://github.com/coala/coala/pull/5747#discussion_r214668119","bodyText":"(Same as the above comment)","diffHunk":"@@ -3,39 +3,38 @@\n \"\"\"\n \n # Start ignoring PyUnusedCodeBear\n-from .Language import Language\n-from .Language import Languages\n-\n-from .definitions.Unknown import Unknown\n from .definitions.Bash import Bash\n from .definitions.C import C\n from .definitions.CPP import CPP\n-from .definitions.CSharp import CSharp\n from .definitions.CSS import CSS\n+from .definitions.CSharp import CSharp\n from .definitions.Fortran import Fortran\n from .definitions.Golang import Golang\n from .definitions.html import HTML\n-from .definitions.Java import Java\n-from .definitions.JavaScript import JavaScript\n from .definitions.JSON import JSON\n from .definitions.JSP import JSP\n+from .definitions.Java import Java\n+from .definitions.JavaScript import JavaScript","author":{"login":"shikharvaish28","avatarUrl":"https://avatars1.githubusercontent.com/u/22795943?v=4","name":"Shikhar Vaish"},"reactions":[],"createdAt":"2018-09-03T12:05:29Z","lastEditedAt":null,"updatedAt":"2018-09-03T12:05:29Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNDY3NDczMQ==","url":"https://github.com/coala/coala/pull/5747#discussion_r214674731","bodyText":"Alright. I'll resolve these.","diffHunk":"@@ -3,39 +3,38 @@\n \"\"\"\n \n # Start ignoring PyUnusedCodeBear\n-from .Language import Language\n-from .Language import Languages\n-\n-from .definitions.Unknown import Unknown\n from .definitions.Bash import Bash\n from .definitions.C import C\n from .definitions.CPP import CPP\n-from .definitions.CSharp import CSharp\n from .definitions.CSS import CSS\n+from .definitions.CSharp import CSharp\n from .definitions.Fortran import Fortran\n from .definitions.Golang import Golang\n from .definitions.html import HTML\n-from .definitions.Java import Java\n-from .definitions.JavaScript import JavaScript\n from .definitions.JSON import JSON\n from .definitions.JSP import JSP\n+from .definitions.Java import Java\n+from .definitions.JavaScript import JavaScript","author":{"login":"Mah1ndra","avatarUrl":"https://avatars2.githubusercontent.com/u/32550072?v=4","name":"Mahendra Thanniru"},"reactions":[],"createdAt":"2018-09-03T12:29:44Z","lastEditedAt":null,"updatedAt":"2018-09-03T12:29:44Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxNzk5Mjc5NA==","url":"https://github.com/coala/coala/pull/5747#issuecomment-417992794","bodyText":"I followed the guidelines and made commits accordingly. When I ran coala locally I've got a warning but no errors.","diffHunk":null,"author":{"login":"Mah1ndra","avatarUrl":"https://avatars2.githubusercontent.com/u/32550072?v=4","name":"Mahendra Thanniru"},"reactions":[],"createdAt":"2018-09-03T03:45:14Z","lastEditedAt":null,"updatedAt":"2018-09-03T03:45:14Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxODAwMTg5NQ==","url":"https://github.com/coala/coala/pull/5747#issuecomment-418001895","bodyText":"You have to ensure all tests pass locally before you push it to github. This includes not having any warnings thrown by pytest. Follow this to properly test your changes.","diffHunk":null,"author":{"login":"mach64","avatarUrl":"https://avatars3.githubusercontent.com/u/29517049?v=4","name":"Krut Patel"},"reactions":[{"id":"MDg6UmVhY3Rpb24yODgzODQ0NQ==","createdAt":"2018-09-03T06:09:56Z","content":"THUMBS_UP","user":{"login":"Mah1ndra","name":"Mahendra Thanniru"}}],"createdAt":"2018-09-03T05:12:10Z","lastEditedAt":null,"updatedAt":"2018-09-03T05:12:10Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxODAwNTM3OA==","url":"https://github.com/coala/coala/pull/5747#issuecomment-418005378","bodyText":"The CI builds are failing because your local repo is out of sync with master. You'll have to rebase first.","diffHunk":null,"author":{"login":"mach64","avatarUrl":"https://avatars3.githubusercontent.com/u/29517049?v=4","name":"Krut Patel"},"reactions":[{"id":"MDg6UmVhY3Rpb24yODgzODQ0Ng==","createdAt":"2018-09-03T06:10:05Z","content":"THUMBS_UP","user":{"login":"Mah1ndra","name":"Mahendra Thanniru"}}],"createdAt":"2018-09-03T05:39:29Z","lastEditedAt":null,"updatedAt":"2018-09-03T05:39:29Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxODA1NzE0OQ==","url":"https://github.com/coala/coala/pull/5747#issuecomment-418057149","bodyText":"Nice work with the testing. The commit message still seems a bit out of place. How about __init__.py: Arrange imports alphabetically? It is short and crisp, and still conveys the relevant information about the commit.","diffHunk":null,"author":{"login":"mach64","avatarUrl":"https://avatars3.githubusercontent.com/u/29517049?v=4","name":"Krut Patel"},"reactions":[{"id":"MDg6UmVhY3Rpb24yODg0NzAwMw==","createdAt":"2018-09-03T09:29:53Z","content":"THUMBS_UP","user":{"login":"pareksha","name":"Pareksha Manchanda"}},{"id":"MDg6UmVhY3Rpb24yODg0NzYyMA==","createdAt":"2018-09-03T09:41:31Z","content":"THUMBS_UP","user":{"login":"Mah1ndra","name":"Mahendra Thanniru"}}],"createdAt":"2018-09-03T09:29:09Z","lastEditedAt":"2018-09-03T09:30:10Z","updatedAt":"2018-09-03T09:30:10Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxODA1NzkzNQ==","url":"https://github.com/coala/coala/pull/5747#issuecomment-418057935","bodyText":"I agree with @mach64, see if you can add language word in the commit msg too, something like __init__: Arrange lang imports alphabetically, as __init__ doesn't tell much about the file.","diffHunk":null,"author":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4","name":"Pareksha Manchanda"},"reactions":[],"createdAt":"2018-09-03T09:32:07Z","lastEditedAt":null,"updatedAt":"2018-09-03T09:32:07Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxODA5NzE1Nw==","url":"https://github.com/coala/coala/pull/5747#issuecomment-418097157","bodyText":"I think python 3.4 test generally fails. (Though you can confirm with others too)","diffHunk":null,"author":{"login":"shikharvaish28","avatarUrl":"https://avatars1.githubusercontent.com/u/22795943?v=4","name":"Shikhar Vaish"},"reactions":[],"createdAt":"2018-09-03T12:11:30Z","lastEditedAt":null,"updatedAt":"2018-09-03T12:11:30Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxODExMTYyMA==","url":"https://github.com/coala/coala/pull/5747#issuecomment-418111620","bodyText":"Do you mean which lines I shouldn't move? There are only two .Language imports and rest are .definition imports","diffHunk":null,"author":{"login":"Mah1ndra","avatarUrl":"https://avatars2.githubusercontent.com/u/32550072?v=4","name":"Mahendra Thanniru"},"reactions":[],"createdAt":"2018-09-03T13:13:08Z","lastEditedAt":null,"updatedAt":"2018-09-03T13:13:08Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxODExMjExNw==","url":"https://github.com/coala/coala/pull/5747#issuecomment-418112117","bodyText":"Yeah.Do not move the .Language imports.You should keep the imports from two different files i.e. from Language and definitions SEPARATED so as to promote better readability of the code.","diffHunk":null,"author":{"login":"shashwatmishra76","avatarUrl":"https://avatars2.githubusercontent.com/u/24711156?v=4","name":"Shashwat Mishra"},"reactions":[],"createdAt":"2018-09-03T13:15:08Z","lastEditedAt":null,"updatedAt":"2018-09-03T13:15:08Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxODEyODM4MQ==","url":"https://github.com/coala/coala/pull/5747#issuecomment-418128381","bodyText":"i've already tried it. using lexicographically exceeding char limit","diffHunk":null,"author":{"login":"Mah1ndra","avatarUrl":"https://avatars2.githubusercontent.com/u/32550072?v=4","name":"Mahendra Thanniru"},"reactions":[],"createdAt":"2018-09-03T14:17:19Z","lastEditedAt":null,"updatedAt":"2018-09-03T14:17:19Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxODEyOTY4NA==","url":"https://github.com/coala/coala/pull/5747#issuecomment-418129684","bodyText":"Remove lang part from commit message and add lexico in it and then cover it in shortlog of the message.","diffHunk":null,"author":{"login":"Monal5031","avatarUrl":"https://avatars0.githubusercontent.com/u/21009189?v=4","name":"Monal Shadi"},"reactions":[],"createdAt":"2018-09-03T14:22:16Z","lastEditedAt":"2018-09-03T14:22:46Z","updatedAt":"2018-09-03T14:22:46Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxODEzNzE3NQ==","url":"https://github.com/coala/coala/pull/5747#issuecomment-418137175","bodyText":"Removing lang and replacing lexico caused me pytest error @Monal5031","diffHunk":null,"author":{"login":"Mah1ndra","avatarUrl":"https://avatars2.githubusercontent.com/u/32550072?v=4","name":"Mahendra Thanniru"},"reactions":[],"createdAt":"2018-09-03T14:51:40Z","lastEditedAt":null,"updatedAt":"2018-09-03T14:51:40Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxODE0MTMxOQ==","url":"https://github.com/coala/coala/pull/5747#issuecomment-418141319","bodyText":"@Mah1ndra Read my message again. I asked to remove lang part and replace alpha with lexicographically. and since we are removing lang from head you will have to explain it in shortlog.\nDoes that make it clear?","diffHunk":null,"author":{"login":"Monal5031","avatarUrl":"https://avatars0.githubusercontent.com/u/21009189?v=4","name":"Monal Shadi"},"reactions":[],"createdAt":"2018-09-03T15:09:03Z","lastEditedAt":null,"updatedAt":"2018-09-03T15:09:03Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxODE0MjEyOA==","url":"https://github.com/coala/coala/pull/5747#issuecomment-418142128","bodyText":"And from what I can see it is due to something else the tests are failing, (how would a commit message make your tests fail? 😕 )","diffHunk":null,"author":{"login":"Monal5031","avatarUrl":"https://avatars0.githubusercontent.com/u/21009189?v=4","name":"Monal Shadi"},"reactions":[],"createdAt":"2018-09-03T15:12:46Z","lastEditedAt":null,"updatedAt":"2018-09-03T15:12:46Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxODE0NDg5MA==","url":"https://github.com/coala/coala/pull/5747#issuecomment-418144890","bodyText":"i don't know just after changing the commit msg pystest error occured","diffHunk":null,"author":{"login":"Mah1ndra","avatarUrl":"https://avatars2.githubusercontent.com/u/32550072?v=4","name":"Mahendra Thanniru"},"reactions":[],"createdAt":"2018-09-03T15:24:47Z","lastEditedAt":null,"updatedAt":"2018-09-03T15:24:47Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxODE3MjU0MA==","url":"https://github.com/coala/coala/pull/5747#issuecomment-418172540","bodyText":"okay sure @atb00ker Thank you for your review 😄","diffHunk":null,"author":{"login":"Mah1ndra","avatarUrl":"https://avatars2.githubusercontent.com/u/32550072?v=4","name":"Mahendra Thanniru"},"reactions":[],"createdAt":"2018-09-03T18:17:49Z","lastEditedAt":null,"updatedAt":"2018-09-03T18:17:49Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxODE3NTY2OQ==","url":"https://github.com/coala/coala/pull/5747#issuecomment-418175669","bodyText":"I read the logs for this commit as well, the ci/circleci: python-3.4 seems to have failed for reasons other than the changes in this PR but please wait for review from another member just to be sure! 😄","diffHunk":null,"author":{"login":"atb00ker","avatarUrl":"https://avatars0.githubusercontent.com/u/24985760?v=4","name":"Ajay Tripathi"},"reactions":[],"createdAt":"2018-09-03T18:42:22Z","lastEditedAt":null,"updatedAt":"2018-09-03T18:42:22Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxODE3NjQ3MQ==","url":"https://github.com/coala/coala/pull/5747#issuecomment-418176471","bodyText":"Thank you for your review @atb00ker 😃","diffHunk":null,"author":{"login":"Mah1ndra","avatarUrl":"https://avatars2.githubusercontent.com/u/32550072?v=4","name":"Mahendra Thanniru"},"reactions":[],"createdAt":"2018-09-03T18:49:09Z","lastEditedAt":null,"updatedAt":"2018-09-03T18:49:09Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxODE4Nzc0MQ==","url":"https://github.com/coala/coala/pull/5747#issuecomment-418187741","bodyText":"@atb00ker is correct.\nTests is passing in Travis CI and appveyor for Py3.4.4 and failing in CircleCI.","diffHunk":null,"author":{"login":"vkartik97","avatarUrl":"https://avatars2.githubusercontent.com/u/3920286?v=4","name":"Kartik Verma"},"reactions":[],"createdAt":"2018-09-03T20:20:21Z","lastEditedAt":null,"updatedAt":"2018-09-03T20:20:21Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1536287158000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5748","number":5748,"title":"SCSS.py: Add SCSS.py file","body":"Add a new python file in coalib/bearlib/languages/definitions/SCSS.py\nCloses #5739","comments":8,"createdAt":"2018-09-03T13:23:21Z","updatedAt":"2018-09-07T02:25:58Z","closedAt":null,"state":"open","user":{"login":"rishabhgarg25699","avatarUrl":"https://avatars1.githubusercontent.com/u/34981401?v=4"},"owner":{"login":"rishabhgarg25699","avatarUrl":"https://avatars1.githubusercontent.com/u/34981401?v=4"},"assignee":{"login":"shashwatmishra76","avatarUrl":"https://avatars2.githubusercontent.com/u/24711156?v=4"},"labels":[{"name":"area/languages","color":"d4c5f9"},{"name":"difficulty/low","color":"207de5"},{"name":"importance/medium","color":"fbca04"},{"name":"process/pending review","color":"bfe5bf"},{"name":"size/S","color":"B1CF0A"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5748","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNDc0NTgxMA==","url":"https://github.com/coala/coala/pull/5748#discussion_r214745810","bodyText":"You need to change the formatting of the whole file. It's not as we expect it to be.\nTo fix this, run coala locally and also see other files for formatting tips.","diffHunk":"@@ -0,0 +1,48 @@\n+from {\n+\tcoalib.bearlib.languages.Language {\n+\t\timport {\n+\t\t\tLanguage {\n+\t\t\t\t@Language {\n+\t\t\t\t\tclass {\n+\t\t\t\t\t\tCSS {\n+\t\t\t\t\t\t\t&: {\n+\t\t\t\t\t\t\t\textensions {\n+\t\t\t\t\t\t\t\t\t= {\n+\t\t\t\t\t\t\t\t\t\t'.css' {\n+\t\t\t\t\t\t\t\t\t\t\t'/*': '*/';\n+\t\t\t\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t}\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t}\n+\t\t}\n+\t}\n+}\n+multiline_comment_delimiters {\n+\t= {\n+\t\t'/*': '*/';\n+\t}\n+}\n+string_delimiters {\n+\t= {\n+\t\t'\"': '\"', \"'\": \"'\";\n+\t}\n+}\n+indent_types {\n+\t= {\n+\t\t'{': '}';\n+\t}\n+}\n+encapsulators {\n+\t= {\n+\t\t'(': ')', '[': ']';\n+\t}\n+}\n+string_delimiter_escape {\n+\t= {\n+\t\t'\"': '\\\\\"', \"'\": \"\\\\'\";\n+\t}","author":{"login":"shikharvaish28","avatarUrl":"https://avatars1.githubusercontent.com/u/22795943?v=4","name":"Shikhar Vaish"},"createdAt":"2018-09-03T18:53:32Z","lastEditedAt":"2018-09-03T18:57:56Z","updatedAt":"2018-09-03T18:57:56Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNTYzMTU2Nw==","url":"https://github.com/coala/coala/pull/5748#discussion_r215631567","bodyText":"Remove those changes which are unrelated to your pr.","diffHunk":"@@ -12,15 +12,19 @@ stages:\n   - name: unsupported\n     if: branch = master AND type = push\n \n+.disable_global: &disable_global","author":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4","name":"Boxuan Li"},"createdAt":"2018-09-06T13:47:16Z","lastEditedAt":null,"updatedAt":"2018-09-06T13:47:16Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNTYzNDAzNw==","url":"https://github.com/coala/coala/pull/5748#discussion_r215634037","bodyText":"should be a tuple","diffHunk":"@@ -0,0 +1,11 @@\n+from coalib.bearlib.languages.Language import Language\n+\n+\n+@Language\n+class SCSS:\n+    extensions = '.scss'\n+    comment_delimiters = '//'","author":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4","name":"Boxuan Li"},"createdAt":"2018-09-06T13:54:04Z","lastEditedAt":null,"updatedAt":"2018-09-06T13:54:04Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNTYzNDE2OQ==","url":"https://github.com/coala/coala/pull/5748#discussion_r215634169","bodyText":"should be a tuple","diffHunk":"@@ -0,0 +1,11 @@\n+from coalib.bearlib.languages.Language import Language\n+\n+\n+@Language\n+class SCSS:\n+    extensions = '.scss'","author":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4","name":"Boxuan Li"},"createdAt":"2018-09-06T13:54:25Z","lastEditedAt":null,"updatedAt":"2018-09-06T13:54:25Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNTgyOTg0MQ==","url":"https://github.com/coala/coala/pull/5748#discussion_r215829841","bodyText":"You didn't do what I said, and you are adding more irrelevant changes :(\nI am pretty sure you are not using git command correctly\nFix the problem first. Next time before you push, use gitk or gitg tools, or use git diff head~1 to check the changes within your commit.","diffHunk":"@@ -12,15 +12,19 @@ stages:\n   - name: unsupported\n     if: branch = master AND type = push\n \n+.disable_global: &disable_global","author":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4","name":"Boxuan Li"},"createdAt":"2018-09-07T02:25:32Z","lastEditedAt":null,"updatedAt":"2018-09-07T02:25:32Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNTgyOTg3MA==","url":"https://github.com/coala/coala/pull/5748#discussion_r215829870","bodyText":"This problem is still not fixed.","diffHunk":"@@ -0,0 +1,11 @@\n+from coalib.bearlib.languages.Language import Language\n+\n+\n+@Language\n+class SCSS:\n+    extensions = '.scss'","author":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4","name":"Boxuan Li"},"createdAt":"2018-09-07T02:25:46Z","lastEditedAt":null,"updatedAt":"2018-09-07T02:25:46Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxODQwNzk5MA==","url":"https://github.com/coala/coala/pull/5748#issuecomment-418407990","bodyText":"@rishabhgarg25699 You are getting an assertion error under the method\ndef test_get_all_languages_with_unknown(self) .It requires you to add 'SCSS 3.1, 3.2, 3.3, 3.4, 3.5, 4.0' to LANGUAGE_NAMES list.","diffHunk":null,"author":{"login":"shashwatmishra76","avatarUrl":"https://avatars2.githubusercontent.com/u/24711156?v=4","name":"Shashwat Mishra"},"createdAt":"2018-09-04T15:19:08Z","lastEditedAt":null,"updatedAt":"2018-09-04T15:19:08Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1535357489000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5732","number":5732,"title":"Joe bugfix","body":"For short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":1,"createdAt":"2018-08-27T08:08:19Z","updatedAt":"2018-08-27T08:11:29Z","closedAt":"2018-08-27T08:08:52Z","state":"closed","user":{"login":"JoeSiew","avatarUrl":"https://avatars3.githubusercontent.com/u/40135419?v=4"},"owner":{"login":"JoeSiew","avatarUrl":"https://avatars3.githubusercontent.com/u/40135419?v=4"},"labels":[{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5732","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDQxNjE1MDA2MA==","url":"https://github.com/coala/coala/pull/5732#issuecomment-416150060","bodyText":"I am so sorry, this is a mistake pull request. I am trying to commit to my friend repository to learn & test and not coala/coala.","diffHunk":null,"author":{"login":"JoeSiew","avatarUrl":"https://avatars3.githubusercontent.com/u/40135419?v=4","name":null},"createdAt":"2018-08-27T08:11:29Z","lastEditedAt":null,"updatedAt":"2018-08-27T08:11:29Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1536003374000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5733","number":5733,"title":"JSON.py: Add language definition for JSON","body":"Closes #5730","comments":4,"createdAt":"2018-08-27T17:12:45Z","updatedAt":"2018-09-03T19:36:14Z","closedAt":"2018-08-28T00:41:06Z","state":"merged","user":{"login":"Man-Jain","avatarUrl":"https://avatars3.githubusercontent.com/u/12700384?v=4"},"owner":{"login":"Man-Jain","avatarUrl":"https://avatars3.githubusercontent.com/u/12700384?v=4"},"labels":[{"name":"area/aspects","color":"000000"},{"name":"area/documentation","color":"bfe5bf"},{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5733","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDQxNjQxMzAyOA==","url":"https://github.com/coala/coala/pull/5733#issuecomment-416413028","bodyText":"Ack 36b52e5","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-28T00:39:47Z","lastEditedAt":null,"updatedAt":"2018-08-28T00:39:47Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1535470935000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5734","number":5734,"title":"Wilson branch","body":"For short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":1,"createdAt":"2018-08-28T15:20:07Z","updatedAt":"2018-08-28T15:42:15Z","closedAt":"2018-08-28T15:38:35Z","state":"closed","user":{"login":"shangchen1127","avatarUrl":"https://avatars3.githubusercontent.com/u/40648563?v=4"},"owner":{"login":"shangchen1127","avatarUrl":"https://avatars3.githubusercontent.com/u/40648563?v=4"},"labels":[{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XL","color":"FF0000"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5734","comments":[]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1535585042000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5735","number":5735,"title":"Added the break statement in ask_for_action_and_apply()","body":"For short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":5,"createdAt":"2018-08-28T17:43:39Z","updatedAt":"2018-08-29T23:24:02Z","closedAt":"2018-08-29T11:03:48Z","state":"closed","user":{"login":"rak-shit","avatarUrl":"https://avatars3.githubusercontent.com/u/30564496?v=4"},"owner":{"login":"rak-shit","avatarUrl":"https://avatars3.githubusercontent.com/u/30564496?v=4"},"labels":[{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5735","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDQxNjkwMjU0NQ==","url":"https://github.com/coala/coala/pull/5735#issuecomment-416902545","bodyText":"@palash25 Yes I have done the commit from my own laptop but the username is my dad's name. May be that is making you think that the commit is made from someone else laptop.","diffHunk":null,"author":{"login":"rak-shit","avatarUrl":"https://avatars3.githubusercontent.com/u/30564496?v=4","name":"Rakshit"},"createdAt":"2018-08-29T10:19:25Z","lastEditedAt":null,"updatedAt":"2018-08-29T10:19:25Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxNjkwNjc2Mw==","url":"https://github.com/coala/coala/pull/5735#issuecomment-416906763","bodyText":"username is my dad's name.\n\nWow, your dad uses git. That's cool.\n\nMaybe that is making you think that the commit is made from someone else laptop.\n\nyou need to set your credentials in your git config. Please look it up.","diffHunk":null,"author":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4","name":"Palash Nigam"},"createdAt":"2018-08-29T10:36:09Z","lastEditedAt":null,"updatedAt":"2018-08-29T10:36:09Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxNjkxMDk0OA==","url":"https://github.com/coala/coala/pull/5735#issuecomment-416910948","bodyText":"@palash25 Help needed! How do I squash my commits?","diffHunk":null,"author":{"login":"rak-shit","avatarUrl":"https://avatars3.githubusercontent.com/u/30564496?v=4","name":"Rakshit"},"createdAt":"2018-08-29T10:53:11Z","lastEditedAt":null,"updatedAt":"2018-08-29T10:53:11Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxNjkxNzEwMA==","url":"https://github.com/coala/coala/pull/5735#issuecomment-416917100","bodyText":"https://robots.thoughtbot.com/git-interactive-rebase-squash-amend-rewriting-history @rak-shit\nAlso never close your PRs without asking. Please reopen this and don't close it until a maintainer tells you to 😉","diffHunk":null,"author":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4","name":"Palash Nigam"},"createdAt":"2018-08-29T11:18:33Z","lastEditedAt":null,"updatedAt":"2018-08-29T11:18:33Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxNzEzOTQwNg==","url":"https://github.com/coala/coala/pull/5735#issuecomment-417139406","bodyText":"@rak-shit cant reopen this as they also deleted their fork.  @rak-shit , read https://coala.io/newcomer and https://coala.io/git  very carefully otherwise you'll be banned.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-29T23:24:02Z","lastEditedAt":null,"updatedAt":"2018-08-29T23:24:02Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1535811898000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5736","number":5736,"title":"ConsoleInteraction.py: Added break statement Fixes https://github.com…","body":"Closes #5202\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":4,"createdAt":"2018-08-29T11:24:47Z","updatedAt":"2018-09-01T14:24:58Z","closedAt":null,"state":"open","user":{"login":"rak-shit","avatarUrl":"https://avatars3.githubusercontent.com/u/30564496?v=4"},"owner":{"login":"rak-shit","avatarUrl":"https://avatars3.githubusercontent.com/u/30564496?v=4"},"assignee":{"login":"rak-shit","avatarUrl":"https://avatars3.githubusercontent.com/u/30564496?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"process/wip","color":"fbca04"},{"name":"size/XS","color":"00DE0F"},{"name":"type/performance","color":"fef2c0"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5736","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDQxNzEyODQ1MQ==","url":"https://github.com/coala/coala/pull/5736#issuecomment-417128451","bodyText":"I've sent an invite to @rak-shit .","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-29T22:32:13Z","lastEditedAt":null,"updatedAt":"2018-08-29T22:32:13Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxNzg2MjI5NA==","url":"https://github.com/coala/coala/pull/5736#issuecomment-417862294","bodyText":"Issue now assigned.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-09-01T14:10:39Z","lastEditedAt":null,"updatedAt":"2018-09-01T14:10:39Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1535807069000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5741","number":5741,"title":"CachingUtilities.py: Fix description","body":"Fix description for pickle_dump and pickle_load\nfunctions.\nFixes #5442\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":0,"createdAt":"2018-08-30T17:23:16Z","updatedAt":"2018-09-01T13:04:29Z","closedAt":null,"state":"open","user":{"login":"SubbulakshmiRS","avatarUrl":"https://avatars3.githubusercontent.com/u/32260751?v=4"},"owner":{"login":"SubbulakshmiRS","avatarUrl":"https://avatars3.githubusercontent.com/u/32260751?v=4"},"assignee":{"login":"SubbulakshmiRS","avatarUrl":"https://avatars3.githubusercontent.com/u/32260751?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"},{"name":"importance/medium","color":"fbca04"},{"name":"process/wip","color":"fbca04"},{"name":"size/XS","color":"00DE0F"},{"name":"type/bug","color":"e11d21"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5741","comments":[]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1535818737000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5742","number":5742,"title":"Collectors.py: Discard trailing ** in ignore glob","body":"Remove the trailing globstar from ignore glob patterns and warn the user\nabout it. This ensures that the entire directory is not globbed.\nCloses #5737\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":8,"createdAt":"2018-08-31T13:02:23Z","updatedAt":"2018-09-01T16:18:57Z","closedAt":"2018-09-01T13:33:33Z","state":"merged","user":{"login":"mach64","avatarUrl":"https://avatars3.githubusercontent.com/u/29517049?v=4"},"owner":{"login":"mach64","avatarUrl":"https://avatars3.githubusercontent.com/u/29517049?v=4"},"assignee":{"login":"mach64","avatarUrl":"https://avatars3.githubusercontent.com/u/29517049?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"},{"name":"importance/high","color":"eb6420"},{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5742","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDQxNzg1ODA0Ng==","url":"https://github.com/coala/coala/pull/5742#issuecomment-417858046","bodyText":"Ha, I was just going to explain the build failure ... and recommend exactly what you did as the solution. awesome","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yODgwNzUwNg==","createdAt":"2018-09-01T12:59:24Z","content":"LAUGH","user":{"login":"mach64","name":"Krut Patel"}}],"createdAt":"2018-09-01T12:58:49Z","lastEditedAt":null,"updatedAt":"2018-09-01T12:58:49Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1535848521000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5743","number":5743,"title":"WIP - TEST - Master build","body":"Do not merge!","comments":2,"createdAt":"2018-09-01T19:32:00Z","updatedAt":"2018-09-02T00:35:21Z","closedAt":"2018-09-01T20:11:24Z","state":"closed","user":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"owner":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4"},"labels":[{"name":"process/wip","color":"fbca04"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5743","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDQxNzg5NjcwOQ==","url":"https://github.com/coala/coala/pull/5743#issuecomment-417896709","bodyText":"We advise everyone to test on their forks, not creating useless PRs.\nPlease follow that advice.\nBesides, travis has daily builds of master where you can see the problems: http://travis-ci.org/coala","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-09-02T00:35:21Z","lastEditedAt":null,"updatedAt":"2018-09-02T00:35:21Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1534357007000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5711","number":5711,"title":"docs: Update Newcomers_Guide.rst","body":"The update makes all the blocks even colored in Newcomers_Guide\nCloses #5333\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":11,"createdAt":"2018-08-15T14:39:41Z","updatedAt":"2018-08-15T18:16:47Z","closedAt":"2018-08-15T18:16:47Z","state":"closed","user":{"login":"imnotkk","avatarUrl":"https://avatars0.githubusercontent.com/u/31278163?v=4"},"owner":{"login":"imnotkk","avatarUrl":"https://avatars0.githubusercontent.com/u/31278163?v=4"},"assignee":{"login":"imnotkk","avatarUrl":"https://avatars0.githubusercontent.com/u/31278163?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5711","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDQxMzIyNTA1NQ==","url":"https://github.com/coala/coala/pull/5711#issuecomment-413225055","bodyText":"@imnotkk , the bot says there is a problem with your commit message, and it is reporting that rstcheck doesnt like one of the lines.\nCould you investigate a little, and if you need help come onto https://coala.io/chat .  Thanks","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-15T14:59:28Z","lastEditedAt":null,"updatedAt":"2018-08-15T14:59:28Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMzIyNzY3Mg==","url":"https://github.com/coala/coala/pull/5711#issuecomment-413227672","bodyText":"I suggest you come onto https://coala.io/chat and ask for help ; you've made a number of mistakes , and it is easier to fix them with someone helping you to avoid making a mess in public .","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-15T15:07:24Z","lastEditedAt":null,"updatedAt":"2018-08-15T15:07:24Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1535966678000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5712","number":5712,"title":"Definition","body":"Checklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!","comments":20,"createdAt":"2018-08-15T15:57:57Z","updatedAt":"2018-09-03T09:24:38Z","closedAt":"2018-09-02T21:03:45Z","state":"merged","user":{"login":"shashwatmishra76","avatarUrl":"https://avatars2.githubusercontent.com/u/24711156?v=4"},"owner":{"login":"shashwatmishra76","avatarUrl":"https://avatars2.githubusercontent.com/u/24711156?v=4"},"assignee":{"login":"shashwatmishra76","avatarUrl":"https://avatars2.githubusercontent.com/u/24711156?v=4"},"labels":[{"name":"area/languages","color":"d4c5f9"},{"name":"difficulty/low","color":"207de5"},{"name":"importance/medium","color":"fbca04"},{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5712","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMTExNzc3MA==","url":"https://github.com/coala/coala/pull/5712#discussion_r211117770","bodyText":"Please check all keywords.\nE.g. https://unix.stackexchange.com/questions/86270/how-do-you-use-the-command-coproc-in-various-shells","diffHunk":"@@ -0,0 +1,16 @@\n+from coalib.bearlib.languages.Language import Language\n+\n+\n+@Language\n+class KornShell:\n+    extensions = '.ksh'\n+    comment_delimiters = '#',\n+    multiline_comment_delimiters = {\": '\": \"'\"}\n+    string_delimiters = {'\"': '\"', \"'\": \"'\", '`': '`'}\n+    multiline_string_delimiters = string_delimiters\n+    encapsulators = {'[': ']', '{': '}'}\n+    keywords = [\n+        'if', 'then', 'else', 'elif', 'fi', 'case', 'coproc', 'esac',","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-19T22:40:44Z","lastEditedAt":null,"updatedAt":"2018-08-19T22:40:44Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMTIxMzgwMw==","url":"https://github.com/coala/coala/pull/5712#discussion_r211213803","bodyText":"Please remove this file . And read your PR diff after uploading it to find such obvious mistakes before wasting reviewer time.","diffHunk":"@@ -0,0 +1,18 @@\n+from coalib.bearlib.languages.Language import Language\n+\n+\n+@Language","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-20T10:27:25Z","lastEditedAt":null,"updatedAt":"2018-08-20T10:27:25Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMTYyMTY1Ng==","url":"https://github.com/coala/coala/pull/5712#discussion_r211621656","bodyText":"This should be a tuple.","diffHunk":"@@ -0,0 +1,16 @@\n+from coalib.bearlib.languages.Language import Language\n+\n+\n+@Language\n+class Bash:\n+    extensions = '.bash'","author":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4","name":"Boxuan Li"},"createdAt":"2018-08-21T14:14:48Z","lastEditedAt":null,"updatedAt":"2018-08-21T14:14:48Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMTkyNzIwNQ==","url":"https://github.com/coala/coala/pull/5712#discussion_r211927205","bodyText":"Your commit message says you are only adding language definitions, then why is this file here?","diffHunk":"@@ -0,0 +1,206 @@\n+import os\n+import tempfile\n+import unittest\n+from collections import OrderedDict\n+import logging\n+\n+from coalib.parsing.ConfParser import ConfParser\n+from coalib.settings.Section import Section\n+\n+\n+class ConfParserTest(unittest.TestCase):\n+    example_file = \"\"\"setting = without_section\n+    [foo]\n+    to be ignored","author":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4","name":"Pareksha Manchanda"},"createdAt":"2018-08-22T11:59:51Z","lastEditedAt":null,"updatedAt":"2018-08-22T11:59:51Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMTkyODc2NQ==","url":"https://github.com/coala/coala/pull/5712#discussion_r211928765","bodyText":"I don't know how this got generated.Will remove this at once.","diffHunk":"@@ -0,0 +1,206 @@\n+import os\n+import tempfile\n+import unittest\n+from collections import OrderedDict\n+import logging\n+\n+from coalib.parsing.ConfParser import ConfParser\n+from coalib.settings.Section import Section\n+\n+\n+class ConfParserTest(unittest.TestCase):\n+    example_file = \"\"\"setting = without_section\n+    [foo]\n+    to be ignored","author":{"login":"shashwatmishra76","avatarUrl":"https://avatars2.githubusercontent.com/u/24711156?v=4","name":"Shashwat Mishra"},"createdAt":"2018-08-22T12:05:43Z","lastEditedAt":null,"updatedAt":"2018-08-22T12:05:43Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMjE1ODM4OQ==","url":"https://github.com/coala/coala/pull/5712#discussion_r212158389","bodyText":"Wow -- this review comment was pinned on a file called something.orig iirc , and GitHub has now pinned it to ZShell.py.  Very strange.","diffHunk":"@@ -0,0 +1,18 @@\n+from coalib.bearlib.languages.Language import Language\n+\n+\n+@Language","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-23T01:23:36Z","lastEditedAt":null,"updatedAt":"2018-08-23T01:23:36Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMjE1ODUwMA==","url":"https://github.com/coala/coala/pull/5712#discussion_r212158500","bodyText":"this is not in alpha order.","diffHunk":"@@ -61,6 +63,7 @@\n     'Vala',\n     'VisualBasic',\n     'm4',\n+    'ZShell',","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-23T01:24:27Z","lastEditedAt":null,"updatedAt":"2018-08-23T01:24:27Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMzg1NzY1Mw==","url":"https://github.com/coala/coala/pull/5712#discussion_r213857653","bodyText":"why this change removing JSON?  How is this relevant to your change?\nAnd please never rebase using a merge, like you did in 8a71a76 .  It is ugly.  Now this PR has three commits.","diffHunk":"@@ -47,7 +47,6 @@\n     'JavaScript Object Notation',\n     'JavaServer Pages',\n     'Jinja2',\n-    'JSON',","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-29T22:44:47Z","lastEditedAt":null,"updatedAt":"2018-08-29T22:44:47Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMzg1ODc1OQ==","url":"https://github.com/coala/coala/pull/5712#discussion_r213858759","bodyText":"Because I was getting an assertion error in\nCollectorsTest.py : test_get_all_languages_without_unknown\nwhich said that 'JSON' is present in 'set(LANGUAGE_NAMES)' but not in 'languages '.","diffHunk":"@@ -47,7 +47,6 @@\n     'JavaScript Object Notation',\n     'JavaServer Pages',\n     'Jinja2',\n-    'JSON',","author":{"login":"shashwatmishra76","avatarUrl":"https://avatars2.githubusercontent.com/u/24711156?v=4","name":"Shashwat Mishra"},"createdAt":"2018-08-29T22:51:05Z","lastEditedAt":null,"updatedAt":"2018-08-29T22:51:05Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMzg1OTQyNQ==","url":"https://github.com/coala/coala/pull/5712#discussion_r213859425","bodyText":"Also,you already have 'JavaScript Object Notation' as a qualname .So I don't think there is any need of having  JSON in TestUtilities.py when you already have 'JavaScript Object Notation' sitting there.","diffHunk":"@@ -47,7 +47,6 @@\n     'JavaScript Object Notation',\n     'JavaServer Pages',\n     'Jinja2',\n-    'JSON',","author":{"login":"shashwatmishra76","avatarUrl":"https://avatars2.githubusercontent.com/u/24711156?v=4","name":"Shashwat Mishra"},"createdAt":"2018-08-29T22:54:51Z","lastEditedAt":null,"updatedAt":"2018-08-29T22:54:51Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNDUxNTE0NA==","url":"https://github.com/coala/coala/pull/5712#discussion_r214515144","bodyText":"If you look at travis, the tests are passing without that change.... I see you have removed it now.  Thanks.","diffHunk":"@@ -47,7 +47,6 @@\n     'JavaScript Object Notation',\n     'JavaServer Pages',\n     'Jinja2',\n-    'JSON',","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-09-01T14:26:06Z","lastEditedAt":null,"updatedAt":"2018-09-01T14:26:06Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNDUxNTE3Mw==","url":"https://github.com/coala/coala/pull/5712#discussion_r214515173","bodyText":"please do not re-arrange these.  That isnt what your issue is about.\nCreate a newcomer issue for someone else to sort them ;-)","diffHunk":"@@ -16,8 +17,10 @@\n from .definitions.html import HTML\n from .definitions.Java import Java\n from .definitions.JavaScript import JavaScript\n+from .definitions.Jinja2 import Jinja2","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-09-01T14:27:54Z","lastEditedAt":null,"updatedAt":"2018-09-01T14:27:54Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxNDkzMzc2OA==","url":"https://github.com/coala/coala/pull/5712#issuecomment-414933768","bodyText":"@li-boxuan Can you review my changes once?","diffHunk":null,"author":{"login":"shashwatmishra76","avatarUrl":"https://avatars2.githubusercontent.com/u/24711156?v=4","name":"Shashwat Mishra"},"createdAt":"2018-08-22T07:07:53Z","lastEditedAt":null,"updatedAt":"2018-08-22T07:07:53Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxNDk2MjYzMg==","url":"https://github.com/coala/coala/pull/5712#issuecomment-414962632","bodyText":"@jayvdb I guess I have made the necessary changes.Please review.","diffHunk":null,"author":{"login":"shashwatmishra76","avatarUrl":"https://avatars2.githubusercontent.com/u/24711156?v=4","name":"Shashwat Mishra"},"createdAt":"2018-08-22T08:57:31Z","lastEditedAt":null,"updatedAt":"2018-08-22T08:57:31Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxNTk4MzYzMg==","url":"https://github.com/coala/coala/pull/5712#issuecomment-415983632","bodyText":"Please refer to https://api.coala.io/en/latest/Developers/Writing_Good_Commits.html for writing commit messages.","diffHunk":null,"author":{"login":"srivama","avatarUrl":"https://avatars0.githubusercontent.com/u/17855807?v=4","name":"Amandeep Srivastava"},"createdAt":"2018-08-25T17:12:26Z","lastEditedAt":null,"updatedAt":"2018-08-25T17:12:26Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxNzg2MDIxNQ==","url":"https://github.com/coala/coala/pull/5712#issuecomment-417860215","bodyText":"@jayvdb Please review this.","diffHunk":null,"author":{"login":"shashwatmishra76","avatarUrl":"https://avatars2.githubusercontent.com/u/24711156?v=4","name":"Shashwat Mishra"},"createdAt":"2018-09-01T13:35:18Z","lastEditedAt":null,"updatedAt":"2018-09-01T13:35:18Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxNzkyNTQ0MA==","url":"https://github.com/coala/coala/pull/5712#issuecomment-417925440","bodyText":"LGTM except for #5712 (comment).","diffHunk":null,"author":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4","name":"Kilari Teja"},"createdAt":"2018-09-02T11:55:28Z","lastEditedAt":null,"updatedAt":"2018-09-02T11:55:28Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxNzkzMzkxNQ==","url":"https://github.com/coala/coala/pull/5712#issuecomment-417933915","bodyText":"@shashwatmishra76 Please rebase this repo PR.","diffHunk":null,"author":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4","name":"Kilari Teja"},"createdAt":"2018-09-02T14:16:14Z","lastEditedAt":"2018-09-02T14:28:25Z","updatedAt":"2018-09-02T14:28:25Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxNzk0MTI2Ng==","url":"https://github.com/coala/coala/pull/5712#issuecomment-417941266","bodyText":"@jayvdb PTAL.","diffHunk":null,"author":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4","name":"Kilari Teja"},"createdAt":"2018-09-02T16:08:28Z","lastEditedAt":null,"updatedAt":"2018-09-02T16:08:28Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxNzk0NjU1Ng==","url":"https://github.com/coala/coala/pull/5712#issuecomment-417946556","bodyText":"@jayvdb PTALA.","diffHunk":null,"author":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4","name":"Kilari Teja"},"createdAt":"2018-09-02T17:34:27Z","lastEditedAt":null,"updatedAt":"2018-09-02T17:34:27Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxODA1NTk2OA==","url":"https://github.com/coala/coala/pull/5712#issuecomment-418055968","bodyText":"@shashwatmishra76 🎉","diffHunk":null,"author":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4","name":"Kilari Teja"},"createdAt":"2018-09-03T09:24:38Z","lastEditedAt":null,"updatedAt":"2018-09-03T09:24:38Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1534356437000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5713","number":5713,"title":"docs: Updated Newcomers_Guide","body":"Updated the Newcomers_Guide.rst so that all Colored boxes are Even Colored\nCloses #5333\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":7,"createdAt":"2018-08-15T17:54:45Z","updatedAt":"2018-08-15T18:07:17Z","closedAt":"2018-08-15T18:03:58Z","state":"closed","user":{"login":"imnotkk","avatarUrl":"https://avatars0.githubusercontent.com/u/31278163?v=4"},"owner":{"login":"imnotkk","avatarUrl":"https://avatars0.githubusercontent.com/u/31278163?v=4"},"assignee":{"login":"imnotkk","avatarUrl":"https://avatars0.githubusercontent.com/u/31278163?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5713","comments":[]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1534356880000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5714","number":5714,"title":"docs: Fix Even Colored Blocks","body":"Updated to make every block Even Colored.\nCloses: #5333\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":3,"createdAt":"2018-08-15T18:10:50Z","updatedAt":"2018-08-15T18:14:40Z","closedAt":"2018-08-15T18:13:10Z","state":"closed","user":{"login":"imnotkk","avatarUrl":"https://avatars0.githubusercontent.com/u/31278163?v=4"},"owner":{"login":"imnotkk","avatarUrl":"https://avatars0.githubusercontent.com/u/31278163?v=4"},"assignee":{"login":"imnotkk","avatarUrl":"https://avatars0.githubusercontent.com/u/31278163?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5714","comments":[]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1534357238000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5715","number":5715,"title":"docs: Fix Colored Blocks","body":"Updated to make every block Even Colored.\nCloses #5333\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":3,"createdAt":"2018-08-15T18:19:11Z","updatedAt":"2018-08-15T18:20:38Z","closedAt":"2018-08-15T18:20:26Z","state":"closed","user":{"login":"imnotkk","avatarUrl":"https://avatars0.githubusercontent.com/u/31278163?v=4"},"owner":{"login":"imnotkk","avatarUrl":"https://avatars0.githubusercontent.com/u/31278163?v=4"},"assignee":{"login":"imnotkk","avatarUrl":"https://avatars0.githubusercontent.com/u/31278163?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5715","comments":[]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1534395387000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5716","number":5716,"title":" docs: Fix Colored Blocks ","body":"Updated to fix even block color.\nCloses #5333\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":5,"createdAt":"2018-08-15T18:26:04Z","updatedAt":"2018-08-16T04:56:27Z","closedAt":"2018-08-15T18:56:02Z","state":"closed","user":{"login":"imnotkk","avatarUrl":"https://avatars0.githubusercontent.com/u/31278163?v=4"},"owner":{"login":"imnotkk","avatarUrl":"https://avatars0.githubusercontent.com/u/31278163?v=4"},"assignee":{"login":"imnotkk","avatarUrl":"https://avatars0.githubusercontent.com/u/31278163?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5716","comments":[]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1534359760000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5717","number":5717,"title":"Newcomer_Guide.rst: Fix Even Colored Blocks","body":"Fixed to make all blocks even colored.\nFixes #5333\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":3,"createdAt":"2018-08-15T18:44:33Z","updatedAt":"2018-08-15T19:02:40Z","closedAt":"2018-08-15T19:02:40Z","state":"closed","user":{"login":"imnotkk","avatarUrl":"https://avatars0.githubusercontent.com/u/31278163?v=4"},"owner":{"login":"imnotkk","avatarUrl":"https://avatars0.githubusercontent.com/u/31278163?v=4"},"assignee":{"login":"imnotkk","avatarUrl":"https://avatars0.githubusercontent.com/u/31278163?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5717","comments":[]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1534365479000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5718","number":5718,"title":"docs: Fix Colored Blocks","body":"Fixes #5333\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":1,"createdAt":"2018-08-15T19:05:33Z","updatedAt":"2018-08-15T20:37:59Z","closedAt":"2018-08-15T20:37:59Z","state":"closed","user":{"login":"imnotkk","avatarUrl":"https://avatars0.githubusercontent.com/u/31278163?v=4"},"owner":{"login":"imnotkk","avatarUrl":"https://avatars0.githubusercontent.com/u/31278163?v=4"},"assignee":{"login":"imnotkk","avatarUrl":"https://avatars0.githubusercontent.com/u/31278163?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5718","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDQxMzMwMzU0MQ==","url":"https://github.com/coala/coala/pull/5718#issuecomment-413303541","bodyText":"@jayvdb I have updated the code according to issue #5333 but here it says \"Unexpected possible title overline or transition.\".\nIs there any way you can help?","diffHunk":null,"author":{"login":"imnotkk","avatarUrl":"https://avatars0.githubusercontent.com/u/31278163?v=4","name":"Kranthi Kiran"},"createdAt":"2018-08-15T19:10:59Z","lastEditedAt":null,"updatedAt":"2018-08-15T19:10:59Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1534394647000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5719","number":5719,"title":"Newcomers_Guide.rst: Fix Colored Blocks","body":"This fixes to make all blocks even colored blocks.\nFixes #5333\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":5,"createdAt":"2018-08-15T20:38:43Z","updatedAt":"2018-08-16T04:44:07Z","closedAt":"2018-08-16T04:44:07Z","state":"closed","user":{"login":"imnotkk","avatarUrl":"https://avatars0.githubusercontent.com/u/31278163?v=4"},"owner":{"login":"imnotkk","avatarUrl":"https://avatars0.githubusercontent.com/u/31278163?v=4"},"assignee":{"login":"imnotkk","avatarUrl":"https://avatars0.githubusercontent.com/u/31278163?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"process/pending review","color":"bfe5bf"},{"name":"size/S","color":"B1CF0A"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5719","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDQxMzQyNDQ3NQ==","url":"https://github.com/coala/coala/pull/5719#issuecomment-413424475","bodyText":"By creating 8 PRs, all broken, instead of working on fixing one, you have demonstrated you did not read https://coala.io/newcomer , https://coala.io/git , etc , and are not suitable for @coala yet.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-16T04:44:07Z","lastEditedAt":null,"updatedAt":"2018-08-16T04:44:07Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1534397067000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5720","number":5720,"title":"Newcomers_Guide.rst: Fix Colored Blocks","body":"Fixes colored blocks to be of even color.\nFixes #5333\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":0,"createdAt":"2018-08-16T05:09:48Z","updatedAt":"2018-08-16T05:24:27Z","closedAt":"2018-08-16T05:24:27Z","state":"closed","user":{"login":"imnotkk","avatarUrl":"https://avatars0.githubusercontent.com/u/31278163?v=4"},"owner":{"login":"imnotkk","avatarUrl":"https://avatars0.githubusercontent.com/u/31278163?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5720","comments":[]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1534446552000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5721","number":5721,"title":"Sync templates","body":"For short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":3,"createdAt":"2018-08-16T13:48:10Z","updatedAt":"2018-08-16T19:09:12Z","closedAt":"2018-08-16T19:09:12Z","state":"merged","user":{"login":"Naveenaidu","avatarUrl":"https://avatars1.githubusercontent.com/u/30195193?v=4"},"owner":{"login":"Naveenaidu","avatarUrl":"https://avatars1.githubusercontent.com/u/30195193?v=4"},"labels":[{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5721","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMDYwMjM3NQ==","url":"https://github.com/coala/coala/pull/5721#discussion_r210602375","bodyText":"we dont want this file.","diffHunk":"@@ -0,0 +1,40 @@\n+.. image:: https://cloud.githubusercontent.com/assets/5716520/24838296/a9cf5f04-1d45-11e7-855c-47b816ce1e09.png","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-16T13:49:40Z","lastEditedAt":null,"updatedAt":"2018-08-16T13:49:40Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMDYwMjYwNQ==","url":"https://github.com/coala/coala/pull/5721#discussion_r210602605","bodyText":"this is a bug I have solved in a moban template and am waiting on the mobans repo to be unbroken","diffHunk":"@@ -27,7 +27,6 @@ addopts =\n   --instafail\n   --profile\n   --reorder 'requirements.txt' 'test-requirements.txt' '*'\n-  --ignore=tests/collecting/collectors_test_dir/bears/incorrect_bear.py","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-16T13:50:11Z","lastEditedAt":null,"updatedAt":"2018-08-16T13:50:11Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMDYwMjg1Nw==","url":"https://github.com/coala/coala/pull/5721#discussion_r210602857","bodyText":"We have another MR in the mobans repo which will finally solve this for all repos.","diffHunk":"@@ -16,7 +16,7 @@ pytest-instafail~=0.3.0\n pytest-mock~=1.1\n pytest-profiling~=1.3.0\n pytest-reorder~=0.1.0\n-git+https://github.com/jayvdb/pytest-reqs@skip-vcs-reqs#egg=pytest-reqs","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-16T13:50:49Z","lastEditedAt":null,"updatedAt":"2018-08-16T13:50:49Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMDY2Nzg1NA==","url":"https://github.com/coala/coala/pull/5721#discussion_r210667854","bodyText":"This bug fix has been solved","diffHunk":"@@ -27,7 +27,6 @@ addopts =\n   --instafail\n   --profile\n   --reorder 'requirements.txt' 'test-requirements.txt' '*'\n-  --ignore=tests/collecting/collectors_test_dir/bears/incorrect_bear.py","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-16T16:52:53Z","lastEditedAt":null,"updatedAt":"2018-08-16T16:52:53Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMDY2NzkxMg==","url":"https://github.com/coala/coala/pull/5721#discussion_r210667912","bodyText":"This MR has been merged","diffHunk":"@@ -16,7 +16,7 @@ pytest-instafail~=0.3.0\n pytest-mock~=1.1\n pytest-profiling~=1.3.0\n pytest-reorder~=0.1.0\n-git+https://github.com/jayvdb/pytest-reqs@skip-vcs-reqs#egg=pytest-reqs","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-16T16:53:04Z","lastEditedAt":null,"updatedAt":"2018-08-16T16:53:04Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1535812834000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5723","number":5723,"title":"LocalBearTestHelper: Decommission timeout","body":"LocalBearTestHelper had an undeclared dependency on pytest-timeout\nso it would not work unless the user had install pytest-timeout.\nNone of our bear test suites use this timeout argument, as the\ntimeout set in their repo configuration is sufficient.\nFixes #5508\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":5,"createdAt":"2018-08-18T00:10:57Z","updatedAt":"2018-09-01T14:40:34Z","closedAt":"2018-09-01T14:40:34Z","state":"merged","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"area/CI","color":"eb6420"},{"name":"area/tests","color":"bfd4f2"},{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"00DE0F"},{"name":"type/bug","color":"e11d21"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5723","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDQxNDAyMTE4OQ==","url":"https://github.com/coala/coala/pull/5723#issuecomment-414021189","bodyText":"Note coala/coala-bears#2680 ( https://travis-ci.org/coala/coala-bears/builds/417500622 ) was the only use of it, and I suspect that was because Julia was really slow back then.  It is much faster now, so finishes in time.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-18T01:04:42Z","lastEditedAt":null,"updatedAt":"2018-08-18T01:04:42Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1535171443000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5727","number":5727,"title":"Release notes now published at api docs","body":"Release Notes are now published at api docs.\nI was not familiar with reStructuredText.\nI was initially trying to add Release Notes in\n.. toctree::\n   :caption: Home\n   :hidden:\n\n   Welcome <self>\n   Homepage <http://coala.io/#/home>\n   Release Notes <release_notes>\n   Code of Conduct <http://coala.io/coc>\nbut it was giving out every title in this toctree, which is not suitable so I shifted Release Notes to it's own toctree.\nAlso to commit release_notes.rst i have to exclude it from .gitignore.\nCloses: #5724\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":11,"createdAt":"2018-08-21T17:31:34Z","updatedAt":"2018-08-25T04:30:43Z","closedAt":null,"state":"open","user":{"login":"aaqaishtyaq","avatarUrl":"https://avatars2.githubusercontent.com/u/22131756?v=4"},"owner":{"login":"aaqaishtyaq","avatarUrl":"https://avatars2.githubusercontent.com/u/22131756?v=4"},"labels":[{"name":"process/wip","color":"fbca04"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5727","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDQxNDkyMTMwMw==","url":"https://github.com/coala/coala/pull/5727#issuecomment-414921303","bodyText":"Don't ask for review in Pull Request description. It is useless, either ask in gitter channel or in PR comments.","diffHunk":null,"author":{"login":"Man-Jain","avatarUrl":"https://avatars3.githubusercontent.com/u/12700384?v=4","name":"Manank Patni"},"createdAt":"2018-08-22T06:01:57Z","lastEditedAt":null,"updatedAt":"2018-08-22T06:01:57Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxNDk3ODE3OQ==","url":"https://github.com/coala/coala/pull/5727#issuecomment-414978179","bodyText":"@Man-Jain I'll keep in mind next time.","diffHunk":null,"author":{"login":"aaqaishtyaq","avatarUrl":"https://avatars2.githubusercontent.com/u/22131756?v=4","name":"Aaqa Ishtyaq"},"createdAt":"2018-08-22T09:53:03Z","lastEditedAt":null,"updatedAt":"2018-08-22T09:53:03Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxNTI0NDk4Mw==","url":"https://github.com/coala/coala/pull/5727#issuecomment-415244983","bodyText":"@aaqaishtyaq , you need to fix this PR, otherwise there is no next time.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-23T01:26:56Z","lastEditedAt":null,"updatedAt":"2018-08-23T01:26:56Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxNTI4NjE1NA==","url":"https://github.com/coala/coala/pull/5727#issuecomment-415286154","bodyText":"@jayvdb looks good now?","diffHunk":null,"author":{"login":"aaqaishtyaq","avatarUrl":"https://avatars2.githubusercontent.com/u/22131756?v=4","name":"Aaqa Ishtyaq"},"createdAt":"2018-08-23T04:26:50Z","lastEditedAt":null,"updatedAt":"2018-08-23T04:26:50Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxNTQyNjMxMg==","url":"https://github.com/coala/coala/pull/5727#issuecomment-415426312","bodyText":"@jayvdb Squash both commit into one. Also changed commit message and description as suggested by @Man-Jain","diffHunk":null,"author":{"login":"aaqaishtyaq","avatarUrl":"https://avatars2.githubusercontent.com/u/22131756?v=4","name":"Aaqa Ishtyaq"},"createdAt":"2018-08-23T14:06:37Z","lastEditedAt":null,"updatedAt":"2018-08-23T14:06:37Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxNTUwOTE0Mw==","url":"https://github.com/coala/coala/pull/5727#issuecomment-415509143","bodyText":"@aaqaishtyaq The commit body contains more than 72 characters per line. You will have to fix that.","diffHunk":null,"author":{"login":"Man-Jain","avatarUrl":"https://avatars3.githubusercontent.com/u/12700384?v=4","name":"Manank Patni"},"createdAt":"2018-08-23T17:49:18Z","lastEditedAt":null,"updatedAt":"2018-08-23T17:49:18Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxNTYyMTQwMg==","url":"https://github.com/coala/coala/pull/5727#issuecomment-415621402","bodyText":"@Man-Jain do not repeat what gitmate-bot is saying. I can read that.\nFYI Already fixed that, just see commit message.","diffHunk":null,"author":{"login":"aaqaishtyaq","avatarUrl":"https://avatars2.githubusercontent.com/u/22131756?v=4","name":"Aaqa Ishtyaq"},"createdAt":"2018-08-24T01:19:41Z","lastEditedAt":null,"updatedAt":"2018-08-24T01:19:41Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxNTYzNDIyNw==","url":"https://github.com/coala/coala/pull/5727#issuecomment-415634227","bodyText":"@aaqaishtyaq Yeah you did. My bad. Sorry","diffHunk":null,"author":{"login":"Man-Jain","avatarUrl":"https://avatars3.githubusercontent.com/u/12700384?v=4","name":"Manank Patni"},"createdAt":"2018-08-24T02:43:32Z","lastEditedAt":null,"updatedAt":"2018-08-24T02:43:32Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1535421399000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5728","number":5728,"title":"JavaScript.py: Add alias 'node' to language JavaScript","body":"Closes #5603\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":14,"createdAt":"2018-08-23T19:45:17Z","updatedAt":"2018-08-28T01:56:39Z","closedAt":"2018-08-28T01:56:39Z","state":"merged","user":{"login":"Akhelesh","avatarUrl":"https://avatars2.githubusercontent.com/u/42298056?v=4"},"owner":{"login":"Akhelesh","avatarUrl":"https://avatars2.githubusercontent.com/u/42298056?v=4"},"assignee":{"login":"Akhelesh","avatarUrl":"https://avatars2.githubusercontent.com/u/42298056?v=4"},"labels":[{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5728","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDQxNjQxNzkwNA==","url":"https://github.com/coala/coala/pull/5728#issuecomment-416417904","bodyText":"Reack 82917c0","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-28T01:10:58Z","lastEditedAt":null,"updatedAt":"2018-08-28T01:10:58Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1535811421000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5729","number":5729,"title":"Newcomers_Guide.rst: Mention \"Adding CI\"","body":"Mentioned Adding CI info in Step 4 of Newcomers' Guide.\nCloses #3755.\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":9,"createdAt":"2018-08-24T07:59:32Z","updatedAt":"2018-09-01T14:17:01Z","closedAt":"2018-09-01T14:17:01Z","state":"merged","user":{"login":"anuj97","avatarUrl":"https://avatars3.githubusercontent.com/u/18463482?v=4"},"owner":{"login":"anuj97","avatarUrl":"https://avatars3.githubusercontent.com/u/18463482?v=4"},"assignee":{"login":"anuj97","avatarUrl":"https://avatars3.githubusercontent.com/u/18463482?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"importance/low","color":"70E870"},{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5729","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMjc4ODQ3MQ==","url":"https://github.com/coala/coala/pull/5729#discussion_r212788471","bodyText":"dont use \"here\".  Describe the link using normal words that actually describe the link target.\nAlso, put See <long link> on the next line, to keep lines under 80cpl wherever possible.","diffHunk":"@@ -355,6 +355,9 @@ to be merged, create a commit and push it to your fork, using:\n \n where ``myfork`` is the name of your fork that you added at the previous step.\n \n+After making the changes, you can test the code on your forked repository by\n+adding the required CI tools. See `here <http://api.coala.io/en/latest/Developers/Adding_CI.html>`_.","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-25T04:32:34Z","lastEditedAt":null,"updatedAt":"2018-08-25T04:32:34Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1535417081000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5731","number":5731,"title":"for testing purpose","body":"For short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":0,"createdAt":"2018-08-26T09:36:45Z","updatedAt":"2018-08-28T00:44:41Z","closedAt":"2018-08-28T00:44:27Z","state":"closed","user":{"login":"shangchen1127","avatarUrl":"https://avatars3.githubusercontent.com/u/40648563?v=4"},"owner":{"login":"shangchen1127","avatarUrl":"https://avatars3.githubusercontent.com/u/40648563?v=4"},"labels":[{"name":"size/XS","color":"00DE0F"},{"name":"status/invalid","color":"000000"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5731","comments":[]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1533830589000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5680","number":5680,"title":" setup.cfg: Allow non-coverage of sys.exit(main())","body":"Related to #4166\nSplit off from #4169\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":7,"createdAt":"2018-07-29T03:06:48Z","updatedAt":"2018-08-09T16:03:09Z","closedAt":"2018-08-09T16:03:09Z","state":"merged","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5680","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzcwODkyMg==","url":"https://github.com/coala/coala/pull/5680#discussion_r207708922","bodyText":"We can have a alternate way, check this out https://medium.com/@george.shuklin/how-to-test-if-name-main-1928367290cb","diffHunk":"@@ -67,3 +67,4 @@ exclude_lines =\n   pragma ${PLATFORM_SYSTEM}: no cover\n   pragma ${OS_NAME}: no cover\n   pragma Python [0-9.,]*${PYTHON_VERSION}[0-9.,]*: no cover\n+  sys.exit\\(main\\(\\)\\)","author":{"login":"RaiVaibhav","avatarUrl":"https://avatars3.githubusercontent.com/u/22278438?v=4","name":"Vaibhav Rai"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzQ1MjEwNg==","createdAt":"2018-08-04T13:52:13Z","content":"THUMBS_UP","user":{"login":"jayvdb","name":"John Vandenberg"}}],"createdAt":"2018-08-04T13:39:36Z","lastEditedAt":null,"updatedAt":"2018-08-04T13:39:36Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwODk2ODExOQ==","url":"https://github.com/coala/coala/pull/5680#discussion_r208968119","bodyText":"I've explained on https://gitlab.com/coala/mobans/issues/84 why I think that is unnecessary.\nIf necessary, we have a check script which verifies that all entry points defined in the yaml have exactly these two lines at end of the file.  That prevents these sequences from being different in multiple entry points, and also ensures they are identical on all repos with entry points.","diffHunk":"@@ -67,3 +67,4 @@ exclude_lines =\n   pragma ${PLATFORM_SYSTEM}: no cover\n   pragma ${OS_NAME}: no cover\n   pragma Python [0-9.,]*${PYTHON_VERSION}[0-9.,]*: no cover\n+  sys.exit\\(main\\(\\)\\)","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzcwMTAxMw==","createdAt":"2018-08-09T15:33:48Z","content":"THUMBS_UP","user":{"login":"RaiVaibhav","name":"Vaibhav Rai"}}],"createdAt":"2018-08-09T15:10:46Z","lastEditedAt":null,"updatedAt":"2018-08-09T15:10:46Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMDQ5NDc4OQ==","url":"https://github.com/coala/coala/pull/5680#issuecomment-410494789","bodyText":"Also outdated - needs to use the new moban variables.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-05T04:23:01Z","lastEditedAt":null,"updatedAt":"2018-08-05T04:23:01Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1533834643000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5684","number":5684,"title":"__main__.py: Invokes coala as module","body":"__main__.py: Invokes coala as module\nThis allow coala to be invoked as a module by\nusing the -m tag.\nCloses #5667\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":40,"createdAt":"2018-08-04T09:00:42Z","updatedAt":"2018-08-09T17:10:43Z","closedAt":null,"state":"open","user":{"login":"Naveenaidu","avatarUrl":"https://avatars1.githubusercontent.com/u/30195193?v=4"},"owner":{"login":"Naveenaidu","avatarUrl":"https://avatars1.githubusercontent.com/u/30195193?v=4"},"assignee":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"area/CLI","color":"006b75"},{"name":"difficulty/medium","color":"0052cc"},{"name":"importance/medium","color":"fbca04"},{"name":"type/feature","color":"0052cc"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5684","comments":[]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1533872004000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5688","number":5688,"title":"Modified:   coalib/parsing/CliParsing.py","body":"Changed variable name comment_seperators to comment_separators.\nFixes #5510\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!","comments":6,"createdAt":"2018-08-05T11:14:18Z","updatedAt":"2018-08-10T03:33:24Z","closedAt":"2018-08-10T03:33:24Z","state":"closed","user":{"login":"shashwatmishra76","avatarUrl":"https://avatars2.githubusercontent.com/u/24711156?v=4"},"owner":{"login":"shashwatmishra76","avatarUrl":"https://avatars2.githubusercontent.com/u/24711156?v=4"},"assignee":{"login":"shashwatmishra76","avatarUrl":"https://avatars2.githubusercontent.com/u/24711156?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/low","color":"207de5"},{"name":"importance/low","color":"70E870"},{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5688","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDQxMDUzMzQ1Nw==","url":"https://github.com/coala/coala/pull/5688#issuecomment-410533457","bodyText":"@jayvdb This PR got a label of newcomer.So,this should be ready for reviewing from your side,right?","diffHunk":null,"author":{"login":"shashwatmishra76","avatarUrl":"https://avatars2.githubusercontent.com/u/24711156?v=4","name":"Shashwat Mishra"},"createdAt":"2018-08-05T17:03:01Z","lastEditedAt":null,"updatedAt":"2018-08-05T17:03:01Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMDUzNDI1Mw==","url":"https://github.com/coala/coala/pull/5688#issuecomment-410534253","bodyText":"Get rid of the incorrect attempt at fixing the typo. It is wrong. You are not assigned to do\n#5510 (comment)","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-05T17:15:50Z","lastEditedAt":null,"updatedAt":"2018-08-05T17:15:50Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMTk2NTQxMw==","url":"https://github.com/coala/coala/pull/5688#issuecomment-411965413","bodyText":"Duplicate of #5696","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-10T03:33:24Z","lastEditedAt":null,"updatedAt":"2018-08-10T03:33:24Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1533896454000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5690","number":5690,"title":"Section Tags Filter","body":"PTAL cEP-0028","comments":5,"createdAt":"2018-08-05T15:20:05Z","updatedAt":"2018-08-10T10:20:54Z","closedAt":"2018-08-10T10:20:54Z","state":"merged","user":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4"},"owner":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4"},"labels":[{"name":"size/M","color":"eb6420"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5690","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzc0MDMwMg==","url":"https://github.com/coala/coala/pull/5690#discussion_r207740302","bodyText":"This belongs before --bear-dirs , probably after --files .\nLets wait for more feedback on position","diffHunk":"@@ -177,6 +177,10 @@ def default_arg_parser(formatter_class=None):\n         '-d', '--bear-dirs', type=PathArg, nargs='+', metavar='DIR',\n         help='additional directories which may contain bears')\n \n+    inputs_group.add_argument(","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzQ2Nzg1NA==","createdAt":"2018-08-05T15:44:01Z","content":"THUMBS_UP","user":{"login":"ksdme","name":"Kilari Teja"}}],"createdAt":"2018-08-05T15:35:45Z","lastEditedAt":null,"updatedAt":"2018-08-05T15:35:45Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzc0MDMzMA==","url":"https://github.com/coala/coala/pull/5690#discussion_r207740330","bodyText":"please use exampes from your cEP, and your own real needs.\nthis looks like language , not a tag which should be an arbitrary grouping which couldnt be achieved via any other means.","diffHunk":"@@ -49,6 +55,37 @@ def apply_filter(filter_name, filter_args, all_bears=None):\n     return local_bears, global_bears\n \n \n+def apply_section_filter(filter_name, filter_args, all_sections):\n+    \"\"\"\n+    Returns sections after filtering based on ``filter_args``. It returns\n+    all sections if nothing is present in ``filter_args``.\n+\n+    :param filter_name:\n+        Name of the filter.\n+    :param filter_args:\n+        Arguments of the filter to be passed in.\n+        For example:\n+        ``['tags', ('java',)]``","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzQ2NzgzOA==","createdAt":"2018-08-05T15:42:57Z","content":"THUMBS_UP","user":{"login":"ksdme","name":"Kilari Teja"}}],"createdAt":"2018-08-05T15:37:04Z","lastEditedAt":null,"updatedAt":"2018-08-05T15:37:04Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzc0MDM1MA==","url":"https://github.com/coala/coala/pull/5690#discussion_r207740350","bodyText":"again, dont use tags that are a language .  it is confusing.","diffHunk":"@@ -68,3 +105,53 @@ def apply_filters(filters, bears=None):\n         filter_name, *filter_args = filter\n         bears = apply_filter(filter_name, filter_args, bears)\n     return bears\n+\n+\n+def apply_section_filters(filters, sections):\n+    \"\"\"\n+    Returns sections after filtering based on ``filters``. It returns\n+    intersection of sections if more than one element is present in ``filters``\n+    list.\n+\n+    :param filters:\n+        List of args based on ``sections`` has to be filtered.\n+        For example:\n+        ``[['tags', ('save', 'change')], ['exclude', ('css', '!python')]]``","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzQ2NzgzOQ==","createdAt":"2018-08-05T15:43:09Z","content":"THUMBS_UP","user":{"login":"ksdme","name":"Kilari Teja"}}],"createdAt":"2018-08-05T15:38:06Z","lastEditedAt":null,"updatedAt":"2018-08-05T15:38:06Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzc0MDQ0Mw==","url":"https://github.com/coala/coala/pull/5690#discussion_r207740443","bodyText":"move the '-c', back to the next line, so you dont modify that line.\nit is also confusing to have the '-c', on this line when its arg is on the next line.","diffHunk":"@@ -198,12 +198,16 @@ def test_merge_defaults(self):\n                 gather_configuration(lambda *args: True,\n                                      self.log_printer,\n                                      arg_list=['-S', 'value=1', 'test.value=2',\n-                                               '-c', escape(temporary, '\\\\')] +\n+                                               '--tags', 'save', '-c',","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzQ2Nzg0NA==","createdAt":"2018-08-05T15:43:20Z","content":"THUMBS_UP","user":{"login":"ksdme","name":"Kilari Teja"}}],"createdAt":"2018-08-05T15:41:19Z","lastEditedAt":null,"updatedAt":"2018-08-05T15:41:19Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzc0MDUyNw==","url":"https://github.com/coala/coala/pull/5690#discussion_r207740527","bodyText":"I used them as examples, but I will update it.","diffHunk":"@@ -49,6 +55,37 @@ def apply_filter(filter_name, filter_args, all_bears=None):\n     return local_bears, global_bears\n \n \n+def apply_section_filter(filter_name, filter_args, all_sections):\n+    \"\"\"\n+    Returns sections after filtering based on ``filter_args``. It returns\n+    all sections if nothing is present in ``filter_args``.\n+\n+    :param filter_name:\n+        Name of the filter.\n+    :param filter_args:\n+        Arguments of the filter to be passed in.\n+        For example:\n+        ``['tags', ('java',)]``","author":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4","name":"Kilari Teja"},"reactions":[],"createdAt":"2018-08-05T15:43:43Z","lastEditedAt":null,"updatedAt":"2018-08-05T15:43:43Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzc0MDk4MA==","url":"https://github.com/coala/coala/pull/5690#discussion_r207740980","bodyText":"Currently,\nInputs:\n  -b, --bears           names of bears to use\n  -f, --files           files that should be checked\n  -i, --ignore          files that should be ignored\n  --limit-files         filter the `--files` argument's matches further\n  -d, --bear-dirs       additional directories which may contain bears\n  -t, --tags            tags of sections to execute\n\nI think tags should definitely be above bear-dirs.","diffHunk":"@@ -177,6 +177,10 @@ def default_arg_parser(formatter_class=None):\n         '-d', '--bear-dirs', type=PathArg, nargs='+', metavar='DIR',\n         help='additional directories which may contain bears')\n \n+    inputs_group.add_argument(","author":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4","name":"Kilari Teja"},"reactions":[],"createdAt":"2018-08-05T15:59:29Z","lastEditedAt":null,"updatedAt":"2018-08-05T15:59:29Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzc2NDM1MQ==","url":"https://github.com/coala/coala/pull/5690#discussion_r207764351","bodyText":"nope.\nlets improve the filters system to support sections.\ndef foo_filter(thing, args):\nevery filter than checks whether is knows what is in thing, e.g. using isinstance , and raises NotImplementedError if it doesnt get it.  Existing filters only know about Bear.\nYou make a small chance to the existing filters to make them compliant with the new API by adding a raise NotImplementedError to them.\n(Actually most of them understand could easily be improved to understand Section, but that is beyond the scope of your change, and each will need to be carefully done wrt the CLI args to ensure we build a good user experience)","diffHunk":"@@ -1,11 +1,17 @@\n from coalib.parsing.InvalidFilterException import InvalidFilterException\n-from coalib.parsing.filters import available_filters\n+from coalib.parsing.filters import (\n+    available_filters, available_section_filters)\n+from coalib.parsing.DefaultArgParser import default_arg_parser\n \n \n def is_valid_filter(filter):\n     return filter in available_filters\n \n \n+def is_valid_section_filter(filter):","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-06T02:54:27Z","lastEditedAt":null,"updatedAt":"2018-08-06T02:54:27Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzc2NDU3MQ==","url":"https://github.com/coala/coala/pull/5690#discussion_r207764571","bodyText":"not needed.  below you would catch NotImplementedError and ignore it.","diffHunk":"@@ -49,6 +55,37 @@ def apply_filter(filter_name, filter_args, all_bears=None):\n     return local_bears, global_bears\n \n \n+def apply_section_filter(filter_name, filter_args, all_sections):\n+    \"\"\"\n+    Returns sections after filtering based on ``filter_args``. It returns\n+    all sections if nothing is present in ``filter_args``.\n+\n+    :param filter_name:\n+        Name of the filter.\n+    :param filter_args:\n+        Arguments of the filter to be passed in.\n+        For example:\n+        ``['tag_section_filter', ('save', 'change')]``\n+    :param all_sections:\n+        List of sections on which filter is to be applied.\n+    :return:\n+        Filtered sections based on a single section filter.\n+    \"\"\"\n+    if not is_valid_section_filter(filter_name):\n+        raise InvalidFilterException(filter_name)\n+    if not filter_args or len(filter_args) == 0:\n+        return all_sections\n+\n+    filter_function = available_section_filters[filter_name]","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-06T02:57:03Z","lastEditedAt":null,"updatedAt":"2018-08-06T02:57:03Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzc2NDgxMA==","url":"https://github.com/coala/coala/pull/5690#discussion_r207764810","bodyText":"I agree with @shreyans800755 that this doesnt belong in the filter.\nksdme@f8fc69c#r29964403\nThe cli section should be kept hidden inside coalib/settings, as a special case implementation detail.  It annoys me that we have any UI messages that mention this section -- the user cant see it, so they shouldnt hear about it.\nAnd likewise developers in other parts of coalib shouldnt need to deal with that section.","diffHunk":"@@ -0,0 +1,21 @@\n+def tag_section_filter(section, args):\n+    \"\"\"\n+    Filters the sections by ``tags``. ``cli`` is always accepted.\n+\n+    :param section: Section object.\n+    :param args:    Set of tags on which ``section`` is to be filtered.\n+    :return:        ``True`` if this section matches the criteria inside args,\n+                    ``False`` otherwise.\n+    \"\"\"\n+    if section.name == 'cli':","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-06T03:00:04Z","lastEditedAt":null,"updatedAt":"2018-08-06T03:00:04Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzc2OTAxOQ==","url":"https://github.com/coala/coala/pull/5690#discussion_r207769019","bodyText":"I think we could remove the last ,","diffHunk":"@@ -159,6 +161,15 @@ def run_coala(console_printer=None,\n                 (section_name, sections[section_name])\n                 for section_name in targets)\n \n+        # Collect all the section filters which are based on args,","author":{"login":"gaocegege","avatarUrl":"https://avatars3.githubusercontent.com/u/5100735?v=4","name":"Ce Gao"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzQ5NDg1MQ==","createdAt":"2018-08-06T11:33:29Z","content":"THUMBS_UP","user":{"login":"ksdme","name":"Kilari Teja"}}],"createdAt":"2018-08-06T03:54:24Z","lastEditedAt":null,"updatedAt":"2018-08-06T03:54:24Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwODAyNTA0OQ==","url":"https://github.com/coala/coala/pull/5690#discussion_r208025049","bodyText":"Let's call it items rather than things","diffHunk":"@@ -49,22 +50,83 @@ def apply_filter(filter_name, filter_args, all_bears=None):\n     return local_bears, global_bears\n \n \n-def apply_filters(filters, bears=None):\n+def _apply_section_filter(filter_name, filter_args, all_sections):\n     \"\"\"\n-    Returns bears after filtering based on ``filters``. It returns\n-    intersection of bears if more than one element is present in ``filters``\n-    list.\n+    Returns sections after filtering based on ``filter_args``. It\n+    returns all sections if nothing is present in ``filter_args``.\n+\n+    :param filter_name:\n+        Name of the section filter.\n+    :param filter_args:\n+        Arguments to be passed to the filter. For example:\n+        ``['section_tags', ('save', 'change')]``\n+    :param all_sections:\n+        List of all sections on which filter is to be applied.\n+    :return:\n+        Filtered sections based on a single section filter.\n+    \"\"\"\n+    if not is_valid_filter(filter_name):\n+        raise InvalidFilterException(filter_name)\n+    if not filter_args or len(filter_args) == 0:\n+        return all_sections\n+\n+    filter_function = available_filters[filter_name]\n+    filtered_sections = []\n+\n+    for section in all_sections:\n+        if filter_function(section, filter_args):\n+            filtered_sections += [section]\n+\n+    return filtered_sections\n+\n+\n+def apply_filters(filters, bears=None, sections=None):\n+    \"\"\"\n+    Returns bears or sections after filtering based on ``filters``.\n+    It returns intersection if more than one element is present in\n+    ``filters`` list. Either bears or sections need to be passed,\n+    if both or none are passed it defaults to use bears gathering\n+    and runs filter in bear filtering mode.\n \n     :param filters:\n-        List of args based on ``bears`` has to be filtered.\n-        For example:\n-        ``[['language', 'c', 'java'], ['can_fix', 'syntax']]``\n+        List of args based on ``bears`` has to be filtered. For example:\n+        ``[['language', 'c', 'java'], ['can_fix', 'syntax'],\n+        ['section_tags', 'save']]``\n     :param bears:\n         The bears to filter.\n+    :param sections:\n+        The sections to filter.\n     :return:\n-        Filtered bears.\n+        Filtered bears or sections.\n     \"\"\"\n+    things = bears","author":{"login":"shreyans800755","avatarUrl":"https://avatars2.githubusercontent.com/u/3727351?v=4","name":"Shreyans"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzUyNzAxOA==","createdAt":"2018-08-06T21:48:44Z","content":"THUMBS_UP","user":{"login":"jayvdb","name":"John Vandenberg"}}],"createdAt":"2018-08-06T20:50:01Z","lastEditedAt":null,"updatedAt":"2018-08-06T20:50:01Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwODAyNTQ0OQ==","url":"https://github.com/coala/coala/pull/5690#discussion_r208025449","bodyText":"Do we have any practical case for this condition ?\nIf so, is there way we can check this before calling this function ?","diffHunk":"@@ -49,22 +50,83 @@ def apply_filter(filter_name, filter_args, all_bears=None):\n     return local_bears, global_bears\n \n \n-def apply_filters(filters, bears=None):\n+def _apply_section_filter(filter_name, filter_args, all_sections):\n     \"\"\"\n-    Returns bears after filtering based on ``filters``. It returns\n-    intersection of bears if more than one element is present in ``filters``\n-    list.\n+    Returns sections after filtering based on ``filter_args``. It\n+    returns all sections if nothing is present in ``filter_args``.\n+\n+    :param filter_name:\n+        Name of the section filter.\n+    :param filter_args:\n+        Arguments to be passed to the filter. For example:\n+        ``['section_tags', ('save', 'change')]``\n+    :param all_sections:\n+        List of all sections on which filter is to be applied.\n+    :return:\n+        Filtered sections based on a single section filter.\n+    \"\"\"\n+    if not is_valid_filter(filter_name):\n+        raise InvalidFilterException(filter_name)\n+    if not filter_args or len(filter_args) == 0:\n+        return all_sections\n+\n+    filter_function = available_filters[filter_name]\n+    filtered_sections = []\n+\n+    for section in all_sections:\n+        if filter_function(section, filter_args):\n+            filtered_sections += [section]\n+\n+    return filtered_sections\n+\n+\n+def apply_filters(filters, bears=None, sections=None):\n+    \"\"\"\n+    Returns bears or sections after filtering based on ``filters``.\n+    It returns intersection if more than one element is present in\n+    ``filters`` list. Either bears or sections need to be passed,\n+    if both or none are passed it defaults to use bears gathering\n+    and runs filter in bear filtering mode.\n \n     :param filters:\n-        List of args based on ``bears`` has to be filtered.\n-        For example:\n-        ``[['language', 'c', 'java'], ['can_fix', 'syntax']]``\n+        List of args based on ``bears`` has to be filtered. For example:\n+        ``[['language', 'c', 'java'], ['can_fix', 'syntax'],\n+        ['section_tags', 'save']]``\n     :param bears:\n         The bears to filter.\n+    :param sections:\n+        The sections to filter.\n     :return:\n-        Filtered bears.\n+        Filtered bears or sections.\n     \"\"\"\n+    things = bears\n+    applier = apply_filter\n+    if sections is not None:\n+        things = sections\n+        applier = _apply_section_filter\n+\n     for filter in filters:\n         filter_name, *filter_args = filter\n-        bears = apply_filter(filter_name, filter_args, bears)\n-    return bears\n+        things = applier(filter_name, filter_args, things)\n+    return things\n+\n+\n+def collect_filters(args, arg_list=None, arg_parser=None):\n+    \"\"\"\n+    Collects all filters from based on cli arguments.\n+\n+    :param args:\n+        Parsed CLI args using which the filters are to be collected.\n+    :param arg_list:\n+        The CLI argument list.\n+    :param arg_parser:\n+        Instance of ArgParser that is used to parse arg list.\n+    :return:\n+        List of filters in standard filter format, i.e\n+        ``[['filter_name', 'arg1', 'arg2']]``.\n+    \"\"\"\n+    if args is None:","author":{"login":"shreyans800755","avatarUrl":"https://avatars2.githubusercontent.com/u/3727351?v=4","name":"Shreyans"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzUyNzIyNw==","createdAt":"2018-08-06T21:53:21Z","content":"THUMBS_UP","user":{"login":"jayvdb","name":"John Vandenberg"}}],"createdAt":"2018-08-06T20:51:36Z","lastEditedAt":null,"updatedAt":"2018-08-06T20:51:36Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwODAyNTU4NA==","url":"https://github.com/coala/coala/pull/5690#discussion_r208025584","bodyText":"Because this is not the job of this function. This function is just a getter","diffHunk":"@@ -49,22 +50,83 @@ def apply_filter(filter_name, filter_args, all_bears=None):\n     return local_bears, global_bears\n \n \n-def apply_filters(filters, bears=None):\n+def _apply_section_filter(filter_name, filter_args, all_sections):\n     \"\"\"\n-    Returns bears after filtering based on ``filters``. It returns\n-    intersection of bears if more than one element is present in ``filters``\n-    list.\n+    Returns sections after filtering based on ``filter_args``. It\n+    returns all sections if nothing is present in ``filter_args``.\n+\n+    :param filter_name:\n+        Name of the section filter.\n+    :param filter_args:\n+        Arguments to be passed to the filter. For example:\n+        ``['section_tags', ('save', 'change')]``\n+    :param all_sections:\n+        List of all sections on which filter is to be applied.\n+    :return:\n+        Filtered sections based on a single section filter.\n+    \"\"\"\n+    if not is_valid_filter(filter_name):\n+        raise InvalidFilterException(filter_name)\n+    if not filter_args or len(filter_args) == 0:\n+        return all_sections\n+\n+    filter_function = available_filters[filter_name]\n+    filtered_sections = []\n+\n+    for section in all_sections:\n+        if filter_function(section, filter_args):\n+            filtered_sections += [section]\n+\n+    return filtered_sections\n+\n+\n+def apply_filters(filters, bears=None, sections=None):\n+    \"\"\"\n+    Returns bears or sections after filtering based on ``filters``.\n+    It returns intersection if more than one element is present in\n+    ``filters`` list. Either bears or sections need to be passed,\n+    if both or none are passed it defaults to use bears gathering\n+    and runs filter in bear filtering mode.\n \n     :param filters:\n-        List of args based on ``bears`` has to be filtered.\n-        For example:\n-        ``[['language', 'c', 'java'], ['can_fix', 'syntax']]``\n+        List of args based on ``bears`` has to be filtered. For example:\n+        ``[['language', 'c', 'java'], ['can_fix', 'syntax'],\n+        ['section_tags', 'save']]``\n     :param bears:\n         The bears to filter.\n+    :param sections:\n+        The sections to filter.\n     :return:\n-        Filtered bears.\n+        Filtered bears or sections.\n     \"\"\"\n+    things = bears\n+    applier = apply_filter\n+    if sections is not None:\n+        things = sections\n+        applier = _apply_section_filter\n+\n     for filter in filters:\n         filter_name, *filter_args = filter\n-        bears = apply_filter(filter_name, filter_args, bears)\n-    return bears\n+        things = applier(filter_name, filter_args, things)\n+    return things\n+\n+\n+def collect_filters(args, arg_list=None, arg_parser=None):\n+    \"\"\"\n+    Collects all filters from based on cli arguments.\n+\n+    :param args:\n+        Parsed CLI args using which the filters are to be collected.\n+    :param arg_list:\n+        The CLI argument list.\n+    :param arg_parser:\n+        Instance of ArgParser that is used to parse arg list.\n+    :return:\n+        List of filters in standard filter format, i.e\n+        ``[['filter_name', 'arg1', 'arg2']]``.\n+    \"\"\"\n+    if args is None:","author":{"login":"shreyans800755","avatarUrl":"https://avatars2.githubusercontent.com/u/3727351?v=4","name":"Shreyans"},"reactions":[],"createdAt":"2018-08-06T20:52:04Z","lastEditedAt":null,"updatedAt":"2018-08-06T20:52:04Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwODA0MDI2MA==","url":"https://github.com/coala/coala/pull/5690#discussion_r208040260","bodyText":"move this after the apply_filters function so that the diff better aligns, and probably at the end as it is a private function","diffHunk":"@@ -49,22 +50,83 @@ def apply_filter(filter_name, filter_args, all_bears=None):\n     return local_bears, global_bears\n \n \n-def apply_filters(filters, bears=None):\n+def _apply_section_filter(filter_name, filter_args, all_sections):","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzU0MDIyOA==","createdAt":"2018-08-07T06:01:04Z","content":"THUMBS_UP","user":{"login":"ksdme","name":"Kilari Teja"}}],"createdAt":"2018-08-06T21:49:53Z","lastEditedAt":null,"updatedAt":"2018-08-06T21:49:53Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwODA0MTM1Nw==","url":"https://github.com/coala/coala/pull/5690#discussion_r208041357","bodyText":"It looks like a helper for the tests , so should be moved into the tests.","diffHunk":"@@ -49,22 +50,83 @@ def apply_filter(filter_name, filter_args, all_bears=None):\n     return local_bears, global_bears\n \n \n-def apply_filters(filters, bears=None):\n+def _apply_section_filter(filter_name, filter_args, all_sections):\n     \"\"\"\n-    Returns bears after filtering based on ``filters``. It returns\n-    intersection of bears if more than one element is present in ``filters``\n-    list.\n+    Returns sections after filtering based on ``filter_args``. It\n+    returns all sections if nothing is present in ``filter_args``.\n+\n+    :param filter_name:\n+        Name of the section filter.\n+    :param filter_args:\n+        Arguments to be passed to the filter. For example:\n+        ``['section_tags', ('save', 'change')]``\n+    :param all_sections:\n+        List of all sections on which filter is to be applied.\n+    :return:\n+        Filtered sections based on a single section filter.\n+    \"\"\"\n+    if not is_valid_filter(filter_name):\n+        raise InvalidFilterException(filter_name)\n+    if not filter_args or len(filter_args) == 0:\n+        return all_sections\n+\n+    filter_function = available_filters[filter_name]\n+    filtered_sections = []\n+\n+    for section in all_sections:\n+        if filter_function(section, filter_args):\n+            filtered_sections += [section]\n+\n+    return filtered_sections\n+\n+\n+def apply_filters(filters, bears=None, sections=None):\n+    \"\"\"\n+    Returns bears or sections after filtering based on ``filters``.\n+    It returns intersection if more than one element is present in\n+    ``filters`` list. Either bears or sections need to be passed,\n+    if both or none are passed it defaults to use bears gathering\n+    and runs filter in bear filtering mode.\n \n     :param filters:\n-        List of args based on ``bears`` has to be filtered.\n-        For example:\n-        ``[['language', 'c', 'java'], ['can_fix', 'syntax']]``\n+        List of args based on ``bears`` has to be filtered. For example:\n+        ``[['language', 'c', 'java'], ['can_fix', 'syntax'],\n+        ['section_tags', 'save']]``\n     :param bears:\n         The bears to filter.\n+    :param sections:\n+        The sections to filter.\n     :return:\n-        Filtered bears.\n+        Filtered bears or sections.\n     \"\"\"\n+    things = bears\n+    applier = apply_filter\n+    if sections is not None:\n+        things = sections\n+        applier = _apply_section_filter\n+\n     for filter in filters:\n         filter_name, *filter_args = filter\n-        bears = apply_filter(filter_name, filter_args, bears)\n-    return bears\n+        things = applier(filter_name, filter_args, things)\n+    return things\n+\n+\n+def collect_filters(args, arg_list=None, arg_parser=None):\n+    \"\"\"\n+    Collects all filters from based on cli arguments.\n+\n+    :param args:\n+        Parsed CLI args using which the filters are to be collected.\n+    :param arg_list:\n+        The CLI argument list.\n+    :param arg_parser:\n+        Instance of ArgParser that is used to parse arg list.\n+    :return:\n+        List of filters in standard filter format, i.e\n+        ``[['filter_name', 'arg1', 'arg2']]``.\n+    \"\"\"\n+    if args is None:","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-06T21:54:38Z","lastEditedAt":null,"updatedAt":"2018-08-06T21:54:38Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwODA0MjA4Ng==","url":"https://github.com/coala/coala/pull/5690#discussion_r208042086","bodyText":"(almost) very generic ... belongs in coala_utils::decorators.py\nand this is enforce_duck_type or enforce_duct_tape ? ;-)\nand to make calling generic, use\n@typed_filter(bear='bearclass')\ndef language_filter(bear, args):\n```","diffHunk":"@@ -0,0 +1,42 @@\n+from inspect import getmro\n+from functools import wraps\n+\n+\n+def typed_filter(type_classes, msg=None):","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzU0MDM0Mw==","createdAt":"2018-08-07T06:04:06Z","content":"THUMBS_UP","user":{"login":"ksdme","name":"Kilari Teja"}},{"id":"MDg6UmVhY3Rpb24yNzc1MjkyNQ==","createdAt":"2018-08-10T13:30:01Z","content":"THUMBS_UP","user":{"login":"aashutoshrathi","name":"Aashutosh Rathi"}}],"createdAt":"2018-08-06T21:58:04Z","lastEditedAt":null,"updatedAt":"2018-08-06T21:58:04Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwODA0MjI0OA==","url":"https://github.com/coala/coala/pull/5690#discussion_r208042248","bodyText":"thing -> obj or object_","diffHunk":"@@ -0,0 +1,42 @@\n+from inspect import getmro\n+from functools import wraps\n+\n+\n+def typed_filter(type_classes, msg=None):\n+    \"\"\"\n+    Used to enforce type of the first argument of a method\n+    by its class name as string. Raises NotImplementedError\n+    if the type does not match. Primarily used to enforce\n+    type of a filter.\n+\n+    :param type_classes:    list or tuple of acceptable class names\n+                            as strings for the first argument of the\n+                            method being decorated.\n+    :param msg:             Message to pass with NotImplementedError.\n+    \"\"\"\n+    if (type(type_classes) not in (tuple, list)):\n+        type_classes = (type_classes,)\n+\n+    def decorator(filter):\n+\n+        @wraps(filter)\n+        def decorated_filter(thing, *args, **kargs):","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzU0MDIwMA==","createdAt":"2018-08-07T06:00:22Z","content":"THUMBS_UP","user":{"login":"ksdme","name":"Kilari Teja"}}],"createdAt":"2018-08-06T21:58:48Z","lastEditedAt":null,"updatedAt":"2018-08-06T21:58:48Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwODA0MzI0NA==","url":"https://github.com/coala/coala/pull/5690#discussion_r208043244","bodyText":"it was going so well until you mentioned filter here.\nthe thing you are wrapping has a name, which you are using here.\nThis decorator is a developer helper ... to catch when they have done the wrong thing.  it shouldnt give pretty names ... the caller needs to detect this and make it user-friendly.\nWhy should a NotImplementedError say \"language_filter filter\" .. ?  language_filter is better, and the backtrace is even better, so no need to tidy it up.\nTo help, create a subclass of NotImplementedError and stuff into it extra attributes to record what went wrong, such as the callee, expected classes, and the incorrect object which was encountered.   Then whoever is catching it can understand what went wrong and create a user-friendly message.","diffHunk":"@@ -0,0 +1,42 @@\n+from inspect import getmro\n+from functools import wraps\n+\n+\n+def typed_filter(type_classes, msg=None):\n+    \"\"\"\n+    Used to enforce type of the first argument of a method\n+    by its class name as string. Raises NotImplementedError\n+    if the type does not match. Primarily used to enforce\n+    type of a filter.\n+\n+    :param type_classes:    list or tuple of acceptable class names\n+                            as strings for the first argument of the\n+                            method being decorated.\n+    :param msg:             Message to pass with NotImplementedError.\n+    \"\"\"\n+    if (type(type_classes) not in (tuple, list)):\n+        type_classes = (type_classes,)\n+\n+    def decorator(filter):\n+\n+        @wraps(filter)\n+        def decorated_filter(thing, *args, **kargs):\n+            thing_class = thing.__class__\n+            all_bases = list(map(lambda klass: klass.__name__,\n+                                 getmro(thing_class)))\n+\n+            for type_class in type_classes:\n+                if str(type_class) in all_bases:\n+                    break\n+            else:\n+                raise NotImplementedError(\n+                    msg or '\\'{filter}\\' filter can only handle {type_name}. '","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-06T22:03:35Z","lastEditedAt":null,"updatedAt":"2018-08-06T22:03:35Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwODA0NDM1Nw==","url":"https://github.com/coala/coala/pull/5690#discussion_r208044357","bodyText":"section_tag_filter","diffHunk":"@@ -0,0 +1,31 @@\n+from coalib.parsing.filters.decorators import typed_filter\n+\n+\n+@typed_filter(('bearclass', 'Bear', 'Section'))\n+def tag_section_filter(section_or_bear, args):","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzUzOTkxNQ==","createdAt":"2018-08-07T05:50:37Z","content":"THUMBS_UP","user":{"login":"ksdme","name":"Kilari Teja"}}],"createdAt":"2018-08-06T22:09:14Z","lastEditedAt":null,"updatedAt":"2018-08-06T22:09:14Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwODEwODU2MA==","url":"https://github.com/coala/coala/pull/5690#discussion_r208108560","bodyText":"run_coala\n\n:param arg_parser:        Instance of ArgParser that is used to non-setting arguments.\n:param arg_list:              The CLI argument list.\n:param args:                   Alternative pre-parsed CLI arguments.\n\nThis is not just about the tests, since args to run_coala() can be optionally passed instead of arg_list, I think we need to merge opts from both, so as to enable the internal usage of this filter. Tests also use can use this by directly calling run_coala() with an arg list.","diffHunk":"@@ -49,22 +50,83 @@ def apply_filter(filter_name, filter_args, all_bears=None):\n     return local_bears, global_bears\n \n \n-def apply_filters(filters, bears=None):\n+def _apply_section_filter(filter_name, filter_args, all_sections):\n     \"\"\"\n-    Returns bears after filtering based on ``filters``. It returns\n-    intersection of bears if more than one element is present in ``filters``\n-    list.\n+    Returns sections after filtering based on ``filter_args``. It\n+    returns all sections if nothing is present in ``filter_args``.\n+\n+    :param filter_name:\n+        Name of the section filter.\n+    :param filter_args:\n+        Arguments to be passed to the filter. For example:\n+        ``['section_tags', ('save', 'change')]``\n+    :param all_sections:\n+        List of all sections on which filter is to be applied.\n+    :return:\n+        Filtered sections based on a single section filter.\n+    \"\"\"\n+    if not is_valid_filter(filter_name):\n+        raise InvalidFilterException(filter_name)\n+    if not filter_args or len(filter_args) == 0:\n+        return all_sections\n+\n+    filter_function = available_filters[filter_name]\n+    filtered_sections = []\n+\n+    for section in all_sections:\n+        if filter_function(section, filter_args):\n+            filtered_sections += [section]\n+\n+    return filtered_sections\n+\n+\n+def apply_filters(filters, bears=None, sections=None):\n+    \"\"\"\n+    Returns bears or sections after filtering based on ``filters``.\n+    It returns intersection if more than one element is present in\n+    ``filters`` list. Either bears or sections need to be passed,\n+    if both or none are passed it defaults to use bears gathering\n+    and runs filter in bear filtering mode.\n \n     :param filters:\n-        List of args based on ``bears`` has to be filtered.\n-        For example:\n-        ``[['language', 'c', 'java'], ['can_fix', 'syntax']]``\n+        List of args based on ``bears`` has to be filtered. For example:\n+        ``[['language', 'c', 'java'], ['can_fix', 'syntax'],\n+        ['section_tags', 'save']]``\n     :param bears:\n         The bears to filter.\n+    :param sections:\n+        The sections to filter.\n     :return:\n-        Filtered bears.\n+        Filtered bears or sections.\n     \"\"\"\n+    things = bears\n+    applier = apply_filter\n+    if sections is not None:\n+        things = sections\n+        applier = _apply_section_filter\n+\n     for filter in filters:\n         filter_name, *filter_args = filter\n-        bears = apply_filter(filter_name, filter_args, bears)\n-    return bears\n+        things = applier(filter_name, filter_args, things)\n+    return things\n+\n+\n+def collect_filters(args, arg_list=None, arg_parser=None):\n+    \"\"\"\n+    Collects all filters from based on cli arguments.\n+\n+    :param args:\n+        Parsed CLI args using which the filters are to be collected.\n+    :param arg_list:\n+        The CLI argument list.\n+    :param arg_parser:\n+        Instance of ArgParser that is used to parse arg list.\n+    :return:\n+        List of filters in standard filter format, i.e\n+        ``[['filter_name', 'arg1', 'arg2']]``.\n+    \"\"\"\n+    if args is None:","author":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4","name":"Kilari Teja"},"reactions":[],"createdAt":"2018-08-07T06:11:39Z","lastEditedAt":null,"updatedAt":"2018-08-07T06:11:39Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwODEwODgwMw==","url":"https://github.com/coala/coala/pull/5690#discussion_r208108803","bodyText":"run_coala\n\n:param arg_parser:        Instance of ArgParser that is used to non-setting arguments.\n:param arg_list:              The CLI argument list.\n:param args:                   Alternative pre-parsed CLI arguments.\n\nThis is not just about the tests, since args to run_coala() can be optionally passed instead of arg_list, I think we need to merge opts from both, so as to enable the internal usage of this filter. Tests also use can use this by directly calling run_coala() with an arg list.","diffHunk":"@@ -49,22 +50,83 @@ def apply_filter(filter_name, filter_args, all_bears=None):\n     return local_bears, global_bears\n \n \n-def apply_filters(filters, bears=None):\n+def _apply_section_filter(filter_name, filter_args, all_sections):\n     \"\"\"\n-    Returns bears after filtering based on ``filters``. It returns\n-    intersection of bears if more than one element is present in ``filters``\n-    list.\n+    Returns sections after filtering based on ``filter_args``. It\n+    returns all sections if nothing is present in ``filter_args``.\n+\n+    :param filter_name:\n+        Name of the section filter.\n+    :param filter_args:\n+        Arguments to be passed to the filter. For example:\n+        ``['section_tags', ('save', 'change')]``\n+    :param all_sections:\n+        List of all sections on which filter is to be applied.\n+    :return:\n+        Filtered sections based on a single section filter.\n+    \"\"\"\n+    if not is_valid_filter(filter_name):\n+        raise InvalidFilterException(filter_name)\n+    if not filter_args or len(filter_args) == 0:\n+        return all_sections\n+\n+    filter_function = available_filters[filter_name]\n+    filtered_sections = []\n+\n+    for section in all_sections:\n+        if filter_function(section, filter_args):\n+            filtered_sections += [section]\n+\n+    return filtered_sections\n+\n+\n+def apply_filters(filters, bears=None, sections=None):\n+    \"\"\"\n+    Returns bears or sections after filtering based on ``filters``.\n+    It returns intersection if more than one element is present in\n+    ``filters`` list. Either bears or sections need to be passed,\n+    if both or none are passed it defaults to use bears gathering\n+    and runs filter in bear filtering mode.\n \n     :param filters:\n-        List of args based on ``bears`` has to be filtered.\n-        For example:\n-        ``[['language', 'c', 'java'], ['can_fix', 'syntax']]``\n+        List of args based on ``bears`` has to be filtered. For example:\n+        ``[['language', 'c', 'java'], ['can_fix', 'syntax'],\n+        ['section_tags', 'save']]``\n     :param bears:\n         The bears to filter.\n+    :param sections:\n+        The sections to filter.\n     :return:\n-        Filtered bears.\n+        Filtered bears or sections.\n     \"\"\"\n+    things = bears\n+    applier = apply_filter\n+    if sections is not None:\n+        things = sections\n+        applier = _apply_section_filter\n+\n     for filter in filters:\n         filter_name, *filter_args = filter\n-        bears = apply_filter(filter_name, filter_args, bears)\n-    return bears\n+        things = applier(filter_name, filter_args, things)\n+    return things\n+\n+\n+def collect_filters(args, arg_list=None, arg_parser=None):\n+    \"\"\"\n+    Collects all filters from based on cli arguments.\n+\n+    :param args:\n+        Parsed CLI args using which the filters are to be collected.\n+    :param arg_list:\n+        The CLI argument list.\n+    :param arg_parser:\n+        Instance of ArgParser that is used to parse arg list.\n+    :return:\n+        List of filters in standard filter format, i.e\n+        ``[['filter_name', 'arg1', 'arg2']]``.\n+    \"\"\"\n+    if args is None:","author":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4","name":"Kilari Teja"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzc0MjI4Mg==","createdAt":"2018-08-10T09:25:27Z","content":"THUMBS_UP","user":{"login":"jayvdb","name":"John Vandenberg"}}],"createdAt":"2018-08-07T06:12:25Z","lastEditedAt":null,"updatedAt":"2018-08-07T06:12:25Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTE5OTI0OQ==","url":"https://github.com/coala/coala/pull/5690#discussion_r209199249","bodyText":"belongs in coala_utils::decorators.py\n\nUnfortunately not ...\nBecause we are not allowed to do imports here!  argh.\nIt was built: https://gitlab.com/coala/coala-utils/merge_requests/82","diffHunk":"@@ -0,0 +1,42 @@\n+from inspect import getmro\n+from functools import wraps\n+\n+\n+def typed_filter(type_classes, msg=None):","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-10T09:23:37Z","lastEditedAt":null,"updatedAt":"2018-08-10T09:23:37Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMDgzOTE1OQ==","url":"https://github.com/coala/coala/pull/5690#issuecomment-410839159","bodyText":"Updated to use --filter-by (can be used by doing coala --filter-by section_tags save) for both section filters and bear filters. Known issues:\n\nRequires update to --filter-by documentation.","diffHunk":null,"author":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4","name":"Kilari Teja"},"reactions":[],"createdAt":"2018-08-06T20:15:22Z","lastEditedAt":"2018-08-06T20:17:40Z","updatedAt":"2018-08-06T20:17:40Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1533768077000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5693","number":5693,"title":"XML.py: Add language definition for XML","body":"Closes #5692\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":4,"createdAt":"2018-08-05T17:26:17Z","updatedAt":"2018-08-08T22:41:17Z","closedAt":"2018-08-06T18:49:27Z","state":"merged","user":{"login":"virresh","avatarUrl":"https://avatars0.githubusercontent.com/u/10978108?v=4"},"owner":{"login":"virresh","avatarUrl":"https://avatars0.githubusercontent.com/u/10978108?v=4"},"assignee":{"login":"virresh","avatarUrl":"https://avatars0.githubusercontent.com/u/10978108?v=4"},"labels":[{"name":"area/aspects","color":"000000"},{"name":"area/documentation","color":"bfe5bf"},{"name":"area/languages","color":"d4c5f9"},{"name":"process/approved","color":"009800"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5693","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzc0OTY4Ng==","url":"https://github.com/coala/coala/pull/5693#discussion_r207749686","bodyText":"Please see how this is used by core and bears. I believe there are no equivalent in xml.","diffHunk":"@@ -0,0 +1,13 @@\n+from coalib.bearlib.languages.Language import Language\n+\n+\n+@Language\n+class XML:\n+    __qualname__ = 'Extensible Markup Language'\n+    aliases = 'xml',\n+\n+    extensions = '.xml',\n+    multiline_comment_delimiters = {'<!--': '-->'}\n+    string_delimiters = {'\"': '\"', \"'\": \"'\"}\n+    multiline_string_delimiters = string_delimiters\n+    encapsulators = {'<': '>'}","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzQ4NTkzMQ==","createdAt":"2018-08-06T08:19:07Z","content":"THUMBS_UP","user":{"login":"pareksha","name":"Pareksha Manchanda"}}],"createdAt":"2018-08-05T21:57:16Z","lastEditedAt":null,"updatedAt":"2018-08-05T21:57:16Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzc0OTcyNA==","url":"https://github.com/coala/coala/pull/5693#discussion_r207749724","bodyText":"Also add cdata","diffHunk":"@@ -0,0 +1,13 @@\n+from coalib.bearlib.languages.Language import Language\n+\n+\n+@Language\n+class XML:\n+    __qualname__ = 'Extensible Markup Language'\n+    aliases = 'xml',\n+\n+    extensions = '.xml',\n+    multiline_comment_delimiters = {'<!--': '-->'}\n+    string_delimiters = {'\"': '\"', \"'\": \"'\"}","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzUxMDE4Nw==","createdAt":"2018-08-06T16:06:25Z","content":"THUMBS_UP","user":{"login":"virresh","name":"Viresh Gupta"}}],"createdAt":"2018-08-05T21:58:58Z","lastEditedAt":null,"updatedAt":"2018-08-05T21:58:58Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzgwNzM1MQ==","url":"https://github.com/coala/coala/pull/5693#discussion_r207807351","bodyText":"Why blank line here?","diffHunk":"@@ -0,0 +1,13 @@\n+from coalib.bearlib.languages.Language import Language\n+\n+\n+@Language\n+class XML:\n+    __qualname__ = 'Extensible Markup Language'\n+    aliases = 'xml',\n+","author":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4","name":"Pareksha Manchanda"},"reactions":[],"createdAt":"2018-08-06T08:16:49Z","lastEditedAt":null,"updatedAt":"2018-08-06T08:16:49Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzgwODA3MA==","url":"https://github.com/coala/coala/pull/5693#discussion_r207808070","bodyText":"And if < > is considered, </ > should also be","diffHunk":"@@ -0,0 +1,13 @@\n+from coalib.bearlib.languages.Language import Language\n+\n+\n+@Language\n+class XML:\n+    __qualname__ = 'Extensible Markup Language'\n+    aliases = 'xml',\n+\n+    extensions = '.xml',\n+    multiline_comment_delimiters = {'<!--': '-->'}\n+    string_delimiters = {'\"': '\"', \"'\": \"'\"}\n+    multiline_string_delimiters = string_delimiters\n+    encapsulators = {'<': '>'}","author":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4","name":"Pareksha Manchanda"},"reactions":[],"createdAt":"2018-08-06T08:19:36Z","lastEditedAt":null,"updatedAt":"2018-08-06T08:19:36Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzk0NzY2Mg==","url":"https://github.com/coala/coala/pull/5693#discussion_r207947662","bodyText":"@jayvdb @pareksha\nI referred https://github.com/coala/coala/blob/master/coalib/bearlib/languages/definitions/html.py\nfor referring to how we use markups in language definitions,\nI am not particularly sure of how these are used by core\nCould only find one place in bears repo (the IndentationBear) where these were used, and considering that, I believe these are also sufficient to determine indents of tags ?\nAlso @pareksha , </> is a subset of <>, note the same literal opens and ends tag","diffHunk":"@@ -0,0 +1,13 @@\n+from coalib.bearlib.languages.Language import Language\n+\n+\n+@Language\n+class XML:\n+    __qualname__ = 'Extensible Markup Language'\n+    aliases = 'xml',\n+\n+    extensions = '.xml',\n+    multiline_comment_delimiters = {'<!--': '-->'}\n+    string_delimiters = {'\"': '\"', \"'\": \"'\"}\n+    multiline_string_delimiters = string_delimiters\n+    encapsulators = {'<': '>'}","author":{"login":"virresh","avatarUrl":"https://avatars0.githubusercontent.com/u/10978108?v=4","name":"Viresh Gupta"},"reactions":[],"createdAt":"2018-08-06T16:09:56Z","lastEditedAt":null,"updatedAt":"2018-08-06T16:09:56Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzk0Nzc4MA==","url":"https://github.com/coala/coala/pull/5693#discussion_r207947780","bodyText":"c.f https://github.com/coala/coala/blob/master/coalib/bearlib/languages/definitions/html.py#L8\nhttps://github.com/coala/coala/blob/master/coalib/bearlib/languages/definitions/Shell.py#L7\nSo I think this is some kind of convention and I followed it :)","diffHunk":"@@ -0,0 +1,13 @@\n+from coalib.bearlib.languages.Language import Language\n+\n+\n+@Language\n+class XML:\n+    __qualname__ = 'Extensible Markup Language'\n+    aliases = 'xml',\n+","author":{"login":"virresh","avatarUrl":"https://avatars0.githubusercontent.com/u/10978108?v=4","name":"Viresh Gupta"},"reactions":[],"createdAt":"2018-08-06T16:10:22Z","lastEditedAt":"2018-08-06T16:12:45Z","updatedAt":"2018-08-06T16:12:45Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNzk5MjcwMQ==","url":"https://github.com/coala/coala/pull/5693#discussion_r207992701","bodyText":"I suspect this is 'not right, but also not wrong'. Not bad for v1.","diffHunk":"@@ -0,0 +1,14 @@\n+from coalib.bearlib.languages.Language import Language\n+\n+\n+@Language\n+class XML:\n+    __qualname__ = 'Extensible Markup Language'\n+    aliases = 'xml',\n+    versions = 1.0,\n+\n+    extensions = '.xml',\n+    multiline_comment_delimiters = {'<!--': '-->'}\n+    string_delimiters = {'\"': '\"', \"'\": \"'\", '<![CDATA[': ']]>'}\n+    multiline_string_delimiters = string_delimiters\n+    encapsulators = {'<': '>'}","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-06T18:47:35Z","lastEditedAt":null,"updatedAt":"2018-08-06T18:47:35Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1533994825000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5696","number":5696,"title":"CliParsing.py,ConfParser.py : Change in variable name","body":"Corrected typo in variable name comment_seperator and changed it to comment_separator.\nAdded comment_seperator as a deprecated argument.\nCloses #5510\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!","comments":37,"createdAt":"2018-08-07T19:10:35Z","updatedAt":"2018-08-11T13:40:25Z","closedAt":"2018-08-11T13:40:12Z","state":"merged","user":{"login":"shashwatmishra76","avatarUrl":"https://avatars2.githubusercontent.com/u/24711156?v=4"},"owner":{"login":"shashwatmishra76","avatarUrl":"https://avatars2.githubusercontent.com/u/24711156?v=4"},"assignee":{"login":"shashwatmishra76","avatarUrl":"https://avatars2.githubusercontent.com/u/24711156?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/low","color":"207de5"},{"name":"importance/low","color":"70E870"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5696","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDQxMTIwOTExNg==","url":"https://github.com/coala/coala/pull/5696#issuecomment-411209116","bodyText":"@jayvdb I checked the piece of code that I added to my local machine and it works fine.I am not sure why it is not passing the build tests.Where have I gone wrong?","diffHunk":null,"author":{"login":"shashwatmishra76","avatarUrl":"https://avatars2.githubusercontent.com/u/24711156?v=4","name":"Shashwat Mishra"},"createdAt":"2018-08-07T21:30:26Z","lastEditedAt":null,"updatedAt":"2018-08-07T21:30:26Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMTYyODY1OA==","url":"https://github.com/coala/coala/pull/5696#issuecomment-411628658","bodyText":"You need to rebase your patch.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-09T03:54:27Z","lastEditedAt":null,"updatedAt":"2018-08-09T03:54:27Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMTY4MDMyNg==","url":"https://github.com/coala/coala/pull/5696#issuecomment-411680326","bodyText":"@jayvdb Have done rebase.","diffHunk":null,"author":{"login":"shashwatmishra76","avatarUrl":"https://avatars2.githubusercontent.com/u/24711156?v=4","name":"Shashwat Mishra"},"createdAt":"2018-08-09T08:31:39Z","lastEditedAt":null,"updatedAt":"2018-08-09T08:31:39Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMTgwOTg3MA==","url":"https://github.com/coala/coala/pull/5696#issuecomment-411809870","bodyText":"Needs another rebase due to a different PR getting merged","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-09T16:03:35Z","lastEditedAt":null,"updatedAt":"2018-08-09T16:03:35Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMTg0MzkxNQ==","url":"https://github.com/coala/coala/pull/5696#issuecomment-411843915","bodyText":"There is another PR which is duplicate of this at #5688 .","diffHunk":null,"author":{"login":"shashwatmishra76","avatarUrl":"https://avatars2.githubusercontent.com/u/24711156?v=4","name":"Shashwat Mishra"},"createdAt":"2018-08-09T17:57:56Z","lastEditedAt":null,"updatedAt":"2018-08-09T17:57:56Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMjI0NTg1NA==","url":"https://github.com/coala/coala/pull/5696#issuecomment-412245854","bodyText":"Test is failing\nhttps://travis-ci.org/coala/coala/jobs/414626526#L794","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-11T02:45:55Z","lastEditedAt":null,"updatedAt":"2018-08-11T02:45:55Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMjI2NTE4MQ==","url":"https://github.com/coala/coala/pull/5696#issuecomment-412265181","bodyText":"Rebase please.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-11T10:04:31Z","lastEditedAt":null,"updatedAt":"2018-08-11T10:04:31Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1533795185000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5698","number":5698,"title":"Sync templates","body":"For short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":4,"createdAt":"2018-08-08T14:36:28Z","updatedAt":"2018-08-09T06:13:05Z","closedAt":"2018-08-09T06:13:05Z","state":"merged","user":{"login":"Naveenaidu","avatarUrl":"https://avatars1.githubusercontent.com/u/30195193?v=4"},"owner":{"login":"Naveenaidu","avatarUrl":"https://avatars1.githubusercontent.com/u/30195193?v=4"},"labels":[{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5698","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwODY3MzMwNw==","url":"https://github.com/coala/coala/pull/5698#discussion_r208673307","bodyText":"undo this line please.\nthis is why it is breaking, and is a special problem that I need to fix.","diffHunk":"@@ -13,7 +16,7 @@ pytest-instafail~=0.3.0\n pytest-mock~=1.1\n pytest-profiling~=1.3.0\n pytest-reorder~=0.1.0\n-git+https://github.com/jayvdb/pytest-reqs@skip-vcs-reqs#egg=pytest-reqs\n+pytest-reqs~=0.0.6","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-08T17:44:44Z","lastEditedAt":null,"updatedAt":"2018-08-08T17:44:44Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1533973252000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5699","number":5699,"title":"Add Support for FileProxies","body":"Adds support for FileProxies and analysis of in-memory files.\nKnown Shortcomings:\n\nCannot yet work with apply-patch actions.\nFile Proxies cannot yet work with caching disabled.","comments":5,"createdAt":"2018-08-08T14:52:12Z","updatedAt":"2018-08-11T07:40:52Z","closedAt":"2018-08-11T07:40:52Z","state":"merged","user":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4"},"owner":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4"},"labels":[{"name":"size/L","color":"FF8888"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5699","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwODgwNTU2MQ==","url":"https://github.com/coala/coala/pull/5699#discussion_r208805561","bodyText":"this could be moved to the common path in instantiate_processes after the dict has been obtained.","diffHunk":"@@ -173,3 +178,137 @@ def get_uncached_files(self, files):\n                     for file in files\n                     if (file not in self.data or\n                         int(os.path.getmtime(file)) > self.data[file])}\n+\n+\n+class FileDictFileCache(FileCache, FileDictGenerator):\n+    \"\"\"\n+    FileDictFileCache extends a traditional FileCache\n+    to support generation of a complete file dict, this\n+    lets FileDictFileCache provide access to both file\n+    cache and contents of files from disk.\n+    \"\"\"\n+\n+    def __init__(self, *args, **kargs):\n+        \"\"\"\n+        This directly initializes the associated FileCache.\n+        \"\"\"\n+        super().__init__(*args, **kargs)\n+\n+    def get_file_dict(self, filename_list, allow_raw_files=False):\n+        \"\"\"\n+        Returns a file dictionary mapping from filename to lines of\n+        file. Uses coalib.processes.Processing.get_file_dict().\n+\n+        :param filename_list:   List of filenames as strings to build\n+                                the file dict.\n+        :param allow_raw_files: Indicates if the file could also be\n+                                read as a binary.\n+        :return:                Reads the content of each file into\n+                                dictionary with filenames as keys.\n+        \"\"\"\n+        return get_file_dict(filename_list,\n+                             allow_raw_files=allow_raw_files)\n+\n+\n+class ProxyMapFileCache(FileCache, FileDictGenerator):\n+    \"\"\"\n+    ProxyMapFileCache is a FileCache that also provides\n+    methods to produce a file dict from a FileProxyMap.\n+\n+    >>> import logging\n+    >>> import tempfile\n+    >>> import copy, time\n+    >>> logging.getLogger().setLevel(logging.CRITICAL)\n+\n+    >>> file = tempfile.NamedTemporaryFile(delete=False)\n+    >>> file.write(b'coala')\n+    5\n+    >>> file.close()\n+\n+    A new instance of ProxyMapFileCache can be instantited:\n+\n+    >>> proxycache = ProxyMapFileCache(None, \"test\")\n+\n+    Before any action on the associated proxy map is carried\n+    out, the proxymap needs to be initialized/set using:\n+\n+    >>> proxymap = FileProxyMap()\n+    >>> proxycache.set_proxymap(proxymap)\n+\n+    A file dict can now be build using the underlying proxy\n+    map using:\n+\n+    >>> proxy = FileProxy.from_file(file.name, None)\n+    >>> proxymap.add(proxy)\n+    True\n+\n+    >>> file_dict = proxycache.get_file_dict([file.name])\n+    >>> file_dict[file.name]\n+    ('coala',)\n+    \"\"\"\n+\n+    def __init__(self, *args, **kargs):\n+        \"\"\"\n+        This directly initializes the associated FileCache.\n+        \"\"\"\n+        super().__init__(*args, **kargs)\n+        self.__proxymap = None\n+\n+    @enforce_signature\n+    def set_proxymap(self, fileproxy_map: FileProxyMap):\n+        \"\"\"\n+        Used to assign a ProxyMap, this is separate from\n+        the instance initialization method to keep the\n+        concerns separate.\n+\n+        :param fileproxy_map:   FileProxyMap instance to build\n+                                the file dict from.\n+        \"\"\"\n+        self.__proxymap = fileproxy_map\n+\n+    def get_file_dict(self, filename_list, allow_raw_files=False):\n+        \"\"\"\n+        Builds a file dictionary from filename to lines of the file\n+        from an associated FileProxyMap.\n+\n+        :param filename_list:   List of files to get the contents of.\n+        :param allow_raw_files: Allow the usage of raw files (non text files),\n+                                disabled by default\n+        :return:                Reads the content of each file into dictionary\n+                                with filenames as keys.\n+        \"\"\"\n+        if self.__proxymap is None:\n+            raise ValueError('set_proxymap() should be called to set proxymap'\n+                             'of ProxyMapFileCache instance')\n+\n+        file_dict = {}\n+        for filename in filename_list:\n+            try:\n+                # Keep the binary mode turned off to maintain compatibility\n+                # with FileDictFileCache.get_file_dict().\n+                # filename is assumed to be normcased.\n+                proxy = self.__proxymap.resolve(filename,\n+                                                hard_sync=True,\n+                                                binary=False)\n+\n+                file_lines = proxy.lines()\n+                file_dict[filename] = tuple(file_lines)\n+            except UnicodeDecodeError:\n+                if allow_raw_files:\n+                    file_dict[filename] = None\n+                    continue\n+\n+                logging.warning(\"Failed to read file '{}'. It seems to contain \"\n+                                'non-unicode characters. Leaving it out.'\n+                                .format(filename))\n+\n+            except (OSError, FileNameError) as exception:\n+                log_exception(\"Failed to read file '{}' because of an unknown \"\n+                              'error. Leaving it out.'.format(filename),\n+                              exception,\n+                              log_level=LOG_LEVEL.WARNING)\n+\n+        logging.debug('Files that will be checked:\\n' +","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-09T04:49:27Z","lastEditedAt":null,"updatedAt":"2018-08-09T04:49:27Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwODgwNTYyNw==","url":"https://github.com/coala/coala/pull/5699#discussion_r208805627","bodyText":"you sure you need this?\nit isnt doing anything afaics","diffHunk":"@@ -0,0 +1,363 @@\n+import logging\n+from os import path\n+\n+from coala_utils.FileUtils import detect_encoding\n+from coala_utils.decorators import (enforce_signature, generate_eq,)\n+\n+\n+class FileNameError(LookupError):\n+    def __init__(self, error_message):","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzY4MjA4NA==","createdAt":"2018-08-09T09:52:40Z","content":"THUMBS_UP","user":{"login":"ksdme","name":"Kilari Teja"}}],"createdAt":"2018-08-09T04:50:11Z","lastEditedAt":null,"updatedAt":"2018-08-09T04:50:11Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwODgyNTcyMA==","url":"https://github.com/coala/coala/pull/5699#discussion_r208825720","bodyText":"I think we need to maintain compatibility with FileDictFileCache, since it uses the default implementation of get_file_dict() it logs locally as soon as files are collected. Moving this to instantiate_processes() will cause logging twice for FileDictFileCache. I think we can have a separate issue for this once this gets merged.","diffHunk":"@@ -173,3 +178,137 @@ def get_uncached_files(self, files):\n                     for file in files\n                     if (file not in self.data or\n                         int(os.path.getmtime(file)) > self.data[file])}\n+\n+\n+class FileDictFileCache(FileCache, FileDictGenerator):\n+    \"\"\"\n+    FileDictFileCache extends a traditional FileCache\n+    to support generation of a complete file dict, this\n+    lets FileDictFileCache provide access to both file\n+    cache and contents of files from disk.\n+    \"\"\"\n+\n+    def __init__(self, *args, **kargs):\n+        \"\"\"\n+        This directly initializes the associated FileCache.\n+        \"\"\"\n+        super().__init__(*args, **kargs)\n+\n+    def get_file_dict(self, filename_list, allow_raw_files=False):\n+        \"\"\"\n+        Returns a file dictionary mapping from filename to lines of\n+        file. Uses coalib.processes.Processing.get_file_dict().\n+\n+        :param filename_list:   List of filenames as strings to build\n+                                the file dict.\n+        :param allow_raw_files: Indicates if the file could also be\n+                                read as a binary.\n+        :return:                Reads the content of each file into\n+                                dictionary with filenames as keys.\n+        \"\"\"\n+        return get_file_dict(filename_list,\n+                             allow_raw_files=allow_raw_files)\n+\n+\n+class ProxyMapFileCache(FileCache, FileDictGenerator):\n+    \"\"\"\n+    ProxyMapFileCache is a FileCache that also provides\n+    methods to produce a file dict from a FileProxyMap.\n+\n+    >>> import logging\n+    >>> import tempfile\n+    >>> import copy, time\n+    >>> logging.getLogger().setLevel(logging.CRITICAL)\n+\n+    >>> file = tempfile.NamedTemporaryFile(delete=False)\n+    >>> file.write(b'coala')\n+    5\n+    >>> file.close()\n+\n+    A new instance of ProxyMapFileCache can be instantited:\n+\n+    >>> proxycache = ProxyMapFileCache(None, \"test\")\n+\n+    Before any action on the associated proxy map is carried\n+    out, the proxymap needs to be initialized/set using:\n+\n+    >>> proxymap = FileProxyMap()\n+    >>> proxycache.set_proxymap(proxymap)\n+\n+    A file dict can now be build using the underlying proxy\n+    map using:\n+\n+    >>> proxy = FileProxy.from_file(file.name, None)\n+    >>> proxymap.add(proxy)\n+    True\n+\n+    >>> file_dict = proxycache.get_file_dict([file.name])\n+    >>> file_dict[file.name]\n+    ('coala',)\n+    \"\"\"\n+\n+    def __init__(self, *args, **kargs):\n+        \"\"\"\n+        This directly initializes the associated FileCache.\n+        \"\"\"\n+        super().__init__(*args, **kargs)\n+        self.__proxymap = None\n+\n+    @enforce_signature\n+    def set_proxymap(self, fileproxy_map: FileProxyMap):\n+        \"\"\"\n+        Used to assign a ProxyMap, this is separate from\n+        the instance initialization method to keep the\n+        concerns separate.\n+\n+        :param fileproxy_map:   FileProxyMap instance to build\n+                                the file dict from.\n+        \"\"\"\n+        self.__proxymap = fileproxy_map\n+\n+    def get_file_dict(self, filename_list, allow_raw_files=False):\n+        \"\"\"\n+        Builds a file dictionary from filename to lines of the file\n+        from an associated FileProxyMap.\n+\n+        :param filename_list:   List of files to get the contents of.\n+        :param allow_raw_files: Allow the usage of raw files (non text files),\n+                                disabled by default\n+        :return:                Reads the content of each file into dictionary\n+                                with filenames as keys.\n+        \"\"\"\n+        if self.__proxymap is None:\n+            raise ValueError('set_proxymap() should be called to set proxymap'\n+                             'of ProxyMapFileCache instance')\n+\n+        file_dict = {}\n+        for filename in filename_list:\n+            try:\n+                # Keep the binary mode turned off to maintain compatibility\n+                # with FileDictFileCache.get_file_dict().\n+                # filename is assumed to be normcased.\n+                proxy = self.__proxymap.resolve(filename,\n+                                                hard_sync=True,\n+                                                binary=False)\n+\n+                file_lines = proxy.lines()\n+                file_dict[filename] = tuple(file_lines)\n+            except UnicodeDecodeError:\n+                if allow_raw_files:\n+                    file_dict[filename] = None\n+                    continue\n+\n+                logging.warning(\"Failed to read file '{}'. It seems to contain \"\n+                                'non-unicode characters. Leaving it out.'\n+                                .format(filename))\n+\n+            except (OSError, FileNameError) as exception:\n+                log_exception(\"Failed to read file '{}' because of an unknown \"\n+                              'error. Leaving it out.'.format(filename),\n+                              exception,\n+                              log_level=LOG_LEVEL.WARNING)\n+\n+        logging.debug('Files that will be checked:\\n' +","author":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4","name":"Kilari Teja"},"reactions":[],"createdAt":"2018-08-09T07:07:36Z","lastEditedAt":"2018-08-09T07:07:57Z","updatedAt":"2018-08-09T07:07:57Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwODgyNjAxOA==","url":"https://github.com/coala/coala/pull/5699#discussion_r208826018","bodyText":"I wanted to have a distinct error to denote bad file names. I will use ValueError instead.","diffHunk":"@@ -0,0 +1,363 @@\n+import logging\n+from os import path\n+\n+from coala_utils.FileUtils import detect_encoding\n+from coala_utils.decorators import (enforce_signature, generate_eq,)\n+\n+\n+class FileNameError(LookupError):\n+    def __init__(self, error_message):","author":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4","name":"Kilari Teja"},"reactions":[],"createdAt":"2018-08-09T07:09:12Z","lastEditedAt":null,"updatedAt":"2018-08-09T07:09:12Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQxNDQ0MQ==","url":"https://github.com/coala/coala/pull/5699#discussion_r209414441","bodyText":"I mean that the default get_file_dict(..) should also not log this message.\ninstantiate_processes can do that for all implementations.","diffHunk":"@@ -173,3 +178,137 @@ def get_uncached_files(self, files):\n                     for file in files\n                     if (file not in self.data or\n                         int(os.path.getmtime(file)) > self.data[file])}\n+\n+\n+class FileDictFileCache(FileCache, FileDictGenerator):\n+    \"\"\"\n+    FileDictFileCache extends a traditional FileCache\n+    to support generation of a complete file dict, this\n+    lets FileDictFileCache provide access to both file\n+    cache and contents of files from disk.\n+    \"\"\"\n+\n+    def __init__(self, *args, **kargs):\n+        \"\"\"\n+        This directly initializes the associated FileCache.\n+        \"\"\"\n+        super().__init__(*args, **kargs)\n+\n+    def get_file_dict(self, filename_list, allow_raw_files=False):\n+        \"\"\"\n+        Returns a file dictionary mapping from filename to lines of\n+        file. Uses coalib.processes.Processing.get_file_dict().\n+\n+        :param filename_list:   List of filenames as strings to build\n+                                the file dict.\n+        :param allow_raw_files: Indicates if the file could also be\n+                                read as a binary.\n+        :return:                Reads the content of each file into\n+                                dictionary with filenames as keys.\n+        \"\"\"\n+        return get_file_dict(filename_list,\n+                             allow_raw_files=allow_raw_files)\n+\n+\n+class ProxyMapFileCache(FileCache, FileDictGenerator):\n+    \"\"\"\n+    ProxyMapFileCache is a FileCache that also provides\n+    methods to produce a file dict from a FileProxyMap.\n+\n+    >>> import logging\n+    >>> import tempfile\n+    >>> import copy, time\n+    >>> logging.getLogger().setLevel(logging.CRITICAL)\n+\n+    >>> file = tempfile.NamedTemporaryFile(delete=False)\n+    >>> file.write(b'coala')\n+    5\n+    >>> file.close()\n+\n+    A new instance of ProxyMapFileCache can be instantited:\n+\n+    >>> proxycache = ProxyMapFileCache(None, \"test\")\n+\n+    Before any action on the associated proxy map is carried\n+    out, the proxymap needs to be initialized/set using:\n+\n+    >>> proxymap = FileProxyMap()\n+    >>> proxycache.set_proxymap(proxymap)\n+\n+    A file dict can now be build using the underlying proxy\n+    map using:\n+\n+    >>> proxy = FileProxy.from_file(file.name, None)\n+    >>> proxymap.add(proxy)\n+    True\n+\n+    >>> file_dict = proxycache.get_file_dict([file.name])\n+    >>> file_dict[file.name]\n+    ('coala',)\n+    \"\"\"\n+\n+    def __init__(self, *args, **kargs):\n+        \"\"\"\n+        This directly initializes the associated FileCache.\n+        \"\"\"\n+        super().__init__(*args, **kargs)\n+        self.__proxymap = None\n+\n+    @enforce_signature\n+    def set_proxymap(self, fileproxy_map: FileProxyMap):\n+        \"\"\"\n+        Used to assign a ProxyMap, this is separate from\n+        the instance initialization method to keep the\n+        concerns separate.\n+\n+        :param fileproxy_map:   FileProxyMap instance to build\n+                                the file dict from.\n+        \"\"\"\n+        self.__proxymap = fileproxy_map\n+\n+    def get_file_dict(self, filename_list, allow_raw_files=False):\n+        \"\"\"\n+        Builds a file dictionary from filename to lines of the file\n+        from an associated FileProxyMap.\n+\n+        :param filename_list:   List of files to get the contents of.\n+        :param allow_raw_files: Allow the usage of raw files (non text files),\n+                                disabled by default\n+        :return:                Reads the content of each file into dictionary\n+                                with filenames as keys.\n+        \"\"\"\n+        if self.__proxymap is None:\n+            raise ValueError('set_proxymap() should be called to set proxymap'\n+                             'of ProxyMapFileCache instance')\n+\n+        file_dict = {}\n+        for filename in filename_list:\n+            try:\n+                # Keep the binary mode turned off to maintain compatibility\n+                # with FileDictFileCache.get_file_dict().\n+                # filename is assumed to be normcased.\n+                proxy = self.__proxymap.resolve(filename,\n+                                                hard_sync=True,\n+                                                binary=False)\n+\n+                file_lines = proxy.lines()\n+                file_dict[filename] = tuple(file_lines)\n+            except UnicodeDecodeError:\n+                if allow_raw_files:\n+                    file_dict[filename] = None\n+                    continue\n+\n+                logging.warning(\"Failed to read file '{}'. It seems to contain \"\n+                                'non-unicode characters. Leaving it out.'\n+                                .format(filename))\n+\n+            except (OSError, FileNameError) as exception:\n+                log_exception(\"Failed to read file '{}' because of an unknown \"\n+                              'error. Leaving it out.'.format(filename),\n+                              exception,\n+                              log_level=LOG_LEVEL.WARNING)\n+\n+        logging.debug('Files that will be checked:\\n' +","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-11T03:00:27Z","lastEditedAt":"2018-08-11T03:00:43Z","updatedAt":"2018-08-11T03:00:43Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQxNDYzMA==","url":"https://github.com/coala/coala/pull/5699#discussion_r209414630","bodyText":"no trailing , if followed by )","diffHunk":"@@ -0,0 +1,358 @@\n+import logging\n+from os import path\n+\n+from coala_utils.FileUtils import detect_encoding\n+from coala_utils.decorators import (enforce_signature, generate_eq,)","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzc4MzUwNA==","createdAt":"2018-08-11T05:30:01Z","content":"THUMBS_UP","user":{"login":"ksdme","name":"Kilari Teja"}}],"createdAt":"2018-08-11T03:10:24Z","lastEditedAt":null,"updatedAt":"2018-08-11T03:10:24Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQxNDY5Mg==","url":"https://github.com/coala/coala/pull/5699#discussion_r209414692","bodyText":"strange indentation.\nfour space indent, from beginning of previous line.","diffHunk":"@@ -177,3 +182,102 @@ def test_caching_multi_results(self):\n             self.assertIn(\n                 'Implicit \\'Default\\' section inheritance is deprecated',\n                 stderr)\n+\n+\n+class FileDictFileCacheTest(unittest.TestCase):\n+\n+    def setUp(self):\n+        log_printer = LogPrinter(NullPrinter())\n+        self.cache = FileDictFileCache(\n+            log_printer, 'coala_test', flush_cache=True)\n+\n+    def test_build_as_file_cache(self):\n+        self.assertTrue(isinstance(self.cache, FileCache))\n+\n+        self.cache.track_files({'test.c', 'file.py'})\n+        self.assertEqual(self.cache.data, {'test.c': -1, 'file.py': -1})\n+\n+    def test_get_file_dict(self):\n+        with prepare_file(['line\\n'], None) as (_, file):\n+            self.assertEqual(self.cache.get_file_dict([file]),\n+                             get_file_dict([file]))\n+\n+\n+class ProxyMapFileCacheTest(unittest.TestCase):\n+\n+    def setUp(self):\n+        log_printer = LogPrinter(NullPrinter())\n+        self.cache = ProxyMapFileCache(\n+            log_printer, 'coala_test', flush_cache=True)\n+\n+    def test_build_as_file_cache(self):\n+        self.assertTrue(isinstance(self.cache, FileCache))\n+\n+    def test_get_dict_no_file_proxy_map(self):\n+        with self.assertRaises(ValueError) as context:\n+            self.cache.get_file_dict([])\n+\n+        self.assertIn('set_proxymap() should be called to set proxymap'\n+                      'of ProxyMapFileCache instance',\n+                      str(context.exception))\n+\n+    def test_get_file_dict_with_proxy_map(self):\n+        with prepare_file([], None) as (_, file):\n+            proxy = FileProxy(file, None, 'coala\\n')\n+            proxymap = FileProxyMap([proxy])\n+            self.cache.set_proxymap(proxymap)\n+\n+            file_dict = self.cache.get_file_dict([file])\n+            self.assertEqual(file_dict, {file: ('coala\\n',)})\n+\n+    def test_get_file_dict_unicode_error(self):\n+        with make_temp() as filename:\n+            with open(filename, 'wb') as file:\n+                file.write(bytearray([120, 3, 255, 0, 100]))\n+\n+            self.cache.set_proxymap(FileProxyMap())\n+            file_dict = self.cache.get_file_dict([filename])\n+\n+            self.assertEqual(len(file_dict), 0)\n+\n+            self.cache.set_proxymap(FileProxyMap())\n+            file_dict = self.cache.get_file_dict([filename],\n+                                                 allow_raw_files=True)\n+\n+            self.assertEqual(len(file_dict), 1)\n+            self.assertIn(filename, file_dict)\n+\n+    def test_get_file_dict_file_not_found(self):\n+        self.cache.set_proxymap(FileProxyMap())\n+\n+        file_dict = self.cache.get_file_dict(['nofile.pycoala'])\n+        self.assertEqual(len(file_dict), 0)\n+\n+    def test_file_cache_proxy_integration(self, debug=False):\n+        with bear_test_module(), \\\n+                prepare_file(['disk-copy\\n'], None) as (_, filename):\n+\n+            memory_data = 'in-memory\\n'\n+            proxy = FileProxy(filename, None, memory_data)\n+            proxymap = FileProxyMap([proxy])\n+            self.cache.set_proxymap(proxymap)\n+\n+            results, exitcode, file_dicts = run_coala(\n+                                    console_printer=ConsolePrinter(),","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-11T03:13:26Z","lastEditedAt":null,"updatedAt":"2018-08-11T03:13:26Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMTYyMzEyNQ==","url":"https://github.com/coala/coala/pull/5699#issuecomment-411623125","bodyText":"/cc @jayvdb","diffHunk":null,"author":{"login":"gaocegege","avatarUrl":"https://avatars3.githubusercontent.com/u/5100735?v=4","name":"Ce Gao"},"reactions":[],"createdAt":"2018-08-09T03:15:07Z","lastEditedAt":null,"updatedAt":"2018-08-09T03:15:07Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1533790471000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5700","number":5700,"title":"Diff.py: Modify docstring of split_diff function","body":"This changes condition of the third example in the docstring to\n'If -1 is given'.\nIt prevents bear developers from using any arbitrary negative value.\nCloses #5329\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":4,"createdAt":"2018-08-09T04:19:47Z","updatedAt":"2018-08-09T04:54:31Z","closedAt":"2018-08-09T04:54:31Z","state":"merged","user":{"login":"blindacai","avatarUrl":"https://avatars0.githubusercontent.com/u/7420826?v=4"},"owner":{"login":"blindacai","avatarUrl":"https://avatars0.githubusercontent.com/u/7420826?v=4"},"assignee":{"login":"blindacai","avatarUrl":"https://avatars0.githubusercontent.com/u/7420826?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5700","comments":[]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1533965490000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5701","number":5701,"title":"deprecate_settings: Support splitting setting","body":"Adds support for splitting deprecated arg into multiple new args.\nAdds test for it as well.\nCloses #5683\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":5,"createdAt":"2018-08-10T13:56:42Z","updatedAt":"2018-08-11T05:31:30Z","closedAt":"2018-08-11T05:31:11Z","state":"merged","user":{"login":"nalinbhardwaj","avatarUrl":"https://avatars3.githubusercontent.com/u/6984346?v=4"},"owner":{"login":"nalinbhardwaj","avatarUrl":"https://avatars3.githubusercontent.com/u/6984346?v=4"},"labels":[{"name":"size/XS","color":"00DE0F"},{"name":"type/feature","color":"0052cc"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5701","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQxMzkxMA==","url":"https://github.com/coala/coala/pull/5701#discussion_r209413910","bodyText":"Please use [xy] instead\n\nThis needs to be improved.\nAnd we also need a test to cover the other scenario:\n\n'The value of {} and {} are conflicting. {} will be used instead.","diffHunk":"@@ -10,8 +11,22 @@ def func(new):\n     \"\"\"\n \n \n+@deprecate_settings(x=('a', lambda a: a+1), y=('a', lambda a: a+2))\n+def func_2(x, y):\n+    return x+y\n+\n+\n class DeprecateSettingsTest(unittest.TestCase):\n \n     def test_docstring(self):\n         self.assertEqual(func.__doc__.strip(),\n                          'This docstring will not be lost.')\n+\n+    def test_multiple_args(self):\n+        logger = logging.getLogger()\n+\n+        with self.assertLogs(logger, 'WARNING') as cm:\n+            self.assertEqual(func_2(a=1), 5)\n+\n+            self.assertRegex(cm.output[0], 'WARNING:root:The setting `a` is '\n+                             r'deprecated. Please use `[xy]` instead.')","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-11T02:32:24Z","lastEditedAt":null,"updatedAt":"2018-08-11T02:32:24Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQxNDIyMA==","url":"https://github.com/coala/coala/pull/5701#discussion_r209414220","bodyText":"Please use [xy] instead\n\nThis needs to be improved.\n\nNot sure if you/I understand correctly, but this is a regex, so the actual error is \"Please use x instead\" or \"Please use y instead\". The reason this needs a regex is that the order of args seems to depend on the version of the py(py3.4 has the message with y, py3.5 with x). This test, therefore, passes both.","diffHunk":"@@ -10,8 +11,22 @@ def func(new):\n     \"\"\"\n \n \n+@deprecate_settings(x=('a', lambda a: a+1), y=('a', lambda a: a+2))\n+def func_2(x, y):\n+    return x+y\n+\n+\n class DeprecateSettingsTest(unittest.TestCase):\n \n     def test_docstring(self):\n         self.assertEqual(func.__doc__.strip(),\n                          'This docstring will not be lost.')\n+\n+    def test_multiple_args(self):\n+        logger = logging.getLogger()\n+\n+        with self.assertLogs(logger, 'WARNING') as cm:\n+            self.assertEqual(func_2(a=1), 5)\n+\n+            self.assertRegex(cm.output[0], 'WARNING:root:The setting `a` is '\n+                             r'deprecated. Please use `[xy]` instead.')","author":{"login":"nalinbhardwaj","avatarUrl":"https://avatars3.githubusercontent.com/u/6984346?v=4","name":"Nalin Bhardwaj"},"createdAt":"2018-08-11T02:46:06Z","lastEditedAt":"2018-08-11T02:46:26Z","updatedAt":"2018-08-11T02:46:26Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQxNDQxMA==","url":"https://github.com/coala/coala/pull/5701#discussion_r209414410","bodyText":"And we also need a test to cover the other scenario:\n\n'The value of {} and {} are conflicting. {} will be used instead.\n\n\nAdded.","diffHunk":"@@ -10,8 +11,22 @@ def func(new):\n     \"\"\"\n \n \n+@deprecate_settings(x=('a', lambda a: a+1), y=('a', lambda a: a+2))\n+def func_2(x, y):\n+    return x+y\n+\n+\n class DeprecateSettingsTest(unittest.TestCase):\n \n     def test_docstring(self):\n         self.assertEqual(func.__doc__.strip(),\n                          'This docstring will not be lost.')\n+\n+    def test_multiple_args(self):\n+        logger = logging.getLogger()\n+\n+        with self.assertLogs(logger, 'WARNING') as cm:\n+            self.assertEqual(func_2(a=1), 5)\n+\n+            self.assertRegex(cm.output[0], 'WARNING:root:The setting `a` is '\n+                             r'deprecated. Please use `[xy]` instead.')","author":{"login":"nalinbhardwaj","avatarUrl":"https://avatars3.githubusercontent.com/u/6984346?v=4","name":"Nalin Bhardwaj"},"createdAt":"2018-08-11T02:58:51Z","lastEditedAt":null,"updatedAt":"2018-08-11T02:58:51Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQxNDg5MA==","url":"https://github.com/coala/coala/pull/5701#discussion_r209414890","bodyText":"Does it give two error messages?\nIf it only gives one error message, it should say \"Please use x & y instead\"\nIf it gives two error messages, sort them and check both as you did for test_splitting_with_conflict","diffHunk":"@@ -10,8 +11,22 @@ def func(new):\n     \"\"\"\n \n \n+@deprecate_settings(x=('a', lambda a: a+1), y=('a', lambda a: a+2))\n+def func_2(x, y):\n+    return x+y\n+\n+\n class DeprecateSettingsTest(unittest.TestCase):\n \n     def test_docstring(self):\n         self.assertEqual(func.__doc__.strip(),\n                          'This docstring will not be lost.')\n+\n+    def test_multiple_args(self):\n+        logger = logging.getLogger()\n+\n+        with self.assertLogs(logger, 'WARNING') as cm:\n+            self.assertEqual(func_2(a=1), 5)\n+\n+            self.assertRegex(cm.output[0], 'WARNING:root:The setting `a` is '\n+                             r'deprecated. Please use `[xy]` instead.')","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-11T03:23:14Z","lastEditedAt":null,"updatedAt":"2018-08-11T03:23:14Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQxNTAwMg==","url":"https://github.com/coala/coala/pull/5701#discussion_r209415002","bodyText":"No, there's only a single error message. This seems to be a deliberate choice in a22ec25.","diffHunk":"@@ -10,8 +11,22 @@ def func(new):\n     \"\"\"\n \n \n+@deprecate_settings(x=('a', lambda a: a+1), y=('a', lambda a: a+2))\n+def func_2(x, y):\n+    return x+y\n+\n+\n class DeprecateSettingsTest(unittest.TestCase):\n \n     def test_docstring(self):\n         self.assertEqual(func.__doc__.strip(),\n                          'This docstring will not be lost.')\n+\n+    def test_multiple_args(self):\n+        logger = logging.getLogger()\n+\n+        with self.assertLogs(logger, 'WARNING') as cm:\n+            self.assertEqual(func_2(a=1), 5)\n+\n+            self.assertRegex(cm.output[0], 'WARNING:root:The setting `a` is '\n+                             r'deprecated. Please use `[xy]` instead.')","author":{"login":"nalinbhardwaj","avatarUrl":"https://avatars3.githubusercontent.com/u/6984346?v=4","name":"Nalin Bhardwaj"},"createdAt":"2018-08-11T03:29:55Z","lastEditedAt":"2018-08-11T03:32:42Z","updatedAt":"2018-08-11T03:32:42Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMjI1MTQxMA==","url":"https://github.com/coala/coala/pull/5701#issuecomment-412251410","bodyText":"reack 7122a12","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-11T05:07:50Z","lastEditedAt":null,"updatedAt":"2018-08-11T05:07:50Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1534131247000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5703","number":5703,"title":"appveyor.yml: Install test requirements first","body":"For short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":4,"createdAt":"2018-08-10T13:58:37Z","updatedAt":"2018-08-13T03:34:07Z","closedAt":"2018-08-13T03:34:02Z","state":"merged","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5703","comments":[]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1533951712000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5704","number":5704,"title":"Newcomers_Guide.rst: Add meta-review process","body":"Closes #5702\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":4,"createdAt":"2018-08-10T14:00:59Z","updatedAt":"2018-08-11T01:41:52Z","closedAt":"2018-08-11T00:23:45Z","state":"merged","user":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4"},"owner":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4"},"labels":[{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5704","comments":[]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1535887091000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5705","number":5705,"title":".travis.yml: Disable install on unsupported","body":"Unsupported versions do not need requirements\npre-installed.  This also prevents version\nconstraints in dependencies from breaking the job.\nCloses #5636\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":6,"createdAt":"2018-08-14T15:07:47Z","updatedAt":"2018-09-02T11:18:11Z","closedAt":"2018-09-02T11:02:27Z","state":"merged","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"assignee":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"area/CI","color":"eb6420"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5705","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMDIwMzY3MA==","url":"https://github.com/coala/coala/pull/5705#discussion_r210203670","bodyText":"note this convention is being used in lots of coala repos now\nhttps://github.com/coala/coala-bears/blob/master/.travis.yml#L9","diffHunk":"@@ -12,15 +12,19 @@ stages:\n   - name: unsupported\n     if: branch = master AND type = push\n \n+.disable_global: &disable_global","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-15T08:35:40Z","lastEditedAt":null,"updatedAt":"2018-08-15T08:35:40Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNDUxNjU2Mw==","url":"https://github.com/coala/coala/pull/5705#discussion_r214516563","bodyText":"To make python 3.6 section more intuitive and readable, can we consider merging disable_global in this section too and then overriding install?","diffHunk":"@@ -38,12 +42,15 @@ jobs:\n     # OSX build removed due to long build startup delays\n     # Restore matrix job entry from d2d67fab to test OSX\n     - python: 2.7\n+      <<: *disable_global\n       stage: unsupported\n       script: .misc/check_unsupported.sh\n     - python: 3.3\n+      <<: *disable_global\n       stage: unsupported\n       script: .misc/check_unsupported.sh\n     - python: 3.4.3\n+      <<: *disable_global\n       stage: unsupported\n       script: .misc/check_unsupported.sh\n     - python: 3.6","author":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4","name":"Kilari Teja"},"reactions":[{"id":"MDg6UmVhY3Rpb24yODgyMTE3NQ==","createdAt":"2018-09-02T09:57:07Z","content":"THUMBS_UP","user":{"login":"jayvdb","name":"John Vandenberg"}}],"createdAt":"2018-09-01T15:33:44Z","lastEditedAt":"2018-09-01T15:36:43Z","updatedAt":"2018-09-01T15:36:43Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNDUxNjY2OA==","url":"https://github.com/coala/coala/pull/5705#discussion_r214516668","bodyText":"It is also partially possible to do this in https://github.com/coala/coala-bears/blob/master/.travis.yml#L62.","diffHunk":"@@ -38,12 +42,15 @@ jobs:\n     # OSX build removed due to long build startup delays\n     # Restore matrix job entry from d2d67fab to test OSX\n     - python: 2.7\n+      <<: *disable_global\n       stage: unsupported\n       script: .misc/check_unsupported.sh\n     - python: 3.3\n+      <<: *disable_global\n       stage: unsupported\n       script: .misc/check_unsupported.sh\n     - python: 3.4.3\n+      <<: *disable_global\n       stage: unsupported\n       script: .misc/check_unsupported.sh\n     - python: 3.6","author":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4","name":"Kilari Teja"},"reactions":[],"createdAt":"2018-09-01T15:37:49Z","lastEditedAt":"2018-09-01T15:38:01Z","updatedAt":"2018-09-01T15:38:01Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNDUzNTE5OQ==","url":"https://github.com/coala/coala/pull/5705#discussion_r214535199","bodyText":"Feel free to create a newcomer issue about the bears one; explain it fairly clearly, so domain knowledge isnt needed - only expect yaml skills to complete the task.","diffHunk":"@@ -38,12 +42,15 @@ jobs:\n     # OSX build removed due to long build startup delays\n     # Restore matrix job entry from d2d67fab to test OSX\n     - python: 2.7\n+      <<: *disable_global\n       stage: unsupported\n       script: .misc/check_unsupported.sh\n     - python: 3.3\n+      <<: *disable_global\n       stage: unsupported\n       script: .misc/check_unsupported.sh\n     - python: 3.4.3\n+      <<: *disable_global\n       stage: unsupported\n       script: .misc/check_unsupported.sh\n     - python: 3.6","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yODgyMTY5Ng==","createdAt":"2018-09-02T10:41:36Z","content":"THUMBS_UP","user":{"login":"ksdme","name":"Kilari Teja"}}],"createdAt":"2018-09-02T10:06:24Z","lastEditedAt":null,"updatedAt":"2018-09-02T10:06:24Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMjkxMjIwMA==","url":"https://github.com/coala/coala/pull/5705#issuecomment-412912200","bodyText":"Example build with unsupported jobs: https://travis-ci.org/jayvdb/coala/builds/415949300","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-14T15:26:43Z","lastEditedAt":null,"updatedAt":"2018-08-14T15:26:43Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxNzkyMDU3NQ==","url":"https://github.com/coala/coala/pull/5705#issuecomment-417920575","bodyText":"LGTM.","diffHunk":null,"author":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4","name":"Kilari Teja"},"reactions":[],"createdAt":"2018-09-02T10:41:59Z","lastEditedAt":null,"updatedAt":"2018-09-02T10:41:59Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1534287815000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5706","number":5706,"title":"FileFactory: Add missing magic methods","body":"__len__ and __getitem__ are missing magic methods of\ndict needed to be emulated in order to be backwards compatible.\nThese are needed by coala-quickstart green mode to work on master.\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":1,"createdAt":"2018-08-14T15:41:42Z","updatedAt":"2018-08-14T23:03:35Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5706","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDQxMzA0MzM5Nw==","url":"https://github.com/coala/coala/pull/5706#issuecomment-413043397","bodyText":"I'll write tests, but waiting for @Makman2 's thoughts first.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzk0NjQ0Mg==","createdAt":"2018-08-15T09:41:20Z","content":"THUMBS_UP","user":{"login":"palash25","name":"Palash Nigam"}}],"createdAt":"2018-08-14T23:03:35Z","lastEditedAt":null,"updatedAt":"2018-08-14T23:03:35Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1535583023000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5707","number":5707,"title":"FilterHelper.py: Rewrite filters","body":"Change the filters input from list to dict\nFixes #5398\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":17,"createdAt":"2018-08-15T05:48:44Z","updatedAt":"2018-08-29T22:50:23Z","closedAt":"2018-08-28T03:10:50Z","state":"merged","user":{"login":"Utkarsh1308","avatarUrl":"https://avatars0.githubusercontent.com/u/23418707?v=4"},"owner":{"login":"Utkarsh1308","avatarUrl":"https://avatars0.githubusercontent.com/u/23418707?v=4"},"assignee":{"login":"Utkarsh1308","avatarUrl":"https://avatars0.githubusercontent.com/u/23418707?v=4"},"labels":[{"name":"difficulty/low","color":"207de5"},{"name":"importance/high","color":"eb6420"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5707","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMDE5OTQ1MA==","url":"https://github.com/coala/coala/pull/5707#discussion_r210199450","bodyText":"I believe you do not require *.","diffHunk":"@@ -75,8 +75,11 @@ def apply_filters(filters, bears=None, sections=None):\n         items = sections\n         applier = _apply_section_filter\n \n-    for filter in filters:\n-        filter_name, *filter_args = filter\n+    for filter_name, *filter_args in filters.items():","author":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4","name":"Kilari Teja"},"reactions":[],"createdAt":"2018-08-15T08:16:46Z","lastEditedAt":"2018-08-15T10:43:18Z","updatedAt":"2018-08-15T10:43:18Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMDE5OTc1OA==","url":"https://github.com/coala/coala/pull/5707#discussion_r210199758","bodyText":"key should be arg or filter_arg.","diffHunk":"@@ -75,8 +75,11 @@ def apply_filters(filters, bears=None, sections=None):\n         items = sections\n         applier = _apply_section_filter\n \n-    for filter in filters:\n-        filter_name, *filter_args = filter\n+    for filter_name, *filter_args in filters.items():\n+        for key in filter_args:","author":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4","name":"Kilari Teja"},"reactions":[],"createdAt":"2018-08-15T08:18:02Z","lastEditedAt":null,"updatedAt":"2018-08-15T08:18:02Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMDE5OTk5MQ==","url":"https://github.com/coala/coala/pull/5707#discussion_r210199991","bodyText":"As @jayvdb says, we should at least use tuples.","diffHunk":"@@ -75,8 +75,11 @@ def apply_filters(filters, bears=None, sections=None):\n         items = sections\n         applier = _apply_section_filter\n \n-    for filter in filters:\n-        filter_name, *filter_args = filter\n+    for filter_name, *filter_args in filters.items():\n+        for key in filter_args:\n+            if isinstance(key, list):","author":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4","name":"Kilari Teja"},"reactions":[],"createdAt":"2018-08-15T08:18:59Z","lastEditedAt":null,"updatedAt":"2018-08-15T08:18:59Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMDIwMDM5Nw==","url":"https://github.com/coala/coala/pull/5707#discussion_r210200397","bodyText":"Please explain the need for this.","diffHunk":"@@ -75,8 +75,11 @@ def apply_filters(filters, bears=None, sections=None):\n         items = sections\n         applier = _apply_section_filter\n \n-    for filter in filters:\n-        filter_name, *filter_args = filter\n+    for filter_name, *filter_args in filters.items():\n+        for key in filter_args:\n+            if isinstance(key, list):\n+                filter_args = [\n+                    item for sublist in filter_args for item in sublist]","author":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4","name":"Kilari Teja"},"reactions":[],"createdAt":"2018-08-15T08:20:50Z","lastEditedAt":null,"updatedAt":"2018-08-15T08:20:50Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMDIyMzg3OQ==","url":"https://github.com/coala/coala/pull/5707#discussion_r210223879","bodyText":"To convert a list of lists into a list. --> [['C', 'java']] ==> ['C', 'java']","diffHunk":"@@ -75,8 +75,11 @@ def apply_filters(filters, bears=None, sections=None):\n         items = sections\n         applier = _apply_section_filter\n \n-    for filter in filters:\n-        filter_name, *filter_args = filter\n+    for filter_name, *filter_args in filters.items():\n+        for key in filter_args:\n+            if isinstance(key, list):\n+                filter_args = [\n+                    item for sublist in filter_args for item in sublist]","author":{"login":"Utkarsh1308","avatarUrl":"https://avatars0.githubusercontent.com/u/23418707?v=4","name":"Utkarsh Sharma"},"reactions":[],"createdAt":"2018-08-15T10:03:51Z","lastEditedAt":null,"updatedAt":"2018-08-15T10:03:51Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMDIyNzIxNQ==","url":"https://github.com/coala/coala/pull/5707#discussion_r210227215","bodyText":"The top level for filter_name, *filter_args in filters.items() already iterates over all the filters. This should be pretty straight forward and not requires this kind of looping.\ndict_filters = {}\n\nfor filter_name, *filter_args in filters:\n  filter_args = tuple(filter_args)\n  dict_filters[filter_name] = filter_args\nWhy won't this work?","diffHunk":"@@ -75,8 +75,11 @@ def apply_filters(filters, bears=None, sections=None):\n         items = sections\n         applier = _apply_section_filter\n \n-    for filter in filters:\n-        filter_name, *filter_args = filter\n+    for filter_name, *filter_args in filters.items():\n+        for key in filter_args:\n+            if isinstance(key, list):\n+                filter_args = [\n+                    item for sublist in filter_args for item in sublist]","author":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4","name":"Kilari Teja"},"reactions":[],"createdAt":"2018-08-15T10:21:27Z","lastEditedAt":"2018-08-15T10:23:33Z","updatedAt":"2018-08-15T10:23:33Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMDIyODkyMg==","url":"https://github.com/coala/coala/pull/5707#discussion_r210228922","bodyText":"In the original code filter_args gave a list instead of a single variable. (['syntax'] instead of syntax)\nOn using filter_args I got a single variable and *filter_args gave a list so I sticked with the original result because I didn't know if this change could give an error.","diffHunk":"@@ -75,8 +75,11 @@ def apply_filters(filters, bears=None, sections=None):\n         items = sections\n         applier = _apply_section_filter\n \n-    for filter in filters:\n-        filter_name, *filter_args = filter\n+    for filter_name, *filter_args in filters.items():","author":{"login":"Utkarsh1308","avatarUrl":"https://avatars0.githubusercontent.com/u/23418707?v=4","name":"Utkarsh Sharma"},"reactions":[],"createdAt":"2018-08-15T10:30:30Z","lastEditedAt":null,"updatedAt":"2018-08-15T10:30:30Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMDIzMDUxOQ==","url":"https://github.com/coala/coala/pull/5707#discussion_r210230519","bodyText":"This would give the following result\nlanguage\n('c', 'java')\ncan_fix\n('s', 'y', 'n', 't', 'a', 'x')\nsection_tags\n('s', 'a', 'v', 'e')\n\ninstead of what I am aiming for\nlanguage\n['c', 'java']\ncan_fix\n['syntax']\nsection_tags\n['save']\n\nI wrote this extra code to change the filter args from\n[['c', 'java']]\n['syntax']\n['save']\n\nto\n['c', 'java']\n['syntax']\n['save']","diffHunk":"@@ -75,8 +75,11 @@ def apply_filters(filters, bears=None, sections=None):\n         items = sections\n         applier = _apply_section_filter\n \n-    for filter in filters:\n-        filter_name, *filter_args = filter\n+    for filter_name, *filter_args in filters.items():\n+        for key in filter_args:\n+            if isinstance(key, list):\n+                filter_args = [\n+                    item for sublist in filter_args for item in sublist]","author":{"login":"Utkarsh1308","avatarUrl":"https://avatars0.githubusercontent.com/u/23418707?v=4","name":"Utkarsh Sharma"},"reactions":[],"createdAt":"2018-08-15T10:38:21Z","lastEditedAt":null,"updatedAt":"2018-08-15T10:38:21Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMDIzMTUxMA==","url":"https://github.com/coala/coala/pull/5707#discussion_r210231510","bodyText":"filters is a list right?","diffHunk":"@@ -75,8 +75,11 @@ def apply_filters(filters, bears=None, sections=None):\n         items = sections\n         applier = _apply_section_filter\n \n-    for filter in filters:\n-        filter_name, *filter_args = filter\n+    for filter_name, *filter_args in filters.items():","author":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4","name":"Kilari Teja"},"reactions":[],"createdAt":"2018-08-15T10:43:41Z","lastEditedAt":null,"updatedAt":"2018-08-15T10:43:41Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMDIzMjMzNg==","url":"https://github.com/coala/coala/pull/5707#discussion_r210232336","bodyText":"The original code takes filters as a list but according to my understanding the issue aims to change filters from a list to a dict as an argument. I might have misunderstood the issue.","diffHunk":"@@ -75,8 +75,11 @@ def apply_filters(filters, bears=None, sections=None):\n         items = sections\n         applier = _apply_section_filter\n \n-    for filter in filters:\n-        filter_name, *filter_args = filter\n+    for filter_name, *filter_args in filters.items():","author":{"login":"Utkarsh1308","avatarUrl":"https://avatars0.githubusercontent.com/u/23418707?v=4","name":"Utkarsh Sharma"},"reactions":[],"createdAt":"2018-08-15T10:47:09Z","lastEditedAt":"2018-08-15T10:47:26Z","updatedAt":"2018-08-15T10:47:26Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMDIzMjYyNQ==","url":"https://github.com/coala/coala/pull/5707#discussion_r210232625","bodyText":">>> filters = [['langauge', 'c', 'java'], ['can_fix', 'syntax']]\n>>> dict_filters = {}\n>>> \n>>> for filter_name, *filter_args in filters:\n...   filter_args = tuple(filter_args)\n...   dict_filters[filter_name] = filter_args\n... \n>>> \n>>> dict_filters\n{'langauge': ('c', 'java'), 'can_fix': ('syntax',)}\n>>> \nWhat am I doing wrong here?","diffHunk":"@@ -75,8 +75,11 @@ def apply_filters(filters, bears=None, sections=None):\n         items = sections\n         applier = _apply_section_filter\n \n-    for filter in filters:\n-        filter_name, *filter_args = filter\n+    for filter_name, *filter_args in filters.items():\n+        for key in filter_args:\n+            if isinstance(key, list):\n+                filter_args = [\n+                    item for sublist in filter_args for item in sublist]","author":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4","name":"Kilari Teja"},"reactions":[],"createdAt":"2018-08-15T10:48:34Z","lastEditedAt":null,"updatedAt":"2018-08-15T10:48:34Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMDIzMjk1Ng==","url":"https://github.com/coala/coala/pull/5707#discussion_r210232956","bodyText":"I changed filters from a list into a dict.\nThe new filters is\n{'language': ['c', 'java'], 'can_fix': 'syntax', 'section_tags': 'save'}","diffHunk":"@@ -75,8 +75,11 @@ def apply_filters(filters, bears=None, sections=None):\n         items = sections\n         applier = _apply_section_filter\n \n-    for filter in filters:\n-        filter_name, *filter_args = filter\n+    for filter_name, *filter_args in filters.items():\n+        for key in filter_args:\n+            if isinstance(key, list):\n+                filter_args = [\n+                    item for sublist in filter_args for item in sublist]","author":{"login":"Utkarsh1308","avatarUrl":"https://avatars0.githubusercontent.com/u/23418707?v=4","name":"Utkarsh Sharma"},"reactions":[],"createdAt":"2018-08-15T10:50:24Z","lastEditedAt":null,"updatedAt":"2018-08-15T10:50:24Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMDIzNTc5Mg==","url":"https://github.com/coala/coala/pull/5707#discussion_r210235792","bodyText":"Ok, so my understanding is you have already performed partial conversion to a dict based filter structure. A few remarks here:\n\nUse OrderedDicts, filtering order is important here.\nUse tuples for holding args, not lists.\nDo not partially convert the filters, you should rather have all the filter args as tuples. {'language': ('c', 'java'), 'can_fix': ('syntax',), 'section_tags': ('save',)} otherwise it will force all the other unrelated methods to handle this case.","diffHunk":"@@ -75,8 +75,11 @@ def apply_filters(filters, bears=None, sections=None):\n         items = sections\n         applier = _apply_section_filter\n \n-    for filter in filters:\n-        filter_name, *filter_args = filter\n+    for filter_name, *filter_args in filters.items():\n+        for key in filter_args:\n+            if isinstance(key, list):\n+                filter_args = [\n+                    item for sublist in filter_args for item in sublist]","author":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4","name":"Kilari Teja"},"reactions":[],"createdAt":"2018-08-15T11:03:41Z","lastEditedAt":"2018-08-15T11:04:01Z","updatedAt":"2018-08-15T11:04:01Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMDIzNjE5Nw==","url":"https://github.com/coala/coala/pull/5707#discussion_r210236197","bodyText":"I would suggest doing this step wise to understand it better. Make everything work with tuple right now and then introduce dicts.","diffHunk":"@@ -75,8 +75,11 @@ def apply_filters(filters, bears=None, sections=None):\n         items = sections\n         applier = _apply_section_filter\n \n-    for filter in filters:\n-        filter_name, *filter_args = filter\n+    for filter_name, *filter_args in filters.items():\n+        for key in filter_args:\n+            if isinstance(key, list):\n+                filter_args = [\n+                    item for sublist in filter_args for item in sublist]","author":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4","name":"Kilari Teja"},"reactions":[],"createdAt":"2018-08-15T11:05:47Z","lastEditedAt":null,"updatedAt":"2018-08-15T11:05:47Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMTEwNDQ5Mg==","url":"https://github.com/coala/coala/pull/5707#discussion_r211104492","bodyText":"this lines aren't the same with 135:140 from FilterHelper.py ? Maybe you can write a function inside FilterHelper with this lines and call it at the start of apply_filters instead of here, i don't think is the proper place. Also you can use that function instead of 135:140 to avoid duplicate code.","diffHunk":"@@ -70,6 +70,11 @@ def main(debug=False):\n                 # Each iteration of the following loop applies\n                 # filters one by one provided as arguments\n                 try:\n+                    items = {}","author":{"login":"Nosferatul","avatarUrl":"https://avatars2.githubusercontent.com/u/15227444?v=4","name":"Alexandru-Sorin Maxim"},"reactions":[],"createdAt":"2018-08-19T14:16:56Z","lastEditedAt":null,"updatedAt":"2018-08-19T14:16:56Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMTYyMjk0Mg==","url":"https://github.com/coala/coala/pull/5707#discussion_r211622942","bodyText":"Why new line here?","diffHunk":"@@ -75,8 +75,11 @@ def apply_filters(filters, bears=None, sections=None):\n         items = sections\n         applier = _apply_section_filter\n \n-    for filter in filters:\n-        filter_name, *filter_args = filter\n+    for filter_name, *filter_args in filters.items():\n+        for filter_arg in filter_args:\n+            if isinstance(filter_arg, list):\n+                filter_args = [\n+                    item for sublist in filter_args for item in sublist]","author":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4","name":"Boxuan Li"},"reactions":[],"createdAt":"2018-08-21T14:18:05Z","lastEditedAt":null,"updatedAt":"2018-08-21T14:18:05Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMTYyMzY3MQ==","url":"https://github.com/coala/coala/pull/5707#discussion_r211623671","bodyText":"fil -> filter?","diffHunk":"@@ -123,10 +126,20 @@ def collect_filters(args, arg_list=None, arg_parser=None):\n         Instance of ArgParser that is used to parse arg list.\n     :return:\n         List of filters in standard filter format, i.e\n-        ``[['filter_name', 'arg1', 'arg2']]``.\n+        ``{'filter_name': ['arg1', 'arg2']}``.\n     \"\"\"\n     if args is None:\n         arg_parser = default_arg_parser() if arg_parser is None else arg_parser\n         args = arg_parser.parse_args(arg_list)\n \n-    return getattr(args, 'filter_by', None) or []\n+    filters = getattr(args, 'filter_by', None) or []\n+    filters = list_to_dict(filters)\n+    return filters\n+\n+\n+def list_to_dict(filters):\n+    items = {}\n+    for fil in filters:","author":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4","name":"Boxuan Li"},"reactions":[],"createdAt":"2018-08-21T14:19:59Z","lastEditedAt":null,"updatedAt":"2018-08-21T14:19:59Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMTYyNDY2OA==","url":"https://github.com/coala/coala/pull/5707#discussion_r211624668","bodyText":"Ideally, the doc string here should also be changed.","diffHunk":"@@ -60,8 +60,8 @@ def apply_filters(filters, bears=None, sections=None):\n \n     :param filters:\n         List of args based on ``bears`` has to be filtered. For example:","author":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4","name":"Boxuan Li"},"reactions":[],"createdAt":"2018-08-21T14:22:30Z","lastEditedAt":null,"updatedAt":"2018-08-21T14:22:30Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMTYzMjI2Ng==","url":"https://github.com/coala/coala/pull/5707#discussion_r211632266","bodyText":"What should be changed?","diffHunk":"@@ -60,8 +60,8 @@ def apply_filters(filters, bears=None, sections=None):\n \n     :param filters:\n         List of args based on ``bears`` has to be filtered. For example:","author":{"login":"Utkarsh1308","avatarUrl":"https://avatars0.githubusercontent.com/u/23418707?v=4","name":"Utkarsh Sharma"},"reactions":[],"createdAt":"2018-08-21T14:41:15Z","lastEditedAt":null,"updatedAt":"2018-08-21T14:41:15Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMTYzMjI4Ng==","url":"https://github.com/coala/coala/pull/5707#discussion_r211632286","bodyText":"Please name this appropriately, list_to_dict does not explain its purpose.","diffHunk":"@@ -123,10 +126,20 @@ def collect_filters(args, arg_list=None, arg_parser=None):\n         Instance of ArgParser that is used to parse arg list.\n     :return:\n         List of filters in standard filter format, i.e\n-        ``[['filter_name', 'arg1', 'arg2']]``.\n+        ``{'filter_name': ['arg1', 'arg2']}``.\n     \"\"\"\n     if args is None:\n         arg_parser = default_arg_parser() if arg_parser is None else arg_parser\n         args = arg_parser.parse_args(arg_list)\n \n-    return getattr(args, 'filter_by', None) or []\n+    filters = getattr(args, 'filter_by', None) or []\n+    filters = list_to_dict(filters)\n+    return filters\n+\n+\n+def list_to_dict(filters):","author":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4","name":"Kilari Teja"},"reactions":[],"createdAt":"2018-08-21T14:41:17Z","lastEditedAt":null,"updatedAt":"2018-08-21T14:41:17Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMzEzMDU0MQ==","url":"https://github.com/coala/coala/pull/5707#issuecomment-413130541","bodyText":"https://github.com/coala/coala/blob/master/coalib/coala.py#L69 might require some patch work too.","diffHunk":null,"author":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4","name":"Kilari Teja"},"reactions":[],"createdAt":"2018-08-15T08:31:47Z","lastEditedAt":null,"updatedAt":"2018-08-15T08:31:47Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMzEzMTE2OA==","url":"https://github.com/coala/coala/pull/5707#issuecomment-413131168","bodyText":"Would you consider doing this in stages? First let us transition this into tuple based structures and then worry about introducing dicts (OrderedDicts) or class based filters.","diffHunk":null,"author":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4","name":"Kilari Teja"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzk1OTc2NQ==","createdAt":"2018-08-15T14:40:02Z","content":"THUMBS_UP","user":{"login":"jayvdb","name":"John Vandenberg"}}],"createdAt":"2018-08-15T08:34:15Z","lastEditedAt":"2018-08-15T08:34:35Z","updatedAt":"2018-08-15T08:34:35Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxNjA3NTE0Mw==","url":"https://github.com/coala/coala/pull/5707#issuecomment-416075143","bodyText":"The test failing is tests/coalaTest.py::coalaTest::test_coala_with_color, you can ignore that, it happens sometimes.","diffHunk":null,"author":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4","name":"Kilari Teja"},"reactions":[],"createdAt":"2018-08-26T21:52:36Z","lastEditedAt":null,"updatedAt":"2018-08-26T21:52:36Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1534320371000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5709","number":5709,"title":"Processing.py: Fix file dict logging","body":"Fix logging message related to file dict collection.\nFixes #5708\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":7,"createdAt":"2018-08-15T07:27:18Z","updatedAt":"2018-08-15T08:06:11Z","closedAt":"2018-08-15T08:06:11Z","state":"merged","user":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4"},"owner":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4"},"assignee":{"login":"ksdme","avatarUrl":"https://avatars1.githubusercontent.com/u/12156014?v=4"},"labels":[{"name":"importance/medium","color":"fbca04"},{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"00DE0F"},{"name":"type/bug","color":"e11d21"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5709","comments":[]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1534521029000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5564","number":5564,"title":"BaseTestHelper.py: Improve AssertionError message","body":"This improves the AssertionError message generated from\nassert_result_equal(...) method by inheriting unittest\nin BaseTestHelper class.\nCloses #5533","comments":2,"createdAt":"2018-06-24T13:21:17Z","updatedAt":"2018-08-17T15:50:29Z","closedAt":null,"state":"open","user":{"login":"sangamcse","avatarUrl":"https://avatars2.githubusercontent.com/u/26381717?v=4"},"owner":{"login":"sangamcse","avatarUrl":"https://avatars2.githubusercontent.com/u/26381717?v=4"},"assignee":{"login":"sangamcse","avatarUrl":"https://avatars2.githubusercontent.com/u/26381717?v=4"},"labels":[{"name":"process/wip","color":"fbca04"},{"name":"size/S","color":"B1CF0A"},{"name":"type/bug","color":"e11d21"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5564","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5ODgxNDEzNQ==","url":"https://github.com/coala/coala/pull/5564#discussion_r198814135","bodyText":"why was this removed?  the assertion might change slightly, but we need to check the assertion message still.\nfyi, see #3374 and #3808\nYou can also add Related to https://github.com/coala/coala/issues/3808 in your commit message as that is what this PR is also doing","diffHunk":"@@ -9,23 +7,38 @@ def test_good_assert_result_equal(self):\n         self.assert_result_equal(['a', 'b'], ['a', 'b'])\n \n     def test_inequality_assert_result_equal(self):\n-        with pytest.raises(AssertionError) as ex:\n+        with self.assertRaises(AssertionError) as ex:\n             self.assert_result_equal(['a', 'b'], ['a', 'b', None])\n-        assert '[\\'a\\', \\'b\\'] != [\\'a\\', \\'b\\', None]' in str(ex.value)\n+        self.assertEqual(\"Lists differ: ['a', 'b'] != ['a', 'b', None]\\n\\n\"\n+                         'Second list contains 1 additional elements.\\n'\n+                         'First extra element 2:\\n'\n+                         'None\\n\\n'\n+                         \"- ['a', 'b']\\n\"\n+                         \"+ ['a', 'b', None]\\n\"\n+                         '?          ++++++\\n', str(ex.exception))\n \n     def test_not_comparable_assert_result_equal(self):\n-        with pytest.raises(AssertionError) as ex:\n+        with self.assertRaises(AssertionError):\n             self.assert_result_equal(['a', 'b'], ['a', 'c'])\n-        assert '[\\'a\\', \\'b\\'] != [\\'a\\', \\'c\\']' in str(ex.value)","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-06-28T11:59:12Z","lastEditedAt":null,"updatedAt":"2018-06-28T11:59:12Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5ODg3MjY2OA==","url":"https://github.com/coala/coala/pull/5564#discussion_r198872668","bodyText":"It was differing in different python version. I tried here. Still, I am trying it once again.\n\nwhy was this removed? the assertion might change slightly, but we need to check the assertion message still.\n\nI will do that. 😄\n\nYou can also add Related to https://github.com/coala/coala/issues/3808 in your commit message as that is what this PR is also doing","diffHunk":"@@ -9,23 +7,38 @@ def test_good_assert_result_equal(self):\n         self.assert_result_equal(['a', 'b'], ['a', 'b'])\n \n     def test_inequality_assert_result_equal(self):\n-        with pytest.raises(AssertionError) as ex:\n+        with self.assertRaises(AssertionError) as ex:\n             self.assert_result_equal(['a', 'b'], ['a', 'b', None])\n-        assert '[\\'a\\', \\'b\\'] != [\\'a\\', \\'b\\', None]' in str(ex.value)\n+        self.assertEqual(\"Lists differ: ['a', 'b'] != ['a', 'b', None]\\n\\n\"\n+                         'Second list contains 1 additional elements.\\n'\n+                         'First extra element 2:\\n'\n+                         'None\\n\\n'\n+                         \"- ['a', 'b']\\n\"\n+                         \"+ ['a', 'b', None]\\n\"\n+                         '?          ++++++\\n', str(ex.exception))\n \n     def test_not_comparable_assert_result_equal(self):\n-        with pytest.raises(AssertionError) as ex:\n+        with self.assertRaises(AssertionError):\n             self.assert_result_equal(['a', 'b'], ['a', 'c'])\n-        assert '[\\'a\\', \\'b\\'] != [\\'a\\', \\'c\\']' in str(ex.value)","author":{"login":"sangamcse","avatarUrl":"https://avatars2.githubusercontent.com/u/26381717?v=4","name":"Sangam Kumar"},"reactions":[],"createdAt":"2018-06-28T14:55:28Z","lastEditedAt":null,"updatedAt":"2018-06-28T14:55:28Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5ODkwMzY3NQ==","url":"https://github.com/coala/coala/pull/5564#discussion_r198903675","bodyText":"It is done now @jayvdb. Take a look. Thanks.","diffHunk":"@@ -9,23 +7,38 @@ def test_good_assert_result_equal(self):\n         self.assert_result_equal(['a', 'b'], ['a', 'b'])\n \n     def test_inequality_assert_result_equal(self):\n-        with pytest.raises(AssertionError) as ex:\n+        with self.assertRaises(AssertionError) as ex:\n             self.assert_result_equal(['a', 'b'], ['a', 'b', None])\n-        assert '[\\'a\\', \\'b\\'] != [\\'a\\', \\'b\\', None]' in str(ex.value)\n+        self.assertEqual(\"Lists differ: ['a', 'b'] != ['a', 'b', None]\\n\\n\"\n+                         'Second list contains 1 additional elements.\\n'\n+                         'First extra element 2:\\n'\n+                         'None\\n\\n'\n+                         \"- ['a', 'b']\\n\"\n+                         \"+ ['a', 'b', None]\\n\"\n+                         '?          ++++++\\n', str(ex.exception))\n \n     def test_not_comparable_assert_result_equal(self):\n-        with pytest.raises(AssertionError) as ex:\n+        with self.assertRaises(AssertionError):\n             self.assert_result_equal(['a', 'b'], ['a', 'c'])\n-        assert '[\\'a\\', \\'b\\'] != [\\'a\\', \\'c\\']' in str(ex.value)","author":{"login":"sangamcse","avatarUrl":"https://avatars2.githubusercontent.com/u/26381717?v=4","name":"Sangam Kumar"},"reactions":[],"createdAt":"2018-06-28T16:22:48Z","lastEditedAt":null,"updatedAt":"2018-06-28T16:22:48Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5OTkwMjEwOA==","url":"https://github.com/coala/coala/pull/5564#discussion_r199902108","bodyText":"yields?  -> raises ...","diffHunk":"@@ -1,45 +1,43 @@\n-from coala_utils.Comparable import Comparable\n+import unittest\n \n+from coala_utils.Comparable import Comparable\n \n-def _assert_comparable_equal(observed_result, expected_result):\n-    \"\"\"\n-    Compares individual fields of the result objects using\n-    `__compare_fields__` of `coala_utils.Comparable` class\n-    and yields messages in case of an attribute mismatch.\n-    \"\"\"\n \n-    if not len(observed_result) == len(expected_result):\n-        assert observed_result == expected_result, '%s != %s' % (\n-            observed_result, expected_result)\n-\n-    messages = ''\n-    for observed, expected in zip(observed_result, expected_result):\n-        if (isinstance(observed, Comparable) and\n-            isinstance(expected, Comparable)) and (type(observed) is\n-                                                   type(expected)):\n-            for attribute in type(observed).__compare_fields__:\n-                try:\n-                    assert getattr(observed, attribute) == getattr(\n-                        expected, attribute), (\n-                        '{} mismatch: {}, {} != {}, {}'.format(\n-                            attribute,\n-                            observed.origin, observed.message,\n-                            expected.origin, expected.message))\n-                except AssertionError as ex:\n-                    messages += (str(ex) + '\\n\\n')\n-        else:\n-            assert observed_result == expected_result, '%s != %s' % (\n-                observed_result, expected_result)\n-\n-    if messages:\n-        raise AssertionError(messages)\n-\n-\n-class BaseTestHelper:\n+class BaseTestHelper(unittest.TestCase):\n     \"\"\"\n     This is a base class for all Bears' tests of coala's testing API.\n     \"\"\"\n \n+    def _assert_comparable_equal(self,\n+                                 observed_result,\n+                                 expected_result):\n+        \"\"\"\n+        Compares individual fields of the result objects using\n+        `__compare_fields__` of `coala_utils.Comparable` class\n+        and yields messages in case of an attribute mismatch.","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-07-03T18:04:43Z","lastEditedAt":null,"updatedAt":"2018-07-03T18:04:43Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5OTkwMjYwMw==","url":"https://github.com/coala/coala/pull/5564#discussion_r199902603","bodyText":"put them into an array, and then format them at the end when raising the exception","diffHunk":"@@ -1,45 +1,43 @@\n-from coala_utils.Comparable import Comparable\n+import unittest\n \n+from coala_utils.Comparable import Comparable\n \n-def _assert_comparable_equal(observed_result, expected_result):\n-    \"\"\"\n-    Compares individual fields of the result objects using\n-    `__compare_fields__` of `coala_utils.Comparable` class\n-    and yields messages in case of an attribute mismatch.\n-    \"\"\"\n \n-    if not len(observed_result) == len(expected_result):\n-        assert observed_result == expected_result, '%s != %s' % (\n-            observed_result, expected_result)\n-\n-    messages = ''\n-    for observed, expected in zip(observed_result, expected_result):\n-        if (isinstance(observed, Comparable) and\n-            isinstance(expected, Comparable)) and (type(observed) is\n-                                                   type(expected)):\n-            for attribute in type(observed).__compare_fields__:\n-                try:\n-                    assert getattr(observed, attribute) == getattr(\n-                        expected, attribute), (\n-                        '{} mismatch: {}, {} != {}, {}'.format(\n-                            attribute,\n-                            observed.origin, observed.message,\n-                            expected.origin, expected.message))\n-                except AssertionError as ex:\n-                    messages += (str(ex) + '\\n\\n')\n-        else:\n-            assert observed_result == expected_result, '%s != %s' % (\n-                observed_result, expected_result)\n-\n-    if messages:\n-        raise AssertionError(messages)\n-\n-\n-class BaseTestHelper:\n+class BaseTestHelper(unittest.TestCase):\n     \"\"\"\n     This is a base class for all Bears' tests of coala's testing API.\n     \"\"\"\n \n+    def _assert_comparable_equal(self,\n+                                 observed_result,\n+                                 expected_result):\n+        \"\"\"\n+        Compares individual fields of the result objects using\n+        `__compare_fields__` of `coala_utils.Comparable` class\n+        and yields messages in case of an attribute mismatch.\n+        \"\"\"\n+\n+        if not len(observed_result) == len(expected_result):\n+            self.assertEqual(observed_result, expected_result)\n+\n+        messages = ''","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNjEyODM5Mg==","createdAt":"2018-07-07T09:45:40Z","content":"THUMBS_UP","user":{"login":"sangamcse","name":"Sangam Kumar"}}],"createdAt":"2018-07-03T18:06:32Z","lastEditedAt":null,"updatedAt":"2018-07-03T18:06:32Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMDgwNzg5MA==","url":"https://github.com/coala/coala/pull/5564#discussion_r200807890","bodyText":"Changes are done @jayvdb","diffHunk":"@@ -1,45 +1,43 @@\n-from coala_utils.Comparable import Comparable\n+import unittest\n \n+from coala_utils.Comparable import Comparable\n \n-def _assert_comparable_equal(observed_result, expected_result):\n-    \"\"\"\n-    Compares individual fields of the result objects using\n-    `__compare_fields__` of `coala_utils.Comparable` class\n-    and yields messages in case of an attribute mismatch.\n-    \"\"\"\n \n-    if not len(observed_result) == len(expected_result):\n-        assert observed_result == expected_result, '%s != %s' % (\n-            observed_result, expected_result)\n-\n-    messages = ''\n-    for observed, expected in zip(observed_result, expected_result):\n-        if (isinstance(observed, Comparable) and\n-            isinstance(expected, Comparable)) and (type(observed) is\n-                                                   type(expected)):\n-            for attribute in type(observed).__compare_fields__:\n-                try:\n-                    assert getattr(observed, attribute) == getattr(\n-                        expected, attribute), (\n-                        '{} mismatch: {}, {} != {}, {}'.format(\n-                            attribute,\n-                            observed.origin, observed.message,\n-                            expected.origin, expected.message))\n-                except AssertionError as ex:\n-                    messages += (str(ex) + '\\n\\n')\n-        else:\n-            assert observed_result == expected_result, '%s != %s' % (\n-                observed_result, expected_result)\n-\n-    if messages:\n-        raise AssertionError(messages)\n-\n-\n-class BaseTestHelper:\n+class BaseTestHelper(unittest.TestCase):\n     \"\"\"\n     This is a base class for all Bears' tests of coala's testing API.\n     \"\"\"\n \n+    def _assert_comparable_equal(self,\n+                                 observed_result,\n+                                 expected_result):\n+        \"\"\"\n+        Compares individual fields of the result objects using\n+        `__compare_fields__` of `coala_utils.Comparable` class\n+        and yields messages in case of an attribute mismatch.","author":{"login":"sangamcse","avatarUrl":"https://avatars2.githubusercontent.com/u/26381717?v=4","name":"Sangam Kumar"},"reactions":[],"createdAt":"2018-07-07T09:45:30Z","lastEditedAt":null,"updatedAt":"2018-07-07T09:45:30Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMDk1MDUyOA==","url":"https://github.com/coala/coala/pull/5564#discussion_r210950528","bodyText":"When running test_jinja2_templating (due to coala/coala-bears#2678) which isnt the best of test approaches, but far from the worst, here are my error results\n>               raise AssertionError(messages)\nE               AssertionError: 'Usin[68 chars]o XSS. Ensure autoescape=True to mitigate XSS vulnerabilities.' != 'Usin[68 chars]o XSS. Use autoescape=True to mitigate XSS vulnerabilities.'\nE               - Using jinja2 templates with autoescape=False is dangerous and can lead to XSS. Ensure autoescape=True to mitigate XSS vulnerabilities.\nE               ?                                                                                ^^ --\nE               + Using jinja2 templates with autoescape=False is dangerous and can lead to XSS. Use autoescape=True to mitigate XSS vulnerabilities.\nE               ?                                                                                ^\nE                : message_base mismatch.\n\n../coala/coalib/testing/LocalBearTestHelper.py:136: AssertionError\n\nNow how can I work out which of the five Result that was about?\nThis entire test system is fundamentally flawed.\ntest helpers should help diagose, not help write tests which are unable to be diagnosed.\nIf I change it to assert sorted(bear_output) == sorted(results), I see nothing because these Comparable objects are impossible for pytest to automatically inspect dynamically.  And self.assertCountEqual has also been busted: the output is a mess.  We are breaking the standard Python testing tools, and replacing them with something less helpful.\nSo at the moment, with pytest and unittest builtin systems not working on Result objects, we are reliant on this Comparable class and this helper to actually help decode the problem.  It doesnt do that before this patch, and this patch doesnt make it much better.","diffHunk":"@@ -1,45 +1,43 @@\n-from coala_utils.Comparable import Comparable\n+import unittest\n \n+from coala_utils.Comparable import Comparable\n \n-def _assert_comparable_equal(observed_result, expected_result):\n-    \"\"\"\n-    Compares individual fields of the result objects using\n-    `__compare_fields__` of `coala_utils.Comparable` class\n-    and yields messages in case of an attribute mismatch.\n-    \"\"\"\n \n-    if not len(observed_result) == len(expected_result):\n-        assert observed_result == expected_result, '%s != %s' % (\n-            observed_result, expected_result)\n-\n-    messages = ''\n-    for observed, expected in zip(observed_result, expected_result):\n-        if (isinstance(observed, Comparable) and\n-            isinstance(expected, Comparable)) and (type(observed) is\n-                                                   type(expected)):\n-            for attribute in type(observed).__compare_fields__:\n-                try:\n-                    assert getattr(observed, attribute) == getattr(\n-                        expected, attribute), (\n-                        '{} mismatch: {}, {} != {}, {}'.format(\n-                            attribute,\n-                            observed.origin, observed.message,\n-                            expected.origin, expected.message))\n-                except AssertionError as ex:\n-                    messages += (str(ex) + '\\n\\n')\n-        else:\n-            assert observed_result == expected_result, '%s != %s' % (\n-                observed_result, expected_result)\n-\n-    if messages:\n-        raise AssertionError(messages)\n-\n-\n-class BaseTestHelper:\n+class BaseTestHelper(unittest.TestCase):\n     \"\"\"\n     This is a base class for all Bears' tests of coala's testing API.\n     \"\"\"\n \n+    def _assert_comparable_equal(self,\n+                                 observed_result,\n+                                 expected_result):\n+        \"\"\"\n+        Compares individual fields of the result objects using\n+        `__compare_fields__` of `coala_utils.Comparable` class\n+        and raises messages in case of an attribute mismatch.\n+        \"\"\"\n+\n+        if not len(observed_result) == len(expected_result):\n+            self.assertEqual(observed_result, expected_result)\n+\n+        messages = []\n+        for observed, expected in zip(observed_result, expected_result):\n+            if (isinstance(observed, Comparable) and\n+                isinstance(expected, Comparable)) and (\n+                    Comparable.__eq__(expected, observed)):\n+                for attribute in observed.__compare_fields__:\n+                    try:\n+                        self.assertEqual(getattr(observed, attribute),\n+                                         getattr(expected, attribute),\n+                                         msg='{} mismatch.'.format(attribute))\n+                    except AssertionError as ex:\n+                        messages.append(str(ex))\n+            else:\n+                self.assertEqual(observed, expected)\n+\n+        if messages:\n+            raise AssertionError('\\n\\n'.join(message for message in messages))","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-17T15:39:27Z","lastEditedAt":null,"updatedAt":"2018-08-17T15:39:27Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMDk1MTA4MQ==","url":"https://github.com/coala/coala/pull/5564#discussion_r210951081","bodyText":"this makes the test suite reliant on pytest output, which differs whenever pytest finds a way to improve their messages.","diffHunk":"@@ -1,45 +1,43 @@\n-from coala_utils.Comparable import Comparable\n+import unittest\n \n+from coala_utils.Comparable import Comparable\n \n-def _assert_comparable_equal(observed_result, expected_result):\n-    \"\"\"\n-    Compares individual fields of the result objects using\n-    `__compare_fields__` of `coala_utils.Comparable` class\n-    and yields messages in case of an attribute mismatch.\n-    \"\"\"\n \n-    if not len(observed_result) == len(expected_result):\n-        assert observed_result == expected_result, '%s != %s' % (\n-            observed_result, expected_result)\n-\n-    messages = ''\n-    for observed, expected in zip(observed_result, expected_result):\n-        if (isinstance(observed, Comparable) and\n-            isinstance(expected, Comparable)) and (type(observed) is\n-                                                   type(expected)):\n-            for attribute in type(observed).__compare_fields__:\n-                try:\n-                    assert getattr(observed, attribute) == getattr(\n-                        expected, attribute), (\n-                        '{} mismatch: {}, {} != {}, {}'.format(\n-                            attribute,\n-                            observed.origin, observed.message,\n-                            expected.origin, expected.message))\n-                except AssertionError as ex:\n-                    messages += (str(ex) + '\\n\\n')\n-        else:\n-            assert observed_result == expected_result, '%s != %s' % (\n-                observed_result, expected_result)\n-\n-    if messages:\n-        raise AssertionError(messages)\n-\n-\n-class BaseTestHelper:\n+class BaseTestHelper(unittest.TestCase):\n     \"\"\"\n     This is a base class for all Bears' tests of coala's testing API.\n     \"\"\"\n \n+    def _assert_comparable_equal(self,\n+                                 observed_result,\n+                                 expected_result):\n+        \"\"\"\n+        Compares individual fields of the result objects using\n+        `__compare_fields__` of `coala_utils.Comparable` class\n+        and raises messages in case of an attribute mismatch.\n+        \"\"\"\n+\n+        if not len(observed_result) == len(expected_result):\n+            self.assertEqual(observed_result, expected_result)\n+\n+        messages = []\n+        for observed, expected in zip(observed_result, expected_result):\n+            if (isinstance(observed, Comparable) and\n+                isinstance(expected, Comparable)) and (\n+                    Comparable.__eq__(expected, observed)):\n+                for attribute in observed.__compare_fields__:\n+                    try:\n+                        self.assertEqual(getattr(observed, attribute),\n+                                         getattr(expected, attribute),\n+                                         msg='{} mismatch.'.format(attribute))\n+                    except AssertionError as ex:\n+                        messages.append(str(ex))","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-17T15:40:50Z","lastEditedAt":null,"updatedAt":"2018-08-17T15:40:50Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMDk1Mjc1NQ==","url":"https://github.com/coala/coala/pull/5564#discussion_r210952755","bodyText":"use textwrap.dedent to make this more readable.","diffHunk":"@@ -9,23 +7,41 @@ def test_good_assert_result_equal(self):\n         self.assert_result_equal(['a', 'b'], ['a', 'b'])\n \n     def test_inequality_assert_result_equal(self):\n-        with pytest.raises(AssertionError) as ex:\n+        with self.assertRaises(AssertionError) as ex:\n             self.assert_result_equal(['a', 'b'], ['a', 'b', None])\n-        assert '[\\'a\\', \\'b\\'] != [\\'a\\', \\'b\\', None]' in str(ex.value)\n+        self.assertEqual(\"Lists differ: ['a', 'b'] != ['a', 'b', None]\\n\\n\"\n+                         'Second list contains 1 additional elements.\\n'\n+                         'First extra element 2:\\n'\n+                         'None\\n\\n'\n+                         \"- ['a', 'b']\\n\"\n+                         \"+ ['a', 'b', None]\\n\"\n+                         '?          ++++++\\n', str(ex.exception))\n \n     def test_not_comparable_assert_result_equal(self):\n-        with pytest.raises(AssertionError) as ex:\n+        with self.assertRaises(AssertionError) as ex:\n             self.assert_result_equal(['a', 'b'], ['a', 'c'])\n-        assert '[\\'a\\', \\'b\\'] != [\\'a\\', \\'c\\']' in str(ex.value)\n+        self.assertEqual(\"'b' != 'c'\\n\"\n+                         '- b\\n'\n+                         '+ c\\n', str(ex.exception))\n \n     def test_comparable_assert_result_equal(self):\n         expected = [Result.from_values(origin='AnyBea',\n                                        message='This file has 2 lines.',\n                                        file='anyfile')]\n         observed = [Result.from_values(origin='AnyBear',\n-                                       message='This file has 2 lines.',\n+                                       message='This file has 3 lines.',\n                                        file='anyfile')]\n-        with pytest.raises(AssertionError) as ex:\n+        with self.assertRaises(AssertionError) as ex:\n             self.assert_result_equal(expected, observed)\n-        assert ('origin mismatch: AnyBea, This file has 2 lines. != AnyBear, '\n-                'This file has 2 lines.\\n\\n') == str(ex.value)\n+        self.assertEqual(\"'AnyBea' != 'AnyBear'\\n\"","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-17T15:46:01Z","lastEditedAt":null,"updatedAt":"2018-08-17T15:46:01Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMDk1Mjg2OA==","url":"https://github.com/coala/coala/pull/5564#discussion_r210952868","bodyText":"these tests now rely on the output of pytest - see note above about capturing the assertion and converting it into a string.\nThat isnt helpful.\nAnd these test cases are not helpful.\nWhat we need are tests of multiple complicated Result objects, and showing that the error message is helpful for real scenarios.\nAnd our messages should not use pytest's messages, because they are dumb -- they are automatic and can not know the context of the situation, or know what the bear debugger needs to see in order to be able to diagnose the problem.","diffHunk":"@@ -9,23 +7,41 @@ def test_good_assert_result_equal(self):\n         self.assert_result_equal(['a', 'b'], ['a', 'b'])\n \n     def test_inequality_assert_result_equal(self):\n-        with pytest.raises(AssertionError) as ex:\n+        with self.assertRaises(AssertionError) as ex:\n             self.assert_result_equal(['a', 'b'], ['a', 'b', None])\n-        assert '[\\'a\\', \\'b\\'] != [\\'a\\', \\'b\\', None]' in str(ex.value)\n+        self.assertEqual(\"Lists differ: ['a', 'b'] != ['a', 'b', None]\\n\\n\"","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-17T15:46:25Z","lastEditedAt":null,"updatedAt":"2018-08-17T15:46:25Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQwMjI0MDk5Mw==","url":"https://github.com/coala/coala/pull/5564#issuecomment-402240993","bodyText":"Ping @jayvdb, need your review.","diffHunk":null,"author":{"login":"sangamcse","avatarUrl":"https://avatars2.githubusercontent.com/u/26381717?v=4","name":"Sangam Kumar"},"reactions":[],"createdAt":"2018-07-03T17:50:59Z","lastEditedAt":null,"updatedAt":"2018-07-03T17:50:59Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQwNTAyNzk3Nw==","url":"https://github.com/coala/coala/pull/5564#issuecomment-405027977","bodyText":"@jayvdb, I think all the changes are done. Have a look, please. 😄","diffHunk":null,"author":{"login":"sangamcse","avatarUrl":"https://avatars2.githubusercontent.com/u/26381717?v=4","name":"Sangam Kumar"},"reactions":[],"createdAt":"2018-07-14T14:45:35Z","lastEditedAt":null,"updatedAt":"2018-07-14T14:45:35Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1535714203000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5585","number":5585,"title":"core/__init__.py: Add module docstrings","body":"Closes #5537\ncc @jayvdb @Makman2\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":11,"createdAt":"2018-07-01T21:40:05Z","updatedAt":"2018-08-31T11:16:43Z","closedAt":"2018-08-31T09:34:03Z","state":"merged","user":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4"},"owner":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4"},"assignee":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4"},"labels":[{"name":"area/core","color":"eb6420"},{"name":"area/documentation","color":"bfe5bf"},{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5585","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMzk1MTY5OA==","url":"https://github.com/coala/coala/pull/5585#discussion_r203951698","bodyText":"Run pydocstyle on this.  I believe it will complain about the Provides and lack of trailing . .","diffHunk":"@@ -0,0 +1,16 @@\n+\"\"\"\n+Provides an API for coala's NextGen-Core","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-07-20T06:49:06Z","lastEditedAt":null,"updatedAt":"2018-07-20T06:49:06Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMzk1MjM0MQ==","url":"https://github.com/coala/coala/pull/5585#discussion_r203952341","bodyText":"As a module docstring doesnt need to be a listing of components, these should be ordered to help the reader understand the module.\nAnd more prose used to help the reader understand what it is.\nI feel Core should be first, or the description of Core should mention it is about execution of bears.\nis Core about tasks or bears?\nIf bears are just a type of task, and other tasks could also be performed using Core, then the concept of a task should be mentioned in prose before mentioning any bears.","diffHunk":"@@ -0,0 +1,16 @@\n+\"\"\"\n+Provides an API for coala's NextGen-Core\n+\n+- ``Bear``: Base class for all the NextGen Bears.\n+- ``Core``: Maintains sessions for coala's execution.","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-07-20T06:53:02Z","lastEditedAt":null,"updatedAt":"2018-07-20T06:53:02Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNjA3MzYxNA==","url":"https://github.com/coala/coala/pull/5585#discussion_r206073614","bodyText":"It's both, it runs tasks offloaded by bears","diffHunk":"@@ -0,0 +1,16 @@\n+\"\"\"\n+Provides an API for coala's NextGen-Core\n+\n+- ``Bear``: Base class for all the NextGen Bears.\n+- ``Core``: Maintains sessions for coala's execution.","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzQ0ODUyOQ==","createdAt":"2018-08-04T08:06:22Z","content":"THUMBS_UP","user":{"login":"jayvdb","name":"John Vandenberg"}}],"createdAt":"2018-07-30T09:48:26Z","lastEditedAt":null,"updatedAt":"2018-07-30T09:48:26Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMTA0MjMxOA==","url":"https://github.com/coala/coala/pull/5585#discussion_r211042318","bodyText":"Please put DependencyBear on new line","diffHunk":"@@ -0,0 +1,21 @@\n+\"\"\"\n+The core package provides an API for coala's NextGen-Core.\n+\n+The ``Core`` module is responsible for maintaining sessions for coala's\n+execution and also running the tasks offloaded by the bears. The ``Bear``\n+module provides a base class for all the NextGen Bears.\n+\n+``FileBear`` provides a Bear base class to parallelize tasks for each file.\n+``ProjectBear`` on the other hand provides a base class for bears that run on\n+the whole codebase. ``DependencyBear`` is a Bear base class that parallelizes","author":{"login":"shreyans800755","avatarUrl":"https://avatars2.githubusercontent.com/u/3727351?v=4","name":"Shreyans"},"reactions":[],"createdAt":"2018-08-17T21:59:21Z","lastEditedAt":null,"updatedAt":"2018-08-17T21:59:21Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMTA0MjUyNQ==","url":"https://github.com/coala/coala/pull/5585#discussion_r211042525","bodyText":"It can then be used for caching results.","diffHunk":"@@ -0,0 +1,21 @@\n+\"\"\"\n+The core package provides an API for coala's NextGen-Core.\n+\n+The ``Core`` module is responsible for maintaining sessions for coala's\n+execution and also running the tasks offloaded by the bears. The ``Bear``\n+module provides a base class for all the NextGen Bears.\n+\n+``FileBear`` provides a Bear base class to parallelize tasks for each file.\n+``ProjectBear`` on the other hand provides a base class for bears that run on\n+the whole codebase. ``DependencyBear`` is a Bear base class that parallelizes\n+tasks for dependency results.\n+\n+The ``DependencyTracker`` module registers and\n+manages dependencies between objects. The circular dependency errors are\n+handled by ``CircularDependencyError``. The ``Graphs`` detects cyclicity\n+in dependency graphs and raises ``CircularDependencyError`` if found.\n+\n+``PersistentHash`` module generates a unique hash for every task object\n+first by pickling them and then using the pickled object to generate a sha1\n+hash. These persistent hashes can then be used for caching results.","author":{"login":"shreyans800755","avatarUrl":"https://avatars2.githubusercontent.com/u/3727351?v=4","name":"Shreyans"},"reactions":[],"createdAt":"2018-08-17T22:00:39Z","lastEditedAt":null,"updatedAt":"2018-08-17T22:00:39Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMzk4MzY2NQ==","url":"https://github.com/coala/coala/pull/5585#issuecomment-413983665","bodyText":"@jayvdb updated.\nNot sure why appveyor is failing though. I also don't see a rebuild button on appveyor is there no way to re run appveyor jobs except for a force push?","diffHunk":null,"author":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4","name":"Palash Nigam"},"reactions":[],"createdAt":"2018-08-17T20:46:13Z","lastEditedAt":"2018-08-17T20:47:09Z","updatedAt":"2018-08-17T20:47:09Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMzk5OTEwOQ==","url":"https://github.com/coala/coala/pull/5585#issuecomment-413999109","bodyText":"Not sure why appveyor is failing though. I also don't see a rebuild button on appveyor is there no way to re run appveyor jobs except for a force push?\n\nOnly admins have access to rebuild button. Go for force push.","diffHunk":null,"author":{"login":"shreyans800755","avatarUrl":"https://avatars2.githubusercontent.com/u/3727351?v=4","name":"Shreyans"},"reactions":[{"id":"MDg6UmVhY3Rpb24yODEwODQxMw==","createdAt":"2018-08-18T06:53:16Z","content":"THUMBS_UP","user":{"login":"palash25","name":"Palash Nigam"}}],"createdAt":"2018-08-17T22:02:08Z","lastEditedAt":null,"updatedAt":"2018-08-17T22:02:08Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxNDAxMjMxMA==","url":"https://github.com/coala/coala/pull/5585#issuecomment-414012310","bodyText":"Any time you see timeout is the log , assume it is our intermittent timeout problem, which is complicated by #5674 .  On AppVeyor, force push is all you can do until we get corobo back online and implement job restart commands in corobo.  But dont feel like you have to keep force pushing to get it green - if travis or circle pass, a note that appveyor timeouted is enough for us to keep the PR in the review queue even if appveyor is red.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yODEwODM5Mw==","createdAt":"2018-08-18T06:50:03Z","content":"THUMBS_UP","user":{"login":"palash25","name":"Palash Nigam"}}],"createdAt":"2018-08-17T23:31:56Z","lastEditedAt":null,"updatedAt":"2018-08-17T23:31:56Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxNDAzOTEwOQ==","url":"https://github.com/coala/coala/pull/5585#issuecomment-414039109","bodyText":"Updated @shreyans800755 @jayvdb","diffHunk":null,"author":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4","name":"Palash Nigam"},"reactions":[],"createdAt":"2018-08-18T07:38:44Z","lastEditedAt":null,"updatedAt":"2018-08-18T07:38:44Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1534073165000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5627","number":5627,"title":"Integrate FileFactory with the core","body":"For short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":26,"createdAt":"2018-07-11T18:35:17Z","updatedAt":"2018-08-12T11:26:05Z","closedAt":"2018-08-12T11:25:28Z","state":"merged","user":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4"},"owner":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4"},"labels":[{"name":"size/S","color":"B1CF0A"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5627","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMzg0OTEwMQ==","url":"https://github.com/coala/coala/pull/5627#discussion_r203849101","bodyText":"hm okay so right now we actually try to be smart and detect the encoding... maybe we should really offer different encodings when accessing FileFactory.string (or provide a separate decode function, while string is utf-8 by default). But let's save that for later","diffHunk":"@@ -267,16 +268,17 @@ def get_file_dict(filename_list, log_printer=None, allow_raw_files=False):\n     :return:                Reads the content of each file into a dictionary\n                             with filenames as keys.\n     \"\"\"\n-    file_dict = {}\n+    file_set = {}\n     for filename in filename_list:\n         try:\n-            with open(filename, 'r',\n-                      encoding=detect_encoding(filename)) as _file:","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"createdAt":"2018-07-19T19:46:17Z","lastEditedAt":null,"updatedAt":"2018-07-19T19:46:17Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMzg0OTIyMQ==","url":"https://github.com/coala/coala/pull/5627#discussion_r203849221","bodyText":"please a comment why we do this here :) (accessing .string without using its value)","diffHunk":"@@ -267,16 +268,17 @@ def get_file_dict(filename_list, log_printer=None, allow_raw_files=False):\n     :return:                Reads the content of each file into a dictionary\n                             with filenames as keys.\n     \"\"\"\n-    file_dict = {}\n+    file_set = {}\n     for filename in filename_list:\n         try:\n-            with open(filename, 'r',\n-                      encoding=detect_encoding(filename)) as _file:\n-                file_dict[filename] = tuple(_file.readlines())\n+            file_set[filename] = FileFactory(filename)\n+            file_set[filename].string","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"createdAt":"2018-07-19T19:46:47Z","lastEditedAt":null,"updatedAt":"2018-07-19T19:46:47Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMzg1NDczOQ==","url":"https://github.com/coala/coala/pull/5627#discussion_r203854739","bodyText":"ah only list works here? :)","diffHunk":"@@ -498,6 +500,8 @@ def yield_ignore_ranges(file_dict):\n         if file is None:\n             continue\n \n+        file = list(file.lines)","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"createdAt":"2018-07-19T20:06:41Z","lastEditedAt":null,"updatedAt":"2018-07-19T20:06:41Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMzg1NjM0Mg==","url":"https://github.com/coala/coala/pull/5627#discussion_r203856342","bodyText":"It's still a dict, isn't it?","diffHunk":"@@ -267,16 +268,17 @@ def get_file_dict(filename_list, log_printer=None, allow_raw_files=False):\n     :return:                Reads the content of each file into a dictionary\n                             with filenames as keys.\n     \"\"\"\n-    file_dict = {}\n+    file_set = {}","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"createdAt":"2018-07-19T20:12:45Z","lastEditedAt":null,"updatedAt":"2018-07-19T20:12:45Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMzg1NjY0Mw==","url":"https://github.com/coala/coala/pull/5627#discussion_r203856643","bodyText":"we could actually override __getitem__ for FileFactory, then you don't have to use lines explicitly ;) However, this is clearer anyway.","diffHunk":"@@ -221,7 +222,7 @@ def print_lines(console_printer,\n                               color=FILE_LINES_COLOR,\n                               end='')\n \n-        line = file_dict[sourcerange.file][i - 1].rstrip('\\n')\n+        line = file_dict[sourcerange.file].lines[i - 1].rstrip('\\n')","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"createdAt":"2018-07-19T20:13:56Z","lastEditedAt":null,"updatedAt":"2018-07-19T20:13:56Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMzg2MDE4OA==","url":"https://github.com/coala/coala/pull/5627#discussion_r203860188","bodyText":"file is now a FileFactory? This doesn't seem to be backwards compatible^^ Everybody has to change bears^^","diffHunk":"@@ -13,6 +13,6 @@ def run(self, filename, file):\n         \"\"\"\n         yield Result.from_values(\n             origin=self,\n-            message='This file has {count} lines.'.format(count=len(file)),\n+            message='This file has {count} lines.'.format(count=len(file.lines)),","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"createdAt":"2018-07-19T20:26:05Z","lastEditedAt":null,"updatedAt":"2018-07-19T20:26:05Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMzg2MDM5MQ==","url":"https://github.com/coala/coala/pull/5627#discussion_r203860391","bodyText":"I want to do the switch of actually using file factories in the nextgen-core. So internally we already work with them, but at bears side nothing changes.","diffHunk":"@@ -13,6 +13,6 @@ def run(self, filename, file):\n         \"\"\"\n         yield Result.from_values(\n             origin=self,\n-            message='This file has {count} lines.'.format(count=len(file)),\n+            message='This file has {count} lines.'.format(count=len(file.lines)),","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"createdAt":"2018-07-19T20:26:49Z","lastEditedAt":null,"updatedAt":"2018-07-19T20:26:49Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNDAwMjg3NA==","url":"https://github.com/coala/coala/pull/5627#discussion_r204002874","bodyText":"We talked about not calling it a file_dict and instead a file_set but that was a long time ago before GSoC I think. I will change it back to a file_dict for now and we can decide on a better name afterwards.","diffHunk":"@@ -267,16 +268,17 @@ def get_file_dict(filename_list, log_printer=None, allow_raw_files=False):\n     :return:                Reads the content of each file into a dictionary\n                             with filenames as keys.\n     \"\"\"\n-    file_dict = {}\n+    file_set = {}","author":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4","name":"Palash Nigam"},"createdAt":"2018-07-20T10:31:42Z","lastEditedAt":null,"updatedAt":"2018-07-20T10:31:42Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNDAwMzUxOA==","url":"https://github.com/coala/coala/pull/5627#discussion_r204003518","bodyText":"Its to invoke FileFactory.string in case of raw files to raise a UnicodeDecode error so that we can move into the except clause that handles the raw files. Its the only workaround we have for the old core. I think you suggested this to me.\nI will add a comment explaining it 👍","diffHunk":"@@ -267,16 +268,17 @@ def get_file_dict(filename_list, log_printer=None, allow_raw_files=False):\n     :return:                Reads the content of each file into a dictionary\n                             with filenames as keys.\n     \"\"\"\n-    file_dict = {}\n+    file_set = {}\n     for filename in filename_list:\n         try:\n-            with open(filename, 'r',\n-                      encoding=detect_encoding(filename)) as _file:\n-                file_dict[filename] = tuple(_file.readlines())\n+            file_set[filename] = FileFactory(filename)\n+            file_set[filename].string","author":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4","name":"Palash Nigam"},"createdAt":"2018-07-20T10:34:06Z","lastEditedAt":null,"updatedAt":"2018-07-20T10:34:06Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNDAwNzE3NQ==","url":"https://github.com/coala/coala/pull/5627#discussion_r204007175","bodyText":"you are right that's unnecessary tuple works too 😅\nRemoved list","diffHunk":"@@ -498,6 +500,8 @@ def yield_ignore_ranges(file_dict):\n         if file is None:\n             continue\n \n+        file = list(file.lines)","author":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4","name":"Palash Nigam"},"createdAt":"2018-07-20T10:51:32Z","lastEditedAt":null,"updatedAt":"2018-07-20T10:51:32Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNDAyMjIyMw==","url":"https://github.com/coala/coala/pull/5627#discussion_r204022223","bodyText":"So the FileFactories are all collected in get_file_dict and then they are passed around in the bears for analysis right. So before this the bears used to receive the file-contents.\nCan you explain this to me a little better? What would the bears receive now to run the analysis on whether it is FileFactory or FileFactory.lines? I don't know all the details of a coala run.\nIs there a part of the codebase where we can make changes so that all the bears receive only the file contents and not the objects so that we don't have to change the bears implementation individually, you know like a middleware between the collection of objects and the actual analysis?","diffHunk":"@@ -13,6 +13,6 @@ def run(self, filename, file):\n         \"\"\"\n         yield Result.from_values(\n             origin=self,\n-            message='This file has {count} lines.'.format(count=len(file)),\n+            message='This file has {count} lines.'.format(count=len(file.lines)),","author":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4","name":"Palash Nigam"},"createdAt":"2018-07-20T12:04:05Z","lastEditedAt":"2018-07-20T12:05:16Z","updatedAt":"2018-07-20T12:05:16Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNDEwNjUwMA==","url":"https://github.com/coala/coala/pull/5627#discussion_r204106500","bodyText":"Can you explain this to me a little better? What would the bears receive now to run the analysis on whether it is FileFactory or FileFactory.lines? I don't know all the details of a coala run.\n\nDefinitely FileFactory.lines for now. The old bears expect that currently.\n\nIs there a part of the codebase where we can make changes so that all the bears receive only the file contents and not the objects so that we don't have to change the bears implementation individually, you know like a middleware between the collection of objects and the actual analysis?\n\nYeah inside Processing.py. Instead of giving bears the file factory objects, give them file_factory.lines. I know we currently loose the lazy-loading capability with that, but that's easiest for now.\nIf you want to keep the lazy loading capabilities, we could write (like you suggested) some kind of \"middleware\", meaning we have a proxy dict object that gives access to file contents that works the same way as before for bears, but calls the right functions of FileFactory in the background.\nLike:\nclass FileDict:  # mimics dict\n    def __getitem__(self, filename):\n        return self._my_file_middlewares[filename]\n    #...\n\nclass FileMiddleware:\n    def __getitem__(self, lineindex):\n        return self._underlying_file_proxy.lines[lineindex]\n    #...","diffHunk":"@@ -13,6 +13,6 @@ def run(self, filename, file):\n         \"\"\"\n         yield Result.from_values(\n             origin=self,\n-            message='This file has {count} lines.'.format(count=len(file)),\n+            message='This file has {count} lines.'.format(count=len(file.lines)),","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"createdAt":"2018-07-20T16:54:36Z","lastEditedAt":null,"updatedAt":"2018-07-20T16:54:36Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNDEyNTkyMw==","url":"https://github.com/coala/coala/pull/5627#discussion_r204125923","bodyText":"fine with me 👍","diffHunk":"@@ -267,16 +268,17 @@ def get_file_dict(filename_list, log_printer=None, allow_raw_files=False):\n     :return:                Reads the content of each file into a dictionary\n                             with filenames as keys.\n     \"\"\"\n-    file_dict = {}\n+    file_set = {}","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"createdAt":"2018-07-20T18:05:27Z","lastEditedAt":null,"updatedAt":"2018-07-20T18:05:27Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNDEyNjI3OA==","url":"https://github.com/coala/coala/pull/5627#discussion_r204126278","bodyText":"Its to invoke FileFactory.string in case of raw files to raise a UnicodeDecode error so that we can move into the except clause that handles the raw files. Its the only workaround we have for the old core. I think you suggested this to me.\n\nI know, I just wanted to encourage you to explain it to others reading the code as well that are not into the topic ;)","diffHunk":"@@ -267,16 +268,17 @@ def get_file_dict(filename_list, log_printer=None, allow_raw_files=False):\n     :return:                Reads the content of each file into a dictionary\n                             with filenames as keys.\n     \"\"\"\n-    file_dict = {}\n+    file_set = {}\n     for filename in filename_list:\n         try:\n-            with open(filename, 'r',\n-                      encoding=detect_encoding(filename)) as _file:\n-                file_dict[filename] = tuple(_file.readlines())\n+            file_set[filename] = FileFactory(filename)\n+            file_set[filename].string","author":{"login":"Makman2","avatarUrl":"https://avatars3.githubusercontent.com/u/6023916?v=4","name":"Mischa Krüger"},"createdAt":"2018-07-20T18:06:44Z","lastEditedAt":null,"updatedAt":"2018-07-20T18:06:44Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQwNDI5MTY1OQ==","url":"https://github.com/coala/coala/pull/5627#issuecomment-404291659","bodyText":"These are the failing tests out of which the ignore ranges tests seems to be the toughest one to fix.\nFAIL tests/coalaCITest.py::coalaCITest::test_find_no_issues\nFAIL tests/coalaCITest.py::coalaCITest::test_find_no_issues_debug\nFAIL tests/coalaCITest.py::coalaCITest::test_section_ordering\nFAIL tests/coalaTest.py::coalaTest::test_coala_with_color\nFAIL tests/coalaTest.py::coalaTest::test_coala_without_color\nFAIL tests/output/ConsoleInteractionTest.py::ConsoleInteractionTest::test_print_results_multiple_ranges\nFAIL tests/processes/ProcessingTest.py::ProcessingTest::test_yield_ignore_ranges\nFAIL tests/results/result_actions/ShowPatchActionTest.py::ShowPatchActionTest::test_apply\nFAIL tests/testing/LocalBearTestHelperTest.py::LocalBearCheckResultsTest::test_bad_assertComparableObjectsEqual\nFAIL tests/testing/LocalBearTestHelperTest.py::LocalBearCheckResultsTest::test_good_assertComparableObjectsEqual","diffHunk":null,"author":{"login":"palash25","avatarUrl":"https://avatars0.githubusercontent.com/u/21367710?v=4","name":"Palash Nigam"},"createdAt":"2018-07-11T19:58:51Z","lastEditedAt":"2018-07-13T14:15:40Z","updatedAt":"2018-07-13T14:15:40Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1535939896000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5635","number":5635,"title":" .moban.yaml: Add CI check scripts","body":"Related to https://gitlab.com/coala/mobans/issues/65","comments":1,"createdAt":"2018-07-17T08:12:44Z","updatedAt":"2018-09-03T01:58:16Z","closedAt":null,"state":"open","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5635","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxNDU2MzA5Mg==","url":"https://github.com/coala/coala/pull/5635#discussion_r214563092","bodyText":"ci/check_unsupported.sh.jj2? CI failing https://travis-ci.org/coala/coala/jobs/406112373#L524","diffHunk":"@@ -59,3 +59,6 @@ targets:\n   - netlify.toml: docs/netlify.toml\n   - .misc/appveyor.yml: ci/appveyor.yml.jj2\n   - .misc/run_with_env.cmd: run_with_env.cmd\n+  - .misc/check_moban.sh: ci/check_moban.sh\n+  - .misc/check_setuptools.py: ci/check_setuptools.py\n+  - .misc/check_unsupported.sh: ci/check_unsupported.sh","author":{"login":"li-boxuan","avatarUrl":"https://avatars2.githubusercontent.com/u/25746010?v=4","name":"Boxuan Li"},"createdAt":"2018-09-03T01:58:16Z","lastEditedAt":null,"updatedAt":"2018-09-03T01:58:16Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQwNTQ5ODM2Mw==","url":"https://github.com/coala/coala/pull/5635#issuecomment-405498363","bodyText":"Depends on #5634","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-07-17T08:13:13Z","lastEditedAt":null,"updatedAt":"2018-07-17T08:13:13Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1536179209000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5648","number":5648,"title":"Smell.py: Fix docstring typo","body":"This fixes typo and changes Customer... to Customer {\nFixes #5364\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":4,"createdAt":"2018-07-21T10:41:10Z","updatedAt":"2018-09-05T20:26:49Z","closedAt":"2018-07-21T11:07:15Z","state":"merged","user":{"login":"Ishaan28malik","avatarUrl":"https://avatars3.githubusercontent.com/u/27343592?v=4"},"owner":{"login":"Ishaan28malik","avatarUrl":"https://avatars3.githubusercontent.com/u/27343592?v=4"},"labels":[{"name":"area/documentation","color":"bfe5bf"},{"name":"difficulty/newcomer","color":"65C8FF"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5648","comments":[]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1534985252000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5661","number":5661,"title":"changes ArgParser to ArgumentParser in doc strings","body":"Fixes #4188\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!\nFor issue #4188 . I had a earlier PR #5649 but don't know how to change commit messages so closing that.","comments":3,"createdAt":"2018-07-23T06:27:31Z","updatedAt":"2018-08-23T00:47:32Z","closedAt":null,"state":"open","user":{"login":"frunkad","avatarUrl":"https://avatars2.githubusercontent.com/u/33373582?v=4"},"owner":{"login":"frunkad","avatarUrl":"https://avatars2.githubusercontent.com/u/33373582?v=4"},"labels":[{"name":"process/wip","color":"fbca04"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5661","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwNTk1ODkwNg==","url":"https://github.com/coala/coala/pull/5661#discussion_r205958906","bodyText":"bad indentation","diffHunk":"@@ -469,8 +469,8 @@ def gather_configuration(acquire_settings,\n     :param log_printer:      The log printer to use for logging. The log level\n                              will be adjusted to the one given by the section.\n     :param arg_list:         CLI args to use\n-    :param arg_parser:       Instance of ArgParser that is used to parse\n-                             none-setting arguments.\n+    :param arg_parser:       Instance of argparse.ArgumentParser that is used\n+                            to parse none-setting arguments.","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-07-29T02:28:49Z","lastEditedAt":null,"updatedAt":"2018-07-29T02:28:49Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQwODYzMDY5MA==","url":"https://github.com/coala/coala/pull/5661#issuecomment-408630690","bodyText":"@jayvdb done!","diffHunk":null,"author":{"login":"frunkad","avatarUrl":"https://avatars2.githubusercontent.com/u/33373582?v=4","name":"Darshan Baid"},"createdAt":"2018-07-28T19:43:27Z","lastEditedAt":null,"updatedAt":"2018-07-28T19:43:27Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQwODY4OTM2Mg==","url":"https://github.com/coala/coala/pull/5661#issuecomment-408689362","bodyText":"Sorry missed that! Now done @jayvdb","diffHunk":null,"author":{"login":"frunkad","avatarUrl":"https://avatars2.githubusercontent.com/u/33373582?v=4","name":"Darshan Baid"},"createdAt":"2018-07-29T16:33:07Z","lastEditedAt":null,"updatedAt":"2018-07-29T16:33:07Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQwOTQzMzg1OA==","url":"https://github.com/coala/coala/pull/5661#issuecomment-409433858","bodyText":"#5661 (review)\nnot done","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-01T03:01:20Z","lastEditedAt":null,"updatedAt":"2018-08-01T03:01:20Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1536087188000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5436","number":5436,"title":"ConfigurationGathering.py: Change COAFILE_OUTPUT to refer to .coafile","body":"This changes COAFILE_OUTPUT to refer to .coafile\nCloses #5417\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":6,"createdAt":"2018-05-02T11:30:35Z","updatedAt":"2018-09-04T18:53:08Z","closedAt":null,"state":"open","user":{"login":"PrajwalM2212","avatarUrl":"https://avatars3.githubusercontent.com/u/30733262?v=4"},"owner":{"login":"PrajwalM2212","avatarUrl":"https://avatars3.githubusercontent.com/u/30733262?v=4"},"assignee":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"area/CLI","color":"006b75"},{"name":"area/config","color":"fbca04"},{"name":"difficulty/low","color":"207de5"},{"name":"importance/low","color":"70E870"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5436","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NTk5MDQ5Ng==","url":"https://github.com/coala/coala/pull/5436#discussion_r185990496","bodyText":"this will be used when loading the get_system_coafile if it returns the file named default_coafile","diffHunk":"@@ -16,6 +16,13 @@\n from coalib.settings.Setting import Setting, path\n from string import Template\n \n+COARC_OUTPUT = Template('$type \\'$file\\' $found!\\n'\n+                        'Here\\'s what you can do:\\n'\n+                        '*add `--config .coarc --save` '","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-05-04T04:48:54Z","lastEditedAt":null,"updatedAt":"2018-05-04T04:48:54Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NTk5MDUyMg==","url":"https://github.com/coala/coala/pull/5436#discussion_r185990522","bodyText":"Also where is the .coarc located?","diffHunk":"@@ -16,6 +16,13 @@\n from coalib.settings.Setting import Setting, path\n from string import Template\n \n+COARC_OUTPUT = Template('$type \\'$file\\' $found!\\n'\n+                        'Here\\'s what you can do:\\n'\n+                        '*add `--config .coarc --save` '","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-05-04T04:49:21Z","lastEditedAt":null,"updatedAt":"2018-05-04T04:49:21Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NjI0NjEzOA==","url":"https://github.com/coala/coala/pull/5436#discussion_r186246138","bodyText":"I should change Constants.default_coafile to default_coafile as Constants.default_coafile refers to .coafile.","diffHunk":"@@ -132,11 +138,17 @@ def load_config_file(filename, log_printer=None, silent=False):\n                                 .substitute(type='Default coafile',","author":{"login":"PrajwalM2212","avatarUrl":"https://avatars3.githubusercontent.com/u/30733262?v=4","name":"PRAJWAL M"},"createdAt":"2018-05-05T00:19:38Z","lastEditedAt":null,"updatedAt":"2018-05-05T00:19:38Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE4NjI0ODU3NA==","url":"https://github.com/coala/coala/pull/5436#discussion_r186248574","bodyText":"lets fix this confusion first : #5440","diffHunk":"@@ -132,11 +138,17 @@ def load_config_file(filename, log_printer=None, silent=False):\n                                 .substitute(type='Default coafile',\n                                             file=Constants.default_coafile,\n                                             found='not found'))\n-            else:\n+            elif os.path.basename(filename) == Constants.default_coafile:","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-05-05T01:20:19Z","lastEditedAt":null,"updatedAt":"2018-05-05T01:20:19Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM4NTk5MzczOA==","url":"https://github.com/coala/coala/pull/5436#issuecomment-385993738","bodyText":"@jayvdb  COAFILE_OUTPUT is used only in the function load_config_file. The message gives instructions to create a .coafile as --save creates a .coafile .\n\nBut the function load_config_file is called from load_configuration function .\n\nAs you said load_config_file is ironically called only for loading User-Wide and System-Wide coafile.\nSo now you wanted me to change the warning and error messages in load_config_file to show how to create a User-Wide or System-Wide coafile instead of a .coafile right ?","diffHunk":null,"author":{"login":"PrajwalM2212","avatarUrl":"https://avatars3.githubusercontent.com/u/30733262?v=4","name":"PRAJWAL M"},"createdAt":"2018-05-02T14:18:34Z","lastEditedAt":"2018-05-02T14:27:09Z","updatedAt":"2018-05-02T14:27:09Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM4NjE5MzIyNA==","url":"https://github.com/coala/coala/pull/5436#issuecomment-386193224","bodyText":"@jayvdb  It has 2 invocations . One is forsystem/default coafile and other is for user coafile. I have changed the else part to accommodate for user or .coarc and left the if part as it is .","diffHunk":null,"author":{"login":"PrajwalM2212","avatarUrl":"https://avatars3.githubusercontent.com/u/30733262?v=4","name":"PRAJWAL M"},"createdAt":"2018-05-03T05:12:20Z","lastEditedAt":"2018-05-03T05:13:22Z","updatedAt":"2018-05-03T05:13:22Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM4NjY2ODc0MQ==","url":"https://github.com/coala/coala/pull/5436#issuecomment-386668741","bodyText":"@jayvdb  Can you check the PR now ? The CI is failing due to test coverage.","diffHunk":null,"author":{"login":"PrajwalM2212","avatarUrl":"https://avatars3.githubusercontent.com/u/30733262?v=4","name":"PRAJWAL M"},"createdAt":"2018-05-04T17:19:35Z","lastEditedAt":null,"updatedAt":"2018-05-04T17:19:35Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQwODU3Mzc1Mg==","url":"https://github.com/coala/coala/pull/5436#issuecomment-408573752","bodyText":"ping @PrajwalM2212 .  #5440 is ready to roll.  Could be a simple extra commit in this PR.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-07-28T01:36:55Z","lastEditedAt":null,"updatedAt":"2018-07-28T01:36:55Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxODQ3ODUwMw==","url":"https://github.com/coala/coala/pull/5436#issuecomment-418478503","bodyText":"@jayvdb I have sent PR for #5440 . I will update this after that is merged.","diffHunk":null,"author":{"login":"PrajwalM2212","avatarUrl":"https://avatars3.githubusercontent.com/u/30733262?v=4","name":"PRAJWAL M"},"createdAt":"2018-09-04T18:53:08Z","lastEditedAt":"2018-09-04T18:53:23Z","updatedAt":"2018-09-04T18:53:23Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1533963947000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5475","number":5475,"title":"Formatting: Add tastes to `FileLength` aspect","body":"This adds min_file_length and include_blank_lines\nas tastes to FileLength aspect.\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":14,"createdAt":"2018-05-22T08:50:35Z","updatedAt":"2018-08-11T05:05:47Z","closedAt":"2018-08-11T05:05:47Z","state":"merged","user":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4"},"owner":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4"},"assignee":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4"},"labels":[{"name":"area/aspects","color":"000000"},{"name":"area/documentation","color":"bfe5bf"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5475","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDM5NDQwMzM4Mg==","url":"https://github.com/coala/coala/pull/5475#issuecomment-394403382","bodyText":"The description of minimum line length is not clear.\nIn some languages will it always return 1 since it is possible to combine multiple lines all into one line.\nFor example, what would the min line length be of this code sample?\nfunction fizzBuzz()\n{ \t\n   //for each number between 1 &100\n   for(var i=1;i<=100;i++)\n   {\n      //print Fizz if divisible by 3\n      if(i%3 === 0)\n      {\n         print('Fizz'); \t\n      }\n      //print Buzz if divisible by 5\n      if(i%5 === 0)\n      {\n         print('Buzz');\n      }\n      // otherwise print the number\n      if(i%3 !== 0 && i%5 !== 0)\n      {\n        print(i);\n      }\n   }\n }","diffHunk":null,"author":{"login":"jschwarzwalder","avatarUrl":"https://avatars0.githubusercontent.com/u/8946787?v=4","name":"Jami Schwarzwalder"},"reactions":[],"createdAt":"2018-06-04T15:47:16Z","lastEditedAt":"2018-06-04T21:08:49Z","updatedAt":"2018-06-04T21:08:49Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM5NTAwMTI5Mg==","url":"https://github.com/coala/coala/pull/5475#issuecomment-395001292","bodyText":"@jschwarzwalder you are exactly on point. This is the thing me and John have been debating on, all this time. Most probably, implementation of line-counting algorithms will be required to correctly predict the complexity of the code and accordingly show the number of lines.\nI had proposed min_line_length and include_blank_lines tastes as part of the FileLength aspect considering the current design of the bear (LineCountBear https://github.com/coala/coala-bears/blob/master/bears/general/LineCountBear.py) and it feels now that the bear itself needs a redesign on this plus supporting aspects on top of it.\nI think you should see coala/cEPs#148 (comment) and furthermore coala/cEPs#148 (comment) to know more.\nLay your opinions too on this.\nAnd IMO this PR needs to be closed.","diffHunk":null,"author":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4","name":"Pareksha Manchanda"},"reactions":[],"createdAt":"2018-06-06T09:12:24Z","lastEditedAt":null,"updatedAt":"2018-06-06T09:12:24Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM5NTk3MzAwNg==","url":"https://github.com/coala/coala/pull/5475#issuecomment-395973006","bodyText":"While these mins and maxs are not very well designed, I think it is worthwhile keeping min_file_length and discarding include_blank_lines.\nmin_file_length can be used to reject really short files, especially 0 line files.  It isnt an especially useful tool, but it isnt a bad concept, and has some limited usefulness.\nAlso this min only compliments the existing max, so we are not making the problem 'worse' that it already is.\nHowever as we've established, include_blank_lines creates new problems, and the user will want other tastes as include_blank_lines is fairly limited, and we can not implement them easily.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-06-09T14:21:11Z","lastEditedAt":null,"updatedAt":"2018-06-09T14:21:11Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM5NjAxODE0Ng==","url":"https://github.com/coala/coala/pull/5475#issuecomment-396018146","bodyText":"Yes, min_file_length is compatible with the present usability of the bear and so, it is ok for now. I also agree that include_blank_lines is sort of problematic for now. Once the bear is migrated, we can think of stretching its functionality.\nI have removed include_blank_lines. Please review 😃","diffHunk":null,"author":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4","name":"Pareksha Manchanda"},"reactions":[],"createdAt":"2018-06-10T03:55:33Z","lastEditedAt":null,"updatedAt":"2018-06-10T03:55:33Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM5NjU4Mjc0MA==","url":"https://github.com/coala/coala/pull/5475#issuecomment-396582740","bodyText":"@pareksha , please remove \"This is part of GSoC 2018 project.\" (or any other reference to GSoC) from commit message, and create issues for your PRs, and using them in your commit messages.\nThat information is not relevant to the reader of the commit.\nYour issues should refer to the cEP PR, or to the cEP once it is merged.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-06-12T13:07:59Z","lastEditedAt":null,"updatedAt":"2018-06-12T13:07:59Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM5Nzc5NTU2Mw==","url":"https://github.com/coala/coala/pull/5475#issuecomment-397795563","bodyText":"If the only use case currently is to detect if the file length is 0, then why not make a taste for is_empty?\nI would still have many questions about what min_file_length means. If we include it, it should qualify what would be counted.\nIf the min_file_length ignores comments and blank lines that can be helpful to know how many actual lines of code exist, but without both those qualifiers It might be too ambiguous for developers to use.\nDoes it minify the code? Does it simply count the current number of existing lines? Does it give suggestions for potential ways to reduce the number of lines with things the ternary operations?","diffHunk":null,"author":{"login":"jschwarzwalder","avatarUrl":"https://avatars0.githubusercontent.com/u/8946787?v=4","name":"Jami Schwarzwalder"},"reactions":[],"createdAt":"2018-06-16T07:59:16Z","lastEditedAt":null,"updatedAt":"2018-06-16T07:59:16Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM5Nzg0ODkzOQ==","url":"https://github.com/coala/coala/pull/5475#issuecomment-397848939","bodyText":"Python has a requirement of __init__.py files, and these files are often empty. c.f. #2821\nA min length of 1 will break coala repos, but we could fix that by adding a module docstring to every empty __init__.py.  c.f. #5359","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-06-17T01:44:49Z","lastEditedAt":null,"updatedAt":"2018-06-17T01:44:49Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM5Nzg0OTEzMg==","url":"https://github.com/coala/coala/pull/5475#issuecomment-397849132","bodyText":"max_file_length defines a rule for a hard physical line count maximum.\nThe LineCountBear would implement this taste by detecting files which exceed it, and producing an error.  That bear is a detection bear, not a fixing/suggestion bear.\nWe do not have any bear which attempts to fix files which exceed a maximum line count.  That would be difficult.\nWe do not have any bear which attempts to fix files which have insufficient line count.  However this is more feasible to implement.  We could have a bear which automatically fixed a minimum line count for Python, by automatically adding a dummy docstring.  It would also be possible to fix it for any scripting language by adding a 'hashbang', but that would be dumb as the otherwise empty file probably isn't runnable.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNTMzNDM0Mw==","createdAt":"2018-06-20T06:28:55Z","content":"THUMBS_UP","user":{"login":"pareksha","name":"Pareksha Manchanda"}}],"createdAt":"2018-06-17T01:52:16Z","lastEditedAt":"2018-06-17T01:52:51Z","updatedAt":"2018-06-17T01:52:51Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM5Nzg0OTE3OQ==","url":"https://github.com/coala/coala/pull/5475#issuecomment-397849179","bodyText":"Also please investigate the suggested_values.  What is it used for?  Why are you using this specific value for it.  It is not intuitive.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-06-17T01:54:03Z","lastEditedAt":null,"updatedAt":"2018-06-17T01:54:03Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM5OTMxMzY0MQ==","url":"https://github.com/coala/coala/pull/5475#issuecomment-399313641","bodyText":"suggested_values are more or less used to suggest values (not all values that the user can put, but what the user should put to get the desirable/better results) as I see here https://github.com/coala/coala/blob/master/coalib/bearlib/aspects/Formatting.py#L253 and at many other places too. What I meant here by (1,) was that the values can be 1 or any other int but now I am also feeling that there should be more than one suggested value (and not just the default value). So, I think suggested_values in both min_file_length and max_file_length need to be changed to have more integers.\nHow about (499, 999, 4999, 9999,) in max_file_length\nand (1, 50, 100,) in min_file_length as suggested_values?","diffHunk":null,"author":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4","name":"Pareksha Manchanda"},"reactions":[],"createdAt":"2018-06-22T03:58:11Z","lastEditedAt":null,"updatedAt":"2018-06-22T03:58:11Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1535861558000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5482","number":5482,"title":".ci/appveyor.yml: Add Python 3.6 jobs","body":"For short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":8,"createdAt":"2018-05-26T14:09:25Z","updatedAt":"2018-09-02T04:12:38Z","closedAt":"2018-09-02T04:12:38Z","state":"merged","user":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"owner":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4"},"labels":[{"name":"process/pending review","color":"bfe5bf"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5482","comments":[{"id":"MDEyOklzc3VlQ29tbWVudDM5Nzg1NTM0Mg==","url":"https://github.com/coala/coala/pull/5482#issuecomment-397855342","bodyText":"Ideally we do this with coala/coala-bears#2509 , but that is blocked.  If upstream PR pyupio/safety#36 doesnt get updated, we may want to put more effort into unblocking this situation.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-06-17T05:14:23Z","lastEditedAt":null,"updatedAt":"2018-06-17T05:14:23Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1533997044000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5504","number":5504,"title":"language: Add `string_delimiter_escape` to language definitions","body":"This adds characters used to escape delimiters/quotes\nfor each language in their respective language\ndefinitions.\nThis is part of Convert Bear To Aspects GSoC project.\n\nFor short term contributors: we understand that getting your commits well\ndefined like we require is a hard task and takes some learning. If you\nlook to help without wanting to contribute long term there's no need\nfor you to learn this. Just drop us a message and we'll take care of brushing\nup your stuff for merge!\nChecklist\n\n I read the commit guidelines and I've followed\nthem.\n I ran coala over my code locally. (All commits have to pass\nindividually. It is not sufficient to have \"fixup commits\" on your PR,\nour bot will still report the issues for the previous commit.) You will\nlikely receive a lot of bot comments and build failures if coala does not\npass on every single commit!\n\nAfter you submit your pull request, DO NOT click the 'Update Branch' button.\nWhen asked for a rebase, consult coala.io/rebase\ninstead.\nPlease consider helping us by reviewing other peoples pull requests as well:\n\npick up any PR at https://coala.io/review\nreview it (check https://coala.io/reviewing for more info)\nif you are sure that it needs work, use corobo mark wip <URL> to get it out\nof the review queue.\n\nThe more you review, the more your score will grow at coala.io and we will\nreview your PRs faster!","comments":10,"createdAt":"2018-06-08T10:08:14Z","updatedAt":"2018-08-11T14:17:24Z","closedAt":"2018-08-11T14:17:11Z","state":"merged","user":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4"},"owner":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4"},"assignee":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4"},"labels":[{"name":"area/aspects","color":"000000"},{"name":"area/documentation","color":"bfe5bf"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5504","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTQxNjMzNw==","url":"https://github.com/coala/coala/pull/5504#discussion_r209416337","bodyText":"We can merge this if they all change to being dictionaries which describe how to escape each of the items in string_delimiters\nstring_delimiter_escape = {'\"': '\\\\\"'}","diffHunk":"@@ -19,3 +19,4 @@ class C:\n         '#undef', '#ifdef', '#ifndef', '#if', '#endif', '#else', '#elif',\n         '#line', '#pragma']\n     special_chars = list(r'+-*/.;\\,()[]{}\\=<>|&^~?%!')\n+    escape_quotes = '\\\"',","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNzc4MzIzMQ==","createdAt":"2018-08-11T04:52:28Z","content":"THUMBS_UP","user":{"login":"pareksha","name":"Pareksha Manchanda"}}],"createdAt":"2018-08-11T04:44:32Z","lastEditedAt":"2018-08-11T05:08:35Z","updatedAt":"2018-08-11T05:08:35Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM5NjEzNDU0NQ==","url":"https://github.com/coala/coala/pull/5504#issuecomment-396134545","bodyText":"@jayvdb what I want this field to have is the escape_quotes by which I literally mean escaping the quote. Best illustrated with the example where printing \"This is \\\"cool\\\" in python and \"This is \"\"cool\"\"\" in Fortran both output This is \"cool\". So, basically \\\" in Python and \"\" both are used for escaping \" quotes. This is how both fields relate. Do let me now if you agree with me so that I can proceed or the design needs to change.\nOne more question, where to add the documentation for escape_quotes (Also let me know whether the name feels right to you)?","diffHunk":null,"author":{"login":"pareksha","avatarUrl":"https://avatars1.githubusercontent.com/u/32385407?v=4","name":"Pareksha Manchanda"},"reactions":[],"createdAt":"2018-06-11T06:22:22Z","lastEditedAt":"2018-06-11T06:23:27Z","updatedAt":"2018-06-11T06:23:27Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQwMDIwMTA4NQ==","url":"https://github.com/coala/coala/pull/5504#issuecomment-400201085","bodyText":"Documentation should be done according to pep 257","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-06-26T07:00:31Z","lastEditedAt":null,"updatedAt":"2018-06-26T07:00:31Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQwMTAwNjkyMg==","url":"https://github.com/coala/coala/pull/5504#issuecomment-401006922","bodyText":"Blocked on a decent language definition for at least Tcl, possibly m4 and VB #5578 , so that we can better see how escaping works.  Also we're finding lots of implicit limitations, which maybe can not be solved easily, but we can make them explicit limitations so we know we cant support certain languages due to properties of the language. (And this will also help the quickstart green project, as they can skip relevant bears for languages which it is unable to parse at all)","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-06-28T11:43:27Z","lastEditedAt":null,"updatedAt":"2018-06-28T11:43:27Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1534562396000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5505","number":5505,"title":"LocalBearTestHelper.py: Inherit from `BaseTestHelper`","body":"This adds BaseTestHelper class, base class of all bears'\ntests, to the LocalBearTestHelper.\nRelated to https://gitlab.com/coala/GSoC/GSoC-2018/issues/332\nCloses #5501","comments":3,"createdAt":"2018-06-08T18:31:22Z","updatedAt":"2018-08-18T03:19:56Z","closedAt":null,"state":"open","user":{"login":"sangamcse","avatarUrl":"https://avatars2.githubusercontent.com/u/26381717?v=4"},"owner":{"login":"sangamcse","avatarUrl":"https://avatars2.githubusercontent.com/u/26381717?v=4"},"assignee":{"login":"sangamcse","avatarUrl":"https://avatars2.githubusercontent.com/u/26381717?v=4"},"labels":[{"name":"area/tests","color":"bfd4f2"},{"name":"process/wip","color":"fbca04"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5505","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDc4NzAwMw==","url":"https://github.com/coala/coala/pull/5505#discussion_r194787003","bodyText":"this is a backwards incompatible change.\nall test classes in the bears, and anywhere else that has used LocalBearTestHelper, become broken if this is merged.  They all need to be rewritten, just like LocalBearTestHelper in this patch has needed to be completely rewritten.\nMost features of pytest that we want to use co-exist nicely with unittest classes.\nhttps://github.com/pytest-dev/pytest/blob/master/doc/en/unittest.rst#pytest-features-in-unittesttestcase-subclasses\nhttps://pypi.org/project/pytest-restrict/ explicitly supports unittest classes; that is what it is used for ... enforcing unittest classes when Django developers are using pytest, and should be using their customised Django unittest sub-classes.\nThat said, it is in the cEP (https://github.com/coala/cEPs/pull/149/files#diff-f29c16068974a5d9aff2fdeb6295bfdeR51), and we can deal with bears being broken while it is being patched, so this is feasible, but it is not desirable IMO without a good reason for why we are unnecessarily creating a breakage.","diffHunk":"@@ -101,7 +100,7 @@ def get_results(local_bear,\n         return bear_output\n \n \n-class LocalBearTestHelper(unittest.TestCase):\n+class LocalBearTestHelper(BaseTestHelper):","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-06-12T15:35:18Z","lastEditedAt":"2018-06-12T15:40:19Z","updatedAt":"2018-06-12T15:40:19Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDc5MjM0Mw==","url":"https://github.com/coala/coala/pull/5505#discussion_r194792343","bodyText":"Two of the features I find most useful, namely parametrization and fixtures, do not work with unittest. That's why we want to get rid of it.\nBut I see the difficulty of introducing this change into an existing test suite. @sangamcse do you think it's feasible to keep the unittest dependency for now and still use the base class?","diffHunk":"@@ -101,7 +100,7 @@ def get_results(local_bear,\n         return bear_output\n \n \n-class LocalBearTestHelper(unittest.TestCase):\n+class LocalBearTestHelper(BaseTestHelper):","author":{"login":"NiklasMM","avatarUrl":"https://avatars1.githubusercontent.com/u/1924002?v=4","name":"Niklas"},"reactions":[],"createdAt":"2018-06-12T15:49:09Z","lastEditedAt":null,"updatedAt":"2018-06-12T15:49:09Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDg1NTc5Mw==","url":"https://github.com/coala/coala/pull/5505#discussion_r194855793","bodyText":"In this case, only class name has changed which is done by adding Test as suffix to the class name. And all bears' tests has Test as suffix to their test class name\n\nThey all need to be rewritten, just like LocalBearTestHelper in this patch has needed to be completely rewritten.","diffHunk":"@@ -101,7 +100,7 @@ def get_results(local_bear,\n         return bear_output\n \n \n-class LocalBearTestHelper(unittest.TestCase):\n+class LocalBearTestHelper(BaseTestHelper):","author":{"login":"sangamcse","avatarUrl":"https://avatars2.githubusercontent.com/u/26381717?v=4","name":"Sangam Kumar"},"reactions":[],"createdAt":"2018-06-12T19:08:49Z","lastEditedAt":"2018-06-12T19:11:43Z","updatedAt":"2018-06-12T19:11:43Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDg1OTQwMw==","url":"https://github.com/coala/coala/pull/5505#discussion_r194859403","bodyText":"I tried testing coala-bears locally. All tests passed except MarkdownBear.\n\nall test classes in the bears, and anywhere else that has used LocalBearTestHelper, become broken if this is merged.","diffHunk":"@@ -101,7 +100,7 @@ def get_results(local_bear,\n         return bear_output\n \n \n-class LocalBearTestHelper(unittest.TestCase):\n+class LocalBearTestHelper(BaseTestHelper):","author":{"login":"sangamcse","avatarUrl":"https://avatars2.githubusercontent.com/u/26381717?v=4","name":"Sangam Kumar"},"reactions":[],"createdAt":"2018-06-12T19:22:24Z","lastEditedAt":null,"updatedAt":"2018-06-12T19:22:24Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NDk2MjY2NA==","url":"https://github.com/coala/coala/pull/5505#discussion_r194962664","bodyText":"Another idea would be to deprecate the existing LocalBearTestHelper, leave it as it is now and create a new one, which is based on the new base class and can be rolled out step by step.","diffHunk":"@@ -101,7 +100,7 @@ def get_results(local_bear,\n         return bear_output\n \n \n-class LocalBearTestHelper(unittest.TestCase):\n+class LocalBearTestHelper(BaseTestHelper):","author":{"login":"NiklasMM","avatarUrl":"https://avatars1.githubusercontent.com/u/1924002?v=4","name":"Niklas"},"reactions":[],"createdAt":"2018-06-13T05:53:38Z","lastEditedAt":null,"updatedAt":"2018-06-13T05:53:38Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTAwMjI2Nw==","url":"https://github.com/coala/coala/pull/5505#discussion_r195002267","bodyText":"@jayvdb, you are right. I tried to test coala-bears by cloning this branch in another venv in my system. It collected 212 test items instead of 856 test items. So it will break coala-bears test if we go on directly with this changes.\n\nall test classes in the bears, and anywhere else that has used LocalBearTestHelper, become broken if this is merged.\n\nI agree with @NiklasMM. We can go on by creating new one, deprecating the existing LocalBearTestHelper if you all agree.","diffHunk":"@@ -101,7 +100,7 @@ def get_results(local_bear,\n         return bear_output\n \n \n-class LocalBearTestHelper(unittest.TestCase):\n+class LocalBearTestHelper(BaseTestHelper):","author":{"login":"sangamcse","avatarUrl":"https://avatars2.githubusercontent.com/u/26381717?v=4","name":"Sangam Kumar"},"reactions":[],"createdAt":"2018-06-13T08:52:19Z","lastEditedAt":null,"updatedAt":"2018-06-13T08:52:19Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTAxMDkzNA==","url":"https://github.com/coala/coala/pull/5505#discussion_r195010934","bodyText":"@Makman2, your opinion?","diffHunk":"@@ -101,7 +100,7 @@ def get_results(local_bear,\n         return bear_output\n \n \n-class LocalBearTestHelper(unittest.TestCase):\n+class LocalBearTestHelper(BaseTestHelper):","author":{"login":"sangamcse","avatarUrl":"https://avatars2.githubusercontent.com/u/26381717?v=4","name":"Sangam Kumar"},"reactions":[],"createdAt":"2018-06-13T09:17:25Z","lastEditedAt":null,"updatedAt":"2018-06-13T09:17:25Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTAxOTE2MQ==","url":"https://github.com/coala/coala/pull/5505#discussion_r195019161","bodyText":"@NiklasMM , fixtures do work, with a slightly different mechanism for some types of fixtures.\nsee https://github.com/pytest-dev/pytest/blob/master/doc/en/unittest.rst#mixing-pytest-fixtures-into-unittesttestcase-subclasses-using-marks\nand git grep fixture tests in coala-core repo.\nwrt parameterisation, and even fixtures, I didnt see the rationale given in the cEP for how those will be used to improve bear testing.  I would argue that https://github.com/wolever/parameterized is as good a solution which works well for all test frameworks.  We already have a complex set of pytest plugins, and already use testfixtures, so an additional test dependency isnt a new complexity problem.\nAnyway, my intention isnt to re-litigate that.  I am only commenting because of the huge breakage.\nLeaving the existing unittest class as-is, and deprecating it, will reduce the risk substantially.  And then at the end of the project the huge rewrite of bear tests can happen, and it wont matter if there are some bear tests which are not migrated to pytest-only style for reasons not yet predicted.\nIf the immediate goal is only to enforce a common test base class, that can be achieved by changing this class to inherit from both:\nclass LocalBearTestHelper(BaseTestHelper, unittest.TestCase):\n    ...","diffHunk":"@@ -101,7 +100,7 @@ def get_results(local_bear,\n         return bear_output\n \n \n-class LocalBearTestHelper(unittest.TestCase):\n+class LocalBearTestHelper(BaseTestHelper):","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNTA0MDc1MQ==","createdAt":"2018-06-13T16:42:36Z","content":"THUMBS_UP","user":{"login":"sangamcse","name":"Sangam Kumar"}}],"createdAt":"2018-06-13T09:43:44Z","lastEditedAt":null,"updatedAt":"2018-06-13T09:43:44Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTE4NzkwNA==","url":"https://github.com/coala/coala/pull/5505#discussion_r195187904","bodyText":"Due to pytest's assertion introspection we already get very good failure reports. This eliminates the need for custom messages in these assert statements.\nI'm not entirely sure, if that feature is enabled for unittest.TestCases. That's something you'll need to verify first.","diffHunk":"@@ -193,13 +171,12 @@ def check_invalidity(self,\n         :param create_tempfile:  Whether to save lines in tempfile if needed.\n         :param tempfile_kwargs:  Kwargs passed to tempfile.mkstemp().\n         \"\"\"\n+        assert isinstance(self, BaseTestHelper)\n         assert isinstance(self, unittest.TestCase)\n-        self.assertIsInstance(local_bear,\n-                              LocalBear,\n-                              msg='The given bear is not a local bear.')\n-        self.assertIsInstance(lines,\n-                              (list, tuple),\n-                              msg='The given lines are not a list.')\n+        assert isinstance(\n+            local_bear, LocalBear), 'The given bear is not a local bear.'\n+        assert isinstance(\n+            lines, (list, tuple)), 'The given lines are not a list.'","author":{"login":"NiklasMM","avatarUrl":"https://avatars1.githubusercontent.com/u/1924002?v=4","name":"Niklas"},"reactions":[],"createdAt":"2018-06-13T18:21:56Z","lastEditedAt":null,"updatedAt":"2018-06-13T18:21:56Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTE4ODAxNA==","url":"https://github.com/coala/coala/pull/5505#discussion_r195188014","bodyText":"assert len(bear_output) != 0","diffHunk":"@@ -210,7 +187,7 @@ def check_invalidity(self,\n                                   )\n         msg = (\"The local bear '{}' yields no result although it \"\n                'should.'.format(local_bear.__class__.__name__))\n-        self.assertNotEqual(len(bear_output), 0, msg=msg)\n+        assert not len(bear_output) == 0, msg","author":{"login":"NiklasMM","avatarUrl":"https://avatars1.githubusercontent.com/u/1924002?v=4","name":"Niklas"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNTA2MDU2OA==","createdAt":"2018-06-13T23:49:49Z","content":"THUMBS_UP","user":{"login":"jayvdb","name":"John Vandenberg"}}],"createdAt":"2018-06-13T18:22:17Z","lastEditedAt":null,"updatedAt":"2018-06-13T18:22:17Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTI2NzAzOQ==","url":"https://github.com/coala/coala/pull/5505#discussion_r195267039","bodyText":"just noting this was unused by bears repo, so no problem removing this.","diffHunk":"@@ -111,28 +111,6 @@ class LocalBearTestHelper(unittest.TestCase):\n     If you miss some methods, get in contact with us, we'll be happy to help!\n     \"\"\"\n \n-    def assertComparableObjectsEqual(self, observed_result, expected_result):","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-06-13T23:35:46Z","lastEditedAt":null,"updatedAt":"2018-06-13T23:35:46Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTI2NzUyMg==","url":"https://github.com/coala/coala/pull/5505#discussion_r195267522","bodyText":"please put message_base ... on a new line, so it is slightly easier to read.\nthis message change looks like it is harder to understand that the previous assertion message.","diffHunk":"@@ -78,19 +78,11 @@ def test_bad_assertComparableObjectsEqual(self):\n                                     file=fname)],\n                                    filename=fname,\n                                    create_tempfile=False)\n-        self.assertEqual('\\'LineCountTestBear\\' != \\'LineCountTestBea\\'\\n'\n-                         '- LineCountTestBear\\n'\n-                         '?                 -\\n'\n-                         '+ LineCountTestBea\\n'\n-                         ' : origin mismatch.\\n\\n'\n-                         '\\'This file has 3 lines.\\' != \\'This file has 2 '\n-                         'lines.\\'\\n'\n-                         '- This file has 3 lines.\\n'\n-                         '?               ^\\n'\n-                         '+ This file has 2 lines.\\n'\n-                         '?               ^\\n'\n-                         ' : message_base mismatch.\\n\\n',\n-                         str(cm.exception))\n+        self.assertEqual('origin mismatch: LineCountTestBear, This file has '\n+                         '3 lines. != LineCountTestBea, This file has 2 '\n+                         'lines.\\n\\nmessage_base mismatch: LineCountTestBear,'","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-06-13T23:39:32Z","lastEditedAt":null,"updatedAt":"2018-06-13T23:39:32Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTI2ODkwNw==","url":"https://github.com/coala/coala/pull/5505#discussion_r195268907","bodyText":"changing these to using assert ... is not part of \"Inherit from ...\" if this class also inherits from unittest.TestCase.\nSo you can investigate whether these are needed later.\nAlso rather than having custom asserts here, we can and should use arg annotations and our decororator which enforces those.  Also noted this in #5522 (comment)\nBut again, changes to these assertions is a functional change which doesnt need to be in the same commit as \"Inherit from ...\", and it does need a separate issue created where you show that the output can be improved.  As Niklas has said, pytest already gives very detailed information about any failures, and pytest does that even for unittest.TestCase subclasses, so any custom type error messages need to be better than pytest's output.","diffHunk":"@@ -193,13 +171,12 @@ def check_invalidity(self,\n         :param create_tempfile:  Whether to save lines in tempfile if needed.\n         :param tempfile_kwargs:  Kwargs passed to tempfile.mkstemp().\n         \"\"\"\n+        assert isinstance(self, BaseTestHelper)\n         assert isinstance(self, unittest.TestCase)\n-        self.assertIsInstance(local_bear,\n-                              LocalBear,\n-                              msg='The given bear is not a local bear.')\n-        self.assertIsInstance(lines,\n-                              (list, tuple),\n-                              msg='The given lines are not a list.')\n+        assert isinstance(\n+            local_bear, LocalBear), 'The given bear is not a local bear.'\n+        assert isinstance(\n+            lines, (list, tuple)), 'The given lines are not a list.'","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-06-13T23:49:40Z","lastEditedAt":null,"updatedAt":"2018-06-13T23:49:40Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTI2ODk5Nw==","url":"https://github.com/coala/coala/pull/5505#discussion_r195268997","bodyText":"as above.  the way to improve these is via annotations.","diffHunk":"@@ -242,16 +219,14 @@ def check_results(self,\n                                  from which settings will be created that will\n                                  be made available for the tested bear.\n         \"\"\"\n+        assert isinstance(self, BaseTestHelper)\n         assert isinstance(self, unittest.TestCase)\n-        self.assertIsInstance(local_bear,\n-                              LocalBear,\n-                              msg='The given bear is not a local bear.')\n-        self.assertIsInstance(lines,\n-                              (list, tuple),\n-                              msg='The given lines are not a list.')\n-        self.assertIsInstance(results,\n-                              list,\n-                              msg='The given results are not a list.')\n+        assert isinstance(","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-06-13T23:50:24Z","lastEditedAt":null,"updatedAt":"2018-06-13T23:50:24Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTI3OTc2NQ==","url":"https://github.com/coala/coala/pull/5505#discussion_r195279765","bodyText":"@NiklasMM, when I removed the custom message, unittest's self.assertIsInstance(..) gave\nE   AssertionError: '' is not an instance of (<class 'list'>, <class 'tuple'>)\nbut pytest's assert gave\nE       AssertionError","diffHunk":"@@ -193,13 +171,12 @@ def check_invalidity(self,\n         :param create_tempfile:  Whether to save lines in tempfile if needed.\n         :param tempfile_kwargs:  Kwargs passed to tempfile.mkstemp().\n         \"\"\"\n+        assert isinstance(self, BaseTestHelper)\n         assert isinstance(self, unittest.TestCase)\n-        self.assertIsInstance(local_bear,\n-                              LocalBear,\n-                              msg='The given bear is not a local bear.')\n-        self.assertIsInstance(lines,\n-                              (list, tuple),\n-                              msg='The given lines are not a list.')\n+        assert isinstance(\n+            local_bear, LocalBear), 'The given bear is not a local bear.'\n+        assert isinstance(\n+            lines, (list, tuple)), 'The given lines are not a list.'","author":{"login":"sangamcse","avatarUrl":"https://avatars2.githubusercontent.com/u/26381717?v=4","name":"Sangam Kumar"},"reactions":[],"createdAt":"2018-06-14T01:15:45Z","lastEditedAt":null,"updatedAt":"2018-06-14T01:15:45Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTI4MzE4MQ==","url":"https://github.com/coala/coala/pull/5505#discussion_r195283181","bodyText":"This assertion message change was done in the base class https://github.com/coala/coala/blob/master/coalib/testing/BaseTestHelper.py#L24","diffHunk":"@@ -78,19 +78,11 @@ def test_bad_assertComparableObjectsEqual(self):\n                                     file=fname)],\n                                    filename=fname,\n                                    create_tempfile=False)\n-        self.assertEqual('\\'LineCountTestBear\\' != \\'LineCountTestBea\\'\\n'\n-                         '- LineCountTestBear\\n'\n-                         '?                 -\\n'\n-                         '+ LineCountTestBea\\n'\n-                         ' : origin mismatch.\\n\\n'\n-                         '\\'This file has 3 lines.\\' != \\'This file has 2 '\n-                         'lines.\\'\\n'\n-                         '- This file has 3 lines.\\n'\n-                         '?               ^\\n'\n-                         '+ This file has 2 lines.\\n'\n-                         '?               ^\\n'\n-                         ' : message_base mismatch.\\n\\n',\n-                         str(cm.exception))\n+        self.assertEqual('origin mismatch: LineCountTestBear, This file has '\n+                         '3 lines. != LineCountTestBea, This file has 2 '\n+                         'lines.\\n\\nmessage_base mismatch: LineCountTestBear,'","author":{"login":"sangamcse","avatarUrl":"https://avatars2.githubusercontent.com/u/26381717?v=4","name":"Sangam Kumar"},"reactions":[],"createdAt":"2018-06-14T01:45:33Z","lastEditedAt":null,"updatedAt":"2018-06-14T01:45:33Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTg5NjA1MQ==","url":"https://github.com/coala/coala/pull/5505#discussion_r195896051","bodyText":"this is a bug somewhere, and a regression.\n\n\norigin mismatch & message_base mismatch both say the same thing. that is confusing.  something needs to be improved.\n\n\nthe pre-existing shows the line differences, and your change doesnt.  That is a regression, making it more difficult for bear writers to see the problem, not more easy which your project was supposed to do.","diffHunk":"@@ -78,19 +78,12 @@ def test_bad_assertComparableObjectsEqual(self):\n                                     file=fname)],\n                                    filename=fname,\n                                    create_tempfile=False)\n-        self.assertEqual('\\'LineCountTestBear\\' != \\'LineCountTestBea\\'\\n'\n-                         '- LineCountTestBear\\n'\n-                         '?                 -\\n'\n-                         '+ LineCountTestBea\\n'\n-                         ' : origin mismatch.\\n\\n'\n-                         '\\'This file has 3 lines.\\' != \\'This file has 2 '\n-                         'lines.\\'\\n'\n-                         '- This file has 3 lines.\\n'\n-                         '?               ^\\n'\n-                         '+ This file has 2 lines.\\n'\n-                         '?               ^\\n'\n-                         ' : message_base mismatch.\\n\\n',\n-                         str(cm.exception))\n+        self.assertEqual('origin mismatch: LineCountTestBear, This file '\n+                         'has 3 lines. != LineCountTestBea, This file '\n+                         'has 2 lines.\\n\\n'\n+                         'message_base mismatch: LineCountTestBear, This '","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-06-16T06:41:53Z","lastEditedAt":null,"updatedAt":"2018-06-16T06:41:53Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwMzM2MjI0OA==","url":"https://github.com/coala/coala/pull/5505#discussion_r203362248","bodyText":"Done in PR #5564","diffHunk":"@@ -78,19 +78,12 @@ def test_bad_assertComparableObjectsEqual(self):\n                                     file=fname)],\n                                    filename=fname,\n                                    create_tempfile=False)\n-        self.assertEqual('\\'LineCountTestBear\\' != \\'LineCountTestBea\\'\\n'\n-                         '- LineCountTestBear\\n'\n-                         '?                 -\\n'\n-                         '+ LineCountTestBea\\n'\n-                         ' : origin mismatch.\\n\\n'\n-                         '\\'This file has 3 lines.\\' != \\'This file has 2 '\n-                         'lines.\\'\\n'\n-                         '- This file has 3 lines.\\n'\n-                         '?               ^\\n'\n-                         '+ This file has 2 lines.\\n'\n-                         '?               ^\\n'\n-                         ' : message_base mismatch.\\n\\n',\n-                         str(cm.exception))\n+        self.assertEqual('origin mismatch: LineCountTestBear, This file '\n+                         'has 3 lines. != LineCountTestBea, This file '\n+                         'has 2 lines.\\n\\n'\n+                         'message_base mismatch: LineCountTestBear, This '","author":{"login":"sangamcse","avatarUrl":"https://avatars2.githubusercontent.com/u/26381717?v=4","name":"Sangam Kumar"},"reactions":[],"createdAt":"2018-07-18T12:41:10Z","lastEditedAt":null,"updatedAt":"2018-07-18T12:41:10Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIxMTA2MzQ4OQ==","url":"https://github.com/coala/coala/pull/5505#discussion_r211063489","bodyText":"Noting here that this PR is blocked by that PR -- we need useful error messages coming out of these helpers when used with test scenarios covering multiple Result objects.  And the implementation of the comparison logic should not be inside the test helpers , as it should be possible to do comparisons of Result objects any time, not just in tests.","diffHunk":"@@ -78,19 +78,12 @@ def test_bad_assertComparableObjectsEqual(self):\n                                     file=fname)],\n                                    filename=fname,\n                                    create_tempfile=False)\n-        self.assertEqual('\\'LineCountTestBear\\' != \\'LineCountTestBea\\'\\n'\n-                         '- LineCountTestBear\\n'\n-                         '?                 -\\n'\n-                         '+ LineCountTestBea\\n'\n-                         ' : origin mismatch.\\n\\n'\n-                         '\\'This file has 3 lines.\\' != \\'This file has 2 '\n-                         'lines.\\'\\n'\n-                         '- This file has 3 lines.\\n'\n-                         '?               ^\\n'\n-                         '+ This file has 2 lines.\\n'\n-                         '?               ^\\n'\n-                         ' : message_base mismatch.\\n\\n',\n-                         str(cm.exception))\n+        self.assertEqual('origin mismatch: LineCountTestBear, This file '\n+                         'has 3 lines. != LineCountTestBea, This file '\n+                         'has 2 lines.\\n\\n'\n+                         'message_base mismatch: LineCountTestBear, This '","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-18T03:19:56Z","lastEditedAt":null,"updatedAt":"2018-08-18T03:19:56Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM5NjQ1MjY2OA==","url":"https://github.com/coala/coala/pull/5505#issuecomment-396452668","bodyText":"Oops, I forgot to run coala.","diffHunk":null,"author":{"login":"sangamcse","avatarUrl":"https://avatars2.githubusercontent.com/u/26381717?v=4","name":"Sangam Kumar"},"reactions":[],"createdAt":"2018-06-12T03:16:10Z","lastEditedAt":null,"updatedAt":"2018-06-12T03:16:10Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1534524700000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5522","number":5522,"title":"[WIP] GlobalBearTestHelper.py: Add support","body":"Closes #4884","comments":3,"createdAt":"2018-06-13T15:40:49Z","updatedAt":"2018-08-17T16:51:40Z","closedAt":"2018-08-17T16:51:17Z","state":"closed","user":{"login":"sangamcse","avatarUrl":"https://avatars2.githubusercontent.com/u/26381717?v=4"},"owner":{"login":"sangamcse","avatarUrl":"https://avatars2.githubusercontent.com/u/26381717?v=4"},"assignee":{"login":"sangamcse","avatarUrl":"https://avatars2.githubusercontent.com/u/26381717?v=4"},"labels":[{"name":"area/tests","color":"bfd4f2"},{"name":"difficulty/medium","color":"0052cc"},{"name":"process/wip","color":"fbca04"},{"name":"size/S","color":"B1CF0A"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5522","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTE0MzMzMA==","url":"https://github.com/coala/coala/pull/5522#discussion_r195143330","bodyText":"not defined","diffHunk":"@@ -0,0 +1,66 @@\n+import os.path\n+\n+from contextlib import contextmanager\n+\n+from coalib.bears.GlobalBear import GlobalBear\n+from coalib.testing.BaseTestHelper import BaseTestHelper\n+\n+\n+@contextmanager\n+def execute_bear(bear, *args, **kwargs):\n+    try:\n+        bear_output_generator = bear.execute(*args, **kwargs)\n+        assert (bear_output_generator is not None\n+                ), 'Bear returned None on execution\\n'\n+        yield bear_output_generator\n+    except Exception as err:\n+        msg = []\n+        while not bear.message_queue.empty():\n+            msg.append(bear.message_queue.get().message)\n+        raise AssertionError(str(err) + ' \\n' + '\\n'.join(msg))\n+    return list(bear_output_generator)\n+\n+\n+def get_test_path(test_dir,\n+                  file):\n+    return os.path.join(os.path.dirname(__file__),\n+                        test_dir, file)\n+\n+\n+def get_results(global_bear,\n+                test_dir,\n+                file_dict,\n+                settings={}):\n+    for file in file_dict:\n+        with get_test_path(test_dir, file) as fname, \\\n+            execute_bear(global_bear, fname, **settings\n+                         ) as bear_output:\n+            return bear_output\n+\n+\n+class GlobalBearTestHelper(BaseTestHelper):\n+    \"\"\"\n+    \"\"\"\n+\n+    def check_results(self,\n+                      global_bear,\n+                      results,\n+                      filename=None,\n+                      settings={}):\n+\n+        assert isinstance(self, BaseTestHelper)\n+        assert isinstance(\n+            global_bear, GlobalBear), 'The given bear is not a global bear.'\n+        assert isinstance(\n+            results, list), 'The given results are not a list.'\n+\n+        bear_output = get_results(global_bear,\n+                                  filename=filename,\n+                                  settings=settings)\n+        if not check_order:","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-06-13T16:03:40Z","lastEditedAt":null,"updatedAt":"2018-06-13T16:03:40Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTE0MzYyNA==","url":"https://github.com/coala/coala/pull/5522#discussion_r195143624","bodyText":"use Python 3 annotations on the method arguments, and we have a decorator which will automatically do type checking of them.","diffHunk":"@@ -0,0 +1,66 @@\n+import os.path\n+\n+from contextlib import contextmanager\n+\n+from coalib.bears.GlobalBear import GlobalBear\n+from coalib.testing.BaseTestHelper import BaseTestHelper\n+\n+\n+@contextmanager\n+def execute_bear(bear, *args, **kwargs):\n+    try:\n+        bear_output_generator = bear.execute(*args, **kwargs)\n+        assert (bear_output_generator is not None\n+                ), 'Bear returned None on execution\\n'\n+        yield bear_output_generator\n+    except Exception as err:\n+        msg = []\n+        while not bear.message_queue.empty():\n+            msg.append(bear.message_queue.get().message)\n+        raise AssertionError(str(err) + ' \\n' + '\\n'.join(msg))\n+    return list(bear_output_generator)\n+\n+\n+def get_test_path(test_dir,\n+                  file):\n+    return os.path.join(os.path.dirname(__file__),\n+                        test_dir, file)\n+\n+\n+def get_results(global_bear,\n+                test_dir,\n+                file_dict,\n+                settings={}):\n+    for file in file_dict:\n+        with get_test_path(test_dir, file) as fname, \\\n+            execute_bear(global_bear, fname, **settings\n+                         ) as bear_output:\n+            return bear_output\n+\n+\n+class GlobalBearTestHelper(BaseTestHelper):\n+    \"\"\"\n+    \"\"\"\n+\n+    def check_results(self,\n+                      global_bear,\n+                      results,\n+                      filename=None,\n+                      settings={}):\n+\n+        assert isinstance(self, BaseTestHelper)\n+        assert isinstance(","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-06-13T16:04:39Z","lastEditedAt":null,"updatedAt":"2018-06-13T16:04:39Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTUyMzE1Mw==","url":"https://github.com/coala/coala/pull/5522#discussion_r195523153","bodyText":"@NiklasMM, I am facing issue with this method. My requirement is the file path of that directory from where this method is called but obviously this written method returns coalib/testing* directory.","diffHunk":"@@ -0,0 +1,58 @@\n+import os.path\n+\n+from queue import Queue\n+\n+from coalib.bears.GlobalBear import GlobalBear\n+from coalib.settings.Section import Section\n+from coalib.testing.BaseTestHelper import BaseTestHelper\n+\n+\n+def _get_test_path(test_dir,\n+                   file):\n+    return os.path.join(os.path.dirname(__file__),","author":{"login":"sangamcse","avatarUrl":"https://avatars2.githubusercontent.com/u/26381717?v=4","name":"Sangam Kumar"},"createdAt":"2018-06-14T18:17:44Z","lastEditedAt":null,"updatedAt":"2018-06-14T18:17:44Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM5Njk5NDQxMQ==","url":"https://github.com/coala/coala/pull/5522#issuecomment-396994411","bodyText":"Regarding commit message, please create an issue here describing the enhancement, referring to the cEP, etc.\nDo not refer to GSoC in your commit message.  That is irrelevant to the content of the change.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-06-13T16:05:59Z","lastEditedAt":null,"updatedAt":"2018-06-13T16:05:59Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM5Njk5OTkyNA==","url":"https://github.com/coala/coala/pull/5522#issuecomment-396999924","bodyText":"Still in the process @jayvdb. I will try to cover all the methods and tests and update it asap. Thank you 😄","diffHunk":null,"author":{"login":"sangamcse","avatarUrl":"https://avatars2.githubusercontent.com/u/26381717?v=4","name":"Sangam Kumar"},"createdAt":"2018-06-13T16:22:51Z","lastEditedAt":null,"updatedAt":"2018-06-13T16:22:51Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMzkyNTI2Ng==","url":"https://github.com/coala/coala/pull/5522#issuecomment-413925266","bodyText":"No longer working on this.","diffHunk":null,"author":{"login":"sangamcse","avatarUrl":"https://avatars2.githubusercontent.com/u/26381717?v=4","name":"Sangam Kumar"},"createdAt":"2018-08-17T16:51:17Z","lastEditedAt":null,"updatedAt":"2018-08-17T16:51:17Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1534237874000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5523","number":5523,"title":"Add decorator add_value_checks","body":"The decorator may work on any function but made for the\nspecific use of the bears' run() methods or the\ncreate_arguments() methods. This decorator compares the value\ngiven to the bear setting against a list of acceptable values\nprovided by the bear writer. The decorator accepts a list of\ntuples with each tuple containing two values, the bear setting\nname as a string and a list of acceptable values.","comments":3,"createdAt":"2018-06-13T23:34:10Z","updatedAt":"2018-08-14T09:11:14Z","closedAt":"2018-08-14T09:11:14Z","state":"closed","user":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4"},"owner":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4"},"labels":[{"name":"size/S","color":"B1CF0A"},{"name":"status/blocked","color":"e11d21"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5523","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTI2OTUwMg==","url":"https://github.com/coala/coala/pull/5523#discussion_r195269502","bodyText":"this information should not be stored in the bear like this.\nit needs to be per setting, and using type annotations.  This was already discussed in the cEP.\nthat allows re-use of the type annotation.","diffHunk":"@@ -188,6 +188,8 @@ class Bear(Printer, LogPrinterMixin, metaclass=bearclass):\n     SEE_MORE = ''\n     BEAR_DEPS = set()\n     USE_RAW_FILES = False\n+    ACCEPTABLE_VALUES_FOR_SETTINGS = []","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-06-13T23:53:46Z","lastEditedAt":null,"updatedAt":"2018-06-13T23:53:46Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTI2OTc5OQ==","url":"https://github.com/coala/coala/pull/5523#discussion_r195269799","bodyText":"can't find an elegant way to use type annotations for value checks coala/coala-bears#2532","diffHunk":"@@ -188,6 +188,8 @@ class Bear(Printer, LogPrinterMixin, metaclass=bearclass):\n     SEE_MORE = ''\n     BEAR_DEPS = set()\n     USE_RAW_FILES = False\n+    ACCEPTABLE_VALUES_FOR_SETTINGS = []","author":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4","name":"Ishan Srivastava"},"createdAt":"2018-06-13T23:55:58Z","lastEditedAt":null,"updatedAt":"2018-06-13T23:55:58Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTI2OTk3NQ==","url":"https://github.com/coala/coala/pull/5523#discussion_r195269975","bodyText":"if what you mean by this:\n\nit needs to be per setting,\n\nis\n\nAlternate approach could have been the bear writer populating a field else where and calling the decorator with those fields that quickstart can utilise directly but it just felt inelegant and contradicting the process of making bear development easier and easier by making changes at two different places to achieve a single task\n\nThen I can make the necessary changes","diffHunk":"@@ -188,6 +188,8 @@ class Bear(Printer, LogPrinterMixin, metaclass=bearclass):\n     SEE_MORE = ''\n     BEAR_DEPS = set()\n     USE_RAW_FILES = False\n+    ACCEPTABLE_VALUES_FOR_SETTINGS = []","author":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4","name":"Ishan Srivastava"},"createdAt":"2018-06-13T23:57:13Z","lastEditedAt":null,"updatedAt":"2018-06-13T23:57:13Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTI3MDU4OQ==","url":"https://github.com/coala/coala/pull/5523#discussion_r195270589","bodyText":"this information should not be stored in the bear like this.\n\nwhere exactly do you want it to be stored?","diffHunk":"@@ -188,6 +188,8 @@ class Bear(Printer, LogPrinterMixin, metaclass=bearclass):\n     SEE_MORE = ''\n     BEAR_DEPS = set()\n     USE_RAW_FILES = False\n+    ACCEPTABLE_VALUES_FOR_SETTINGS = []","author":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4","name":"Ishan Srivastava"},"createdAt":"2018-06-14T00:01:54Z","lastEditedAt":"2018-06-14T00:02:28Z","updatedAt":"2018-06-14T00:02:28Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTI3MjU1OQ==","url":"https://github.com/coala/coala/pull/5523#discussion_r195272559","bodyText":"where exactly do you want it to be stored?\n\ninside the annotation!\nAn annotation can be a class, with any amount of logic and data inside it.","diffHunk":"@@ -188,6 +188,8 @@ class Bear(Printer, LogPrinterMixin, metaclass=bearclass):\n     SEE_MORE = ''\n     BEAR_DEPS = set()\n     USE_RAW_FILES = False\n+    ACCEPTABLE_VALUES_FOR_SETTINGS = []","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-06-14T00:16:02Z","lastEditedAt":null,"updatedAt":"2018-06-14T00:16:02Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTI3MjY4Ng==","url":"https://github.com/coala/coala/pull/5523#discussion_r195272686","bodyText":"but we can't use that unless coala is used with the mypy package loaded","diffHunk":"@@ -188,6 +188,8 @@ class Bear(Printer, LogPrinterMixin, metaclass=bearclass):\n     SEE_MORE = ''\n     BEAR_DEPS = set()\n     USE_RAW_FILES = False\n+    ACCEPTABLE_VALUES_FOR_SETTINGS = []","author":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4","name":"Ishan Srivastava"},"createdAt":"2018-06-14T00:17:06Z","lastEditedAt":null,"updatedAt":"2018-06-14T00:17:06Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTI3MjcxOA==","url":"https://github.com/coala/coala/pull/5523#discussion_r195272718","bodyText":"#5523 (comment)","diffHunk":"@@ -188,6 +188,8 @@ class Bear(Printer, LogPrinterMixin, metaclass=bearclass):\n     SEE_MORE = ''\n     BEAR_DEPS = set()\n     USE_RAW_FILES = False\n+    ACCEPTABLE_VALUES_FOR_SETTINGS = []","author":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4","name":"Ishan Srivastava"},"createdAt":"2018-06-14T00:17:23Z","lastEditedAt":null,"updatedAt":"2018-06-14T00:17:23Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTY0MDYxOQ==","url":"https://github.com/coala/coala/pull/5523#discussion_r195640619","bodyText":"have you seen my comment at coala/coala-bears#2532 ?","diffHunk":"@@ -188,6 +188,8 @@ class Bear(Printer, LogPrinterMixin, metaclass=bearclass):\n     SEE_MORE = ''\n     BEAR_DEPS = set()\n     USE_RAW_FILES = False\n+    ACCEPTABLE_VALUES_FOR_SETTINGS = []","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-06-15T06:11:48Z","lastEditedAt":null,"updatedAt":"2018-06-15T06:11:48Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTY4ODc1NQ==","url":"https://github.com/coala/coala/pull/5523#discussion_r195688755","bodyText":"yes","diffHunk":"@@ -188,6 +188,8 @@ class Bear(Printer, LogPrinterMixin, metaclass=bearclass):\n     SEE_MORE = ''\n     BEAR_DEPS = set()\n     USE_RAW_FILES = False\n+    ACCEPTABLE_VALUES_FOR_SETTINGS = []","author":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4","name":"Ishan Srivastava"},"createdAt":"2018-06-15T10:07:18Z","lastEditedAt":null,"updatedAt":"2018-06-15T10:07:18Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM5NzEyMzc3Mw==","url":"https://github.com/coala/coala/pull/5523#issuecomment-397123773","bodyText":"A little bit of explanation: the Green Mode Project requires to differentiate between settings which can attain a specific set of values. A type of these setting which can have some discrete set of values is tackled in the PR.\nMost of the additions are self explanatory except for the variable CALL_FROM_QUICKSTART. The Green Mode project requires the valid values of these settings so that it can run coala over and over again by giving the bears all these values. Since we are also adding value checks in this PR, the field ACCEPTABLE_VALUES_FOR_SETTINGS won't get populated until the call to run method is made which contradicts the fact that we still don't have the acceptable values. The introduced variable uses the fact that even an incomplete call to the decorator populates the variable and thus saves execution time and running into errors.\nAlternate approach could have been the bear writer populating a field else where and calling the decorator with those fields that quickstart can utilise directly but it just felt inelegant and contradicting the process of making bear development easier and easier by making changes at two different places to achieve a single task.","diffHunk":null,"author":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4","name":"Ishan Srivastava"},"createdAt":"2018-06-13T23:53:55Z","lastEditedAt":null,"updatedAt":"2018-06-13T23:53:55Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM5Nzk1MjAyMw==","url":"https://github.com/coala/coala/pull/5523#issuecomment-397952023","bodyText":"An interesting solution, but argument type annotations are the way that the Settings module works.  Not working with the Settings module will result in lots of other parts of coala being unable to understand these, and needing to be rewritten to use this functionality, when the capacity to do it already exists in the Settings module.\nExample shown at coala/coala-bears#2532 .  If it doesnt work with only minor implementation issues, I will implement it myself as a demo.\nIf I cant get it to work, we may revisit this decorator approach.\nNote also that this decorator would not be usable in coala-bears repo until we do a release of coala, and that is a huge risk to take for any project, especially given that I uncovered that there are ~20 bears tests broken when using coala master (and @sangamcse has reproduced it, and was going to investigate further; https://gitter.im/coala/coala?at=5b274d604755974910317329), so that is another task someone needs to do before we can do a pre-release and use anything in coalib from coala-bears.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-06-18T06:14:54Z","lastEditedAt":null,"updatedAt":"2018-06-18T06:14:54Z"},{"id":"MDEyOklzc3VlQ29tbWVudDQxMjgwNjk5Nw==","url":"https://github.com/coala/coala/pull/5523#issuecomment-412806997","bodyText":"It was demostrated Settings do work, even if a bit ugly without a bit of extra glue in StringConverter.\nhttps://gitlab.com/coala/coala-utils/issues/73 is highly desirable and https://gitlab.com/coala/coala-utils/issues/77 also avoids many problems with the current __path__ approach.","diffHunk":null,"author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"createdAt":"2018-08-14T09:11:14Z","lastEditedAt":null,"updatedAt":"2018-08-14T09:11:14Z"}]}}},{"repoOwner":"coala","repoName":"coala","updatedAtMs":1534238069000,"issue":{"htmlUrl":"https://github.com/coala/coala/pull/5538","number":5538,"title":"__init__.py: Add module docstring which confirm to PEP 257","body":"Closes #5536 (comment)\n\nMulti-line docstrings consist of a summary line just like a one-line docstring, followed by a blank line, followed by a more elaborate description. The summary line may be used by automatic indexing tools; it is important that it fits on one line and is separated from the rest of the docstring by a blank line. The summary line may be on the same line as the opening quotes or on the next line. The entire docstring is indented the same as the quotes at its first line (see example below).\nThe docstring for a module should generally list the classes, exceptions and functions (and any other objects) that are exported by the module, with a one-line summary of each. (These summaries generally give less detail than the summary line in the object's docstring.)","comments":3,"createdAt":"2018-06-17T07:40:12Z","updatedAt":"2018-08-14T09:14:29Z","closedAt":null,"state":"open","user":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4"},"owner":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4"},"assignee":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4"},"labels":[{"name":"area/aspects","color":"000000"},{"name":"area/documentation","color":"bfe5bf"},{"name":"process/wip","color":"fbca04"},{"name":"size/XS","color":"00DE0F"}],"pullRequest":{"htmlUrl":"https://github.com/coala/coala/pull/5538","comments":[{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTkyNDk2Nw==","url":"https://github.com/coala/coala/pull/5538#discussion_r195924967","bodyText":"It must be prose. High level summary. See pep 257. It is hard .. ;)","diffHunk":"@@ -0,0 +1,8 @@\n+\"\"\"\n+Has Setting, Section class; indexing tools; input checks; loads bears, files.","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[{"id":"MDg6UmVhY3Rpb24yNTE5NTUzOQ==","createdAt":"2018-06-17T10:39:55Z","content":"CONFUSED","user":{"login":"ishanSrt","name":"Ishan Srivastava"}}],"createdAt":"2018-06-17T10:36:16Z","lastEditedAt":null,"updatedAt":"2018-06-17T10:36:16Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTkyNDk4OQ==","url":"https://github.com/coala/coala/pull/5538#discussion_r195924989","bodyText":"No listing members. That is redundant to the TOC autogenerated from members, and it gets out of date quickly","diffHunk":"@@ -0,0 +1,8 @@\n+\"\"\"\n+Has Setting, Section class; indexing tools; input checks; loads bears, files.\n+\n+- **class Setting:** Aggregates the settings passed to coala.","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-06-17T10:37:43Z","lastEditedAt":null,"updatedAt":"2018-06-17T10:37:43Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTkyNTAzNw==","url":"https://github.com/coala/coala/pull/5538#discussion_r195925037","bodyText":"So remove the listing?","diffHunk":"@@ -0,0 +1,8 @@\n+\"\"\"\n+Has Setting, Section class; indexing tools; input checks; loads bears, files.\n+\n+- **class Setting:** Aggregates the settings passed to coala.","author":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4","name":"Ishan Srivastava"},"reactions":[],"createdAt":"2018-06-17T10:39:32Z","lastEditedAt":null,"updatedAt":"2018-06-17T10:39:32Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTkyNTA3NQ==","url":"https://github.com/coala/coala/pull/5538#discussion_r195925075","bodyText":"if it is prose then it is not detailed","diffHunk":"@@ -0,0 +1,8 @@\n+\"\"\"\n+Has Setting, Section class; indexing tools; input checks; loads bears, files.","author":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4","name":"Ishan Srivastava"},"reactions":[],"createdAt":"2018-06-17T10:40:42Z","lastEditedAt":null,"updatedAt":"2018-06-17T10:40:42Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTk3NjI5Mg==","url":"https://github.com/coala/coala/pull/5538#discussion_r195976292","bodyText":"The first line should not be detailed.  It is a summary.\nAfter the blank line, you add as many lines of prose as you want, where it can be quite detailed.","diffHunk":"@@ -0,0 +1,8 @@\n+\"\"\"\n+Has Setting, Section class; indexing tools; input checks; loads bears, files.","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-06-18T06:46:24Z","lastEditedAt":null,"updatedAt":"2018-06-18T06:46:24Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NTk3NjMxNg==","url":"https://github.com/coala/coala/pull/5538#discussion_r195976316","bodyText":"yes, replace with prose","diffHunk":"@@ -0,0 +1,8 @@\n+\"\"\"\n+Has Setting, Section class; indexing tools; input checks; loads bears, files.\n+\n+- **class Setting:** Aggregates the settings passed to coala.","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-06-18T06:46:35Z","lastEditedAt":null,"updatedAt":"2018-06-18T06:46:35Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDE5NjAyMjI2NA==","url":"https://github.com/coala/coala/pull/5538#discussion_r196022264","bodyText":"ok I get you","diffHunk":"@@ -0,0 +1,8 @@\n+\"\"\"\n+Has Setting, Section class; indexing tools; input checks; loads bears, files.","author":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4","name":"Ishan Srivastava"},"reactions":[],"createdAt":"2018-06-18T09:52:58Z","lastEditedAt":null,"updatedAt":"2018-06-18T09:52:58Z"},{"id":"MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDIwOTg4MTE0MA==","url":"https://github.com/coala/coala/pull/5538#discussion_r209881140","bodyText":"this is not correct.  This has all the stuff needed to make bear arg annotation work","diffHunk":"@@ -0,0 +1,8 @@\n+\"\"\"\n+Has Setting, Section class; indexing tools; input checks; loads bears, files.\n+\n+- **class Setting:** Aggregates the settings passed to coala.\n+- **class Section:** Parses the Settings given in each section in config file.\n+- **class FunctionMetadata:** Provides indexing tools from python docstrings.","author":{"login":"jayvdb","avatarUrl":"https://avatars1.githubusercontent.com/u/15092?v=4","name":"John Vandenberg"},"reactions":[],"createdAt":"2018-08-14T09:14:23Z","lastEditedAt":null,"updatedAt":"2018-08-14T09:14:23Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM5Nzg2ODk4NQ==","url":"https://github.com/coala/coala/pull/5538#issuecomment-397868985","bodyText":"ping @jayvdb I have tried to follow the PEP 257, but one line description means fuzzy explanations, also following the line lengths.","diffHunk":null,"author":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4","name":"Ishan Srivastava"},"reactions":[],"createdAt":"2018-06-17T10:19:15Z","lastEditedAt":"2018-06-17T10:24:50Z","updatedAt":"2018-06-17T10:24:50Z"},{"id":"MDEyOklzc3VlQ29tbWVudDM5Nzg2OTAzMw==","url":"https://github.com/coala/coala/pull/5538#issuecomment-397869033","bodyText":"not added the functions as their docstrings have short and precise explanation there itself","diffHunk":null,"author":{"login":"ishanSrt","avatarUrl":"https://avatars2.githubusercontent.com/u/29859362?v=4","name":"Ishan Srivastava"},"reactions":[],"createdAt":"2018-06-17T10:20:15Z","lastEditedAt":null,"updatedAt":"2018-06-17T10:20:15Z"}]}}}],"repoLabels":[{"repoOwner":"coala","repoName":"coala","labels":[{"id":"MDU6TGFiZWw5OTc3NjYwNw==","name":"type/bug","color":"e11d21","default":false},{"id":"MDU6TGFiZWwxMDc2MTQyMjc=","name":"type/feature","color":"0052cc","default":false},{"id":"MDU6TGFiZWwxMDc2MTQzMjY=","name":"importance/high","color":"eb6420","default":false},{"id":"MDU6TGFiZWwxMDc2MjE5NzM=","name":"difficulty/newcomer","color":"65C8FF","default":false},{"id":"MDU6TGFiZWwxMDc2MjIwNTE=","name":"status/needs design","color":"5319e7","default":false},{"id":"MDU6TGFiZWwxMjA4ODgxMTA=","name":"type/codestyle","color":"d4c5f9","default":false},{"id":"MDU6TGFiZWwxNDEwMzY3NzQ=","name":"process/pending review","color":"bfe5bf","default":false},{"id":"MDU6TGFiZWwxNzQ3NTIwMjc=","name":"area/bears","color":"eb6420","default":false},{"id":"MDU6TGFiZWwxNzcxMzAwMzY=","name":"status/blocked","color":"e11d21","default":false},{"id":"MDU6TGFiZWwxNzgwNDczODQ=","name":"status/wontfix/accepting patches","color":"aaaaaa","default":false},{"id":"MDU6TGFiZWwxODQ4MTI3OTQ=","name":"status/needs info","color":"006b75","default":false},{"id":"MDU6TGFiZWwyMTQzMzMyMzQ=","name":"area/CI","color":"eb6420","default":false},{"id":"MDU6TGFiZWwyMTc1NTM4ODQ=","name":"bounty","color":"129e5e","default":false},{"id":"MDU6TGFiZWwyMTg0NzU4MDI=","name":"process/approved","color":"009800","default":false},{"id":"MDU6TGFiZWwyMzcxMzE2MjY=","name":"process/wip","color":"fbca04","default":false},{"id":"MDU6TGFiZWwyOTM4NjEwNTQ=","name":"size/XXL","color":"AA0000","default":false},{"id":"MDU6TGFiZWwyOTM4NjEwNTU=","name":"size/XL","color":"FF0000","default":false},{"id":"MDU6TGFiZWwyOTM4NjEwNTY=","name":"size/L","color":"FF8888","default":false},{"id":"MDU6TGFiZWwyOTM4NjEwNTc=","name":"size/M","color":"eb6420","default":false},{"id":"MDU6TGFiZWwyOTM4NjEwNjU=","name":"size/S","color":"B1CF0A","default":false},{"id":"MDU6TGFiZWwyOTM4NjEwNjY=","name":"size/XS","color":"00DE0F","default":false},{"id":"MDU6TGFiZWwzMDg4NTIxOTA=","name":"difficulty/low","color":"207de5","default":false},{"id":"MDU6TGFiZWwzMDg4NTIyOTc=","name":"difficulty/medium","color":"0052cc","default":false},{"id":"MDU6TGFiZWwzMDg4NTIzMjY=","name":"difficulty/high","color":"B319e7","default":false},{"id":"MDU6TGFiZWwzMDg4NTc5NTk=","name":"status/wontfix/not happening","color":"000000","default":false},{"id":"MDU6TGFiZWwzMDg4NTgxMDc=","name":"importance/medium","color":"fbca04","default":false},{"id":"MDU6TGFiZWwzMDg4NTgxOTk=","name":"importance/low","color":"70E870","default":false},{"id":"MDU6TGFiZWwzMDg4NTg4NjA=","name":"area/CLI","color":"006b75","default":false},{"id":"MDU6TGFiZWwzMDg4NTkwMzI=","name":"area/results","color":"eb6420","default":false},{"id":"MDU6TGFiZWwzMDg4NTkwNTQ=","name":"area/actions","color":"207de5","default":false},{"id":"MDU6TGFiZWwzMDg4NTkxMDQ=","name":"area/core","color":"eb6420","default":false},{"id":"MDU6TGFiZWwzMDg4NTk2NjM=","name":"status/duplicate","color":"000000","default":false},{"id":"MDU6TGFiZWwzMDg4NjA4MjA=","name":"importance/critical","color":"e11d21","default":false},{"id":"MDU6TGFiZWwzMDg4NjA4NTY=","name":"area/documentation","color":"bfe5bf","default":false},{"id":"MDU6TGFiZWwzMDg4NjI5MzE=","name":"difficulty/very-high","color":"e11d21","default":false},{"id":"MDU6TGFiZWwzMDkwMDgxMzE=","name":"status/invalid","color":"000000","default":false},{"id":"MDU6TGFiZWwzMDkwNDQ3MjY=","name":"area/tests","color":"bfd4f2","default":false},{"id":"MDU6TGFiZWwzMTUyODUzODU=","name":"area/usability","color":"d4c5f9","default":false},{"id":"MDU6TGFiZWwzMjgxNjg0NDU=","name":"cool and awesome","color":"0052cc","default":false},{"id":"MDU6TGFiZWwzMzYyNzE0Mzc=","name":"status/abandoned","color":"e11d21","default":false},{"id":"MDU6TGFiZWwzNDM1Nzc4NTE=","name":"area/upstream","color":"5319e7","default":false},{"id":"MDU6TGFiZWwzNTg5OTc4ODM=","name":"review carefully!","color":"d93f0b","default":false},{"id":"MDU6TGFiZWwzNzU2NzE5MTk=","name":"status/cant reproduce","color":"006b75","default":false},{"id":"MDU6TGFiZWwzOTQyMDY1NzI=","name":"type/performance","color":"fef2c0","default":false},{"id":"MDU6TGFiZWw0NTI0NDE2MTA=","name":"hacktoberfest","color":"e99695","default":false},{"id":"MDU6TGFiZWw0NzgzOTcwOTY=","name":"area/logging","color":"0052cc","default":false},{"id":"MDU6TGFiZWw0ODAxMjU5NzQ=","name":"platform/windows","color":"0052cc","default":false},{"id":"MDU6TGFiZWw0ODAxMjYwMjQ=","name":"platform/mac","color":"fbca04","default":false},{"id":"MDU6TGFiZWw0ODAxMjYwNjA=","name":"platform/linux","color":"c2e0c6","default":false},{"id":"MDU6TGFiZWw0ODM1MDQzMjk=","name":"initiatives/gci","color":"e99695","default":false},{"id":"MDU6TGFiZWw0ODU0NDkxMzE=","name":"area/languages","color":"d4c5f9","default":false},{"id":"MDU6TGFiZWw0ODk2NTc4MjU=","name":"needs backport","color":"b60205","default":false},{"id":"MDU6TGFiZWw1NTkwMDA2NTM=","name":"area/install","color":"bfdadc","default":false},{"id":"MDU6TGFiZWw1NjYwNTYwOTA=","name":"area/aspects","color":"000000","default":false},{"id":"MDU6TGFiZWw1ODEzOTA5Mzg=","name":"type/breaking-change","color":"b60205","default":false},{"id":"MDU6TGFiZWw1ODk0NDQ2ODg=","name":"status/opaque-fix","color":"006b75","default":false},{"id":"MDU6TGFiZWw1OTM2MDE0Mzg=","name":"regression","color":"b60205","default":false},{"id":"MDU6TGFiZWw2MDQ1OTI1NjI=","name":"importance/trivial","color":"d4c5f9","default":false},{"id":"MDU6TGFiZWw2NTIwNDIyNzU=","name":"area/lintbears","color":"ededed","default":false},{"id":"MDU6TGFiZWw2NTIzOTkyNzQ=","name":"area/config","color":"fbca04","default":false},{"id":"MDU6TGFiZWw2NTI2NzAzMzE=","name":"status/needs discussion","color":"d93f0b","default":false},{"id":"MDU6TGFiZWw2NjY4MjQ4MTg=","name":"status/stale","color":"fbca04","default":false},{"id":"MDU6TGFiZWw4NDA5ODQ4MTA=","name":"area/genericbears","color":"ededed","default":false},{"id":"MDU6TGFiZWw5NTk4NTM4NjE=","name":"status/ci-approved","color":"ededed","default":false},{"id":"MDU6TGFiZWw5NjYwNDY2NzY=","name":"process/needs rebase","color":"e52db1","default":false}]}],"repositories":[{"repoOwner":"coala","repoName":"coala","isPrivate":false,"lastSeenAt":"2018-09-07T02:25:58Z"}]}